J$.noInstrEval = false;
jalangiLabel5:
    while (true) {
        try {
            J$.Se(1499345, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestCoinBasePro/node_modules/sshpk/lib/formats/ssh-private.js');
            function read(buf, options) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(1494209, arguments.callee, this, arguments);
                            arguments = J$.N(1494217, 'arguments', arguments, true, false, false);
                            buf = J$.N(1494225, 'buf', buf, true, false, false);
                            options = J$.N(1494233, 'options', options, true, false, false);
                            return J$.Rt(1494201, J$.M(1494193, J$.R(1494169, 'pem', pem, false, true), 'read', false)(J$.R(1494177, 'buf', buf, false, false), J$.R(1494185, 'options', options, false, false)));
                        } catch (J$e) {
                            J$.Ex(1499513, J$e);
                        } finally {
                            if (J$.Fr(1499521))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function readSSHPrivate(type, buf, options) {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(1496209, arguments.callee, this, arguments);
                            arguments = J$.N(1496217, 'arguments', arguments, true, false, false);
                            type = J$.N(1496225, 'type', type, true, false, false);
                            buf = J$.N(1496233, 'buf', buf, true, false, false);
                            options = J$.N(1496241, 'options', options, true, false, false);
                            J$.N(1496249, 'magic', magic, false, false, false);
                            J$.N(1496257, 'cipher', cipher, false, false, false);
                            J$.N(1496265, 'kdf', kdf, false, false, false);
                            J$.N(1496273, 'kdfOpts', kdfOpts, false, false, false);
                            J$.N(1496281, 'nkeys', nkeys, false, false, false);
                            J$.N(1496289, 'pubKey', pubKey, false, false, false);
                            J$.N(1496297, 'privKeyBlob', privKeyBlob, false, false, false);
                            J$.N(1496305, 'kdfOptsBuf', kdfOptsBuf, false, false, false);
                            J$.N(1496313, 'salt', salt, false, false, false);
                            J$.N(1496321, 'rounds', rounds, false, false, false);
                            J$.N(1496329, 'cinf', cinf, false, false, false);
                            J$.N(1496337, 'pass', pass, false, false, false);
                            J$.N(1496345, 'salti', salti, false, false, false);
                            J$.N(1496353, 'out', out, false, false, false);
                            J$.N(1496361, 'res', res, false, false, false);
                            J$.N(1496369, 'ckey', ckey, false, false, false);
                            J$.N(1496377, 'iv', iv, false, false, false);
                            J$.N(1496385, 'cipherStream', cipherStream, false, false, false);
                            J$.N(1496393, 'chunk', chunk, false, false, false);
                            J$.N(1496401, 'chunks', chunks, false, false, false);
                            J$.N(1496409, 'checkInt1', checkInt1, false, false, false);
                            J$.N(1496417, 'checkInt2', checkInt2, false, false, false);
                            J$.N(1496425, 'ret', ret, false, false, false);
                            J$.N(1496433, 'key', key, false, false, false);
                            J$.N(1496441, 'comment', comment, false, false, false);
                            buf = J$.W(1494289, 'buf', J$.F(1494281, J$.R(1494257, 'SSHBuffer', SSHBuffer, false, true), true)(J$.T(1494273, { buffer: J$.R(1494265, 'buf', buf, false, false) }, 11, false)), buf, false, false);
                            var magic = J$.W(1494313, 'magic', J$.M(1494305, J$.R(1494297, 'buf', buf, false, false), 'readCString', false)(), magic, false, false);
                            J$.M(1494353, J$.R(1494321, 'assert', assert, false, true), 'strictEqual', false)(J$.R(1494329, 'magic', magic, false, false), J$.R(1494337, 'MAGIC', MAGIC, false, true), J$.T(1494345, 'bad magic string', 21, false));
                            var cipher = J$.W(1494377, 'cipher', J$.M(1494369, J$.R(1494361, 'buf', buf, false, false), 'readString', false)(), cipher, false, false);
                            var kdf = J$.W(1494401, 'kdf', J$.M(1494393, J$.R(1494385, 'buf', buf, false, false), 'readString', false)(), kdf, false, false);
                            var kdfOpts = J$.W(1494425, 'kdfOpts', J$.M(1494417, J$.R(1494409, 'buf', buf, false, false), 'readBuffer', false)(), kdfOpts, false, false);
                            var nkeys = J$.W(1494449, 'nkeys', J$.M(1494441, J$.R(1494433, 'buf', buf, false, false), 'readInt', false)(), nkeys, false, false);
                            if (J$.C(77032, J$.B(183674, '!==', J$.R(1494457, 'nkeys', nkeys, false, false), J$.T(1494465, 1, 22, false)))) {
                                throw J$.F(1494497, J$.I(typeof Error === 'undefined' ? Error = J$.R(1494473, 'Error', undefined, true, true) : Error = J$.R(1494473, 'Error', Error, true, true)), true)(J$.B(183682, '+', J$.T(1494481, 'OpenSSH-format key file contains ', 21, false), J$.T(1494489, 'multiple keys: this is unsupported.', 21, false)));
                            }
                            var pubKey = J$.W(1494521, 'pubKey', J$.M(1494513, J$.R(1494505, 'buf', buf, false, false), 'readBuffer', false)(), pubKey, false, false);
                            if (J$.C(77040, J$.B(183690, '===', J$.R(1494529, 'type', type, false, false), J$.T(1494537, 'public', 21, false)))) {
                                J$.M(1494577, J$.R(1494545, 'assert', assert, false, true), 'ok', false)(J$.M(1494561, J$.R(1494553, 'buf', buf, false, false), 'atEnd', false)(), J$.T(1494569, 'excess bytes left after key', 21, false));
                                return J$.Rt(1494609, J$.M(1494601, J$.R(1494585, 'rfc4253', rfc4253, false, true), 'read', false)(J$.R(1494593, 'pubKey', pubKey, false, false)));
                            }
                            var privKeyBlob = J$.W(1494633, 'privKeyBlob', J$.M(1494625, J$.R(1494617, 'buf', buf, false, false), 'readBuffer', false)(), privKeyBlob, false, false);
                            J$.M(1494673, J$.R(1494641, 'assert', assert, false, true), 'ok', false)(J$.M(1494657, J$.R(1494649, 'buf', buf, false, false), 'atEnd', false)(), J$.T(1494665, 'excess bytes left after key', 21, false));
                            var kdfOptsBuf = J$.W(1494713, 'kdfOptsBuf', J$.F(1494705, J$.R(1494681, 'SSHBuffer', SSHBuffer, false, true), true)(J$.T(1494697, { buffer: J$.R(1494689, 'kdfOpts', kdfOpts, false, false) }, 11, false)), kdfOptsBuf, false, false);
                            switch (J$.C1(77104, J$.R(1494721, 'kdf', kdf, false, false))) {
                            case J$.C2(77112, J$.T(1494777, 'none', 21, false)):
                                if (J$.C(77048, J$.B(183698, '!==', J$.R(1494729, 'cipher', cipher, false, false), J$.T(1494737, 'none', 21, false)))) {
                                    throw J$.F(1494769, J$.I(typeof Error === 'undefined' ? Error = J$.R(1494745, 'Error', undefined, true, true) : Error = J$.R(1494745, 'Error', Error, true, true)), true)(J$.B(183706, '+', J$.T(1494753, 'OpenSSH-format key uses KDF "none" ', 21, false), J$.T(1494761, 'but specifies a cipher other than "none"', 21, false)));
                                }
                                break;
                            case J$.C2(77120, J$.T(1495857, 'bcrypt', 21, false)):
                                var salt = J$.W(1494801, 'salt', J$.M(1494793, J$.R(1494785, 'kdfOptsBuf', kdfOptsBuf, false, false), 'readBuffer', false)(), salt, false, false);
                                var rounds = J$.W(1494825, 'rounds', J$.M(1494817, J$.R(1494809, 'kdfOptsBuf', kdfOptsBuf, false, false), 'readInt', false)(), rounds, false, false);
                                var cinf = J$.W(1494857, 'cinf', J$.M(1494849, J$.R(1494833, 'utils', utils, false, true), 'opensshCipherInfo', false)(J$.R(1494841, 'cipher', cipher, false, false)), cinf, false, false);
                                if (J$.C(77056, J$.B(183714, '===', J$.R(1494865, 'bcrypt', bcrypt, false, true), J$.T(1494873, undefined, 24, false)))) {
                                    bcrypt = J$.W(1494905, 'bcrypt', J$.F(1494897, J$.I(typeof require === 'undefined' ? require = J$.R(1494881, 'require', undefined, true, true) : require = J$.R(1494881, 'require', require, true, true)), false)(J$.T(1494889, 'bcrypt-pbkdf', 21, false)), bcrypt, false, true);
                                }
                                if (J$.C(77064, J$.B(183730, '===', J$.U(183722, 'typeof', J$.G(1494921, J$.R(1494913, 'options', options, false, false), 'passphrase')), J$.T(1494929, 'string', 21, false)))) {
                                    J$.P(1494985, J$.R(1494937, 'options', options, false, false), 'passphrase', J$.M(1494977, J$.R(1494945, 'Buffer', Buffer, false, true), 'from', false)(J$.G(1494961, J$.R(1494953, 'options', options, false, false), 'passphrase'), J$.T(1494969, 'utf-8', 21, false)));
                                }
                                if (J$.C(77072, J$.U(183738, '!', J$.M(1495017, J$.R(1494993, 'Buffer', Buffer, false, true), 'isBuffer', false)(J$.G(1495009, J$.R(1495001, 'options', options, false, false), 'passphrase'))))) {
                                    throw J$.M(1495057, J$.R(1495025, 'errors', errors, false, true), 'KeyEncryptedError', true)(J$.G(1495041, J$.R(1495033, 'options', options, false, false), 'filename'), J$.T(1495049, 'OpenSSH', 21, false));
                                }
                                var pass = J$.W(1495097, 'pass', J$.F(1495089, J$.I(typeof Uint8Array === 'undefined' ? Uint8Array = J$.R(1495065, 'Uint8Array', undefined, true, true) : Uint8Array = J$.R(1495065, 'Uint8Array', Uint8Array, true, true)), true)(J$.G(1495081, J$.R(1495073, 'options', options, false, false), 'passphrase')), pass, false, false);
                                var salti = J$.W(1495129, 'salti', J$.F(1495121, J$.I(typeof Uint8Array === 'undefined' ? Uint8Array = J$.R(1495105, 'Uint8Array', undefined, true, true) : Uint8Array = J$.R(1495105, 'Uint8Array', Uint8Array, true, true)), true)(J$.R(1495113, 'salt', salt, false, false)), salti, false, false);
                                var out = J$.W(1495185, 'out', J$.F(1495177, J$.I(typeof Uint8Array === 'undefined' ? Uint8Array = J$.R(1495137, 'Uint8Array', undefined, true, true) : Uint8Array = J$.R(1495137, 'Uint8Array', Uint8Array, true, true)), true)(J$.B(183746, '+', J$.G(1495153, J$.R(1495145, 'cinf', cinf, false, false), 'keySize'), J$.G(1495169, J$.R(1495161, 'cinf', cinf, false, false), 'blockSize'))), out, false, false);
                                var res = J$.W(1495289, 'res', J$.M(1495281, J$.R(1495193, 'bcrypt', bcrypt, false, true), 'pbkdf', false)(J$.R(1495201, 'pass', pass, false, false), J$.G(1495217, J$.R(1495209, 'pass', pass, false, false), 'length'), J$.R(1495225, 'salti', salti, false, false), J$.G(1495241, J$.R(1495233, 'salti', salti, false, false), 'length'), J$.R(1495249, 'out', out, false, false), J$.G(1495265, J$.R(1495257, 'out', out, false, false), 'length'), J$.R(1495273, 'rounds', rounds, false, false)), res, false, false);
                                if (J$.C(77080, J$.B(183754, '!==', J$.R(1495297, 'res', res, false, false), J$.T(1495305, 0, 22, false)))) {
                                    throw J$.F(1495337, J$.I(typeof Error === 'undefined' ? Error = J$.R(1495313, 'Error', undefined, true, true) : Error = J$.R(1495313, 'Error', Error, true, true)), true)(J$.B(183762, '+', J$.T(1495321, 'bcrypt_pbkdf function returned ', 21, false), J$.T(1495329, 'failure, parameters invalid', 21, false)));
                                }
                                out = J$.W(1495369, 'out', J$.M(1495361, J$.R(1495345, 'Buffer', Buffer, false, true), 'from', false)(J$.R(1495353, 'out', out, false, false)), out, false, false);
                                var ckey = J$.W(1495417, 'ckey', J$.M(1495409, J$.R(1495377, 'out', out, false, false), 'slice', false)(J$.T(1495385, 0, 22, false), J$.G(1495401, J$.R(1495393, 'cinf', cinf, false, false), 'keySize')), ckey, false, false);
                                var iv = J$.W(1495489, 'iv', J$.M(1495481, J$.R(1495425, 'out', out, false, false), 'slice', false)(J$.G(1495441, J$.R(1495433, 'cinf', cinf, false, false), 'keySize'), J$.B(183770, '+', J$.G(1495457, J$.R(1495449, 'cinf', cinf, false, false), 'keySize'), J$.G(1495473, J$.R(1495465, 'cinf', cinf, false, false), 'blockSize'))), iv, false, false);
                                var cipherStream = J$.W(1495545, 'cipherStream', J$.M(1495537, J$.R(1495497, 'crypto', crypto, false, true), 'createDecipheriv', false)(J$.G(1495513, J$.R(1495505, 'cinf', cinf, false, false), 'opensslName'), J$.R(1495521, 'ckey', ckey, false, false), J$.R(1495529, 'iv', iv, false, false)), cipherStream, false, false);
                                J$.M(1495569, J$.R(1495553, 'cipherStream', cipherStream, false, false), 'setAutoPadding', false)(J$.T(1495561, false, 23, false));
                                var chunk, chunks = J$.W(1495585, 'chunks', J$.T(1495577, [], 10, false), chunks, false, false);
                                J$.M(1495721, J$.R(1495593, 'cipherStream', cipherStream, false, false), 'once', false)(J$.T(1495601, 'error', 21, false), J$.T(1495713, function (e) {
                                    jalangiLabel1:
                                        while (true) {
                                            try {
                                                J$.Fe(1495689, arguments.callee, this, arguments);
                                                arguments = J$.N(1495697, 'arguments', arguments, true, false, false);
                                                e = J$.N(1495705, 'e', e, true, false, false);
                                                if (J$.C(77088, J$.B(183786, '!==', J$.M(1495633, J$.M(1495617, J$.R(1495609, 'e', e, false, false), 'toString', false)(), 'indexOf', false)(J$.T(1495625, 'bad decrypt', 21, false)), J$.U(183778, '-', J$.T(1495641, 1, 22, false))))) {
                                                    throw J$.F(1495673, J$.I(typeof Error === 'undefined' ? Error = J$.R(1495649, 'Error', undefined, true, true) : Error = J$.R(1495649, 'Error', Error, true, true)), true)(J$.B(183794, '+', J$.T(1495657, 'Incorrect passphrase ', 21, false), J$.T(1495665, 'supplied, could not decrypt key', 21, false)));
                                                }
                                                throw J$.R(1495681, 'e', e, false, false);
                                            } catch (J$e) {
                                                J$.Ex(1499529, J$e);
                                            } finally {
                                                if (J$.Fr(1499537))
                                                    continue jalangiLabel1;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false));
                                J$.M(1495745, J$.R(1495729, 'cipherStream', cipherStream, false, false), 'write', false)(J$.R(1495737, 'privKeyBlob', privKeyBlob, false, false));
                                J$.M(1495761, J$.R(1495753, 'cipherStream', cipherStream, false, false), 'end', false)();
                                while (J$.C(77096, J$.B(183802, '!==', chunk = J$.W(1495785, 'chunk', J$.M(1495777, J$.R(1495769, 'cipherStream', cipherStream, false, false), 'read', false)(), chunk, false, false), J$.T(1495793, null, 25, false)))) {
                                    J$.M(1495817, J$.R(1495801, 'chunks', chunks, false, false), 'push', false)(J$.R(1495809, 'chunk', chunk, false, false));
                                }
                                privKeyBlob = J$.W(1495849, 'privKeyBlob', J$.M(1495841, J$.R(1495825, 'Buffer', Buffer, false, true), 'concat', false)(J$.R(1495833, 'chunks', chunks, false, false)), privKeyBlob, false, false);
                                break;
                            default:
                                throw J$.F(1495897, J$.I(typeof Error === 'undefined' ? Error = J$.R(1495865, 'Error', undefined, true, true) : Error = J$.R(1495865, 'Error', Error, true, true)), true)(J$.B(183818, '+', J$.B(183810, '+', J$.T(1495873, 'OpenSSH-format key uses unknown KDF "', 21, false), J$.R(1495881, 'kdf', kdf, false, false)), J$.T(1495889, '"', 21, false)));
                            }
                            buf = J$.W(1495937, 'buf', J$.F(1495929, J$.R(1495905, 'SSHBuffer', SSHBuffer, false, true), true)(J$.T(1495921, { buffer: J$.R(1495913, 'privKeyBlob', privKeyBlob, false, false) }, 11, false)), buf, false, false);
                            var checkInt1 = J$.W(1495961, 'checkInt1', J$.M(1495953, J$.R(1495945, 'buf', buf, false, false), 'readInt', false)(), checkInt1, false, false);
                            var checkInt2 = J$.W(1495985, 'checkInt2', J$.M(1495977, J$.R(1495969, 'buf', buf, false, false), 'readInt', false)(), checkInt2, false, false);
                            if (J$.C(77128, J$.B(183826, '!==', J$.R(1495993, 'checkInt1', checkInt1, false, false), J$.R(1496001, 'checkInt2', checkInt2, false, false)))) {
                                throw J$.F(1496033, J$.I(typeof Error === 'undefined' ? Error = J$.R(1496009, 'Error', undefined, true, true) : Error = J$.R(1496009, 'Error', Error, true, true)), true)(J$.B(183834, '+', J$.T(1496017, 'Incorrect passphrase supplied, could not ', 21, false), J$.T(1496025, 'decrypt key', 21, false)));
                            }
                            var ret = J$.W(1496049, 'ret', J$.T(1496041, {}, 11, false), ret, false, false);
                            var key = J$.W(1496105, 'key', J$.M(1496097, J$.R(1496057, 'rfc4253', rfc4253, false, true), 'readInternal', false)(J$.R(1496065, 'ret', ret, false, false), J$.T(1496073, 'private', 21, false), J$.M(1496089, J$.R(1496081, 'buf', buf, false, false), 'remainder', false)()), key, false, false);
                            J$.M(1496137, J$.R(1496113, 'buf', buf, false, false), 'skip', false)(J$.G(1496129, J$.R(1496121, 'ret', ret, false, false), 'consumed'));
                            var comment = J$.W(1496161, 'comment', J$.M(1496153, J$.R(1496145, 'buf', buf, false, false), 'readString', false)(), comment, false, false);
                            J$.P(1496185, J$.R(1496169, 'key', key, false, false), 'comment', J$.R(1496177, 'comment', comment, false, false));
                            return J$.Rt(1496201, J$.R(1496193, 'key', key, false, false));
                        } catch (J$e) {
                            J$.Ex(1499545, J$e);
                        } finally {
                            if (J$.Fr(1499553))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function write(key, options) {
                jalangiLabel4:
                    while (true) {
                        try {
                            J$.Fe(1499089, arguments.callee, this, arguments);
                            arguments = J$.N(1499097, 'arguments', arguments, true, false, false);
                            key = J$.N(1499105, 'key', key, true, false, false);
                            options = J$.N(1499113, 'options', options, true, false, false);
                            J$.N(1499121, 'pubKey', pubKey, false, false, false);
                            J$.N(1499129, 'cipher', cipher, false, false, false);
                            J$.N(1499137, 'kdf', kdf, false, false, false);
                            J$.N(1499145, 'kdfopts', kdfopts, false, false, false);
                            J$.N(1499153, 'cinf', cinf, false, false, false);
                            J$.N(1499161, 'passphrase', passphrase, false, false, false);
                            J$.N(1499169, 'privBuf', privBuf, false, false, false);
                            J$.N(1499177, 'checkInt', checkInt, false, false, false);
                            J$.N(1499185, 'n', n, false, false, false);
                            J$.N(1499193, 'salt', salt, false, false, false);
                            J$.N(1499201, 'rounds', rounds, false, false, false);
                            J$.N(1499209, 'kdfssh', kdfssh, false, false, false);
                            J$.N(1499217, 'pass', pass, false, false, false);
                            J$.N(1499225, 'salti', salti, false, false, false);
                            J$.N(1499233, 'out', out, false, false, false);
                            J$.N(1499241, 'res', res, false, false, false);
                            J$.N(1499249, 'ckey', ckey, false, false, false);
                            J$.N(1499257, 'iv', iv, false, false, false);
                            J$.N(1499265, 'cipherStream', cipherStream, false, false, false);
                            J$.N(1499273, 'chunk', chunk, false, false, false);
                            J$.N(1499281, 'chunks', chunks, false, false, false);
                            J$.N(1499289, 'buf', buf, false, false, false);
                            J$.N(1499297, 'header', header, false, false, false);
                            J$.N(1499305, 'tmp', tmp, false, false, false);
                            J$.N(1499313, 'len', len, false, false, false);
                            J$.N(1499321, 'o', o, false, false, false);
                            J$.N(1499329, 'i', i, false, false, false);
                            J$.N(1499337, 'limit', limit, false, false, false);
                            var pubKey;
                            if (J$.C(77136, J$.M(1496465, J$.R(1496449, 'PrivateKey', PrivateKey, false, true), 'isPrivateKey', false)(J$.R(1496457, 'key', key, false, false))))
                                pubKey = J$.W(1496489, 'pubKey', J$.M(1496481, J$.R(1496473, 'key', key, false, false), 'toPublic', false)(), pubKey, false, false);
                            else
                                pubKey = J$.W(1496505, 'pubKey', J$.R(1496497, 'key', key, false, false), pubKey, false, false);
                            var cipher = J$.W(1496521, 'cipher', J$.T(1496513, 'none', 21, false), cipher, false, false);
                            var kdf = J$.W(1496537, 'kdf', J$.T(1496529, 'none', 21, false), kdf, false, false);
                            var kdfopts = J$.W(1496569, 'kdfopts', J$.M(1496561, J$.R(1496545, 'Buffer', Buffer, false, true), 'alloc', false)(J$.T(1496553, 0, 22, false)), kdfopts, false, false);
                            var cinf = J$.W(1496593, 'cinf', J$.T(1496585, { blockSize: J$.T(1496577, 8, 22, false) }, 11, false), cinf, false, false);
                            var passphrase;
                            if (J$.C(77168, J$.B(183842, '!==', J$.R(1496601, 'options', options, false, false), J$.T(1496609, undefined, 24, false)))) {
                                passphrase = J$.W(1496633, 'passphrase', J$.G(1496625, J$.R(1496617, 'options', options, false, false), 'passphrase'), passphrase, false, false);
                                if (J$.C(77144, J$.B(183858, '===', J$.U(183850, 'typeof', J$.R(1496641, 'passphrase', passphrase, false, false)), J$.T(1496649, 'string', 21, false))))
                                    passphrase = J$.W(1496689, 'passphrase', J$.M(1496681, J$.R(1496657, 'Buffer', Buffer, false, true), 'from', false)(J$.R(1496665, 'passphrase', passphrase, false, false), J$.T(1496673, 'utf-8', 21, false)), passphrase, false, false);
                                if (J$.C(77160, J$.B(183866, '!==', J$.R(1496697, 'passphrase', passphrase, false, false), J$.T(1496705, undefined, 24, false)))) {
                                    J$.M(1496737, J$.R(1496713, 'assert', assert, false, true), 'buffer', false)(J$.R(1496721, 'passphrase', passphrase, false, false), J$.T(1496729, 'options.passphrase', 21, false));
                                    J$.M(1496777, J$.R(1496745, 'assert', assert, false, true), 'optionalString', false)(J$.G(1496761, J$.R(1496753, 'options', options, false, false), 'cipher'), J$.T(1496769, 'options.cipher', 21, false));
                                    cipher = J$.W(1496801, 'cipher', J$.G(1496793, J$.R(1496785, 'options', options, false, false), 'cipher'), cipher, false, false);
                                    if (J$.C(77152, J$.B(183874, '===', J$.R(1496809, 'cipher', cipher, false, false), J$.T(1496817, undefined, 24, false))))
                                        cipher = J$.W(1496833, 'cipher', J$.T(1496825, 'aes128-ctr', 21, false), cipher, false, false);
                                    cinf = J$.W(1496865, 'cinf', J$.M(1496857, J$.R(1496841, 'utils', utils, false, true), 'opensshCipherInfo', false)(J$.R(1496849, 'cipher', cipher, false, false)), cinf, false, false);
                                    kdf = J$.W(1496881, 'kdf', J$.T(1496873, 'bcrypt', 21, false), kdf, false, false);
                                }
                            }
                            var privBuf;
                            if (J$.C(77192, J$.M(1496905, J$.R(1496889, 'PrivateKey', PrivateKey, false, true), 'isPrivateKey', false)(J$.R(1496897, 'key', key, false, false)))) {
                                privBuf = J$.W(1496937, 'privBuf', J$.F(1496929, J$.R(1496913, 'SSHBuffer', SSHBuffer, false, true), true)(J$.T(1496921, {}, 11, false)), privBuf, false, false);
                                var checkInt = J$.W(1496985, 'checkInt', J$.M(1496977, J$.M(1496961, J$.R(1496945, 'crypto', crypto, false, true), 'randomBytes', false)(J$.T(1496953, 4, 22, false)), 'readUInt32BE', false)(J$.T(1496969, 0, 22, false)), checkInt, false, false);
                                J$.M(1497009, J$.R(1496993, 'privBuf', privBuf, false, false), 'writeInt', false)(J$.R(1497001, 'checkInt', checkInt, false, false));
                                J$.M(1497033, J$.R(1497017, 'privBuf', privBuf, false, false), 'writeInt', false)(J$.R(1497025, 'checkInt', checkInt, false, false));
                                J$.M(1497073, J$.R(1497041, 'privBuf', privBuf, false, false), 'write', false)(J$.M(1497065, J$.R(1497049, 'key', key, false, false), 'toBuffer', false)(J$.T(1497057, 'rfc4253', 21, false)));
                                J$.M(1497113, J$.R(1497081, 'privBuf', privBuf, false, false), 'writeString', false)(J$.C(77176, J$.G(1497097, J$.R(1497089, 'key', key, false, false), 'comment')) ? J$._() : J$.T(1497105, '', 21, false));
                                var n = J$.W(1497129, 'n', J$.T(1497121, 1, 22, false), n, false, false);
                                while (J$.C(77184, J$.B(183890, '!==', J$.B(183882, '%', J$.G(1497145, J$.R(1497137, 'privBuf', privBuf, false, false), '_offset'), J$.G(1497161, J$.R(1497153, 'cinf', cinf, false, false), 'blockSize')), J$.T(1497169, 0, 22, false)))) {
                                    J$.M(1497201, J$.R(1497177, 'privBuf', privBuf, false, false), 'writeChar', false)(J$.B(183914, '-', n = J$.W(1497193, 'n', J$.B(183906, '+', J$.U(183898, '+', J$.R(1497185, 'n', n, false, false)), 1), n, false, false), 1));
                                }
                                privBuf = J$.W(1497225, 'privBuf', J$.M(1497217, J$.R(1497209, 'privBuf', privBuf, false, false), 'toBuffer', false)(), privBuf, false, false);
                            }
                            switch (J$.C1(77224, J$.R(1497233, 'kdf', kdf, false, false))) {
                            case J$.C2(77232, J$.T(1497241, 'none', 21, false)):
                                break;
                            case J$.C2(77240, J$.T(1498161, 'bcrypt', 21, false)):
                                var salt = J$.W(1497273, 'salt', J$.M(1497265, J$.R(1497249, 'crypto', crypto, false, true), 'randomBytes', false)(J$.T(1497257, 16, 22, false)), salt, false, false);
                                var rounds = J$.W(1497289, 'rounds', J$.T(1497281, 16, 22, false), rounds, false, false);
                                var kdfssh = J$.W(1497321, 'kdfssh', J$.F(1497313, J$.R(1497297, 'SSHBuffer', SSHBuffer, false, true), true)(J$.T(1497305, {}, 11, false)), kdfssh, false, false);
                                J$.M(1497345, J$.R(1497329, 'kdfssh', kdfssh, false, false), 'writeBuffer', false)(J$.R(1497337, 'salt', salt, false, false));
                                J$.M(1497369, J$.R(1497353, 'kdfssh', kdfssh, false, false), 'writeInt', false)(J$.R(1497361, 'rounds', rounds, false, false));
                                kdfopts = J$.W(1497393, 'kdfopts', J$.M(1497385, J$.R(1497377, 'kdfssh', kdfssh, false, false), 'toBuffer', false)(), kdfopts, false, false);
                                if (J$.C(77200, J$.B(183922, '===', J$.R(1497401, 'bcrypt', bcrypt, false, true), J$.T(1497409, undefined, 24, false)))) {
                                    bcrypt = J$.W(1497441, 'bcrypt', J$.F(1497433, J$.I(typeof require === 'undefined' ? require = J$.R(1497417, 'require', undefined, true, true) : require = J$.R(1497417, 'require', require, true, true)), false)(J$.T(1497425, 'bcrypt-pbkdf', 21, false)), bcrypt, false, true);
                                }
                                var pass = J$.W(1497473, 'pass', J$.F(1497465, J$.I(typeof Uint8Array === 'undefined' ? Uint8Array = J$.R(1497449, 'Uint8Array', undefined, true, true) : Uint8Array = J$.R(1497449, 'Uint8Array', Uint8Array, true, true)), true)(J$.R(1497457, 'passphrase', passphrase, false, false)), pass, false, false);
                                var salti = J$.W(1497505, 'salti', J$.F(1497497, J$.I(typeof Uint8Array === 'undefined' ? Uint8Array = J$.R(1497481, 'Uint8Array', undefined, true, true) : Uint8Array = J$.R(1497481, 'Uint8Array', Uint8Array, true, true)), true)(J$.R(1497489, 'salt', salt, false, false)), salti, false, false);
                                var out = J$.W(1497561, 'out', J$.F(1497553, J$.I(typeof Uint8Array === 'undefined' ? Uint8Array = J$.R(1497513, 'Uint8Array', undefined, true, true) : Uint8Array = J$.R(1497513, 'Uint8Array', Uint8Array, true, true)), true)(J$.B(183930, '+', J$.G(1497529, J$.R(1497521, 'cinf', cinf, false, false), 'keySize'), J$.G(1497545, J$.R(1497537, 'cinf', cinf, false, false), 'blockSize'))), out, false, false);
                                var res = J$.W(1497665, 'res', J$.M(1497657, J$.R(1497569, 'bcrypt', bcrypt, false, true), 'pbkdf', false)(J$.R(1497577, 'pass', pass, false, false), J$.G(1497593, J$.R(1497585, 'pass', pass, false, false), 'length'), J$.R(1497601, 'salti', salti, false, false), J$.G(1497617, J$.R(1497609, 'salti', salti, false, false), 'length'), J$.R(1497625, 'out', out, false, false), J$.G(1497641, J$.R(1497633, 'out', out, false, false), 'length'), J$.R(1497649, 'rounds', rounds, false, false)), res, false, false);
                                if (J$.C(77208, J$.B(183938, '!==', J$.R(1497673, 'res', res, false, false), J$.T(1497681, 0, 22, false)))) {
                                    throw J$.F(1497713, J$.I(typeof Error === 'undefined' ? Error = J$.R(1497689, 'Error', undefined, true, true) : Error = J$.R(1497689, 'Error', Error, true, true)), true)(J$.B(183946, '+', J$.T(1497697, 'bcrypt_pbkdf function returned ', 21, false), J$.T(1497705, 'failure, parameters invalid', 21, false)));
                                }
                                out = J$.W(1497745, 'out', J$.M(1497737, J$.R(1497721, 'Buffer', Buffer, false, true), 'from', false)(J$.R(1497729, 'out', out, false, false)), out, false, false);
                                var ckey = J$.W(1497793, 'ckey', J$.M(1497785, J$.R(1497753, 'out', out, false, false), 'slice', false)(J$.T(1497761, 0, 22, false), J$.G(1497777, J$.R(1497769, 'cinf', cinf, false, false), 'keySize')), ckey, false, false);
                                var iv = J$.W(1497865, 'iv', J$.M(1497857, J$.R(1497801, 'out', out, false, false), 'slice', false)(J$.G(1497817, J$.R(1497809, 'cinf', cinf, false, false), 'keySize'), J$.B(183954, '+', J$.G(1497833, J$.R(1497825, 'cinf', cinf, false, false), 'keySize'), J$.G(1497849, J$.R(1497841, 'cinf', cinf, false, false), 'blockSize'))), iv, false, false);
                                var cipherStream = J$.W(1497921, 'cipherStream', J$.M(1497913, J$.R(1497873, 'crypto', crypto, false, true), 'createCipheriv', false)(J$.G(1497889, J$.R(1497881, 'cinf', cinf, false, false), 'opensslName'), J$.R(1497897, 'ckey', ckey, false, false), J$.R(1497905, 'iv', iv, false, false)), cipherStream, false, false);
                                J$.M(1497945, J$.R(1497929, 'cipherStream', cipherStream, false, false), 'setAutoPadding', false)(J$.T(1497937, false, 23, false));
                                var chunk, chunks = J$.W(1497961, 'chunks', J$.T(1497953, [], 10, false), chunks, false, false);
                                J$.M(1498025, J$.R(1497969, 'cipherStream', cipherStream, false, false), 'once', false)(J$.T(1497977, 'error', 21, false), J$.T(1498017, function (e) {
                                    jalangiLabel3:
                                        while (true) {
                                            try {
                                                J$.Fe(1497993, arguments.callee, this, arguments);
                                                arguments = J$.N(1498001, 'arguments', arguments, true, false, false);
                                                e = J$.N(1498009, 'e', e, true, false, false);
                                                throw J$.R(1497985, 'e', e, false, false);
                                            } catch (J$e) {
                                                J$.Ex(1499561, J$e);
                                            } finally {
                                                if (J$.Fr(1499569))
                                                    continue jalangiLabel3;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false));
                                J$.M(1498049, J$.R(1498033, 'cipherStream', cipherStream, false, false), 'write', false)(J$.R(1498041, 'privBuf', privBuf, false, false));
                                J$.M(1498065, J$.R(1498057, 'cipherStream', cipherStream, false, false), 'end', false)();
                                while (J$.C(77216, J$.B(183962, '!==', chunk = J$.W(1498089, 'chunk', J$.M(1498081, J$.R(1498073, 'cipherStream', cipherStream, false, false), 'read', false)(), chunk, false, false), J$.T(1498097, null, 25, false)))) {
                                    J$.M(1498121, J$.R(1498105, 'chunks', chunks, false, false), 'push', false)(J$.R(1498113, 'chunk', chunk, false, false));
                                }
                                privBuf = J$.W(1498153, 'privBuf', J$.M(1498145, J$.R(1498129, 'Buffer', Buffer, false, true), 'concat', false)(J$.R(1498137, 'chunks', chunks, false, false)), privBuf, false, false);
                                break;
                            default:
                                throw J$.F(1498193, J$.I(typeof Error === 'undefined' ? Error = J$.R(1498169, 'Error', undefined, true, true) : Error = J$.R(1498169, 'Error', Error, true, true)), true)(J$.B(183970, '+', J$.T(1498177, 'Unsupported kdf ', 21, false), J$.R(1498185, 'kdf', kdf, false, false)));
                            }
                            var buf = J$.W(1498225, 'buf', J$.F(1498217, J$.R(1498201, 'SSHBuffer', SSHBuffer, false, true), true)(J$.T(1498209, {}, 11, false)), buf, false, false);
                            J$.M(1498249, J$.R(1498233, 'buf', buf, false, false), 'writeCString', false)(J$.R(1498241, 'MAGIC', MAGIC, false, true));
                            J$.M(1498273, J$.R(1498257, 'buf', buf, false, false), 'writeString', false)(J$.R(1498265, 'cipher', cipher, false, false));
                            J$.M(1498297, J$.R(1498281, 'buf', buf, false, false), 'writeString', false)(J$.R(1498289, 'kdf', kdf, false, false));
                            J$.M(1498321, J$.R(1498305, 'buf', buf, false, false), 'writeBuffer', false)(J$.R(1498313, 'kdfopts', kdfopts, false, false));
                            J$.M(1498345, J$.R(1498329, 'buf', buf, false, false), 'writeInt', false)(J$.T(1498337, 1, 22, false));
                            J$.M(1498385, J$.R(1498353, 'buf', buf, false, false), 'writeBuffer', false)(J$.M(1498377, J$.R(1498361, 'pubKey', pubKey, false, false), 'toBuffer', false)(J$.T(1498369, 'rfc4253', 21, false)));
                            if (J$.C(77248, J$.R(1498393, 'privBuf', privBuf, false, false)))
                                J$.M(1498417, J$.R(1498401, 'buf', buf, false, false), 'writeBuffer', false)(J$.R(1498409, 'privBuf', privBuf, false, false));
                            buf = J$.W(1498441, 'buf', J$.M(1498433, J$.R(1498425, 'buf', buf, false, false), 'toBuffer', false)(), buf, false, false);
                            var header;
                            if (J$.C(77256, J$.M(1498465, J$.R(1498449, 'PrivateKey', PrivateKey, false, true), 'isPrivateKey', false)(J$.R(1498457, 'key', key, false, false))))
                                header = J$.W(1498481, 'header', J$.T(1498473, 'OPENSSH PRIVATE KEY', 21, false), header, false, false);
                            else
                                header = J$.W(1498497, 'header', J$.T(1498489, 'OPENSSH PUBLIC KEY', 21, false), header, false, false);
                            var tmp = J$.W(1498529, 'tmp', J$.M(1498521, J$.R(1498505, 'buf', buf, false, false), 'toString', false)(J$.T(1498513, 'base64', 21, false)), tmp, false, false);
                            var len = J$.W(1498625, 'len', J$.B(184026, '+', J$.B(184018, '+', J$.B(184002, '+', J$.B(183994, '+', J$.B(183986, '+', J$.G(1498545, J$.R(1498537, 'tmp', tmp, false, false), 'length'), J$.B(183978, '/', J$.G(1498561, J$.R(1498553, 'tmp', tmp, false, false), 'length'), J$.T(1498569, 70, 22, false))), J$.T(1498577, 18, 22, false)), J$.T(1498585, 16, 22, false)), J$.B(184010, '*', J$.G(1498601, J$.R(1498593, 'header', header, false, false), 'length'), J$.T(1498609, 2, 22, false))), J$.T(1498617, 10, 22, false)), len, false, false);
                            buf = J$.W(1498657, 'buf', J$.M(1498649, J$.R(1498633, 'Buffer', Buffer, false, true), 'alloc', false)(J$.R(1498641, 'len', len, false, false)), buf, false, false);
                            var o = J$.W(1498673, 'o', J$.T(1498665, 0, 22, false), o, false, false);
                            o = J$.W(1498737, 'o', J$.B(184050, '+', J$.R(1498729, 'o', o, false, false), J$.M(1498721, J$.R(1498681, 'buf', buf, false, false), 'write', false)(J$.B(184042, '+', J$.B(184034, '+', J$.T(1498689, '-----BEGIN ', 21, false), J$.R(1498697, 'header', header, false, false)), J$.T(1498705, '-----\n', 21, false)), J$.R(1498713, 'o', o, false, false))), o, false, false);
                            for (var i = J$.W(1498753, 'i', J$.T(1498745, 0, 22, false), i, false, false); J$.C(77272, J$.B(184058, '<', J$.R(1498761, 'i', i, false, false), J$.G(1498777, J$.R(1498769, 'tmp', tmp, false, false), 'length')));) {
                                var limit = J$.W(1498801, 'limit', J$.B(184066, '+', J$.R(1498785, 'i', i, false, false), J$.T(1498793, 70, 22, false)), limit, false, false);
                                if (J$.C(77264, J$.B(184074, '>', J$.R(1498809, 'limit', limit, false, false), J$.G(1498825, J$.R(1498817, 'tmp', tmp, false, false), 'length'))))
                                    limit = J$.W(1498849, 'limit', J$.G(1498841, J$.R(1498833, 'tmp', tmp, false, false), 'length'), limit, false, false);
                                o = J$.W(1498921, 'o', J$.B(184082, '+', J$.R(1498913, 'o', o, false, false), J$.M(1498905, J$.R(1498857, 'buf', buf, false, false), 'write', false)(J$.M(1498889, J$.R(1498865, 'tmp', tmp, false, false), 'slice', false)(J$.R(1498873, 'i', i, false, false), J$.R(1498881, 'limit', limit, false, false)), J$.R(1498897, 'o', o, false, false))), o, false, false);
                                J$.P(1498961, J$.R(1498929, 'buf', buf, false, false), J$.B(184106, '-', o = J$.W(1498945, 'o', J$.B(184098, '+', J$.U(184090, '+', J$.R(1498937, 'o', o, false, false)), 1), o, false, false), 1), J$.T(1498953, 10, 22, false));
                                i = J$.W(1498977, 'i', J$.R(1498969, 'limit', limit, false, false), i, false, false);
                            }
                            o = J$.W(1499041, 'o', J$.B(184130, '+', J$.R(1499033, 'o', o, false, false), J$.M(1499025, J$.R(1498985, 'buf', buf, false, false), 'write', false)(J$.B(184122, '+', J$.B(184114, '+', J$.T(1498993, '-----END ', 21, false), J$.R(1499001, 'header', header, false, false)), J$.T(1499009, '-----\n', 21, false)), J$.R(1499017, 'o', o, false, false))), o, false, false);
                            return J$.Rt(1499081, J$.M(1499073, J$.R(1499049, 'buf', buf, false, false), 'slice', false)(J$.T(1499057, 0, 22, false), J$.R(1499065, 'o', o, false, false)));
                        } catch (J$e) {
                            J$.Ex(1499577, J$e);
                        } finally {
                            if (J$.Fr(1499585))
                                continue jalangiLabel4;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(1499353, 'assert', assert, false, false, false);
            J$.N(1499361, 'asn1', asn1, false, false, false);
            J$.N(1499369, 'Buffer', Buffer, false, false, false);
            J$.N(1499377, 'algs', algs, false, false, false);
            J$.N(1499385, 'utils', utils, false, false, false);
            J$.N(1499393, 'crypto', crypto, false, false, false);
            J$.N(1499401, 'Key', Key, false, false, false);
            J$.N(1499409, 'PrivateKey', PrivateKey, false, false, false);
            J$.N(1499417, 'pem', pem, false, false, false);
            J$.N(1499425, 'rfc4253', rfc4253, false, false, false);
            J$.N(1499433, 'SSHBuffer', SSHBuffer, false, false, false);
            J$.N(1499441, 'errors', errors, false, false, false);
            J$.N(1499449, 'bcrypt', bcrypt, false, false, false);
            read = J$.N(1499465, 'read', J$.T(1499457, read, 12, false), true, false, false);
            J$.N(1499473, 'MAGIC', MAGIC, false, false, false);
            readSSHPrivate = J$.N(1499489, 'readSSHPrivate', J$.T(1499481, readSSHPrivate, 12, false), true, false, false);
            write = J$.N(1499505, 'write', J$.T(1499497, write, 12, false), true, false, false);
            J$.T(1492953, 'use strict', 21, false);
            J$.F(1492977, J$.I(typeof require === 'undefined' ? require = J$.R(1492961, 'require', undefined, true, true) : require = J$.R(1492961, 'require', require, true, true)), false)(J$.T(1492969, 'core-js/modules/es.array.concat', 21, false));
            J$.F(1493001, J$.I(typeof require === 'undefined' ? require = J$.R(1492985, 'require', undefined, true, true) : require = J$.R(1492985, 'require', require, true, true)), false)(J$.T(1492993, 'core-js/modules/es.array.index-of', 21, false));
            J$.F(1493025, J$.I(typeof require === 'undefined' ? require = J$.R(1493009, 'require', undefined, true, true) : require = J$.R(1493009, 'require', require, true, true)), false)(J$.T(1493017, 'core-js/modules/es.array.iterator', 21, false));
            J$.F(1493049, J$.I(typeof require === 'undefined' ? require = J$.R(1493033, 'require', undefined, true, true) : require = J$.R(1493033, 'require', require, true, true)), false)(J$.T(1493041, 'core-js/modules/es.array.slice', 21, false));
            J$.F(1493073, J$.I(typeof require === 'undefined' ? require = J$.R(1493057, 'require', undefined, true, true) : require = J$.R(1493057, 'require', require, true, true)), false)(J$.T(1493065, 'core-js/modules/es.array-buffer.slice', 21, false));
            J$.F(1493097, J$.I(typeof require === 'undefined' ? require = J$.R(1493081, 'require', undefined, true, true) : require = J$.R(1493081, 'require', require, true, true)), false)(J$.T(1493089, 'core-js/modules/es.date.to-string', 21, false));
            J$.F(1493121, J$.I(typeof require === 'undefined' ? require = J$.R(1493105, 'require', undefined, true, true) : require = J$.R(1493105, 'require', require, true, true)), false)(J$.T(1493113, 'core-js/modules/es.object.to-string', 21, false));
            J$.F(1493145, J$.I(typeof require === 'undefined' ? require = J$.R(1493129, 'require', undefined, true, true) : require = J$.R(1493129, 'require', require, true, true)), false)(J$.T(1493137, 'core-js/modules/es.regexp.to-string', 21, false));
            J$.F(1493169, J$.I(typeof require === 'undefined' ? require = J$.R(1493153, 'require', undefined, true, true) : require = J$.R(1493153, 'require', require, true, true)), false)(J$.T(1493161, 'core-js/modules/es.typed-array.uint8-array', 21, false));
            J$.F(1493193, J$.I(typeof require === 'undefined' ? require = J$.R(1493177, 'require', undefined, true, true) : require = J$.R(1493177, 'require', require, true, true)), false)(J$.T(1493185, 'core-js/modules/es.typed-array.copy-within', 21, false));
            J$.F(1493217, J$.I(typeof require === 'undefined' ? require = J$.R(1493201, 'require', undefined, true, true) : require = J$.R(1493201, 'require', require, true, true)), false)(J$.T(1493209, 'core-js/modules/es.typed-array.every', 21, false));
            J$.F(1493241, J$.I(typeof require === 'undefined' ? require = J$.R(1493225, 'require', undefined, true, true) : require = J$.R(1493225, 'require', require, true, true)), false)(J$.T(1493233, 'core-js/modules/es.typed-array.fill', 21, false));
            J$.F(1493265, J$.I(typeof require === 'undefined' ? require = J$.R(1493249, 'require', undefined, true, true) : require = J$.R(1493249, 'require', require, true, true)), false)(J$.T(1493257, 'core-js/modules/es.typed-array.filter', 21, false));
            J$.F(1493289, J$.I(typeof require === 'undefined' ? require = J$.R(1493273, 'require', undefined, true, true) : require = J$.R(1493273, 'require', require, true, true)), false)(J$.T(1493281, 'core-js/modules/es.typed-array.find', 21, false));
            J$.F(1493313, J$.I(typeof require === 'undefined' ? require = J$.R(1493297, 'require', undefined, true, true) : require = J$.R(1493297, 'require', require, true, true)), false)(J$.T(1493305, 'core-js/modules/es.typed-array.find-index', 21, false));
            J$.F(1493337, J$.I(typeof require === 'undefined' ? require = J$.R(1493321, 'require', undefined, true, true) : require = J$.R(1493321, 'require', require, true, true)), false)(J$.T(1493329, 'core-js/modules/es.typed-array.for-each', 21, false));
            J$.F(1493361, J$.I(typeof require === 'undefined' ? require = J$.R(1493345, 'require', undefined, true, true) : require = J$.R(1493345, 'require', require, true, true)), false)(J$.T(1493353, 'core-js/modules/es.typed-array.includes', 21, false));
            J$.F(1493385, J$.I(typeof require === 'undefined' ? require = J$.R(1493369, 'require', undefined, true, true) : require = J$.R(1493369, 'require', require, true, true)), false)(J$.T(1493377, 'core-js/modules/es.typed-array.index-of', 21, false));
            J$.F(1493409, J$.I(typeof require === 'undefined' ? require = J$.R(1493393, 'require', undefined, true, true) : require = J$.R(1493393, 'require', require, true, true)), false)(J$.T(1493401, 'core-js/modules/es.typed-array.iterator', 21, false));
            J$.F(1493433, J$.I(typeof require === 'undefined' ? require = J$.R(1493417, 'require', undefined, true, true) : require = J$.R(1493417, 'require', require, true, true)), false)(J$.T(1493425, 'core-js/modules/es.typed-array.join', 21, false));
            J$.F(1493457, J$.I(typeof require === 'undefined' ? require = J$.R(1493441, 'require', undefined, true, true) : require = J$.R(1493441, 'require', require, true, true)), false)(J$.T(1493449, 'core-js/modules/es.typed-array.last-index-of', 21, false));
            J$.F(1493481, J$.I(typeof require === 'undefined' ? require = J$.R(1493465, 'require', undefined, true, true) : require = J$.R(1493465, 'require', require, true, true)), false)(J$.T(1493473, 'core-js/modules/es.typed-array.map', 21, false));
            J$.F(1493505, J$.I(typeof require === 'undefined' ? require = J$.R(1493489, 'require', undefined, true, true) : require = J$.R(1493489, 'require', require, true, true)), false)(J$.T(1493497, 'core-js/modules/es.typed-array.reduce', 21, false));
            J$.F(1493529, J$.I(typeof require === 'undefined' ? require = J$.R(1493513, 'require', undefined, true, true) : require = J$.R(1493513, 'require', require, true, true)), false)(J$.T(1493521, 'core-js/modules/es.typed-array.reduce-right', 21, false));
            J$.F(1493553, J$.I(typeof require === 'undefined' ? require = J$.R(1493537, 'require', undefined, true, true) : require = J$.R(1493537, 'require', require, true, true)), false)(J$.T(1493545, 'core-js/modules/es.typed-array.reverse', 21, false));
            J$.F(1493577, J$.I(typeof require === 'undefined' ? require = J$.R(1493561, 'require', undefined, true, true) : require = J$.R(1493561, 'require', require, true, true)), false)(J$.T(1493569, 'core-js/modules/es.typed-array.set', 21, false));
            J$.F(1493601, J$.I(typeof require === 'undefined' ? require = J$.R(1493585, 'require', undefined, true, true) : require = J$.R(1493585, 'require', require, true, true)), false)(J$.T(1493593, 'core-js/modules/es.typed-array.slice', 21, false));
            J$.F(1493625, J$.I(typeof require === 'undefined' ? require = J$.R(1493609, 'require', undefined, true, true) : require = J$.R(1493609, 'require', require, true, true)), false)(J$.T(1493617, 'core-js/modules/es.typed-array.some', 21, false));
            J$.F(1493649, J$.I(typeof require === 'undefined' ? require = J$.R(1493633, 'require', undefined, true, true) : require = J$.R(1493633, 'require', require, true, true)), false)(J$.T(1493641, 'core-js/modules/es.typed-array.sort', 21, false));
            J$.F(1493673, J$.I(typeof require === 'undefined' ? require = J$.R(1493657, 'require', undefined, true, true) : require = J$.R(1493657, 'require', require, true, true)), false)(J$.T(1493665, 'core-js/modules/es.typed-array.subarray', 21, false));
            J$.F(1493697, J$.I(typeof require === 'undefined' ? require = J$.R(1493681, 'require', undefined, true, true) : require = J$.R(1493681, 'require', require, true, true)), false)(J$.T(1493689, 'core-js/modules/es.typed-array.to-locale-string', 21, false));
            J$.F(1493721, J$.I(typeof require === 'undefined' ? require = J$.R(1493705, 'require', undefined, true, true) : require = J$.R(1493705, 'require', require, true, true)), false)(J$.T(1493713, 'core-js/modules/es.typed-array.to-string', 21, false));
            J$.P(1493769, J$.I(typeof module === 'undefined' ? module = J$.R(1493729, 'module', undefined, true, true) : module = J$.R(1493729, 'module', module, true, true)), 'exports', J$.T(1493761, {
                read: J$.R(1493737, 'read', read, false, true),
                readSSHPrivate: J$.R(1493745, 'readSSHPrivate', readSSHPrivate, false, true),
                write: J$.R(1493753, 'write', write, false, true)
            }, 11, false));
            var assert = J$.W(1493801, 'assert', J$.F(1493793, J$.I(typeof require === 'undefined' ? require = J$.R(1493777, 'require', undefined, true, true) : require = J$.R(1493777, 'require', require, true, true)), false)(J$.T(1493785, 'assert-plus', 21, false)), assert, false, true);
            var asn1 = J$.W(1493833, 'asn1', J$.F(1493825, J$.I(typeof require === 'undefined' ? require = J$.R(1493809, 'require', undefined, true, true) : require = J$.R(1493809, 'require', require, true, true)), false)(J$.T(1493817, 'asn1', 21, false)), asn1, false, true);
            var Buffer = J$.W(1493873, 'Buffer', J$.G(1493865, J$.F(1493857, J$.I(typeof require === 'undefined' ? require = J$.R(1493841, 'require', undefined, true, true) : require = J$.R(1493841, 'require', require, true, true)), false)(J$.T(1493849, 'safer-buffer', 21, false)), 'Buffer'), Buffer, false, true);
            var algs = J$.W(1493905, 'algs', J$.F(1493897, J$.I(typeof require === 'undefined' ? require = J$.R(1493881, 'require', undefined, true, true) : require = J$.R(1493881, 'require', require, true, true)), false)(J$.T(1493889, '../algs', 21, false)), algs, false, true);
            var utils = J$.W(1493937, 'utils', J$.F(1493929, J$.I(typeof require === 'undefined' ? require = J$.R(1493913, 'require', undefined, true, true) : require = J$.R(1493913, 'require', require, true, true)), false)(J$.T(1493921, '../utils', 21, false)), utils, false, true);
            var crypto = J$.W(1493969, 'crypto', J$.F(1493961, J$.I(typeof require === 'undefined' ? require = J$.R(1493945, 'require', undefined, true, true) : require = J$.R(1493945, 'require', require, true, true)), false)(J$.T(1493953, 'crypto', 21, false)), crypto, false, true);
            var Key = J$.W(1494001, 'Key', J$.F(1493993, J$.I(typeof require === 'undefined' ? require = J$.R(1493977, 'require', undefined, true, true) : require = J$.R(1493977, 'require', require, true, true)), false)(J$.T(1493985, '../key', 21, false)), Key, false, true);
            var PrivateKey = J$.W(1494033, 'PrivateKey', J$.F(1494025, J$.I(typeof require === 'undefined' ? require = J$.R(1494009, 'require', undefined, true, true) : require = J$.R(1494009, 'require', require, true, true)), false)(J$.T(1494017, '../private-key', 21, false)), PrivateKey, false, true);
            var pem = J$.W(1494065, 'pem', J$.F(1494057, J$.I(typeof require === 'undefined' ? require = J$.R(1494041, 'require', undefined, true, true) : require = J$.R(1494041, 'require', require, true, true)), false)(J$.T(1494049, './pem', 21, false)), pem, false, true);
            var rfc4253 = J$.W(1494097, 'rfc4253', J$.F(1494089, J$.I(typeof require === 'undefined' ? require = J$.R(1494073, 'require', undefined, true, true) : require = J$.R(1494073, 'require', require, true, true)), false)(J$.T(1494081, './rfc4253', 21, false)), rfc4253, false, true);
            var SSHBuffer = J$.W(1494129, 'SSHBuffer', J$.F(1494121, J$.I(typeof require === 'undefined' ? require = J$.R(1494105, 'require', undefined, true, true) : require = J$.R(1494105, 'require', require, true, true)), false)(J$.T(1494113, '../ssh-buffer', 21, false)), SSHBuffer, false, true);
            var errors = J$.W(1494161, 'errors', J$.F(1494153, J$.I(typeof require === 'undefined' ? require = J$.R(1494137, 'require', undefined, true, true) : require = J$.R(1494137, 'require', require, true, true)), false)(J$.T(1494145, '../errors', 21, false)), errors, false, true);
            var bcrypt;
            var MAGIC = J$.W(1494249, 'MAGIC', J$.T(1494241, 'openssh-key-v1', 21, false), MAGIC, false, true);
        } catch (J$e) {
            J$.Ex(1499593, J$e);
        } finally {
            if (J$.Sr(1499601))
                continue jalangiLabel5;
            else
                break jalangiLabel5;
        }
    }
// JALANGI DO NOT INSTRUMENT

