J$.noInstrEval = false;
jalangiLabel4:
    while (true) {
        try {
            J$.Se(1014985, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestCoinBasePro/node_modules/json-stringify-safe/stringify.js');
            function stringify(obj, replacer, spaces, cycleReplacer) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(1014241, arguments.callee, this, arguments);
                            arguments = J$.N(1014249, 'arguments', arguments, true, false, false);
                            obj = J$.N(1014257, 'obj', obj, true, false, false);
                            replacer = J$.N(1014265, 'replacer', replacer, true, false, false);
                            spaces = J$.N(1014273, 'spaces', spaces, true, false, false);
                            cycleReplacer = J$.N(1014281, 'cycleReplacer', cycleReplacer, true, false, false);
                            return J$.Rt(1014233, J$.M(1014225, J$.I(typeof JSON === 'undefined' ? JSON = J$.R(1014169, 'JSON', undefined, true, true) : JSON = J$.R(1014169, 'JSON', JSON, true, true)), 'stringify', false)(J$.R(1014177, 'obj', obj, false, false), J$.F(1014209, J$.R(1014185, 'serializer', serializer, false, true), false)(J$.R(1014193, 'replacer', replacer, false, false), J$.R(1014201, 'cycleReplacer', cycleReplacer, false, false)), J$.R(1014217, 'spaces', spaces, false, false)));
                        } catch (J$e) {
                            J$.Ex(1015025, J$e);
                        } finally {
                            if (J$.Fr(1015033))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function serializer(replacer, cycleReplacer) {
                jalangiLabel3:
                    while (true) {
                        try {
                            J$.Fe(1014937, arguments.callee, this, arguments);
                            arguments = J$.N(1014945, 'arguments', arguments, true, false, false);
                            replacer = J$.N(1014953, 'replacer', replacer, true, false, false);
                            cycleReplacer = J$.N(1014961, 'cycleReplacer', cycleReplacer, true, false, false);
                            J$.N(1014969, 'stack', stack, false, false, false);
                            J$.N(1014977, 'keys', keys, false, false, false);
                            var stack = J$.W(1014305, 'stack', J$.T(1014289, [], 10, false), stack, false, false), keys = J$.W(1014313, 'keys', J$.T(1014297, [], 10, false), keys, false, false);
                            if (J$.C(59792, J$.B(158330, '==', J$.R(1014321, 'cycleReplacer', cycleReplacer, false, false), J$.T(1014329, null, 25, false))))
                                cycleReplacer = J$.W(1014513, 'cycleReplacer', J$.T(1014505, function cycleReplacer(key, value) {
                                    jalangiLabel1:
                                        while (true) {
                                            try {
                                                J$.Fe(1014473, arguments.callee, this, arguments);
                                                arguments = J$.N(1014481, 'arguments', arguments, true, false, false);
                                                key = J$.N(1014489, 'key', key, true, false, false);
                                                value = J$.N(1014497, 'value', value, true, false, false);
                                                if (J$.C(59784, J$.B(158338, '===', J$.G(1014353, J$.R(1014337, 'stack', stack, false, false), J$.T(1014345, 0, 22, false)), J$.R(1014361, 'value', value, false, false))))
                                                    return J$.Rt(1014377, J$.T(1014369, '[Circular ~]', 21, false));
                                                return J$.Rt(1014465, J$.B(158354, '+', J$.B(158346, '+', J$.T(1014385, '[Circular ~.', 21, false), J$.M(1014449, J$.M(1014433, J$.R(1014393, 'keys', keys, false, false), 'slice', false)(J$.T(1014401, 0, 22, false), J$.M(1014425, J$.R(1014409, 'stack', stack, false, false), 'indexOf', false)(J$.R(1014417, 'value', value, false, false))), 'join', false)(J$.T(1014441, '.', 21, false))), J$.T(1014457, ']', 21, false)));
                                            } catch (J$e) {
                                                J$.Ex(1015041, J$e);
                                            } finally {
                                                if (J$.Fr(1015049))
                                                    continue jalangiLabel1;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false), cycleReplacer, false, false);
                            return J$.Rt(1014929, J$.T(1014921, function (key, value) {
                                jalangiLabel2:
                                    while (true) {
                                        try {
                                            J$.Fe(1014881, arguments.callee, this, arguments);
                                            arguments = J$.N(1014889, 'arguments', arguments, true, false, false);
                                            key = J$.N(1014897, 'key', key, true, false, false);
                                            value = J$.N(1014905, 'value', value, true, false, false);
                                            J$.N(1014913, 'thisPos', thisPos, false, false, false);
                                            if (J$.C(59824, J$.B(158362, '>', J$.G(1014529, J$.R(1014521, 'stack', stack, false, false), 'length'), J$.T(1014537, 0, 22, false)))) {
                                                var thisPos = J$.W(1014569, 'thisPos', J$.M(1014561, J$.R(1014545, 'stack', stack, false, false), 'indexOf', false)(J$.R(1014553, 'this', this, false, false)), thisPos, false, false);
                                                J$.C(59800, J$.U(158370, '~', J$.R(1014577, 'thisPos', thisPos, false, false))) ? J$.M(1014609, J$.R(1014585, 'stack', stack, false, false), 'splice', false)(J$.B(158378, '+', J$.R(1014593, 'thisPos', thisPos, false, false), J$.T(1014601, 1, 22, false))) : J$.M(1014633, J$.R(1014617, 'stack', stack, false, false), 'push', false)(J$.R(1014625, 'this', this, false, false));
                                                J$.C(59808, J$.U(158386, '~', J$.R(1014641, 'thisPos', thisPos, false, false))) ? J$.M(1014681, J$.R(1014649, 'keys', keys, false, false), 'splice', false)(J$.R(1014657, 'thisPos', thisPos, false, false), J$.T(1014665, Infinity, 22, false), J$.R(1014673, 'key', key, false, false)) : J$.M(1014705, J$.R(1014689, 'keys', keys, false, false), 'push', false)(J$.R(1014697, 'key', key, false, false));
                                                if (J$.C(59816, J$.U(158394, '~', J$.M(1014729, J$.R(1014713, 'stack', stack, false, false), 'indexOf', false)(J$.R(1014721, 'value', value, false, false)))))
                                                    value = J$.W(1014777, 'value', J$.M(1014769, J$.R(1014737, 'cycleReplacer', cycleReplacer, false, false), 'call', false)(J$.R(1014745, 'this', this, false, false), J$.R(1014753, 'key', key, false, false), J$.R(1014761, 'value', value, false, false)), value, false, false);
                                            } else
                                                J$.M(1014801, J$.R(1014785, 'stack', stack, false, false), 'push', false)(J$.R(1014793, 'value', value, false, false));
                                            return J$.Rt(1014873, J$.C(59832, J$.B(158402, '==', J$.R(1014809, 'replacer', replacer, false, false), J$.T(1014817, null, 25, false))) ? J$.R(1014825, 'value', value, false, false) : J$.M(1014865, J$.R(1014833, 'replacer', replacer, false, false), 'call', false)(J$.R(1014841, 'this', this, false, false), J$.R(1014849, 'key', key, false, false), J$.R(1014857, 'value', value, false, false)));
                                        } catch (J$e) {
                                            J$.Ex(1015057, J$e);
                                        } finally {
                                            if (J$.Fr(1015065))
                                                continue jalangiLabel2;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                        } catch (J$e) {
                            J$.Ex(1015073, J$e);
                        } finally {
                            if (J$.Fr(1015081))
                                continue jalangiLabel3;
                            else
                                return J$.Ra();
                        }
                    }
            }
            stringify = J$.N(1015001, 'stringify', J$.T(1014993, stringify, 12, false), true, false, false);
            serializer = J$.N(1015017, 'serializer', J$.T(1015009, serializer, 12, false), true, false, false);
            J$.T(1014009, 'use strict', 21, false);
            J$.F(1014033, J$.I(typeof require === 'undefined' ? require = J$.R(1014017, 'require', undefined, true, true) : require = J$.R(1014017, 'require', require, true, true)), false)(J$.T(1014025, 'core-js/modules/es.array.index-of', 21, false));
            J$.F(1014057, J$.I(typeof require === 'undefined' ? require = J$.R(1014041, 'require', undefined, true, true) : require = J$.R(1014041, 'require', require, true, true)), false)(J$.T(1014049, 'core-js/modules/es.array.join', 21, false));
            J$.F(1014081, J$.I(typeof require === 'undefined' ? require = J$.R(1014065, 'require', undefined, true, true) : require = J$.R(1014065, 'require', require, true, true)), false)(J$.T(1014073, 'core-js/modules/es.array.slice', 21, false));
            J$.F(1014105, J$.I(typeof require === 'undefined' ? require = J$.R(1014089, 'require', undefined, true, true) : require = J$.R(1014089, 'require', require, true, true)), false)(J$.T(1014097, 'core-js/modules/es.array.splice', 21, false));
            exports = J$.W(1014137, 'exports', J$.P(1014129, J$.I(typeof module === 'undefined' ? module = J$.R(1014113, 'module', undefined, true, true) : module = J$.R(1014113, 'module', module, true, true)), 'exports', J$.R(1014121, 'stringify', stringify, false, true)), J$.I(typeof exports === 'undefined' ? undefined : exports), true, true);
            J$.P(1014161, J$.I(typeof exports === 'undefined' ? exports = J$.R(1014145, 'exports', undefined, true, true) : exports = J$.R(1014145, 'exports', exports, true, true)), 'getSerialize', J$.R(1014153, 'serializer', serializer, false, true));
        } catch (J$e) {
            J$.Ex(1015089, J$e);
        } finally {
            if (J$.Sr(1015097))
                continue jalangiLabel4;
            else
                break jalangiLabel4;
        }
    }
// JALANGI DO NOT INSTRUMENT

