J$.noInstrEval = false;
jalangiLabel9:
    while (true) {
        try {
            J$.Se(1321033, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestCoinBasePro/node_modules/request/lib/multipart.js');
            function Multipart(request) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(1318953, arguments.callee, this, arguments);
                            arguments = J$.N(1318961, 'arguments', arguments, true, false, false);
                            request = J$.N(1318969, 'request', request, true, false, false);
                            J$.P(1318865, J$.R(1318849, 'this', this, false, false), 'request', J$.R(1318857, 'request', request, false, false));
                            J$.P(1318897, J$.R(1318873, 'this', this, false, false), 'boundary', J$.F(1318889, J$.R(1318881, 'uuid', uuid, false, true), false)());
                            J$.P(1318921, J$.R(1318905, 'this', this, false, false), 'chunked', J$.T(1318913, false, 23, false));
                            J$.P(1318945, J$.R(1318929, 'this', this, false, false), 'body', J$.T(1318937, null, 25, false));
                        } catch (J$e) {
                            J$.Ex(1321089, J$e);
                        } finally {
                            if (J$.Fr(1321097))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(1321041, 'uuid', uuid, false, false, false);
            J$.N(1321049, 'CombinedStream', CombinedStream, false, false, false);
            J$.N(1321057, 'isstream', isstream, false, false, false);
            J$.N(1321065, 'Buffer', Buffer, false, false, false);
            Multipart = J$.N(1321081, 'Multipart', J$.T(1321073, Multipart, 12, false), true, false, false);
            J$.T(1318489, 'use strict', 21, false);
            J$.F(1318513, J$.I(typeof require === 'undefined' ? require = J$.R(1318497, 'require', undefined, true, true) : require = J$.R(1318497, 'require', require, true, true)), false)(J$.T(1318505, 'core-js/modules/es.array.for-each', 21, false));
            J$.F(1318537, J$.I(typeof require === 'undefined' ? require = J$.R(1318521, 'require', undefined, true, true) : require = J$.R(1318521, 'require', require, true, true)), false)(J$.T(1318529, 'core-js/modules/es.array.index-of', 21, false));
            J$.F(1318561, J$.I(typeof require === 'undefined' ? require = J$.R(1318545, 'require', undefined, true, true) : require = J$.R(1318545, 'require', require, true, true)), false)(J$.T(1318553, 'core-js/modules/es.date.to-string', 21, false));
            J$.F(1318585, J$.I(typeof require === 'undefined' ? require = J$.R(1318569, 'require', undefined, true, true) : require = J$.R(1318569, 'require', require, true, true)), false)(J$.T(1318577, 'core-js/modules/es.object.keys', 21, false));
            J$.F(1318609, J$.I(typeof require === 'undefined' ? require = J$.R(1318593, 'require', undefined, true, true) : require = J$.R(1318593, 'require', require, true, true)), false)(J$.T(1318601, 'core-js/modules/es.object.to-string', 21, false));
            J$.F(1318633, J$.I(typeof require === 'undefined' ? require = J$.R(1318617, 'require', undefined, true, true) : require = J$.R(1318617, 'require', require, true, true)), false)(J$.T(1318625, 'core-js/modules/es.regexp.exec', 21, false));
            J$.F(1318657, J$.I(typeof require === 'undefined' ? require = J$.R(1318641, 'require', undefined, true, true) : require = J$.R(1318641, 'require', require, true, true)), false)(J$.T(1318649, 'core-js/modules/es.regexp.to-string', 21, false));
            J$.F(1318681, J$.I(typeof require === 'undefined' ? require = J$.R(1318665, 'require', undefined, true, true) : require = J$.R(1318665, 'require', require, true, true)), false)(J$.T(1318673, 'core-js/modules/es.string.replace', 21, false));
            J$.F(1318705, J$.I(typeof require === 'undefined' ? require = J$.R(1318689, 'require', undefined, true, true) : require = J$.R(1318689, 'require', require, true, true)), false)(J$.T(1318697, 'core-js/modules/web.dom-collections.for-each', 21, false));
            var uuid = J$.W(1318737, 'uuid', J$.F(1318729, J$.I(typeof require === 'undefined' ? require = J$.R(1318713, 'require', undefined, true, true) : require = J$.R(1318713, 'require', require, true, true)), false)(J$.T(1318721, 'uuid/v4', 21, false)), uuid, false, true);
            var CombinedStream = J$.W(1318769, 'CombinedStream', J$.F(1318761, J$.I(typeof require === 'undefined' ? require = J$.R(1318745, 'require', undefined, true, true) : require = J$.R(1318745, 'require', require, true, true)), false)(J$.T(1318753, 'combined-stream', 21, false)), CombinedStream, false, true);
            var isstream = J$.W(1318801, 'isstream', J$.F(1318793, J$.I(typeof require === 'undefined' ? require = J$.R(1318777, 'require', undefined, true, true) : require = J$.R(1318777, 'require', require, true, true)), false)(J$.T(1318785, 'isstream', 21, false)), isstream, false, true);
            var Buffer = J$.W(1318841, 'Buffer', J$.G(1318833, J$.F(1318825, J$.I(typeof require === 'undefined' ? require = J$.R(1318809, 'require', undefined, true, true) : require = J$.R(1318809, 'require', require, true, true)), false)(J$.T(1318817, 'safe-buffer', 21, false)), 'Buffer'), Buffer, false, true);
            J$.P(1319489, J$.G(1318985, J$.R(1318977, 'Multipart', Multipart, false, true), 'prototype'), 'isChunked', J$.T(1319481, function (options) {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(1319433, arguments.callee, this, arguments);
                            arguments = J$.N(1319441, 'arguments', arguments, true, false, false);
                            options = J$.N(1319449, 'options', options, true, false, false);
                            J$.N(1319457, 'self', self, false, false, false);
                            J$.N(1319465, 'chunked', chunked, false, false, false);
                            J$.N(1319473, 'parts', parts, false, false, false);
                            var self = J$.W(1319001, 'self', J$.R(1318993, 'this', this, false, false), self, false, false);
                            var chunked = J$.W(1319017, 'chunked', J$.T(1319009, false, 23, false), chunked, false, false);
                            var parts = J$.W(1319049, 'parts', J$.C(68248, J$.G(1319033, J$.R(1319025, 'options', options, false, false), 'data')) ? J$._() : J$.R(1319041, 'options', options, false, false), parts, false, false);
                            if (J$.C(68256, J$.U(172842, '!', J$.G(1319065, J$.R(1319057, 'parts', parts, false, false), 'forEach')))) {
                                J$.M(1319121, J$.G(1319081, J$.R(1319073, 'self', self, false, false), 'request'), 'emit', false)(J$.T(1319089, 'error', 21, false), J$.F(1319113, J$.I(typeof Error === 'undefined' ? Error = J$.R(1319097, 'Error', undefined, true, true) : Error = J$.R(1319097, 'Error', Error, true, true)), true)(J$.T(1319105, 'Argument error, options.multipart.', 21, false)));
                            }
                            if (J$.C(68264, J$.B(172850, '!==', J$.G(1319137, J$.R(1319129, 'options', options, false, false), 'chunked'), J$.T(1319145, undefined, 24, false)))) {
                                chunked = J$.W(1319169, 'chunked', J$.G(1319161, J$.R(1319153, 'options', options, false, false), 'chunked'), chunked, false, false);
                            }
                            if (J$.C(68272, J$.B(172858, '===', J$.M(1319201, J$.G(1319185, J$.R(1319177, 'self', self, false, false), 'request'), 'getHeader', false)(J$.T(1319193, 'transfer-encoding', 21, false)), J$.T(1319209, 'chunked', 21, false)))) {
                                chunked = J$.W(1319225, 'chunked', J$.T(1319217, true, 23, false), chunked, false, false);
                            }
                            if (J$.C(68296, J$.U(172866, '!', J$.R(1319233, 'chunked', chunked, false, false)))) {
                                J$.M(1319409, J$.R(1319241, 'parts', parts, false, false), 'forEach', false)(J$.T(1319401, function (part) {
                                    jalangiLabel1:
                                        while (true) {
                                            try {
                                                J$.Fe(1319377, arguments.callee, this, arguments);
                                                arguments = J$.N(1319385, 'arguments', arguments, true, false, false);
                                                part = J$.N(1319393, 'part', part, true, false, false);
                                                if (J$.C(68280, J$.B(172882, '===', J$.U(172874, 'typeof', J$.G(1319257, J$.R(1319249, 'part', part, false, false), 'body')), J$.T(1319265, 'undefined', 21, false)))) {
                                                    J$.M(1319321, J$.G(1319281, J$.R(1319273, 'self', self, false, false), 'request'), 'emit', false)(J$.T(1319289, 'error', 21, false), J$.F(1319313, J$.I(typeof Error === 'undefined' ? Error = J$.R(1319297, 'Error', undefined, true, true) : Error = J$.R(1319297, 'Error', Error, true, true)), true)(J$.T(1319305, 'Body attribute missing in multipart.', 21, false)));
                                                }
                                                if (J$.C(68288, J$.F(1319353, J$.R(1319329, 'isstream', isstream, false, true), false)(J$.G(1319345, J$.R(1319337, 'part', part, false, false), 'body')))) {
                                                    chunked = J$.W(1319369, 'chunked', J$.T(1319361, true, 23, false), chunked, false, false);
                                                }
                                            } catch (J$e) {
                                                J$.Ex(1321105, J$e);
                                            } finally {
                                                if (J$.Fr(1321113))
                                                    continue jalangiLabel1;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false));
                            }
                            return J$.Rt(1319425, J$.R(1319417, 'chunked', chunked, false, false));
                        } catch (J$e) {
                            J$.Ex(1321121, J$e);
                        } finally {
                            if (J$.Fr(1321129))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(1319937, J$.G(1319505, J$.R(1319497, 'Multipart', Multipart, false, true), 'prototype'), 'setHeaders', J$.T(1319929, function (chunked) {
                jalangiLabel3:
                    while (true) {
                        try {
                            J$.Fe(1319889, arguments.callee, this, arguments);
                            arguments = J$.N(1319897, 'arguments', arguments, true, false, false);
                            chunked = J$.N(1319905, 'chunked', chunked, true, false, false);
                            J$.N(1319913, 'self', self, false, false, false);
                            J$.N(1319921, 'header', header, false, false, false);
                            var self = J$.W(1319521, 'self', J$.R(1319513, 'this', this, false, false), self, false, false);
                            if (J$.C(68312, J$.C(68304, J$.R(1319529, 'chunked', chunked, false, false)) ? J$.U(172890, '!', J$.M(1319561, J$.G(1319545, J$.R(1319537, 'self', self, false, false), 'request'), 'hasHeader', false)(J$.T(1319553, 'transfer-encoding', 21, false))) : J$._())) {
                                J$.M(1319601, J$.G(1319577, J$.R(1319569, 'self', self, false, false), 'request'), 'setHeader', false)(J$.T(1319585, 'transfer-encoding', 21, false), J$.T(1319593, 'chunked', 21, false));
                            }
                            var header = J$.W(1319641, 'header', J$.M(1319633, J$.G(1319617, J$.R(1319609, 'self', self, false, false), 'request'), 'getHeader', false)(J$.T(1319625, 'content-type', 21, false)), header, false, false);
                            if (J$.C(68336, J$.C(68320, J$.U(172898, '!', J$.R(1319649, 'header', header, false, false))) ? J$._() : J$.B(172914, '===', J$.M(1319673, J$.R(1319657, 'header', header, false, false), 'indexOf', false)(J$.T(1319665, 'multipart', 21, false)), J$.U(172906, '-', J$.T(1319681, 1, 22, false))))) {
                                J$.M(1319737, J$.G(1319697, J$.R(1319689, 'self', self, false, false), 'request'), 'setHeader', false)(J$.T(1319705, 'content-type', 21, false), J$.B(172922, '+', J$.T(1319713, 'multipart/related; boundary=', 21, false), J$.G(1319729, J$.R(1319721, 'self', self, false, false), 'boundary')));
                            } else {
                                if (J$.C(68328, J$.B(172938, '!==', J$.M(1319761, J$.R(1319745, 'header', header, false, false), 'indexOf', false)(J$.T(1319753, 'boundary', 21, false)), J$.U(172930, '-', J$.T(1319769, 1, 22, false))))) {
                                    J$.P(1319817, J$.R(1319777, 'self', self, false, false), 'boundary', J$.M(1319809, J$.R(1319785, 'header', header, false, false), 'replace', false)(J$.T(1319793, /.*boundary=([^\s;]+).*/, 14, false), J$.T(1319801, '$1', 21, false)));
                                } else {
                                    J$.M(1319881, J$.G(1319833, J$.R(1319825, 'self', self, false, false), 'request'), 'setHeader', false)(J$.T(1319841, 'content-type', 21, false), J$.B(172954, '+', J$.B(172946, '+', J$.R(1319849, 'header', header, false, false), J$.T(1319857, '; boundary=', 21, false)), J$.G(1319873, J$.R(1319865, 'self', self, false, false), 'boundary')));
                                }
                            }
                        } catch (J$e) {
                            J$.Ex(1321137, J$e);
                        } finally {
                            if (J$.Fr(1321145))
                                continue jalangiLabel3;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(1320745, J$.G(1319953, J$.R(1319945, 'Multipart', Multipart, false, true), 'prototype'), 'build', J$.T(1320737, function (parts, chunked) {
                jalangiLabel7:
                    while (true) {
                        try {
                            J$.Fe(1320673, arguments.callee, this, arguments);
                            function add(part) {
                                jalangiLabel4:
                                    while (true) {
                                        try {
                                            J$.Fe(1320137, arguments.callee, this, arguments);
                                            arguments = J$.N(1320145, 'arguments', arguments, true, false, false);
                                            part = J$.N(1320153, 'part', part, true, false, false);
                                            if (J$.C(68352, J$.B(172970, '===', J$.U(172962, 'typeof', J$.R(1320017, 'part', part, false, false)), J$.T(1320025, 'number', 21, false)))) {
                                                part = J$.W(1320049, 'part', J$.M(1320041, J$.R(1320033, 'part', part, false, false), 'toString', false)(), part, false, false);
                                            }
                                            return J$.Rt(1320129, J$.C(68360, J$.R(1320057, 'chunked', chunked, false, false)) ? J$.M(1320081, J$.R(1320065, 'body', body, false, false), 'append', false)(J$.R(1320073, 'part', part, false, false)) : J$.M(1320121, J$.R(1320089, 'body', body, false, false), 'push', false)(J$.M(1320113, J$.R(1320097, 'Buffer', Buffer, false, true), 'from', false)(J$.R(1320105, 'part', part, false, false))));
                                        } catch (J$e) {
                                            J$.Ex(1321153, J$e);
                                        } finally {
                                            if (J$.Fr(1321161))
                                                continue jalangiLabel4;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }
                            arguments = J$.N(1320681, 'arguments', arguments, true, false, false);
                            parts = J$.N(1320689, 'parts', parts, true, false, false);
                            chunked = J$.N(1320697, 'chunked', chunked, true, false, false);
                            J$.N(1320705, 'self', self, false, false, false);
                            J$.N(1320713, 'body', body, false, false, false);
                            add = J$.N(1320729, 'add', J$.T(1320721, add, 12, false), true, false, false);
                            var self = J$.W(1319969, 'self', J$.R(1319961, 'this', this, false, false), self, false, false);
                            var body = J$.W(1320009, 'body', J$.C(68344, J$.R(1319977, 'chunked', chunked, false, false)) ? J$.F(1319993, J$.R(1319985, 'CombinedStream', CombinedStream, false, true), true)() : J$.T(1320001, [], 10, false), body, false, false);
                            if (J$.C(68368, J$.G(1320177, J$.G(1320169, J$.R(1320161, 'self', self, false, false), 'request'), 'preambleCRLF'))) {
                                J$.F(1320201, J$.R(1320185, 'add', add, false, false), false)(J$.T(1320193, '\r\n', 21, false));
                            }
                            J$.M(1320553, J$.R(1320209, 'parts', parts, false, false), 'forEach', false)(J$.T(1320545, function (part) {
                                jalangiLabel6:
                                    while (true) {
                                        try {
                                            J$.Fe(1320513, arguments.callee, this, arguments);
                                            arguments = J$.N(1320521, 'arguments', arguments, true, false, false);
                                            part = J$.N(1320529, 'part', part, true, false, false);
                                            J$.N(1320537, 'preamble', preamble, false, false, false);
                                            var preamble = J$.W(1320249, 'preamble', J$.B(172986, '+', J$.B(172978, '+', J$.T(1320217, '--', 21, false), J$.G(1320233, J$.R(1320225, 'self', self, false, false), 'boundary')), J$.T(1320241, '\r\n', 21, false)), preamble, false, false);
                                            J$.M(1320401, J$.M(1320273, J$.I(typeof Object === 'undefined' ? Object = J$.R(1320257, 'Object', undefined, true, true) : Object = J$.R(1320257, 'Object', Object, true, true)), 'keys', false)(J$.R(1320265, 'part', part, false, false)), 'forEach', false)(J$.T(1320393, function (key) {
                                                jalangiLabel5:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(1320369, arguments.callee, this, arguments);
                                                            arguments = J$.N(1320377, 'arguments', arguments, true, false, false);
                                                            key = J$.N(1320385, 'key', key, true, false, false);
                                                            if (J$.C(68376, J$.B(172994, '===', J$.R(1320281, 'key', key, false, false), J$.T(1320289, 'body', 21, false)))) {
                                                                return J$.Rt(1320297, undefined);
                                                            }
                                                            preamble = J$.W(1320361, 'preamble', J$.B(173026, '+', J$.R(1320353, 'preamble', preamble, false, false), J$.B(173018, '+', J$.B(173010, '+', J$.B(173002, '+', J$.R(1320305, 'key', key, false, false), J$.T(1320313, ': ', 21, false)), J$.G(1320337, J$.R(1320321, 'part', part, false, false), J$.R(1320329, 'key', key, false, false))), J$.T(1320345, '\r\n', 21, false))), preamble, false, false);
                                                        } catch (J$e) {
                                                            J$.Ex(1321169, J$e);
                                                        } finally {
                                                            if (J$.Fr(1321177))
                                                                continue jalangiLabel5;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false));
                                            preamble = J$.W(1320425, 'preamble', J$.B(173034, '+', J$.R(1320417, 'preamble', preamble, false, false), J$.T(1320409, '\r\n', 21, false)), preamble, false, false);
                                            J$.F(1320449, J$.R(1320433, 'add', add, false, false), false)(J$.R(1320441, 'preamble', preamble, false, false));
                                            J$.F(1320481, J$.R(1320457, 'add', add, false, false), false)(J$.G(1320473, J$.R(1320465, 'part', part, false, false), 'body'));
                                            J$.F(1320505, J$.R(1320489, 'add', add, false, false), false)(J$.T(1320497, '\r\n', 21, false));
                                        } catch (J$e) {
                                            J$.Ex(1321185, J$e);
                                        } finally {
                                            if (J$.Fr(1321193))
                                                continue jalangiLabel6;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            J$.F(1320601, J$.R(1320561, 'add', add, false, false), false)(J$.B(173050, '+', J$.B(173042, '+', J$.T(1320569, '--', 21, false), J$.G(1320585, J$.R(1320577, 'self', self, false, false), 'boundary')), J$.T(1320593, '--', 21, false)));
                            if (J$.C(68384, J$.G(1320625, J$.G(1320617, J$.R(1320609, 'self', self, false, false), 'request'), 'postambleCRLF'))) {
                                J$.F(1320649, J$.R(1320633, 'add', add, false, false), false)(J$.T(1320641, '\r\n', 21, false));
                            }
                            return J$.Rt(1320665, J$.R(1320657, 'body', body, false, false));
                        } catch (J$e) {
                            J$.Ex(1321201, J$e);
                        } finally {
                            if (J$.Fr(1321209))
                                continue jalangiLabel7;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(1321001, J$.G(1320761, J$.R(1320753, 'Multipart', Multipart, false, true), 'prototype'), 'onRequest', J$.T(1320993, function (options) {
                jalangiLabel8:
                    while (true) {
                        try {
                            J$.Fe(1320945, arguments.callee, this, arguments);
                            arguments = J$.N(1320953, 'arguments', arguments, true, false, false);
                            options = J$.N(1320961, 'options', options, true, false, false);
                            J$.N(1320969, 'self', self, false, false, false);
                            J$.N(1320977, 'chunked', chunked, false, false, false);
                            J$.N(1320985, 'parts', parts, false, false, false);
                            var self = J$.W(1320777, 'self', J$.R(1320769, 'this', this, false, false), self, false, false);
                            var chunked = J$.W(1320809, 'chunked', J$.M(1320801, J$.R(1320785, 'self', self, false, false), 'isChunked', false)(J$.R(1320793, 'options', options, false, false)), chunked, false, false);
                            var parts = J$.W(1320841, 'parts', J$.C(68392, J$.G(1320825, J$.R(1320817, 'options', options, false, false), 'data')) ? J$._() : J$.R(1320833, 'options', options, false, false), parts, false, false);
                            J$.M(1320865, J$.R(1320849, 'self', self, false, false), 'setHeaders', false)(J$.R(1320857, 'chunked', chunked, false, false));
                            J$.P(1320889, J$.R(1320873, 'self', self, false, false), 'chunked', J$.R(1320881, 'chunked', chunked, false, false));
                            J$.P(1320937, J$.R(1320897, 'self', self, false, false), 'body', J$.M(1320929, J$.R(1320905, 'self', self, false, false), 'build', false)(J$.R(1320913, 'parts', parts, false, false), J$.R(1320921, 'chunked', chunked, false, false)));
                        } catch (J$e) {
                            J$.Ex(1321217, J$e);
                        } finally {
                            if (J$.Fr(1321225))
                                continue jalangiLabel8;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(1321025, J$.I(typeof exports === 'undefined' ? exports = J$.R(1321009, 'exports', undefined, true, true) : exports = J$.R(1321009, 'exports', exports, true, true)), 'Multipart', J$.R(1321017, 'Multipart', Multipart, false, true));
        } catch (J$e) {
            J$.Ex(1321233, J$e);
        } finally {
            if (J$.Sr(1321241))
                continue jalangiLabel9;
            else
                break jalangiLabel9;
        }
    }
// JALANGI DO NOT INSTRUMENT

