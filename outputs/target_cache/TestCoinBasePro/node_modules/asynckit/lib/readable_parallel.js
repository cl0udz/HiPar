J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(535481, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestCoinBasePro/node_modules/asynckit/lib/readable_parallel.js');
            function ReadableParallel(list, iterator, callback) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(535441, arguments.callee, this, arguments);
                            arguments = J$.N(535449, 'arguments', arguments, true, false, false);
                            list = J$.N(535457, 'list', list, true, false, false);
                            iterator = J$.N(535465, 'iterator', iterator, true, false, false);
                            callback = J$.N(535473, 'callback', callback, true, false, false);
                            if (J$.C(35464, J$.U(114818, '!', J$.B(114810, 'instanceof', J$.R(535281, 'this', this, false, false), J$.R(535289, 'ReadableParallel', ReadableParallel, false, true))))) {
                                return J$.Rt(535337, J$.F(535329, J$.R(535297, 'ReadableParallel', ReadableParallel, false, true), true)(J$.R(535305, 'list', list, false, false), J$.R(535313, 'iterator', iterator, false, false), J$.R(535321, 'callback', callback, false, false)));
                            }
                            J$.M(535385, J$.G(535353, J$.R(535345, 'ReadableParallel', ReadableParallel, false, true), 'super_'), 'call', false)(J$.R(535361, 'this', this, false, false), J$.T(535377, { objectMode: J$.T(535369, true, 23, false) }, 11, false));
                            J$.M(535433, J$.R(535393, 'this', this, false, false), '_start', false)(J$.R(535401, 'parallel', parallel, false, true), J$.R(535409, 'list', list, false, false), J$.R(535417, 'iterator', iterator, false, false), J$.R(535425, 'callback', callback, false, false));
                        } catch (J$e) {
                            J$.Ex(535513, J$e);
                        } finally {
                            if (J$.Fr(535521))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(535489, 'parallel', parallel, false, false, false);
            ReadableParallel = J$.N(535505, 'ReadableParallel', J$.T(535497, ReadableParallel, 12, false), true, false, false);
            J$.T(535217, 'use strict', 21, false);
            var parallel = J$.W(535249, 'parallel', J$.F(535241, J$.I(typeof require === 'undefined' ? require = J$.R(535225, 'require', undefined, true, true) : require = J$.R(535225, 'require', require, true, true)), false)(J$.T(535233, '../parallel.js', 21, false)), parallel, false, true);
            J$.P(535273, J$.I(typeof module === 'undefined' ? module = J$.R(535257, 'module', undefined, true, true) : module = J$.R(535257, 'module', module, true, true)), 'exports', J$.R(535265, 'ReadableParallel', ReadableParallel, false, true));
        } catch (J$e) {
            J$.Ex(535529, J$e);
        } finally {
            if (J$.Sr(535537))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

