J$.noInstrEval = false;
jalangiLabel8:
    while (true) {
        try {
            J$.Se(538137, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestCoinBasePro/node_modules/asynckit/lib/streamify.js');
            function wrapIterator(iterator) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(537297, arguments.callee, this, arguments);
                            arguments = J$.N(537305, 'arguments', arguments, true, false, false);
                            iterator = J$.N(537313, 'iterator', iterator, true, false, false);
                            J$.N(537321, 'stream', stream, false, false, false);
                            var stream = J$.W(536985, 'stream', J$.R(536977, 'this', this, false, false), stream, false, false);
                            return J$.Rt(537289, J$.T(537281, function (item, key, cb) {
                                jalangiLabel0:
                                    while (true) {
                                        try {
                                            J$.Fe(537225, arguments.callee, this, arguments);
                                            arguments = J$.N(537233, 'arguments', arguments, true, false, false);
                                            item = J$.N(537241, 'item', item, true, false, false);
                                            key = J$.N(537249, 'key', key, true, false, false);
                                            cb = J$.N(537257, 'cb', cb, true, false, false);
                                            J$.N(537265, 'aborter', aborter, false, false, false);
                                            J$.N(537273, 'wrappedCb', wrappedCb, false, false, false);
                                            var aborter, wrappedCb = J$.W(537049, 'wrappedCb', J$.F(537041, J$.R(536993, 'async', async, false, true), false)(J$.M(537033, J$.R(537001, 'wrapIteratorCallback', wrapIteratorCallback, false, true), 'call', false)(J$.R(537009, 'stream', stream, false, false), J$.R(537017, 'cb', cb, false, false), J$.R(537025, 'key', key, false, false))), wrappedCb, false, false);
                                            J$.P(537089, J$.G(537065, J$.R(537057, 'stream', stream, false, false), 'jobs'), J$.R(537073, 'key', key, false, false), J$.R(537081, 'wrappedCb', wrappedCb, false, false));
                                            if (J$.C(35536, J$.B(114866, '==', J$.G(537105, J$.R(537097, 'iterator', iterator, false, false), 'length'), J$.T(537113, 2, 22, false)))) {
                                                aborter = J$.W(537153, 'aborter', J$.F(537145, J$.R(537121, 'iterator', iterator, false, false), false)(J$.R(537129, 'item', item, false, false), J$.R(537137, 'wrappedCb', wrappedCb, false, false)), aborter, false, false);
                                            } else {
                                                aborter = J$.W(537201, 'aborter', J$.F(537193, J$.R(537161, 'iterator', iterator, false, false), false)(J$.R(537169, 'item', item, false, false), J$.R(537177, 'key', key, false, false), J$.R(537185, 'wrappedCb', wrappedCb, false, false)), aborter, false, false);
                                            }
                                            return J$.Rt(537217, J$.R(537209, 'aborter', aborter, false, false));
                                        } catch (J$e) {
                                            J$.Ex(538233, J$e);
                                        } finally {
                                            if (J$.Fr(538241))
                                                continue jalangiLabel0;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                        } catch (J$e) {
                            J$.Ex(538249, J$e);
                        } finally {
                            if (J$.Fr(538257))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function wrapCallback(callback) {
                jalangiLabel3:
                    while (true) {
                        try {
                            J$.Fe(537465, arguments.callee, this, arguments);
                            arguments = J$.N(537473, 'arguments', arguments, true, false, false);
                            callback = J$.N(537481, 'callback', callback, true, false, false);
                            J$.N(537489, 'stream', stream, false, false, false);
                            J$.N(537497, 'wrapped', wrapped, false, false, false);
                            var stream = J$.W(537337, 'stream', J$.R(537329, 'this', this, false, false), stream, false, false);
                            var wrapped = J$.W(537441, 'wrapped', J$.T(537433, function wrapped(error, result) {
                                jalangiLabel2:
                                    while (true) {
                                        try {
                                            J$.Fe(537401, arguments.callee, this, arguments);
                                            arguments = J$.N(537409, 'arguments', arguments, true, false, false);
                                            error = J$.N(537417, 'error', error, true, false, false);
                                            result = J$.N(537425, 'result', result, true, false, false);
                                            return J$.Rt(537393, J$.M(537385, J$.R(537345, 'finisher', finisher, false, true), 'call', false)(J$.R(537353, 'stream', stream, false, false), J$.R(537361, 'error', error, false, false), J$.R(537369, 'result', result, false, false), J$.R(537377, 'callback', callback, false, false)));
                                        } catch (J$e) {
                                            J$.Ex(538265, J$e);
                                        } finally {
                                            if (J$.Fr(538273))
                                                continue jalangiLabel2;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false), wrapped, false, false);
                            return J$.Rt(537457, J$.R(537449, 'wrapped', wrapped, false, false));
                        } catch (J$e) {
                            J$.Ex(538281, J$e);
                        } finally {
                            if (J$.Fr(538289))
                                continue jalangiLabel3;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function wrapIteratorCallback(callback, key) {
                jalangiLabel5:
                    while (true) {
                        try {
                            J$.Fe(537729, arguments.callee, this, arguments);
                            arguments = J$.N(537737, 'arguments', arguments, true, false, false);
                            callback = J$.N(537745, 'callback', callback, true, false, false);
                            key = J$.N(537753, 'key', key, true, false, false);
                            J$.N(537761, 'stream', stream, false, false, false);
                            var stream = J$.W(537513, 'stream', J$.R(537505, 'this', this, false, false), stream, false, false);
                            return J$.Rt(537721, J$.T(537713, function (error, output) {
                                jalangiLabel4:
                                    while (true) {
                                        try {
                                            J$.Fe(537681, arguments.callee, this, arguments);
                                            arguments = J$.N(537689, 'arguments', arguments, true, false, false);
                                            error = J$.N(537697, 'error', error, true, false, false);
                                            output = J$.N(537705, 'output', output, true, false, false);
                                            if (J$.C(35544, J$.U(114882, '!', J$.B(114874, 'in', J$.R(537521, 'key', key, false, false), J$.G(537537, J$.R(537529, 'stream', stream, false, false), 'jobs'))))) {
                                                J$.F(537569, J$.R(537545, 'callback', callback, false, false), false)(J$.R(537553, 'error', error, false, false), J$.R(537561, 'output', output, false, false));
                                                return J$.Rt(537577, undefined);
                                            }
                                            J$.B(114890, 'delete', J$.G(537593, J$.R(537585, 'stream', stream, false, false), 'jobs'), J$.R(537601, 'key', key, false, false));
                                            return J$.Rt(537673, J$.M(537665, J$.R(537609, 'streamer', streamer, false, true), 'call', false)(J$.R(537617, 'stream', stream, false, false), J$.R(537625, 'error', error, false, false), J$.T(537649, {
                                                key: J$.R(537633, 'key', key, false, false),
                                                value: J$.R(537641, 'output', output, false, false)
                                            }, 11, false), J$.R(537657, 'callback', callback, false, false)));
                                        } catch (J$e) {
                                            J$.Ex(538297, J$e);
                                        } finally {
                                            if (J$.Fr(538305))
                                                continue jalangiLabel4;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                        } catch (J$e) {
                            J$.Ex(538313, J$e);
                        } finally {
                            if (J$.Fr(538321))
                                continue jalangiLabel5;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function streamer(error, output, callback) {
                jalangiLabel6:
                    while (true) {
                        try {
                            J$.Fe(537993, arguments.callee, this, arguments);
                            arguments = J$.N(538001, 'arguments', arguments, true, false, false);
                            error = J$.N(538009, 'error', error, true, false, false);
                            output = J$.N(538017, 'output', output, true, false, false);
                            callback = J$.N(538025, 'callback', callback, true, false, false);
                            if (J$.C(35568, J$.C(35552, J$.R(537769, 'error', error, false, false)) ? J$.U(114898, '!', J$.G(537785, J$.R(537777, 'this', this, false, false), 'error')) : J$._())) {
                                J$.P(537809, J$.R(537793, 'this', this, false, false), 'error', J$.R(537801, 'error', error, false, false));
                                J$.M(537825, J$.R(537817, 'this', this, false, false), 'pause', false)();
                                J$.M(537857, J$.R(537833, 'this', this, false, false), 'emit', false)(J$.T(537841, 'error', 21, false), J$.R(537849, 'error', error, false, false));
                                J$.F(537905, J$.R(537865, 'callback', callback, false, false), false)(J$.R(537873, 'error', error, false, false), J$.C(35560, J$.R(537881, 'output', output, false, false)) ? J$.G(537897, J$.R(537889, 'output', output, false, false), 'value') : J$._());
                                return J$.Rt(537913, undefined);
                            }
                            J$.M(537937, J$.R(537921, 'this', this, false, false), 'push', false)(J$.R(537929, 'output', output, false, false));
                            J$.F(537985, J$.R(537945, 'callback', callback, false, false), false)(J$.R(537953, 'error', error, false, false), J$.C(35576, J$.R(537961, 'output', output, false, false)) ? J$.G(537977, J$.R(537969, 'output', output, false, false), 'value') : J$._());
                        } catch (J$e) {
                            J$.Ex(538329, J$e);
                        } finally {
                            if (J$.Fr(538337))
                                continue jalangiLabel6;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function finisher(error, output, callback) {
                jalangiLabel7:
                    while (true) {
                        try {
                            J$.Fe(538097, arguments.callee, this, arguments);
                            arguments = J$.N(538105, 'arguments', arguments, true, false, false);
                            error = J$.N(538113, 'error', error, true, false, false);
                            output = J$.N(538121, 'output', output, true, false, false);
                            callback = J$.N(538129, 'callback', callback, true, false, false);
                            if (J$.C(35584, J$.U(114906, '!', J$.R(538033, 'error', error, false, false)))) {
                                J$.M(538057, J$.R(538041, 'this', this, false, false), 'push', false)(J$.T(538049, null, 25, false));
                            }
                            J$.F(538089, J$.R(538065, 'callback', callback, false, false), false)(J$.R(538073, 'error', error, false, false), J$.R(538081, 'output', output, false, false));
                        } catch (J$e) {
                            J$.Ex(538345, J$e);
                        } finally {
                            if (J$.Fr(538353))
                                continue jalangiLabel7;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(538145, 'async', async, false, false, false);
            wrapIterator = J$.N(538161, 'wrapIterator', J$.T(538153, wrapIterator, 12, false), true, false, false);
            wrapCallback = J$.N(538177, 'wrapCallback', J$.T(538169, wrapCallback, 12, false), true, false, false);
            wrapIteratorCallback = J$.N(538193, 'wrapIteratorCallback', J$.T(538185, wrapIteratorCallback, 12, false), true, false, false);
            streamer = J$.N(538209, 'streamer', J$.T(538201, streamer, 12, false), true, false, false);
            finisher = J$.N(538225, 'finisher', J$.T(538217, finisher, 12, false), true, false, false);
            J$.T(536897, 'use strict', 21, false);
            var async = J$.W(536929, 'async', J$.F(536921, J$.I(typeof require === 'undefined' ? require = J$.R(536905, 'require', undefined, true, true) : require = J$.R(536905, 'require', require, true, true)), false)(J$.T(536913, './async.js', 21, false)), async, false, true);
            J$.P(536969, J$.I(typeof module === 'undefined' ? module = J$.R(536937, 'module', undefined, true, true) : module = J$.R(536937, 'module', module, true, true)), 'exports', J$.T(536961, {
                iterator: J$.R(536945, 'wrapIterator', wrapIterator, false, true),
                callback: J$.R(536953, 'wrapCallback', wrapCallback, false, true)
            }, 11, false));
        } catch (J$e) {
            J$.Ex(538361, J$e);
        } finally {
            if (J$.Sr(538369))
                continue jalangiLabel8;
            else
                break jalangiLabel8;
        }
    }
// JALANGI DO NOT INSTRUMENT

