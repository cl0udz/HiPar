J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(535809, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestCoinBasePro/node_modules/asynckit/lib/readable_serial.js');
            function ReadableSerial(list, iterator, callback) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(535769, arguments.callee, this, arguments);
                            arguments = J$.N(535777, 'arguments', arguments, true, false, false);
                            list = J$.N(535785, 'list', list, true, false, false);
                            iterator = J$.N(535793, 'iterator', iterator, true, false, false);
                            callback = J$.N(535801, 'callback', callback, true, false, false);
                            if (J$.C(35472, J$.U(114834, '!', J$.B(114826, 'instanceof', J$.R(535609, 'this', this, false, false), J$.R(535617, 'ReadableSerial', ReadableSerial, false, true))))) {
                                return J$.Rt(535665, J$.F(535657, J$.R(535625, 'ReadableSerial', ReadableSerial, false, true), true)(J$.R(535633, 'list', list, false, false), J$.R(535641, 'iterator', iterator, false, false), J$.R(535649, 'callback', callback, false, false)));
                            }
                            J$.M(535713, J$.G(535681, J$.R(535673, 'ReadableSerial', ReadableSerial, false, true), 'super_'), 'call', false)(J$.R(535689, 'this', this, false, false), J$.T(535705, { objectMode: J$.T(535697, true, 23, false) }, 11, false));
                            J$.M(535761, J$.R(535721, 'this', this, false, false), '_start', false)(J$.R(535729, 'serial', serial, false, true), J$.R(535737, 'list', list, false, false), J$.R(535745, 'iterator', iterator, false, false), J$.R(535753, 'callback', callback, false, false));
                        } catch (J$e) {
                            J$.Ex(535841, J$e);
                        } finally {
                            if (J$.Fr(535849))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(535817, 'serial', serial, false, false, false);
            ReadableSerial = J$.N(535833, 'ReadableSerial', J$.T(535825, ReadableSerial, 12, false), true, false, false);
            J$.T(535545, 'use strict', 21, false);
            var serial = J$.W(535577, 'serial', J$.F(535569, J$.I(typeof require === 'undefined' ? require = J$.R(535553, 'require', undefined, true, true) : require = J$.R(535553, 'require', require, true, true)), false)(J$.T(535561, '../serial.js', 21, false)), serial, false, true);
            J$.P(535601, J$.I(typeof module === 'undefined' ? module = J$.R(535585, 'module', undefined, true, true) : module = J$.R(535585, 'module', module, true, true)), 'exports', J$.R(535593, 'ReadableSerial', ReadableSerial, false, true));
        } catch (J$e) {
            J$.Ex(535857, J$e);
        } finally {
            if (J$.Sr(535865))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

