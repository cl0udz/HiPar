J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(536241, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestCoinBasePro/node_modules/asynckit/lib/readable_serial_ordered.js');
            function ReadableSerialOrdered(list, iterator, sortMethod, callback) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(536193, arguments.callee, this, arguments);
                            arguments = J$.N(536201, 'arguments', arguments, true, false, false);
                            list = J$.N(536209, 'list', list, true, false, false);
                            iterator = J$.N(536217, 'iterator', iterator, true, false, false);
                            sortMethod = J$.N(536225, 'sortMethod', sortMethod, true, false, false);
                            callback = J$.N(536233, 'callback', callback, true, false, false);
                            if (J$.C(35480, J$.U(114850, '!', J$.B(114842, 'instanceof', J$.R(536017, 'this', this, false, false), J$.R(536025, 'ReadableSerialOrdered', ReadableSerialOrdered, false, true))))) {
                                return J$.Rt(536081, J$.F(536073, J$.R(536033, 'ReadableSerialOrdered', ReadableSerialOrdered, false, true), true)(J$.R(536041, 'list', list, false, false), J$.R(536049, 'iterator', iterator, false, false), J$.R(536057, 'sortMethod', sortMethod, false, false), J$.R(536065, 'callback', callback, false, false)));
                            }
                            J$.M(536129, J$.G(536097, J$.R(536089, 'ReadableSerialOrdered', ReadableSerialOrdered, false, true), 'super_'), 'call', false)(J$.R(536105, 'this', this, false, false), J$.T(536121, { objectMode: J$.T(536113, true, 23, false) }, 11, false));
                            J$.M(536185, J$.R(536137, 'this', this, false, false), '_start', false)(J$.R(536145, 'serialOrdered', serialOrdered, false, true), J$.R(536153, 'list', list, false, false), J$.R(536161, 'iterator', iterator, false, false), J$.R(536169, 'sortMethod', sortMethod, false, false), J$.R(536177, 'callback', callback, false, false));
                        } catch (J$e) {
                            J$.Ex(536273, J$e);
                        } finally {
                            if (J$.Fr(536281))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(536249, 'serialOrdered', serialOrdered, false, false, false);
            ReadableSerialOrdered = J$.N(536265, 'ReadableSerialOrdered', J$.T(536257, ReadableSerialOrdered, 12, false), true, false, false);
            J$.T(535873, 'use strict', 21, false);
            var serialOrdered = J$.W(535905, 'serialOrdered', J$.F(535897, J$.I(typeof require === 'undefined' ? require = J$.R(535881, 'require', undefined, true, true) : require = J$.R(535881, 'require', require, true, true)), false)(J$.T(535889, '../serialOrdered.js', 21, false)), serialOrdered, false, true);
            J$.P(535929, J$.I(typeof module === 'undefined' ? module = J$.R(535913, 'module', undefined, true, true) : module = J$.R(535913, 'module', module, true, true)), 'exports', J$.R(535921, 'ReadableSerialOrdered', ReadableSerialOrdered, false, true));
            J$.P(535969, J$.G(535945, J$.I(typeof module === 'undefined' ? module = J$.R(535937, 'module', undefined, true, true) : module = J$.R(535937, 'module', module, true, true)), 'exports'), 'ascending', J$.G(535961, J$.R(535953, 'serialOrdered', serialOrdered, false, true), 'ascending'));
            J$.P(536009, J$.G(535985, J$.I(typeof module === 'undefined' ? module = J$.R(535977, 'module', undefined, true, true) : module = J$.R(535977, 'module', module, true, true)), 'exports'), 'descending', J$.G(536001, J$.R(535993, 'serialOrdered', serialOrdered, false, true), 'descending'));
        } catch (J$e) {
            J$.Ex(536289, J$e);
        } finally {
            if (J$.Sr(536297))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

