J$.noInstrEval = false;
jalangiLabel4:
    while (true) {
        try {
            J$.Se(540489, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestCoinBasePro/node_modules/asynckit/serialOrdered.js');
            function serialOrdered(list, iterator, sortMethod, callback) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(540257, arguments.callee, this, arguments);
                            arguments = J$.N(540265, 'arguments', arguments, true, false, false);
                            list = J$.N(540273, 'list', list, true, false, false);
                            iterator = J$.N(540281, 'iterator', iterator, true, false, false);
                            sortMethod = J$.N(540289, 'sortMethod', sortMethod, true, false, false);
                            callback = J$.N(540297, 'callback', callback, true, false, false);
                            J$.N(540305, 'state', state, false, false, false);
                            var state = J$.W(539913, 'state', J$.F(539905, J$.R(539881, 'initState', initState, false, true), false)(J$.R(539889, 'list', list, false, false), J$.R(539897, 'sortMethod', sortMethod, false, false)), state, false, false);
                            J$.F(540209, J$.R(539921, 'iterate', iterate, false, true), false)(J$.R(539929, 'list', list, false, false), J$.R(539937, 'iterator', iterator, false, false), J$.R(539945, 'state', state, false, false), J$.T(540201, function iteratorHandler(error, result) {
                                jalangiLabel0:
                                    while (true) {
                                        try {
                                            J$.Fe(540169, arguments.callee, this, arguments);
                                            arguments = J$.N(540177, 'arguments', arguments, true, false, false);
                                            error = J$.N(540185, 'error', error, true, false, false);
                                            result = J$.N(540193, 'result', result, true, false, false);
                                            if (J$.C(35632, J$.R(539953, 'error', error, false, false))) {
                                                J$.F(539985, J$.R(539961, 'callback', callback, false, false), false)(J$.R(539969, 'error', error, false, false), J$.R(539977, 'result', result, false, false));
                                                return J$.Rt(539993, undefined);
                                            }
                                            J$.B(114946, '-', J$.A(540009, J$.R(540001, 'state', state, false, false), 'index', '+')(1), 1);
                                            if (J$.C(35648, J$.B(114954, '<', J$.G(540025, J$.R(540017, 'state', state, false, false), 'index'), J$.G(540065, J$.C(35640, J$.G(540049, J$.R(540033, 'state', state, false, false), J$.T(540041, 'keyedList', 21, false))) ? J$._() : J$.R(540057, 'list', list, false, false), 'length')))) {
                                                J$.F(540113, J$.R(540073, 'iterate', iterate, false, true), false)(J$.R(540081, 'list', list, false, false), J$.R(540089, 'iterator', iterator, false, false), J$.R(540097, 'state', state, false, false), J$.R(540105, 'iteratorHandler', iteratorHandler, false, false));
                                                return J$.Rt(540121, undefined);
                                            }
                                            J$.F(540161, J$.R(540129, 'callback', callback, false, false), false)(J$.T(540137, null, 25, false), J$.G(540153, J$.R(540145, 'state', state, false, false), 'results'));
                                        } catch (J$e) {
                                            J$.Ex(540569, J$e);
                                        } finally {
                                            if (J$.Fr(540577))
                                                continue jalangiLabel0;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            return J$.Rt(540249, J$.M(540241, J$.R(540217, 'terminator', terminator, false, true), 'bind', false)(J$.R(540225, 'state', state, false, false), J$.R(540233, 'callback', callback, false, false)));
                        } catch (J$e) {
                            J$.Ex(540585, J$e);
                        } finally {
                            if (J$.Fr(540593))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function ascending(a, b) {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(540377, arguments.callee, this, arguments);
                            arguments = J$.N(540385, 'arguments', arguments, true, false, false);
                            a = J$.N(540393, 'a', a, true, false, false);
                            b = J$.N(540401, 'b', b, true, false, false);
                            return J$.Rt(540369, J$.C(35664, J$.B(114962, '<', J$.R(540313, 'a', a, false, false), J$.R(540321, 'b', b, false, false))) ? J$.U(114970, '-', J$.T(540329, 1, 22, false)) : J$.C(35656, J$.B(114978, '>', J$.R(540337, 'a', a, false, false), J$.R(540345, 'b', b, false, false))) ? J$.T(540353, 1, 22, false) : J$.T(540361, 0, 22, false));
                        } catch (J$e) {
                            J$.Ex(540601, J$e);
                        } finally {
                            if (J$.Fr(540609))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function descending(a, b) {
                jalangiLabel3:
                    while (true) {
                        try {
                            J$.Fe(540457, arguments.callee, this, arguments);
                            arguments = J$.N(540465, 'arguments', arguments, true, false, false);
                            a = J$.N(540473, 'a', a, true, false, false);
                            b = J$.N(540481, 'b', b, true, false, false);
                            return J$.Rt(540449, J$.B(114994, '*', J$.U(114986, '-', J$.T(540409, 1, 22, false)), J$.F(540441, J$.R(540417, 'ascending', ascending, false, true), false)(J$.R(540425, 'a', a, false, false), J$.R(540433, 'b', b, false, false))));
                        } catch (J$e) {
                            J$.Ex(540617, J$e);
                        } finally {
                            if (J$.Fr(540625))
                                continue jalangiLabel3;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(540497, 'iterate', iterate, false, false, false);
            J$.N(540505, 'initState', initState, false, false, false);
            J$.N(540513, 'terminator', terminator, false, false, false);
            serialOrdered = J$.N(540529, 'serialOrdered', J$.T(540521, serialOrdered, 12, false), true, false, false);
            ascending = J$.N(540545, 'ascending', J$.T(540537, ascending, 12, false), true, false, false);
            descending = J$.N(540561, 'descending', J$.T(540553, descending, 12, false), true, false, false);
            J$.T(539665, 'use strict', 21, false);
            J$.F(539689, J$.I(typeof require === 'undefined' ? require = J$.R(539673, 'require', undefined, true, true) : require = J$.R(539673, 'require', require, true, true)), false)(J$.T(539681, 'core-js/modules/es.function.bind', 21, false));
            var iterate = J$.W(539769, 'iterate', J$.F(539713, J$.I(typeof require === 'undefined' ? require = J$.R(539697, 'require', undefined, true, true) : require = J$.R(539697, 'require', require, true, true)), false)(J$.T(539705, './lib/iterate.js', 21, false)), iterate, false, true), initState = J$.W(539777, 'initState', J$.F(539737, J$.I(typeof require === 'undefined' ? require = J$.R(539721, 'require', undefined, true, true) : require = J$.R(539721, 'require', require, true, true)), false)(J$.T(539729, './lib/state.js', 21, false)), initState, false, true), terminator = J$.W(539785, 'terminator', J$.F(539761, J$.I(typeof require === 'undefined' ? require = J$.R(539745, 'require', undefined, true, true) : require = J$.R(539745, 'require', require, true, true)), false)(J$.T(539753, './lib/terminator.js', 21, false)), terminator, false, true);
            J$.P(539809, J$.I(typeof module === 'undefined' ? module = J$.R(539793, 'module', undefined, true, true) : module = J$.R(539793, 'module', module, true, true)), 'exports', J$.R(539801, 'serialOrdered', serialOrdered, false, true));
            J$.P(539841, J$.G(539825, J$.I(typeof module === 'undefined' ? module = J$.R(539817, 'module', undefined, true, true) : module = J$.R(539817, 'module', module, true, true)), 'exports'), 'ascending', J$.R(539833, 'ascending', ascending, false, true));
            J$.P(539873, J$.G(539857, J$.I(typeof module === 'undefined' ? module = J$.R(539849, 'module', undefined, true, true) : module = J$.R(539849, 'module', module, true, true)), 'exports'), 'descending', J$.R(539865, 'descending', descending, false, true));
        } catch (J$e) {
            J$.Ex(540633, J$e);
        } finally {
            if (J$.Sr(540641))
                continue jalangiLabel4;
            else
                break jalangiLabel4;
        }
    }
// JALANGI DO NOT INSTRUMENT

