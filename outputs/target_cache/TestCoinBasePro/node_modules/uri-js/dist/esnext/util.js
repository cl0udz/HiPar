J$.noInstrEval = false;
jalangiLabel6:
    while (true) {
        try {
            J$.Se(2007545, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestCoinBasePro/node_modules/uri-js/dist/esnext/util.js');
            function merge() {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(2006825, arguments.callee, this, arguments);
                            arguments = J$.N(2006833, 'arguments', arguments, true, false, false);
                            J$.N(2006841, '_len', _len, false, false, false);
                            J$.N(2006849, 'sets', sets, false, false, false);
                            J$.N(2006857, '_key', _key, false, false, false);
                            J$.N(2006865, 'xl', xl, false, false, false);
                            J$.N(2006873, 'x', x, false, false, false);
                            for (var _len = J$.W(2006345, '_len', J$.G(2006305, J$.I(typeof arguments === 'undefined' ? arguments = J$.R(2006297, 'arguments', undefined, true, true) : arguments = J$.R(2006297, 'arguments', arguments, true, true)), 'length'), _len, false, false), sets = J$.W(2006353, 'sets', J$.F(2006329, J$.I(typeof Array === 'undefined' ? Array = J$.R(2006313, 'Array', undefined, true, true) : Array = J$.R(2006313, 'Array', Array, true, true)), true)(J$.R(2006321, '_len', _len, false, false)), sets, false, false), _key = J$.W(2006361, '_key', J$.T(2006337, 0, 22, false), _key, false, false); J$.C(95208, J$.B(275322, '<', J$.R(2006369, '_key', _key, false, false), J$.R(2006377, '_len', _len, false, false))); J$.B(275346, '-', _key = J$.W(2006393, '_key', J$.B(275338, '+', J$.U(275330, '+', J$.R(2006385, '_key', _key, false, false)), 1), _key, false, false), 1)) {
                                J$.P(2006441, J$.R(2006401, 'sets', sets, false, false), J$.R(2006409, '_key', _key, false, false), J$.G(2006433, J$.I(typeof arguments === 'undefined' ? arguments = J$.R(2006417, 'arguments', undefined, true, true) : arguments = J$.R(2006417, 'arguments', arguments, true, true)), J$.R(2006425, '_key', _key, false, false)));
                            }
                            if (J$.C(95224, J$.B(275354, '>', J$.G(2006457, J$.R(2006449, 'sets', sets, false, false), 'length'), J$.T(2006465, 1, 22, false)))) {
                                J$.P(2006537, J$.R(2006473, 'sets', sets, false, false), J$.T(2006481, 0, 22, false), J$.M(2006529, J$.G(2006505, J$.R(2006489, 'sets', sets, false, false), J$.T(2006497, 0, 22, false)), 'slice', false)(J$.T(2006513, 0, 22, false), J$.U(275362, '-', J$.T(2006521, 1, 22, false))));
                                var xl = J$.W(2006569, 'xl', J$.B(275370, '-', J$.G(2006553, J$.R(2006545, 'sets', sets, false, false), 'length'), J$.T(2006561, 1, 22, false)), xl, false, false);
                                for (var x = J$.W(2006585, 'x', J$.T(2006577, 1, 22, false), x, false, false); J$.C(95216, J$.B(275378, '<', J$.R(2006593, 'x', x, false, false), J$.R(2006601, 'xl', xl, false, false))); x = J$.W(2006617, 'x', J$.B(275394, '+', J$.U(275386, '+', J$.R(2006609, 'x', x, false, false)), 1), x, false, false)) {
                                    J$.P(2006689, J$.R(2006625, 'sets', sets, false, false), J$.R(2006633, 'x', x, false, false), J$.M(2006681, J$.G(2006657, J$.R(2006641, 'sets', sets, false, false), J$.R(2006649, 'x', x, false, false)), 'slice', false)(J$.T(2006665, 1, 22, false), J$.U(275402, '-', J$.T(2006673, 1, 22, false))));
                                }
                                J$.P(2006753, J$.R(2006697, 'sets', sets, false, false), J$.R(2006705, 'xl', xl, false, false), J$.M(2006745, J$.G(2006729, J$.R(2006713, 'sets', sets, false, false), J$.R(2006721, 'xl', xl, false, false)), 'slice', false)(J$.T(2006737, 1, 22, false)));
                                return J$.Rt(2006785, J$.M(2006777, J$.R(2006761, 'sets', sets, false, false), 'join', false)(J$.T(2006769, '', 21, false)));
                            } else {
                                return J$.Rt(2006817, J$.G(2006809, J$.R(2006793, 'sets', sets, false, false), J$.T(2006801, 0, 22, false)));
                            }
                        } catch (J$e) {
                            J$.Ex(2007649, J$e);
                        } finally {
                            if (J$.Fr(2007657))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function subexp(str) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(2006913, arguments.callee, this, arguments);
                            arguments = J$.N(2006921, 'arguments', arguments, true, false, false);
                            str = J$.N(2006929, 'str', str, true, false, false);
                            return J$.Rt(2006905, J$.B(275418, '+', J$.B(275410, '+', J$.T(2006881, '(?:', 21, false), J$.R(2006889, 'str', str, false, false)), J$.T(2006897, ')', 21, false)));
                        } catch (J$e) {
                            J$.Ex(2007665, J$e);
                        } finally {
                            if (J$.Fr(2007673))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function typeOf(o) {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(2007089, arguments.callee, this, arguments);
                            arguments = J$.N(2007097, 'arguments', arguments, true, false, false);
                            o = J$.N(2007105, 'o', o, true, false, false);
                            return J$.Rt(2007081, J$.C(95240, J$.B(275426, '===', J$.R(2006937, 'o', o, false, false), J$.T(2006945, undefined, 24, false))) ? J$.T(2006953, 'undefined', 21, false) : J$.C(95232, J$.B(275434, '===', J$.R(2006961, 'o', o, false, false), J$.T(2006969, null, 25, false))) ? J$.T(2006977, 'null', 21, false) : J$.M(2007073, J$.M(2007065, J$.M(2007057, J$.M(2007041, J$.M(2007033, J$.M(2007017, J$.G(2007001, J$.G(2006993, J$.I(typeof Object === 'undefined' ? Object = J$.R(2006985, 'Object', undefined, true, true) : Object = J$.R(2006985, 'Object', Object, true, true)), 'prototype'), 'toString'), 'call', false)(J$.R(2007009, 'o', o, false, false)), 'split', false)(J$.T(2007025, ' ', 21, false)), 'pop', false)(), 'split', false)(J$.T(2007049, ']', 21, false)), 'shift', false)(), 'toLowerCase', false)());
                        } catch (J$e) {
                            J$.Ex(2007681, J$e);
                        } finally {
                            if (J$.Fr(2007689))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function toUpperCase(str) {
                jalangiLabel3:
                    while (true) {
                        try {
                            J$.Fe(2007137, arguments.callee, this, arguments);
                            arguments = J$.N(2007145, 'arguments', arguments, true, false, false);
                            str = J$.N(2007153, 'str', str, true, false, false);
                            return J$.Rt(2007129, J$.M(2007121, J$.R(2007113, 'str', str, false, false), 'toUpperCase', false)());
                        } catch (J$e) {
                            J$.Ex(2007697, J$e);
                        } finally {
                            if (J$.Fr(2007705))
                                continue jalangiLabel3;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function toArray(obj) {
                jalangiLabel4:
                    while (true) {
                        try {
                            J$.Fe(2007361, arguments.callee, this, arguments);
                            arguments = J$.N(2007369, 'arguments', arguments, true, false, false);
                            obj = J$.N(2007377, 'obj', obj, true, false, false);
                            return J$.Rt(2007353, J$.C(95296, J$.C(95248, J$.B(275442, '!==', J$.R(2007161, 'obj', obj, false, false), J$.T(2007169, undefined, 24, false))) ? J$.B(275450, '!==', J$.R(2007177, 'obj', obj, false, false), J$.T(2007185, null, 25, false)) : J$._()) ? J$.C(95288, J$.B(275458, 'instanceof', J$.R(2007193, 'obj', obj, false, false), J$.I(typeof Array === 'undefined' ? Array = J$.R(2007201, 'Array', undefined, true, true) : Array = J$.R(2007201, 'Array', Array, true, true)))) ? J$.R(2007209, 'obj', obj, false, false) : J$.C(95280, J$.C(95272, J$.C(95264, J$.C(95256, J$.B(275474, '!==', J$.U(275466, 'typeof', J$.G(2007225, J$.R(2007217, 'obj', obj, false, false), 'length')), J$.T(2007233, 'number', 21, false))) ? J$._() : J$.G(2007249, J$.R(2007241, 'obj', obj, false, false), 'split')) ? J$._() : J$.G(2007265, J$.R(2007257, 'obj', obj, false, false), 'setInterval')) ? J$._() : J$.G(2007281, J$.R(2007273, 'obj', obj, false, false), 'call')) ? J$.T(2007297, [J$.R(2007289, 'obj', obj, false, false)], 10, false) : J$.M(2007337, J$.G(2007321, J$.G(2007313, J$.I(typeof Array === 'undefined' ? Array = J$.R(2007305, 'Array', undefined, true, true) : Array = J$.R(2007305, 'Array', Array, true, true)), 'prototype'), 'slice'), 'call', false)(J$.R(2007329, 'obj', obj, false, false)) : J$.T(2007345, [], 10, false));
                        } catch (J$e) {
                            J$.Ex(2007713, J$e);
                        } finally {
                            if (J$.Fr(2007721))
                                continue jalangiLabel4;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function assign(target, source) {
                jalangiLabel5:
                    while (true) {
                        try {
                            J$.Fe(2007497, arguments.callee, this, arguments);
                            arguments = J$.N(2007505, 'arguments', arguments, true, false, false);
                            target = J$.N(2007513, 'target', target, true, false, false);
                            source = J$.N(2007521, 'source', source, true, false, false);
                            J$.N(2007529, 'obj', obj, false, false, false);
                            J$.N(2007537, 'key', key, false, false, false);
                            var obj = J$.W(2007393, 'obj', J$.R(2007385, 'target', target, false, false), obj, false, false);
                            if (J$.C(95304, J$.R(2007401, 'source', source, false, false))) {
                                for (var key in J$.H(2007465, J$.R(2007409, 'source', source, false, false))) {
                                    J$.N(2007473, 'key', key, false, true, false);
                                    {
                                        {
                                            J$.P(2007457, J$.R(2007417, 'obj', obj, false, false), J$.R(2007425, 'key', key, false, false), J$.G(2007449, J$.R(2007433, 'source', source, false, false), J$.R(2007441, 'key', key, false, false)));
                                        }
                                    }
                                }
                            }
                            return J$.Rt(2007489, J$.R(2007481, 'obj', obj, false, false));
                        } catch (J$e) {
                            J$.Ex(2007729, J$e);
                        } finally {
                            if (J$.Fr(2007737))
                                continue jalangiLabel5;
                            else
                                return J$.Ra();
                        }
                    }
            }
            merge = J$.N(2007561, 'merge', J$.T(2007553, merge, 12, false), true, false, false);
            subexp = J$.N(2007577, 'subexp', J$.T(2007569, subexp, 12, false), true, false, false);
            typeOf = J$.N(2007593, 'typeOf', J$.T(2007585, typeOf, 12, false), true, false, false);
            toUpperCase = J$.N(2007609, 'toUpperCase', J$.T(2007601, toUpperCase, 12, false), true, false, false);
            toArray = J$.N(2007625, 'toArray', J$.T(2007617, toArray, 12, false), true, false, false);
            assign = J$.N(2007641, 'assign', J$.T(2007633, assign, 12, false), true, false, false);
            J$.T(2005929, 'use strict', 21, false);
            J$.F(2005953, J$.I(typeof require === 'undefined' ? require = J$.R(2005937, 'require', undefined, true, true) : require = J$.R(2005937, 'require', require, true, true)), false)(J$.T(2005945, 'core-js/modules/es.array.join', 21, false));
            J$.F(2005977, J$.I(typeof require === 'undefined' ? require = J$.R(2005961, 'require', undefined, true, true) : require = J$.R(2005961, 'require', require, true, true)), false)(J$.T(2005969, 'core-js/modules/es.array.slice', 21, false));
            J$.F(2006001, J$.I(typeof require === 'undefined' ? require = J$.R(2005985, 'require', undefined, true, true) : require = J$.R(2005985, 'require', require, true, true)), false)(J$.T(2005993, 'core-js/modules/es.date.to-string', 21, false));
            J$.F(2006025, J$.I(typeof require === 'undefined' ? require = J$.R(2006009, 'require', undefined, true, true) : require = J$.R(2006009, 'require', require, true, true)), false)(J$.T(2006017, 'core-js/modules/es.object.to-string', 21, false));
            J$.F(2006049, J$.I(typeof require === 'undefined' ? require = J$.R(2006033, 'require', undefined, true, true) : require = J$.R(2006033, 'require', require, true, true)), false)(J$.T(2006041, 'core-js/modules/es.regexp.exec', 21, false));
            J$.F(2006073, J$.I(typeof require === 'undefined' ? require = J$.R(2006057, 'require', undefined, true, true) : require = J$.R(2006057, 'require', require, true, true)), false)(J$.T(2006065, 'core-js/modules/es.regexp.to-string', 21, false));
            J$.F(2006097, J$.I(typeof require === 'undefined' ? require = J$.R(2006081, 'require', undefined, true, true) : require = J$.R(2006081, 'require', require, true, true)), false)(J$.T(2006089, 'core-js/modules/es.string.split', 21, false));
            J$.M(2006145, J$.I(typeof Object === 'undefined' ? Object = J$.R(2006105, 'Object', undefined, true, true) : Object = J$.R(2006105, 'Object', Object, true, true)), 'defineProperty', false)(J$.I(typeof exports === 'undefined' ? exports = J$.R(2006113, 'exports', undefined, true, true) : exports = J$.R(2006113, 'exports', exports, true, true)), J$.T(2006121, '__esModule', 21, false), J$.T(2006137, { value: J$.T(2006129, true, 23, false) }, 11, false));
            J$.P(2006169, J$.I(typeof exports === 'undefined' ? exports = J$.R(2006153, 'exports', undefined, true, true) : exports = J$.R(2006153, 'exports', exports, true, true)), 'merge', J$.R(2006161, 'merge', merge, false, true));
            J$.P(2006193, J$.I(typeof exports === 'undefined' ? exports = J$.R(2006177, 'exports', undefined, true, true) : exports = J$.R(2006177, 'exports', exports, true, true)), 'subexp', J$.R(2006185, 'subexp', subexp, false, true));
            J$.P(2006217, J$.I(typeof exports === 'undefined' ? exports = J$.R(2006201, 'exports', undefined, true, true) : exports = J$.R(2006201, 'exports', exports, true, true)), 'typeOf', J$.R(2006209, 'typeOf', typeOf, false, true));
            J$.P(2006241, J$.I(typeof exports === 'undefined' ? exports = J$.R(2006225, 'exports', undefined, true, true) : exports = J$.R(2006225, 'exports', exports, true, true)), 'toUpperCase', J$.R(2006233, 'toUpperCase', toUpperCase, false, true));
            J$.P(2006265, J$.I(typeof exports === 'undefined' ? exports = J$.R(2006249, 'exports', undefined, true, true) : exports = J$.R(2006249, 'exports', exports, true, true)), 'toArray', J$.R(2006257, 'toArray', toArray, false, true));
            J$.P(2006289, J$.I(typeof exports === 'undefined' ? exports = J$.R(2006273, 'exports', undefined, true, true) : exports = J$.R(2006273, 'exports', exports, true, true)), 'assign', J$.R(2006281, 'assign', assign, false, true));
        } catch (J$e) {
            J$.Ex(2007745, J$e);
        } finally {
            if (J$.Sr(2007753))
                continue jalangiLabel6;
            else
                break jalangiLabel6;
        }
    }
// JALANGI DO NOT INSTRUMENT

