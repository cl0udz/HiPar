J$.noInstrEval = false;
jalangiLabel5:
    while (true) {
        try {
            J$.Se(7361457, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestCouchNode/node_modules/extsprintf/lib/extsprintf.js');
            function jsSprintf(fmt) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(7360569, arguments.callee, this, arguments);
                            arguments = J$.N(7360577, 'arguments', arguments, true, false, false);
                            fmt = J$.N(7360585, 'fmt', fmt, true, false, false);
                            J$.N(7360593, 'regex', regex, false, false, false);
                            J$.N(7360601, 're', re, false, false, false);
                            J$.N(7360609, 'args', args, false, false, false);
                            J$.N(7360617, 'flags', flags, false, false, false);
                            J$.N(7360625, 'width', width, false, false, false);
                            J$.N(7360633, 'precision', precision, false, false, false);
                            J$.N(7360641, 'conversion', conversion, false, false, false);
                            J$.N(7360649, 'left', left, false, false, false);
                            J$.N(7360657, 'pad', pad, false, false, false);
                            J$.N(7360665, 'sign', sign, false, false, false);
                            J$.N(7360673, 'arg', arg, false, false, false);
                            J$.N(7360681, 'match', match, false, false, false);
                            J$.N(7360689, 'ret', ret, false, false, false);
                            J$.N(7360697, 'argn', argn, false, false, false);
                            var regex = J$.W(7359073, 'regex', J$.M(7359065, J$.T(7359049, [
                                J$.T(7358993, '([^%]*)', 21, false),
                                J$.T(7359001, '%', 21, false),
                                J$.T(7359009, '([\'\\-+ #0]*?)', 21, false),
                                J$.T(7359017, '([1-9]\\d*)?', 21, false),
                                J$.T(7359025, '(\\.([1-9]\\d*))?', 21, false),
                                J$.T(7359033, '[lhjztL]*?', 21, false),
                                J$.T(7359041, '([diouxXfFeEgGaAcCsSp%jr])', 21, false)
                            ], 10, false), 'join', false)(J$.T(7359057, '', 21, false)), regex, false, false);
                            var re = J$.W(7359105, 're', J$.F(7359097, J$.I(typeof RegExp === 'undefined' ? RegExp = J$.R(7359081, 'RegExp', undefined, true, true) : RegExp = J$.R(7359081, 'RegExp', RegExp, true, true)), true)(J$.R(7359089, 'regex', regex, false, false)), re, false, false);
                            var args = J$.W(7359161, 'args', J$.M(7359153, J$.G(7359129, J$.G(7359121, J$.I(typeof Array === 'undefined' ? Array = J$.R(7359113, 'Array', undefined, true, true) : Array = J$.R(7359113, 'Array', Array, true, true)), 'prototype'), 'slice'), 'call', false)(J$.I(typeof arguments === 'undefined' ? arguments = J$.R(7359137, 'arguments', undefined, true, true) : arguments = J$.R(7359137, 'arguments', arguments, true, true)), J$.T(7359145, 1, 22, false)), args, false, false);
                            var flags, width, precision, conversion;
                            var left, pad, sign, arg, match;
                            var ret = J$.W(7359177, 'ret', J$.T(7359169, '', 21, false), ret, false, false);
                            var argn = J$.W(7359193, 'argn', J$.T(7359185, 1, 22, false), argn, false, false);
                            J$.M(7359225, J$.R(7359201, 'mod_assert', mod_assert, false, true), 'equal', false)(J$.T(7359209, 'string', 21, false), J$.U(736690, 'typeof', J$.R(7359217, 'fmt', fmt, false, false)));
                            while (J$.C(392040, J$.B(736698, '!==', match = J$.W(7359257, 'match', J$.M(7359249, J$.R(7359233, 're', re, false, false), 'exec', false)(J$.R(7359241, 'fmt', fmt, false, false)), match, false, false), J$.T(7359265, null, 25, false)))) {
                                ret = J$.W(7359305, 'ret', J$.B(736706, '+', J$.R(7359297, 'ret', ret, false, false), J$.G(7359289, J$.R(7359273, 'match', match, false, false), J$.T(7359281, 1, 22, false))), ret, false, false);
                                fmt = J$.W(7359361, 'fmt', J$.M(7359353, J$.R(7359313, 'fmt', fmt, false, false), 'substring', false)(J$.G(7359345, J$.G(7359337, J$.R(7359321, 'match', match, false, false), J$.T(7359329, 0, 22, false)), 'length')), fmt, false, false);
                                flags = J$.W(7359401, 'flags', J$.C(391864, J$.G(7359385, J$.R(7359369, 'match', match, false, false), J$.T(7359377, 2, 22, false))) ? J$._() : J$.T(7359393, '', 21, false), flags, false, false);
                                width = J$.W(7359441, 'width', J$.C(391872, J$.G(7359425, J$.R(7359409, 'match', match, false, false), J$.T(7359417, 3, 22, false))) ? J$._() : J$.T(7359433, 0, 22, false), width, false, false);
                                precision = J$.W(7359481, 'precision', J$.C(391880, J$.G(7359465, J$.R(7359449, 'match', match, false, false), J$.T(7359457, 4, 22, false))) ? J$._() : J$.T(7359473, '', 21, false), precision, false, false);
                                conversion = J$.W(7359513, 'conversion', J$.G(7359505, J$.R(7359489, 'match', match, false, false), J$.T(7359497, 6, 22, false)), conversion, false, false);
                                left = J$.W(7359529, 'left', J$.T(7359521, false, 23, false), left, false, false);
                                sign = J$.W(7359545, 'sign', J$.T(7359537, false, 23, false), sign, false, false);
                                pad = J$.W(7359561, 'pad', J$.T(7359553, ' ', 21, false), pad, false, false);
                                if (J$.C(391888, J$.B(736714, '==', J$.R(7359569, 'conversion', conversion, false, false), J$.T(7359577, '%', 21, false)))) {
                                    ret = J$.W(7359601, 'ret', J$.B(736722, '+', J$.R(7359593, 'ret', ret, false, false), J$.T(7359585, '%', 21, false)), ret, false, false);
                                    continue;
                                }
                                if (J$.C(391896, J$.B(736730, '===', J$.G(7359617, J$.R(7359609, 'args', args, false, false), 'length'), J$.T(7359625, 0, 22, false))))
                                    throw J$.F(7359649, J$.I(typeof Error === 'undefined' ? Error = J$.R(7359633, 'Error', undefined, true, true) : Error = J$.R(7359633, 'Error', Error, true, true)), true)(J$.T(7359641, 'too few args to sprintf', 21, false));
                                arg = J$.W(7359673, 'arg', J$.M(7359665, J$.R(7359657, 'args', args, false, false), 'shift', false)(), arg, false, false);
                                J$.B(736754, '-', argn = J$.W(7359689, 'argn', J$.B(736746, '+', J$.U(736738, '+', J$.R(7359681, 'argn', argn, false, false)), 1), argn, false, false), 1);
                                if (J$.C(391904, J$.M(7359713, J$.R(7359697, 'flags', flags, false, false), 'match', false)(J$.T(7359705, /[\' #]/, 14, false))))
                                    throw J$.F(7359745, J$.I(typeof Error === 'undefined' ? Error = J$.R(7359721, 'Error', undefined, true, true) : Error = J$.R(7359721, 'Error', Error, true, true)), true)(J$.B(736762, '+', J$.T(7359729, 'unsupported flags: ', 21, false), J$.R(7359737, 'flags', flags, false, false)));
                                if (J$.C(391912, J$.B(736770, '>', J$.G(7359761, J$.R(7359753, 'precision', precision, false, false), 'length'), J$.T(7359769, 0, 22, false))))
                                    throw J$.F(7359793, J$.I(typeof Error === 'undefined' ? Error = J$.R(7359777, 'Error', undefined, true, true) : Error = J$.R(7359777, 'Error', Error, true, true)), true)(J$.T(7359785, 'non-zero precision not supported', 21, false));
                                if (J$.C(391920, J$.M(7359817, J$.R(7359801, 'flags', flags, false, false), 'match', false)(J$.T(7359809, /-/, 14, false))))
                                    left = J$.W(7359833, 'left', J$.T(7359825, true, 23, false), left, false, false);
                                if (J$.C(391928, J$.M(7359857, J$.R(7359841, 'flags', flags, false, false), 'match', false)(J$.T(7359849, /0/, 14, false))))
                                    pad = J$.W(7359873, 'pad', J$.T(7359865, '0', 21, false), pad, false, false);
                                if (J$.C(391936, J$.M(7359897, J$.R(7359881, 'flags', flags, false, false), 'match', false)(J$.T(7359889, /\+/, 14, false))))
                                    sign = J$.W(7359913, 'sign', J$.T(7359905, true, 23, false), sign, false, false);
                                switch (J$.C1(391984, J$.R(7359921, 'conversion', conversion, false, false))) {
                                case J$.C2(391992, J$.T(7360081, 's', 21, false)):
                                    if (J$.C(391952, J$.C(391944, J$.B(736778, '===', J$.R(7359929, 'arg', arg, false, false), J$.T(7359937, undefined, 24, false))) ? J$._() : J$.B(736786, '===', J$.R(7359945, 'arg', arg, false, false), J$.T(7359953, null, 25, false))))
                                        throw J$.F(7360001, J$.I(typeof Error === 'undefined' ? Error = J$.R(7359961, 'Error', undefined, true, true) : Error = J$.R(7359961, 'Error', Error, true, true)), true)(J$.B(736810, '+', J$.B(736802, '+', J$.B(736794, '+', J$.T(7359969, 'argument ', 21, false), J$.R(7359977, 'argn', argn, false, false)), J$.T(7359985, ': attempted to print undefined or null ', 21, false)), J$.T(7359993, 'as a string', 21, false)));
                                    ret = J$.W(7360073, 'ret', J$.B(736818, '+', J$.R(7360065, 'ret', ret, false, false), J$.F(7360057, J$.R(7360009, 'doPad', doPad, false, true), false)(J$.R(7360017, 'pad', pad, false, false), J$.R(7360025, 'width', width, false, false), J$.R(7360033, 'left', left, false, false), J$.M(7360049, J$.R(7360041, 'arg', arg, false, false), 'toString', false)())), ret, false, false);
                                    break;
                                case J$.C2(392000, J$.T(7360121, 'd', 21, false)):
                                    arg = J$.W(7360113, 'arg', J$.M(7360105, J$.I(typeof Math === 'undefined' ? Math = J$.R(7360089, 'Math', undefined, true, true) : Math = J$.R(7360089, 'Math', Math, true, true)), 'floor', false)(J$.R(7360097, 'arg', arg, false, false)), arg, false, false);
                                case J$.C2(392008, J$.T(7360257, 'f', 21, false)):
                                    sign = J$.W(7360169, 'sign', J$.C(391968, J$.C(391960, J$.R(7360129, 'sign', sign, false, false)) ? J$.B(736826, '>', J$.R(7360137, 'arg', arg, false, false), J$.T(7360145, 0, 22, false)) : J$._()) ? J$.T(7360153, '+', 21, false) : J$.T(7360161, '', 21, false), sign, false, false);
                                    ret = J$.W(7360249, 'ret', J$.B(736842, '+', J$.R(7360241, 'ret', ret, false, false), J$.B(736834, '+', J$.R(7360177, 'sign', sign, false, false), J$.F(7360233, J$.R(7360185, 'doPad', doPad, false, true), false)(J$.R(7360193, 'pad', pad, false, false), J$.R(7360201, 'width', width, false, false), J$.R(7360209, 'left', left, false, false), J$.M(7360225, J$.R(7360217, 'arg', arg, false, false), 'toString', false)()))), ret, false, false);
                                    break;
                                case J$.C2(392016, J$.T(7360345, 'x', 21, false)):
                                    ret = J$.W(7360337, 'ret', J$.B(736850, '+', J$.R(7360329, 'ret', ret, false, false), J$.F(7360321, J$.R(7360265, 'doPad', doPad, false, true), false)(J$.R(7360273, 'pad', pad, false, false), J$.R(7360281, 'width', width, false, false), J$.R(7360289, 'left', left, false, false), J$.M(7360313, J$.R(7360297, 'arg', arg, false, false), 'toString', false)(J$.T(7360305, 16, 22, false)))), ret, false, false);
                                    break;
                                case J$.C2(392024, J$.T(7360441, 'j', 21, false)):
                                    if (J$.C(391976, J$.B(736858, '===', J$.R(7360353, 'width', width, false, false), J$.T(7360361, 0, 22, false))))
                                        width = J$.W(7360377, 'width', J$.T(7360369, 10, 22, false), width, false, false);
                                    ret = J$.W(7360433, 'ret', J$.B(736866, '+', J$.R(7360425, 'ret', ret, false, false), J$.M(7360417, J$.R(7360385, 'mod_util', mod_util, false, true), 'inspect', false)(J$.R(7360393, 'arg', arg, false, false), J$.T(7360401, false, 23, false), J$.R(7360409, 'width', width, false, false))), ret, false, false);
                                    break;
                                case J$.C2(392032, J$.T(7360489, 'r', 21, false)):
                                    ret = J$.W(7360481, 'ret', J$.B(736874, '+', J$.R(7360473, 'ret', ret, false, false), J$.F(7360465, J$.R(7360449, 'dumpException', dumpException, false, true), false)(J$.R(7360457, 'arg', arg, false, false))), ret, false, false);
                                    break;
                                default:
                                    throw J$.F(7360521, J$.I(typeof Error === 'undefined' ? Error = J$.R(7360497, 'Error', undefined, true, true) : Error = J$.R(7360497, 'Error', Error, true, true)), true)(J$.B(736882, '+', J$.T(7360505, 'unsupported conversion: ', 21, false), J$.R(7360513, 'conversion', conversion, false, false)));
                                }
                            }
                            ret = J$.W(7360545, 'ret', J$.B(736890, '+', J$.R(7360537, 'ret', ret, false, false), J$.R(7360529, 'fmt', fmt, false, false)), ret, false, false);
                            return J$.Rt(7360561, J$.R(7360553, 'ret', ret, false, false));
                        } catch (J$e) {
                            J$.Ex(7361561, J$e);
                        } finally {
                            if (J$.Fr(7361569))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function jsPrintf() {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(7360817, arguments.callee, this, arguments);
                            arguments = J$.N(7360825, 'arguments', arguments, true, false, false);
                            J$.N(7360833, 'args', args, false, false, false);
                            var args = J$.W(7360745, 'args', J$.M(7360737, J$.G(7360721, J$.G(7360713, J$.I(typeof Array === 'undefined' ? Array = J$.R(7360705, 'Array', undefined, true, true) : Array = J$.R(7360705, 'Array', Array, true, true)), 'prototype'), 'slice'), 'call', false)(J$.I(typeof arguments === 'undefined' ? arguments = J$.R(7360729, 'arguments', undefined, true, true) : arguments = J$.R(7360729, 'arguments', arguments, true, true))), args, false, false);
                            J$.M(7360777, J$.R(7360753, 'args', args, false, false), 'unshift', false)(J$.G(7360769, J$.I(typeof process === 'undefined' ? process = J$.R(7360761, 'process', undefined, true, true) : process = J$.R(7360761, 'process', process, true, true)), 'stdout'));
                            J$.M(7360809, J$.R(7360785, 'jsFprintf', jsFprintf, false, true), 'apply', false)(J$.T(7360793, null, 25, false), J$.R(7360801, 'args', args, false, false));
                        } catch (J$e) {
                            J$.Ex(7361577, J$e);
                        } finally {
                            if (J$.Fr(7361585))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function jsFprintf(stream) {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(7360953, arguments.callee, this, arguments);
                            arguments = J$.N(7360961, 'arguments', arguments, true, false, false);
                            stream = J$.N(7360969, 'stream', stream, true, false, false);
                            J$.N(7360977, 'args', args, false, false, false);
                            var args = J$.W(7360889, 'args', J$.M(7360881, J$.G(7360857, J$.G(7360849, J$.I(typeof Array === 'undefined' ? Array = J$.R(7360841, 'Array', undefined, true, true) : Array = J$.R(7360841, 'Array', Array, true, true)), 'prototype'), 'slice'), 'call', false)(J$.I(typeof arguments === 'undefined' ? arguments = J$.R(7360865, 'arguments', undefined, true, true) : arguments = J$.R(7360865, 'arguments', arguments, true, true)), J$.T(7360873, 1, 22, false)), args, false, false);
                            return J$.Rt(7360945, J$.M(7360937, J$.R(7360897, 'stream', stream, false, false), 'write', false)(J$.M(7360929, J$.R(7360905, 'jsSprintf', jsSprintf, false, true), 'apply', false)(J$.R(7360913, 'this', this, false, false), J$.R(7360921, 'args', args, false, false))));
                        } catch (J$e) {
                            J$.Ex(7361593, J$e);
                        } finally {
                            if (J$.Fr(7361601))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function doPad(chr, width, left, str) {
                jalangiLabel3:
                    while (true) {
                        try {
                            J$.Fe(7361097, arguments.callee, this, arguments);
                            arguments = J$.N(7361105, 'arguments', arguments, true, false, false);
                            chr = J$.N(7361113, 'chr', chr, true, false, false);
                            width = J$.N(7361121, 'width', width, true, false, false);
                            left = J$.N(7361129, 'left', left, true, false, false);
                            str = J$.N(7361137, 'str', str, true, false, false);
                            J$.N(7361145, 'ret', ret, false, false, false);
                            var ret = J$.W(7360993, 'ret', J$.R(7360985, 'str', str, false, false), ret, false, false);
                            while (J$.C(392056, J$.B(736898, '<', J$.G(7361009, J$.R(7361001, 'ret', ret, false, false), 'length'), J$.R(7361017, 'width', width, false, false)))) {
                                if (J$.C(392048, J$.R(7361025, 'left', left, false, false)))
                                    ret = J$.W(7361049, 'ret', J$.B(736906, '+', J$.R(7361041, 'ret', ret, false, false), J$.R(7361033, 'chr', chr, false, false)), ret, false, false);
                                else
                                    ret = J$.W(7361073, 'ret', J$.B(736914, '+', J$.R(7361057, 'chr', chr, false, false), J$.R(7361065, 'ret', ret, false, false)), ret, false, false);
                            }
                            return J$.Rt(7361089, J$.R(7361081, 'ret', ret, false, false));
                        } catch (J$e) {
                            J$.Ex(7361609, J$e);
                        } finally {
                            if (J$.Fr(7361617))
                                continue jalangiLabel3;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function dumpException(ex) {
                jalangiLabel4:
                    while (true) {
                        try {
                            J$.Fe(7361417, arguments.callee, this, arguments);
                            arguments = J$.N(7361425, 'arguments', arguments, true, false, false);
                            ex = J$.N(7361433, 'ex', ex, true, false, false);
                            J$.N(7361441, 'ret', ret, false, false, false);
                            J$.N(7361449, 'cex', cex, false, false, false);
                            var ret;
                            if (J$.C(392064, J$.U(736930, '!', J$.B(736922, 'instanceof', J$.R(7361153, 'ex', ex, false, false), J$.I(typeof Error === 'undefined' ? Error = J$.R(7361161, 'Error', undefined, true, true) : Error = J$.R(7361161, 'Error', Error, true, true))))))
                                throw J$.F(7361209, J$.I(typeof Error === 'undefined' ? Error = J$.R(7361169, 'Error', undefined, true, true) : Error = J$.R(7361169, 'Error', Error, true, true)), true)(J$.F(7361201, J$.R(7361177, 'jsSprintf', jsSprintf, false, true), false)(J$.T(7361185, 'invalid type for %%r: %j', 21, false), J$.R(7361193, 'ex', ex, false, false)));
                            ret = J$.W(7361273, 'ret', J$.B(736954, '+', J$.B(736946, '+', J$.B(736938, '+', J$.T(7361217, 'EXCEPTION: ', 21, false), J$.G(7361241, J$.G(7361233, J$.R(7361225, 'ex', ex, false, false), 'constructor'), 'name')), J$.T(7361249, ': ', 21, false)), J$.G(7361265, J$.R(7361257, 'ex', ex, false, false), 'stack')), ret, false, false);
                            if (J$.C(392088, J$.C(392072, J$.G(7361289, J$.R(7361281, 'ex', ex, false, false), 'cause')) ? J$.B(736970, '===', J$.U(736962, 'typeof', J$.G(7361305, J$.R(7361297, 'ex', ex, false, false), 'cause')), J$.T(7361313, 'function', 21, false)) : J$._())) {
                                var cex = J$.W(7361337, 'cex', J$.M(7361329, J$.R(7361321, 'ex', ex, false, false), 'cause', false)(), cex, false, false);
                                if (J$.C(392080, J$.R(7361345, 'cex', cex, false, false))) {
                                    ret = J$.W(7361393, 'ret', J$.B(736986, '+', J$.R(7361385, 'ret', ret, false, false), J$.B(736978, '+', J$.T(7361353, '\nCaused by: ', 21, false), J$.F(7361377, J$.R(7361361, 'dumpException', dumpException, false, true), false)(J$.R(7361369, 'cex', cex, false, false)))), ret, false, false);
                                }
                            }
                            return J$.Rt(7361409, J$.R(7361401, 'ret', ret, false, false));
                        } catch (J$e) {
                            J$.Ex(7361625, J$e);
                        } finally {
                            if (J$.Fr(7361633))
                                continue jalangiLabel4;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(7361465, 'mod_assert', mod_assert, false, false, false);
            J$.N(7361473, 'mod_util', mod_util, false, false, false);
            jsSprintf = J$.N(7361489, 'jsSprintf', J$.T(7361481, jsSprintf, 12, false), true, false, false);
            jsPrintf = J$.N(7361505, 'jsPrintf', J$.T(7361497, jsPrintf, 12, false), true, false, false);
            jsFprintf = J$.N(7361521, 'jsFprintf', J$.T(7361513, jsFprintf, 12, false), true, false, false);
            doPad = J$.N(7361537, 'doPad', J$.T(7361529, doPad, 12, false), true, false, false);
            dumpException = J$.N(7361553, 'dumpException', J$.T(7361545, dumpException, 12, false), true, false, false);
            var mod_assert = J$.W(7358881, 'mod_assert', J$.F(7358873, J$.I(typeof require === 'undefined' ? require = J$.R(7358857, 'require', undefined, true, true) : require = J$.R(7358857, 'require', require, true, true)), false)(J$.T(7358865, 'assert', 21, false)), mod_assert, false, true);
            var mod_util = J$.W(7358913, 'mod_util', J$.F(7358905, J$.I(typeof require === 'undefined' ? require = J$.R(7358889, 'require', undefined, true, true) : require = J$.R(7358889, 'require', require, true, true)), false)(J$.T(7358897, 'util', 21, false)), mod_util, false, true);
            J$.P(7358937, J$.I(typeof exports === 'undefined' ? exports = J$.R(7358921, 'exports', undefined, true, true) : exports = J$.R(7358921, 'exports', exports, true, true)), 'sprintf', J$.R(7358929, 'jsSprintf', jsSprintf, false, true));
            J$.P(7358961, J$.I(typeof exports === 'undefined' ? exports = J$.R(7358945, 'exports', undefined, true, true) : exports = J$.R(7358945, 'exports', exports, true, true)), 'printf', J$.R(7358953, 'jsPrintf', jsPrintf, false, true));
            J$.P(7358985, J$.I(typeof exports === 'undefined' ? exports = J$.R(7358969, 'exports', undefined, true, true) : exports = J$.R(7358969, 'exports', exports, true, true)), 'fprintf', J$.R(7358977, 'jsFprintf', jsFprintf, false, true));
        } catch (J$e) {
            J$.Ex(7361641, J$e);
        } finally {
            if (J$.Sr(7361649))
                continue jalangiLabel5;
            else
                break jalangiLabel5;
        }
    }
// JALANGI DO NOT INSTRUMENT

