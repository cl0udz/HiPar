J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(4863609, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestCouchNode/node_modules/rc/test/ini.js');
            function test(obj) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(4863521, arguments.callee, this, arguments);
                            arguments = J$.N(4863529, 'arguments', arguments, true, false, false);
                            obj = J$.N(4863537, 'obj', obj, true, false, false);
                            J$.N(4863545, '_json', _json, false, false, false);
                            J$.N(4863553, '_ini', _ini, false, false, false);
                            J$.N(4863561, 'json', json, false, false, false);
                            J$.N(4863569, 'ini', ini, false, false, false);
                            var _json, _ini;
                            var json = J$.W(4863393, 'json', J$.M(4863385, J$.R(4863345, 'cc', cc, false, true), 'parse', false)(_json = J$.W(4863377, '_json', J$.M(4863369, J$.I(typeof JSON === 'undefined' ? JSON = J$.R(4863353, 'JSON', undefined, true, true) : JSON = J$.R(4863353, 'JSON', JSON, true, true)), 'stringify', false)(J$.R(4863361, 'obj', obj, false, false)), _json, false, false)), json, false, false);
                            var ini = J$.W(4863449, 'ini', J$.M(4863441, J$.R(4863401, 'cc', cc, false, true), 'parse', false)(_ini = J$.W(4863433, '_ini', J$.M(4863425, J$.R(4863409, 'INI', INI, false, true), 'stringify', false)(J$.R(4863417, 'obj', obj, false, false)), _ini, false, false)), ini, false, false);
                            J$.M(4863481, J$.I(typeof console === 'undefined' ? console = J$.R(4863457, 'console', undefined, true, true) : console = J$.R(4863457, 'console', console, true, true)), 'log', false)(J$.R(4863465, '_ini', _ini, false, false), J$.R(4863473, '_json', _json, false, false));
                            J$.M(4863513, J$.R(4863489, 'assert', assert, false, true), 'deepEqual', false)(J$.R(4863497, 'json', json, false, false), J$.R(4863505, 'ini', ini, false, false));
                        } catch (J$e) {
                            J$.Ex(4863657, J$e);
                        } finally {
                            if (J$.Fr(4863665))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(4863617, 'cc', cc, false, false, false);
            J$.N(4863625, 'INI', INI, false, false, false);
            J$.N(4863633, 'assert', assert, false, false, false);
            test = J$.N(4863649, 'test', J$.T(4863641, test, 12, false), true, false, false);
            var cc = J$.W(4863273, 'cc', J$.F(4863265, J$.I(typeof require === 'undefined' ? require = J$.R(4863249, 'require', undefined, true, true) : require = J$.R(4863249, 'require', require, true, true)), false)(J$.T(4863257, '../lib/utils', 21, false)), cc, false, true);
            var INI = J$.W(4863305, 'INI', J$.F(4863297, J$.I(typeof require === 'undefined' ? require = J$.R(4863281, 'require', undefined, true, true) : require = J$.R(4863281, 'require', require, true, true)), false)(J$.T(4863289, 'ini', 21, false)), INI, false, true);
            var assert = J$.W(4863337, 'assert', J$.F(4863329, J$.I(typeof require === 'undefined' ? require = J$.R(4863313, 'require', undefined, true, true) : require = J$.R(4863313, 'require', require, true, true)), false)(J$.T(4863321, 'assert', 21, false)), assert, false, true);
            J$.F(4863601, J$.R(4863577, 'test', test, false, true), false)(J$.T(4863593, { hello: J$.T(4863585, true, 23, false) }, 11, false));
        } catch (J$e) {
            J$.Ex(4863673, J$e);
        } finally {
            if (J$.Sr(4863681))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

