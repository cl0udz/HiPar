J$.noInstrEval = false;
jalangiLabel0:
    while (true) {
        try {
            J$.Se(4866121, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestCouchNode/node_modules/rc/test/test.js');
            J$.N(4866129, 'n', n, false, false, false);
            J$.N(4866137, 'assert', assert, false, false, false);
            J$.N(4866145, 'config', config, false, false, false);
            J$.N(4866153, 'customArgv', customArgv, false, false, false);
            J$.N(4866161, 'fs', fs, false, false, false);
            J$.N(4866169, 'path', path, false, false, false);
            J$.N(4866177, 'jsonrc', jsonrc, false, false, false);
            J$.N(4866185, 'commentedJSON', commentedJSON, false, false, false);
            var n = J$.W(4865057, 'n', J$.B(569370, '+', J$.T(4865033, 'rc', 21, false), J$.M(4865049, J$.I(typeof Math === 'undefined' ? Math = J$.R(4865041, 'Math', undefined, true, true) : Math = J$.R(4865041, 'Math', Math, true, true)), 'random', false)()), n, false, true);
            var assert = J$.W(4865089, 'assert', J$.F(4865081, J$.I(typeof require === 'undefined' ? require = J$.R(4865065, 'require', undefined, true, true) : require = J$.R(4865065, 'require', require, true, true)), false)(J$.T(4865073, 'assert', 21, false)), assert, false, true);
            J$.P(4865137, J$.G(4865105, J$.I(typeof process === 'undefined' ? process = J$.R(4865097, 'process', undefined, true, true) : process = J$.R(4865097, 'process', process, true, true)), 'env'), J$.B(569378, '+', J$.R(4865113, 'n', n, false, true), J$.T(4865121, '_envOption', 21, false)), J$.T(4865129, 42, 22, false));
            var config = J$.W(4865201, 'config', J$.F(4865193, J$.F(4865161, J$.I(typeof require === 'undefined' ? require = J$.R(4865145, 'require', undefined, true, true) : require = J$.R(4865145, 'require', require, true, true)), false)(J$.T(4865153, '../', 21, false)), false)(J$.R(4865169, 'n', n, false, true), J$.T(4865185, { option: J$.T(4865177, true, 23, false) }, 11, false)), config, false, true);
            J$.M(4865225, J$.I(typeof console === 'undefined' ? console = J$.R(4865209, 'console', undefined, true, true) : console = J$.R(4865209, 'console', console, true, true)), 'log', false)(J$.R(4865217, 'config', config, false, true));
            J$.M(4865265, J$.R(4865233, 'assert', assert, false, true), 'equal', false)(J$.G(4865249, J$.R(4865241, 'config', config, false, true), 'option'), J$.T(4865257, true, 23, false));
            J$.M(4865305, J$.R(4865273, 'assert', assert, false, true), 'equal', false)(J$.G(4865289, J$.R(4865281, 'config', config, false, true), 'envOption'), J$.T(4865297, 42, 22, false));
            var customArgv = J$.W(4865465, 'customArgv', J$.F(4865457, J$.F(4865329, J$.I(typeof require === 'undefined' ? require = J$.R(4865313, 'require', undefined, true, true) : require = J$.R(4865313, 'require', require, true, true)), false)(J$.T(4865321, '../', 21, false)), false)(J$.R(4865337, 'n', n, false, true), J$.T(4865353, { option: J$.T(4865345, true, 23, false) }, 11, false), J$.T(4865449, {
                option: J$.T(4865361, false, 23, false),
                envOption: J$.T(4865369, 24, 22, false),
                argv: J$.T(4865441, {
                    remain: J$.T(4865377, [], 10, false),
                    cooked: J$.T(4865409, [
                        J$.T(4865385, '--no-option', 21, false),
                        J$.T(4865393, '--envOption', 21, false),
                        J$.T(4865401, '24', 21, false)
                    ], 10, false),
                    original: J$.T(4865433, [
                        J$.T(4865417, '--no-option', 21, false),
                        J$.T(4865425, '--envOption=24', 21, false)
                    ], 10, false)
                }, 11, false)
            }, 11, false)), customArgv, false, true);
            J$.M(4865489, J$.I(typeof console === 'undefined' ? console = J$.R(4865473, 'console', undefined, true, true) : console = J$.R(4865473, 'console', console, true, true)), 'log', false)(J$.R(4865481, 'customArgv', customArgv, false, true));
            J$.M(4865529, J$.R(4865497, 'assert', assert, false, true), 'equal', false)(J$.G(4865513, J$.R(4865505, 'customArgv', customArgv, false, true), 'option'), J$.T(4865521, false, 23, false));
            J$.M(4865569, J$.R(4865537, 'assert', assert, false, true), 'equal', false)(J$.G(4865553, J$.R(4865545, 'customArgv', customArgv, false, true), 'envOption'), J$.T(4865561, 24, 22, false));
            var fs = J$.W(4865601, 'fs', J$.F(4865593, J$.I(typeof require === 'undefined' ? require = J$.R(4865577, 'require', undefined, true, true) : require = J$.R(4865577, 'require', require, true, true)), false)(J$.T(4865585, 'fs', 21, false)), fs, false, true);
            var path = J$.W(4865633, 'path', J$.F(4865625, J$.I(typeof require === 'undefined' ? require = J$.R(4865609, 'require', undefined, true, true) : require = J$.R(4865609, 'require', require, true, true)), false)(J$.T(4865617, 'path', 21, false)), path, false, true);
            var jsonrc = J$.W(4865681, 'jsonrc', J$.M(4865673, J$.R(4865641, 'path', path, false, true), 'resolve', false)(J$.B(569394, '+', J$.B(569386, '+', J$.T(4865649, '.', 21, false), J$.R(4865657, 'n', n, false, true)), J$.T(4865665, 'rc', 21, false))), jsonrc, false, true);
            J$.M(4865777, J$.R(4865689, 'fs', fs, false, true), 'writeFileSync', false)(J$.R(4865697, 'jsonrc', jsonrc, false, true), J$.M(4865769, J$.T(4865753, [
                J$.T(4865705, '{', 21, false),
                J$.T(4865713, '// json overrides default', 21, false),
                J$.T(4865721, '"option": false,', 21, false),
                J$.T(4865729, '/* env overrides json */', 21, false),
                J$.T(4865737, '"envOption": 24', 21, false),
                J$.T(4865745, '}', 21, false)
            ], 10, false), 'join', false)(J$.T(4865761, '\n', 21, false)));
            var commentedJSON = J$.W(4865841, 'commentedJSON', J$.F(4865833, J$.F(4865801, J$.I(typeof require === 'undefined' ? require = J$.R(4865785, 'require', undefined, true, true) : require = J$.R(4865785, 'require', require, true, true)), false)(J$.T(4865793, '../', 21, false)), false)(J$.R(4865809, 'n', n, false, true), J$.T(4865825, { option: J$.T(4865817, true, 23, false) }, 11, false)), commentedJSON, false, true);
            J$.M(4865865, J$.R(4865849, 'fs', fs, false, true), 'unlinkSync', false)(J$.R(4865857, 'jsonrc', jsonrc, false, true));
            J$.M(4865889, J$.I(typeof console === 'undefined' ? console = J$.R(4865873, 'console', undefined, true, true) : console = J$.R(4865873, 'console', console, true, true)), 'log', false)(J$.R(4865881, 'commentedJSON', commentedJSON, false, true));
            J$.M(4865929, J$.R(4865897, 'assert', assert, false, true), 'equal', false)(J$.G(4865913, J$.R(4865905, 'commentedJSON', commentedJSON, false, true), 'option'), J$.T(4865921, false, 23, false));
            J$.M(4865969, J$.R(4865937, 'assert', assert, false, true), 'equal', false)(J$.G(4865953, J$.R(4865945, 'commentedJSON', commentedJSON, false, true), 'envOption'), J$.T(4865961, 42, 22, false));
            J$.M(4866009, J$.R(4865977, 'assert', assert, false, true), 'equal', false)(J$.G(4865993, J$.R(4865985, 'commentedJSON', commentedJSON, false, true), 'config'), J$.R(4866001, 'jsonrc', jsonrc, false, true));
            J$.M(4866057, J$.R(4866017, 'assert', assert, false, true), 'equal', false)(J$.G(4866041, J$.G(4866033, J$.R(4866025, 'commentedJSON', commentedJSON, false, true), 'configs'), 'length'), J$.T(4866049, 1, 22, false));
            J$.M(4866113, J$.R(4866065, 'assert', assert, false, true), 'equal', false)(J$.G(4866097, J$.G(4866081, J$.R(4866073, 'commentedJSON', commentedJSON, false, true), 'configs'), J$.T(4866089, 0, 22, false)), J$.R(4866105, 'jsonrc', jsonrc, false, true));
        } catch (J$e) {
            J$.Ex(4866193, J$e);
        } finally {
            if (J$.Sr(4866201))
                continue jalangiLabel0;
            else
                break jalangiLabel0;
        }
    }
// JALANGI DO NOT INSTRUMENT

