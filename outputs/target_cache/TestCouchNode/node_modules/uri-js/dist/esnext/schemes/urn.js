J$.noInstrEval = false;
jalangiLabel2:
    while (true) {
        try {
            J$.Se(5711689, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestCouchNode/node_modules/uri-js/dist/esnext/schemes/urn.js');
            J$.N(5711697, 'NID$', NID$, false, false, false);
            J$.N(5711705, 'PCT_ENCODED$', PCT_ENCODED$, false, false, false);
            J$.N(5711713, 'TRANS$$', TRANS$$, false, false, false);
            J$.N(5711721, 'NSS$', NSS$, false, false, false);
            J$.N(5711729, 'URN_SCHEME', URN_SCHEME, false, false, false);
            J$.N(5711737, 'URN_PATH', URN_PATH, false, false, false);
            J$.N(5711745, 'URN_PARSE', URN_PARSE, false, false, false);
            J$.N(5711753, 'URN_EXCLUDED', URN_EXCLUDED, false, false, false);
            J$.N(5711761, 'handler', handler, false, false, false);
            import { undefined } from J$.T(5710481, '../uri', 21, false);
            const NID$ = J$.W(5710497, 'NID$', J$.T(5710489, '(?:[0-9A-Za-z][0-9A-Za-z\\-]{1,31})', 21, false), NID$, false, true);
            const PCT_ENCODED$ = J$.W(5710513, 'PCT_ENCODED$', J$.T(5710505, '(?:\\%[0-9A-Fa-f]{2})', 21, false), PCT_ENCODED$, false, true);
            const TRANS$$ = J$.W(5710529, 'TRANS$$', J$.T(5710521, '[0-9A-Za-z\\(\\)\\+\\,\\-\\.\\:\\=\\@\\;\\$\\_\\!\\*\\\'\\/\\?\\#]', 21, false), TRANS$$, false, true);
            const NSS$ = J$.W(5710577, 'NSS$', J$.B(685762, '+', J$.B(685754, '+', J$.B(685746, '+', J$.B(685738, '+', J$.T(5710537, '(?:(?:', 21, false), J$.R(5710545, 'PCT_ENCODED$', PCT_ENCODED$, false, true)), J$.T(5710553, '|', 21, false)), J$.R(5710561, 'TRANS$$', TRANS$$, false, true)), J$.T(5710569, ')+)', 21, false)), NSS$, false, true);
            const URN_SCHEME = J$.W(5710625, 'URN_SCHEME', J$.F(5710617, J$.I(typeof RegExp === 'undefined' ? RegExp = J$.R(5710585, 'RegExp', undefined, true, true) : RegExp = J$.R(5710585, 'RegExp', RegExp, true, true)), true)(J$.B(685778, '+', J$.B(685770, '+', J$.T(5710593, '^urn\\:(', 21, false), J$.R(5710601, 'NID$', NID$, false, true)), J$.T(5710609, ')$', 21, false))), URN_SCHEME, false, true);
            const URN_PATH = J$.W(5710689, 'URN_PATH', J$.F(5710681, J$.I(typeof RegExp === 'undefined' ? RegExp = J$.R(5710633, 'RegExp', undefined, true, true) : RegExp = J$.R(5710633, 'RegExp', RegExp, true, true)), true)(J$.B(685810, '+', J$.B(685802, '+', J$.B(685794, '+', J$.B(685786, '+', J$.T(5710641, '^(', 21, false), J$.R(5710649, 'NID$', NID$, false, true)), J$.T(5710657, ')\\:(', 21, false)), J$.R(5710665, 'NSS$', NSS$, false, true)), J$.T(5710673, ')$', 21, false))), URN_PATH, false, true);
            const URN_PARSE = J$.W(5710705, 'URN_PARSE', J$.T(5710697, /^([^\:]+)\:(.*)/, 14, false), URN_PARSE, false, true);
            const URN_EXCLUDED = J$.W(5710721, 'URN_EXCLUDED', J$.T(5710713, /[\x00-\x20\\\"\&\<\>\[\]\^\`\{\|\}\~\x7F-\xFF]/g, 14, false), URN_EXCLUDED, false, true);
            const handler = J$.W(5711673, 'handler', J$.T(5711665, {
                scheme: J$.T(5710729, 'urn', 21, false),
                parse: J$.T(5711273, function (components, options) {
                    jalangiLabel0:
                        while (true) {
                            try {
                                J$.Fe(5711185, arguments.callee, this, arguments);
                                arguments = J$.N(5711193, 'arguments', arguments, true, false, false);
                                components = J$.N(5711201, 'components', components, true, false, false);
                                options = J$.N(5711209, 'options', options, true, false, false);
                                J$.N(5711217, 'matches', matches, false, false, false);
                                J$.N(5711225, 'urnComponents', urnComponents, false, false, false);
                                J$.N(5711233, 'scheme', scheme, false, false, false);
                                J$.N(5711241, 'nid', nid, false, false, false);
                                J$.N(5711249, 'nss', nss, false, false, false);
                                J$.N(5711257, 'urnScheme', urnScheme, false, false, false);
                                J$.N(5711265, 'schemeHandler', schemeHandler, false, false, false);
                                const matches = J$.W(5710785, 'matches', J$.C(297632, J$.G(5710745, J$.R(5710737, 'components', components, false, false), 'path')) ? J$.M(5710777, J$.G(5710761, J$.R(5710753, 'components', components, false, false), 'path'), 'match', false)(J$.R(5710769, 'URN_PARSE', URN_PARSE, false, true)) : J$._(), matches, false, false);
                                let urnComponents = J$.W(5710801, 'urnComponents', J$.R(5710793, 'components', components, false, false), urnComponents, false, false);
                                if (J$.C(297680, J$.R(5710809, 'matches', matches, false, false))) {
                                    const scheme = J$.W(5710857, 'scheme', J$.C(297648, J$.C(297640, J$.G(5710825, J$.R(5710817, 'options', options, false, false), 'scheme')) ? J$._() : J$.G(5710841, J$.R(5710833, 'urnComponents', urnComponents, false, false), 'scheme')) ? J$._() : J$.T(5710849, 'urn', 21, false), scheme, false, false);
                                    const nid = J$.W(5710897, 'nid', J$.M(5710889, J$.G(5710881, J$.R(5710865, 'matches', matches, false, false), J$.T(5710873, 1, 22, false)), 'toLowerCase', false)(), nid, false, false);
                                    const nss = J$.W(5710929, 'nss', J$.G(5710921, J$.R(5710905, 'matches', matches, false, false), J$.T(5710913, 2, 22, false)), nss, false, false);
                                    const urnScheme = J$.W(5710969, 'urnScheme', `${ J$.R(5710937, 'scheme', scheme, false, false) }:${ J$.C(297656, J$.G(5710953, J$.R(5710945, 'options', options, false, false), 'nid')) ? J$._() : J$.R(5710961, 'nid', nid, false, false) }`, urnScheme, false, false);
                                    const schemeHandler = J$.W(5711001, 'schemeHandler', J$.G(5710993, J$.I(typeof SCHEMES === 'undefined' ? SCHEMES = J$.R(5710977, 'SCHEMES', undefined, true, true) : SCHEMES = J$.R(5710977, 'SCHEMES', SCHEMES, true, true)), J$.R(5710985, 'urnScheme', urnScheme, false, false)), schemeHandler, false, false);
                                    J$.P(5711025, J$.R(5711009, 'urnComponents', urnComponents, false, false), 'nid', J$.R(5711017, 'nid', nid, false, false));
                                    J$.P(5711049, J$.R(5711033, 'urnComponents', urnComponents, false, false), 'nss', J$.R(5711041, 'nss', nss, false, false));
                                    J$.P(5711073, J$.R(5711057, 'urnComponents', urnComponents, false, false), 'path', J$.T(5711065, undefined, 24, false));
                                    if (J$.C(297664, J$.R(5711081, 'schemeHandler', schemeHandler, false, false))) {
                                        urnComponents = J$.W(5711121, 'urnComponents', J$.M(5711113, J$.R(5711089, 'schemeHandler', schemeHandler, false, false), 'parse', false)(J$.R(5711097, 'urnComponents', urnComponents, false, false), J$.R(5711105, 'options', options, false, false)), urnComponents, false, false);
                                    }
                                } else {
                                    J$.P(5711161, J$.R(5711129, 'urnComponents', urnComponents, false, false), 'error', J$.C(297672, J$.G(5711145, J$.R(5711137, 'urnComponents', urnComponents, false, false), 'error')) ? J$._() : J$.T(5711153, 'URN can not be parsed.', 21, false));
                                }
                                return J$.Rt(5711177, J$.R(5711169, 'urnComponents', urnComponents, false, false));
                            } catch (J$e) {
                                J$.Ex(5711769, J$e);
                            } finally {
                                if (J$.Fr(5711777))
                                    continue jalangiLabel0;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false),
                serialize: J$.T(5711657, function (urnComponents, options) {
                    jalangiLabel1:
                        while (true) {
                            try {
                                J$.Fe(5711577, arguments.callee, this, arguments);
                                arguments = J$.N(5711585, 'arguments', arguments, true, false, false);
                                urnComponents = J$.N(5711593, 'urnComponents', urnComponents, true, false, false);
                                options = J$.N(5711601, 'options', options, true, false, false);
                                J$.N(5711609, 'scheme', scheme, false, false, false);
                                J$.N(5711617, 'nid', nid, false, false, false);
                                J$.N(5711625, 'urnScheme', urnScheme, false, false, false);
                                J$.N(5711633, 'schemeHandler', schemeHandler, false, false, false);
                                J$.N(5711641, 'uriComponents', uriComponents, false, false, false);
                                J$.N(5711649, 'nss', nss, false, false, false);
                                const scheme = J$.W(5711321, 'scheme', J$.C(297696, J$.C(297688, J$.G(5711289, J$.R(5711281, 'options', options, false, false), 'scheme')) ? J$._() : J$.G(5711305, J$.R(5711297, 'urnComponents', urnComponents, false, false), 'scheme')) ? J$._() : J$.T(5711313, 'urn', 21, false), scheme, false, false);
                                const nid = J$.W(5711345, 'nid', J$.G(5711337, J$.R(5711329, 'urnComponents', urnComponents, false, false), 'nid'), nid, false, false);
                                const urnScheme = J$.W(5711385, 'urnScheme', `${ J$.R(5711353, 'scheme', scheme, false, false) }:${ J$.C(297704, J$.G(5711369, J$.R(5711361, 'options', options, false, false), 'nid')) ? J$._() : J$.R(5711377, 'nid', nid, false, false) }`, urnScheme, false, false);
                                const schemeHandler = J$.W(5711417, 'schemeHandler', J$.G(5711409, J$.I(typeof SCHEMES === 'undefined' ? SCHEMES = J$.R(5711393, 'SCHEMES', undefined, true, true) : SCHEMES = J$.R(5711393, 'SCHEMES', SCHEMES, true, true)), J$.R(5711401, 'urnScheme', urnScheme, false, false)), schemeHandler, false, false);
                                if (J$.C(297712, J$.R(5711425, 'schemeHandler', schemeHandler, false, false))) {
                                    urnComponents = J$.W(5711465, 'urnComponents', J$.M(5711457, J$.R(5711433, 'schemeHandler', schemeHandler, false, false), 'serialize', false)(J$.R(5711441, 'urnComponents', urnComponents, false, false), J$.R(5711449, 'options', options, false, false)), urnComponents, false, false);
                                }
                                const uriComponents = J$.W(5711481, 'uriComponents', J$.R(5711473, 'urnComponents', urnComponents, false, false), uriComponents, false, false);
                                const nss = J$.W(5711505, 'nss', J$.G(5711497, J$.R(5711489, 'urnComponents', urnComponents, false, false), 'nss'), nss, false, false);
                                J$.P(5711553, J$.R(5711513, 'uriComponents', uriComponents, false, false), 'path', `${ J$.C(297720, J$.R(5711521, 'nid', nid, false, false)) ? J$._() : J$.G(5711537, J$.R(5711529, 'options', options, false, false), 'nid') }:${ J$.R(5711545, 'nss', nss, false, false) }`);
                                return J$.Rt(5711569, J$.R(5711561, 'uriComponents', uriComponents, false, false));
                            } catch (J$e) {
                                J$.Ex(5711785, J$e);
                            } finally {
                                if (J$.Fr(5711793))
                                    continue jalangiLabel1;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false)
            }, 11, false), handler, false, true);
            export default J$.R(5711681, 'handler', handler, false, true);
        } catch (J$e) {
            J$.Ex(5711801, J$e);
        } finally {
            if (J$.Sr(5711809))
                continue jalangiLabel2;
            else
                break jalangiLabel2;
        }
    }
// JALANGI DO NOT INSTRUMENT

