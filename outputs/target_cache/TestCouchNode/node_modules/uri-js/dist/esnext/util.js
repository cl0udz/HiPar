J$.noInstrEval = false;
jalangiLabel6:
    while (true) {
        try {
            J$.Se(5712905, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestCouchNode/node_modules/uri-js/dist/esnext/util.js');
            merge = J$.N(5712921, 'merge', J$.T(5712913, merge, 12, false), true, false, false);
            subexp = J$.N(5712937, 'subexp', J$.T(5712929, subexp, 12, false), true, false, false);
            typeOf = J$.N(5712953, 'typeOf', J$.T(5712945, typeOf, 12, false), true, false, false);
            toUpperCase = J$.N(5712969, 'toUpperCase', J$.T(5712961, toUpperCase, 12, false), true, false, false);
            toArray = J$.N(5712985, 'toArray', J$.T(5712977, toArray, 12, false), true, false, false);
            assign = J$.N(5713001, 'assign', J$.T(5712993, assign, 12, false), true, false, false);
            export function merge(...(J$.I(typeof sets === 'undefined' ? sets = J$.R(5711817, 'sets', undefined, true, true) : sets = J$.R(5711817, 'sets', sets, true, true)))) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(5712201, arguments.callee, this, arguments);
                            arguments = J$.N(5712209, 'arguments', arguments, true, false, false);
                            undefined = J$.N(5712217, 'undefined', undefined, true, false, false);
                            J$.N(5712225, 'xl', xl, false, false, false);
                            J$.N(5712233, 'x', x, false, false, false);
                            if (J$.C(297736, J$.B(685818, '>', J$.G(5711833, J$.I(typeof sets === 'undefined' ? sets = J$.R(5711825, 'sets', undefined, true, true) : sets = J$.R(5711825, 'sets', sets, true, true)), 'length'), J$.T(5711841, 1, 22, false)))) {
                                J$.P(5711913, J$.I(typeof sets === 'undefined' ? sets = J$.R(5711849, 'sets', undefined, true, true) : sets = J$.R(5711849, 'sets', sets, true, true)), J$.T(5711857, 0, 22, false), J$.M(5711905, J$.G(5711881, J$.I(typeof sets === 'undefined' ? sets = J$.R(5711865, 'sets', undefined, true, true) : sets = J$.R(5711865, 'sets', sets, true, true)), J$.T(5711873, 0, 22, false)), 'slice', false)(J$.T(5711889, 0, 22, false), J$.U(685826, '-', J$.T(5711897, 1, 22, false))));
                                const xl = J$.W(5711945, 'xl', J$.B(685834, '-', J$.G(5711929, J$.I(typeof sets === 'undefined' ? sets = J$.R(5711921, 'sets', undefined, true, true) : sets = J$.R(5711921, 'sets', sets, true, true)), 'length'), J$.T(5711937, 1, 22, false)), xl, false, false);
                                for (let x = J$.W(5711961, 'x', J$.T(5711953, 1, 22, false), x, false, false); J$.C(297728, J$.B(685842, '<', J$.R(5711969, 'x', x, false, false), J$.R(5711977, 'xl', xl, false, false))); x = J$.W(5711993, 'x', J$.B(685858, '+', J$.U(685850, '+', J$.R(5711985, 'x', x, false, false)), 1), x, false, false)) {
                                    J$.P(5712065, J$.I(typeof sets === 'undefined' ? sets = J$.R(5712001, 'sets', undefined, true, true) : sets = J$.R(5712001, 'sets', sets, true, true)), J$.R(5712009, 'x', x, false, false), J$.M(5712057, J$.G(5712033, J$.I(typeof sets === 'undefined' ? sets = J$.R(5712017, 'sets', undefined, true, true) : sets = J$.R(5712017, 'sets', sets, true, true)), J$.R(5712025, 'x', x, false, false)), 'slice', false)(J$.T(5712041, 1, 22, false), J$.U(685866, '-', J$.T(5712049, 1, 22, false))));
                                }
                                J$.P(5712129, J$.I(typeof sets === 'undefined' ? sets = J$.R(5712073, 'sets', undefined, true, true) : sets = J$.R(5712073, 'sets', sets, true, true)), J$.R(5712081, 'xl', xl, false, false), J$.M(5712121, J$.G(5712105, J$.I(typeof sets === 'undefined' ? sets = J$.R(5712089, 'sets', undefined, true, true) : sets = J$.R(5712089, 'sets', sets, true, true)), J$.R(5712097, 'xl', xl, false, false)), 'slice', false)(J$.T(5712113, 1, 22, false)));
                                return J$.Rt(5712161, J$.M(5712153, J$.I(typeof sets === 'undefined' ? sets = J$.R(5712137, 'sets', undefined, true, true) : sets = J$.R(5712137, 'sets', sets, true, true)), 'join', false)(J$.T(5712145, '', 21, false)));
                            } else {
                                return J$.Rt(5712193, J$.G(5712185, J$.I(typeof sets === 'undefined' ? sets = J$.R(5712169, 'sets', undefined, true, true) : sets = J$.R(5712169, 'sets', sets, true, true)), J$.T(5712177, 0, 22, false)));
                            }
                        } catch (J$e) {
                            J$.Ex(5713009, J$e);
                        } finally {
                            if (J$.Fr(5713017))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            export function subexp(str) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(5712273, arguments.callee, this, arguments);
                            arguments = J$.N(5712281, 'arguments', arguments, true, false, false);
                            str = J$.N(5712289, 'str', str, true, false, false);
                            return J$.Rt(5712265, J$.B(685882, '+', J$.B(685874, '+', J$.T(5712241, '(?:', 21, false), J$.R(5712249, 'str', str, false, false)), J$.T(5712257, ')', 21, false)));
                        } catch (J$e) {
                            J$.Ex(5713025, J$e);
                        } finally {
                            if (J$.Fr(5713033))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            export function typeOf(o) {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(5712449, arguments.callee, this, arguments);
                            arguments = J$.N(5712457, 'arguments', arguments, true, false, false);
                            o = J$.N(5712465, 'o', o, true, false, false);
                            return J$.Rt(5712441, J$.C(297752, J$.B(685890, '===', J$.R(5712297, 'o', o, false, false), J$.T(5712305, undefined, 24, false))) ? J$.T(5712313, 'undefined', 21, false) : J$.C(297744, J$.B(685898, '===', J$.R(5712321, 'o', o, false, false), J$.T(5712329, null, 25, false))) ? J$.T(5712337, 'null', 21, false) : J$.M(5712433, J$.M(5712425, J$.M(5712417, J$.M(5712401, J$.M(5712393, J$.M(5712377, J$.G(5712361, J$.G(5712353, J$.I(typeof Object === 'undefined' ? Object = J$.R(5712345, 'Object', undefined, true, true) : Object = J$.R(5712345, 'Object', Object, true, true)), 'prototype'), 'toString'), 'call', false)(J$.R(5712369, 'o', o, false, false)), 'split', false)(J$.T(5712385, ' ', 21, false)), 'pop', false)(), 'split', false)(J$.T(5712409, ']', 21, false)), 'shift', false)(), 'toLowerCase', false)());
                        } catch (J$e) {
                            J$.Ex(5713041, J$e);
                        } finally {
                            if (J$.Fr(5713049))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }
            export function toUpperCase(str) {
                jalangiLabel3:
                    while (true) {
                        try {
                            J$.Fe(5712497, arguments.callee, this, arguments);
                            arguments = J$.N(5712505, 'arguments', arguments, true, false, false);
                            str = J$.N(5712513, 'str', str, true, false, false);
                            return J$.Rt(5712489, J$.M(5712481, J$.R(5712473, 'str', str, false, false), 'toUpperCase', false)());
                        } catch (J$e) {
                            J$.Ex(5713057, J$e);
                        } finally {
                            if (J$.Fr(5713065))
                                continue jalangiLabel3;
                            else
                                return J$.Ra();
                        }
                    }
            }
            export function toArray(obj) {
                jalangiLabel4:
                    while (true) {
                        try {
                            J$.Fe(5712721, arguments.callee, this, arguments);
                            arguments = J$.N(5712729, 'arguments', arguments, true, false, false);
                            obj = J$.N(5712737, 'obj', obj, true, false, false);
                            return J$.Rt(5712713, J$.C(297808, J$.C(297760, J$.B(685906, '!==', J$.R(5712521, 'obj', obj, false, false), J$.T(5712529, undefined, 24, false))) ? J$.B(685914, '!==', J$.R(5712537, 'obj', obj, false, false), J$.T(5712545, null, 25, false)) : J$._()) ? J$.C(297800, J$.B(685922, 'instanceof', J$.R(5712553, 'obj', obj, false, false), J$.I(typeof Array === 'undefined' ? Array = J$.R(5712561, 'Array', undefined, true, true) : Array = J$.R(5712561, 'Array', Array, true, true)))) ? J$.R(5712569, 'obj', obj, false, false) : J$.C(297792, J$.C(297784, J$.C(297776, J$.C(297768, J$.B(685938, '!==', J$.U(685930, 'typeof', J$.G(5712585, J$.R(5712577, 'obj', obj, false, false), 'length')), J$.T(5712593, 'number', 21, false))) ? J$._() : J$.G(5712609, J$.R(5712601, 'obj', obj, false, false), 'split')) ? J$._() : J$.G(5712625, J$.R(5712617, 'obj', obj, false, false), 'setInterval')) ? J$._() : J$.G(5712641, J$.R(5712633, 'obj', obj, false, false), 'call')) ? J$.T(5712657, [J$.R(5712649, 'obj', obj, false, false)], 10, false) : J$.M(5712697, J$.G(5712681, J$.G(5712673, J$.I(typeof Array === 'undefined' ? Array = J$.R(5712665, 'Array', undefined, true, true) : Array = J$.R(5712665, 'Array', Array, true, true)), 'prototype'), 'slice'), 'call', false)(J$.R(5712689, 'obj', obj, false, false)) : J$.T(5712705, [], 10, false));
                        } catch (J$e) {
                            J$.Ex(5713073, J$e);
                        } finally {
                            if (J$.Fr(5713081))
                                continue jalangiLabel4;
                            else
                                return J$.Ra();
                        }
                    }
            }
            export function assign(target, source) {
                jalangiLabel5:
                    while (true) {
                        try {
                            J$.Fe(5712857, arguments.callee, this, arguments);
                            arguments = J$.N(5712865, 'arguments', arguments, true, false, false);
                            target = J$.N(5712873, 'target', target, true, false, false);
                            source = J$.N(5712881, 'source', source, true, false, false);
                            J$.N(5712889, 'obj', obj, false, false, false);
                            J$.N(5712897, 'key', key, false, false, false);
                            const obj = J$.W(5712753, 'obj', J$.R(5712745, 'target', target, false, false), obj, false, false);
                            if (J$.C(297816, J$.R(5712761, 'source', source, false, false))) {
                                for (const key in J$.H(5712825, J$.R(5712769, 'source', source, false, false))) {
                                    J$.N(5712833, 'key', key, false, true, false);
                                    {
                                        {
                                            J$.P(5712817, J$.R(5712777, 'obj', obj, false, false), J$.R(5712785, 'key', key, false, false), J$.G(5712809, J$.R(5712793, 'source', source, false, false), J$.R(5712801, 'key', key, false, false)));
                                        }
                                    }
                                }
                            }
                            return J$.Rt(5712849, J$.R(5712841, 'obj', obj, false, false));
                        } catch (J$e) {
                            J$.Ex(5713089, J$e);
                        } finally {
                            if (J$.Fr(5713097))
                                continue jalangiLabel5;
                            else
                                return J$.Ra();
                        }
                    }
            }
        } catch (J$e) {
            J$.Ex(5713105, J$e);
        } finally {
            if (J$.Sr(5713113))
                continue jalangiLabel6;
            else
                break jalangiLabel6;
        }
    }
// JALANGI DO NOT INSTRUMENT

