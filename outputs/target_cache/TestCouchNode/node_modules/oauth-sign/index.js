J$.noInstrEval = false;
jalangiLabel14:
    while (true) {
        try {
            J$.Se(4589377, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestCouchNode/node_modules/oauth-sign/index.js');
            function sha(key, body, algorithm) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(4586561, arguments.callee, this, arguments);
                            arguments = J$.N(4586569, 'arguments', arguments, true, false, false);
                            key = J$.N(4586577, 'key', key, true, false, false);
                            body = J$.N(4586585, 'body', body, true, false, false);
                            algorithm = J$.N(4586593, 'algorithm', algorithm, true, false, false);
                            return J$.Rt(4586553, J$.M(4586545, J$.M(4586529, J$.M(4586513, J$.R(4586489, 'crypto', crypto, false, true), 'createHmac', false)(J$.R(4586497, 'algorithm', algorithm, false, false), J$.R(4586505, 'key', key, false, false)), 'update', false)(J$.R(4586521, 'body', body, false, false)), 'digest', false)(J$.T(4586537, 'base64', 21, false)));
                        } catch (J$e) {
                            J$.Ex(4589569, J$e);
                        } finally {
                            if (J$.Fr(4589577))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function rsa(key, body) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(4586673, arguments.callee, this, arguments);
                            arguments = J$.N(4586681, 'arguments', arguments, true, false, false);
                            key = J$.N(4586689, 'key', key, true, false, false);
                            body = J$.N(4586697, 'body', body, true, false, false);
                            return J$.Rt(4586665, J$.M(4586657, J$.M(4586633, J$.M(4586617, J$.R(4586601, 'crypto', crypto, false, true), 'createSign', false)(J$.T(4586609, 'RSA-SHA1', 21, false)), 'update', false)(J$.R(4586625, 'body', body, false, false)), 'sign', false)(J$.R(4586641, 'key', key, false, false), J$.T(4586649, 'base64', 21, false)));
                        } catch (J$e) {
                            J$.Ex(4589585, J$e);
                        } finally {
                            if (J$.Fr(4589593))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function rfc3986(str) {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(4586857, arguments.callee, this, arguments);
                            arguments = J$.N(4586865, 'arguments', arguments, true, false, false);
                            str = J$.N(4586873, 'str', str, true, false, false);
                            return J$.Rt(4586849, J$.M(4586841, J$.M(4586817, J$.M(4586793, J$.M(4586769, J$.M(4586745, J$.F(4586721, J$.I(typeof encodeURIComponent === 'undefined' ? encodeURIComponent = J$.R(4586705, 'encodeURIComponent', undefined, true, true) : encodeURIComponent = J$.R(4586705, 'encodeURIComponent', encodeURIComponent, true, true)), false)(J$.R(4586713, 'str', str, false, false)), 'replace', false)(J$.T(4586729, /!/g, 14, false), J$.T(4586737, '%21', 21, false)), 'replace', false)(J$.T(4586753, /\*/g, 14, false), J$.T(4586761, '%2A', 21, false)), 'replace', false)(J$.T(4586777, /\(/g, 14, false), J$.T(4586785, '%28', 21, false)), 'replace', false)(J$.T(4586801, /\)/g, 14, false), J$.T(4586809, '%29', 21, false)), 'replace', false)(J$.T(4586825, /'/g, 14, false), J$.T(4586833, '%27', 21, false)));
                        } catch (J$e) {
                            J$.Ex(4589601, J$e);
                        } finally {
                            if (J$.Fr(4589609))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function map(obj) {
                jalangiLabel3:
                    while (true) {
                        try {
                            J$.Fe(4587265, arguments.callee, this, arguments);
                            arguments = J$.N(4587273, 'arguments', arguments, true, false, false);
                            obj = J$.N(4587281, 'obj', obj, true, false, false);
                            J$.N(4587289, 'key', key, false, false, false);
                            J$.N(4587297, 'val', val, false, false, false);
                            J$.N(4587305, 'arr', arr, false, false, false);
                            J$.N(4587313, 'i', i, false, false, false);
                            J$.N(4587321, 'prop', prop, false, false, false);
                            var key, val, arr = J$.W(4586889, 'arr', J$.T(4586881, [], 10, false), arr, false, false);
                            for (key in J$.H(4587233, J$.R(4586897, 'obj', obj, false, false))) {
                                J$.N(4587241, 'key', key, false, true, false);
                                {
                                    {
                                        val = J$.W(4586929, 'val', J$.G(4586921, J$.R(4586905, 'obj', obj, false, false), J$.R(4586913, 'key', key, false, false)), val, false, false);
                                        if (J$.C(253008, J$.M(4586953, J$.I(typeof Array === 'undefined' ? Array = J$.R(4586937, 'Array', undefined, true, true) : Array = J$.R(4586937, 'Array', Array, true, true)), 'isArray', false)(J$.R(4586945, 'val', val, false, false))))
                                            for (var i = J$.W(4586969, 'i', J$.T(4586961, 0, 22, false), i, false, false); J$.C(252992, J$.B(557130, '<', J$.R(4586977, 'i', i, false, false), J$.G(4586993, J$.R(4586985, 'val', val, false, false), 'length'))); J$.B(557154, '-', i = J$.W(4587009, 'i', J$.B(557146, '+', J$.U(557138, '+', J$.R(4587001, 'i', i, false, false)), 1), i, false, false), 1))
                                                J$.M(4587065, J$.R(4587017, 'arr', arr, false, false), 'push', false)(J$.T(4587057, [
                                                    J$.R(4587025, 'key', key, false, false),
                                                    J$.G(4587049, J$.R(4587033, 'val', val, false, false), J$.R(4587041, 'i', i, false, false))
                                                ], 10, false));
                                        else if (J$.C(253000, J$.B(557170, '===', J$.U(557162, 'typeof', J$.R(4587073, 'val', val, false, false)), J$.T(4587081, 'object', 21, false))))
                                            for (var prop in J$.H(4587177, J$.R(4587089, 'val', val, false, false))) {
                                                J$.N(4587185, 'prop', prop, false, true, false);
                                                {
                                                    J$.M(4587169, J$.R(4587097, 'arr', arr, false, false), 'push', false)(J$.T(4587161, [
                                                        J$.B(557194, '+', J$.B(557186, '+', J$.B(557178, '+', J$.R(4587105, 'key', key, false, false), J$.T(4587113, '[', 21, false)), J$.R(4587121, 'prop', prop, false, false)), J$.T(4587129, ']', 21, false)),
                                                        J$.G(4587153, J$.R(4587137, 'val', val, false, false), J$.R(4587145, 'prop', prop, false, false))
                                                    ], 10, false));
                                                }
                                            }
                                        else
                                            J$.M(4587225, J$.R(4587193, 'arr', arr, false, false), 'push', false)(J$.T(4587217, [
                                                J$.R(4587201, 'key', key, false, false),
                                                J$.R(4587209, 'val', val, false, false)
                                            ], 10, false));
                                    }
                                }
                            }
                            return J$.Rt(4587257, J$.R(4587249, 'arr', arr, false, false));
                        } catch (J$e) {
                            J$.Ex(4589617, J$e);
                        } finally {
                            if (J$.Fr(4589625))
                                continue jalangiLabel3;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function compare(a, b) {
                jalangiLabel4:
                    while (true) {
                        try {
                            J$.Fe(4587393, arguments.callee, this, arguments);
                            arguments = J$.N(4587401, 'arguments', arguments, true, false, false);
                            a = J$.N(4587409, 'a', a, true, false, false);
                            b = J$.N(4587417, 'b', b, true, false, false);
                            return J$.Rt(4587385, J$.C(253024, J$.B(557202, '>', J$.R(4587329, 'a', a, false, false), J$.R(4587337, 'b', b, false, false))) ? J$.T(4587345, 1, 22, false) : J$.C(253016, J$.B(557210, '<', J$.R(4587353, 'a', a, false, false), J$.R(4587361, 'b', b, false, false))) ? J$.U(557218, '-', J$.T(4587369, 1, 22, false)) : J$.T(4587377, 0, 22, false));
                        } catch (J$e) {
                            J$.Ex(4589633, J$e);
                        } finally {
                            if (J$.Fr(4589641))
                                continue jalangiLabel4;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function generateBase(httpMethod, base_uri, params) {
                jalangiLabel8:
                    while (true) {
                        try {
                            J$.Fe(4588017, arguments.callee, this, arguments);
                            arguments = J$.N(4588025, 'arguments', arguments, true, false, false);
                            httpMethod = J$.N(4588033, 'httpMethod', httpMethod, true, false, false);
                            base_uri = J$.N(4588041, 'base_uri', base_uri, true, false, false);
                            params = J$.N(4588049, 'params', params, true, false, false);
                            J$.N(4588057, 'normalized', normalized, false, false, false);
                            J$.N(4588065, 'base', base, false, false, false);
                            var normalized = J$.W(4587865, 'normalized', J$.M(4587857, J$.M(4587841, J$.M(4587769, J$.M(4587585, J$.F(4587441, J$.R(4587425, 'map', map, false, true), false)(J$.R(4587433, 'params', params, false, false)), 'map', false)(J$.T(4587577, function (p) {
                                jalangiLabel5:
                                    while (true) {
                                        try {
                                            J$.Fe(4587553, arguments.callee, this, arguments);
                                            arguments = J$.N(4587561, 'arguments', arguments, true, false, false);
                                            p = J$.N(4587569, 'p', p, true, false, false);
                                            return J$.Rt(4587545, J$.T(4587537, [
                                                J$.F(4587481, J$.R(4587449, 'rfc3986', rfc3986, false, true), false)(J$.G(4587473, J$.R(4587457, 'p', p, false, false), J$.T(4587465, 0, 22, false))),
                                                J$.F(4587529, J$.R(4587489, 'rfc3986', rfc3986, false, true), false)(J$.C(253032, J$.G(4587513, J$.R(4587497, 'p', p, false, false), J$.T(4587505, 1, 22, false))) ? J$._() : J$.T(4587521, '', 21, false))
                                            ], 10, false));
                                        } catch (J$e) {
                                            J$.Ex(4589649, J$e);
                                        } finally {
                                            if (J$.Fr(4589657))
                                                continue jalangiLabel5;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false)), 'sort', false)(J$.T(4587761, function (a, b) {
                                jalangiLabel6:
                                    while (true) {
                                        try {
                                            J$.Fe(4587729, arguments.callee, this, arguments);
                                            arguments = J$.N(4587737, 'arguments', arguments, true, false, false);
                                            a = J$.N(4587745, 'a', a, true, false, false);
                                            b = J$.N(4587753, 'b', b, true, false, false);
                                            return J$.Rt(4587721, J$.C(253040, J$.F(4587649, J$.R(4587593, 'compare', compare, false, true), false)(J$.G(4587617, J$.R(4587601, 'a', a, false, false), J$.T(4587609, 0, 22, false)), J$.G(4587641, J$.R(4587625, 'b', b, false, false), J$.T(4587633, 0, 22, false)))) ? J$._() : J$.F(4587713, J$.R(4587657, 'compare', compare, false, true), false)(J$.G(4587681, J$.R(4587665, 'a', a, false, false), J$.T(4587673, 1, 22, false)), J$.G(4587705, J$.R(4587689, 'b', b, false, false), J$.T(4587697, 1, 22, false))));
                                        } catch (J$e) {
                                            J$.Ex(4589665, J$e);
                                        } finally {
                                            if (J$.Fr(4589673))
                                                continue jalangiLabel6;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false)), 'map', false)(J$.T(4587833, function (p) {
                                jalangiLabel7:
                                    while (true) {
                                        try {
                                            J$.Fe(4587809, arguments.callee, this, arguments);
                                            arguments = J$.N(4587817, 'arguments', arguments, true, false, false);
                                            p = J$.N(4587825, 'p', p, true, false, false);
                                            return J$.Rt(4587801, J$.M(4587793, J$.R(4587777, 'p', p, false, false), 'join', false)(J$.T(4587785, '=', 21, false)));
                                        } catch (J$e) {
                                            J$.Ex(4589681, J$e);
                                        } finally {
                                            if (J$.Fr(4589689))
                                                continue jalangiLabel7;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false)), 'join', false)(J$.T(4587849, '&', 21, false)), normalized, false, false);
                            var base = J$.W(4587993, 'base', J$.M(4587985, J$.T(4587969, [
                                J$.F(4587913, J$.R(4587873, 'rfc3986', rfc3986, false, true), false)(J$.C(253048, J$.R(4587881, 'httpMethod', httpMethod, false, false)) ? J$.M(4587897, J$.R(4587889, 'httpMethod', httpMethod, false, false), 'toUpperCase', false)() : J$.T(4587905, 'GET', 21, false)),
                                J$.F(4587937, J$.R(4587921, 'rfc3986', rfc3986, false, true), false)(J$.R(4587929, 'base_uri', base_uri, false, false)),
                                J$.F(4587961, J$.R(4587945, 'rfc3986', rfc3986, false, true), false)(J$.R(4587953, 'normalized', normalized, false, false))
                            ], 10, false), 'join', false)(J$.T(4587977, '&', 21, false)), base, false, false);
                            return J$.Rt(4588009, J$.R(4588001, 'base', base, false, false));
                        } catch (J$e) {
                            J$.Ex(4589697, J$e);
                        } finally {
                            if (J$.Fr(4589705))
                                continue jalangiLabel8;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function hmacsign(httpMethod, base_uri, params, consumer_secret, token_secret) {
                jalangiLabel9:
                    while (true) {
                        try {
                            J$.Fe(4588249, arguments.callee, this, arguments);
                            arguments = J$.N(4588257, 'arguments', arguments, true, false, false);
                            httpMethod = J$.N(4588265, 'httpMethod', httpMethod, true, false, false);
                            base_uri = J$.N(4588273, 'base_uri', base_uri, true, false, false);
                            params = J$.N(4588281, 'params', params, true, false, false);
                            consumer_secret = J$.N(4588289, 'consumer_secret', consumer_secret, true, false, false);
                            token_secret = J$.N(4588297, 'token_secret', token_secret, true, false, false);
                            J$.N(4588305, 'base', base, false, false, false);
                            J$.N(4588313, 'key', key, false, false, false);
                            var base = J$.W(4588113, 'base', J$.F(4588105, J$.R(4588073, 'generateBase', generateBase, false, true), false)(J$.R(4588081, 'httpMethod', httpMethod, false, false), J$.R(4588089, 'base_uri', base_uri, false, false), J$.R(4588097, 'params', params, false, false)), base, false, false);
                            var key = J$.W(4588193, 'key', J$.M(4588185, J$.M(4588169, J$.T(4588153, [
                                J$.C(253056, J$.R(4588121, 'consumer_secret', consumer_secret, false, false)) ? J$._() : J$.T(4588129, '', 21, false),
                                J$.C(253064, J$.R(4588137, 'token_secret', token_secret, false, false)) ? J$._() : J$.T(4588145, '', 21, false)
                            ], 10, false), 'map', false)(J$.R(4588161, 'rfc3986', rfc3986, false, true)), 'join', false)(J$.T(4588177, '&', 21, false)), key, false, false);
                            return J$.Rt(4588241, J$.F(4588233, J$.R(4588201, 'sha', sha, false, true), false)(J$.R(4588209, 'key', key, false, false), J$.R(4588217, 'base', base, false, false), J$.T(4588225, 'sha1', 21, false)));
                        } catch (J$e) {
                            J$.Ex(4589713, J$e);
                        } finally {
                            if (J$.Fr(4589721))
                                continue jalangiLabel9;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function hmacsign256(httpMethod, base_uri, params, consumer_secret, token_secret) {
                jalangiLabel10:
                    while (true) {
                        try {
                            J$.Fe(4588497, arguments.callee, this, arguments);
                            arguments = J$.N(4588505, 'arguments', arguments, true, false, false);
                            httpMethod = J$.N(4588513, 'httpMethod', httpMethod, true, false, false);
                            base_uri = J$.N(4588521, 'base_uri', base_uri, true, false, false);
                            params = J$.N(4588529, 'params', params, true, false, false);
                            consumer_secret = J$.N(4588537, 'consumer_secret', consumer_secret, true, false, false);
                            token_secret = J$.N(4588545, 'token_secret', token_secret, true, false, false);
                            J$.N(4588553, 'base', base, false, false, false);
                            J$.N(4588561, 'key', key, false, false, false);
                            var base = J$.W(4588361, 'base', J$.F(4588353, J$.R(4588321, 'generateBase', generateBase, false, true), false)(J$.R(4588329, 'httpMethod', httpMethod, false, false), J$.R(4588337, 'base_uri', base_uri, false, false), J$.R(4588345, 'params', params, false, false)), base, false, false);
                            var key = J$.W(4588441, 'key', J$.M(4588433, J$.M(4588417, J$.T(4588401, [
                                J$.C(253072, J$.R(4588369, 'consumer_secret', consumer_secret, false, false)) ? J$._() : J$.T(4588377, '', 21, false),
                                J$.C(253080, J$.R(4588385, 'token_secret', token_secret, false, false)) ? J$._() : J$.T(4588393, '', 21, false)
                            ], 10, false), 'map', false)(J$.R(4588409, 'rfc3986', rfc3986, false, true)), 'join', false)(J$.T(4588425, '&', 21, false)), key, false, false);
                            return J$.Rt(4588489, J$.F(4588481, J$.R(4588449, 'sha', sha, false, true), false)(J$.R(4588457, 'key', key, false, false), J$.R(4588465, 'base', base, false, false), J$.T(4588473, 'sha256', 21, false)));
                        } catch (J$e) {
                            J$.Ex(4589729, J$e);
                        } finally {
                            if (J$.Fr(4589737))
                                continue jalangiLabel10;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function rsasign(httpMethod, base_uri, params, private_key, token_secret) {
                jalangiLabel11:
                    while (true) {
                        try {
                            J$.Fe(4588681, arguments.callee, this, arguments);
                            arguments = J$.N(4588689, 'arguments', arguments, true, false, false);
                            httpMethod = J$.N(4588697, 'httpMethod', httpMethod, true, false, false);
                            base_uri = J$.N(4588705, 'base_uri', base_uri, true, false, false);
                            params = J$.N(4588713, 'params', params, true, false, false);
                            private_key = J$.N(4588721, 'private_key', private_key, true, false, false);
                            token_secret = J$.N(4588729, 'token_secret', token_secret, true, false, false);
                            J$.N(4588737, 'base', base, false, false, false);
                            J$.N(4588745, 'key', key, false, false, false);
                            var base = J$.W(4588609, 'base', J$.F(4588601, J$.R(4588569, 'generateBase', generateBase, false, true), false)(J$.R(4588577, 'httpMethod', httpMethod, false, false), J$.R(4588585, 'base_uri', base_uri, false, false), J$.R(4588593, 'params', params, false, false)), base, false, false);
                            var key = J$.W(4588633, 'key', J$.C(253088, J$.R(4588617, 'private_key', private_key, false, false)) ? J$._() : J$.T(4588625, '', 21, false), key, false, false);
                            return J$.Rt(4588673, J$.F(4588665, J$.R(4588641, 'rsa', rsa, false, true), false)(J$.R(4588649, 'key', key, false, false), J$.R(4588657, 'base', base, false, false)));
                        } catch (J$e) {
                            J$.Ex(4589745, J$e);
                        } finally {
                            if (J$.Fr(4589753))
                                continue jalangiLabel11;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function plaintext(consumer_secret, token_secret) {
                jalangiLabel12:
                    while (true) {
                        try {
                            J$.Fe(4588849, arguments.callee, this, arguments);
                            arguments = J$.N(4588857, 'arguments', arguments, true, false, false);
                            consumer_secret = J$.N(4588865, 'consumer_secret', consumer_secret, true, false, false);
                            token_secret = J$.N(4588873, 'token_secret', token_secret, true, false, false);
                            J$.N(4588881, 'key', key, false, false, false);
                            var key = J$.W(4588825, 'key', J$.M(4588817, J$.M(4588801, J$.T(4588785, [
                                J$.C(253096, J$.R(4588753, 'consumer_secret', consumer_secret, false, false)) ? J$._() : J$.T(4588761, '', 21, false),
                                J$.C(253104, J$.R(4588769, 'token_secret', token_secret, false, false)) ? J$._() : J$.T(4588777, '', 21, false)
                            ], 10, false), 'map', false)(J$.R(4588793, 'rfc3986', rfc3986, false, true)), 'join', false)(J$.T(4588809, '&', 21, false)), key, false, false);
                            return J$.Rt(4588841, J$.R(4588833, 'key', key, false, false));
                        } catch (J$e) {
                            J$.Ex(4589761, J$e);
                        } finally {
                            if (J$.Fr(4589769))
                                continue jalangiLabel12;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function sign(signMethod, httpMethod, base_uri, params, consumer_secret, token_secret) {
                jalangiLabel13:
                    while (true) {
                        try {
                            J$.Fe(4589129, arguments.callee, this, arguments);
                            arguments = J$.N(4589137, 'arguments', arguments, true, false, false);
                            signMethod = J$.N(4589145, 'signMethod', signMethod, true, false, false);
                            httpMethod = J$.N(4589153, 'httpMethod', httpMethod, true, false, false);
                            base_uri = J$.N(4589161, 'base_uri', base_uri, true, false, false);
                            params = J$.N(4589169, 'params', params, true, false, false);
                            consumer_secret = J$.N(4589177, 'consumer_secret', consumer_secret, true, false, false);
                            token_secret = J$.N(4589185, 'token_secret', token_secret, true, false, false);
                            J$.N(4589193, 'method', method, false, false, false);
                            J$.N(4589201, 'skipArgs', skipArgs, false, false, false);
                            var method;
                            var skipArgs = J$.W(4588897, 'skipArgs', J$.T(4588889, 1, 22, false), skipArgs, false, false);
                            switch (J$.C1(253112, J$.R(4588905, 'signMethod', signMethod, false, false))) {
                            case J$.C2(253120, J$.T(4588929, 'RSA-SHA1', 21, false)):
                                method = J$.W(4588921, 'method', J$.R(4588913, 'rsasign', rsasign, false, true), method, false, false);
                                break;
                            case J$.C2(253128, J$.T(4588953, 'HMAC-SHA1', 21, false)):
                                method = J$.W(4588945, 'method', J$.R(4588937, 'hmacsign', hmacsign, false, true), method, false, false);
                                break;
                            case J$.C2(253136, J$.T(4588977, 'HMAC-SHA256', 21, false)):
                                method = J$.W(4588969, 'method', J$.R(4588961, 'hmacsign256', hmacsign256, false, true), method, false, false);
                                break;
                            case J$.C2(253144, J$.T(4589017, 'PLAINTEXT', 21, false)):
                                method = J$.W(4588993, 'method', J$.R(4588985, 'plaintext', plaintext, false, true), method, false, false);
                                skipArgs = J$.W(4589009, 'skipArgs', J$.T(4589001, 4, 22, false), skipArgs, false, false);
                                break;
                            default:
                                throw J$.F(4589049, J$.I(typeof Error === 'undefined' ? Error = J$.R(4589025, 'Error', undefined, true, true) : Error = J$.R(4589025, 'Error', Error, true, true)), true)(J$.B(557226, '+', J$.T(4589033, 'Signature method not supported: ', 21, false), J$.R(4589041, 'signMethod', signMethod, false, false)));
                            }
                            return J$.Rt(4589121, J$.M(4589113, J$.R(4589057, 'method', method, false, false), 'apply', false)(J$.T(4589065, null, 25, false), J$.M(4589105, J$.G(4589081, J$.T(4589073, [], 10, false), 'slice'), 'call', false)(J$.I(typeof arguments === 'undefined' ? arguments = J$.R(4589089, 'arguments', undefined, true, true) : arguments = J$.R(4589089, 'arguments', arguments, true, true)), J$.R(4589097, 'skipArgs', skipArgs, false, false))));
                        } catch (J$e) {
                            J$.Ex(4589777, J$e);
                        } finally {
                            if (J$.Fr(4589785))
                                continue jalangiLabel13;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(4589385, 'crypto', crypto, false, false, false);
            sha = J$.N(4589401, 'sha', J$.T(4589393, sha, 12, false), true, false, false);
            rsa = J$.N(4589417, 'rsa', J$.T(4589409, rsa, 12, false), true, false, false);
            rfc3986 = J$.N(4589433, 'rfc3986', J$.T(4589425, rfc3986, 12, false), true, false, false);
            map = J$.N(4589449, 'map', J$.T(4589441, map, 12, false), true, false, false);
            compare = J$.N(4589465, 'compare', J$.T(4589457, compare, 12, false), true, false, false);
            generateBase = J$.N(4589481, 'generateBase', J$.T(4589473, generateBase, 12, false), true, false, false);
            hmacsign = J$.N(4589497, 'hmacsign', J$.T(4589489, hmacsign, 12, false), true, false, false);
            hmacsign256 = J$.N(4589513, 'hmacsign256', J$.T(4589505, hmacsign256, 12, false), true, false, false);
            rsasign = J$.N(4589529, 'rsasign', J$.T(4589521, rsasign, 12, false), true, false, false);
            plaintext = J$.N(4589545, 'plaintext', J$.T(4589537, plaintext, 12, false), true, false, false);
            sign = J$.N(4589561, 'sign', J$.T(4589553, sign, 12, false), true, false, false);
            var crypto = J$.W(4586481, 'crypto', J$.F(4586473, J$.I(typeof require === 'undefined' ? require = J$.R(4586457, 'require', undefined, true, true) : require = J$.R(4586457, 'require', require, true, true)), false)(J$.T(4586465, 'crypto', 21, false)), crypto, false, true);
            J$.P(4589225, J$.I(typeof exports === 'undefined' ? exports = J$.R(4589209, 'exports', undefined, true, true) : exports = J$.R(4589209, 'exports', exports, true, true)), 'hmacsign', J$.R(4589217, 'hmacsign', hmacsign, false, true));
            J$.P(4589249, J$.I(typeof exports === 'undefined' ? exports = J$.R(4589233, 'exports', undefined, true, true) : exports = J$.R(4589233, 'exports', exports, true, true)), 'hmacsign256', J$.R(4589241, 'hmacsign256', hmacsign256, false, true));
            J$.P(4589273, J$.I(typeof exports === 'undefined' ? exports = J$.R(4589257, 'exports', undefined, true, true) : exports = J$.R(4589257, 'exports', exports, true, true)), 'rsasign', J$.R(4589265, 'rsasign', rsasign, false, true));
            J$.P(4589297, J$.I(typeof exports === 'undefined' ? exports = J$.R(4589281, 'exports', undefined, true, true) : exports = J$.R(4589281, 'exports', exports, true, true)), 'plaintext', J$.R(4589289, 'plaintext', plaintext, false, true));
            J$.P(4589321, J$.I(typeof exports === 'undefined' ? exports = J$.R(4589305, 'exports', undefined, true, true) : exports = J$.R(4589305, 'exports', exports, true, true)), 'sign', J$.R(4589313, 'sign', sign, false, true));
            J$.P(4589345, J$.I(typeof exports === 'undefined' ? exports = J$.R(4589329, 'exports', undefined, true, true) : exports = J$.R(4589329, 'exports', exports, true, true)), 'rfc3986', J$.R(4589337, 'rfc3986', rfc3986, false, true));
            J$.P(4589369, J$.I(typeof exports === 'undefined' ? exports = J$.R(4589353, 'exports', undefined, true, true) : exports = J$.R(4589353, 'exports', exports, true, true)), 'generateBase', J$.R(4589361, 'generateBase', generateBase, false, true));
        } catch (J$e) {
            J$.Ex(4589793, J$e);
        } finally {
            if (J$.Sr(4589801))
                continue jalangiLabel14;
            else
                break jalangiLabel14;
        }
    }
// JALANGI DO NOT INSTRUMENT

