J$.noInstrEval = false;
jalangiLabel27:
    while (true) {
        try {
            J$.Se(6602049, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestCouchNode/node_modules/assert-plus/assert.js');
            function _capitalize(str) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(6598345, arguments.callee, this, arguments);
                            arguments = J$.N(6598353, 'arguments', arguments, true, false, false);
                            str = J$.N(6598361, 'str', str, true, false, false);
                            return J$.Rt(6598337, J$.B(689714, '+', J$.M(6598305, J$.M(6598297, J$.R(6598281, 'str', str, false, false), 'charAt', false)(J$.T(6598289, 0, 22, false)), 'toUpperCase', false)(), J$.M(6598329, J$.R(6598313, 'str', str, false, false), 'slice', false)(J$.T(6598321, 1, 22, false))));
                        } catch (J$e) {
                            J$.Ex(6602177, J$e);
                        } finally {
                            if (J$.Fr(6602185))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function _toss(name, expected, oper, arg, actual) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(6598521, arguments.callee, this, arguments);
                            arguments = J$.N(6598529, 'arguments', arguments, true, false, false);
                            name = J$.N(6598537, 'name', name, true, false, false);
                            expected = J$.N(6598545, 'expected', expected, true, false, false);
                            oper = J$.N(6598553, 'oper', oper, true, false, false);
                            arg = J$.N(6598561, 'arg', arg, true, false, false);
                            actual = J$.N(6598569, 'actual', actual, true, false, false);
                            throw J$.M(6598513, J$.R(6598369, 'assert', assert, false, true), 'AssertionError', true)(J$.T(6598505, {
                                message: J$.M(6598409, J$.R(6598377, 'util', util, false, true), 'format', false)(J$.T(6598385, '%s (%s) is required', 21, false), J$.R(6598393, 'name', name, false, false), J$.R(6598401, 'expected', expected, false, false)),
                                actual: J$.C(360304, J$.B(689722, '===', J$.R(6598417, 'actual', actual, false, false), J$.T(6598425, undefined, 24, false))) ? J$.U(689730, 'typeof', J$.R(6598433, 'arg', arg, false, false)) : J$.F(6598457, J$.R(6598441, 'actual', actual, false, false), false)(J$.R(6598449, 'arg', arg, false, false)),
                                expected: J$.R(6598465, 'expected', expected, false, false),
                                operator: J$.C(360312, J$.R(6598473, 'oper', oper, false, false)) ? J$._() : J$.T(6598481, '===', 21, false),
                                stackStartFunction: J$.G(6598497, J$.R(6598489, '_toss', _toss, false, true), 'caller')
                            }, 11, false));
                        } catch (J$e) {
                            J$.Ex(6602193, J$e);
                        } finally {
                            if (J$.Fr(6602201))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function _getClass(arg) {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(6598649, arguments.callee, this, arguments);
                            arguments = J$.N(6598657, 'arguments', arguments, true, false, false);
                            arg = J$.N(6598665, 'arg', arg, true, false, false);
                            return J$.Rt(6598641, J$.M(6598633, J$.M(6598609, J$.G(6598593, J$.G(6598585, J$.I(typeof Object === 'undefined' ? Object = J$.R(6598577, 'Object', undefined, true, true) : Object = J$.R(6598577, 'Object', Object, true, true)), 'prototype'), 'toString'), 'call', false)(J$.R(6598601, 'arg', arg, false, false)), 'slice', false)(J$.T(6598617, 8, 22, false), J$.U(689738, '-', J$.T(6598625, 1, 22, false))));
                        } catch (J$e) {
                            J$.Ex(6602209, J$e);
                        } finally {
                            if (J$.Fr(6602217))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function noop() {
                jalangiLabel3:
                    while (true) {
                        try {
                            J$.Fe(6598673, arguments.callee, this, arguments);
                            arguments = J$.N(6598681, 'arguments', arguments, true, false, false);
                        } catch (J$e) {
                            J$.Ex(6602225, J$e);
                        } finally {
                            if (J$.Fr(6602233))
                                continue jalangiLabel3;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function _setExports(ndebug) {
                jalangiLabel26:
                    while (true) {
                        try {
                            J$.Fe(6601953, arguments.callee, this, arguments);
                            arguments = J$.N(6601961, 'arguments', arguments, true, false, false);
                            ndebug = J$.N(6601969, 'ndebug', ndebug, true, false, false);
                            J$.N(6601977, 'keys', keys, false, false, false);
                            J$.N(6601985, 'out', out, false, false, false);
                            var keys = J$.W(6599697, 'keys', J$.M(6599689, J$.I(typeof Object === 'undefined' ? Object = J$.R(6599673, 'Object', undefined, true, true) : Object = J$.R(6599673, 'Object', Object, true, true)), 'keys', false)(J$.R(6599681, 'types', types, false, true)), keys, false, false);
                            var out;
                            if (J$.C(360368, J$.G(6599721, J$.G(6599713, J$.I(typeof process === 'undefined' ? process = J$.R(6599705, 'process', undefined, true, true) : process = J$.R(6599705, 'process', process, true, true)), 'env'), 'NODE_NDEBUG'))) {
                                out = J$.W(6599737, 'out', J$.R(6599729, 'noop', noop, false, true), out, false, false);
                            } else {
                                out = J$.W(6599833, 'out', J$.T(6599825, function (arg, msg) {
                                    jalangiLabel16:
                                        while (true) {
                                            try {
                                                J$.Fe(6599793, arguments.callee, this, arguments);
                                                arguments = J$.N(6599801, 'arguments', arguments, true, false, false);
                                                arg = J$.N(6599809, 'arg', arg, true, false, false);
                                                msg = J$.N(6599817, 'msg', msg, true, false, false);
                                                if (J$.C(360360, J$.U(689906, '!', J$.R(6599745, 'arg', arg, false, false)))) {
                                                    J$.F(6599785, J$.R(6599753, '_toss', _toss, false, true), false)(J$.R(6599761, 'msg', msg, false, false), J$.T(6599769, 'true', 21, false), J$.R(6599777, 'arg', arg, false, false));
                                                }
                                            } catch (J$e) {
                                                J$.Ex(6602433, J$e);
                                            } finally {
                                                if (J$.Fr(6602441))
                                                    continue jalangiLabel16;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false), out, false, false);
                            }
                            J$.M(6600129, J$.R(6599841, 'keys', keys, false, false), 'forEach', false)(J$.T(6600121, function (k) {
                                jalangiLabel18:
                                    while (true) {
                                        try {
                                            J$.Fe(6600089, arguments.callee, this, arguments);
                                            arguments = J$.N(6600097, 'arguments', arguments, true, false, false);
                                            k = J$.N(6600105, 'k', k, true, false, false);
                                            J$.N(6600113, 'type', type, false, false, false);
                                            if (J$.C(360376, J$.R(6599849, 'ndebug', ndebug, false, false))) {
                                                J$.P(6599881, J$.R(6599857, 'out', out, false, false), J$.R(6599865, 'k', k, false, false), J$.R(6599873, 'noop', noop, false, true));
                                                return J$.Rt(6599889, undefined);
                                            }
                                            var type = J$.W(6599921, 'type', J$.G(6599913, J$.R(6599897, 'types', types, false, true), J$.R(6599905, 'k', k, false, false)), type, false, false);
                                            J$.P(6600081, J$.R(6599929, 'out', out, false, false), J$.R(6599937, 'k', k, false, false), J$.T(6600073, function (arg, msg) {
                                                jalangiLabel17:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(6600041, arguments.callee, this, arguments);
                                                            arguments = J$.N(6600049, 'arguments', arguments, true, false, false);
                                                            arg = J$.N(6600057, 'arg', arg, true, false, false);
                                                            msg = J$.N(6600065, 'msg', msg, true, false, false);
                                                            if (J$.C(360384, J$.U(689914, '!', J$.M(6599961, J$.R(6599945, 'type', type, false, false), 'check', false)(J$.R(6599953, 'arg', arg, false, false))))) {
                                                                J$.F(6600033, J$.R(6599969, '_toss', _toss, false, true), false)(J$.R(6599977, 'msg', msg, false, false), J$.R(6599985, 'k', k, false, false), J$.G(6600001, J$.R(6599993, 'type', type, false, false), 'operator'), J$.R(6600009, 'arg', arg, false, false), J$.G(6600025, J$.R(6600017, 'type', type, false, false), 'actual'));
                                                            }
                                                        } catch (J$e) {
                                                            J$.Ex(6602449, J$e);
                                                        } finally {
                                                            if (J$.Fr(6602457))
                                                                continue jalangiLabel17;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false));
                                        } catch (J$e) {
                                            J$.Ex(6602465, J$e);
                                        } finally {
                                            if (J$.Fr(6602473))
                                                continue jalangiLabel18;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            J$.M(6600513, J$.R(6600137, 'keys', keys, false, false), 'forEach', false)(J$.T(6600505, function (k) {
                                jalangiLabel20:
                                    while (true) {
                                        try {
                                            J$.Fe(6600465, arguments.callee, this, arguments);
                                            arguments = J$.N(6600473, 'arguments', arguments, true, false, false);
                                            k = J$.N(6600481, 'k', k, true, false, false);
                                            J$.N(6600489, 'name', name, false, false, false);
                                            J$.N(6600497, 'type', type, false, false, false);
                                            var name = J$.W(6600177, 'name', J$.B(689922, '+', J$.T(6600145, 'optional', 21, false), J$.F(6600169, J$.R(6600153, '_capitalize', _capitalize, false, true), false)(J$.R(6600161, 'k', k, false, false))), name, false, false);
                                            if (J$.C(360392, J$.R(6600185, 'ndebug', ndebug, false, false))) {
                                                J$.P(6600217, J$.R(6600193, 'out', out, false, false), J$.R(6600201, 'name', name, false, false), J$.R(6600209, 'noop', noop, false, true));
                                                return J$.Rt(6600225, undefined);
                                            }
                                            var type = J$.W(6600257, 'type', J$.G(6600249, J$.R(6600233, 'types', types, false, true), J$.R(6600241, 'k', k, false, false)), type, false, false);
                                            J$.P(6600457, J$.R(6600265, 'out', out, false, false), J$.R(6600273, 'name', name, false, false), J$.T(6600449, function (arg, msg) {
                                                jalangiLabel19:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(6600417, arguments.callee, this, arguments);
                                                            arguments = J$.N(6600425, 'arguments', arguments, true, false, false);
                                                            arg = J$.N(6600433, 'arg', arg, true, false, false);
                                                            msg = J$.N(6600441, 'msg', msg, true, false, false);
                                                            if (J$.C(360408, J$.C(360400, J$.B(689930, '===', J$.R(6600281, 'arg', arg, false, false), J$.T(6600289, undefined, 24, false))) ? J$._() : J$.B(689938, '===', J$.R(6600297, 'arg', arg, false, false), J$.T(6600305, null, 25, false)))) {
                                                                return J$.Rt(6600313, undefined);
                                                            }
                                                            if (J$.C(360416, J$.U(689946, '!', J$.M(6600337, J$.R(6600321, 'type', type, false, false), 'check', false)(J$.R(6600329, 'arg', arg, false, false))))) {
                                                                J$.F(6600409, J$.R(6600345, '_toss', _toss, false, true), false)(J$.R(6600353, 'msg', msg, false, false), J$.R(6600361, 'k', k, false, false), J$.G(6600377, J$.R(6600369, 'type', type, false, false), 'operator'), J$.R(6600385, 'arg', arg, false, false), J$.G(6600401, J$.R(6600393, 'type', type, false, false), 'actual'));
                                                            }
                                                        } catch (J$e) {
                                                            J$.Ex(6602481, J$e);
                                                        } finally {
                                                            if (J$.Fr(6602489))
                                                                continue jalangiLabel19;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false));
                                        } catch (J$e) {
                                            J$.Ex(6602497, J$e);
                                        } finally {
                                            if (J$.Fr(6602505))
                                                continue jalangiLabel20;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            J$.M(6601073, J$.R(6600521, 'keys', keys, false, false), 'forEach', false)(J$.T(6601065, function (k) {
                                jalangiLabel22:
                                    while (true) {
                                        try {
                                            J$.Fe(6601017, arguments.callee, this, arguments);
                                            arguments = J$.N(6601025, 'arguments', arguments, true, false, false);
                                            k = J$.N(6601033, 'k', k, true, false, false);
                                            J$.N(6601041, 'name', name, false, false, false);
                                            J$.N(6601049, 'type', type, false, false, false);
                                            J$.N(6601057, 'expected', expected, false, false, false);
                                            var name = J$.W(6600561, 'name', J$.B(689954, '+', J$.T(6600529, 'arrayOf', 21, false), J$.F(6600553, J$.R(6600537, '_capitalize', _capitalize, false, true), false)(J$.R(6600545, 'k', k, false, false))), name, false, false);
                                            if (J$.C(360424, J$.R(6600569, 'ndebug', ndebug, false, false))) {
                                                J$.P(6600601, J$.R(6600577, 'out', out, false, false), J$.R(6600585, 'name', name, false, false), J$.R(6600593, 'noop', noop, false, true));
                                                return J$.Rt(6600609, undefined);
                                            }
                                            var type = J$.W(6600641, 'type', J$.G(6600633, J$.R(6600617, 'types', types, false, true), J$.R(6600625, 'k', k, false, false)), type, false, false);
                                            var expected = J$.W(6600673, 'expected', J$.B(689970, '+', J$.B(689962, '+', J$.T(6600649, '[', 21, false), J$.R(6600657, 'k', k, false, false)), J$.T(6600665, ']', 21, false)), expected, false, false);
                                            J$.P(6601009, J$.R(6600681, 'out', out, false, false), J$.R(6600689, 'name', name, false, false), J$.T(6601001, function (arg, msg) {
                                                jalangiLabel21:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(6600961, arguments.callee, this, arguments);
                                                            arguments = J$.N(6600969, 'arguments', arguments, true, false, false);
                                                            arg = J$.N(6600977, 'arg', arg, true, false, false);
                                                            msg = J$.N(6600985, 'msg', msg, true, false, false);
                                                            J$.N(6600993, 'i', i, false, false, false);
                                                            if (J$.C(360432, J$.U(689978, '!', J$.M(6600713, J$.I(typeof Array === 'undefined' ? Array = J$.R(6600697, 'Array', undefined, true, true) : Array = J$.R(6600697, 'Array', Array, true, true)), 'isArray', false)(J$.R(6600705, 'arg', arg, false, false))))) {
                                                                J$.F(6600785, J$.R(6600721, '_toss', _toss, false, true), false)(J$.R(6600729, 'msg', msg, false, false), J$.R(6600737, 'expected', expected, false, false), J$.G(6600753, J$.R(6600745, 'type', type, false, false), 'operator'), J$.R(6600761, 'arg', arg, false, false), J$.G(6600777, J$.R(6600769, 'type', type, false, false), 'actual'));
                                                            }
                                                            var i;
                                                            for (i = J$.W(6600801, 'i', J$.T(6600793, 0, 22, false), i, false, false); J$.C(360448, J$.B(689986, '<', J$.R(6600809, 'i', i, false, false), J$.G(6600825, J$.R(6600817, 'arg', arg, false, false), 'length'))); J$.B(690010, '-', i = J$.W(6600841, 'i', J$.B(690002, '+', J$.U(689994, '+', J$.R(6600833, 'i', i, false, false)), 1), i, false, false), 1)) {
                                                                if (J$.C(360440, J$.U(690018, '!', J$.M(6600881, J$.R(6600849, 'type', type, false, false), 'check', false)(J$.G(6600873, J$.R(6600857, 'arg', arg, false, false), J$.R(6600865, 'i', i, false, false)))))) {
                                                                    J$.F(6600953, J$.R(6600889, '_toss', _toss, false, true), false)(J$.R(6600897, 'msg', msg, false, false), J$.R(6600905, 'expected', expected, false, false), J$.G(6600921, J$.R(6600913, 'type', type, false, false), 'operator'), J$.R(6600929, 'arg', arg, false, false), J$.G(6600945, J$.R(6600937, 'type', type, false, false), 'actual'));
                                                                }
                                                            }
                                                        } catch (J$e) {
                                                            J$.Ex(6602513, J$e);
                                                        } finally {
                                                            if (J$.Fr(6602521))
                                                                continue jalangiLabel21;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false));
                                        } catch (J$e) {
                                            J$.Ex(6602529, J$e);
                                        } finally {
                                            if (J$.Fr(6602537))
                                                continue jalangiLabel22;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            J$.M(6601673, J$.R(6601081, 'keys', keys, false, false), 'forEach', false)(J$.T(6601665, function (k) {
                                jalangiLabel24:
                                    while (true) {
                                        try {
                                            J$.Fe(6601617, arguments.callee, this, arguments);
                                            arguments = J$.N(6601625, 'arguments', arguments, true, false, false);
                                            k = J$.N(6601633, 'k', k, true, false, false);
                                            J$.N(6601641, 'name', name, false, false, false);
                                            J$.N(6601649, 'type', type, false, false, false);
                                            J$.N(6601657, 'expected', expected, false, false, false);
                                            var name = J$.W(6601121, 'name', J$.B(690026, '+', J$.T(6601089, 'optionalArrayOf', 21, false), J$.F(6601113, J$.R(6601097, '_capitalize', _capitalize, false, true), false)(J$.R(6601105, 'k', k, false, false))), name, false, false);
                                            if (J$.C(360456, J$.R(6601129, 'ndebug', ndebug, false, false))) {
                                                J$.P(6601161, J$.R(6601137, 'out', out, false, false), J$.R(6601145, 'name', name, false, false), J$.R(6601153, 'noop', noop, false, true));
                                                return J$.Rt(6601169, undefined);
                                            }
                                            var type = J$.W(6601201, 'type', J$.G(6601193, J$.R(6601177, 'types', types, false, true), J$.R(6601185, 'k', k, false, false)), type, false, false);
                                            var expected = J$.W(6601233, 'expected', J$.B(690042, '+', J$.B(690034, '+', J$.T(6601209, '[', 21, false), J$.R(6601217, 'k', k, false, false)), J$.T(6601225, ']', 21, false)), expected, false, false);
                                            J$.P(6601609, J$.R(6601241, 'out', out, false, false), J$.R(6601249, 'name', name, false, false), J$.T(6601601, function (arg, msg) {
                                                jalangiLabel23:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(6601561, arguments.callee, this, arguments);
                                                            arguments = J$.N(6601569, 'arguments', arguments, true, false, false);
                                                            arg = J$.N(6601577, 'arg', arg, true, false, false);
                                                            msg = J$.N(6601585, 'msg', msg, true, false, false);
                                                            J$.N(6601593, 'i', i, false, false, false);
                                                            if (J$.C(360472, J$.C(360464, J$.B(690050, '===', J$.R(6601257, 'arg', arg, false, false), J$.T(6601265, undefined, 24, false))) ? J$._() : J$.B(690058, '===', J$.R(6601273, 'arg', arg, false, false), J$.T(6601281, null, 25, false)))) {
                                                                return J$.Rt(6601289, undefined);
                                                            }
                                                            if (J$.C(360480, J$.U(690066, '!', J$.M(6601313, J$.I(typeof Array === 'undefined' ? Array = J$.R(6601297, 'Array', undefined, true, true) : Array = J$.R(6601297, 'Array', Array, true, true)), 'isArray', false)(J$.R(6601305, 'arg', arg, false, false))))) {
                                                                J$.F(6601385, J$.R(6601321, '_toss', _toss, false, true), false)(J$.R(6601329, 'msg', msg, false, false), J$.R(6601337, 'expected', expected, false, false), J$.G(6601353, J$.R(6601345, 'type', type, false, false), 'operator'), J$.R(6601361, 'arg', arg, false, false), J$.G(6601377, J$.R(6601369, 'type', type, false, false), 'actual'));
                                                            }
                                                            var i;
                                                            for (i = J$.W(6601401, 'i', J$.T(6601393, 0, 22, false), i, false, false); J$.C(360496, J$.B(690074, '<', J$.R(6601409, 'i', i, false, false), J$.G(6601425, J$.R(6601417, 'arg', arg, false, false), 'length'))); J$.B(690098, '-', i = J$.W(6601441, 'i', J$.B(690090, '+', J$.U(690082, '+', J$.R(6601433, 'i', i, false, false)), 1), i, false, false), 1)) {
                                                                if (J$.C(360488, J$.U(690106, '!', J$.M(6601481, J$.R(6601449, 'type', type, false, false), 'check', false)(J$.G(6601473, J$.R(6601457, 'arg', arg, false, false), J$.R(6601465, 'i', i, false, false)))))) {
                                                                    J$.F(6601553, J$.R(6601489, '_toss', _toss, false, true), false)(J$.R(6601497, 'msg', msg, false, false), J$.R(6601505, 'expected', expected, false, false), J$.G(6601521, J$.R(6601513, 'type', type, false, false), 'operator'), J$.R(6601529, 'arg', arg, false, false), J$.G(6601545, J$.R(6601537, 'type', type, false, false), 'actual'));
                                                                }
                                                            }
                                                        } catch (J$e) {
                                                            J$.Ex(6602545, J$e);
                                                        } finally {
                                                            if (J$.Fr(6602553))
                                                                continue jalangiLabel23;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false));
                                        } catch (J$e) {
                                            J$.Ex(6602561, J$e);
                                        } finally {
                                            if (J$.Fr(6602569))
                                                continue jalangiLabel24;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            J$.M(6601905, J$.M(6601697, J$.I(typeof Object === 'undefined' ? Object = J$.R(6601681, 'Object', undefined, true, true) : Object = J$.R(6601681, 'Object', Object, true, true)), 'keys', false)(J$.R(6601689, 'assert', assert, false, true)), 'forEach', false)(J$.T(6601897, function (k) {
                                jalangiLabel25:
                                    while (true) {
                                        try {
                                            J$.Fe(6601873, arguments.callee, this, arguments);
                                            arguments = J$.N(6601881, 'arguments', arguments, true, false, false);
                                            k = J$.N(6601889, 'k', k, true, false, false);
                                            if (J$.C(360504, J$.B(690114, '===', J$.R(6601705, 'k', k, false, false), J$.T(6601713, 'AssertionError', 21, false)))) {
                                                J$.P(6601761, J$.R(6601721, 'out', out, false, false), J$.R(6601729, 'k', k, false, false), J$.G(6601753, J$.R(6601737, 'assert', assert, false, true), J$.R(6601745, 'k', k, false, false)));
                                                return J$.Rt(6601769, undefined);
                                            }
                                            if (J$.C(360512, J$.R(6601777, 'ndebug', ndebug, false, false))) {
                                                J$.P(6601809, J$.R(6601785, 'out', out, false, false), J$.R(6601793, 'k', k, false, false), J$.R(6601801, 'noop', noop, false, true));
                                                return J$.Rt(6601817, undefined);
                                            }
                                            J$.P(6601865, J$.R(6601825, 'out', out, false, false), J$.R(6601833, 'k', k, false, false), J$.G(6601857, J$.R(6601841, 'assert', assert, false, true), J$.R(6601849, 'k', k, false, false)));
                                        } catch (J$e) {
                                            J$.Ex(6602577, J$e);
                                        } finally {
                                            if (J$.Fr(6602585))
                                                continue jalangiLabel25;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            J$.P(6601929, J$.R(6601913, 'out', out, false, false), '_setExports', J$.R(6601921, '_setExports', _setExports, false, true));
                            return J$.Rt(6601945, J$.R(6601937, 'out', out, false, false));
                        } catch (J$e) {
                            J$.Ex(6602593, J$e);
                        } finally {
                            if (J$.Fr(6602601))
                                continue jalangiLabel26;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(6602057, 'assert', assert, false, false, false);
            J$.N(6602065, 'Stream', Stream, false, false, false);
            J$.N(6602073, 'util', util, false, false, false);
            J$.N(6602081, 'UUID_REGEXP', UUID_REGEXP, false, false, false);
            _capitalize = J$.N(6602097, '_capitalize', J$.T(6602089, _capitalize, 12, false), true, false, false);
            _toss = J$.N(6602113, '_toss', J$.T(6602105, _toss, 12, false), true, false, false);
            _getClass = J$.N(6602129, '_getClass', J$.T(6602121, _getClass, 12, false), true, false, false);
            noop = J$.N(6602145, 'noop', J$.T(6602137, noop, 12, false), true, false, false);
            J$.N(6602153, 'types', types, false, false, false);
            _setExports = J$.N(6602169, '_setExports', J$.T(6602161, _setExports, 12, false), true, false, false);
            var assert = J$.W(6598185, 'assert', J$.F(6598177, J$.I(typeof require === 'undefined' ? require = J$.R(6598161, 'require', undefined, true, true) : require = J$.R(6598161, 'require', require, true, true)), false)(J$.T(6598169, 'assert', 21, false)), assert, false, true);
            var Stream = J$.W(6598225, 'Stream', J$.G(6598217, J$.F(6598209, J$.I(typeof require === 'undefined' ? require = J$.R(6598193, 'require', undefined, true, true) : require = J$.R(6598193, 'require', require, true, true)), false)(J$.T(6598201, 'stream', 21, false)), 'Stream'), Stream, false, true);
            var util = J$.W(6598257, 'util', J$.F(6598249, J$.I(typeof require === 'undefined' ? require = J$.R(6598233, 'require', undefined, true, true) : require = J$.R(6598233, 'require', require, true, true)), false)(J$.T(6598241, 'util', 21, false)), util, false, true);
            var UUID_REGEXP = J$.W(6598273, 'UUID_REGEXP', J$.T(6598265, /^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$/, 14, false), UUID_REGEXP, false, true);
            var types = J$.W(6599665, 'types', J$.T(6599657, {
                bool: J$.T(6598745, {
                    check: J$.T(6598737, function (arg) {
                        jalangiLabel4:
                            while (true) {
                                try {
                                    J$.Fe(6598713, arguments.callee, this, arguments);
                                    arguments = J$.N(6598721, 'arguments', arguments, true, false, false);
                                    arg = J$.N(6598729, 'arg', arg, true, false, false);
                                    return J$.Rt(6598705, J$.B(689754, '===', J$.U(689746, 'typeof', J$.R(6598689, 'arg', arg, false, false)), J$.T(6598697, 'boolean', 21, false)));
                                } catch (J$e) {
                                    J$.Ex(6602241, J$e);
                                } finally {
                                    if (J$.Fr(6602249))
                                        continue jalangiLabel4;
                                    else
                                        return J$.Ra();
                                }
                            }
                    }, 12, false)
                }, 11, false),
                func: J$.T(6598809, {
                    check: J$.T(6598801, function (arg) {
                        jalangiLabel5:
                            while (true) {
                                try {
                                    J$.Fe(6598777, arguments.callee, this, arguments);
                                    arguments = J$.N(6598785, 'arguments', arguments, true, false, false);
                                    arg = J$.N(6598793, 'arg', arg, true, false, false);
                                    return J$.Rt(6598769, J$.B(689770, '===', J$.U(689762, 'typeof', J$.R(6598753, 'arg', arg, false, false)), J$.T(6598761, 'function', 21, false)));
                                } catch (J$e) {
                                    J$.Ex(6602257, J$e);
                                } finally {
                                    if (J$.Fr(6602265))
                                        continue jalangiLabel5;
                                    else
                                        return J$.Ra();
                                }
                            }
                    }, 12, false)
                }, 11, false),
                string: J$.T(6598873, {
                    check: J$.T(6598865, function (arg) {
                        jalangiLabel6:
                            while (true) {
                                try {
                                    J$.Fe(6598841, arguments.callee, this, arguments);
                                    arguments = J$.N(6598849, 'arguments', arguments, true, false, false);
                                    arg = J$.N(6598857, 'arg', arg, true, false, false);
                                    return J$.Rt(6598833, J$.B(689786, '===', J$.U(689778, 'typeof', J$.R(6598817, 'arg', arg, false, false)), J$.T(6598825, 'string', 21, false)));
                                } catch (J$e) {
                                    J$.Ex(6602273, J$e);
                                } finally {
                                    if (J$.Fr(6602281))
                                        continue jalangiLabel6;
                                    else
                                        return J$.Ra();
                                }
                            }
                    }, 12, false)
                }, 11, false),
                object: J$.T(6598953, {
                    check: J$.T(6598945, function (arg) {
                        jalangiLabel7:
                            while (true) {
                                try {
                                    J$.Fe(6598921, arguments.callee, this, arguments);
                                    arguments = J$.N(6598929, 'arguments', arguments, true, false, false);
                                    arg = J$.N(6598937, 'arg', arg, true, false, false);
                                    return J$.Rt(6598913, J$.C(360320, J$.B(689802, '===', J$.U(689794, 'typeof', J$.R(6598881, 'arg', arg, false, false)), J$.T(6598889, 'object', 21, false))) ? J$.B(689810, '!==', J$.R(6598897, 'arg', arg, false, false), J$.T(6598905, null, 25, false)) : J$._());
                                } catch (J$e) {
                                    J$.Ex(6602289, J$e);
                                } finally {
                                    if (J$.Fr(6602297))
                                        continue jalangiLabel7;
                                    else
                                        return J$.Ra();
                                }
                            }
                    }, 12, false)
                }, 11, false),
                number: J$.T(6599041, {
                    check: J$.T(6599033, function (arg) {
                        jalangiLabel8:
                            while (true) {
                                try {
                                    J$.Fe(6599009, arguments.callee, this, arguments);
                                    arguments = J$.N(6599017, 'arguments', arguments, true, false, false);
                                    arg = J$.N(6599025, 'arg', arg, true, false, false);
                                    return J$.Rt(6599001, J$.C(360328, J$.B(689826, '===', J$.U(689818, 'typeof', J$.R(6598961, 'arg', arg, false, false)), J$.T(6598969, 'number', 21, false))) ? J$.U(689834, '!', J$.F(6598993, J$.I(typeof isNaN === 'undefined' ? isNaN = J$.R(6598977, 'isNaN', undefined, true, true) : isNaN = J$.R(6598977, 'isNaN', isNaN, true, true)), false)(J$.R(6598985, 'arg', arg, false, false))) : J$._());
                                } catch (J$e) {
                                    J$.Ex(6602305, J$e);
                                } finally {
                                    if (J$.Fr(6602313))
                                        continue jalangiLabel8;
                                    else
                                        return J$.Ra();
                                }
                            }
                    }, 12, false)
                }, 11, false),
                finite: J$.T(6599153, {
                    check: J$.T(6599145, function (arg) {
                        jalangiLabel9:
                            while (true) {
                                try {
                                    J$.Fe(6599121, arguments.callee, this, arguments);
                                    arguments = J$.N(6599129, 'arguments', arguments, true, false, false);
                                    arg = J$.N(6599137, 'arg', arg, true, false, false);
                                    return J$.Rt(6599113, J$.C(360344, J$.C(360336, J$.B(689850, '===', J$.U(689842, 'typeof', J$.R(6599049, 'arg', arg, false, false)), J$.T(6599057, 'number', 21, false))) ? J$.U(689858, '!', J$.F(6599081, J$.I(typeof isNaN === 'undefined' ? isNaN = J$.R(6599065, 'isNaN', undefined, true, true) : isNaN = J$.R(6599065, 'isNaN', isNaN, true, true)), false)(J$.R(6599073, 'arg', arg, false, false))) : J$._()) ? J$.F(6599105, J$.I(typeof isFinite === 'undefined' ? isFinite = J$.R(6599089, 'isFinite', undefined, true, true) : isFinite = J$.R(6599089, 'isFinite', isFinite, true, true)), false)(J$.R(6599097, 'arg', arg, false, false)) : J$._());
                                } catch (J$e) {
                                    J$.Ex(6602321, J$e);
                                } finally {
                                    if (J$.Fr(6602329))
                                        continue jalangiLabel9;
                                    else
                                        return J$.Ra();
                                }
                            }
                    }, 12, false)
                }, 11, false),
                buffer: J$.T(6599233, {
                    check: J$.T(6599217, function (arg) {
                        jalangiLabel10:
                            while (true) {
                                try {
                                    J$.Fe(6599193, arguments.callee, this, arguments);
                                    arguments = J$.N(6599201, 'arguments', arguments, true, false, false);
                                    arg = J$.N(6599209, 'arg', arg, true, false, false);
                                    return J$.Rt(6599185, J$.M(6599177, J$.I(typeof Buffer === 'undefined' ? Buffer = J$.R(6599161, 'Buffer', undefined, true, true) : Buffer = J$.R(6599161, 'Buffer', Buffer, true, true)), 'isBuffer', false)(J$.R(6599169, 'arg', arg, false, false)));
                                } catch (J$e) {
                                    J$.Ex(6602337, J$e);
                                } finally {
                                    if (J$.Fr(6602345))
                                        continue jalangiLabel10;
                                    else
                                        return J$.Ra();
                                }
                            }
                    }, 12, false),
                    operator: J$.T(6599225, 'Buffer.isBuffer', 21, false)
                }, 11, false),
                array: J$.T(6599313, {
                    check: J$.T(6599297, function (arg) {
                        jalangiLabel11:
                            while (true) {
                                try {
                                    J$.Fe(6599273, arguments.callee, this, arguments);
                                    arguments = J$.N(6599281, 'arguments', arguments, true, false, false);
                                    arg = J$.N(6599289, 'arg', arg, true, false, false);
                                    return J$.Rt(6599265, J$.M(6599257, J$.I(typeof Array === 'undefined' ? Array = J$.R(6599241, 'Array', undefined, true, true) : Array = J$.R(6599241, 'Array', Array, true, true)), 'isArray', false)(J$.R(6599249, 'arg', arg, false, false)));
                                } catch (J$e) {
                                    J$.Ex(6602353, J$e);
                                } finally {
                                    if (J$.Fr(6602361))
                                        continue jalangiLabel11;
                                    else
                                        return J$.Ra();
                                }
                            }
                    }, 12, false),
                    operator: J$.T(6599305, 'Array.isArray', 21, false)
                }, 11, false),
                stream: J$.T(6599393, {
                    check: J$.T(6599369, function (arg) {
                        jalangiLabel12:
                            while (true) {
                                try {
                                    J$.Fe(6599345, arguments.callee, this, arguments);
                                    arguments = J$.N(6599353, 'arguments', arguments, true, false, false);
                                    arg = J$.N(6599361, 'arg', arg, true, false, false);
                                    return J$.Rt(6599337, J$.B(689866, 'instanceof', J$.R(6599321, 'arg', arg, false, false), J$.R(6599329, 'Stream', Stream, false, true)));
                                } catch (J$e) {
                                    J$.Ex(6602369, J$e);
                                } finally {
                                    if (J$.Fr(6602377))
                                        continue jalangiLabel12;
                                    else
                                        return J$.Ra();
                                }
                            }
                    }, 12, false),
                    operator: J$.T(6599377, 'instanceof', 21, false),
                    actual: J$.R(6599385, '_getClass', _getClass, false, true)
                }, 11, false),
                date: J$.T(6599473, {
                    check: J$.T(6599449, function (arg) {
                        jalangiLabel13:
                            while (true) {
                                try {
                                    J$.Fe(6599425, arguments.callee, this, arguments);
                                    arguments = J$.N(6599433, 'arguments', arguments, true, false, false);
                                    arg = J$.N(6599441, 'arg', arg, true, false, false);
                                    return J$.Rt(6599417, J$.B(689874, 'instanceof', J$.R(6599401, 'arg', arg, false, false), J$.I(typeof Date === 'undefined' ? Date = J$.R(6599409, 'Date', undefined, true, true) : Date = J$.R(6599409, 'Date', Date, true, true))));
                                } catch (J$e) {
                                    J$.Ex(6602385, J$e);
                                } finally {
                                    if (J$.Fr(6602393))
                                        continue jalangiLabel13;
                                    else
                                        return J$.Ra();
                                }
                            }
                    }, 12, false),
                    operator: J$.T(6599457, 'instanceof', 21, false),
                    actual: J$.R(6599465, '_getClass', _getClass, false, true)
                }, 11, false),
                regexp: J$.T(6599553, {
                    check: J$.T(6599529, function (arg) {
                        jalangiLabel14:
                            while (true) {
                                try {
                                    J$.Fe(6599505, arguments.callee, this, arguments);
                                    arguments = J$.N(6599513, 'arguments', arguments, true, false, false);
                                    arg = J$.N(6599521, 'arg', arg, true, false, false);
                                    return J$.Rt(6599497, J$.B(689882, 'instanceof', J$.R(6599481, 'arg', arg, false, false), J$.I(typeof RegExp === 'undefined' ? RegExp = J$.R(6599489, 'RegExp', undefined, true, true) : RegExp = J$.R(6599489, 'RegExp', RegExp, true, true))));
                                } catch (J$e) {
                                    J$.Ex(6602401, J$e);
                                } finally {
                                    if (J$.Fr(6602409))
                                        continue jalangiLabel14;
                                    else
                                        return J$.Ra();
                                }
                            }
                    }, 12, false),
                    operator: J$.T(6599537, 'instanceof', 21, false),
                    actual: J$.R(6599545, '_getClass', _getClass, false, true)
                }, 11, false),
                uuid: J$.T(6599649, {
                    check: J$.T(6599633, function (arg) {
                        jalangiLabel15:
                            while (true) {
                                try {
                                    J$.Fe(6599609, arguments.callee, this, arguments);
                                    arguments = J$.N(6599617, 'arguments', arguments, true, false, false);
                                    arg = J$.N(6599625, 'arg', arg, true, false, false);
                                    return J$.Rt(6599601, J$.C(360352, J$.B(689898, '===', J$.U(689890, 'typeof', J$.R(6599561, 'arg', arg, false, false)), J$.T(6599569, 'string', 21, false))) ? J$.M(6599593, J$.R(6599577, 'UUID_REGEXP', UUID_REGEXP, false, true), 'test', false)(J$.R(6599585, 'arg', arg, false, false)) : J$._());
                                } catch (J$e) {
                                    J$.Ex(6602417, J$e);
                                } finally {
                                    if (J$.Fr(6602425))
                                        continue jalangiLabel15;
                                    else
                                        return J$.Ra();
                                }
                            }
                    }, 12, false),
                    operator: J$.T(6599641, 'isUUID', 21, false)
                }, 11, false)
            }, 11, false), types, false, true);
            J$.P(6602041, J$.I(typeof module === 'undefined' ? module = J$.R(6601993, 'module', undefined, true, true) : module = J$.R(6601993, 'module', module, true, true)), 'exports', J$.F(6602033, J$.R(6602001, '_setExports', _setExports, false, true), false)(J$.G(6602025, J$.G(6602017, J$.I(typeof process === 'undefined' ? process = J$.R(6602009, 'process', undefined, true, true) : process = J$.R(6602009, 'process', process, true, true)), 'env'), 'NODE_NDEBUG')));
        } catch (J$e) {
            J$.Ex(6602609, J$e);
        } finally {
            if (J$.Sr(6602617))
                continue jalangiLabel27;
            else
                break jalangiLabel27;
        }
    }
// JALANGI DO NOT INSTRUMENT

