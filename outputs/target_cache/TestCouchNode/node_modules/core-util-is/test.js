J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(7087361, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestCouchNode/node_modules/core-util-is/test.js');
            J$.N(7087369, 'assert', assert, false, false, false);
            J$.N(7087377, 't', t, false, false, false);
            var assert = J$.W(7084849, 'assert', J$.F(7084841, J$.I(typeof require === 'undefined' ? require = J$.R(7084825, 'require', undefined, true, true) : require = J$.R(7084825, 'require', require, true, true)), false)(J$.T(7084833, 'tap', 21, false)), assert, false, true);
            var t = J$.W(7084881, 't', J$.F(7084873, J$.I(typeof require === 'undefined' ? require = J$.R(7084857, 'require', undefined, true, true) : require = J$.R(7084857, 'require', require, true, true)), false)(J$.T(7084865, './lib/util', 21, false)), t, false, true);
            J$.M(7084929, J$.R(7084889, 'assert', assert, false, true), 'equal', false)(J$.M(7084913, J$.R(7084897, 't', t, false, true), 'isArray', false)(J$.T(7084905, [], 10, false)), J$.T(7084921, true, 23, false));
            J$.M(7084977, J$.R(7084937, 'assert', assert, false, true), 'equal', false)(J$.M(7084961, J$.R(7084945, 't', t, false, true), 'isArray', false)(J$.T(7084953, {}, 11, false)), J$.T(7084969, false, 23, false));
            J$.M(7085025, J$.R(7084985, 'assert', assert, false, true), 'equal', false)(J$.M(7085009, J$.R(7084993, 't', t, false, true), 'isBoolean', false)(J$.T(7085001, null, 25, false)), J$.T(7085017, false, 23, false));
            J$.M(7085073, J$.R(7085033, 'assert', assert, false, true), 'equal', false)(J$.M(7085057, J$.R(7085041, 't', t, false, true), 'isBoolean', false)(J$.T(7085049, true, 23, false)), J$.T(7085065, true, 23, false));
            J$.M(7085121, J$.R(7085081, 'assert', assert, false, true), 'equal', false)(J$.M(7085105, J$.R(7085089, 't', t, false, true), 'isBoolean', false)(J$.T(7085097, false, 23, false)), J$.T(7085113, true, 23, false));
            J$.M(7085169, J$.R(7085129, 'assert', assert, false, true), 'equal', false)(J$.M(7085153, J$.R(7085137, 't', t, false, true), 'isNull', false)(J$.T(7085145, null, 25, false)), J$.T(7085161, true, 23, false));
            J$.M(7085217, J$.R(7085177, 'assert', assert, false, true), 'equal', false)(J$.M(7085201, J$.R(7085185, 't', t, false, true), 'isNull', false)(J$.T(7085193, undefined, 24, false)), J$.T(7085209, false, 23, false));
            J$.M(7085265, J$.R(7085225, 'assert', assert, false, true), 'equal', false)(J$.M(7085249, J$.R(7085233, 't', t, false, true), 'isNull', false)(J$.T(7085241, false, 23, false)), J$.T(7085257, false, 23, false));
            J$.M(7085305, J$.R(7085273, 'assert', assert, false, true), 'equal', false)(J$.M(7085289, J$.R(7085281, 't', t, false, true), 'isNull', false)(), J$.T(7085297, false, 23, false));
            J$.M(7085353, J$.R(7085313, 'assert', assert, false, true), 'equal', false)(J$.M(7085337, J$.R(7085321, 't', t, false, true), 'isNullOrUndefined', false)(J$.T(7085329, null, 25, false)), J$.T(7085345, true, 23, false));
            J$.M(7085401, J$.R(7085361, 'assert', assert, false, true), 'equal', false)(J$.M(7085385, J$.R(7085369, 't', t, false, true), 'isNullOrUndefined', false)(J$.T(7085377, undefined, 24, false)), J$.T(7085393, true, 23, false));
            J$.M(7085449, J$.R(7085409, 'assert', assert, false, true), 'equal', false)(J$.M(7085433, J$.R(7085417, 't', t, false, true), 'isNullOrUndefined', false)(J$.T(7085425, false, 23, false)), J$.T(7085441, false, 23, false));
            J$.M(7085489, J$.R(7085457, 'assert', assert, false, true), 'equal', false)(J$.M(7085473, J$.R(7085465, 't', t, false, true), 'isNullOrUndefined', false)(), J$.T(7085481, true, 23, false));
            J$.M(7085537, J$.R(7085497, 'assert', assert, false, true), 'equal', false)(J$.M(7085521, J$.R(7085505, 't', t, false, true), 'isNumber', false)(J$.T(7085513, null, 25, false)), J$.T(7085529, false, 23, false));
            J$.M(7085585, J$.R(7085545, 'assert', assert, false, true), 'equal', false)(J$.M(7085569, J$.R(7085553, 't', t, false, true), 'isNumber', false)(J$.T(7085561, '1', 21, false)), J$.T(7085577, false, 23, false));
            J$.M(7085633, J$.R(7085593, 'assert', assert, false, true), 'equal', false)(J$.M(7085617, J$.R(7085601, 't', t, false, true), 'isNumber', false)(J$.T(7085609, 1, 22, false)), J$.T(7085625, true, 23, false));
            J$.M(7085681, J$.R(7085641, 'assert', assert, false, true), 'equal', false)(J$.M(7085665, J$.R(7085649, 't', t, false, true), 'isString', false)(J$.T(7085657, null, 25, false)), J$.T(7085673, false, 23, false));
            J$.M(7085729, J$.R(7085689, 'assert', assert, false, true), 'equal', false)(J$.M(7085713, J$.R(7085697, 't', t, false, true), 'isString', false)(J$.T(7085705, '1', 21, false)), J$.T(7085721, true, 23, false));
            J$.M(7085777, J$.R(7085737, 'assert', assert, false, true), 'equal', false)(J$.M(7085761, J$.R(7085745, 't', t, false, true), 'isString', false)(J$.T(7085753, 1, 22, false)), J$.T(7085769, false, 23, false));
            J$.M(7085825, J$.R(7085785, 'assert', assert, false, true), 'equal', false)(J$.M(7085809, J$.R(7085793, 't', t, false, true), 'isSymbol', false)(J$.T(7085801, null, 25, false)), J$.T(7085817, false, 23, false));
            J$.M(7085873, J$.R(7085833, 'assert', assert, false, true), 'equal', false)(J$.M(7085857, J$.R(7085841, 't', t, false, true), 'isSymbol', false)(J$.T(7085849, '1', 21, false)), J$.T(7085865, false, 23, false));
            J$.M(7085921, J$.R(7085881, 'assert', assert, false, true), 'equal', false)(J$.M(7085905, J$.R(7085889, 't', t, false, true), 'isSymbol', false)(J$.T(7085897, 1, 22, false)), J$.T(7085913, false, 23, false));
            J$.M(7085977, J$.R(7085929, 'assert', assert, false, true), 'equal', false)(J$.M(7085961, J$.R(7085937, 't', t, false, true), 'isSymbol', false)(J$.F(7085953, J$.I(typeof Symbol === 'undefined' ? Symbol = J$.R(7085945, 'Symbol', undefined, true, true) : Symbol = J$.R(7085945, 'Symbol', Symbol, true, true)), false)()), J$.T(7085969, true, 23, false));
            J$.M(7086025, J$.R(7085985, 'assert', assert, false, true), 'equal', false)(J$.M(7086009, J$.R(7085993, 't', t, false, true), 'isUndefined', false)(J$.T(7086001, null, 25, false)), J$.T(7086017, false, 23, false));
            J$.M(7086073, J$.R(7086033, 'assert', assert, false, true), 'equal', false)(J$.M(7086057, J$.R(7086041, 't', t, false, true), 'isUndefined', false)(J$.T(7086049, undefined, 24, false)), J$.T(7086065, true, 23, false));
            J$.M(7086121, J$.R(7086081, 'assert', assert, false, true), 'equal', false)(J$.M(7086105, J$.R(7086089, 't', t, false, true), 'isUndefined', false)(J$.T(7086097, false, 23, false)), J$.T(7086113, false, 23, false));
            J$.M(7086161, J$.R(7086129, 'assert', assert, false, true), 'equal', false)(J$.M(7086145, J$.R(7086137, 't', t, false, true), 'isUndefined', false)(), J$.T(7086153, true, 23, false));
            J$.M(7086209, J$.R(7086169, 'assert', assert, false, true), 'equal', false)(J$.M(7086193, J$.R(7086177, 't', t, false, true), 'isRegExp', false)(J$.T(7086185, null, 25, false)), J$.T(7086201, false, 23, false));
            J$.M(7086257, J$.R(7086217, 'assert', assert, false, true), 'equal', false)(J$.M(7086241, J$.R(7086225, 't', t, false, true), 'isRegExp', false)(J$.T(7086233, '1', 21, false)), J$.T(7086249, false, 23, false));
            J$.M(7086313, J$.R(7086265, 'assert', assert, false, true), 'equal', false)(J$.M(7086297, J$.R(7086273, 't', t, false, true), 'isRegExp', false)(J$.F(7086289, J$.I(typeof RegExp === 'undefined' ? RegExp = J$.R(7086281, 'RegExp', undefined, true, true) : RegExp = J$.R(7086281, 'RegExp', RegExp, true, true)), true)()), J$.T(7086305, true, 23, false));
            J$.M(7086361, J$.R(7086321, 'assert', assert, false, true), 'equal', false)(J$.M(7086345, J$.R(7086329, 't', t, false, true), 'isObject', false)(J$.T(7086337, {}, 11, false)), J$.T(7086353, true, 23, false));
            J$.M(7086409, J$.R(7086369, 'assert', assert, false, true), 'equal', false)(J$.M(7086393, J$.R(7086377, 't', t, false, true), 'isObject', false)(J$.T(7086385, [], 10, false)), J$.T(7086401, true, 23, false));
            J$.M(7086465, J$.R(7086417, 'assert', assert, false, true), 'equal', false)(J$.M(7086449, J$.R(7086425, 't', t, false, true), 'isObject', false)(J$.F(7086441, J$.I(typeof RegExp === 'undefined' ? RegExp = J$.R(7086433, 'RegExp', undefined, true, true) : RegExp = J$.R(7086433, 'RegExp', RegExp, true, true)), true)()), J$.T(7086457, true, 23, false));
            J$.M(7086521, J$.R(7086473, 'assert', assert, false, true), 'equal', false)(J$.M(7086505, J$.R(7086481, 't', t, false, true), 'isObject', false)(J$.F(7086497, J$.I(typeof Date === 'undefined' ? Date = J$.R(7086489, 'Date', undefined, true, true) : Date = J$.R(7086489, 'Date', Date, true, true)), true)()), J$.T(7086513, true, 23, false));
            J$.M(7086569, J$.R(7086529, 'assert', assert, false, true), 'equal', false)(J$.M(7086553, J$.R(7086537, 't', t, false, true), 'isDate', false)(J$.T(7086545, null, 25, false)), J$.T(7086561, false, 23, false));
            J$.M(7086617, J$.R(7086577, 'assert', assert, false, true), 'equal', false)(J$.M(7086601, J$.R(7086585, 't', t, false, true), 'isDate', false)(J$.T(7086593, '1', 21, false)), J$.T(7086609, false, 23, false));
            J$.M(7086673, J$.R(7086625, 'assert', assert, false, true), 'equal', false)(J$.M(7086657, J$.R(7086633, 't', t, false, true), 'isDate', false)(J$.F(7086649, J$.I(typeof Date === 'undefined' ? Date = J$.R(7086641, 'Date', undefined, true, true) : Date = J$.R(7086641, 'Date', Date, true, true)), true)()), J$.T(7086665, true, 23, false));
            J$.M(7086721, J$.R(7086681, 'assert', assert, false, true), 'equal', false)(J$.M(7086705, J$.R(7086689, 't', t, false, true), 'isError', false)(J$.T(7086697, null, 25, false)), J$.T(7086713, false, 23, false));
            J$.M(7086777, J$.R(7086729, 'assert', assert, false, true), 'equal', false)(J$.M(7086761, J$.R(7086737, 't', t, false, true), 'isError', false)(J$.T(7086753, { err: J$.T(7086745, true, 23, false) }, 11, false)), J$.T(7086769, false, 23, false));
            J$.M(7086833, J$.R(7086785, 'assert', assert, false, true), 'equal', false)(J$.M(7086817, J$.R(7086793, 't', t, false, true), 'isError', false)(J$.F(7086809, J$.I(typeof Error === 'undefined' ? Error = J$.R(7086801, 'Error', undefined, true, true) : Error = J$.R(7086801, 'Error', Error, true, true)), true)()), J$.T(7086825, true, 23, false));
            J$.M(7086881, J$.R(7086841, 'assert', assert, false, true), 'equal', false)(J$.M(7086865, J$.R(7086849, 't', t, false, true), 'isFunction', false)(J$.T(7086857, null, 25, false)), J$.T(7086873, false, 23, false));
            J$.M(7086929, J$.R(7086889, 'assert', assert, false, true), 'equal', false)(J$.M(7086913, J$.R(7086897, 't', t, false, true), 'isFunction', false)(J$.T(7086905, {}, 11, false)), J$.T(7086921, false, 23, false));
            J$.M(7086993, J$.R(7086937, 'assert', assert, false, true), 'equal', false)(J$.M(7086977, J$.R(7086945, 't', t, false, true), 'isFunction', false)(J$.T(7086969, function () {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(7086953, arguments.callee, this, arguments);
                            arguments = J$.N(7086961, 'arguments', arguments, true, false, false);
                        } catch (J$e) {
                            J$.Ex(7087385, J$e);
                        } finally {
                            if (J$.Fr(7087393))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false)), J$.T(7086985, true, 23, false));
            J$.M(7087041, J$.R(7087001, 'assert', assert, false, true), 'equal', false)(J$.M(7087025, J$.R(7087009, 't', t, false, true), 'isPrimitive', false)(J$.T(7087017, null, 25, false)), J$.T(7087033, true, 23, false));
            J$.M(7087089, J$.R(7087049, 'assert', assert, false, true), 'equal', false)(J$.M(7087073, J$.R(7087057, 't', t, false, true), 'isPrimitive', false)(J$.T(7087065, '', 21, false)), J$.T(7087081, true, 23, false));
            J$.M(7087137, J$.R(7087097, 'assert', assert, false, true), 'equal', false)(J$.M(7087121, J$.R(7087105, 't', t, false, true), 'isPrimitive', false)(J$.T(7087113, 0, 22, false)), J$.T(7087129, true, 23, false));
            J$.M(7087193, J$.R(7087145, 'assert', assert, false, true), 'equal', false)(J$.M(7087177, J$.R(7087153, 't', t, false, true), 'isPrimitive', false)(J$.F(7087169, J$.I(typeof Date === 'undefined' ? Date = J$.R(7087161, 'Date', undefined, true, true) : Date = J$.R(7087161, 'Date', Date, true, true)), true)()), J$.T(7087185, false, 23, false));
            J$.M(7087241, J$.R(7087201, 'assert', assert, false, true), 'equal', false)(J$.M(7087225, J$.R(7087209, 't', t, false, true), 'isBuffer', false)(J$.T(7087217, null, 25, false)), J$.T(7087233, false, 23, false));
            J$.M(7087289, J$.R(7087249, 'assert', assert, false, true), 'equal', false)(J$.M(7087273, J$.R(7087257, 't', t, false, true), 'isBuffer', false)(J$.T(7087265, {}, 11, false)), J$.T(7087281, false, 23, false));
            J$.M(7087353, J$.R(7087297, 'assert', assert, false, true), 'equal', false)(J$.M(7087337, J$.R(7087305, 't', t, false, true), 'isBuffer', false)(J$.F(7087329, J$.I(typeof Buffer === 'undefined' ? Buffer = J$.R(7087313, 'Buffer', undefined, true, true) : Buffer = J$.R(7087313, 'Buffer', Buffer, true, true)), true)(J$.T(7087321, 0, 22, false))), J$.T(7087345, true, 23, false));
        } catch (J$e) {
            J$.Ex(7087401, J$e);
        } finally {
            if (J$.Sr(7087409))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

