J$.noInstrEval = false;
jalangiLabel2:
    while (true) {
        try {
            J$.Se(4809577, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestCouchNode/node_modules/qs/lib/formats.js');
            J$.N(4809585, 'replace', replace, false, false, false);
            J$.N(4809593, 'percentTwenties', percentTwenties, false, false, false);
            J$.T(4809337, 'use strict', 21, false);
            var replace = J$.W(4809369, 'replace', J$.G(4809361, J$.G(4809353, J$.I(typeof String === 'undefined' ? String = J$.R(4809345, 'String', undefined, true, true) : String = J$.R(4809345, 'String', String, true, true)), 'prototype'), 'replace'), replace, false, true);
            var percentTwenties = J$.W(4809385, 'percentTwenties', J$.T(4809377, /%20/g, 14, false), percentTwenties, false, true);
            J$.P(4809569, J$.I(typeof module === 'undefined' ? module = J$.R(4809393, 'module', undefined, true, true) : module = J$.R(4809393, 'module', module, true, true)), 'exports', J$.T(4809561, {
                'default': J$.T(4809401, 'RFC3986', 21, false),
                formatters: J$.T(4809537, {
                    RFC1738: J$.T(4809481, function (value) {
                        jalangiLabel0:
                            while (true) {
                                try {
                                    J$.Fe(4809457, arguments.callee, this, arguments);
                                    arguments = J$.N(4809465, 'arguments', arguments, true, false, false);
                                    value = J$.N(4809473, 'value', value, true, false, false);
                                    return J$.Rt(4809449, J$.M(4809441, J$.R(4809409, 'replace', replace, false, true), 'call', false)(J$.R(4809417, 'value', value, false, false), J$.R(4809425, 'percentTwenties', percentTwenties, false, true), J$.T(4809433, '+', 21, false)));
                                } catch (J$e) {
                                    J$.Ex(4809601, J$e);
                                } finally {
                                    if (J$.Fr(4809609))
                                        continue jalangiLabel0;
                                    else
                                        return J$.Ra();
                                }
                            }
                    }, 12, false),
                    RFC3986: J$.T(4809529, function (value) {
                        jalangiLabel1:
                            while (true) {
                                try {
                                    J$.Fe(4809505, arguments.callee, this, arguments);
                                    arguments = J$.N(4809513, 'arguments', arguments, true, false, false);
                                    value = J$.N(4809521, 'value', value, true, false, false);
                                    return J$.Rt(4809497, J$.R(4809489, 'value', value, false, false));
                                } catch (J$e) {
                                    J$.Ex(4809617, J$e);
                                } finally {
                                    if (J$.Fr(4809625))
                                        continue jalangiLabel1;
                                    else
                                        return J$.Ra();
                                }
                            }
                    }, 12, false)
                }, 11, false),
                RFC1738: J$.T(4809545, 'RFC1738', 21, false),
                RFC3986: J$.T(4809553, 'RFC3986', 21, false)
            }, 11, false));
        } catch (J$e) {
            J$.Ex(4809633, J$e);
        } finally {
            if (J$.Sr(4809641))
                continue jalangiLabel2;
            else
                break jalangiLabel2;
        }
    }
// JALANGI DO NOT INSTRUMENT

