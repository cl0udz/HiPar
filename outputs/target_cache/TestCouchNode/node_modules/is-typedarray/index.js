J$.noInstrEval = false;
jalangiLabel3:
    while (true) {
        try {
            J$.Se(7474561, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestCouchNode/node_modules/is-typedarray/index.js');
            function isTypedArray(arr) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(7474289, arguments.callee, this, arguments);
                            arguments = J$.N(7474297, 'arguments', arguments, true, false, false);
                            arr = J$.N(7474305, 'arr', arr, true, false, false);
                            return J$.Rt(7474281, J$.C(397912, J$.F(7474249, J$.R(7474233, 'isStrictTypedArray', isStrictTypedArray, false, true), false)(J$.R(7474241, 'arr', arr, false, false))) ? J$._() : J$.F(7474273, J$.R(7474257, 'isLooseTypedArray', isLooseTypedArray, false, true), false)(J$.R(7474265, 'arr', arr, false, false)));
                        } catch (J$e) {
                            J$.Ex(7474633, J$e);
                        } finally {
                            if (J$.Fr(7474641))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function isStrictTypedArray(arr) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(7474465, arguments.callee, this, arguments);
                            arguments = J$.N(7474473, 'arguments', arguments, true, false, false);
                            arr = J$.N(7474481, 'arr', arr, true, false, false);
                            return J$.Rt(7474457, J$.C(397976, J$.C(397968, J$.C(397960, J$.C(397952, J$.C(397944, J$.C(397936, J$.C(397928, J$.C(397920, J$.B(744426, 'instanceof', J$.R(7474313, 'arr', arr, false, false), J$.I(typeof Int8Array === 'undefined' ? Int8Array = J$.R(7474321, 'Int8Array', undefined, true, true) : Int8Array = J$.R(7474321, 'Int8Array', Int8Array, true, true)))) ? J$._() : J$.B(744434, 'instanceof', J$.R(7474329, 'arr', arr, false, false), J$.I(typeof Int16Array === 'undefined' ? Int16Array = J$.R(7474337, 'Int16Array', undefined, true, true) : Int16Array = J$.R(7474337, 'Int16Array', Int16Array, true, true)))) ? J$._() : J$.B(744442, 'instanceof', J$.R(7474345, 'arr', arr, false, false), J$.I(typeof Int32Array === 'undefined' ? Int32Array = J$.R(7474353, 'Int32Array', undefined, true, true) : Int32Array = J$.R(7474353, 'Int32Array', Int32Array, true, true)))) ? J$._() : J$.B(744450, 'instanceof', J$.R(7474361, 'arr', arr, false, false), J$.I(typeof Uint8Array === 'undefined' ? Uint8Array = J$.R(7474369, 'Uint8Array', undefined, true, true) : Uint8Array = J$.R(7474369, 'Uint8Array', Uint8Array, true, true)))) ? J$._() : J$.B(744458, 'instanceof', J$.R(7474377, 'arr', arr, false, false), J$.I(typeof Uint8ClampedArray === 'undefined' ? Uint8ClampedArray = J$.R(7474385, 'Uint8ClampedArray', undefined, true, true) : Uint8ClampedArray = J$.R(7474385, 'Uint8ClampedArray', Uint8ClampedArray, true, true)))) ? J$._() : J$.B(744466, 'instanceof', J$.R(7474393, 'arr', arr, false, false), J$.I(typeof Uint16Array === 'undefined' ? Uint16Array = J$.R(7474401, 'Uint16Array', undefined, true, true) : Uint16Array = J$.R(7474401, 'Uint16Array', Uint16Array, true, true)))) ? J$._() : J$.B(744474, 'instanceof', J$.R(7474409, 'arr', arr, false, false), J$.I(typeof Uint32Array === 'undefined' ? Uint32Array = J$.R(7474417, 'Uint32Array', undefined, true, true) : Uint32Array = J$.R(7474417, 'Uint32Array', Uint32Array, true, true)))) ? J$._() : J$.B(744482, 'instanceof', J$.R(7474425, 'arr', arr, false, false), J$.I(typeof Float32Array === 'undefined' ? Float32Array = J$.R(7474433, 'Float32Array', undefined, true, true) : Float32Array = J$.R(7474433, 'Float32Array', Float32Array, true, true)))) ? J$._() : J$.B(744490, 'instanceof', J$.R(7474441, 'arr', arr, false, false), J$.I(typeof Float64Array === 'undefined' ? Float64Array = J$.R(7474449, 'Float64Array', undefined, true, true) : Float64Array = J$.R(7474449, 'Float64Array', Float64Array, true, true))));
                        } catch (J$e) {
                            J$.Ex(7474649, J$e);
                        } finally {
                            if (J$.Fr(7474657))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function isLooseTypedArray(arr) {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(7474537, arguments.callee, this, arguments);
                            arguments = J$.N(7474545, 'arguments', arguments, true, false, false);
                            arr = J$.N(7474553, 'arr', arr, true, false, false);
                            return J$.Rt(7474529, J$.G(7474521, J$.R(7474489, 'names', names, false, true), J$.M(7474513, J$.R(7474497, 'toString', toString, false, true), 'call', false)(J$.R(7474505, 'arr', arr, false, false))));
                        } catch (J$e) {
                            J$.Ex(7474665, J$e);
                        } finally {
                            if (J$.Fr(7474673))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(7474569, 'toString', toString, false, false, false);
            J$.N(7474577, 'names', names, false, false, false);
            isTypedArray = J$.N(7474593, 'isTypedArray', J$.T(7474585, isTypedArray, 12, false), true, false, false);
            isStrictTypedArray = J$.N(7474609, 'isStrictTypedArray', J$.T(7474601, isStrictTypedArray, 12, false), true, false, false);
            isLooseTypedArray = J$.N(7474625, 'isLooseTypedArray', J$.T(7474617, isLooseTypedArray, 12, false), true, false, false);
            J$.P(7474057, J$.I(typeof module === 'undefined' ? module = J$.R(7474041, 'module', undefined, true, true) : module = J$.R(7474041, 'module', module, true, true)), 'exports', J$.R(7474049, 'isTypedArray', isTypedArray, false, true));
            J$.P(7474081, J$.R(7474065, 'isTypedArray', isTypedArray, false, true), 'strict', J$.R(7474073, 'isStrictTypedArray', isStrictTypedArray, false, true));
            J$.P(7474105, J$.R(7474089, 'isTypedArray', isTypedArray, false, true), 'loose', J$.R(7474097, 'isLooseTypedArray', isLooseTypedArray, false, true));
            var toString = J$.W(7474137, 'toString', J$.G(7474129, J$.G(7474121, J$.I(typeof Object === 'undefined' ? Object = J$.R(7474113, 'Object', undefined, true, true) : Object = J$.R(7474113, 'Object', Object, true, true)), 'prototype'), 'toString'), toString, false, true);
            var names = J$.W(7474225, 'names', J$.T(7474217, {
                '[object Int8Array]': J$.T(7474145, true, 23, false),
                '[object Int16Array]': J$.T(7474153, true, 23, false),
                '[object Int32Array]': J$.T(7474161, true, 23, false),
                '[object Uint8Array]': J$.T(7474169, true, 23, false),
                '[object Uint8ClampedArray]': J$.T(7474177, true, 23, false),
                '[object Uint16Array]': J$.T(7474185, true, 23, false),
                '[object Uint32Array]': J$.T(7474193, true, 23, false),
                '[object Float32Array]': J$.T(7474201, true, 23, false),
                '[object Float64Array]': J$.T(7474209, true, 23, false)
            }, 11, false), names, false, true);
        } catch (J$e) {
            J$.Ex(7474681, J$e);
        } finally {
            if (J$.Sr(7474689))
                continue jalangiLabel3;
            else
                break jalangiLabel3;
        }
    }
// JALANGI DO NOT INSTRUMENT

