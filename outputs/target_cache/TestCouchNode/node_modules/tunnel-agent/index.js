J$.noInstrEval = false;
jalangiLabel23:
    while (true) {
        try {
            J$.Se(5346625, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestCouchNode/node_modules/tunnel-agent/index.js');
            function httpOverHttp(options) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(5341689, arguments.callee, this, arguments);
                            arguments = J$.N(5341697, 'arguments', arguments, true, false, false);
                            options = J$.N(5341705, 'options', options, true, false, false);
                            J$.N(5341713, 'agent', agent, false, false, false);
                            var agent = J$.W(5341633, 'agent', J$.F(5341625, J$.R(5341609, 'TunnelingAgent', TunnelingAgent, false, true), true)(J$.R(5341617, 'options', options, false, false)), agent, false, false);
                            J$.P(5341665, J$.R(5341641, 'agent', agent, false, false), 'request', J$.G(5341657, J$.R(5341649, 'http', http, false, true), 'request'));
                            return J$.Rt(5341681, J$.R(5341673, 'agent', agent, false, false));
                        } catch (J$e) {
                            J$.Ex(5346817, J$e);
                        } finally {
                            if (J$.Fr(5346825))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function httpsOverHttp(options) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(5341849, arguments.callee, this, arguments);
                            arguments = J$.N(5341857, 'arguments', arguments, true, false, false);
                            options = J$.N(5341865, 'options', options, true, false, false);
                            J$.N(5341873, 'agent', agent, false, false, false);
                            var agent = J$.W(5341745, 'agent', J$.F(5341737, J$.R(5341721, 'TunnelingAgent', TunnelingAgent, false, true), true)(J$.R(5341729, 'options', options, false, false)), agent, false, false);
                            J$.P(5341777, J$.R(5341753, 'agent', agent, false, false), 'request', J$.G(5341769, J$.R(5341761, 'http', http, false, true), 'request'));
                            J$.P(5341801, J$.R(5341785, 'agent', agent, false, false), 'createSocket', J$.R(5341793, 'createSecureSocket', createSecureSocket, false, true));
                            J$.P(5341825, J$.R(5341809, 'agent', agent, false, false), 'defaultPort', J$.T(5341817, 443, 22, false));
                            return J$.Rt(5341841, J$.R(5341833, 'agent', agent, false, false));
                        } catch (J$e) {
                            J$.Ex(5346833, J$e);
                        } finally {
                            if (J$.Fr(5346841))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function httpOverHttps(options) {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(5341961, arguments.callee, this, arguments);
                            arguments = J$.N(5341969, 'arguments', arguments, true, false, false);
                            options = J$.N(5341977, 'options', options, true, false, false);
                            J$.N(5341985, 'agent', agent, false, false, false);
                            var agent = J$.W(5341905, 'agent', J$.F(5341897, J$.R(5341881, 'TunnelingAgent', TunnelingAgent, false, true), true)(J$.R(5341889, 'options', options, false, false)), agent, false, false);
                            J$.P(5341937, J$.R(5341913, 'agent', agent, false, false), 'request', J$.G(5341929, J$.R(5341921, 'https', https, false, true), 'request'));
                            return J$.Rt(5341953, J$.R(5341945, 'agent', agent, false, false));
                        } catch (J$e) {
                            J$.Ex(5346849, J$e);
                        } finally {
                            if (J$.Fr(5346857))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function httpsOverHttps(options) {
                jalangiLabel3:
                    while (true) {
                        try {
                            J$.Fe(5342121, arguments.callee, this, arguments);
                            arguments = J$.N(5342129, 'arguments', arguments, true, false, false);
                            options = J$.N(5342137, 'options', options, true, false, false);
                            J$.N(5342145, 'agent', agent, false, false, false);
                            var agent = J$.W(5342017, 'agent', J$.F(5342009, J$.R(5341993, 'TunnelingAgent', TunnelingAgent, false, true), true)(J$.R(5342001, 'options', options, false, false)), agent, false, false);
                            J$.P(5342049, J$.R(5342025, 'agent', agent, false, false), 'request', J$.G(5342041, J$.R(5342033, 'https', https, false, true), 'request'));
                            J$.P(5342073, J$.R(5342057, 'agent', agent, false, false), 'createSocket', J$.R(5342065, 'createSecureSocket', createSecureSocket, false, true));
                            J$.P(5342097, J$.R(5342081, 'agent', agent, false, false), 'defaultPort', J$.T(5342089, 443, 22, false));
                            return J$.Rt(5342113, J$.R(5342105, 'agent', agent, false, false));
                        } catch (J$e) {
                            J$.Ex(5346865, J$e);
                        } finally {
                            if (J$.Fr(5346873))
                                continue jalangiLabel3;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function TunnelingAgent(options) {
                jalangiLabel5:
                    while (true) {
                        try {
                            J$.Fe(5342745, arguments.callee, this, arguments);
                            arguments = J$.N(5342753, 'arguments', arguments, true, false, false);
                            options = J$.N(5342761, 'options', options, true, false, false);
                            J$.N(5342769, 'self', self, false, false, false);
                            var self = J$.W(5342161, 'self', J$.R(5342153, 'this', this, false, false), self, false, false);
                            J$.P(5342193, J$.R(5342169, 'self', self, false, false), 'options', J$.C(287600, J$.R(5342177, 'options', options, false, false)) ? J$._() : J$.T(5342185, {}, 11, false));
                            J$.P(5342241, J$.R(5342201, 'self', self, false, false), 'proxyOptions', J$.C(287608, J$.G(5342225, J$.G(5342217, J$.R(5342209, 'self', self, false, false), 'options'), 'proxy')) ? J$._() : J$.T(5342233, {}, 11, false));
                            J$.P(5342305, J$.R(5342249, 'self', self, false, false), 'maxSockets', J$.C(287616, J$.G(5342273, J$.G(5342265, J$.R(5342257, 'self', self, false, false), 'options'), 'maxSockets')) ? J$._() : J$.G(5342297, J$.G(5342289, J$.R(5342281, 'http', http, false, true), 'Agent'), 'defaultMaxSockets'));
                            J$.P(5342329, J$.R(5342313, 'self', self, false, false), 'requests', J$.T(5342321, [], 10, false));
                            J$.P(5342353, J$.R(5342337, 'self', self, false, false), 'sockets', J$.T(5342345, [], 10, false));
                            J$.M(5342737, J$.R(5342361, 'self', self, false, false), 'on', false)(J$.T(5342369, 'free', 21, false), J$.T(5342729, function onFree(socket, host, port) {
                                jalangiLabel4:
                                    while (true) {
                                        try {
                                            J$.Fe(5342665, arguments.callee, this, arguments);
                                            arguments = J$.N(5342673, 'arguments', arguments, true, false, false);
                                            socket = J$.N(5342681, 'socket', socket, true, false, false);
                                            host = J$.N(5342689, 'host', host, true, false, false);
                                            port = J$.N(5342697, 'port', port, true, false, false);
                                            J$.N(5342705, 'i', i, false, false, false);
                                            J$.N(5342713, 'len', len, false, false, false);
                                            J$.N(5342721, 'pending', pending, false, false, false);
                                            for (var i = J$.W(5342409, 'i', J$.T(5342377, 0, 22, false), i, false, false), len = J$.W(5342417, 'len', J$.G(5342401, J$.G(5342393, J$.R(5342385, 'self', self, false, false), 'requests'), 'length'), len, false, false); J$.C(287640, J$.B(605322, '<', J$.R(5342425, 'i', i, false, false), J$.R(5342433, 'len', len, false, false))); i = J$.W(5342449, 'i', J$.B(605338, '+', J$.U(605330, '+', J$.R(5342441, 'i', i, false, false)), 1), i, false, false)) {
                                                var pending = J$.W(5342489, 'pending', J$.G(5342481, J$.G(5342465, J$.R(5342457, 'self', self, false, false), 'requests'), J$.R(5342473, 'i', i, false, false)), pending, false, false);
                                                if (J$.C(287632, J$.C(287624, J$.B(605346, '===', J$.G(5342505, J$.R(5342497, 'pending', pending, false, false), 'host'), J$.R(5342513, 'host', host, false, false))) ? J$.B(605354, '===', J$.G(5342529, J$.R(5342521, 'pending', pending, false, false), 'port'), J$.R(5342537, 'port', port, false, false)) : J$._())) {
                                                    J$.M(5342577, J$.G(5342553, J$.R(5342545, 'self', self, false, false), 'requests'), 'splice', false)(J$.R(5342561, 'i', i, false, false), J$.T(5342569, 1, 22, false));
                                                    J$.M(5342609, J$.G(5342593, J$.R(5342585, 'pending', pending, false, false), 'request'), 'onSocket', false)(J$.R(5342601, 'socket', socket, false, false));
                                                    return J$.Rt(5342617, undefined);
                                                }
                                            }
                                            J$.M(5342633, J$.R(5342625, 'socket', socket, false, false), 'destroy', false)();
                                            J$.M(5342657, J$.R(5342641, 'self', self, false, false), 'removeSocket', false)(J$.R(5342649, 'socket', socket, false, false));
                                        } catch (J$e) {
                                            J$.Ex(5346881, J$e);
                                        } finally {
                                            if (J$.Fr(5346889))
                                                continue jalangiLabel4;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                        } catch (J$e) {
                            J$.Ex(5346897, J$e);
                        } finally {
                            if (J$.Fr(5346905))
                                continue jalangiLabel5;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function createSecureSocket(options, cb) {
                jalangiLabel19:
                    while (true) {
                        try {
                            J$.Fe(5345793, arguments.callee, this, arguments);
                            arguments = J$.N(5345801, 'arguments', arguments, true, false, false);
                            options = J$.N(5345809, 'options', options, true, false, false);
                            cb = J$.N(5345817, 'cb', cb, true, false, false);
                            J$.N(5345825, 'self', self, false, false, false);
                            var self = J$.W(5345505, 'self', J$.R(5345497, 'this', this, false, false), self, false, false);
                            J$.M(5345785, J$.G(5345529, J$.G(5345521, J$.R(5345513, 'TunnelingAgent', TunnelingAgent, false, true), 'prototype'), 'createSocket'), 'call', false)(J$.R(5345537, 'self', self, false, false), J$.R(5345545, 'options', options, false, false), J$.T(5345777, function (socket) {
                                jalangiLabel18:
                                    while (true) {
                                        try {
                                            J$.Fe(5345745, arguments.callee, this, arguments);
                                            arguments = J$.N(5345753, 'arguments', arguments, true, false, false);
                                            socket = J$.N(5345761, 'socket', socket, true, false, false);
                                            J$.N(5345769, 'secureSocket', secureSocket, false, false, false);
                                            var secureSocket = J$.W(5345649, 'secureSocket', J$.M(5345641, J$.R(5345553, 'tls', tls, false, true), 'connect', false)(J$.T(5345561, 0, 22, false), J$.F(5345633, J$.R(5345569, 'mergeOptions', mergeOptions, false, true), false)(J$.T(5345577, {}, 11, false), J$.G(5345593, J$.R(5345585, 'self', self, false, false), 'options'), J$.T(5345625, {
                                                servername: J$.G(5345609, J$.R(5345601, 'options', options, false, false), 'host'),
                                                socket: J$.R(5345617, 'socket', socket, false, false)
                                            }, 11, false))), secureSocket, false, false);
                                            J$.P(5345713, J$.G(5345665, J$.R(5345657, 'self', self, false, false), 'sockets'), J$.M(5345697, J$.G(5345681, J$.R(5345673, 'self', self, false, false), 'sockets'), 'indexOf', false)(J$.R(5345689, 'socket', socket, false, false)), J$.R(5345705, 'secureSocket', secureSocket, false, false));
                                            J$.F(5345737, J$.R(5345721, 'cb', cb, false, false), false)(J$.R(5345729, 'secureSocket', secureSocket, false, false));
                                        } catch (J$e) {
                                            J$.Ex(5347105, J$e);
                                        } finally {
                                            if (J$.Fr(5347113))
                                                continue jalangiLabel18;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                        } catch (J$e) {
                            J$.Ex(5347121, J$e);
                        } finally {
                            if (J$.Fr(5347129))
                                continue jalangiLabel19;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function mergeOptions(target) {
                jalangiLabel20:
                    while (true) {
                        try {
                            J$.Fe(5346185, arguments.callee, this, arguments);
                            arguments = J$.N(5346193, 'arguments', arguments, true, false, false);
                            target = J$.N(5346201, 'target', target, true, false, false);
                            J$.N(5346209, 'i', i, false, false, false);
                            J$.N(5346217, 'len', len, false, false, false);
                            J$.N(5346225, 'overrides', overrides, false, false, false);
                            J$.N(5346233, 'keys', keys, false, false, false);
                            J$.N(5346241, 'j', j, false, false, false);
                            J$.N(5346249, 'keyLen', keyLen, false, false, false);
                            J$.N(5346257, 'k', k, false, false, false);
                            for (var i = J$.W(5345857, 'i', J$.T(5345833, 1, 22, false), i, false, false), len = J$.W(5345865, 'len', J$.G(5345849, J$.I(typeof arguments === 'undefined' ? arguments = J$.R(5345841, 'arguments', undefined, true, true) : arguments = J$.R(5345841, 'arguments', arguments, true, true)), 'length'), len, false, false); J$.C(287728, J$.B(605466, '<', J$.R(5345873, 'i', i, false, false), J$.R(5345881, 'len', len, false, false))); i = J$.W(5345897, 'i', J$.B(605482, '+', J$.U(605474, '+', J$.R(5345889, 'i', i, false, false)), 1), i, false, false)) {
                                var overrides = J$.W(5345929, 'overrides', J$.G(5345921, J$.I(typeof arguments === 'undefined' ? arguments = J$.R(5345905, 'arguments', undefined, true, true) : arguments = J$.R(5345905, 'arguments', arguments, true, true)), J$.R(5345913, 'i', i, false, false)), overrides, false, false);
                                if (J$.C(287720, J$.B(605498, '===', J$.U(605490, 'typeof', J$.R(5345937, 'overrides', overrides, false, false)), J$.T(5345945, 'object', 21, false)))) {
                                    var keys = J$.W(5345977, 'keys', J$.M(5345969, J$.I(typeof Object === 'undefined' ? Object = J$.R(5345953, 'Object', undefined, true, true) : Object = J$.R(5345953, 'Object', Object, true, true)), 'keys', false)(J$.R(5345961, 'overrides', overrides, false, false)), keys, false, false);
                                    for (var j = J$.W(5346009, 'j', J$.T(5345985, 0, 22, false), j, false, false), keyLen = J$.W(5346017, 'keyLen', J$.G(5346001, J$.R(5345993, 'keys', keys, false, false), 'length'), keyLen, false, false); J$.C(287712, J$.B(605506, '<', J$.R(5346025, 'j', j, false, false), J$.R(5346033, 'keyLen', keyLen, false, false))); j = J$.W(5346049, 'j', J$.B(605522, '+', J$.U(605514, '+', J$.R(5346041, 'j', j, false, false)), 1), j, false, false)) {
                                        var k = J$.W(5346081, 'k', J$.G(5346073, J$.R(5346057, 'keys', keys, false, false), J$.R(5346065, 'j', j, false, false)), k, false, false);
                                        if (J$.C(287704, J$.B(605530, '!==', J$.G(5346105, J$.R(5346089, 'overrides', overrides, false, false), J$.R(5346097, 'k', k, false, false)), J$.T(5346113, undefined, 24, false)))) {
                                            J$.P(5346161, J$.R(5346121, 'target', target, false, false), J$.R(5346129, 'k', k, false, false), J$.G(5346153, J$.R(5346137, 'overrides', overrides, false, false), J$.R(5346145, 'k', k, false, false)));
                                        }
                                    }
                                }
                            }
                            return J$.Rt(5346177, J$.R(5346169, 'target', target, false, false));
                        } catch (J$e) {
                            J$.Ex(5347137, J$e);
                        } finally {
                            if (J$.Fr(5347145))
                                continue jalangiLabel20;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(5346633, 'net', net, false, false, false);
            J$.N(5346641, 'tls', tls, false, false, false);
            J$.N(5346649, 'http', http, false, false, false);
            J$.N(5346657, 'https', https, false, false, false);
            J$.N(5346665, 'events', events, false, false, false);
            J$.N(5346673, 'assert', assert, false, false, false);
            J$.N(5346681, 'util', util, false, false, false);
            J$.N(5346689, 'Buffer', Buffer, false, false, false);
            httpOverHttp = J$.N(5346705, 'httpOverHttp', J$.T(5346697, httpOverHttp, 12, false), true, false, false);
            httpsOverHttp = J$.N(5346721, 'httpsOverHttp', J$.T(5346713, httpsOverHttp, 12, false), true, false, false);
            httpOverHttps = J$.N(5346737, 'httpOverHttps', J$.T(5346729, httpOverHttps, 12, false), true, false, false);
            httpsOverHttps = J$.N(5346753, 'httpsOverHttps', J$.T(5346745, httpsOverHttps, 12, false), true, false, false);
            TunnelingAgent = J$.N(5346769, 'TunnelingAgent', J$.T(5346761, TunnelingAgent, 12, false), true, false, false);
            createSecureSocket = J$.N(5346785, 'createSecureSocket', J$.T(5346777, createSecureSocket, 12, false), true, false, false);
            mergeOptions = J$.N(5346801, 'mergeOptions', J$.T(5346793, mergeOptions, 12, false), true, false, false);
            J$.N(5346809, 'debug', debug, false, false, false);
            J$.T(5341241, 'use strict', 21, false);
            var net = J$.W(5341449, 'net', J$.F(5341265, J$.I(typeof require === 'undefined' ? require = J$.R(5341249, 'require', undefined, true, true) : require = J$.R(5341249, 'require', require, true, true)), false)(J$.T(5341257, 'net', 21, false)), net, false, true), tls = J$.W(5341457, 'tls', J$.F(5341289, J$.I(typeof require === 'undefined' ? require = J$.R(5341273, 'require', undefined, true, true) : require = J$.R(5341273, 'require', require, true, true)), false)(J$.T(5341281, 'tls', 21, false)), tls, false, true), http = J$.W(5341465, 'http', J$.F(5341313, J$.I(typeof require === 'undefined' ? require = J$.R(5341297, 'require', undefined, true, true) : require = J$.R(5341297, 'require', require, true, true)), false)(J$.T(5341305, 'http', 21, false)), http, false, true), https = J$.W(5341473, 'https', J$.F(5341337, J$.I(typeof require === 'undefined' ? require = J$.R(5341321, 'require', undefined, true, true) : require = J$.R(5341321, 'require', require, true, true)), false)(J$.T(5341329, 'https', 21, false)), https, false, true), events = J$.W(5341481, 'events', J$.F(5341361, J$.I(typeof require === 'undefined' ? require = J$.R(5341345, 'require', undefined, true, true) : require = J$.R(5341345, 'require', require, true, true)), false)(J$.T(5341353, 'events', 21, false)), events, false, true), assert = J$.W(5341489, 'assert', J$.F(5341385, J$.I(typeof require === 'undefined' ? require = J$.R(5341369, 'require', undefined, true, true) : require = J$.R(5341369, 'require', require, true, true)), false)(J$.T(5341377, 'assert', 21, false)), assert, false, true), util = J$.W(5341497, 'util', J$.F(5341409, J$.I(typeof require === 'undefined' ? require = J$.R(5341393, 'require', undefined, true, true) : require = J$.R(5341393, 'require', require, true, true)), false)(J$.T(5341401, 'util', 21, false)), util, false, true), Buffer = J$.W(5341505, 'Buffer', J$.G(5341441, J$.F(5341433, J$.I(typeof require === 'undefined' ? require = J$.R(5341417, 'require', undefined, true, true) : require = J$.R(5341417, 'require', require, true, true)), false)(J$.T(5341425, 'safe-buffer', 21, false)), 'Buffer'), Buffer, false, true);
            J$.P(5341529, J$.I(typeof exports === 'undefined' ? exports = J$.R(5341513, 'exports', undefined, true, true) : exports = J$.R(5341513, 'exports', exports, true, true)), 'httpOverHttp', J$.R(5341521, 'httpOverHttp', httpOverHttp, false, true));
            J$.P(5341553, J$.I(typeof exports === 'undefined' ? exports = J$.R(5341537, 'exports', undefined, true, true) : exports = J$.R(5341537, 'exports', exports, true, true)), 'httpsOverHttp', J$.R(5341545, 'httpsOverHttp', httpsOverHttp, false, true));
            J$.P(5341577, J$.I(typeof exports === 'undefined' ? exports = J$.R(5341561, 'exports', undefined, true, true) : exports = J$.R(5341561, 'exports', exports, true, true)), 'httpOverHttps', J$.R(5341569, 'httpOverHttps', httpOverHttps, false, true));
            J$.P(5341601, J$.I(typeof exports === 'undefined' ? exports = J$.R(5341585, 'exports', undefined, true, true) : exports = J$.R(5341585, 'exports', exports, true, true)), 'httpsOverHttps', J$.R(5341593, 'httpsOverHttps', httpsOverHttps, false, true));
            J$.M(5342809, J$.R(5342777, 'util', util, false, true), 'inherits', false)(J$.R(5342785, 'TunnelingAgent', TunnelingAgent, false, true), J$.G(5342801, J$.R(5342793, 'events', events, false, true), 'EventEmitter'));
            J$.P(5343169, J$.G(5342825, J$.R(5342817, 'TunnelingAgent', TunnelingAgent, false, true), 'prototype'), 'addRequest', J$.T(5343161, function addRequest(req, options) {
                jalangiLabel6:
                    while (true) {
                        try {
                            J$.Fe(5343121, arguments.callee, this, arguments);
                            arguments = J$.N(5343129, 'arguments', arguments, true, false, false);
                            req = J$.N(5343137, 'req', req, true, false, false);
                            options = J$.N(5343145, 'options', options, true, false, false);
                            J$.N(5343153, 'self', self, false, false, false);
                            var self = J$.W(5342841, 'self', J$.R(5342833, 'this', this, false, false), self, false, false);
                            if (J$.C(287648, J$.B(605370, '===', J$.U(605362, 'typeof', J$.R(5342849, 'options', options, false, false)), J$.T(5342857, 'string', 21, false)))) {
                                options = J$.W(5342929, 'options', J$.T(5342921, {
                                    host: J$.R(5342865, 'options', options, false, false),
                                    port: J$.G(5342889, J$.I(typeof arguments === 'undefined' ? arguments = J$.R(5342873, 'arguments', undefined, true, true) : arguments = J$.R(5342873, 'arguments', arguments, true, true)), J$.T(5342881, 2, 22, false)),
                                    path: J$.G(5342913, J$.I(typeof arguments === 'undefined' ? arguments = J$.R(5342897, 'arguments', undefined, true, true) : arguments = J$.R(5342897, 'arguments', arguments, true, true)), J$.T(5342905, 3, 22, false))
                                }, 11, false), options, false, false);
                            }
                            if (J$.C(287656, J$.B(605378, '>=', J$.G(5342953, J$.G(5342945, J$.R(5342937, 'self', self, false, false), 'sockets'), 'length'), J$.G(5342969, J$.R(5342961, 'this', this, false, false), 'maxSockets')))) {
                                J$.M(5343041, J$.G(5342985, J$.R(5342977, 'self', self, false, false), 'requests'), 'push', false)(J$.T(5343033, {
                                    host: J$.G(5343001, J$.R(5342993, 'options', options, false, false), 'host'),
                                    port: J$.G(5343017, J$.R(5343009, 'options', options, false, false), 'port'),
                                    request: J$.R(5343025, 'req', req, false, false)
                                }, 11, false));
                                return J$.Rt(5343049, undefined);
                            }
                            J$.M(5343113, J$.R(5343057, 'self', self, false, false), 'createConnection', false)(J$.T(5343105, {
                                host: J$.G(5343073, J$.R(5343065, 'options', options, false, false), 'host'),
                                port: J$.G(5343089, J$.R(5343081, 'options', options, false, false), 'port'),
                                request: J$.R(5343097, 'req', req, false, false)
                            }, 11, false));
                        } catch (J$e) {
                            J$.Ex(5346913, J$e);
                        } finally {
                            if (J$.Fr(5346921))
                                continue jalangiLabel6;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(5343689, J$.G(5343185, J$.R(5343177, 'TunnelingAgent', TunnelingAgent, false, true), 'prototype'), 'createConnection', J$.T(5343681, function createConnection(pending) {
                jalangiLabel10:
                    while (true) {
                        try {
                            J$.Fe(5343649, arguments.callee, this, arguments);
                            arguments = J$.N(5343657, 'arguments', arguments, true, false, false);
                            pending = J$.N(5343665, 'pending', pending, true, false, false);
                            J$.N(5343673, 'self', self, false, false, false);
                            var self = J$.W(5343201, 'self', J$.R(5343193, 'this', this, false, false), self, false, false);
                            J$.M(5343641, J$.R(5343209, 'self', self, false, false), 'createSocket', false)(J$.R(5343217, 'pending', pending, false, false), J$.T(5343633, function (socket) {
                                jalangiLabel9:
                                    while (true) {
                                        try {
                                            J$.Fe(5343577, arguments.callee, this, arguments);
                                            function onFree() {
                                                jalangiLabel7:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(5343417, arguments.callee, this, arguments);
                                                            arguments = J$.N(5343425, 'arguments', arguments, true, false, false);
                                                            J$.M(5343409, J$.R(5343353, 'self', self, false, false), 'emit', false)(J$.T(5343361, 'free', 21, false), J$.R(5343369, 'socket', socket, false, false), J$.G(5343385, J$.R(5343377, 'pending', pending, false, false), 'host'), J$.G(5343401, J$.R(5343393, 'pending', pending, false, false), 'port'));
                                                        } catch (J$e) {
                                                            J$.Ex(5346929, J$e);
                                                        } finally {
                                                            if (J$.Fr(5346937))
                                                                continue jalangiLabel7;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }
                                            function onCloseOrRemove(err) {
                                                jalangiLabel8:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(5343553, arguments.callee, this, arguments);
                                                            arguments = J$.N(5343561, 'arguments', arguments, true, false, false);
                                                            err = J$.N(5343569, 'err', err, true, false, false);
                                                            J$.M(5343449, J$.R(5343433, 'self', self, false, false), 'removeSocket', false)(J$.R(5343441, 'socket', socket, false, false));
                                                            J$.M(5343481, J$.R(5343457, 'socket', socket, false, false), 'removeListener', false)(J$.T(5343465, 'free', 21, false), J$.R(5343473, 'onFree', onFree, false, false));
                                                            J$.M(5343513, J$.R(5343489, 'socket', socket, false, false), 'removeListener', false)(J$.T(5343497, 'close', 21, false), J$.R(5343505, 'onCloseOrRemove', onCloseOrRemove, false, false));
                                                            J$.M(5343545, J$.R(5343521, 'socket', socket, false, false), 'removeListener', false)(J$.T(5343529, 'agentRemove', 21, false), J$.R(5343537, 'onCloseOrRemove', onCloseOrRemove, false, false));
                                                        } catch (J$e) {
                                                            J$.Ex(5346945, J$e);
                                                        } finally {
                                                            if (J$.Fr(5346953))
                                                                continue jalangiLabel8;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }
                                            arguments = J$.N(5343585, 'arguments', arguments, true, false, false);
                                            socket = J$.N(5343593, 'socket', socket, true, false, false);
                                            onFree = J$.N(5343609, 'onFree', J$.T(5343601, onFree, 12, false), true, false, false);
                                            onCloseOrRemove = J$.N(5343625, 'onCloseOrRemove', J$.T(5343617, onCloseOrRemove, 12, false), true, false, false);
                                            J$.M(5343249, J$.R(5343225, 'socket', socket, false, false), 'on', false)(J$.T(5343233, 'free', 21, false), J$.R(5343241, 'onFree', onFree, false, false));
                                            J$.M(5343281, J$.R(5343257, 'socket', socket, false, false), 'on', false)(J$.T(5343265, 'close', 21, false), J$.R(5343273, 'onCloseOrRemove', onCloseOrRemove, false, false));
                                            J$.M(5343313, J$.R(5343289, 'socket', socket, false, false), 'on', false)(J$.T(5343297, 'agentRemove', 21, false), J$.R(5343305, 'onCloseOrRemove', onCloseOrRemove, false, false));
                                            J$.M(5343345, J$.G(5343329, J$.R(5343321, 'pending', pending, false, false), 'request'), 'onSocket', false)(J$.R(5343337, 'socket', socket, false, false));
                                        } catch (J$e) {
                                            J$.Ex(5346961, J$e);
                                        } finally {
                                            if (J$.Fr(5346969))
                                                continue jalangiLabel9;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                        } catch (J$e) {
                            J$.Ex(5346977, J$e);
                        } finally {
                            if (J$.Fr(5346985))
                                continue jalangiLabel10;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(5345249, J$.G(5343705, J$.R(5343697, 'TunnelingAgent', TunnelingAgent, false, true), 'prototype'), 'createSocket', J$.T(5345241, function createSocket(options, cb) {
                jalangiLabel16:
                    while (true) {
                        try {
                            J$.Fe(5345113, arguments.callee, this, arguments);
                            function onResponse(res) {
                                jalangiLabel11:
                                    while (true) {
                                        try {
                                            J$.Fe(5344281, arguments.callee, this, arguments);
                                            arguments = J$.N(5344289, 'arguments', arguments, true, false, false);
                                            res = J$.N(5344297, 'res', res, true, false, false);
                                            J$.P(5344273, J$.R(5344257, 'res', res, false, false), 'upgrade', J$.T(5344265, true, 23, false));
                                        } catch (J$e) {
                                            J$.Ex(5346993, J$e);
                                        } finally {
                                            if (J$.Fr(5347001))
                                                continue jalangiLabel11;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }
                            function onUpgrade(res, socket, head) {
                                jalangiLabel13:
                                    while (true) {
                                        try {
                                            J$.Fe(5344385, arguments.callee, this, arguments);
                                            arguments = J$.N(5344393, 'arguments', arguments, true, false, false);
                                            res = J$.N(5344401, 'res', res, true, false, false);
                                            socket = J$.N(5344409, 'socket', socket, true, false, false);
                                            head = J$.N(5344417, 'head', head, true, false, false);
                                            J$.M(5344377, J$.I(typeof process === 'undefined' ? process = J$.R(5344305, 'process', undefined, true, true) : process = J$.R(5344305, 'process', process, true, true)), 'nextTick', false)(J$.T(5344369, function () {
                                                jalangiLabel12:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(5344353, arguments.callee, this, arguments);
                                                            arguments = J$.N(5344361, 'arguments', arguments, true, false, false);
                                                            J$.F(5344345, J$.R(5344313, 'onConnect', onConnect, false, false), false)(J$.R(5344321, 'res', res, false, false), J$.R(5344329, 'socket', socket, false, false), J$.R(5344337, 'head', head, false, false));
                                                        } catch (J$e) {
                                                            J$.Ex(5347009, J$e);
                                                        } finally {
                                                            if (J$.Fr(5347017))
                                                                continue jalangiLabel12;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false));
                                        } catch (J$e) {
                                            J$.Ex(5347025, J$e);
                                        } finally {
                                            if (J$.Fr(5347033))
                                                continue jalangiLabel13;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }
                            function onConnect(res, socket, head) {
                                jalangiLabel14:
                                    while (true) {
                                        try {
                                            J$.Fe(5344817, arguments.callee, this, arguments);
                                            arguments = J$.N(5344825, 'arguments', arguments, true, false, false);
                                            res = J$.N(5344833, 'res', res, true, false, false);
                                            socket = J$.N(5344841, 'socket', socket, true, false, false);
                                            head = J$.N(5344849, 'head', head, true, false, false);
                                            J$.N(5344857, 'error', error, false, false, false);
                                            J$.M(5344433, J$.R(5344425, 'connectReq', connectReq, false, false), 'removeAllListeners', false)();
                                            J$.M(5344449, J$.R(5344441, 'socket', socket, false, false), 'removeAllListeners', false)();
                                            if (J$.C(287680, J$.B(605410, '===', J$.G(5344465, J$.R(5344457, 'res', res, false, false), 'statusCode'), J$.T(5344473, 200, 22, false)))) {
                                                J$.M(5344513, J$.R(5344481, 'assert', assert, false, true), 'equal', false)(J$.G(5344497, J$.R(5344489, 'head', head, false, false), 'length'), J$.T(5344505, 0, 22, false));
                                                J$.F(5344537, J$.R(5344521, 'debug', debug, false, true), false)(J$.T(5344529, 'tunneling connection has established', 21, false));
                                                J$.P(5344601, J$.G(5344553, J$.R(5344545, 'self', self, false, false), 'sockets'), J$.M(5344585, J$.G(5344569, J$.R(5344561, 'self', self, false, false), 'sockets'), 'indexOf', false)(J$.R(5344577, 'placeholder', placeholder, false, false)), J$.R(5344593, 'socket', socket, false, false));
                                                J$.F(5344625, J$.R(5344609, 'cb', cb, false, false), false)(J$.R(5344617, 'socket', socket, false, false));
                                            } else {
                                                J$.F(5344665, J$.R(5344633, 'debug', debug, false, true), false)(J$.T(5344641, 'tunneling socket could not be established, statusCode=%d', 21, false), J$.G(5344657, J$.R(5344649, 'res', res, false, false), 'statusCode'));
                                                var error = J$.W(5344721, 'error', J$.F(5344713, J$.I(typeof Error === 'undefined' ? Error = J$.R(5344673, 'Error', undefined, true, true) : Error = J$.R(5344673, 'Error', Error, true, true)), true)(J$.B(605426, '+', J$.B(605418, '+', J$.T(5344681, 'tunneling socket could not be established, ', 21, false), J$.T(5344689, 'statusCode=', 21, false)), J$.G(5344705, J$.R(5344697, 'res', res, false, false), 'statusCode'))), error, false, false);
                                                J$.P(5344745, J$.R(5344729, 'error', error, false, false), 'code', J$.T(5344737, 'ECONNRESET', 21, false));
                                                J$.M(5344785, J$.G(5344761, J$.R(5344753, 'options', options, false, false), 'request'), 'emit', false)(J$.T(5344769, 'error', 21, false), J$.R(5344777, 'error', error, false, false));
                                                J$.M(5344809, J$.R(5344793, 'self', self, false, false), 'removeSocket', false)(J$.R(5344801, 'placeholder', placeholder, false, false));
                                            }
                                        } catch (J$e) {
                                            J$.Ex(5347041, J$e);
                                        } finally {
                                            if (J$.Fr(5347049))
                                                continue jalangiLabel14;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }
                            function onError(cause) {
                                jalangiLabel15:
                                    while (true) {
                                        try {
                                            J$.Fe(5345081, arguments.callee, this, arguments);
                                            arguments = J$.N(5345089, 'arguments', arguments, true, false, false);
                                            cause = J$.N(5345097, 'cause', cause, true, false, false);
                                            J$.N(5345105, 'error', error, false, false, false);
                                            J$.M(5344873, J$.R(5344865, 'connectReq', connectReq, false, false), 'removeAllListeners', false)();
                                            J$.F(5344929, J$.R(5344881, 'debug', debug, false, true), false)(J$.T(5344889, 'tunneling socket could not be established, cause=%s\n', 21, false), J$.G(5344905, J$.R(5344897, 'cause', cause, false, false), 'message'), J$.G(5344921, J$.R(5344913, 'cause', cause, false, false), 'stack'));
                                            var error = J$.W(5344985, 'error', J$.F(5344977, J$.I(typeof Error === 'undefined' ? Error = J$.R(5344937, 'Error', undefined, true, true) : Error = J$.R(5344937, 'Error', Error, true, true)), true)(J$.B(605442, '+', J$.B(605434, '+', J$.T(5344945, 'tunneling socket could not be established, ', 21, false), J$.T(5344953, 'cause=', 21, false)), J$.G(5344969, J$.R(5344961, 'cause', cause, false, false), 'message'))), error, false, false);
                                            J$.P(5345009, J$.R(5344993, 'error', error, false, false), 'code', J$.T(5345001, 'ECONNRESET', 21, false));
                                            J$.M(5345049, J$.G(5345025, J$.R(5345017, 'options', options, false, false), 'request'), 'emit', false)(J$.T(5345033, 'error', 21, false), J$.R(5345041, 'error', error, false, false));
                                            J$.M(5345073, J$.R(5345057, 'self', self, false, false), 'removeSocket', false)(J$.R(5345065, 'placeholder', placeholder, false, false));
                                        } catch (J$e) {
                                            J$.Ex(5347057, J$e);
                                        } finally {
                                            if (J$.Fr(5347065))
                                                continue jalangiLabel15;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }
                            arguments = J$.N(5345121, 'arguments', arguments, true, false, false);
                            options = J$.N(5345129, 'options', options, true, false, false);
                            cb = J$.N(5345137, 'cb', cb, true, false, false);
                            J$.N(5345145, 'self', self, false, false, false);
                            J$.N(5345153, 'placeholder', placeholder, false, false, false);
                            J$.N(5345161, 'connectOptions', connectOptions, false, false, false);
                            J$.N(5345169, 'connectReq', connectReq, false, false, false);
                            onResponse = J$.N(5345185, 'onResponse', J$.T(5345177, onResponse, 12, false), true, false, false);
                            onUpgrade = J$.N(5345201, 'onUpgrade', J$.T(5345193, onUpgrade, 12, false), true, false, false);
                            onConnect = J$.N(5345217, 'onConnect', J$.T(5345209, onConnect, 12, false), true, false, false);
                            onError = J$.N(5345233, 'onError', J$.T(5345225, onError, 12, false), true, false, false);
                            var self = J$.W(5343721, 'self', J$.R(5343713, 'this', this, false, false), self, false, false);
                            var placeholder = J$.W(5343737, 'placeholder', J$.T(5343729, {}, 11, false), placeholder, false, false);
                            J$.M(5343769, J$.G(5343753, J$.R(5343745, 'self', self, false, false), 'sockets'), 'push', false)(J$.R(5343761, 'placeholder', placeholder, false, false));
                            var connectOptions = J$.W(5343881, 'connectOptions', J$.F(5343873, J$.R(5343777, 'mergeOptions', mergeOptions, false, true), false)(J$.T(5343785, {}, 11, false), J$.G(5343801, J$.R(5343793, 'self', self, false, false), 'proxyOptions'), J$.T(5343865, {
                                method: J$.T(5343809, 'CONNECT', 21, false),
                                path: J$.B(605394, '+', J$.B(605386, '+', J$.G(5343825, J$.R(5343817, 'options', options, false, false), 'host'), J$.T(5343833, ':', 21, false)), J$.G(5343849, J$.R(5343841, 'options', options, false, false), 'port')),
                                agent: J$.T(5343857, false, 23, false)
                            }, 11, false)), connectOptions, false, false);
                            if (J$.C(287672, J$.G(5343897, J$.R(5343889, 'connectOptions', connectOptions, false, false), 'proxyAuth'))) {
                                J$.P(5343937, J$.R(5343905, 'connectOptions', connectOptions, false, false), 'headers', J$.C(287664, J$.G(5343921, J$.R(5343913, 'connectOptions', connectOptions, false, false), 'headers')) ? J$._() : J$.T(5343929, {}, 11, false));
                                J$.P(5344025, J$.G(5343953, J$.R(5343945, 'connectOptions', connectOptions, false, false), 'headers'), J$.T(5343961, 'Proxy-Authorization', 21, false), J$.B(605402, '+', J$.T(5343969, 'Basic ', 21, false), J$.M(5344017, J$.M(5344001, J$.R(5343977, 'Buffer', Buffer, false, true), 'from', false)(J$.G(5343993, J$.R(5343985, 'connectOptions', connectOptions, false, false), 'proxyAuth')), 'toString', false)(J$.T(5344009, 'base64', 21, false))));
                            }
                            J$.F(5344049, J$.R(5344033, 'debug', debug, false, true), false)(J$.T(5344041, 'making CONNECT request', 21, false));
                            var connectReq = J$.W(5344081, 'connectReq', J$.M(5344073, J$.R(5344057, 'self', self, false, false), 'request', false)(J$.R(5344065, 'connectOptions', connectOptions, false, false)), connectReq, false, false);
                            J$.P(5344105, J$.R(5344089, 'connectReq', connectReq, false, false), 'useChunkedEncodingByDefault', J$.T(5344097, false, 23, false));
                            J$.M(5344137, J$.R(5344113, 'connectReq', connectReq, false, false), 'once', false)(J$.T(5344121, 'response', 21, false), J$.R(5344129, 'onResponse', onResponse, false, false));
                            J$.M(5344169, J$.R(5344145, 'connectReq', connectReq, false, false), 'once', false)(J$.T(5344153, 'upgrade', 21, false), J$.R(5344161, 'onUpgrade', onUpgrade, false, false));
                            J$.M(5344201, J$.R(5344177, 'connectReq', connectReq, false, false), 'once', false)(J$.T(5344185, 'connect', 21, false), J$.R(5344193, 'onConnect', onConnect, false, false));
                            J$.M(5344233, J$.R(5344209, 'connectReq', connectReq, false, false), 'once', false)(J$.T(5344217, 'error', 21, false), J$.R(5344225, 'onError', onError, false, false));
                            J$.M(5344249, J$.R(5344241, 'connectReq', connectReq, false, false), 'end', false)();
                        } catch (J$e) {
                            J$.Ex(5347073, J$e);
                        } finally {
                            if (J$.Fr(5347081))
                                continue jalangiLabel16;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(5345489, J$.G(5345265, J$.R(5345257, 'TunnelingAgent', TunnelingAgent, false, true), 'prototype'), 'removeSocket', J$.T(5345481, function removeSocket(socket) {
                jalangiLabel17:
                    while (true) {
                        try {
                            J$.Fe(5345441, arguments.callee, this, arguments);
                            arguments = J$.N(5345449, 'arguments', arguments, true, false, false);
                            socket = J$.N(5345457, 'socket', socket, true, false, false);
                            J$.N(5345465, 'pos', pos, false, false, false);
                            J$.N(5345473, 'pending', pending, false, false, false);
                            var pos = J$.W(5345305, 'pos', J$.M(5345297, J$.G(5345281, J$.R(5345273, 'this', this, false, false), 'sockets'), 'indexOf', false)(J$.R(5345289, 'socket', socket, false, false)), pos, false, false);
                            if (J$.C(287688, J$.B(605458, '===', J$.R(5345313, 'pos', pos, false, false), J$.U(605450, '-', J$.T(5345321, 1, 22, false)))))
                                return J$.Rt(5345329, undefined);
                            J$.M(5345369, J$.G(5345345, J$.R(5345337, 'this', this, false, false), 'sockets'), 'splice', false)(J$.R(5345353, 'pos', pos, false, false), J$.T(5345361, 1, 22, false));
                            var pending = J$.W(5345401, 'pending', J$.M(5345393, J$.G(5345385, J$.R(5345377, 'this', this, false, false), 'requests'), 'shift', false)(), pending, false, false);
                            if (J$.C(287696, J$.R(5345409, 'pending', pending, false, false))) {
                                J$.M(5345433, J$.R(5345417, 'this', this, false, false), 'createConnection', false)(J$.R(5345425, 'pending', pending, false, false));
                            }
                        } catch (J$e) {
                            J$.Ex(5347089, J$e);
                        } finally {
                            if (J$.Fr(5347097))
                                continue jalangiLabel17;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            var debug;
            if (J$.C(287752, J$.C(287736, J$.G(5346281, J$.G(5346273, J$.I(typeof process === 'undefined' ? process = J$.R(5346265, 'process', undefined, true, true) : process = J$.R(5346265, 'process', process, true, true)), 'env'), 'NODE_DEBUG')) ? J$.M(5346321, J$.T(5346289, /\btunnel\b/, 14, false), 'test', false)(J$.G(5346313, J$.G(5346305, J$.I(typeof process === 'undefined' ? process = J$.R(5346297, 'process', undefined, true, true) : process = J$.R(5346297, 'process', process, true, true)), 'env'), 'NODE_DEBUG')) : J$._())) {
                debug = J$.W(5346561, 'debug', J$.T(5346553, function () {
                    jalangiLabel21:
                        while (true) {
                            try {
                                J$.Fe(5346529, arguments.callee, this, arguments);
                                arguments = J$.N(5346537, 'arguments', arguments, true, false, false);
                                J$.N(5346545, 'args', args, false, false, false);
                                var args = J$.W(5346369, 'args', J$.M(5346361, J$.G(5346345, J$.G(5346337, J$.I(typeof Array === 'undefined' ? Array = J$.R(5346329, 'Array', undefined, true, true) : Array = J$.R(5346329, 'Array', Array, true, true)), 'prototype'), 'slice'), 'call', false)(J$.I(typeof arguments === 'undefined' ? arguments = J$.R(5346353, 'arguments', undefined, true, true) : arguments = J$.R(5346353, 'arguments', arguments, true, true))), args, false, false);
                                if (J$.C(287744, J$.B(605546, '===', J$.U(605538, 'typeof', J$.G(5346393, J$.R(5346377, 'args', args, false, false), J$.T(5346385, 0, 22, false))), J$.T(5346401, 'string', 21, false)))) {
                                    J$.P(5346457, J$.R(5346409, 'args', args, false, false), J$.T(5346417, 0, 22, false), J$.B(605554, '+', J$.T(5346425, 'TUNNEL: ', 21, false), J$.G(5346449, J$.R(5346433, 'args', args, false, false), J$.T(5346441, 0, 22, false))));
                                } else {
                                    J$.M(5346481, J$.R(5346465, 'args', args, false, false), 'unshift', false)(J$.T(5346473, 'TUNNEL:', 21, false));
                                }
                                J$.M(5346521, J$.G(5346497, J$.I(typeof console === 'undefined' ? console = J$.R(5346489, 'console', undefined, true, true) : console = J$.R(5346489, 'console', console, true, true)), 'error'), 'apply', false)(J$.I(typeof console === 'undefined' ? console = J$.R(5346505, 'console', undefined, true, true) : console = J$.R(5346505, 'console', console, true, true)), J$.R(5346513, 'args', args, false, false));
                            } catch (J$e) {
                                J$.Ex(5347153, J$e);
                            } finally {
                                if (J$.Fr(5347161))
                                    continue jalangiLabel21;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false), debug, false, true);
            } else {
                debug = J$.W(5346593, 'debug', J$.T(5346585, function () {
                    jalangiLabel22:
                        while (true) {
                            try {
                                J$.Fe(5346569, arguments.callee, this, arguments);
                                arguments = J$.N(5346577, 'arguments', arguments, true, false, false);
                            } catch (J$e) {
                                J$.Ex(5347169, J$e);
                            } finally {
                                if (J$.Fr(5347177))
                                    continue jalangiLabel22;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false), debug, false, true);
            }
            J$.P(5346617, J$.I(typeof exports === 'undefined' ? exports = J$.R(5346601, 'exports', undefined, true, true) : exports = J$.R(5346601, 'exports', exports, true, true)), 'debug', J$.R(5346609, 'debug', debug, false, true));
        } catch (J$e) {
            J$.Ex(5347185, J$e);
        } finally {
            if (J$.Sr(5347193))
                continue jalangiLabel23;
            else
                break jalangiLabel23;
        }
    }
// JALANGI DO NOT INSTRUMENT

