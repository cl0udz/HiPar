J$.noInstrEval = false;
jalangiLabel0:
    while (true) {
        try {
            J$.Se(5155561, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestCouchNode/node_modules/sshpk/lib/index.js');
            J$.N(5155569, 'Key', Key, false, false, false);
            J$.N(5155577, 'Fingerprint', Fingerprint, false, false, false);
            J$.N(5155585, 'Signature', Signature, false, false, false);
            J$.N(5155593, 'PrivateKey', PrivateKey, false, false, false);
            J$.N(5155601, 'Certificate', Certificate, false, false, false);
            J$.N(5155609, 'Identity', Identity, false, false, false);
            J$.N(5155617, 'errs', errs, false, false, false);
            var Key = J$.W(5154985, 'Key', J$.F(5154977, J$.I(typeof require === 'undefined' ? require = J$.R(5154961, 'require', undefined, true, true) : require = J$.R(5154961, 'require', require, true, true)), false)(J$.T(5154969, './key', 21, false)), Key, false, true);
            var Fingerprint = J$.W(5155017, 'Fingerprint', J$.F(5155009, J$.I(typeof require === 'undefined' ? require = J$.R(5154993, 'require', undefined, true, true) : require = J$.R(5154993, 'require', require, true, true)), false)(J$.T(5155001, './fingerprint', 21, false)), Fingerprint, false, true);
            var Signature = J$.W(5155049, 'Signature', J$.F(5155041, J$.I(typeof require === 'undefined' ? require = J$.R(5155025, 'require', undefined, true, true) : require = J$.R(5155025, 'require', require, true, true)), false)(J$.T(5155033, './signature', 21, false)), Signature, false, true);
            var PrivateKey = J$.W(5155081, 'PrivateKey', J$.F(5155073, J$.I(typeof require === 'undefined' ? require = J$.R(5155057, 'require', undefined, true, true) : require = J$.R(5155057, 'require', require, true, true)), false)(J$.T(5155065, './private-key', 21, false)), PrivateKey, false, true);
            var Certificate = J$.W(5155113, 'Certificate', J$.F(5155105, J$.I(typeof require === 'undefined' ? require = J$.R(5155089, 'require', undefined, true, true) : require = J$.R(5155089, 'require', require, true, true)), false)(J$.T(5155097, './certificate', 21, false)), Certificate, false, true);
            var Identity = J$.W(5155145, 'Identity', J$.F(5155137, J$.I(typeof require === 'undefined' ? require = J$.R(5155121, 'require', undefined, true, true) : require = J$.R(5155121, 'require', require, true, true)), false)(J$.T(5155129, './identity', 21, false)), Identity, false, true);
            var errs = J$.W(5155177, 'errs', J$.F(5155169, J$.I(typeof require === 'undefined' ? require = J$.R(5155153, 'require', undefined, true, true) : require = J$.R(5155153, 'require', require, true, true)), false)(J$.T(5155161, './errors', 21, false)), errs, false, true);
            J$.P(5155553, J$.I(typeof module === 'undefined' ? module = J$.R(5155185, 'module', undefined, true, true) : module = J$.R(5155185, 'module', module, true, true)), 'exports', J$.T(5155545, {
                Key: J$.R(5155193, 'Key', Key, false, true),
                parseKey: J$.G(5155209, J$.R(5155201, 'Key', Key, false, true), 'parse'),
                Fingerprint: J$.R(5155217, 'Fingerprint', Fingerprint, false, true),
                parseFingerprint: J$.G(5155233, J$.R(5155225, 'Fingerprint', Fingerprint, false, true), 'parse'),
                Signature: J$.R(5155241, 'Signature', Signature, false, true),
                parseSignature: J$.G(5155257, J$.R(5155249, 'Signature', Signature, false, true), 'parse'),
                PrivateKey: J$.R(5155265, 'PrivateKey', PrivateKey, false, true),
                parsePrivateKey: J$.G(5155281, J$.R(5155273, 'PrivateKey', PrivateKey, false, true), 'parse'),
                generatePrivateKey: J$.G(5155297, J$.R(5155289, 'PrivateKey', PrivateKey, false, true), 'generate'),
                Certificate: J$.R(5155305, 'Certificate', Certificate, false, true),
                parseCertificate: J$.G(5155321, J$.R(5155313, 'Certificate', Certificate, false, true), 'parse'),
                createSelfSignedCertificate: J$.G(5155337, J$.R(5155329, 'Certificate', Certificate, false, true), 'createSelfSigned'),
                createCertificate: J$.G(5155353, J$.R(5155345, 'Certificate', Certificate, false, true), 'create'),
                Identity: J$.R(5155361, 'Identity', Identity, false, true),
                identityFromDN: J$.G(5155377, J$.R(5155369, 'Identity', Identity, false, true), 'parseDN'),
                identityForHost: J$.G(5155393, J$.R(5155385, 'Identity', Identity, false, true), 'forHost'),
                identityForUser: J$.G(5155409, J$.R(5155401, 'Identity', Identity, false, true), 'forUser'),
                identityForEmail: J$.G(5155425, J$.R(5155417, 'Identity', Identity, false, true), 'forEmail'),
                identityFromArray: J$.G(5155441, J$.R(5155433, 'Identity', Identity, false, true), 'fromArray'),
                FingerprintFormatError: J$.G(5155457, J$.R(5155449, 'errs', errs, false, true), 'FingerprintFormatError'),
                InvalidAlgorithmError: J$.G(5155473, J$.R(5155465, 'errs', errs, false, true), 'InvalidAlgorithmError'),
                KeyParseError: J$.G(5155489, J$.R(5155481, 'errs', errs, false, true), 'KeyParseError'),
                SignatureParseError: J$.G(5155505, J$.R(5155497, 'errs', errs, false, true), 'SignatureParseError'),
                KeyEncryptedError: J$.G(5155521, J$.R(5155513, 'errs', errs, false, true), 'KeyEncryptedError'),
                CertificateParseError: J$.G(5155537, J$.R(5155529, 'errs', errs, false, true), 'CertificateParseError')
            }, 11, false));
        } catch (J$e) {
            J$.Ex(5155625, J$e);
        } finally {
            if (J$.Sr(5155633))
                continue jalangiLabel0;
            else
                break jalangiLabel0;
        }
    }
// JALANGI DO NOT INSTRUMENT

