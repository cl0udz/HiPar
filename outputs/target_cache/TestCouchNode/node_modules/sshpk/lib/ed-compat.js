J$.noInstrEval = false;
jalangiLabel8:
    while (true) {
        try {
            J$.Se(5055185, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestCouchNode/node_modules/sshpk/lib/ed-compat.js');
            function Verifier(key, hashAlgo) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(5053457, arguments.callee, this, arguments);
                            arguments = J$.N(5053465, 'arguments', arguments, true, false, false);
                            key = J$.N(5053473, 'key', key, true, false, false);
                            hashAlgo = J$.N(5053481, 'hashAlgo', hashAlgo, true, false, false);
                            if (J$.C(271464, J$.B(585034, '!==', J$.M(5053321, J$.R(5053313, 'hashAlgo', hashAlgo, false, false), 'toLowerCase', false)(), J$.T(5053329, 'sha512', 21, false))))
                                throw J$.F(5053361, J$.I(typeof Error === 'undefined' ? Error = J$.R(5053337, 'Error', undefined, true, true) : Error = J$.R(5053337, 'Error', Error, true, true)), true)(J$.B(585042, '+', J$.T(5053345, 'ED25519 only supports the use of ', 21, false), J$.T(5053353, 'SHA-512 hashes', 21, false)));
                            J$.P(5053385, J$.R(5053369, 'this', this, false, false), 'key', J$.R(5053377, 'key', key, false, false));
                            J$.P(5053409, J$.R(5053393, 'this', this, false, false), 'chunks', J$.T(5053401, [], 10, false));
                            J$.M(5053449, J$.G(5053425, J$.R(5053417, 'stream', stream, false, true), 'Writable'), 'call', false)(J$.R(5053433, 'this', this, false, false), J$.T(5053441, {}, 11, false));
                        } catch (J$e) {
                            J$.Ex(5055273, J$e);
                        } finally {
                            if (J$.Fr(5055281))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function Signer(key, hashAlgo) {
                jalangiLabel4:
                    while (true) {
                        try {
                            J$.Fe(5054457, arguments.callee, this, arguments);
                            arguments = J$.N(5054465, 'arguments', arguments, true, false, false);
                            key = J$.N(5054473, 'key', key, true, false, false);
                            hashAlgo = J$.N(5054481, 'hashAlgo', hashAlgo, true, false, false);
                            if (J$.C(271512, J$.B(585098, '!==', J$.M(5054321, J$.R(5054313, 'hashAlgo', hashAlgo, false, false), 'toLowerCase', false)(), J$.T(5054329, 'sha512', 21, false))))
                                throw J$.F(5054361, J$.I(typeof Error === 'undefined' ? Error = J$.R(5054337, 'Error', undefined, true, true) : Error = J$.R(5054337, 'Error', Error, true, true)), true)(J$.B(585106, '+', J$.T(5054345, 'ED25519 only supports the use of ', 21, false), J$.T(5054353, 'SHA-512 hashes', 21, false)));
                            J$.P(5054385, J$.R(5054369, 'this', this, false, false), 'key', J$.R(5054377, 'key', key, false, false));
                            J$.P(5054409, J$.R(5054393, 'this', this, false, false), 'chunks', J$.T(5054401, [], 10, false));
                            J$.M(5054449, J$.G(5054425, J$.R(5054417, 'stream', stream, false, true), 'Writable'), 'call', false)(J$.R(5054433, 'this', this, false, false), J$.T(5054441, {}, 11, false));
                        } catch (J$e) {
                            J$.Ex(5055337, J$e);
                        } finally {
                            if (J$.Fr(5055345))
                                continue jalangiLabel4;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(5055193, 'nacl', nacl, false, false, false);
            J$.N(5055201, 'stream', stream, false, false, false);
            J$.N(5055209, 'util', util, false, false, false);
            J$.N(5055217, 'assert', assert, false, false, false);
            J$.N(5055225, 'Buffer', Buffer, false, false, false);
            J$.N(5055233, 'Signature', Signature, false, false, false);
            Verifier = J$.N(5055249, 'Verifier', J$.T(5055241, Verifier, 12, false), true, false, false);
            Signer = J$.N(5055265, 'Signer', J$.T(5055257, Signer, 12, false), true, false, false);
            J$.P(5053105, J$.I(typeof module === 'undefined' ? module = J$.R(5053073, 'module', undefined, true, true) : module = J$.R(5053073, 'module', module, true, true)), 'exports', J$.T(5053097, {
                Verifier: J$.R(5053081, 'Verifier', Verifier, false, true),
                Signer: J$.R(5053089, 'Signer', Signer, false, true)
            }, 11, false));
            var nacl = J$.W(5053137, 'nacl', J$.F(5053129, J$.I(typeof require === 'undefined' ? require = J$.R(5053113, 'require', undefined, true, true) : require = J$.R(5053113, 'require', require, true, true)), false)(J$.T(5053121, 'tweetnacl', 21, false)), nacl, false, true);
            var stream = J$.W(5053169, 'stream', J$.F(5053161, J$.I(typeof require === 'undefined' ? require = J$.R(5053145, 'require', undefined, true, true) : require = J$.R(5053145, 'require', require, true, true)), false)(J$.T(5053153, 'stream', 21, false)), stream, false, true);
            var util = J$.W(5053201, 'util', J$.F(5053193, J$.I(typeof require === 'undefined' ? require = J$.R(5053177, 'require', undefined, true, true) : require = J$.R(5053177, 'require', require, true, true)), false)(J$.T(5053185, 'util', 21, false)), util, false, true);
            var assert = J$.W(5053233, 'assert', J$.F(5053225, J$.I(typeof require === 'undefined' ? require = J$.R(5053209, 'require', undefined, true, true) : require = J$.R(5053209, 'require', require, true, true)), false)(J$.T(5053217, 'assert-plus', 21, false)), assert, false, true);
            var Buffer = J$.W(5053273, 'Buffer', J$.G(5053265, J$.F(5053257, J$.I(typeof require === 'undefined' ? require = J$.R(5053241, 'require', undefined, true, true) : require = J$.R(5053241, 'require', require, true, true)), false)(J$.T(5053249, 'safer-buffer', 21, false)), 'Buffer'), Buffer, false, true);
            var Signature = J$.W(5053305, 'Signature', J$.F(5053297, J$.I(typeof require === 'undefined' ? require = J$.R(5053281, 'require', undefined, true, true) : require = J$.R(5053281, 'require', require, true, true)), false)(J$.T(5053289, './signature', 21, false)), Signature, false, true);
            J$.M(5053521, J$.R(5053489, 'util', util, false, true), 'inherits', false)(J$.R(5053497, 'Verifier', Verifier, false, true), J$.G(5053513, J$.R(5053505, 'stream', stream, false, true), 'Writable'));
            J$.P(5053641, J$.G(5053537, J$.R(5053529, 'Verifier', Verifier, false, true), 'prototype'), '_write', J$.T(5053633, function (chunk, enc, cb) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(5053593, arguments.callee, this, arguments);
                            arguments = J$.N(5053601, 'arguments', arguments, true, false, false);
                            chunk = J$.N(5053609, 'chunk', chunk, true, false, false);
                            enc = J$.N(5053617, 'enc', enc, true, false, false);
                            cb = J$.N(5053625, 'cb', cb, true, false, false);
                            J$.M(5053569, J$.G(5053553, J$.R(5053545, 'this', this, false, false), 'chunks'), 'push', false)(J$.R(5053561, 'chunk', chunk, false, false));
                            J$.F(5053585, J$.R(5053577, 'cb', cb, false, false), false)();
                        } catch (J$e) {
                            J$.Ex(5055289, J$e);
                        } finally {
                            if (J$.Fr(5055297))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(5053785, J$.G(5053657, J$.R(5053649, 'Verifier', Verifier, false, true), 'prototype'), 'update', J$.T(5053777, function (chunk) {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(5053753, arguments.callee, this, arguments);
                            arguments = J$.N(5053761, 'arguments', arguments, true, false, false);
                            chunk = J$.N(5053769, 'chunk', chunk, true, false, false);
                            if (J$.C(271472, J$.B(585058, '===', J$.U(585050, 'typeof', J$.R(5053665, 'chunk', chunk, false, false)), J$.T(5053673, 'string', 21, false))))
                                chunk = J$.W(5053713, 'chunk', J$.M(5053705, J$.R(5053681, 'Buffer', Buffer, false, true), 'from', false)(J$.R(5053689, 'chunk', chunk, false, false), J$.T(5053697, 'binary', 21, false)), chunk, false, false);
                            J$.M(5053745, J$.G(5053729, J$.R(5053721, 'this', this, false, false), 'chunks'), 'push', false)(J$.R(5053737, 'chunk', chunk, false, false));
                        } catch (J$e) {
                            J$.Ex(5055305, J$e);
                        } finally {
                            if (J$.Fr(5055313))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(5054305, J$.G(5053801, J$.R(5053793, 'Verifier', Verifier, false, true), 'prototype'), 'verify', J$.T(5054297, function (signature, fmt) {
                jalangiLabel3:
                    while (true) {
                        try {
                            J$.Fe(5054257, arguments.callee, this, arguments);
                            arguments = J$.N(5054265, 'arguments', arguments, true, false, false);
                            signature = J$.N(5054273, 'signature', signature, true, false, false);
                            fmt = J$.N(5054281, 'fmt', fmt, true, false, false);
                            J$.N(5054289, 'sig', sig, false, false, false);
                            var sig;
                            if (J$.C(271504, J$.M(5053849, J$.R(5053809, 'Signature', Signature, false, true), 'isSignature', false)(J$.R(5053817, 'signature', signature, false, false), J$.T(5053841, [
                                    J$.T(5053825, 2, 22, false),
                                    J$.T(5053833, 0, 22, false)
                                ], 10, false)))) {
                                if (J$.C(271480, J$.B(585066, '!==', J$.G(5053865, J$.R(5053857, 'signature', signature, false, false), 'type'), J$.T(5053873, 'ed25519', 21, false))))
                                    return J$.Rt(5053889, J$.T(5053881, false, 23, false));
                                sig = J$.W(5053921, 'sig', J$.M(5053913, J$.R(5053897, 'signature', signature, false, false), 'toBuffer', false)(J$.T(5053905, 'raw', 21, false)), sig, false, false);
                            } else if (J$.C(271496, J$.B(585082, '===', J$.U(585074, 'typeof', J$.R(5053929, 'signature', signature, false, false)), J$.T(5053937, 'string', 21, false)))) {
                                sig = J$.W(5053977, 'sig', J$.M(5053969, J$.R(5053945, 'Buffer', Buffer, false, true), 'from', false)(J$.R(5053953, 'signature', signature, false, false), J$.T(5053961, 'base64', 21, false)), sig, false, false);
                            } else if (J$.C(271488, J$.M(5054025, J$.R(5053985, 'Signature', Signature, false, true), 'isSignature', false)(J$.R(5053993, 'signature', signature, false, false), J$.T(5054017, [
                                    J$.T(5054001, 1, 22, false),
                                    J$.T(5054009, 0, 22, false)
                                ], 10, false)))) {
                                throw J$.F(5054057, J$.I(typeof Error === 'undefined' ? Error = J$.R(5054033, 'Error', undefined, true, true) : Error = J$.R(5054033, 'Error', Error, true, true)), true)(J$.B(585090, '+', J$.T(5054041, 'signature was created by too old ', 21, false), J$.T(5054049, 'a version of sshpk and cannot be verified', 21, false)));
                            }
                            J$.M(5054081, J$.R(5054065, 'assert', assert, false, true), 'buffer', false)(J$.R(5054073, 'sig', sig, false, false));
                            return J$.Rt(5054249, J$.M(5054241, J$.G(5054105, J$.G(5054097, J$.R(5054089, 'nacl', nacl, false, true), 'sign'), 'detached'), 'verify', false)(J$.F(5054153, J$.I(typeof Uint8Array === 'undefined' ? Uint8Array = J$.R(5054113, 'Uint8Array', undefined, true, true) : Uint8Array = J$.R(5054113, 'Uint8Array', Uint8Array, true, true)), true)(J$.M(5054145, J$.R(5054121, 'Buffer', Buffer, false, true), 'concat', false)(J$.G(5054137, J$.R(5054129, 'this', this, false, false), 'chunks'))), J$.F(5054177, J$.I(typeof Uint8Array === 'undefined' ? Uint8Array = J$.R(5054161, 'Uint8Array', undefined, true, true) : Uint8Array = J$.R(5054161, 'Uint8Array', Uint8Array, true, true)), true)(J$.R(5054169, 'sig', sig, false, false)), J$.F(5054233, J$.I(typeof Uint8Array === 'undefined' ? Uint8Array = J$.R(5054185, 'Uint8Array', undefined, true, true) : Uint8Array = J$.R(5054185, 'Uint8Array', Uint8Array, true, true)), true)(J$.G(5054225, J$.G(5054217, J$.G(5054209, J$.G(5054201, J$.R(5054193, 'this', this, false, false), 'key'), 'part'), 'A'), 'data'))));
                        } catch (J$e) {
                            J$.Ex(5055321, J$e);
                        } finally {
                            if (J$.Fr(5055329))
                                continue jalangiLabel3;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.M(5054521, J$.R(5054489, 'util', util, false, true), 'inherits', false)(J$.R(5054497, 'Signer', Signer, false, true), J$.G(5054513, J$.R(5054505, 'stream', stream, false, true), 'Writable'));
            J$.P(5054641, J$.G(5054537, J$.R(5054529, 'Signer', Signer, false, true), 'prototype'), '_write', J$.T(5054633, function (chunk, enc, cb) {
                jalangiLabel5:
                    while (true) {
                        try {
                            J$.Fe(5054593, arguments.callee, this, arguments);
                            arguments = J$.N(5054601, 'arguments', arguments, true, false, false);
                            chunk = J$.N(5054609, 'chunk', chunk, true, false, false);
                            enc = J$.N(5054617, 'enc', enc, true, false, false);
                            cb = J$.N(5054625, 'cb', cb, true, false, false);
                            J$.M(5054569, J$.G(5054553, J$.R(5054545, 'this', this, false, false), 'chunks'), 'push', false)(J$.R(5054561, 'chunk', chunk, false, false));
                            J$.F(5054585, J$.R(5054577, 'cb', cb, false, false), false)();
                        } catch (J$e) {
                            J$.Ex(5055353, J$e);
                        } finally {
                            if (J$.Fr(5055361))
                                continue jalangiLabel5;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(5054785, J$.G(5054657, J$.R(5054649, 'Signer', Signer, false, true), 'prototype'), 'update', J$.T(5054777, function (chunk) {
                jalangiLabel6:
                    while (true) {
                        try {
                            J$.Fe(5054753, arguments.callee, this, arguments);
                            arguments = J$.N(5054761, 'arguments', arguments, true, false, false);
                            chunk = J$.N(5054769, 'chunk', chunk, true, false, false);
                            if (J$.C(271520, J$.B(585122, '===', J$.U(585114, 'typeof', J$.R(5054665, 'chunk', chunk, false, false)), J$.T(5054673, 'string', 21, false))))
                                chunk = J$.W(5054713, 'chunk', J$.M(5054705, J$.R(5054681, 'Buffer', Buffer, false, true), 'from', false)(J$.R(5054689, 'chunk', chunk, false, false), J$.T(5054697, 'binary', 21, false)), chunk, false, false);
                            J$.M(5054745, J$.G(5054729, J$.R(5054721, 'this', this, false, false), 'chunks'), 'push', false)(J$.R(5054737, 'chunk', chunk, false, false));
                        } catch (J$e) {
                            J$.Ex(5055369, J$e);
                        } finally {
                            if (J$.Fr(5055377))
                                continue jalangiLabel6;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(5055177, J$.G(5054801, J$.R(5054793, 'Signer', Signer, false, true), 'prototype'), 'sign', J$.T(5055169, function () {
                jalangiLabel7:
                    while (true) {
                        try {
                            J$.Fe(5055129, arguments.callee, this, arguments);
                            arguments = J$.N(5055137, 'arguments', arguments, true, false, false);
                            J$.N(5055145, 'sig', sig, false, false, false);
                            J$.N(5055153, 'sigBuf', sigBuf, false, false, false);
                            J$.N(5055161, 'sigObj', sigObj, false, false, false);
                            var sig = J$.W(5055001, 'sig', J$.M(5054993, J$.G(5054817, J$.R(5054809, 'nacl', nacl, false, true), 'sign'), 'detached', false)(J$.F(5054865, J$.I(typeof Uint8Array === 'undefined' ? Uint8Array = J$.R(5054825, 'Uint8Array', undefined, true, true) : Uint8Array = J$.R(5054825, 'Uint8Array', Uint8Array, true, true)), true)(J$.M(5054857, J$.R(5054833, 'Buffer', Buffer, false, true), 'concat', false)(J$.G(5054849, J$.R(5054841, 'this', this, false, false), 'chunks'))), J$.F(5054985, J$.I(typeof Uint8Array === 'undefined' ? Uint8Array = J$.R(5054873, 'Uint8Array', undefined, true, true) : Uint8Array = J$.R(5054873, 'Uint8Array', Uint8Array, true, true)), true)(J$.M(5054977, J$.R(5054881, 'Buffer', Buffer, false, true), 'concat', false)(J$.T(5054969, [
                                J$.G(5054921, J$.G(5054913, J$.G(5054905, J$.G(5054897, J$.R(5054889, 'this', this, false, false), 'key'), 'part'), 'k'), 'data'),
                                J$.G(5054961, J$.G(5054953, J$.G(5054945, J$.G(5054937, J$.R(5054929, 'this', this, false, false), 'key'), 'part'), 'A'), 'data')
                            ], 10, false)))), sig, false, false);
                            var sigBuf = J$.W(5055033, 'sigBuf', J$.M(5055025, J$.R(5055009, 'Buffer', Buffer, false, true), 'from', false)(J$.R(5055017, 'sig', sig, false, false)), sigBuf, false, false);
                            var sigObj = J$.W(5055081, 'sigObj', J$.M(5055073, J$.R(5055041, 'Signature', Signature, false, true), 'parse', false)(J$.R(5055049, 'sigBuf', sigBuf, false, false), J$.T(5055057, 'ed25519', 21, false), J$.T(5055065, 'raw', 21, false)), sigObj, false, false);
                            J$.P(5055105, J$.R(5055089, 'sigObj', sigObj, false, false), 'hashAlgorithm', J$.T(5055097, 'sha512', 21, false));
                            return J$.Rt(5055121, J$.R(5055113, 'sigObj', sigObj, false, false));
                        } catch (J$e) {
                            J$.Ex(5055385, J$e);
                        } finally {
                            if (J$.Fr(5055393))
                                continue jalangiLabel7;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
        } catch (J$e) {
            J$.Ex(5055401, J$e);
        } finally {
            if (J$.Sr(5055409))
                continue jalangiLabel8;
            else
                break jalangiLabel8;
        }
    }
// JALANGI DO NOT INSTRUMENT

