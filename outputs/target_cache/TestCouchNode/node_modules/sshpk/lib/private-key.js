J$.noInstrEval = false;
jalangiLabel13:
    while (true) {
        try {
            J$.Se(5168065, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestCouchNode/node_modules/sshpk/lib/private-key.js');
            function PrivateKey(opts) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(5163561, arguments.callee, this, arguments);
                            arguments = J$.N(5163569, 'arguments', arguments, true, false, false);
                            opts = J$.N(5163577, 'opts', opts, true, false, false);
                            J$.M(5163497, J$.R(5163473, 'assert', assert, false, true), 'object', false)(J$.R(5163481, 'opts', opts, false, false), J$.T(5163489, 'options', 21, false));
                            J$.M(5163529, J$.R(5163505, 'Key', Key, false, true), 'call', false)(J$.R(5163513, 'this', this, false, false), J$.R(5163521, 'opts', opts, false, false));
                            J$.P(5163553, J$.R(5163537, 'this', this, false, false), '_pubCache', J$.T(5163545, undefined, 24, false));
                        } catch (J$e) {
                            J$.Ex(5168241, J$e);
                        } finally {
                            if (J$.Fr(5168249))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(5168073, 'assert', assert, false, false, false);
            J$.N(5168081, 'Buffer', Buffer, false, false, false);
            J$.N(5168089, 'algs', algs, false, false, false);
            J$.N(5168097, 'crypto', crypto, false, false, false);
            J$.N(5168105, 'Fingerprint', Fingerprint, false, false, false);
            J$.N(5168113, 'Signature', Signature, false, false, false);
            J$.N(5168121, 'errs', errs, false, false, false);
            J$.N(5168129, 'util', util, false, false, false);
            J$.N(5168137, 'utils', utils, false, false, false);
            J$.N(5168145, 'dhe', dhe, false, false, false);
            J$.N(5168153, 'generateECDSA', generateECDSA, false, false, false);
            J$.N(5168161, 'generateED25519', generateED25519, false, false, false);
            J$.N(5168169, 'edCompat', edCompat, false, false, false);
            J$.N(5168177, 'nacl', nacl, false, false, false);
            J$.N(5168185, 'Key', Key, false, false, false);
            J$.N(5168193, 'InvalidAlgorithmError', InvalidAlgorithmError, false, false, false);
            J$.N(5168201, 'KeyParseError', KeyParseError, false, false, false);
            J$.N(5168209, 'KeyEncryptedError', KeyEncryptedError, false, false, false);
            J$.N(5168217, 'formats', formats, false, false, false);
            PrivateKey = J$.N(5168233, 'PrivateKey', J$.T(5168225, PrivateKey, 12, false), true, false, false);
            J$.P(5162473, J$.I(typeof module === 'undefined' ? module = J$.R(5162457, 'module', undefined, true, true) : module = J$.R(5162457, 'module', module, true, true)), 'exports', J$.R(5162465, 'PrivateKey', PrivateKey, false, true));
            var assert = J$.W(5162505, 'assert', J$.F(5162497, J$.I(typeof require === 'undefined' ? require = J$.R(5162481, 'require', undefined, true, true) : require = J$.R(5162481, 'require', require, true, true)), false)(J$.T(5162489, 'assert-plus', 21, false)), assert, false, true);
            var Buffer = J$.W(5162545, 'Buffer', J$.G(5162537, J$.F(5162529, J$.I(typeof require === 'undefined' ? require = J$.R(5162513, 'require', undefined, true, true) : require = J$.R(5162513, 'require', require, true, true)), false)(J$.T(5162521, 'safer-buffer', 21, false)), 'Buffer'), Buffer, false, true);
            var algs = J$.W(5162577, 'algs', J$.F(5162569, J$.I(typeof require === 'undefined' ? require = J$.R(5162553, 'require', undefined, true, true) : require = J$.R(5162553, 'require', require, true, true)), false)(J$.T(5162561, './algs', 21, false)), algs, false, true);
            var crypto = J$.W(5162609, 'crypto', J$.F(5162601, J$.I(typeof require === 'undefined' ? require = J$.R(5162585, 'require', undefined, true, true) : require = J$.R(5162585, 'require', require, true, true)), false)(J$.T(5162593, 'crypto', 21, false)), crypto, false, true);
            var Fingerprint = J$.W(5162641, 'Fingerprint', J$.F(5162633, J$.I(typeof require === 'undefined' ? require = J$.R(5162617, 'require', undefined, true, true) : require = J$.R(5162617, 'require', require, true, true)), false)(J$.T(5162625, './fingerprint', 21, false)), Fingerprint, false, true);
            var Signature = J$.W(5162673, 'Signature', J$.F(5162665, J$.I(typeof require === 'undefined' ? require = J$.R(5162649, 'require', undefined, true, true) : require = J$.R(5162649, 'require', require, true, true)), false)(J$.T(5162657, './signature', 21, false)), Signature, false, true);
            var errs = J$.W(5162705, 'errs', J$.F(5162697, J$.I(typeof require === 'undefined' ? require = J$.R(5162681, 'require', undefined, true, true) : require = J$.R(5162681, 'require', require, true, true)), false)(J$.T(5162689, './errors', 21, false)), errs, false, true);
            var util = J$.W(5162737, 'util', J$.F(5162729, J$.I(typeof require === 'undefined' ? require = J$.R(5162713, 'require', undefined, true, true) : require = J$.R(5162713, 'require', require, true, true)), false)(J$.T(5162721, 'util', 21, false)), util, false, true);
            var utils = J$.W(5162769, 'utils', J$.F(5162761, J$.I(typeof require === 'undefined' ? require = J$.R(5162745, 'require', undefined, true, true) : require = J$.R(5162745, 'require', require, true, true)), false)(J$.T(5162753, './utils', 21, false)), utils, false, true);
            var dhe = J$.W(5162801, 'dhe', J$.F(5162793, J$.I(typeof require === 'undefined' ? require = J$.R(5162777, 'require', undefined, true, true) : require = J$.R(5162777, 'require', require, true, true)), false)(J$.T(5162785, './dhe', 21, false)), dhe, false, true);
            var generateECDSA = J$.W(5162825, 'generateECDSA', J$.G(5162817, J$.R(5162809, 'dhe', dhe, false, true), 'generateECDSA'), generateECDSA, false, true);
            var generateED25519 = J$.W(5162849, 'generateED25519', J$.G(5162841, J$.R(5162833, 'dhe', dhe, false, true), 'generateED25519'), generateED25519, false, true);
            var edCompat = J$.W(5162881, 'edCompat', J$.F(5162873, J$.I(typeof require === 'undefined' ? require = J$.R(5162857, 'require', undefined, true, true) : require = J$.R(5162857, 'require', require, true, true)), false)(J$.T(5162865, './ed-compat', 21, false)), edCompat, false, true);
            var nacl = J$.W(5162913, 'nacl', J$.F(5162905, J$.I(typeof require === 'undefined' ? require = J$.R(5162889, 'require', undefined, true, true) : require = J$.R(5162889, 'require', require, true, true)), false)(J$.T(5162897, 'tweetnacl', 21, false)), nacl, false, true);
            var Key = J$.W(5162945, 'Key', J$.F(5162937, J$.I(typeof require === 'undefined' ? require = J$.R(5162921, 'require', undefined, true, true) : require = J$.R(5162921, 'require', require, true, true)), false)(J$.T(5162929, './key', 21, false)), Key, false, true);
            var InvalidAlgorithmError = J$.W(5162969, 'InvalidAlgorithmError', J$.G(5162961, J$.R(5162953, 'errs', errs, false, true), 'InvalidAlgorithmError'), InvalidAlgorithmError, false, true);
            var KeyParseError = J$.W(5162993, 'KeyParseError', J$.G(5162985, J$.R(5162977, 'errs', errs, false, true), 'KeyParseError'), KeyParseError, false, true);
            var KeyEncryptedError = J$.W(5163017, 'KeyEncryptedError', J$.G(5163009, J$.R(5163001, 'errs', errs, false, true), 'KeyEncryptedError'), KeyEncryptedError, false, true);
            var formats = J$.W(5163033, 'formats', J$.T(5163025, {}, 11, false), formats, false, true);
            J$.P(5163081, J$.R(5163041, 'formats', formats, false, true), J$.T(5163049, 'auto', 21, false), J$.F(5163073, J$.I(typeof require === 'undefined' ? require = J$.R(5163057, 'require', undefined, true, true) : require = J$.R(5163057, 'require', require, true, true)), false)(J$.T(5163065, './formats/auto', 21, false)));
            J$.P(5163129, J$.R(5163089, 'formats', formats, false, true), J$.T(5163097, 'pem', 21, false), J$.F(5163121, J$.I(typeof require === 'undefined' ? require = J$.R(5163105, 'require', undefined, true, true) : require = J$.R(5163105, 'require', require, true, true)), false)(J$.T(5163113, './formats/pem', 21, false)));
            J$.P(5163177, J$.R(5163137, 'formats', formats, false, true), J$.T(5163145, 'pkcs1', 21, false), J$.F(5163169, J$.I(typeof require === 'undefined' ? require = J$.R(5163153, 'require', undefined, true, true) : require = J$.R(5163153, 'require', require, true, true)), false)(J$.T(5163161, './formats/pkcs1', 21, false)));
            J$.P(5163225, J$.R(5163185, 'formats', formats, false, true), J$.T(5163193, 'pkcs8', 21, false), J$.F(5163217, J$.I(typeof require === 'undefined' ? require = J$.R(5163201, 'require', undefined, true, true) : require = J$.R(5163201, 'require', require, true, true)), false)(J$.T(5163209, './formats/pkcs8', 21, false)));
            J$.P(5163273, J$.R(5163233, 'formats', formats, false, true), J$.T(5163241, 'rfc4253', 21, false), J$.F(5163265, J$.I(typeof require === 'undefined' ? require = J$.R(5163249, 'require', undefined, true, true) : require = J$.R(5163249, 'require', require, true, true)), false)(J$.T(5163257, './formats/rfc4253', 21, false)));
            J$.P(5163321, J$.R(5163281, 'formats', formats, false, true), J$.T(5163289, 'ssh-private', 21, false), J$.F(5163313, J$.I(typeof require === 'undefined' ? require = J$.R(5163297, 'require', undefined, true, true) : require = J$.R(5163297, 'require', require, true, true)), false)(J$.T(5163305, './formats/ssh-private', 21, false)));
            J$.P(5163369, J$.R(5163329, 'formats', formats, false, true), J$.T(5163337, 'openssh', 21, false), J$.G(5163361, J$.R(5163345, 'formats', formats, false, true), J$.T(5163353, 'ssh-private', 21, false)));
            J$.P(5163417, J$.R(5163377, 'formats', formats, false, true), J$.T(5163385, 'ssh', 21, false), J$.G(5163409, J$.R(5163393, 'formats', formats, false, true), J$.T(5163401, 'ssh-private', 21, false)));
            J$.P(5163465, J$.R(5163425, 'formats', formats, false, true), J$.T(5163433, 'dnssec', 21, false), J$.F(5163457, J$.I(typeof require === 'undefined' ? require = J$.R(5163441, 'require', undefined, true, true) : require = J$.R(5163441, 'require', require, true, true)), false)(J$.T(5163449, './formats/dnssec', 21, false)));
            J$.M(5163609, J$.R(5163585, 'util', util, false, true), 'inherits', false)(J$.R(5163593, 'PrivateKey', PrivateKey, false, true), J$.R(5163601, 'Key', Key, false, true));
            J$.P(5163633, J$.R(5163617, 'PrivateKey', PrivateKey, false, true), 'formats', J$.R(5163625, 'formats', formats, false, true));
            J$.P(5163897, J$.G(5163649, J$.R(5163641, 'PrivateKey', PrivateKey, false, true), 'prototype'), 'toBuffer', J$.T(5163889, function (format, options) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(5163857, arguments.callee, this, arguments);
                            arguments = J$.N(5163865, 'arguments', arguments, true, false, false);
                            format = J$.N(5163873, 'format', format, true, false, false);
                            options = J$.N(5163881, 'options', options, true, false, false);
                            if (J$.C(276480, J$.B(592258, '===', J$.R(5163657, 'format', format, false, false), J$.T(5163665, undefined, 24, false))))
                                format = J$.W(5163681, 'format', J$.T(5163673, 'pkcs1', 21, false), format, false, false);
                            J$.M(5163713, J$.R(5163689, 'assert', assert, false, true), 'string', false)(J$.R(5163697, 'format', format, false, false), J$.T(5163705, 'format', 21, false));
                            J$.M(5163761, J$.R(5163721, 'assert', assert, false, true), 'object', false)(J$.G(5163745, J$.R(5163729, 'formats', formats, false, true), J$.R(5163737, 'format', format, false, false)), J$.T(5163753, 'formats[format]', 21, false));
                            J$.M(5163793, J$.R(5163769, 'assert', assert, false, true), 'optionalObject', false)(J$.R(5163777, 'options', options, false, false), J$.T(5163785, 'options', 21, false));
                            return J$.Rt(5163849, J$.M(5163841, J$.G(5163817, J$.R(5163801, 'formats', formats, false, true), J$.R(5163809, 'format', format, false, false)), 'write', false)(J$.R(5163825, 'this', this, false, false), J$.R(5163833, 'options', options, false, false)));
                        } catch (J$e) {
                            J$.Ex(5168257, J$e);
                        } finally {
                            if (J$.Fr(5168265))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(5164009, J$.G(5163913, J$.R(5163905, 'PrivateKey', PrivateKey, false, true), 'prototype'), 'hash', J$.T(5164001, function (algo, type) {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(5163969, arguments.callee, this, arguments);
                            arguments = J$.N(5163977, 'arguments', arguments, true, false, false);
                            algo = J$.N(5163985, 'algo', algo, true, false, false);
                            type = J$.N(5163993, 'type', type, true, false, false);
                            return J$.Rt(5163961, J$.M(5163953, J$.M(5163929, J$.R(5163921, 'this', this, false, false), 'toPublic', false)(), 'hash', false)(J$.R(5163937, 'algo', algo, false, false), J$.R(5163945, 'type', type, false, false)));
                        } catch (J$e) {
                            J$.Ex(5168273, J$e);
                        } finally {
                            if (J$.Fr(5168281))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(5164121, J$.G(5164025, J$.R(5164017, 'PrivateKey', PrivateKey, false, true), 'prototype'), 'fingerprint', J$.T(5164113, function (algo, type) {
                jalangiLabel3:
                    while (true) {
                        try {
                            J$.Fe(5164081, arguments.callee, this, arguments);
                            arguments = J$.N(5164089, 'arguments', arguments, true, false, false);
                            algo = J$.N(5164097, 'algo', algo, true, false, false);
                            type = J$.N(5164105, 'type', type, true, false, false);
                            return J$.Rt(5164073, J$.M(5164065, J$.M(5164041, J$.R(5164033, 'this', this, false, false), 'toPublic', false)(), 'fingerprint', false)(J$.R(5164049, 'algo', algo, false, false), J$.R(5164057, 'type', type, false, false)));
                        } catch (J$e) {
                            J$.Ex(5168289, J$e);
                        } finally {
                            if (J$.Fr(5168297))
                                continue jalangiLabel3;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(5164609, J$.G(5164137, J$.R(5164129, 'PrivateKey', PrivateKey, false, true), 'prototype'), 'toPublic', J$.T(5164601, function () {
                jalangiLabel4:
                    while (true) {
                        try {
                            J$.Fe(5164553, arguments.callee, this, arguments);
                            arguments = J$.N(5164561, 'arguments', arguments, true, false, false);
                            J$.N(5164569, 'algInfo', algInfo, false, false, false);
                            J$.N(5164577, 'pubParts', pubParts, false, false, false);
                            J$.N(5164585, 'i', i, false, false, false);
                            J$.N(5164593, 'p', p, false, false, false);
                            if (J$.C(276488, J$.G(5164153, J$.R(5164145, 'this', this, false, false), '_pubCache')))
                                return J$.Rt(5164177, J$.G(5164169, J$.R(5164161, 'this', this, false, false), '_pubCache'));
                            var algInfo = J$.W(5164225, 'algInfo', J$.G(5164217, J$.G(5164193, J$.R(5164185, 'algs', algs, false, true), 'info'), J$.G(5164209, J$.R(5164201, 'this', this, false, false), 'type')), algInfo, false, false);
                            var pubParts = J$.W(5164241, 'pubParts', J$.T(5164233, [], 10, false), pubParts, false, false);
                            for (var i = J$.W(5164257, 'i', J$.T(5164249, 0, 22, false), i, false, false); J$.C(276496, J$.B(592266, '<', J$.R(5164265, 'i', i, false, false), J$.G(5164289, J$.G(5164281, J$.R(5164273, 'algInfo', algInfo, false, false), 'parts'), 'length'))); i = J$.W(5164305, 'i', J$.B(592282, '+', J$.U(592274, '+', J$.R(5164297, 'i', i, false, false)), 1), i, false, false)) {
                                var p = J$.W(5164345, 'p', J$.G(5164337, J$.G(5164321, J$.R(5164313, 'algInfo', algInfo, false, false), 'parts'), J$.R(5164329, 'i', i, false, false)), p, false, false);
                                J$.M(5164393, J$.R(5164353, 'pubParts', pubParts, false, false), 'push', false)(J$.G(5164385, J$.G(5164369, J$.R(5164361, 'this', this, false, false), 'part'), J$.R(5164377, 'p', p, false, false)));
                            }
                            J$.P(5164465, J$.R(5164401, 'this', this, false, false), '_pubCache', J$.F(5164457, J$.R(5164409, 'Key', Key, false, true), true)(J$.T(5164449, {
                                type: J$.G(5164425, J$.R(5164417, 'this', this, false, false), 'type'),
                                source: J$.R(5164433, 'this', this, false, false),
                                parts: J$.R(5164441, 'pubParts', pubParts, false, false)
                            }, 11, false)));
                            if (J$.C(276504, J$.G(5164481, J$.R(5164473, 'this', this, false, false), 'comment')))
                                J$.P(5164521, J$.G(5164497, J$.R(5164489, 'this', this, false, false), '_pubCache'), 'comment', J$.G(5164513, J$.R(5164505, 'this', this, false, false), 'comment'));
                            return J$.Rt(5164545, J$.G(5164537, J$.R(5164529, 'this', this, false, false), '_pubCache'));
                        } catch (J$e) {
                            J$.Ex(5168305, J$e);
                        } finally {
                            if (J$.Fr(5168313))
                                continue jalangiLabel4;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(5165529, J$.G(5164625, J$.R(5164617, 'PrivateKey', PrivateKey, false, true), 'prototype'), 'derive', J$.T(5165521, function (newType) {
                jalangiLabel5:
                    while (true) {
                        try {
                            J$.Fe(5165473, arguments.callee, this, arguments);
                            arguments = J$.N(5165481, 'arguments', arguments, true, false, false);
                            newType = J$.N(5165489, 'newType', newType, true, false, false);
                            J$.N(5165497, 'priv', priv, false, false, false);
                            J$.N(5165505, 'pub', pub, false, false, false);
                            J$.N(5165513, 'pair', pair, false, false, false);
                            J$.M(5164657, J$.R(5164633, 'assert', assert, false, true), 'string', false)(J$.R(5164641, 'newType', newType, false, false), J$.T(5164649, 'type', 21, false));
                            var priv, pub, pair;
                            if (J$.C(276552, J$.C(276512, J$.B(592290, '===', J$.G(5164673, J$.R(5164665, 'this', this, false, false), 'type'), J$.T(5164681, 'ed25519', 21, false))) ? J$.B(592298, '===', J$.R(5164689, 'newType', newType, false, false), J$.T(5164697, 'curve25519', 21, false)) : J$._())) {
                                priv = J$.W(5164737, 'priv', J$.G(5164729, J$.G(5164721, J$.G(5164713, J$.R(5164705, 'this', this, false, false), 'part'), 'k'), 'data'), priv, false, false);
                                if (J$.C(276520, J$.B(592306, '===', J$.G(5164761, J$.R(5164745, 'priv', priv, false, false), J$.T(5164753, 0, 22, false)), J$.T(5164769, 0, 22, false))))
                                    priv = J$.W(5164801, 'priv', J$.M(5164793, J$.R(5164777, 'priv', priv, false, false), 'slice', false)(J$.T(5164785, 1, 22, false)), priv, false, false);
                                pair = J$.W(5164865, 'pair', J$.M(5164857, J$.G(5164825, J$.G(5164817, J$.R(5164809, 'nacl', nacl, false, true), 'box'), 'keyPair'), 'fromSecretKey', false)(J$.F(5164849, J$.I(typeof Uint8Array === 'undefined' ? Uint8Array = J$.R(5164833, 'Uint8Array', undefined, true, true) : Uint8Array = J$.R(5164833, 'Uint8Array', Uint8Array, true, true)), true)(J$.R(5164841, 'priv', priv, false, false))), pair, false, false);
                                pub = J$.W(5164905, 'pub', J$.M(5164897, J$.R(5164873, 'Buffer', Buffer, false, true), 'from', false)(J$.G(5164889, J$.R(5164881, 'pair', pair, false, false), 'publicKey')), pub, false, false);
                                return J$.Rt(5165033, J$.F(5165025, J$.R(5164913, 'PrivateKey', PrivateKey, false, true), true)(J$.T(5165017, {
                                    type: J$.T(5164921, 'curve25519', 21, false),
                                    parts: J$.T(5165009, [
                                        J$.T(5164961, {
                                            name: J$.T(5164929, 'A', 21, false),
                                            data: J$.M(5164953, J$.R(5164937, 'utils', utils, false, true), 'mpNormalize', false)(J$.R(5164945, 'pub', pub, false, false))
                                        }, 11, false),
                                        J$.T(5165001, {
                                            name: J$.T(5164969, 'k', 21, false),
                                            data: J$.M(5164993, J$.R(5164977, 'utils', utils, false, true), 'mpNormalize', false)(J$.R(5164985, 'priv', priv, false, false))
                                        }, 11, false)
                                    ], 10, false)
                                }, 11, false)));
                            } else if (J$.C(276544, J$.C(276528, J$.B(592314, '===', J$.G(5165049, J$.R(5165041, 'this', this, false, false), 'type'), J$.T(5165057, 'curve25519', 21, false))) ? J$.B(592322, '===', J$.R(5165065, 'newType', newType, false, false), J$.T(5165073, 'ed25519', 21, false)) : J$._())) {
                                priv = J$.W(5165113, 'priv', J$.G(5165105, J$.G(5165097, J$.G(5165089, J$.R(5165081, 'this', this, false, false), 'part'), 'k'), 'data'), priv, false, false);
                                if (J$.C(276536, J$.B(592330, '===', J$.G(5165137, J$.R(5165121, 'priv', priv, false, false), J$.T(5165129, 0, 22, false)), J$.T(5165145, 0, 22, false))))
                                    priv = J$.W(5165177, 'priv', J$.M(5165169, J$.R(5165153, 'priv', priv, false, false), 'slice', false)(J$.T(5165161, 1, 22, false)), priv, false, false);
                                pair = J$.W(5165241, 'pair', J$.M(5165233, J$.G(5165201, J$.G(5165193, J$.R(5165185, 'nacl', nacl, false, true), 'sign'), 'keyPair'), 'fromSeed', false)(J$.F(5165225, J$.I(typeof Uint8Array === 'undefined' ? Uint8Array = J$.R(5165209, 'Uint8Array', undefined, true, true) : Uint8Array = J$.R(5165209, 'Uint8Array', Uint8Array, true, true)), true)(J$.R(5165217, 'priv', priv, false, false))), pair, false, false);
                                pub = J$.W(5165281, 'pub', J$.M(5165273, J$.R(5165249, 'Buffer', Buffer, false, true), 'from', false)(J$.G(5165265, J$.R(5165257, 'pair', pair, false, false), 'publicKey')), pub, false, false);
                                return J$.Rt(5165409, J$.F(5165401, J$.R(5165289, 'PrivateKey', PrivateKey, false, true), true)(J$.T(5165393, {
                                    type: J$.T(5165297, 'ed25519', 21, false),
                                    parts: J$.T(5165385, [
                                        J$.T(5165337, {
                                            name: J$.T(5165305, 'A', 21, false),
                                            data: J$.M(5165329, J$.R(5165313, 'utils', utils, false, true), 'mpNormalize', false)(J$.R(5165321, 'pub', pub, false, false))
                                        }, 11, false),
                                        J$.T(5165377, {
                                            name: J$.T(5165345, 'k', 21, false),
                                            data: J$.M(5165369, J$.R(5165353, 'utils', utils, false, true), 'mpNormalize', false)(J$.R(5165361, 'priv', priv, false, false))
                                        }, 11, false)
                                    ], 10, false)
                                }, 11, false)));
                            }
                            throw J$.F(5165465, J$.I(typeof Error === 'undefined' ? Error = J$.R(5165417, 'Error', undefined, true, true) : Error = J$.R(5165417, 'Error', Error, true, true)), true)(J$.B(592354, '+', J$.B(592346, '+', J$.B(592338, '+', J$.T(5165425, 'Key derivation not supported from ', 21, false), J$.G(5165441, J$.R(5165433, 'this', this, false, false), 'type')), J$.T(5165449, ' to ', 21, false)), J$.R(5165457, 'newType', newType, false, false)));
                        } catch (J$e) {
                            J$.Ex(5168321, J$e);
                        } finally {
                            if (J$.Fr(5168329))
                                continue jalangiLabel5;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(5165625, J$.G(5165545, J$.R(5165537, 'PrivateKey', PrivateKey, false, true), 'prototype'), 'createVerify', J$.T(5165617, function (hashAlgo) {
                jalangiLabel6:
                    while (true) {
                        try {
                            J$.Fe(5165593, arguments.callee, this, arguments);
                            arguments = J$.N(5165601, 'arguments', arguments, true, false, false);
                            hashAlgo = J$.N(5165609, 'hashAlgo', hashAlgo, true, false, false);
                            return J$.Rt(5165585, J$.M(5165577, J$.M(5165561, J$.R(5165553, 'this', this, false, false), 'toPublic', false)(), 'createVerify', false)(J$.R(5165569, 'hashAlgo', hashAlgo, false, false)));
                        } catch (J$e) {
                            J$.Ex(5168337, J$e);
                        } finally {
                            if (J$.Fr(5168345))
                                continue jalangiLabel6;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(5166585, J$.G(5165641, J$.R(5165633, 'PrivateKey', PrivateKey, false, true), 'prototype'), 'createSign', J$.T(5166577, function (hashAlgo) {
                jalangiLabel8:
                    while (true) {
                        try {
                            J$.Fe(5166497, arguments.callee, this, arguments);
                            arguments = J$.N(5166505, 'arguments', arguments, true, false, false);
                            hashAlgo = J$.N(5166513, 'hashAlgo', hashAlgo, true, false, false);
                            J$.N(5166521, 'v', v, false, false, false);
                            J$.N(5166529, 'nm', nm, false, false, false);
                            J$.N(5166537, 'err', err, false, false, false);
                            J$.N(5166545, 'oldSign', oldSign, false, false, false);
                            J$.N(5166553, 'key', key, false, false, false);
                            J$.N(5166561, 'type', type, false, false, false);
                            J$.N(5166569, 'curve', curve, false, false, false);
                            if (J$.C(276560, J$.B(592362, '===', J$.R(5165649, 'hashAlgo', hashAlgo, false, false), J$.T(5165657, undefined, 24, false))))
                                hashAlgo = J$.W(5165681, 'hashAlgo', J$.M(5165673, J$.R(5165665, 'this', this, false, false), 'defaultHashAlgorithm', false)(), hashAlgo, false, false);
                            J$.M(5165713, J$.R(5165689, 'assert', assert, false, true), 'string', false)(J$.R(5165697, 'hashAlgo', hashAlgo, false, false), J$.T(5165705, 'hash algorithm', 21, false));
                            if (J$.C(276576, J$.C(276568, J$.B(592370, '===', J$.G(5165729, J$.R(5165721, 'this', this, false, false), 'type'), J$.T(5165737, 'ed25519', 21, false))) ? J$.B(592378, '!==', J$.R(5165745, 'edCompat', edCompat, false, true), J$.T(5165753, undefined, 24, false)) : J$._()))
                                return J$.Rt(5165793, J$.M(5165785, J$.R(5165761, 'edCompat', edCompat, false, true), 'Signer', true)(J$.R(5165769, 'this', this, false, false), J$.R(5165777, 'hashAlgo', hashAlgo, false, false)));
                            if (J$.C(276584, J$.B(592386, '===', J$.G(5165809, J$.R(5165801, 'this', this, false, false), 'type'), J$.T(5165817, 'curve25519', 21, false))))
                                throw J$.F(5165849, J$.I(typeof Error === 'undefined' ? Error = J$.R(5165825, 'Error', undefined, true, true) : Error = J$.R(5165825, 'Error', Error, true, true)), true)(J$.B(592394, '+', J$.T(5165833, 'Curve25519 keys are not suitable for ', 21, false), J$.T(5165841, 'signing or verification', 21, false)));
                            var v, nm, err;
                            try {
                                nm = J$.W(5165873, 'nm', J$.M(5165865, J$.R(5165857, 'hashAlgo', hashAlgo, false, false), 'toUpperCase', false)(), nm, false, false);
                                v = J$.W(5165905, 'v', J$.M(5165897, J$.R(5165881, 'crypto', crypto, false, true), 'createSign', false)(J$.R(5165889, 'nm', nm, false, false)), v, false, false);
                            } catch (e) {
                                J$.N(5165929, 'e', e, false, false, true);
                                err = J$.W(5165921, 'err', J$.R(5165913, 'e', e, false, false), err, false, false);
                            }
                            if (J$.C(276608, J$.C(276600, J$.B(592402, '===', J$.R(5165937, 'v', v, false, false), J$.T(5165945, undefined, 24, false))) ? J$._() : J$.C(276592, J$.B(592410, 'instanceof', J$.R(5165953, 'err', err, false, false), J$.I(typeof Error === 'undefined' ? Error = J$.R(5165961, 'Error', undefined, true, true) : Error = J$.R(5165961, 'Error', Error, true, true)))) ? J$.M(5165993, J$.G(5165977, J$.R(5165969, 'err', err, false, false), 'message'), 'match', false)(J$.T(5165985, /Unknown message digest/, 14, false)) : J$._())) {
                                nm = J$.W(5166009, 'nm', J$.T(5166001, 'RSA-', 21, false), nm, false, false);
                                nm = J$.W(5166041, 'nm', J$.B(592418, '+', J$.R(5166033, 'nm', nm, false, false), J$.M(5166025, J$.R(5166017, 'hashAlgo', hashAlgo, false, false), 'toUpperCase', false)()), nm, false, false);
                                v = J$.W(5166073, 'v', J$.M(5166065, J$.R(5166049, 'crypto', crypto, false, true), 'createSign', false)(J$.R(5166057, 'nm', nm, false, false)), v, false, false);
                            }
                            J$.M(5166105, J$.R(5166081, 'assert', assert, false, true), 'ok', false)(J$.R(5166089, 'v', v, false, false), J$.T(5166097, 'failed to create verifier', 21, false));
                            var oldSign = J$.W(5166145, 'oldSign', J$.M(5166137, J$.G(5166121, J$.R(5166113, 'v', v, false, false), 'sign'), 'bind', false)(J$.R(5166129, 'v', v, false, false)), oldSign, false, false);
                            var key = J$.W(5166177, 'key', J$.M(5166169, J$.R(5166153, 'this', this, false, false), 'toBuffer', false)(J$.T(5166161, 'pkcs1', 21, false)), key, false, false);
                            var type = J$.W(5166201, 'type', J$.G(5166193, J$.R(5166185, 'this', this, false, false), 'type'), type, false, false);
                            var curve = J$.W(5166225, 'curve', J$.G(5166217, J$.R(5166209, 'this', this, false, false), 'curve'), curve, false, false);
                            J$.P(5166473, J$.R(5166233, 'v', v, false, false), 'sign', J$.T(5166465, function () {
                                jalangiLabel7:
                                    while (true) {
                                        try {
                                            J$.Fe(5166441, arguments.callee, this, arguments);
                                            arguments = J$.N(5166449, 'arguments', arguments, true, false, false);
                                            J$.N(5166457, 'sig', sig, false, false, false);
                                            var sig = J$.W(5166265, 'sig', J$.F(5166257, J$.R(5166241, 'oldSign', oldSign, false, false), false)(J$.R(5166249, 'key', key, false, false)), sig, false, false);
                                            if (J$.C(276616, J$.B(592434, '===', J$.U(592426, 'typeof', J$.R(5166273, 'sig', sig, false, false)), J$.T(5166281, 'string', 21, false))))
                                                sig = J$.W(5166321, 'sig', J$.M(5166313, J$.R(5166289, 'Buffer', Buffer, false, true), 'from', false)(J$.R(5166297, 'sig', sig, false, false), J$.T(5166305, 'binary', 21, false)), sig, false, false);
                                            sig = J$.W(5166369, 'sig', J$.M(5166361, J$.R(5166329, 'Signature', Signature, false, true), 'parse', false)(J$.R(5166337, 'sig', sig, false, false), J$.R(5166345, 'type', type, false, false), J$.T(5166353, 'asn1', 21, false)), sig, false, false);
                                            J$.P(5166393, J$.R(5166377, 'sig', sig, false, false), 'hashAlgorithm', J$.R(5166385, 'hashAlgo', hashAlgo, false, false));
                                            J$.P(5166417, J$.R(5166401, 'sig', sig, false, false), 'curve', J$.R(5166409, 'curve', curve, false, false));
                                            return J$.Rt(5166433, J$.R(5166425, 'sig', sig, false, false));
                                        } catch (J$e) {
                                            J$.Ex(5168353, J$e);
                                        } finally {
                                            if (J$.Fr(5168361))
                                                continue jalangiLabel7;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            return J$.Rt(5166489, J$.R(5166481, 'v', v, false, false));
                        } catch (J$e) {
                            J$.Ex(5168369, J$e);
                        } finally {
                            if (J$.Fr(5168377))
                                continue jalangiLabel8;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(5167257, J$.R(5166593, 'PrivateKey', PrivateKey, false, true), 'parse', J$.T(5167249, function (data, format, options) {
                jalangiLabel9:
                    while (true) {
                        try {
                            J$.Fe(5167201, arguments.callee, this, arguments);
                            arguments = J$.N(5167209, 'arguments', arguments, true, false, false);
                            data = J$.N(5167217, 'data', data, true, false, false);
                            format = J$.N(5167225, 'format', format, true, false, false);
                            options = J$.N(5167233, 'options', options, true, false, false);
                            J$.N(5167241, 'k', k, false, false, false);
                            if (J$.C(276624, J$.B(592450, '!==', J$.U(592442, 'typeof', J$.R(5166601, 'data', data, false, false)), J$.T(5166609, 'string', 21, false))))
                                J$.M(5166641, J$.R(5166617, 'assert', assert, false, true), 'buffer', false)(J$.R(5166625, 'data', data, false, false), J$.T(5166633, 'data', 21, false));
                            if (J$.C(276632, J$.B(592458, '===', J$.R(5166649, 'format', format, false, false), J$.T(5166657, undefined, 24, false))))
                                format = J$.W(5166673, 'format', J$.T(5166665, 'auto', 21, false), format, false, false);
                            J$.M(5166705, J$.R(5166681, 'assert', assert, false, true), 'string', false)(J$.R(5166689, 'format', format, false, false), J$.T(5166697, 'format', 21, false));
                            if (J$.C(276640, J$.B(592474, '===', J$.U(592466, 'typeof', J$.R(5166713, 'options', options, false, false)), J$.T(5166721, 'string', 21, false))))
                                options = J$.W(5166745, 'options', J$.T(5166737, { filename: J$.R(5166729, 'options', options, false, false) }, 11, false), options, false, false);
                            J$.M(5166777, J$.R(5166753, 'assert', assert, false, true), 'optionalObject', false)(J$.R(5166761, 'options', options, false, false), J$.T(5166769, 'options', 21, false));
                            if (J$.C(276648, J$.B(592482, '===', J$.R(5166785, 'options', options, false, false), J$.T(5166793, undefined, 24, false))))
                                options = J$.W(5166809, 'options', J$.T(5166801, {}, 11, false), options, false, false);
                            J$.M(5166849, J$.R(5166817, 'assert', assert, false, true), 'optionalString', false)(J$.G(5166833, J$.R(5166825, 'options', options, false, false), 'filename'), J$.T(5166841, 'options.filename', 21, false));
                            if (J$.C(276656, J$.B(592490, '===', J$.G(5166865, J$.R(5166857, 'options', options, false, false), 'filename'), J$.T(5166873, undefined, 24, false))))
                                J$.P(5166897, J$.R(5166881, 'options', options, false, false), 'filename', J$.T(5166889, '(unnamed)', 21, false));
                            J$.M(5166945, J$.R(5166905, 'assert', assert, false, true), 'object', false)(J$.G(5166929, J$.R(5166913, 'formats', formats, false, true), J$.R(5166921, 'format', format, false, false)), J$.T(5166937, 'formats[format]', 21, false));
                            try {
                                var k = J$.W(5167001, 'k', J$.M(5166993, J$.G(5166969, J$.R(5166953, 'formats', formats, false, true), J$.R(5166961, 'format', format, false, false)), 'read', false)(J$.R(5166977, 'data', data, false, false), J$.R(5166985, 'options', options, false, false)), k, false, false);
                                J$.M(5167041, J$.R(5167009, 'assert', assert, false, true), 'ok', false)(J$.B(592498, 'instanceof', J$.R(5167017, 'k', k, false, false), J$.R(5167025, 'PrivateKey', PrivateKey, false, true)), J$.T(5167033, 'key is not a private key', 21, false));
                                if (J$.C(276664, J$.U(592506, '!', J$.G(5167057, J$.R(5167049, 'k', k, false, false), 'comment'))))
                                    J$.P(5167089, J$.R(5167065, 'k', k, false, false), 'comment', J$.G(5167081, J$.R(5167073, 'options', options, false, false), 'filename'));
                                return J$.Rt(5167105, J$.R(5167097, 'k', k, false, false));
                            } catch (e) {
                                J$.N(5167193, 'e', e, false, false, true);
                                if (J$.C(276672, J$.B(592514, '===', J$.G(5167121, J$.R(5167113, 'e', e, false, false), 'name'), J$.T(5167129, 'KeyEncryptedError', 21, false))))
                                    throw J$.R(5167137, 'e', e, false, false);
                                throw J$.F(5167185, J$.R(5167145, 'KeyParseError', KeyParseError, false, true), true)(J$.G(5167161, J$.R(5167153, 'options', options, false, false), 'filename'), J$.R(5167169, 'format', format, false, false), J$.R(5167177, 'e', e, false, false));
                            }
                        } catch (J$e) {
                            J$.Ex(5168385, J$e);
                        } finally {
                            if (J$.Fr(5168393))
                                continue jalangiLabel9;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(5167361, J$.R(5167265, 'PrivateKey', PrivateKey, false, true), 'isPrivateKey', J$.T(5167353, function (obj, ver) {
                jalangiLabel10:
                    while (true) {
                        try {
                            J$.Fe(5167321, arguments.callee, this, arguments);
                            arguments = J$.N(5167329, 'arguments', arguments, true, false, false);
                            obj = J$.N(5167337, 'obj', obj, true, false, false);
                            ver = J$.N(5167345, 'ver', ver, true, false, false);
                            return J$.Rt(5167313, J$.M(5167305, J$.R(5167273, 'utils', utils, false, true), 'isCompatible', false)(J$.R(5167281, 'obj', obj, false, false), J$.R(5167289, 'PrivateKey', PrivateKey, false, true), J$.R(5167297, 'ver', ver, false, false)));
                        } catch (J$e) {
                            J$.Ex(5168401, J$e);
                        } finally {
                            if (J$.Fr(5168409))
                                continue jalangiLabel10;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(5167705, J$.R(5167369, 'PrivateKey', PrivateKey, false, true), 'generate', J$.T(5167697, function (type, options) {
                jalangiLabel11:
                    while (true) {
                        try {
                            J$.Fe(5167665, arguments.callee, this, arguments);
                            arguments = J$.N(5167673, 'arguments', arguments, true, false, false);
                            type = J$.N(5167681, 'type', type, true, false, false);
                            options = J$.N(5167689, 'options', options, true, false, false);
                            if (J$.C(276680, J$.B(592522, '===', J$.R(5167377, 'options', options, false, false), J$.T(5167385, undefined, 24, false))))
                                options = J$.W(5167401, 'options', J$.T(5167393, {}, 11, false), options, false, false);
                            J$.M(5167433, J$.R(5167409, 'assert', assert, false, true), 'object', false)(J$.R(5167417, 'options', options, false, false), J$.T(5167425, 'options', 21, false));
                            switch (J$.C1(276696, J$.R(5167441, 'type', type, false, false))) {
                            case J$.C2(276704, J$.T(5167577, 'ecdsa', 21, false)):
                                if (J$.C(276688, J$.B(592530, '===', J$.G(5167457, J$.R(5167449, 'options', options, false, false), 'curve'), J$.T(5167465, undefined, 24, false))))
                                    J$.P(5167489, J$.R(5167473, 'options', options, false, false), 'curve', J$.T(5167481, 'nistp256', 21, false));
                                J$.M(5167529, J$.R(5167497, 'assert', assert, false, true), 'string', false)(J$.G(5167513, J$.R(5167505, 'options', options, false, false), 'curve'), J$.T(5167521, 'options.curve', 21, false));
                                return J$.Rt(5167569, J$.F(5167561, J$.R(5167537, 'generateECDSA', generateECDSA, false, true), false)(J$.G(5167553, J$.R(5167545, 'options', options, false, false), 'curve')));
                            case J$.C2(276712, J$.T(5167609, 'ed25519', 21, false)):
                                return J$.Rt(5167601, J$.F(5167593, J$.R(5167585, 'generateED25519', generateED25519, false, true), false)());
                            default:
                                throw J$.F(5167657, J$.I(typeof Error === 'undefined' ? Error = J$.R(5167617, 'Error', undefined, true, true) : Error = J$.R(5167617, 'Error', Error, true, true)), true)(J$.B(592554, '+', J$.B(592546, '+', J$.B(592538, '+', J$.T(5167625, 'Key generation not supported with key ', 21, false), J$.T(5167633, 'type "', 21, false)), J$.R(5167641, 'type', type, false, false)), J$.T(5167649, '"', 21, false)));
                            }
                        } catch (J$e) {
                            J$.Ex(5168417, J$e);
                        } finally {
                            if (J$.Fr(5168425))
                                continue jalangiLabel11;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(5167753, J$.G(5167721, J$.R(5167713, 'PrivateKey', PrivateKey, false, true), 'prototype'), '_sshpkApiVersion', J$.T(5167745, [
                J$.T(5167729, 1, 22, false),
                J$.T(5167737, 6, 22, false)
            ], 10, false));
            J$.P(5168057, J$.R(5167761, 'PrivateKey', PrivateKey, false, true), '_oldVersionDetect', J$.T(5168049, function (obj) {
                jalangiLabel12:
                    while (true) {
                        try {
                            J$.Fe(5168025, arguments.callee, this, arguments);
                            arguments = J$.N(5168033, 'arguments', arguments, true, false, false);
                            obj = J$.N(5168041, 'obj', obj, true, false, false);
                            J$.M(5167793, J$.R(5167769, 'assert', assert, false, true), 'func', false)(J$.G(5167785, J$.R(5167777, 'obj', obj, false, false), 'toPublic'));
                            J$.M(5167825, J$.R(5167801, 'assert', assert, false, true), 'func', false)(J$.G(5167817, J$.R(5167809, 'obj', obj, false, false), 'createSign'));
                            if (J$.C(276720, J$.G(5167841, J$.R(5167833, 'obj', obj, false, false), 'derive')))
                                return J$.Rt(5167873, J$.T(5167865, [
                                    J$.T(5167849, 1, 22, false),
                                    J$.T(5167857, 3, 22, false)
                                ], 10, false));
                            if (J$.C(276728, J$.G(5167889, J$.R(5167881, 'obj', obj, false, false), 'defaultHashAlgorithm')))
                                return J$.Rt(5167921, J$.T(5167913, [
                                    J$.T(5167897, 1, 22, false),
                                    J$.T(5167905, 2, 22, false)
                                ], 10, false));
                            if (J$.C(276736, J$.G(5167953, J$.G(5167937, J$.R(5167929, 'obj', obj, false, false), 'formats'), J$.T(5167945, 'auto', 21, false))))
                                return J$.Rt(5167985, J$.T(5167977, [
                                    J$.T(5167961, 1, 22, false),
                                    J$.T(5167969, 1, 22, false)
                                ], 10, false));
                            return J$.Rt(5168017, J$.T(5168009, [
                                J$.T(5167993, 1, 22, false),
                                J$.T(5168001, 0, 22, false)
                            ], 10, false));
                        } catch (J$e) {
                            J$.Ex(5168433, J$e);
                        } finally {
                            if (J$.Fr(5168441))
                                continue jalangiLabel12;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
        } catch (J$e) {
            J$.Ex(5168449, J$e);
        } finally {
            if (J$.Sr(5168457))
                continue jalangiLabel13;
            else
                break jalangiLabel13;
        }
    }
// JALANGI DO NOT INSTRUMENT

