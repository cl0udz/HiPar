J$.noInstrEval = false;
jalangiLabel6:
    while (true) {
        try {
            J$.Se(5057169, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestCouchNode/node_modules/sshpk/lib/errors.js');
            function FingerprintFormatError(fp, format) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(5055721, arguments.callee, this, arguments);
                            arguments = J$.N(5055729, 'arguments', arguments, true, false, false);
                            fp = J$.N(5055737, 'fp', fp, true, false, false);
                            format = J$.N(5055745, 'format', format, true, false, false);
                            if (J$.C(271528, J$.G(5055489, J$.I(typeof Error === 'undefined' ? Error = J$.R(5055481, 'Error', undefined, true, true) : Error = J$.R(5055481, 'Error', Error, true, true)), 'captureStackTrace')))
                                J$.M(5055521, J$.I(typeof Error === 'undefined' ? Error = J$.R(5055497, 'Error', undefined, true, true) : Error = J$.R(5055497, 'Error', Error, true, true)), 'captureStackTrace', false)(J$.R(5055505, 'this', this, false, false), J$.R(5055513, 'FingerprintFormatError', FingerprintFormatError, false, true));
                            J$.P(5055545, J$.R(5055529, 'this', this, false, false), 'name', J$.T(5055537, 'FingerprintFormatError', 21, false));
                            J$.P(5055569, J$.R(5055553, 'this', this, false, false), 'fingerprint', J$.R(5055561, 'fp', fp, false, false));
                            J$.P(5055593, J$.R(5055577, 'this', this, false, false), 'format', J$.R(5055585, 'format', format, false, false));
                            J$.P(5055617, J$.R(5055601, 'this', this, false, false), 'message', J$.T(5055609, 'Fingerprint format is not supported, or is invalid: ', 21, false));
                            if (J$.C(271536, J$.B(585130, '!==', J$.R(5055625, 'fp', fp, false, false), J$.T(5055633, undefined, 24, false))))
                                J$.A(5055665, J$.R(5055641, 'this', this, false, false), 'message', '+')(J$.B(585138, '+', J$.T(5055649, ' fingerprint = ', 21, false), J$.R(5055657, 'fp', fp, false, false)));
                            if (J$.C(271544, J$.B(585146, '!==', J$.R(5055673, 'format', format, false, false), J$.T(5055681, undefined, 24, false))))
                                J$.A(5055713, J$.R(5055689, 'this', this, false, false), 'message', '+')(J$.B(585154, '+', J$.T(5055697, ' format = ', 21, false), J$.R(5055705, 'format', format, false, false)));
                        } catch (J$e) {
                            J$.Ex(5057289, J$e);
                        } finally {
                            if (J$.Fr(5057297))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function InvalidAlgorithmError(alg) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(5055921, arguments.callee, this, arguments);
                            arguments = J$.N(5055929, 'arguments', arguments, true, false, false);
                            alg = J$.N(5055937, 'alg', alg, true, false, false);
                            if (J$.C(271552, J$.G(5055793, J$.I(typeof Error === 'undefined' ? Error = J$.R(5055785, 'Error', undefined, true, true) : Error = J$.R(5055785, 'Error', Error, true, true)), 'captureStackTrace')))
                                J$.M(5055825, J$.I(typeof Error === 'undefined' ? Error = J$.R(5055801, 'Error', undefined, true, true) : Error = J$.R(5055801, 'Error', Error, true, true)), 'captureStackTrace', false)(J$.R(5055809, 'this', this, false, false), J$.R(5055817, 'InvalidAlgorithmError', InvalidAlgorithmError, false, true));
                            J$.P(5055849, J$.R(5055833, 'this', this, false, false), 'name', J$.T(5055841, 'InvalidAlgorithmError', 21, false));
                            J$.P(5055873, J$.R(5055857, 'this', this, false, false), 'algorithm', J$.R(5055865, 'alg', alg, false, false));
                            J$.P(5055913, J$.R(5055881, 'this', this, false, false), 'message', J$.B(585170, '+', J$.B(585162, '+', J$.T(5055889, 'Algorithm "', 21, false), J$.R(5055897, 'alg', alg, false, false)), J$.T(5055905, '" is not supported', 21, false)));
                        } catch (J$e) {
                            J$.Ex(5057305, J$e);
                        } finally {
                            if (J$.Fr(5057313))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function KeyParseError(name, format, innerErr) {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(5056193, arguments.callee, this, arguments);
                            arguments = J$.N(5056201, 'arguments', arguments, true, false, false);
                            name = J$.N(5056209, 'name', name, true, false, false);
                            format = J$.N(5056217, 'format', format, true, false, false);
                            innerErr = J$.N(5056225, 'innerErr', innerErr, true, false, false);
                            if (J$.C(271560, J$.G(5055985, J$.I(typeof Error === 'undefined' ? Error = J$.R(5055977, 'Error', undefined, true, true) : Error = J$.R(5055977, 'Error', Error, true, true)), 'captureStackTrace')))
                                J$.M(5056017, J$.I(typeof Error === 'undefined' ? Error = J$.R(5055993, 'Error', undefined, true, true) : Error = J$.R(5055993, 'Error', Error, true, true)), 'captureStackTrace', false)(J$.R(5056001, 'this', this, false, false), J$.R(5056009, 'KeyParseError', KeyParseError, false, true));
                            J$.P(5056041, J$.R(5056025, 'this', this, false, false), 'name', J$.T(5056033, 'KeyParseError', 21, false));
                            J$.P(5056065, J$.R(5056049, 'this', this, false, false), 'format', J$.R(5056057, 'format', format, false, false));
                            J$.P(5056089, J$.R(5056073, 'this', this, false, false), 'keyName', J$.R(5056081, 'name', name, false, false));
                            J$.P(5056113, J$.R(5056097, 'this', this, false, false), 'innerErr', J$.R(5056105, 'innerErr', innerErr, false, false));
                            J$.P(5056185, J$.R(5056121, 'this', this, false, false), 'message', J$.B(585210, '+', J$.B(585202, '+', J$.B(585194, '+', J$.B(585186, '+', J$.B(585178, '+', J$.T(5056129, 'Failed to parse ', 21, false), J$.R(5056137, 'name', name, false, false)), J$.T(5056145, ' as a valid ', 21, false)), J$.R(5056153, 'format', format, false, false)), J$.T(5056161, ' format key: ', 21, false)), J$.G(5056177, J$.R(5056169, 'innerErr', innerErr, false, false), 'message')));
                        } catch (J$e) {
                            J$.Ex(5057321, J$e);
                        } finally {
                            if (J$.Fr(5057329))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function SignatureParseError(type, format, innerErr) {
                jalangiLabel3:
                    while (true) {
                        try {
                            J$.Fe(5056481, arguments.callee, this, arguments);
                            arguments = J$.N(5056489, 'arguments', arguments, true, false, false);
                            type = J$.N(5056497, 'type', type, true, false, false);
                            format = J$.N(5056505, 'format', format, true, false, false);
                            innerErr = J$.N(5056513, 'innerErr', innerErr, true, false, false);
                            if (J$.C(271568, J$.G(5056273, J$.I(typeof Error === 'undefined' ? Error = J$.R(5056265, 'Error', undefined, true, true) : Error = J$.R(5056265, 'Error', Error, true, true)), 'captureStackTrace')))
                                J$.M(5056305, J$.I(typeof Error === 'undefined' ? Error = J$.R(5056281, 'Error', undefined, true, true) : Error = J$.R(5056281, 'Error', Error, true, true)), 'captureStackTrace', false)(J$.R(5056289, 'this', this, false, false), J$.R(5056297, 'SignatureParseError', SignatureParseError, false, true));
                            J$.P(5056329, J$.R(5056313, 'this', this, false, false), 'name', J$.T(5056321, 'SignatureParseError', 21, false));
                            J$.P(5056353, J$.R(5056337, 'this', this, false, false), 'type', J$.R(5056345, 'type', type, false, false));
                            J$.P(5056377, J$.R(5056361, 'this', this, false, false), 'format', J$.R(5056369, 'format', format, false, false));
                            J$.P(5056401, J$.R(5056385, 'this', this, false, false), 'innerErr', J$.R(5056393, 'innerErr', innerErr, false, false));
                            J$.P(5056473, J$.R(5056409, 'this', this, false, false), 'message', J$.B(585250, '+', J$.B(585242, '+', J$.B(585234, '+', J$.B(585226, '+', J$.B(585218, '+', J$.T(5056417, 'Failed to parse the given data as a ', 21, false), J$.R(5056425, 'type', type, false, false)), J$.T(5056433, ' signature in ', 21, false)), J$.R(5056441, 'format', format, false, false)), J$.T(5056449, ' format: ', 21, false)), J$.G(5056465, J$.R(5056457, 'innerErr', innerErr, false, false), 'message')));
                        } catch (J$e) {
                            J$.Ex(5057337, J$e);
                        } finally {
                            if (J$.Fr(5057345))
                                continue jalangiLabel3;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function CertificateParseError(name, format, innerErr) {
                jalangiLabel4:
                    while (true) {
                        try {
                            J$.Fe(5056769, arguments.callee, this, arguments);
                            arguments = J$.N(5056777, 'arguments', arguments, true, false, false);
                            name = J$.N(5056785, 'name', name, true, false, false);
                            format = J$.N(5056793, 'format', format, true, false, false);
                            innerErr = J$.N(5056801, 'innerErr', innerErr, true, false, false);
                            if (J$.C(271576, J$.G(5056561, J$.I(typeof Error === 'undefined' ? Error = J$.R(5056553, 'Error', undefined, true, true) : Error = J$.R(5056553, 'Error', Error, true, true)), 'captureStackTrace')))
                                J$.M(5056593, J$.I(typeof Error === 'undefined' ? Error = J$.R(5056569, 'Error', undefined, true, true) : Error = J$.R(5056569, 'Error', Error, true, true)), 'captureStackTrace', false)(J$.R(5056577, 'this', this, false, false), J$.R(5056585, 'CertificateParseError', CertificateParseError, false, true));
                            J$.P(5056617, J$.R(5056601, 'this', this, false, false), 'name', J$.T(5056609, 'CertificateParseError', 21, false));
                            J$.P(5056641, J$.R(5056625, 'this', this, false, false), 'format', J$.R(5056633, 'format', format, false, false));
                            J$.P(5056665, J$.R(5056649, 'this', this, false, false), 'certName', J$.R(5056657, 'name', name, false, false));
                            J$.P(5056689, J$.R(5056673, 'this', this, false, false), 'innerErr', J$.R(5056681, 'innerErr', innerErr, false, false));
                            J$.P(5056761, J$.R(5056697, 'this', this, false, false), 'message', J$.B(585290, '+', J$.B(585282, '+', J$.B(585274, '+', J$.B(585266, '+', J$.B(585258, '+', J$.T(5056705, 'Failed to parse ', 21, false), J$.R(5056713, 'name', name, false, false)), J$.T(5056721, ' as a valid ', 21, false)), J$.R(5056729, 'format', format, false, false)), J$.T(5056737, ' format certificate: ', 21, false)), J$.G(5056753, J$.R(5056745, 'innerErr', innerErr, false, false), 'message')));
                        } catch (J$e) {
                            J$.Ex(5057353, J$e);
                        } finally {
                            if (J$.Fr(5057361))
                                continue jalangiLabel4;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function KeyEncryptedError(name, format) {
                jalangiLabel5:
                    while (true) {
                        try {
                            J$.Fe(5057033, arguments.callee, this, arguments);
                            arguments = J$.N(5057041, 'arguments', arguments, true, false, false);
                            name = J$.N(5057049, 'name', name, true, false, false);
                            format = J$.N(5057057, 'format', format, true, false, false);
                            if (J$.C(271584, J$.G(5056849, J$.I(typeof Error === 'undefined' ? Error = J$.R(5056841, 'Error', undefined, true, true) : Error = J$.R(5056841, 'Error', Error, true, true)), 'captureStackTrace')))
                                J$.M(5056881, J$.I(typeof Error === 'undefined' ? Error = J$.R(5056857, 'Error', undefined, true, true) : Error = J$.R(5056857, 'Error', Error, true, true)), 'captureStackTrace', false)(J$.R(5056865, 'this', this, false, false), J$.R(5056873, 'KeyEncryptedError', KeyEncryptedError, false, true));
                            J$.P(5056905, J$.R(5056889, 'this', this, false, false), 'name', J$.T(5056897, 'KeyEncryptedError', 21, false));
                            J$.P(5056929, J$.R(5056913, 'this', this, false, false), 'format', J$.R(5056921, 'format', format, false, false));
                            J$.P(5056953, J$.R(5056937, 'this', this, false, false), 'keyName', J$.R(5056945, 'name', name, false, false));
                            J$.P(5057025, J$.R(5056961, 'this', this, false, false), 'message', J$.B(585338, '+', J$.B(585330, '+', J$.B(585322, '+', J$.B(585314, '+', J$.B(585306, '+', J$.B(585298, '+', J$.T(5056969, 'The ', 21, false), J$.R(5056977, 'format', format, false, false)), J$.T(5056985, ' format key ', 21, false)), J$.R(5056993, 'name', name, false, false)), J$.T(5057001, ' is ', 21, false)), J$.T(5057009, 'encrypted (password-protected), and no passphrase was ', 21, false)), J$.T(5057017, 'provided in `options`', 21, false)));
                        } catch (J$e) {
                            J$.Ex(5057369, J$e);
                        } finally {
                            if (J$.Fr(5057377))
                                continue jalangiLabel5;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(5057177, 'assert', assert, false, false, false);
            J$.N(5057185, 'util', util, false, false, false);
            FingerprintFormatError = J$.N(5057201, 'FingerprintFormatError', J$.T(5057193, FingerprintFormatError, 12, false), true, false, false);
            InvalidAlgorithmError = J$.N(5057217, 'InvalidAlgorithmError', J$.T(5057209, InvalidAlgorithmError, 12, false), true, false, false);
            KeyParseError = J$.N(5057233, 'KeyParseError', J$.T(5057225, KeyParseError, 12, false), true, false, false);
            SignatureParseError = J$.N(5057249, 'SignatureParseError', J$.T(5057241, SignatureParseError, 12, false), true, false, false);
            CertificateParseError = J$.N(5057265, 'CertificateParseError', J$.T(5057257, CertificateParseError, 12, false), true, false, false);
            KeyEncryptedError = J$.N(5057281, 'KeyEncryptedError', J$.T(5057273, KeyEncryptedError, 12, false), true, false, false);
            var assert = J$.W(5055441, 'assert', J$.F(5055433, J$.I(typeof require === 'undefined' ? require = J$.R(5055417, 'require', undefined, true, true) : require = J$.R(5055417, 'require', require, true, true)), false)(J$.T(5055425, 'assert-plus', 21, false)), assert, false, true);
            var util = J$.W(5055473, 'util', J$.F(5055465, J$.I(typeof require === 'undefined' ? require = J$.R(5055449, 'require', undefined, true, true) : require = J$.R(5055449, 'require', require, true, true)), false)(J$.T(5055457, 'util', 21, false)), util, false, true);
            J$.M(5055777, J$.R(5055753, 'util', util, false, true), 'inherits', false)(J$.R(5055761, 'FingerprintFormatError', FingerprintFormatError, false, true), J$.I(typeof Error === 'undefined' ? Error = J$.R(5055769, 'Error', undefined, true, true) : Error = J$.R(5055769, 'Error', Error, true, true)));
            J$.M(5055969, J$.R(5055945, 'util', util, false, true), 'inherits', false)(J$.R(5055953, 'InvalidAlgorithmError', InvalidAlgorithmError, false, true), J$.I(typeof Error === 'undefined' ? Error = J$.R(5055961, 'Error', undefined, true, true) : Error = J$.R(5055961, 'Error', Error, true, true)));
            J$.M(5056257, J$.R(5056233, 'util', util, false, true), 'inherits', false)(J$.R(5056241, 'KeyParseError', KeyParseError, false, true), J$.I(typeof Error === 'undefined' ? Error = J$.R(5056249, 'Error', undefined, true, true) : Error = J$.R(5056249, 'Error', Error, true, true)));
            J$.M(5056545, J$.R(5056521, 'util', util, false, true), 'inherits', false)(J$.R(5056529, 'SignatureParseError', SignatureParseError, false, true), J$.I(typeof Error === 'undefined' ? Error = J$.R(5056537, 'Error', undefined, true, true) : Error = J$.R(5056537, 'Error', Error, true, true)));
            J$.M(5056833, J$.R(5056809, 'util', util, false, true), 'inherits', false)(J$.R(5056817, 'CertificateParseError', CertificateParseError, false, true), J$.I(typeof Error === 'undefined' ? Error = J$.R(5056825, 'Error', undefined, true, true) : Error = J$.R(5056825, 'Error', Error, true, true)));
            J$.M(5057089, J$.R(5057065, 'util', util, false, true), 'inherits', false)(J$.R(5057073, 'KeyEncryptedError', KeyEncryptedError, false, true), J$.I(typeof Error === 'undefined' ? Error = J$.R(5057081, 'Error', undefined, true, true) : Error = J$.R(5057081, 'Error', Error, true, true)));
            J$.P(5057161, J$.I(typeof module === 'undefined' ? module = J$.R(5057097, 'module', undefined, true, true) : module = J$.R(5057097, 'module', module, true, true)), 'exports', J$.T(5057153, {
                FingerprintFormatError: J$.R(5057105, 'FingerprintFormatError', FingerprintFormatError, false, true),
                InvalidAlgorithmError: J$.R(5057113, 'InvalidAlgorithmError', InvalidAlgorithmError, false, true),
                KeyParseError: J$.R(5057121, 'KeyParseError', KeyParseError, false, true),
                SignatureParseError: J$.R(5057129, 'SignatureParseError', SignatureParseError, false, true),
                KeyEncryptedError: J$.R(5057137, 'KeyEncryptedError', KeyEncryptedError, false, true),
                CertificateParseError: J$.R(5057145, 'CertificateParseError', CertificateParseError, false, true)
            }, 11, false));
        } catch (J$e) {
            J$.Ex(5057385, J$e);
        } finally {
            if (J$.Sr(5057393))
                continue jalangiLabel6;
            else
                break jalangiLabel6;
        }
    }
// JALANGI DO NOT INSTRUMENT

