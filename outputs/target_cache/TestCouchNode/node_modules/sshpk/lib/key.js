J$.noInstrEval = false;
jalangiLabel12:
    while (true) {
        try {
            J$.Se(5162121, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestCouchNode/node_modules/sshpk/lib/key.js');
            function Key(opts) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(5157617, arguments.callee, this, arguments);
                            arguments = J$.N(5157625, 'arguments', arguments, true, false, false);
                            opts = J$.N(5157633, 'opts', opts, true, false, false);
                            J$.N(5157641, 'algInfo', algInfo, false, false, false);
                            J$.N(5157649, 'partLookup', partLookup, false, false, false);
                            J$.N(5157657, 'i', i, false, false, false);
                            J$.N(5157665, 'part', part, false, false, false);
                            J$.N(5157673, 'sz', sz, false, false, false);
                            J$.N(5157681, 'curve', curve, false, false, false);
                            J$.N(5157689, 'szPart', szPart, false, false, false);
                            J$.M(5156617, J$.R(5156593, 'assert', assert, false, true), 'object', false)(J$.R(5156601, 'opts', opts, false, false), J$.T(5156609, 'options', 21, false));
                            J$.M(5156657, J$.R(5156625, 'assert', assert, false, true), 'arrayOfObject', false)(J$.G(5156641, J$.R(5156633, 'opts', opts, false, false), 'parts'), J$.T(5156649, 'options.parts', 21, false));
                            J$.M(5156697, J$.R(5156665, 'assert', assert, false, true), 'string', false)(J$.G(5156681, J$.R(5156673, 'opts', opts, false, false), 'type'), J$.T(5156689, 'options.type', 21, false));
                            J$.M(5156737, J$.R(5156705, 'assert', assert, false, true), 'optionalString', false)(J$.G(5156721, J$.R(5156713, 'opts', opts, false, false), 'comment'), J$.T(5156729, 'options.comment', 21, false));
                            var algInfo = J$.W(5156785, 'algInfo', J$.G(5156777, J$.G(5156753, J$.R(5156745, 'algs', algs, false, true), 'info'), J$.G(5156769, J$.R(5156761, 'opts', opts, false, false), 'type')), algInfo, false, false);
                            if (J$.C(276064, J$.B(591810, '!==', J$.U(591802, 'typeof', J$.R(5156793, 'algInfo', algInfo, false, false)), J$.T(5156801, 'object', 21, false))))
                                throw J$.F(5156833, J$.R(5156809, 'InvalidAlgorithmError', InvalidAlgorithmError, false, true), true)(J$.G(5156825, J$.R(5156817, 'opts', opts, false, false), 'type'));
                            var partLookup = J$.W(5156849, 'partLookup', J$.T(5156841, {}, 11, false), partLookup, false, false);
                            for (var i = J$.W(5156865, 'i', J$.T(5156857, 0, 22, false), i, false, false); J$.C(276072, J$.B(591818, '<', J$.R(5156873, 'i', i, false, false), J$.G(5156897, J$.G(5156889, J$.R(5156881, 'opts', opts, false, false), 'parts'), 'length'))); i = J$.W(5156913, 'i', J$.B(591834, '+', J$.U(591826, '+', J$.R(5156905, 'i', i, false, false)), 1), i, false, false)) {
                                var part = J$.W(5156953, 'part', J$.G(5156945, J$.G(5156929, J$.R(5156921, 'opts', opts, false, false), 'parts'), J$.R(5156937, 'i', i, false, false)), part, false, false);
                                J$.P(5156993, J$.R(5156961, 'partLookup', partLookup, false, false), J$.G(5156977, J$.R(5156969, 'part', part, false, false), 'name'), J$.R(5156985, 'part', part, false, false));
                            }
                            J$.P(5157025, J$.R(5157001, 'this', this, false, false), 'type', J$.G(5157017, J$.R(5157009, 'opts', opts, false, false), 'type'));
                            J$.P(5157057, J$.R(5157033, 'this', this, false, false), 'parts', J$.G(5157049, J$.R(5157041, 'opts', opts, false, false), 'parts'));
                            J$.P(5157081, J$.R(5157065, 'this', this, false, false), 'part', J$.R(5157073, 'partLookup', partLookup, false, false));
                            J$.P(5157105, J$.R(5157089, 'this', this, false, false), 'comment', J$.T(5157097, undefined, 24, false));
                            J$.P(5157137, J$.R(5157113, 'this', this, false, false), 'source', J$.G(5157129, J$.R(5157121, 'opts', opts, false, false), 'source'));
                            J$.P(5157169, J$.R(5157145, 'this', this, false, false), '_rfc4253Cache', J$.G(5157161, J$.R(5157153, 'opts', opts, false, false), '_rfc4253Cache'));
                            J$.P(5157193, J$.R(5157177, 'this', this, false, false), '_hashCache', J$.T(5157185, {}, 11, false));
                            var sz;
                            J$.P(5157217, J$.R(5157201, 'this', this, false, false), 'curve', J$.T(5157209, undefined, 24, false));
                            if (J$.C(276096, J$.B(591842, '===', J$.G(5157233, J$.R(5157225, 'this', this, false, false), 'type'), J$.T(5157241, 'ecdsa', 21, false)))) {
                                var curve = J$.W(5157289, 'curve', J$.M(5157281, J$.G(5157273, J$.G(5157265, J$.G(5157257, J$.R(5157249, 'this', this, false, false), 'part'), 'curve'), 'data'), 'toString', false)(), curve, false, false);
                                J$.P(5157313, J$.R(5157297, 'this', this, false, false), 'curve', J$.R(5157305, 'curve', curve, false, false));
                                sz = J$.W(5157361, 'sz', J$.G(5157353, J$.G(5157345, J$.G(5157329, J$.R(5157321, 'algs', algs, false, true), 'curves'), J$.R(5157337, 'curve', curve, false, false)), 'size'), sz, false, false);
                            } else if (J$.C(276088, J$.C(276080, J$.B(591850, '===', J$.G(5157377, J$.R(5157369, 'this', this, false, false), 'type'), J$.T(5157385, 'ed25519', 21, false))) ? J$._() : J$.B(591858, '===', J$.G(5157401, J$.R(5157393, 'this', this, false, false), 'type'), J$.T(5157409, 'curve25519', 21, false)))) {
                                sz = J$.W(5157425, 'sz', J$.T(5157417, 256, 22, false), sz, false, false);
                                J$.P(5157449, J$.R(5157433, 'this', this, false, false), 'curve', J$.T(5157441, 'curve25519', 21, false));
                            } else {
                                var szPart = J$.W(5157497, 'szPart', J$.G(5157489, J$.G(5157465, J$.R(5157457, 'this', this, false, false), 'part'), J$.G(5157481, J$.R(5157473, 'algInfo', algInfo, false, false), 'sizePart')), szPart, false, false);
                                sz = J$.W(5157529, 'sz', J$.G(5157521, J$.G(5157513, J$.R(5157505, 'szPart', szPart, false, false), 'data'), 'length'), sz, false, false);
                                sz = J$.W(5157585, 'sz', J$.B(591874, '-', J$.B(591866, '*', J$.R(5157537, 'sz', sz, false, false), J$.T(5157545, 8, 22, false)), J$.M(5157577, J$.R(5157553, 'utils', utils, false, true), 'countZeros', false)(J$.G(5157569, J$.R(5157561, 'szPart', szPart, false, false), 'data'))), sz, false, false);
                            }
                            J$.P(5157609, J$.R(5157593, 'this', this, false, false), 'size', J$.R(5157601, 'sz', sz, false, false));
                        } catch (J$e) {
                            J$.Ex(5162249, J$e);
                        } finally {
                            if (J$.Fr(5162257))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(5162129, 'assert', assert, false, false, false);
            J$.N(5162137, 'algs', algs, false, false, false);
            J$.N(5162145, 'crypto', crypto, false, false, false);
            J$.N(5162153, 'Fingerprint', Fingerprint, false, false, false);
            J$.N(5162161, 'Signature', Signature, false, false, false);
            J$.N(5162169, 'DiffieHellman', DiffieHellman, false, false, false);
            J$.N(5162177, 'errs', errs, false, false, false);
            J$.N(5162185, 'utils', utils, false, false, false);
            J$.N(5162193, 'PrivateKey', PrivateKey, false, false, false);
            J$.N(5162201, 'edCompat', edCompat, false, false, false);
            J$.N(5162209, 'InvalidAlgorithmError', InvalidAlgorithmError, false, false, false);
            J$.N(5162217, 'KeyParseError', KeyParseError, false, false, false);
            J$.N(5162225, 'formats', formats, false, false, false);
            Key = J$.N(5162241, 'Key', J$.T(5162233, Key, 12, false), true, false, false);
            J$.P(5155657, J$.I(typeof module === 'undefined' ? module = J$.R(5155641, 'module', undefined, true, true) : module = J$.R(5155641, 'module', module, true, true)), 'exports', J$.R(5155649, 'Key', Key, false, true));
            var assert = J$.W(5155689, 'assert', J$.F(5155681, J$.I(typeof require === 'undefined' ? require = J$.R(5155665, 'require', undefined, true, true) : require = J$.R(5155665, 'require', require, true, true)), false)(J$.T(5155673, 'assert-plus', 21, false)), assert, false, true);
            var algs = J$.W(5155721, 'algs', J$.F(5155713, J$.I(typeof require === 'undefined' ? require = J$.R(5155697, 'require', undefined, true, true) : require = J$.R(5155697, 'require', require, true, true)), false)(J$.T(5155705, './algs', 21, false)), algs, false, true);
            var crypto = J$.W(5155753, 'crypto', J$.F(5155745, J$.I(typeof require === 'undefined' ? require = J$.R(5155729, 'require', undefined, true, true) : require = J$.R(5155729, 'require', require, true, true)), false)(J$.T(5155737, 'crypto', 21, false)), crypto, false, true);
            var Fingerprint = J$.W(5155785, 'Fingerprint', J$.F(5155777, J$.I(typeof require === 'undefined' ? require = J$.R(5155761, 'require', undefined, true, true) : require = J$.R(5155761, 'require', require, true, true)), false)(J$.T(5155769, './fingerprint', 21, false)), Fingerprint, false, true);
            var Signature = J$.W(5155817, 'Signature', J$.F(5155809, J$.I(typeof require === 'undefined' ? require = J$.R(5155793, 'require', undefined, true, true) : require = J$.R(5155793, 'require', require, true, true)), false)(J$.T(5155801, './signature', 21, false)), Signature, false, true);
            var DiffieHellman = J$.W(5155857, 'DiffieHellman', J$.G(5155849, J$.F(5155841, J$.I(typeof require === 'undefined' ? require = J$.R(5155825, 'require', undefined, true, true) : require = J$.R(5155825, 'require', require, true, true)), false)(J$.T(5155833, './dhe', 21, false)), 'DiffieHellman'), DiffieHellman, false, true);
            var errs = J$.W(5155889, 'errs', J$.F(5155881, J$.I(typeof require === 'undefined' ? require = J$.R(5155865, 'require', undefined, true, true) : require = J$.R(5155865, 'require', require, true, true)), false)(J$.T(5155873, './errors', 21, false)), errs, false, true);
            var utils = J$.W(5155921, 'utils', J$.F(5155913, J$.I(typeof require === 'undefined' ? require = J$.R(5155897, 'require', undefined, true, true) : require = J$.R(5155897, 'require', require, true, true)), false)(J$.T(5155905, './utils', 21, false)), utils, false, true);
            var PrivateKey = J$.W(5155953, 'PrivateKey', J$.F(5155945, J$.I(typeof require === 'undefined' ? require = J$.R(5155929, 'require', undefined, true, true) : require = J$.R(5155929, 'require', require, true, true)), false)(J$.T(5155937, './private-key', 21, false)), PrivateKey, false, true);
            var edCompat;
            try {
                edCompat = J$.W(5155985, 'edCompat', J$.F(5155977, J$.I(typeof require === 'undefined' ? require = J$.R(5155961, 'require', undefined, true, true) : require = J$.R(5155961, 'require', require, true, true)), false)(J$.T(5155969, './ed-compat', 21, false)), edCompat, false, true);
            } catch (e) {
                J$.N(5155993, 'e', e, false, false, true);
            }
            var InvalidAlgorithmError = J$.W(5156017, 'InvalidAlgorithmError', J$.G(5156009, J$.R(5156001, 'errs', errs, false, true), 'InvalidAlgorithmError'), InvalidAlgorithmError, false, true);
            var KeyParseError = J$.W(5156041, 'KeyParseError', J$.G(5156033, J$.R(5156025, 'errs', errs, false, true), 'KeyParseError'), KeyParseError, false, true);
            var formats = J$.W(5156057, 'formats', J$.T(5156049, {}, 11, false), formats, false, true);
            J$.P(5156105, J$.R(5156065, 'formats', formats, false, true), J$.T(5156073, 'auto', 21, false), J$.F(5156097, J$.I(typeof require === 'undefined' ? require = J$.R(5156081, 'require', undefined, true, true) : require = J$.R(5156081, 'require', require, true, true)), false)(J$.T(5156089, './formats/auto', 21, false)));
            J$.P(5156153, J$.R(5156113, 'formats', formats, false, true), J$.T(5156121, 'pem', 21, false), J$.F(5156145, J$.I(typeof require === 'undefined' ? require = J$.R(5156129, 'require', undefined, true, true) : require = J$.R(5156129, 'require', require, true, true)), false)(J$.T(5156137, './formats/pem', 21, false)));
            J$.P(5156201, J$.R(5156161, 'formats', formats, false, true), J$.T(5156169, 'pkcs1', 21, false), J$.F(5156193, J$.I(typeof require === 'undefined' ? require = J$.R(5156177, 'require', undefined, true, true) : require = J$.R(5156177, 'require', require, true, true)), false)(J$.T(5156185, './formats/pkcs1', 21, false)));
            J$.P(5156249, J$.R(5156209, 'formats', formats, false, true), J$.T(5156217, 'pkcs8', 21, false), J$.F(5156241, J$.I(typeof require === 'undefined' ? require = J$.R(5156225, 'require', undefined, true, true) : require = J$.R(5156225, 'require', require, true, true)), false)(J$.T(5156233, './formats/pkcs8', 21, false)));
            J$.P(5156297, J$.R(5156257, 'formats', formats, false, true), J$.T(5156265, 'rfc4253', 21, false), J$.F(5156289, J$.I(typeof require === 'undefined' ? require = J$.R(5156273, 'require', undefined, true, true) : require = J$.R(5156273, 'require', require, true, true)), false)(J$.T(5156281, './formats/rfc4253', 21, false)));
            J$.P(5156345, J$.R(5156305, 'formats', formats, false, true), J$.T(5156313, 'ssh', 21, false), J$.F(5156337, J$.I(typeof require === 'undefined' ? require = J$.R(5156321, 'require', undefined, true, true) : require = J$.R(5156321, 'require', require, true, true)), false)(J$.T(5156329, './formats/ssh', 21, false)));
            J$.P(5156393, J$.R(5156353, 'formats', formats, false, true), J$.T(5156361, 'ssh-private', 21, false), J$.F(5156385, J$.I(typeof require === 'undefined' ? require = J$.R(5156369, 'require', undefined, true, true) : require = J$.R(5156369, 'require', require, true, true)), false)(J$.T(5156377, './formats/ssh-private', 21, false)));
            J$.P(5156441, J$.R(5156401, 'formats', formats, false, true), J$.T(5156409, 'openssh', 21, false), J$.G(5156433, J$.R(5156417, 'formats', formats, false, true), J$.T(5156425, 'ssh-private', 21, false)));
            J$.P(5156489, J$.R(5156449, 'formats', formats, false, true), J$.T(5156457, 'dnssec', 21, false), J$.F(5156481, J$.I(typeof require === 'undefined' ? require = J$.R(5156465, 'require', undefined, true, true) : require = J$.R(5156465, 'require', require, true, true)), false)(J$.T(5156473, './formats/dnssec', 21, false)));
            J$.P(5156537, J$.R(5156497, 'formats', formats, false, true), J$.T(5156505, 'putty', 21, false), J$.F(5156529, J$.I(typeof require === 'undefined' ? require = J$.R(5156513, 'require', undefined, true, true) : require = J$.R(5156513, 'require', require, true, true)), false)(J$.T(5156521, './formats/putty', 21, false)));
            J$.P(5156585, J$.R(5156545, 'formats', formats, false, true), J$.T(5156553, 'ppk', 21, false), J$.G(5156577, J$.R(5156561, 'formats', formats, false, true), J$.T(5156569, 'putty', 21, false)));
            J$.P(5157713, J$.R(5157697, 'Key', Key, false, true), 'formats', J$.R(5157705, 'formats', formats, false, true));
            J$.P(5158097, J$.G(5157729, J$.R(5157721, 'Key', Key, false, true), 'prototype'), 'toBuffer', J$.T(5158089, function (format, options) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(5158057, arguments.callee, this, arguments);
                            arguments = J$.N(5158065, 'arguments', arguments, true, false, false);
                            format = J$.N(5158073, 'format', format, true, false, false);
                            options = J$.N(5158081, 'options', options, true, false, false);
                            if (J$.C(276104, J$.B(591882, '===', J$.R(5157737, 'format', format, false, false), J$.T(5157745, undefined, 24, false))))
                                format = J$.W(5157761, 'format', J$.T(5157753, 'ssh', 21, false), format, false, false);
                            J$.M(5157793, J$.R(5157769, 'assert', assert, false, true), 'string', false)(J$.R(5157777, 'format', format, false, false), J$.T(5157785, 'format', 21, false));
                            J$.M(5157841, J$.R(5157801, 'assert', assert, false, true), 'object', false)(J$.G(5157825, J$.R(5157809, 'formats', formats, false, true), J$.R(5157817, 'format', format, false, false)), J$.T(5157833, 'formats[format]', 21, false));
                            J$.M(5157873, J$.R(5157849, 'assert', assert, false, true), 'optionalObject', false)(J$.R(5157857, 'options', options, false, false), J$.T(5157865, 'options', 21, false));
                            if (J$.C(276120, J$.B(591890, '===', J$.R(5157881, 'format', format, false, false), J$.T(5157889, 'rfc4253', 21, false)))) {
                                if (J$.C(276112, J$.B(591898, '===', J$.G(5157905, J$.R(5157897, 'this', this, false, false), '_rfc4253Cache'), J$.T(5157913, undefined, 24, false))))
                                    J$.P(5157969, J$.R(5157921, 'this', this, false, false), '_rfc4253Cache', J$.M(5157961, J$.G(5157945, J$.R(5157929, 'formats', formats, false, true), J$.T(5157937, 'rfc4253', 21, false)), 'write', false)(J$.R(5157953, 'this', this, false, false)));
                                return J$.Rt(5157993, J$.G(5157985, J$.R(5157977, 'this', this, false, false), '_rfc4253Cache'));
                            }
                            return J$.Rt(5158049, J$.M(5158041, J$.G(5158017, J$.R(5158001, 'formats', formats, false, true), J$.R(5158009, 'format', format, false, false)), 'write', false)(J$.R(5158025, 'this', this, false, false), J$.R(5158033, 'options', options, false, false)));
                        } catch (J$e) {
                            J$.Ex(5162265, J$e);
                        } finally {
                            if (J$.Fr(5162273))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(5158209, J$.G(5158113, J$.R(5158105, 'Key', Key, false, true), 'prototype'), 'toString', J$.T(5158201, function (format, options) {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(5158169, arguments.callee, this, arguments);
                            arguments = J$.N(5158177, 'arguments', arguments, true, false, false);
                            format = J$.N(5158185, 'format', format, true, false, false);
                            options = J$.N(5158193, 'options', options, true, false, false);
                            return J$.Rt(5158161, J$.M(5158153, J$.M(5158145, J$.R(5158121, 'this', this, false, false), 'toBuffer', false)(J$.R(5158129, 'format', format, false, false), J$.R(5158137, 'options', options, false, false)), 'toString', false)());
                        } catch (J$e) {
                            J$.Ex(5162281, J$e);
                        } finally {
                            if (J$.Fr(5162289))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(5158841, J$.G(5158225, J$.R(5158217, 'Key', Key, false, true), 'prototype'), 'hash', J$.T(5158833, function (algo, type) {
                jalangiLabel3:
                    while (true) {
                        try {
                            J$.Fe(5158777, arguments.callee, this, arguments);
                            arguments = J$.N(5158785, 'arguments', arguments, true, false, false);
                            algo = J$.N(5158793, 'algo', algo, true, false, false);
                            type = J$.N(5158801, 'type', type, true, false, false);
                            J$.N(5158809, 'cacheKey', cacheKey, false, false, false);
                            J$.N(5158817, 'buf', buf, false, false, false);
                            J$.N(5158825, 'hash', hash, false, false, false);
                            J$.M(5158257, J$.R(5158233, 'assert', assert, false, true), 'string', false)(J$.R(5158241, 'algo', algo, false, false), J$.T(5158249, 'algorithm', 21, false));
                            J$.M(5158289, J$.R(5158265, 'assert', assert, false, true), 'optionalString', false)(J$.R(5158273, 'type', type, false, false), J$.T(5158281, 'type', 21, false));
                            if (J$.C(276128, J$.B(591906, '===', J$.R(5158297, 'type', type, false, false), J$.T(5158305, undefined, 24, false))))
                                type = J$.W(5158321, 'type', J$.T(5158313, 'ssh', 21, false), type, false, false);
                            algo = J$.W(5158345, 'algo', J$.M(5158337, J$.R(5158329, 'algo', algo, false, false), 'toLowerCase', false)(), algo, false, false);
                            if (J$.C(276136, J$.B(591914, '===', J$.G(5158377, J$.G(5158361, J$.R(5158353, 'algs', algs, false, true), 'hashAlgs'), J$.R(5158369, 'algo', algo, false, false)), J$.T(5158385, undefined, 24, false))))
                                throw J$.F(5158409, J$.R(5158393, 'InvalidAlgorithmError', InvalidAlgorithmError, false, true), true)(J$.R(5158401, 'algo', algo, false, false));
                            var cacheKey = J$.W(5158441, 'cacheKey', J$.B(591930, '+', J$.B(591922, '+', J$.R(5158417, 'algo', algo, false, false), J$.T(5158425, '||', 21, false)), J$.R(5158433, 'type', type, false, false)), cacheKey, false, false);
                            if (J$.C(276144, J$.G(5158473, J$.G(5158457, J$.R(5158449, 'this', this, false, false), '_hashCache'), J$.R(5158465, 'cacheKey', cacheKey, false, false))))
                                return J$.Rt(5158513, J$.G(5158505, J$.G(5158489, J$.R(5158481, 'this', this, false, false), '_hashCache'), J$.R(5158497, 'cacheKey', cacheKey, false, false)));
                            var buf;
                            if (J$.C(276160, J$.B(591938, '===', J$.R(5158521, 'type', type, false, false), J$.T(5158529, 'ssh', 21, false)))) {
                                buf = J$.W(5158561, 'buf', J$.M(5158553, J$.R(5158537, 'this', this, false, false), 'toBuffer', false)(J$.T(5158545, 'rfc4253', 21, false)), buf, false, false);
                            } else if (J$.C(276152, J$.B(591946, '===', J$.R(5158569, 'type', type, false, false), J$.T(5158577, 'spki', 21, false)))) {
                                buf = J$.W(5158617, 'buf', J$.M(5158609, J$.G(5158593, J$.R(5158585, 'formats', formats, false, true), 'pkcs8'), 'pkcs8ToBuffer', false)(J$.R(5158601, 'this', this, false, false)), buf, false, false);
                            } else {
                                throw J$.F(5158657, J$.I(typeof Error === 'undefined' ? Error = J$.R(5158625, 'Error', undefined, true, true) : Error = J$.R(5158625, 'Error', Error, true, true)), true)(J$.B(591962, '+', J$.B(591954, '+', J$.T(5158633, 'Hash type ', 21, false), J$.R(5158641, 'type', type, false, false)), J$.T(5158649, ' not supported', 21, false)));
                            }
                            var hash = J$.W(5158713, 'hash', J$.M(5158705, J$.M(5158697, J$.M(5158681, J$.R(5158665, 'crypto', crypto, false, true), 'createHash', false)(J$.R(5158673, 'algo', algo, false, false)), 'update', false)(J$.R(5158689, 'buf', buf, false, false)), 'digest', false)(), hash, false, false);
                            J$.P(5158753, J$.G(5158729, J$.R(5158721, 'this', this, false, false), '_hashCache'), J$.R(5158737, 'cacheKey', cacheKey, false, false), J$.R(5158745, 'hash', hash, false, false));
                            return J$.Rt(5158769, J$.R(5158761, 'hash', hash, false, false));
                        } catch (J$e) {
                            J$.Ex(5162297, J$e);
                        } finally {
                            if (J$.Fr(5162305))
                                continue jalangiLabel3;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(5159145, J$.G(5158857, J$.R(5158849, 'Key', Key, false, true), 'prototype'), 'fingerprint', J$.T(5159137, function (algo, type) {
                jalangiLabel4:
                    while (true) {
                        try {
                            J$.Fe(5159097, arguments.callee, this, arguments);
                            arguments = J$.N(5159105, 'arguments', arguments, true, false, false);
                            algo = J$.N(5159113, 'algo', algo, true, false, false);
                            type = J$.N(5159121, 'type', type, true, false, false);
                            J$.N(5159129, 'opts', opts, false, false, false);
                            if (J$.C(276168, J$.B(591970, '===', J$.R(5158865, 'algo', algo, false, false), J$.T(5158873, undefined, 24, false))))
                                algo = J$.W(5158889, 'algo', J$.T(5158881, 'sha256', 21, false), algo, false, false);
                            if (J$.C(276176, J$.B(591978, '===', J$.R(5158897, 'type', type, false, false), J$.T(5158905, undefined, 24, false))))
                                type = J$.W(5158921, 'type', J$.T(5158913, 'ssh', 21, false), type, false, false);
                            J$.M(5158953, J$.R(5158929, 'assert', assert, false, true), 'string', false)(J$.R(5158937, 'algo', algo, false, false), J$.T(5158945, 'algorithm', 21, false));
                            J$.M(5158985, J$.R(5158961, 'assert', assert, false, true), 'string', false)(J$.R(5158969, 'type', type, false, false), J$.T(5158977, 'type', 21, false));
                            var opts = J$.W(5159057, 'opts', J$.T(5159049, {
                                type: J$.T(5158993, 'key', 21, false),
                                hash: J$.M(5159025, J$.R(5159001, 'this', this, false, false), 'hash', false)(J$.R(5159009, 'algo', algo, false, false), J$.R(5159017, 'type', type, false, false)),
                                algorithm: J$.R(5159033, 'algo', algo, false, false),
                                hashType: J$.R(5159041, 'type', type, false, false)
                            }, 11, false), opts, false, false);
                            return J$.Rt(5159089, J$.F(5159081, J$.R(5159065, 'Fingerprint', Fingerprint, false, true), true)(J$.R(5159073, 'opts', opts, false, false)));
                        } catch (J$e) {
                            J$.Ex(5162313, J$e);
                        } finally {
                            if (J$.Fr(5162321))
                                continue jalangiLabel4;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(5159497, J$.G(5159161, J$.R(5159153, 'Key', Key, false, true), 'prototype'), 'defaultHashAlgorithm', J$.T(5159489, function () {
                jalangiLabel5:
                    while (true) {
                        try {
                            J$.Fe(5159465, arguments.callee, this, arguments);
                            arguments = J$.N(5159473, 'arguments', arguments, true, false, false);
                            J$.N(5159481, 'hashAlgo', hashAlgo, false, false, false);
                            var hashAlgo = J$.W(5159177, 'hashAlgo', J$.T(5159169, 'sha1', 21, false), hashAlgo, false, false);
                            if (J$.C(276184, J$.B(591986, '===', J$.G(5159193, J$.R(5159185, 'this', this, false, false), 'type'), J$.T(5159201, 'rsa', 21, false))))
                                hashAlgo = J$.W(5159217, 'hashAlgo', J$.T(5159209, 'sha256', 21, false), hashAlgo, false, false);
                            if (J$.C(276200, J$.C(276192, J$.B(591994, '===', J$.G(5159233, J$.R(5159225, 'this', this, false, false), 'type'), J$.T(5159241, 'dsa', 21, false))) ? J$.B(592002, '>', J$.G(5159257, J$.R(5159249, 'this', this, false, false), 'size'), J$.T(5159265, 1024, 22, false)) : J$._()))
                                hashAlgo = J$.W(5159281, 'hashAlgo', J$.T(5159273, 'sha256', 21, false), hashAlgo, false, false);
                            if (J$.C(276208, J$.B(592010, '===', J$.G(5159297, J$.R(5159289, 'this', this, false, false), 'type'), J$.T(5159305, 'ed25519', 21, false))))
                                hashAlgo = J$.W(5159321, 'hashAlgo', J$.T(5159313, 'sha512', 21, false), hashAlgo, false, false);
                            if (J$.C(276232, J$.B(592018, '===', J$.G(5159337, J$.R(5159329, 'this', this, false, false), 'type'), J$.T(5159345, 'ecdsa', 21, false)))) {
                                if (J$.C(276224, J$.B(592026, '<=', J$.G(5159361, J$.R(5159353, 'this', this, false, false), 'size'), J$.T(5159369, 256, 22, false))))
                                    hashAlgo = J$.W(5159385, 'hashAlgo', J$.T(5159377, 'sha256', 21, false), hashAlgo, false, false);
                                else if (J$.C(276216, J$.B(592034, '<=', J$.G(5159401, J$.R(5159393, 'this', this, false, false), 'size'), J$.T(5159409, 384, 22, false))))
                                    hashAlgo = J$.W(5159425, 'hashAlgo', J$.T(5159417, 'sha384', 21, false), hashAlgo, false, false);
                                else
                                    hashAlgo = J$.W(5159441, 'hashAlgo', J$.T(5159433, 'sha512', 21, false), hashAlgo, false, false);
                            }
                            return J$.Rt(5159457, J$.R(5159449, 'hashAlgo', hashAlgo, false, false));
                        } catch (J$e) {
                            J$.Ex(5162329, J$e);
                        } finally {
                            if (J$.Fr(5162337))
                                continue jalangiLabel5;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(5160745, J$.G(5159513, J$.R(5159505, 'Key', Key, false, true), 'prototype'), 'createVerify', J$.T(5160737, function (hashAlgo) {
                jalangiLabel7:
                    while (true) {
                        try {
                            J$.Fe(5160657, arguments.callee, this, arguments);
                            arguments = J$.N(5160665, 'arguments', arguments, true, false, false);
                            hashAlgo = J$.N(5160673, 'hashAlgo', hashAlgo, true, false, false);
                            J$.N(5160681, 'v', v, false, false, false);
                            J$.N(5160689, 'nm', nm, false, false, false);
                            J$.N(5160697, 'err', err, false, false, false);
                            J$.N(5160705, 'oldVerify', oldVerify, false, false, false);
                            J$.N(5160713, 'key', key, false, false, false);
                            J$.N(5160721, 'curve', curve, false, false, false);
                            J$.N(5160729, 'self', self, false, false, false);
                            if (J$.C(276240, J$.B(592042, '===', J$.R(5159521, 'hashAlgo', hashAlgo, false, false), J$.T(5159529, undefined, 24, false))))
                                hashAlgo = J$.W(5159553, 'hashAlgo', J$.M(5159545, J$.R(5159537, 'this', this, false, false), 'defaultHashAlgorithm', false)(), hashAlgo, false, false);
                            J$.M(5159585, J$.R(5159561, 'assert', assert, false, true), 'string', false)(J$.R(5159569, 'hashAlgo', hashAlgo, false, false), J$.T(5159577, 'hash algorithm', 21, false));
                            if (J$.C(276256, J$.C(276248, J$.B(592050, '===', J$.G(5159601, J$.R(5159593, 'this', this, false, false), 'type'), J$.T(5159609, 'ed25519', 21, false))) ? J$.B(592058, '!==', J$.R(5159617, 'edCompat', edCompat, false, true), J$.T(5159625, undefined, 24, false)) : J$._()))
                                return J$.Rt(5159665, J$.M(5159657, J$.R(5159633, 'edCompat', edCompat, false, true), 'Verifier', true)(J$.R(5159641, 'this', this, false, false), J$.R(5159649, 'hashAlgo', hashAlgo, false, false)));
                            if (J$.C(276264, J$.B(592066, '===', J$.G(5159681, J$.R(5159673, 'this', this, false, false), 'type'), J$.T(5159689, 'curve25519', 21, false))))
                                throw J$.F(5159721, J$.I(typeof Error === 'undefined' ? Error = J$.R(5159697, 'Error', undefined, true, true) : Error = J$.R(5159697, 'Error', Error, true, true)), true)(J$.B(592074, '+', J$.T(5159705, 'Curve25519 keys are not suitable for ', 21, false), J$.T(5159713, 'signing or verification', 21, false)));
                            var v, nm, err;
                            try {
                                nm = J$.W(5159745, 'nm', J$.M(5159737, J$.R(5159729, 'hashAlgo', hashAlgo, false, false), 'toUpperCase', false)(), nm, false, false);
                                v = J$.W(5159777, 'v', J$.M(5159769, J$.R(5159753, 'crypto', crypto, false, true), 'createVerify', false)(J$.R(5159761, 'nm', nm, false, false)), v, false, false);
                            } catch (e) {
                                J$.N(5159801, 'e', e, false, false, true);
                                err = J$.W(5159793, 'err', J$.R(5159785, 'e', e, false, false), err, false, false);
                            }
                            if (J$.C(276288, J$.C(276280, J$.B(592082, '===', J$.R(5159809, 'v', v, false, false), J$.T(5159817, undefined, 24, false))) ? J$._() : J$.C(276272, J$.B(592090, 'instanceof', J$.R(5159825, 'err', err, false, false), J$.I(typeof Error === 'undefined' ? Error = J$.R(5159833, 'Error', undefined, true, true) : Error = J$.R(5159833, 'Error', Error, true, true)))) ? J$.M(5159865, J$.G(5159849, J$.R(5159841, 'err', err, false, false), 'message'), 'match', false)(J$.T(5159857, /Unknown message digest/, 14, false)) : J$._())) {
                                nm = J$.W(5159881, 'nm', J$.T(5159873, 'RSA-', 21, false), nm, false, false);
                                nm = J$.W(5159913, 'nm', J$.B(592098, '+', J$.R(5159905, 'nm', nm, false, false), J$.M(5159897, J$.R(5159889, 'hashAlgo', hashAlgo, false, false), 'toUpperCase', false)()), nm, false, false);
                                v = J$.W(5159945, 'v', J$.M(5159937, J$.R(5159921, 'crypto', crypto, false, true), 'createVerify', false)(J$.R(5159929, 'nm', nm, false, false)), v, false, false);
                            }
                            J$.M(5159977, J$.R(5159953, 'assert', assert, false, true), 'ok', false)(J$.R(5159961, 'v', v, false, false), J$.T(5159969, 'failed to create verifier', 21, false));
                            var oldVerify = J$.W(5160017, 'oldVerify', J$.M(5160009, J$.G(5159993, J$.R(5159985, 'v', v, false, false), 'verify'), 'bind', false)(J$.R(5160001, 'v', v, false, false)), oldVerify, false, false);
                            var key = J$.W(5160049, 'key', J$.M(5160041, J$.R(5160025, 'this', this, false, false), 'toBuffer', false)(J$.T(5160033, 'pkcs8', 21, false)), key, false, false);
                            var curve = J$.W(5160073, 'curve', J$.G(5160065, J$.R(5160057, 'this', this, false, false), 'curve'), curve, false, false);
                            var self = J$.W(5160089, 'self', J$.R(5160081, 'this', this, false, false), self, false, false);
                            J$.P(5160633, J$.R(5160097, 'v', v, false, false), 'verify', J$.T(5160625, function (signature, fmt) {
                                jalangiLabel6:
                                    while (true) {
                                        try {
                                            J$.Fe(5160593, arguments.callee, this, arguments);
                                            arguments = J$.N(5160601, 'arguments', arguments, true, false, false);
                                            signature = J$.N(5160609, 'signature', signature, true, false, false);
                                            fmt = J$.N(5160617, 'fmt', fmt, true, false, false);
                                            if (J$.C(276368, J$.M(5160145, J$.R(5160105, 'Signature', Signature, false, true), 'isSignature', false)(J$.R(5160113, 'signature', signature, false, false), J$.T(5160137, [
                                                    J$.T(5160121, 2, 22, false),
                                                    J$.T(5160129, 0, 22, false)
                                                ], 10, false)))) {
                                                if (J$.C(276296, J$.B(592106, '!==', J$.G(5160161, J$.R(5160153, 'signature', signature, false, false), 'type'), J$.G(5160177, J$.R(5160169, 'self', self, false, false), 'type'))))
                                                    return J$.Rt(5160193, J$.T(5160185, false, 23, false));
                                                if (J$.C(276312, J$.C(276304, J$.G(5160209, J$.R(5160201, 'signature', signature, false, false), 'hashAlgorithm')) ? J$.B(592114, '!==', J$.G(5160225, J$.R(5160217, 'signature', signature, false, false), 'hashAlgorithm'), J$.R(5160233, 'hashAlgo', hashAlgo, false, false)) : J$._()))
                                                    return J$.Rt(5160249, J$.T(5160241, false, 23, false));
                                                if (J$.C(276336, J$.C(276328, J$.C(276320, J$.G(5160265, J$.R(5160257, 'signature', signature, false, false), 'curve')) ? J$.B(592122, '===', J$.G(5160281, J$.R(5160273, 'self', self, false, false), 'type'), J$.T(5160289, 'ecdsa', 21, false)) : J$._()) ? J$.B(592130, '!==', J$.G(5160305, J$.R(5160297, 'signature', signature, false, false), 'curve'), J$.R(5160313, 'curve', curve, false, false)) : J$._()))
                                                    return J$.Rt(5160329, J$.T(5160321, false, 23, false));
                                                return J$.Rt(5160385, J$.F(5160377, J$.R(5160337, 'oldVerify', oldVerify, false, false), false)(J$.R(5160345, 'key', key, false, false), J$.M(5160369, J$.R(5160353, 'signature', signature, false, false), 'toBuffer', false)(J$.T(5160361, 'asn1', 21, false))));
                                            } else if (J$.C(276360, J$.C(276344, J$.B(592146, '===', J$.U(592138, 'typeof', J$.R(5160393, 'signature', signature, false, false)), J$.T(5160401, 'string', 21, false))) ? J$._() : J$.M(5160425, J$.I(typeof Buffer === 'undefined' ? Buffer = J$.R(5160409, 'Buffer', undefined, true, true) : Buffer = J$.R(5160409, 'Buffer', Buffer, true, true)), 'isBuffer', false)(J$.R(5160417, 'signature', signature, false, false)))) {
                                                return J$.Rt(5160473, J$.F(5160465, J$.R(5160433, 'oldVerify', oldVerify, false, false), false)(J$.R(5160441, 'key', key, false, false), J$.R(5160449, 'signature', signature, false, false), J$.R(5160457, 'fmt', fmt, false, false)));
                                            } else if (J$.C(276352, J$.M(5160521, J$.R(5160481, 'Signature', Signature, false, true), 'isSignature', false)(J$.R(5160489, 'signature', signature, false, false), J$.T(5160513, [
                                                    J$.T(5160497, 1, 22, false),
                                                    J$.T(5160505, 0, 22, false)
                                                ], 10, false)))) {
                                                throw J$.F(5160553, J$.I(typeof Error === 'undefined' ? Error = J$.R(5160529, 'Error', undefined, true, true) : Error = J$.R(5160529, 'Error', Error, true, true)), true)(J$.B(592154, '+', J$.T(5160537, 'signature was created by too old ', 21, false), J$.T(5160545, 'a version of sshpk and cannot be verified', 21, false)));
                                            } else {
                                                throw J$.F(5160585, J$.I(typeof TypeError === 'undefined' ? TypeError = J$.R(5160561, 'TypeError', undefined, true, true) : TypeError = J$.R(5160561, 'TypeError', TypeError, true, true)), true)(J$.B(592162, '+', J$.T(5160569, 'signature must be a string, ', 21, false), J$.T(5160577, 'Buffer, or Signature object', 21, false)));
                                            }
                                        } catch (J$e) {
                                            J$.Ex(5162345, J$e);
                                        } finally {
                                            if (J$.Fr(5162353))
                                                continue jalangiLabel6;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            return J$.Rt(5160649, J$.R(5160641, 'v', v, false, false));
                        } catch (J$e) {
                            J$.Ex(5162361, J$e);
                        } finally {
                            if (J$.Fr(5162369))
                                continue jalangiLabel7;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(5160873, J$.G(5160761, J$.R(5160753, 'Key', Key, false, true), 'prototype'), 'createDiffieHellman', J$.T(5160865, function () {
                jalangiLabel8:
                    while (true) {
                        try {
                            J$.Fe(5160849, arguments.callee, this, arguments);
                            arguments = J$.N(5160857, 'arguments', arguments, true, false, false);
                            if (J$.C(276376, J$.B(592170, '===', J$.G(5160777, J$.R(5160769, 'this', this, false, false), 'type'), J$.T(5160785, 'rsa', 21, false))))
                                throw J$.F(5160809, J$.I(typeof Error === 'undefined' ? Error = J$.R(5160793, 'Error', undefined, true, true) : Error = J$.R(5160793, 'Error', Error, true, true)), true)(J$.T(5160801, 'RSA keys do not support Diffie-Hellman', 21, false));
                            return J$.Rt(5160841, J$.F(5160833, J$.R(5160817, 'DiffieHellman', DiffieHellman, false, true), true)(J$.R(5160825, 'this', this, false, false)));
                        } catch (J$e) {
                            J$.Ex(5162377, J$e);
                        } finally {
                            if (J$.Fr(5162385))
                                continue jalangiLabel8;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(5160921, J$.G(5160889, J$.R(5160881, 'Key', Key, false, true), 'prototype'), 'createDH', J$.G(5160913, J$.G(5160905, J$.R(5160897, 'Key', Key, false, true), 'prototype'), 'createDiffieHellman'));
            J$.P(5161593, J$.R(5160929, 'Key', Key, false, true), 'parse', J$.T(5161585, function (data, format, options) {
                jalangiLabel9:
                    while (true) {
                        try {
                            J$.Fe(5161537, arguments.callee, this, arguments);
                            arguments = J$.N(5161545, 'arguments', arguments, true, false, false);
                            data = J$.N(5161553, 'data', data, true, false, false);
                            format = J$.N(5161561, 'format', format, true, false, false);
                            options = J$.N(5161569, 'options', options, true, false, false);
                            J$.N(5161577, 'k', k, false, false, false);
                            if (J$.C(276384, J$.B(592186, '!==', J$.U(592178, 'typeof', J$.R(5160937, 'data', data, false, false)), J$.T(5160945, 'string', 21, false))))
                                J$.M(5160977, J$.R(5160953, 'assert', assert, false, true), 'buffer', false)(J$.R(5160961, 'data', data, false, false), J$.T(5160969, 'data', 21, false));
                            if (J$.C(276392, J$.B(592194, '===', J$.R(5160985, 'format', format, false, false), J$.T(5160993, undefined, 24, false))))
                                format = J$.W(5161009, 'format', J$.T(5161001, 'auto', 21, false), format, false, false);
                            J$.M(5161041, J$.R(5161017, 'assert', assert, false, true), 'string', false)(J$.R(5161025, 'format', format, false, false), J$.T(5161033, 'format', 21, false));
                            if (J$.C(276400, J$.B(592210, '===', J$.U(592202, 'typeof', J$.R(5161049, 'options', options, false, false)), J$.T(5161057, 'string', 21, false))))
                                options = J$.W(5161081, 'options', J$.T(5161073, { filename: J$.R(5161065, 'options', options, false, false) }, 11, false), options, false, false);
                            J$.M(5161113, J$.R(5161089, 'assert', assert, false, true), 'optionalObject', false)(J$.R(5161097, 'options', options, false, false), J$.T(5161105, 'options', 21, false));
                            if (J$.C(276408, J$.B(592218, '===', J$.R(5161121, 'options', options, false, false), J$.T(5161129, undefined, 24, false))))
                                options = J$.W(5161145, 'options', J$.T(5161137, {}, 11, false), options, false, false);
                            J$.M(5161185, J$.R(5161153, 'assert', assert, false, true), 'optionalString', false)(J$.G(5161169, J$.R(5161161, 'options', options, false, false), 'filename'), J$.T(5161177, 'options.filename', 21, false));
                            if (J$.C(276416, J$.B(592226, '===', J$.G(5161201, J$.R(5161193, 'options', options, false, false), 'filename'), J$.T(5161209, undefined, 24, false))))
                                J$.P(5161233, J$.R(5161217, 'options', options, false, false), 'filename', J$.T(5161225, '(unnamed)', 21, false));
                            J$.M(5161281, J$.R(5161241, 'assert', assert, false, true), 'object', false)(J$.G(5161265, J$.R(5161249, 'formats', formats, false, true), J$.R(5161257, 'format', format, false, false)), J$.T(5161273, 'formats[format]', 21, false));
                            try {
                                var k = J$.W(5161337, 'k', J$.M(5161329, J$.G(5161305, J$.R(5161289, 'formats', formats, false, true), J$.R(5161297, 'format', format, false, false)), 'read', false)(J$.R(5161313, 'data', data, false, false), J$.R(5161321, 'options', options, false, false)), k, false, false);
                                if (J$.C(276424, J$.B(592234, 'instanceof', J$.R(5161345, 'k', k, false, false), J$.R(5161353, 'PrivateKey', PrivateKey, false, true))))
                                    k = J$.W(5161377, 'k', J$.M(5161369, J$.R(5161361, 'k', k, false, false), 'toPublic', false)(), k, false, false);
                                if (J$.C(276432, J$.U(592242, '!', J$.G(5161393, J$.R(5161385, 'k', k, false, false), 'comment'))))
                                    J$.P(5161425, J$.R(5161401, 'k', k, false, false), 'comment', J$.G(5161417, J$.R(5161409, 'options', options, false, false), 'filename'));
                                return J$.Rt(5161441, J$.R(5161433, 'k', k, false, false));
                            } catch (e) {
                                J$.N(5161529, 'e', e, false, false, true);
                                if (J$.C(276440, J$.B(592250, '===', J$.G(5161457, J$.R(5161449, 'e', e, false, false), 'name'), J$.T(5161465, 'KeyEncryptedError', 21, false))))
                                    throw J$.R(5161473, 'e', e, false, false);
                                throw J$.F(5161521, J$.R(5161481, 'KeyParseError', KeyParseError, false, true), true)(J$.G(5161497, J$.R(5161489, 'options', options, false, false), 'filename'), J$.R(5161505, 'format', format, false, false), J$.R(5161513, 'e', e, false, false));
                            }
                        } catch (J$e) {
                            J$.Ex(5162393, J$e);
                        } finally {
                            if (J$.Fr(5162401))
                                continue jalangiLabel9;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(5161697, J$.R(5161601, 'Key', Key, false, true), 'isKey', J$.T(5161689, function (obj, ver) {
                jalangiLabel10:
                    while (true) {
                        try {
                            J$.Fe(5161657, arguments.callee, this, arguments);
                            arguments = J$.N(5161665, 'arguments', arguments, true, false, false);
                            obj = J$.N(5161673, 'obj', obj, true, false, false);
                            ver = J$.N(5161681, 'ver', ver, true, false, false);
                            return J$.Rt(5161649, J$.M(5161641, J$.R(5161609, 'utils', utils, false, true), 'isCompatible', false)(J$.R(5161617, 'obj', obj, false, false), J$.R(5161625, 'Key', Key, false, true), J$.R(5161633, 'ver', ver, false, false)));
                        } catch (J$e) {
                            J$.Ex(5162409, J$e);
                        } finally {
                            if (J$.Fr(5162417))
                                continue jalangiLabel10;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(5161745, J$.G(5161713, J$.R(5161705, 'Key', Key, false, true), 'prototype'), '_sshpkApiVersion', J$.T(5161737, [
                J$.T(5161721, 1, 22, false),
                J$.T(5161729, 7, 22, false)
            ], 10, false));
            J$.P(5162113, J$.R(5161753, 'Key', Key, false, true), '_oldVersionDetect', J$.T(5162105, function (obj) {
                jalangiLabel11:
                    while (true) {
                        try {
                            J$.Fe(5162081, arguments.callee, this, arguments);
                            arguments = J$.N(5162089, 'arguments', arguments, true, false, false);
                            obj = J$.N(5162097, 'obj', obj, true, false, false);
                            J$.M(5161785, J$.R(5161761, 'assert', assert, false, true), 'func', false)(J$.G(5161777, J$.R(5161769, 'obj', obj, false, false), 'toBuffer'));
                            J$.M(5161817, J$.R(5161793, 'assert', assert, false, true), 'func', false)(J$.G(5161809, J$.R(5161801, 'obj', obj, false, false), 'fingerprint'));
                            if (J$.C(276448, J$.G(5161833, J$.R(5161825, 'obj', obj, false, false), 'createDH')))
                                return J$.Rt(5161865, J$.T(5161857, [
                                    J$.T(5161841, 1, 22, false),
                                    J$.T(5161849, 4, 22, false)
                                ], 10, false));
                            if (J$.C(276456, J$.G(5161881, J$.R(5161873, 'obj', obj, false, false), 'defaultHashAlgorithm')))
                                return J$.Rt(5161913, J$.T(5161905, [
                                    J$.T(5161889, 1, 22, false),
                                    J$.T(5161897, 3, 22, false)
                                ], 10, false));
                            if (J$.C(276464, J$.G(5161945, J$.G(5161929, J$.R(5161921, 'obj', obj, false, false), 'formats'), J$.T(5161937, 'auto', 21, false))))
                                return J$.Rt(5161977, J$.T(5161969, [
                                    J$.T(5161953, 1, 22, false),
                                    J$.T(5161961, 2, 22, false)
                                ], 10, false));
                            if (J$.C(276472, J$.G(5162009, J$.G(5161993, J$.R(5161985, 'obj', obj, false, false), 'formats'), J$.T(5162001, 'pkcs1', 21, false))))
                                return J$.Rt(5162041, J$.T(5162033, [
                                    J$.T(5162017, 1, 22, false),
                                    J$.T(5162025, 1, 22, false)
                                ], 10, false));
                            return J$.Rt(5162073, J$.T(5162065, [
                                J$.T(5162049, 1, 22, false),
                                J$.T(5162057, 0, 22, false)
                            ], 10, false));
                        } catch (J$e) {
                            J$.Ex(5162425, J$e);
                        } finally {
                            if (J$.Fr(5162433))
                                continue jalangiLabel11;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
        } catch (J$e) {
            J$.Ex(5162441, J$e);
        } finally {
            if (J$.Sr(5162449))
                continue jalangiLabel12;
            else
                break jalangiLabel12;
        }
    }
// JALANGI DO NOT INSTRUMENT

