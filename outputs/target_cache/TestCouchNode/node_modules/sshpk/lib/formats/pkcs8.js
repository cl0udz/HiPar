J$.noInstrEval = false;
jalangiLabel26:
    while (true) {
        try {
            J$.Se(5110105, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestCouchNode/node_modules/sshpk/lib/formats/pkcs8.js');
            function read(buf, options) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(5097417, arguments.callee, this, arguments);
                            arguments = J$.N(5097425, 'arguments', arguments, true, false, false);
                            buf = J$.N(5097433, 'buf', buf, true, false, false);
                            options = J$.N(5097441, 'options', options, true, false, false);
                            return J$.Rt(5097409, J$.M(5097401, J$.R(5097369, 'pem', pem, false, true), 'read', false)(J$.R(5097377, 'buf', buf, false, false), J$.R(5097385, 'options', options, false, false), J$.T(5097393, 'pkcs8', 21, false)));
                        } catch (J$e) {
                            J$.Ex(5110593, J$e);
                        } finally {
                            if (J$.Fr(5110601))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function write(key, options) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(5097497, arguments.callee, this, arguments);
                            arguments = J$.N(5097505, 'arguments', arguments, true, false, false);
                            key = J$.N(5097513, 'key', key, true, false, false);
                            options = J$.N(5097521, 'options', options, true, false, false);
                            return J$.Rt(5097489, J$.M(5097481, J$.R(5097449, 'pem', pem, false, true), 'write', false)(J$.R(5097457, 'key', key, false, false), J$.R(5097465, 'options', options, false, false), J$.T(5097473, 'pkcs8', 21, false)));
                        } catch (J$e) {
                            J$.Ex(5110609, J$e);
                        } finally {
                            if (J$.Fr(5110617))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function readMPInt(der, nm) {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(5097673, arguments.callee, this, arguments);
                            arguments = J$.N(5097681, 'arguments', arguments, true, false, false);
                            der = J$.N(5097689, 'der', der, true, false, false);
                            nm = J$.N(5097697, 'nm', nm, true, false, false);
                            J$.M(5097593, J$.R(5097529, 'assert', assert, false, true), 'strictEqual', false)(J$.M(5097545, J$.R(5097537, 'der', der, false, false), 'peek', false)(), J$.G(5097569, J$.G(5097561, J$.R(5097553, 'asn1', asn1, false, true), 'Ber'), 'Integer'), J$.B(588042, '+', J$.R(5097577, 'nm', nm, false, false), J$.T(5097585, ' is not an Integer', 21, false)));
                            return J$.Rt(5097665, J$.M(5097657, J$.R(5097601, 'utils', utils, false, true), 'mpNormalize', false)(J$.M(5097649, J$.R(5097609, 'der', der, false, false), 'readString', false)(J$.G(5097633, J$.G(5097625, J$.R(5097617, 'asn1', asn1, false, true), 'Ber'), 'Integer'), J$.T(5097641, true, 23, false))));
                        } catch (J$e) {
                            J$.Ex(5110625, J$e);
                        } finally {
                            if (J$.Fr(5110633))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function readPkcs8(alg, type, der) {
                jalangiLabel3:
                    while (true) {
                        try {
                            J$.Fe(5098417, arguments.callee, this, arguments);
                            arguments = J$.N(5098425, 'arguments', arguments, true, false, false);
                            alg = J$.N(5098433, 'alg', alg, true, false, false);
                            type = J$.N(5098441, 'type', type, true, false, false);
                            der = J$.N(5098449, 'der', der, true, false, false);
                            J$.N(5098457, 'next', next, false, false, false);
                            J$.N(5098465, 'oid', oid, false, false, false);
                            if (J$.C(273464, J$.B(588050, '===', J$.M(5097713, J$.R(5097705, 'der', der, false, false), 'peek', false)(), J$.G(5097737, J$.G(5097729, J$.R(5097721, 'asn1', asn1, false, true), 'Ber'), 'Integer')))) {
                                J$.M(5097777, J$.R(5097745, 'assert', assert, false, true), 'strictEqual', false)(J$.R(5097753, 'type', type, false, false), J$.T(5097761, 'private', 21, false), J$.T(5097769, 'unexpected Integer at start of public key', 21, false));
                                J$.M(5097825, J$.R(5097785, 'der', der, false, false), 'readString', false)(J$.G(5097809, J$.G(5097801, J$.R(5097793, 'asn1', asn1, false, true), 'Ber'), 'Integer'), J$.T(5097817, true, 23, false));
                            }
                            J$.M(5097841, J$.R(5097833, 'der', der, false, false), 'readSequence', false)();
                            var next = J$.W(5097881, 'next', J$.B(588058, '+', J$.G(5097857, J$.R(5097849, 'der', der, false, false), 'offset'), J$.G(5097873, J$.R(5097865, 'der', der, false, false), 'length')), next, false, false);
                            var oid = J$.W(5097905, 'oid', J$.M(5097897, J$.R(5097889, 'der', der, false, false), 'readOID', false)(), oid, false, false);
                            switch (J$.C1(273512, J$.R(5097913, 'oid', oid, false, false))) {
                            case J$.C2(273520, J$.T(5098025, '1.2.840.113549.1.1.1', 21, false)):
                                J$.P(5097937, J$.R(5097921, 'der', der, false, false), '_offset', J$.R(5097929, 'next', next, false, false));
                                if (J$.C(273472, J$.B(588066, '===', J$.R(5097945, 'type', type, false, false), J$.T(5097953, 'public', 21, false))))
                                    return J$.Rt(5097985, J$.F(5097977, J$.R(5097961, 'readPkcs8RSAPublic', readPkcs8RSAPublic, false, true), false)(J$.R(5097969, 'der', der, false, false)));
                                else
                                    return J$.Rt(5098017, J$.F(5098009, J$.R(5097993, 'readPkcs8RSAPrivate', readPkcs8RSAPrivate, false, true), false)(J$.R(5098001, 'der', der, false, false)));
                            case J$.C2(273528, J$.T(5098113, '1.2.840.10040.4.1', 21, false)):
                                if (J$.C(273480, J$.B(588074, '===', J$.R(5098033, 'type', type, false, false), J$.T(5098041, 'public', 21, false))))
                                    return J$.Rt(5098073, J$.F(5098065, J$.R(5098049, 'readPkcs8DSAPublic', readPkcs8DSAPublic, false, true), false)(J$.R(5098057, 'der', der, false, false)));
                                else
                                    return J$.Rt(5098105, J$.F(5098097, J$.R(5098081, 'readPkcs8DSAPrivate', readPkcs8DSAPrivate, false, true), false)(J$.R(5098089, 'der', der, false, false)));
                            case J$.C2(273536, J$.T(5098201, '1.2.840.10045.2.1', 21, false)):
                                if (J$.C(273488, J$.B(588082, '===', J$.R(5098121, 'type', type, false, false), J$.T(5098129, 'public', 21, false))))
                                    return J$.Rt(5098161, J$.F(5098153, J$.R(5098137, 'readPkcs8ECDSAPublic', readPkcs8ECDSAPublic, false, true), false)(J$.R(5098145, 'der', der, false, false)));
                                else
                                    return J$.Rt(5098193, J$.F(5098185, J$.R(5098169, 'readPkcs8ECDSAPrivate', readPkcs8ECDSAPrivate, false, true), false)(J$.R(5098177, 'der', der, false, false)));
                            case J$.C2(273544, J$.T(5098289, '1.3.101.112', 21, false)):
                                if (J$.C(273496, J$.B(588090, '===', J$.R(5098209, 'type', type, false, false), J$.T(5098217, 'public', 21, false)))) {
                                    return J$.Rt(5098249, J$.F(5098241, J$.R(5098225, 'readPkcs8EdDSAPublic', readPkcs8EdDSAPublic, false, true), false)(J$.R(5098233, 'der', der, false, false)));
                                } else {
                                    return J$.Rt(5098281, J$.F(5098273, J$.R(5098257, 'readPkcs8EdDSAPrivate', readPkcs8EdDSAPrivate, false, true), false)(J$.R(5098265, 'der', der, false, false)));
                                }
                            case J$.C2(273552, J$.T(5098377, '1.3.101.110', 21, false)):
                                if (J$.C(273504, J$.B(588098, '===', J$.R(5098297, 'type', type, false, false), J$.T(5098305, 'public', 21, false)))) {
                                    return J$.Rt(5098337, J$.F(5098329, J$.R(5098313, 'readPkcs8X25519Public', readPkcs8X25519Public, false, true), false)(J$.R(5098321, 'der', der, false, false)));
                                } else {
                                    return J$.Rt(5098369, J$.F(5098361, J$.R(5098345, 'readPkcs8X25519Private', readPkcs8X25519Private, false, true), false)(J$.R(5098353, 'der', der, false, false)));
                                }
                            default:
                                throw J$.F(5098409, J$.I(typeof Error === 'undefined' ? Error = J$.R(5098385, 'Error', undefined, true, true) : Error = J$.R(5098385, 'Error', Error, true, true)), true)(J$.B(588106, '+', J$.T(5098393, 'Unknown key type OID ', 21, false), J$.R(5098401, 'oid', oid, false, false)));
                            }
                        } catch (J$e) {
                            J$.Ex(5110641, J$e);
                        } finally {
                            if (J$.Fr(5110649))
                                continue jalangiLabel3;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function readPkcs8RSAPublic(der) {
                jalangiLabel4:
                    while (true) {
                        try {
                            J$.Fe(5098753, arguments.callee, this, arguments);
                            arguments = J$.N(5098761, 'arguments', arguments, true, false, false);
                            der = J$.N(5098769, 'der', der, true, false, false);
                            J$.N(5098777, 'n', n, false, false, false);
                            J$.N(5098785, 'e', e, false, false, false);
                            J$.N(5098793, 'key', key, false, false, false);
                            J$.M(5098505, J$.R(5098473, 'der', der, false, false), 'readSequence', false)(J$.G(5098497, J$.G(5098489, J$.R(5098481, 'asn1', asn1, false, true), 'Ber'), 'BitString'));
                            J$.M(5098521, J$.R(5098513, 'der', der, false, false), 'readByte', false)();
                            J$.M(5098537, J$.R(5098529, 'der', der, false, false), 'readSequence', false)();
                            var n = J$.W(5098577, 'n', J$.F(5098569, J$.R(5098545, 'readMPInt', readMPInt, false, true), false)(J$.R(5098553, 'der', der, false, false), J$.T(5098561, 'modulus', 21, false)), n, false, false);
                            var e = J$.W(5098617, 'e', J$.F(5098609, J$.R(5098585, 'readMPInt', readMPInt, false, true), false)(J$.R(5098593, 'der', der, false, false), J$.T(5098601, 'exponent', 21, false)), e, false, false);
                            var key = J$.W(5098713, 'key', J$.T(5098705, {
                                type: J$.T(5098625, 'rsa', 21, false),
                                source: J$.G(5098641, J$.R(5098633, 'der', der, false, false), 'originalInput'),
                                parts: J$.T(5098697, [
                                    J$.T(5098665, {
                                        name: J$.T(5098649, 'e', 21, false),
                                        data: J$.R(5098657, 'e', e, false, false)
                                    }, 11, false),
                                    J$.T(5098689, {
                                        name: J$.T(5098673, 'n', 21, false),
                                        data: J$.R(5098681, 'n', n, false, false)
                                    }, 11, false)
                                ], 10, false)
                            }, 11, false), key, false, false);
                            return J$.Rt(5098745, J$.F(5098737, J$.R(5098721, 'Key', Key, false, true), true)(J$.R(5098729, 'key', key, false, false)));
                        } catch (J$e) {
                            J$.Ex(5110657, J$e);
                        } finally {
                            if (J$.Fr(5110665))
                                continue jalangiLabel4;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function readPkcs8RSAPrivate(der) {
                jalangiLabel5:
                    while (true) {
                        try {
                            J$.Fe(5099529, arguments.callee, this, arguments);
                            arguments = J$.N(5099537, 'arguments', arguments, true, false, false);
                            der = J$.N(5099545, 'der', der, true, false, false);
                            J$.N(5099553, 'ver', ver, false, false, false);
                            J$.N(5099561, 'n', n, false, false, false);
                            J$.N(5099569, 'e', e, false, false, false);
                            J$.N(5099577, 'd', d, false, false, false);
                            J$.N(5099585, 'p', p, false, false, false);
                            J$.N(5099593, 'q', q, false, false, false);
                            J$.N(5099601, 'dmodp', dmodp, false, false, false);
                            J$.N(5099609, 'dmodq', dmodq, false, false, false);
                            J$.N(5099617, 'iqmp', iqmp, false, false, false);
                            J$.N(5099625, 'key', key, false, false, false);
                            J$.M(5098833, J$.R(5098801, 'der', der, false, false), 'readSequence', false)(J$.G(5098825, J$.G(5098817, J$.R(5098809, 'asn1', asn1, false, true), 'Ber'), 'OctetString'));
                            J$.M(5098849, J$.R(5098841, 'der', der, false, false), 'readSequence', false)();
                            var ver = J$.W(5098889, 'ver', J$.F(5098881, J$.R(5098857, 'readMPInt', readMPInt, false, true), false)(J$.R(5098865, 'der', der, false, false), J$.T(5098873, 'version', 21, false)), ver, false, false);
                            J$.M(5098945, J$.R(5098897, 'assert', assert, false, true), 'equal', false)(J$.G(5098921, J$.R(5098905, 'ver', ver, false, false), J$.T(5098913, 0, 22, false)), J$.T(5098929, 0, 22, false), J$.T(5098937, 'unknown RSA private key version', 21, false));
                            var n = J$.W(5098985, 'n', J$.F(5098977, J$.R(5098953, 'readMPInt', readMPInt, false, true), false)(J$.R(5098961, 'der', der, false, false), J$.T(5098969, 'modulus', 21, false)), n, false, false);
                            var e = J$.W(5099025, 'e', J$.F(5099017, J$.R(5098993, 'readMPInt', readMPInt, false, true), false)(J$.R(5099001, 'der', der, false, false), J$.T(5099009, 'public exponent', 21, false)), e, false, false);
                            var d = J$.W(5099065, 'd', J$.F(5099057, J$.R(5099033, 'readMPInt', readMPInt, false, true), false)(J$.R(5099041, 'der', der, false, false), J$.T(5099049, 'private exponent', 21, false)), d, false, false);
                            var p = J$.W(5099105, 'p', J$.F(5099097, J$.R(5099073, 'readMPInt', readMPInt, false, true), false)(J$.R(5099081, 'der', der, false, false), J$.T(5099089, 'prime1', 21, false)), p, false, false);
                            var q = J$.W(5099145, 'q', J$.F(5099137, J$.R(5099113, 'readMPInt', readMPInt, false, true), false)(J$.R(5099121, 'der', der, false, false), J$.T(5099129, 'prime2', 21, false)), q, false, false);
                            var dmodp = J$.W(5099185, 'dmodp', J$.F(5099177, J$.R(5099153, 'readMPInt', readMPInt, false, true), false)(J$.R(5099161, 'der', der, false, false), J$.T(5099169, 'exponent1', 21, false)), dmodp, false, false);
                            var dmodq = J$.W(5099225, 'dmodq', J$.F(5099217, J$.R(5099193, 'readMPInt', readMPInt, false, true), false)(J$.R(5099201, 'der', der, false, false), J$.T(5099209, 'exponent2', 21, false)), dmodq, false, false);
                            var iqmp = J$.W(5099265, 'iqmp', J$.F(5099257, J$.R(5099233, 'readMPInt', readMPInt, false, true), false)(J$.R(5099241, 'der', der, false, false), J$.T(5099249, 'iqmp', 21, false)), iqmp, false, false);
                            var key = J$.W(5099489, 'key', J$.T(5099481, {
                                type: J$.T(5099273, 'rsa', 21, false),
                                parts: J$.T(5099473, [
                                    J$.T(5099297, {
                                        name: J$.T(5099281, 'n', 21, false),
                                        data: J$.R(5099289, 'n', n, false, false)
                                    }, 11, false),
                                    J$.T(5099321, {
                                        name: J$.T(5099305, 'e', 21, false),
                                        data: J$.R(5099313, 'e', e, false, false)
                                    }, 11, false),
                                    J$.T(5099345, {
                                        name: J$.T(5099329, 'd', 21, false),
                                        data: J$.R(5099337, 'd', d, false, false)
                                    }, 11, false),
                                    J$.T(5099369, {
                                        name: J$.T(5099353, 'iqmp', 21, false),
                                        data: J$.R(5099361, 'iqmp', iqmp, false, false)
                                    }, 11, false),
                                    J$.T(5099393, {
                                        name: J$.T(5099377, 'p', 21, false),
                                        data: J$.R(5099385, 'p', p, false, false)
                                    }, 11, false),
                                    J$.T(5099417, {
                                        name: J$.T(5099401, 'q', 21, false),
                                        data: J$.R(5099409, 'q', q, false, false)
                                    }, 11, false),
                                    J$.T(5099441, {
                                        name: J$.T(5099425, 'dmodp', 21, false),
                                        data: J$.R(5099433, 'dmodp', dmodp, false, false)
                                    }, 11, false),
                                    J$.T(5099465, {
                                        name: J$.T(5099449, 'dmodq', 21, false),
                                        data: J$.R(5099457, 'dmodq', dmodq, false, false)
                                    }, 11, false)
                                ], 10, false)
                            }, 11, false), key, false, false);
                            return J$.Rt(5099521, J$.F(5099513, J$.R(5099497, 'PrivateKey', PrivateKey, false, true), true)(J$.R(5099505, 'key', key, false, false)));
                        } catch (J$e) {
                            J$.Ex(5110673, J$e);
                        } finally {
                            if (J$.Fr(5110681))
                                continue jalangiLabel5;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function readPkcs8DSAPublic(der) {
                jalangiLabel6:
                    while (true) {
                        try {
                            J$.Fe(5100025, arguments.callee, this, arguments);
                            arguments = J$.N(5100033, 'arguments', arguments, true, false, false);
                            der = J$.N(5100041, 'der', der, true, false, false);
                            J$.N(5100049, 'p', p, false, false, false);
                            J$.N(5100057, 'q', q, false, false, false);
                            J$.N(5100065, 'g', g, false, false, false);
                            J$.N(5100073, 'y', y, false, false, false);
                            J$.N(5100081, 'key', key, false, false, false);
                            J$.M(5099641, J$.R(5099633, 'der', der, false, false), 'readSequence', false)();
                            var p = J$.W(5099681, 'p', J$.F(5099673, J$.R(5099649, 'readMPInt', readMPInt, false, true), false)(J$.R(5099657, 'der', der, false, false), J$.T(5099665, 'p', 21, false)), p, false, false);
                            var q = J$.W(5099721, 'q', J$.F(5099713, J$.R(5099689, 'readMPInt', readMPInt, false, true), false)(J$.R(5099697, 'der', der, false, false), J$.T(5099705, 'q', 21, false)), q, false, false);
                            var g = J$.W(5099761, 'g', J$.F(5099753, J$.R(5099729, 'readMPInt', readMPInt, false, true), false)(J$.R(5099737, 'der', der, false, false), J$.T(5099745, 'g', 21, false)), g, false, false);
                            J$.M(5099801, J$.R(5099769, 'der', der, false, false), 'readSequence', false)(J$.G(5099793, J$.G(5099785, J$.R(5099777, 'asn1', asn1, false, true), 'Ber'), 'BitString'));
                            J$.M(5099817, J$.R(5099809, 'der', der, false, false), 'readByte', false)();
                            var y = J$.W(5099857, 'y', J$.F(5099849, J$.R(5099825, 'readMPInt', readMPInt, false, true), false)(J$.R(5099833, 'der', der, false, false), J$.T(5099841, 'y', 21, false)), y, false, false);
                            var key = J$.W(5099985, 'key', J$.T(5099977, {
                                type: J$.T(5099865, 'dsa', 21, false),
                                parts: J$.T(5099969, [
                                    J$.T(5099889, {
                                        name: J$.T(5099873, 'p', 21, false),
                                        data: J$.R(5099881, 'p', p, false, false)
                                    }, 11, false),
                                    J$.T(5099913, {
                                        name: J$.T(5099897, 'q', 21, false),
                                        data: J$.R(5099905, 'q', q, false, false)
                                    }, 11, false),
                                    J$.T(5099937, {
                                        name: J$.T(5099921, 'g', 21, false),
                                        data: J$.R(5099929, 'g', g, false, false)
                                    }, 11, false),
                                    J$.T(5099961, {
                                        name: J$.T(5099945, 'y', 21, false),
                                        data: J$.R(5099953, 'y', y, false, false)
                                    }, 11, false)
                                ], 10, false)
                            }, 11, false), key, false, false);
                            return J$.Rt(5100017, J$.F(5100009, J$.R(5099993, 'Key', Key, false, true), true)(J$.R(5100001, 'key', key, false, false)));
                        } catch (J$e) {
                            J$.Ex(5110689, J$e);
                        } finally {
                            if (J$.Fr(5110697))
                                continue jalangiLabel6;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function readPkcs8DSAPrivate(der) {
                jalangiLabel7:
                    while (true) {
                        try {
                            J$.Fe(5100537, arguments.callee, this, arguments);
                            arguments = J$.N(5100545, 'arguments', arguments, true, false, false);
                            der = J$.N(5100553, 'der', der, true, false, false);
                            J$.N(5100561, 'p', p, false, false, false);
                            J$.N(5100569, 'q', q, false, false, false);
                            J$.N(5100577, 'g', g, false, false, false);
                            J$.N(5100585, 'x', x, false, false, false);
                            J$.N(5100593, 'y', y, false, false, false);
                            J$.N(5100601, 'key', key, false, false, false);
                            J$.M(5100097, J$.R(5100089, 'der', der, false, false), 'readSequence', false)();
                            var p = J$.W(5100137, 'p', J$.F(5100129, J$.R(5100105, 'readMPInt', readMPInt, false, true), false)(J$.R(5100113, 'der', der, false, false), J$.T(5100121, 'p', 21, false)), p, false, false);
                            var q = J$.W(5100177, 'q', J$.F(5100169, J$.R(5100145, 'readMPInt', readMPInt, false, true), false)(J$.R(5100153, 'der', der, false, false), J$.T(5100161, 'q', 21, false)), q, false, false);
                            var g = J$.W(5100217, 'g', J$.F(5100209, J$.R(5100185, 'readMPInt', readMPInt, false, true), false)(J$.R(5100193, 'der', der, false, false), J$.T(5100201, 'g', 21, false)), g, false, false);
                            J$.M(5100257, J$.R(5100225, 'der', der, false, false), 'readSequence', false)(J$.G(5100249, J$.G(5100241, J$.R(5100233, 'asn1', asn1, false, true), 'Ber'), 'OctetString'));
                            var x = J$.W(5100297, 'x', J$.F(5100289, J$.R(5100265, 'readMPInt', readMPInt, false, true), false)(J$.R(5100273, 'der', der, false, false), J$.T(5100281, 'x', 21, false)), x, false, false);
                            var y = J$.W(5100345, 'y', J$.M(5100337, J$.R(5100305, 'utils', utils, false, true), 'calculateDSAPublic', false)(J$.R(5100313, 'g', g, false, false), J$.R(5100321, 'p', p, false, false), J$.R(5100329, 'x', x, false, false)), y, false, false);
                            var key = J$.W(5100497, 'key', J$.T(5100489, {
                                type: J$.T(5100353, 'dsa', 21, false),
                                parts: J$.T(5100481, [
                                    J$.T(5100377, {
                                        name: J$.T(5100361, 'p', 21, false),
                                        data: J$.R(5100369, 'p', p, false, false)
                                    }, 11, false),
                                    J$.T(5100401, {
                                        name: J$.T(5100385, 'q', 21, false),
                                        data: J$.R(5100393, 'q', q, false, false)
                                    }, 11, false),
                                    J$.T(5100425, {
                                        name: J$.T(5100409, 'g', 21, false),
                                        data: J$.R(5100417, 'g', g, false, false)
                                    }, 11, false),
                                    J$.T(5100449, {
                                        name: J$.T(5100433, 'y', 21, false),
                                        data: J$.R(5100441, 'y', y, false, false)
                                    }, 11, false),
                                    J$.T(5100473, {
                                        name: J$.T(5100457, 'x', 21, false),
                                        data: J$.R(5100465, 'x', x, false, false)
                                    }, 11, false)
                                ], 10, false)
                            }, 11, false), key, false, false);
                            return J$.Rt(5100529, J$.F(5100521, J$.R(5100505, 'PrivateKey', PrivateKey, false, true), true)(J$.R(5100513, 'key', key, false, false)));
                        } catch (J$e) {
                            J$.Ex(5110705, J$e);
                        } finally {
                            if (J$.Fr(5110713))
                                continue jalangiLabel7;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function readECDSACurve(der) {
                jalangiLabel8:
                    while (true) {
                        try {
                            J$.Fe(5102617, arguments.callee, this, arguments);
                            arguments = J$.N(5102625, 'arguments', arguments, true, false, false);
                            der = J$.N(5102633, 'der', der, true, false, false);
                            J$.N(5102641, 'curveName', curveName, false, false, false);
                            J$.N(5102649, 'curveNames', curveNames, false, false, false);
                            J$.N(5102657, 'j', j, false, false, false);
                            J$.N(5102665, 'c', c, false, false, false);
                            J$.N(5102673, 'cd', cd, false, false, false);
                            J$.N(5102681, 'oid', oid, false, false, false);
                            J$.N(5102689, 'version', version, false, false, false);
                            J$.N(5102697, 'curve', curve, false, false, false);
                            J$.N(5102705, 'fieldTypeOid', fieldTypeOid, false, false, false);
                            J$.N(5102713, 'p', p, false, false, false);
                            J$.N(5102721, 'ks', ks, false, false, false);
                            J$.N(5102729, 'equal', equal, false, false, false);
                            J$.N(5102737, 'i', i, false, false, false);
                            J$.N(5102745, 'k', k, false, false, false);
                            var curveName, curveNames;
                            var j, c, cd;
                            if (J$.C(273664, J$.B(588114, '===', J$.M(5100617, J$.R(5100609, 'der', der, false, false), 'peek', false)(), J$.G(5100641, J$.G(5100633, J$.R(5100625, 'asn1', asn1, false, true), 'Ber'), 'OID')))) {
                                var oid = J$.W(5100665, 'oid', J$.M(5100657, J$.R(5100649, 'der', der, false, false), 'readOID', false)(), oid, false, false);
                                curveNames = J$.W(5100705, 'curveNames', J$.M(5100697, J$.I(typeof Object === 'undefined' ? Object = J$.R(5100673, 'Object', undefined, true, true) : Object = J$.R(5100673, 'Object', Object, true, true)), 'keys', false)(J$.G(5100689, J$.R(5100681, 'algs', algs, false, true), 'curves')), curveNames, false, false);
                                for (j = J$.W(5100721, 'j', J$.T(5100713, 0, 22, false), j, false, false); J$.C(273568, J$.B(588122, '<', J$.R(5100729, 'j', j, false, false), J$.G(5100745, J$.R(5100737, 'curveNames', curveNames, false, false), 'length'))); j = J$.W(5100761, 'j', J$.B(588138, '+', J$.U(588130, '+', J$.R(5100753, 'j', j, false, false)), 1), j, false, false)) {
                                    c = J$.W(5100793, 'c', J$.G(5100785, J$.R(5100769, 'curveNames', curveNames, false, false), J$.R(5100777, 'j', j, false, false)), c, false, false);
                                    cd = J$.W(5100833, 'cd', J$.G(5100825, J$.G(5100809, J$.R(5100801, 'algs', algs, false, true), 'curves'), J$.R(5100817, 'c', c, false, false)), cd, false, false);
                                    if (J$.C(273560, J$.B(588146, '===', J$.G(5100849, J$.R(5100841, 'cd', cd, false, false), 'pkcs8oid'), J$.R(5100857, 'oid', oid, false, false)))) {
                                        curveName = J$.W(5100873, 'curveName', J$.R(5100865, 'c', c, false, false), curveName, false, false);
                                        break;
                                    }
                                }
                            } else {
                                J$.M(5100889, J$.R(5100881, 'der', der, false, false), 'readSequence', false)();
                                var version = J$.W(5100945, 'version', J$.M(5100937, J$.R(5100897, 'der', der, false, false), 'readString', false)(J$.G(5100921, J$.G(5100913, J$.R(5100905, 'asn1', asn1, false, true), 'Ber'), 'Integer'), J$.T(5100929, true, 23, false)), version, false, false);
                                J$.M(5101001, J$.R(5100953, 'assert', assert, false, true), 'strictEqual', false)(J$.G(5100977, J$.R(5100961, 'version', version, false, false), J$.T(5100969, 0, 22, false)), J$.T(5100985, 1, 22, false), J$.T(5100993, 'ECDSA key not version 1', 21, false));
                                var curve = J$.W(5101017, 'curve', J$.T(5101009, {}, 11, false), curve, false, false);
                                J$.M(5101033, J$.R(5101025, 'der', der, false, false), 'readSequence', false)();
                                var fieldTypeOid = J$.W(5101057, 'fieldTypeOid', J$.M(5101049, J$.R(5101041, 'der', der, false, false), 'readOID', false)(), fieldTypeOid, false, false);
                                J$.M(5101097, J$.R(5101065, 'assert', assert, false, true), 'strictEqual', false)(J$.R(5101073, 'fieldTypeOid', fieldTypeOid, false, false), J$.T(5101081, '1.2.840.10045.1.1', 21, false), J$.T(5101089, 'ECDSA key is not from a prime-field', 21, false));
                                var p = J$.W(5101185, 'p', J$.P(5101177, J$.R(5101105, 'curve', curve, false, false), 'p', J$.M(5101169, J$.R(5101113, 'utils', utils, false, true), 'mpNormalize', false)(J$.M(5101161, J$.R(5101121, 'der', der, false, false), 'readString', false)(J$.G(5101145, J$.G(5101137, J$.R(5101129, 'asn1', asn1, false, true), 'Ber'), 'Integer'), J$.T(5101153, true, 23, false)))), p, false, false);
                                J$.P(5101249, J$.R(5101193, 'curve', curve, false, false), 'size', J$.B(588162, '-', J$.B(588154, '*', J$.G(5101209, J$.R(5101201, 'p', p, false, false), 'length'), J$.T(5101217, 8, 22, false)), J$.M(5101241, J$.R(5101225, 'utils', utils, false, true), 'countZeros', false)(J$.R(5101233, 'p', p, false, false))));
                                J$.M(5101265, J$.R(5101257, 'der', der, false, false), 'readSequence', false)();
                                J$.P(5101345, J$.R(5101273, 'curve', curve, false, false), 'a', J$.M(5101337, J$.R(5101281, 'utils', utils, false, true), 'mpNormalize', false)(J$.M(5101329, J$.R(5101289, 'der', der, false, false), 'readString', false)(J$.G(5101313, J$.G(5101305, J$.R(5101297, 'asn1', asn1, false, true), 'Ber'), 'OctetString'), J$.T(5101321, true, 23, false))));
                                J$.P(5101425, J$.R(5101353, 'curve', curve, false, false), 'b', J$.M(5101417, J$.R(5101361, 'utils', utils, false, true), 'mpNormalize', false)(J$.M(5101409, J$.R(5101369, 'der', der, false, false), 'readString', false)(J$.G(5101393, J$.G(5101385, J$.R(5101377, 'asn1', asn1, false, true), 'Ber'), 'OctetString'), J$.T(5101401, true, 23, false))));
                                if (J$.C(273576, J$.B(588170, '===', J$.M(5101441, J$.R(5101433, 'der', der, false, false), 'peek', false)(), J$.G(5101465, J$.G(5101457, J$.R(5101449, 'asn1', asn1, false, true), 'Ber'), 'BitString'))))
                                    J$.P(5101529, J$.R(5101473, 'curve', curve, false, false), 's', J$.M(5101521, J$.R(5101481, 'der', der, false, false), 'readString', false)(J$.G(5101505, J$.G(5101497, J$.R(5101489, 'asn1', asn1, false, true), 'Ber'), 'BitString'), J$.T(5101513, true, 23, false)));
                                J$.P(5101593, J$.R(5101537, 'curve', curve, false, false), 'G', J$.M(5101585, J$.R(5101545, 'der', der, false, false), 'readString', false)(J$.G(5101569, J$.G(5101561, J$.R(5101553, 'asn1', asn1, false, true), 'Ber'), 'OctetString'), J$.T(5101577, true, 23, false)));
                                J$.M(5101657, J$.R(5101601, 'assert', assert, false, true), 'strictEqual', false)(J$.G(5101633, J$.G(5101617, J$.R(5101609, 'curve', curve, false, false), 'G'), J$.T(5101625, 0, 22, false)), J$.T(5101641, 4, 22, false), J$.T(5101649, 'uncompressed G is required', 21, false));
                                J$.P(5101737, J$.R(5101665, 'curve', curve, false, false), 'n', J$.M(5101729, J$.R(5101673, 'utils', utils, false, true), 'mpNormalize', false)(J$.M(5101721, J$.R(5101681, 'der', der, false, false), 'readString', false)(J$.G(5101705, J$.G(5101697, J$.R(5101689, 'asn1', asn1, false, true), 'Ber'), 'Integer'), J$.T(5101713, true, 23, false))));
                                J$.P(5101817, J$.R(5101745, 'curve', curve, false, false), 'h', J$.M(5101809, J$.R(5101753, 'utils', utils, false, true), 'mpNormalize', false)(J$.M(5101801, J$.R(5101761, 'der', der, false, false), 'readString', false)(J$.G(5101785, J$.G(5101777, J$.R(5101769, 'asn1', asn1, false, true), 'Ber'), 'Integer'), J$.T(5101793, true, 23, false))));
                                J$.M(5101889, J$.R(5101825, 'assert', assert, false, true), 'strictEqual', false)(J$.G(5101857, J$.G(5101841, J$.R(5101833, 'curve', curve, false, false), 'h'), J$.T(5101849, 0, 22, false)), J$.T(5101865, 1, 22, false), J$.B(588178, '+', J$.T(5101873, 'a cofactor=1 curve is ', 21, false), J$.T(5101881, 'required', 21, false)));
                                curveNames = J$.W(5101929, 'curveNames', J$.M(5101921, J$.I(typeof Object === 'undefined' ? Object = J$.R(5101897, 'Object', undefined, true, true) : Object = J$.R(5101897, 'Object', Object, true, true)), 'keys', false)(J$.G(5101913, J$.R(5101905, 'algs', algs, false, true), 'curves')), curveNames, false, false);
                                var ks = J$.W(5101961, 'ks', J$.M(5101953, J$.I(typeof Object === 'undefined' ? Object = J$.R(5101937, 'Object', undefined, true, true) : Object = J$.R(5101937, 'Object', Object, true, true)), 'keys', false)(J$.R(5101945, 'curve', curve, false, false)), ks, false, false);
                                for (j = J$.W(5101977, 'j', J$.T(5101969, 0, 22, false), j, false, false); J$.C(273656, J$.B(588186, '<', J$.R(5101985, 'j', j, false, false), J$.G(5102001, J$.R(5101993, 'curveNames', curveNames, false, false), 'length'))); j = J$.W(5102017, 'j', J$.B(588202, '+', J$.U(588194, '+', J$.R(5102009, 'j', j, false, false)), 1), j, false, false)) {
                                    c = J$.W(5102049, 'c', J$.G(5102041, J$.R(5102025, 'curveNames', curveNames, false, false), J$.R(5102033, 'j', j, false, false)), c, false, false);
                                    cd = J$.W(5102089, 'cd', J$.G(5102081, J$.G(5102065, J$.R(5102057, 'algs', algs, false, true), 'curves'), J$.R(5102073, 'c', c, false, false)), cd, false, false);
                                    var equal = J$.W(5102105, 'equal', J$.T(5102097, true, 23, false), equal, false, false);
                                    for (var i = J$.W(5102121, 'i', J$.T(5102113, 0, 22, false), i, false, false); J$.C(273640, J$.B(588210, '<', J$.R(5102129, 'i', i, false, false), J$.G(5102145, J$.R(5102137, 'ks', ks, false, false), 'length'))); i = J$.W(5102161, 'i', J$.B(588226, '+', J$.U(588218, '+', J$.R(5102153, 'i', i, false, false)), 1), i, false, false)) {
                                        var k = J$.W(5102193, 'k', J$.G(5102185, J$.R(5102169, 'ks', ks, false, false), J$.R(5102177, 'i', i, false, false)), k, false, false);
                                        if (J$.C(273584, J$.B(588234, '===', J$.G(5102217, J$.R(5102201, 'cd', cd, false, false), J$.R(5102209, 'k', k, false, false)), J$.T(5102225, undefined, 24, false))))
                                            continue;
                                        if (J$.C(273632, J$.C(273592, J$.B(588250, '===', J$.U(588242, 'typeof', J$.G(5102249, J$.R(5102233, 'cd', cd, false, false), J$.R(5102241, 'k', k, false, false))), J$.T(5102257, 'object', 21, false))) ? J$.B(588258, '!==', J$.G(5102289, J$.G(5102281, J$.R(5102265, 'cd', cd, false, false), J$.R(5102273, 'k', k, false, false)), 'equals'), J$.T(5102297, undefined, 24, false)) : J$._())) {
                                            if (J$.C(273600, J$.U(588266, '!', J$.M(5102353, J$.G(5102321, J$.R(5102305, 'cd', cd, false, false), J$.R(5102313, 'k', k, false, false)), 'equals', false)(J$.G(5102345, J$.R(5102329, 'curve', curve, false, false), J$.R(5102337, 'k', k, false, false)))))) {
                                                equal = J$.W(5102369, 'equal', J$.T(5102361, false, 23, false), equal, false, false);
                                                break;
                                            }
                                        } else if (J$.C(273624, J$.M(5102409, J$.R(5102377, 'Buffer', Buffer, false, true), 'isBuffer', false)(J$.G(5102401, J$.R(5102385, 'cd', cd, false, false), J$.R(5102393, 'k', k, false, false))))) {
                                            if (J$.C(273608, J$.B(588274, '!==', J$.M(5102449, J$.G(5102433, J$.R(5102417, 'cd', cd, false, false), J$.R(5102425, 'k', k, false, false)), 'toString', false)(J$.T(5102441, 'binary', 21, false)), J$.M(5102489, J$.G(5102473, J$.R(5102457, 'curve', curve, false, false), J$.R(5102465, 'k', k, false, false)), 'toString', false)(J$.T(5102481, 'binary', 21, false))))) {
                                                equal = J$.W(5102505, 'equal', J$.T(5102497, false, 23, false), equal, false, false);
                                                break;
                                            }
                                        } else {
                                            if (J$.C(273616, J$.B(588282, '!==', J$.G(5102529, J$.R(5102513, 'cd', cd, false, false), J$.R(5102521, 'k', k, false, false)), J$.G(5102553, J$.R(5102537, 'curve', curve, false, false), J$.R(5102545, 'k', k, false, false))))) {
                                                equal = J$.W(5102569, 'equal', J$.T(5102561, false, 23, false), equal, false, false);
                                                break;
                                            }
                                        }
                                    }
                                    if (J$.C(273648, J$.R(5102577, 'equal', equal, false, false))) {
                                        curveName = J$.W(5102593, 'curveName', J$.R(5102585, 'c', c, false, false), curveName, false, false);
                                        break;
                                    }
                                }
                            }
                            return J$.Rt(5102609, J$.R(5102601, 'curveName', curveName, false, false));
                        } catch (J$e) {
                            J$.Ex(5110721, J$e);
                        } finally {
                            if (J$.Fr(5110729))
                                continue jalangiLabel8;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function readPkcs8ECDSAPrivate(der) {
                jalangiLabel9:
                    while (true) {
                        try {
                            J$.Fe(5103489, arguments.callee, this, arguments);
                            arguments = J$.N(5103497, 'arguments', arguments, true, false, false);
                            der = J$.N(5103505, 'der', der, true, false, false);
                            J$.N(5103513, 'curveName', curveName, false, false, false);
                            J$.N(5103521, 'version', version, false, false, false);
                            J$.N(5103529, 'd', d, false, false, false);
                            J$.N(5103537, 'Q', Q, false, false, false);
                            J$.N(5103545, 'pub', pub, false, false, false);
                            J$.N(5103553, 'key', key, false, false, false);
                            var curveName = J$.W(5102777, 'curveName', J$.F(5102769, J$.R(5102753, 'readECDSACurve', readECDSACurve, false, true), false)(J$.R(5102761, 'der', der, false, false)), curveName, false, false);
                            J$.M(5102809, J$.R(5102785, 'assert', assert, false, true), 'string', false)(J$.R(5102793, 'curveName', curveName, false, false), J$.T(5102801, 'a known elliptic curve', 21, false));
                            J$.M(5102849, J$.R(5102817, 'der', der, false, false), 'readSequence', false)(J$.G(5102841, J$.G(5102833, J$.R(5102825, 'asn1', asn1, false, true), 'Ber'), 'OctetString'));
                            J$.M(5102865, J$.R(5102857, 'der', der, false, false), 'readSequence', false)();
                            var version = J$.W(5102905, 'version', J$.F(5102897, J$.R(5102873, 'readMPInt', readMPInt, false, true), false)(J$.R(5102881, 'der', der, false, false), J$.T(5102889, 'version', 21, false)), version, false, false);
                            J$.M(5102961, J$.R(5102913, 'assert', assert, false, true), 'equal', false)(J$.G(5102937, J$.R(5102921, 'version', version, false, false), J$.T(5102929, 0, 22, false)), J$.T(5102945, 1, 22, false), J$.T(5102953, 'unknown version of ECDSA key', 21, false));
                            var d = J$.W(5103017, 'd', J$.M(5103009, J$.R(5102969, 'der', der, false, false), 'readString', false)(J$.G(5102993, J$.G(5102985, J$.R(5102977, 'asn1', asn1, false, true), 'Ber'), 'OctetString'), J$.T(5103001, true, 23, false)), d, false, false);
                            var Q;
                            if (J$.C(273672, J$.B(588290, '==', J$.M(5103033, J$.R(5103025, 'der', der, false, false), 'peek', false)(), J$.T(5103041, 160, 22, false)))) {
                                J$.M(5103065, J$.R(5103049, 'der', der, false, false), 'readSequence', false)(J$.T(5103057, 160, 22, false));
                                J$.A(5103097, J$.R(5103073, 'der', der, false, false), '_offset', '+')(J$.G(5103089, J$.R(5103081, 'der', der, false, false), 'length'));
                            }
                            if (J$.C(273680, J$.B(588298, '==', J$.M(5103113, J$.R(5103105, 'der', der, false, false), 'peek', false)(), J$.T(5103121, 161, 22, false)))) {
                                J$.M(5103145, J$.R(5103129, 'der', der, false, false), 'readSequence', false)(J$.T(5103137, 161, 22, false));
                                Q = J$.W(5103201, 'Q', J$.M(5103193, J$.R(5103153, 'der', der, false, false), 'readString', false)(J$.G(5103177, J$.G(5103169, J$.R(5103161, 'asn1', asn1, false, true), 'Ber'), 'BitString'), J$.T(5103185, true, 23, false)), Q, false, false);
                                Q = J$.W(5103233, 'Q', J$.M(5103225, J$.R(5103209, 'utils', utils, false, true), 'ecNormalize', false)(J$.R(5103217, 'Q', Q, false, false)), Q, false, false);
                            }
                            if (J$.C(273688, J$.B(588306, '===', J$.R(5103241, 'Q', Q, false, false), J$.T(5103249, undefined, 24, false)))) {
                                var pub = J$.W(5103289, 'pub', J$.M(5103281, J$.R(5103257, 'utils', utils, false, true), 'publicFromPrivateECDSA', false)(J$.R(5103265, 'curveName', curveName, false, false), J$.R(5103273, 'd', d, false, false)), pub, false, false);
                                Q = J$.W(5103329, 'Q', J$.G(5103321, J$.G(5103313, J$.G(5103305, J$.R(5103297, 'pub', pub, false, false), 'part'), 'Q'), 'data'), Q, false, false);
                            }
                            var key = J$.W(5103449, 'key', J$.T(5103441, {
                                type: J$.T(5103337, 'ecdsa', 21, false),
                                parts: J$.T(5103433, [
                                    J$.T(5103377, {
                                        name: J$.T(5103345, 'curve', 21, false),
                                        data: J$.M(5103369, J$.R(5103353, 'Buffer', Buffer, false, true), 'from', false)(J$.R(5103361, 'curveName', curveName, false, false))
                                    }, 11, false),
                                    J$.T(5103401, {
                                        name: J$.T(5103385, 'Q', 21, false),
                                        data: J$.R(5103393, 'Q', Q, false, false)
                                    }, 11, false),
                                    J$.T(5103425, {
                                        name: J$.T(5103409, 'd', 21, false),
                                        data: J$.R(5103417, 'd', d, false, false)
                                    }, 11, false)
                                ], 10, false)
                            }, 11, false), key, false, false);
                            return J$.Rt(5103481, J$.F(5103473, J$.R(5103457, 'PrivateKey', PrivateKey, false, true), true)(J$.R(5103465, 'key', key, false, false)));
                        } catch (J$e) {
                            J$.Ex(5110737, J$e);
                        } finally {
                            if (J$.Fr(5110745))
                                continue jalangiLabel9;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function readPkcs8ECDSAPublic(der) {
                jalangiLabel10:
                    while (true) {
                        try {
                            J$.Fe(5103841, arguments.callee, this, arguments);
                            arguments = J$.N(5103849, 'arguments', arguments, true, false, false);
                            der = J$.N(5103857, 'der', der, true, false, false);
                            J$.N(5103865, 'curveName', curveName, false, false, false);
                            J$.N(5103873, 'Q', Q, false, false, false);
                            J$.N(5103881, 'key', key, false, false, false);
                            var curveName = J$.W(5103585, 'curveName', J$.F(5103577, J$.R(5103561, 'readECDSACurve', readECDSACurve, false, true), false)(J$.R(5103569, 'der', der, false, false)), curveName, false, false);
                            J$.M(5103617, J$.R(5103593, 'assert', assert, false, true), 'string', false)(J$.R(5103601, 'curveName', curveName, false, false), J$.T(5103609, 'a known elliptic curve', 21, false));
                            var Q = J$.W(5103673, 'Q', J$.M(5103665, J$.R(5103625, 'der', der, false, false), 'readString', false)(J$.G(5103649, J$.G(5103641, J$.R(5103633, 'asn1', asn1, false, true), 'Ber'), 'BitString'), J$.T(5103657, true, 23, false)), Q, false, false);
                            Q = J$.W(5103705, 'Q', J$.M(5103697, J$.R(5103681, 'utils', utils, false, true), 'ecNormalize', false)(J$.R(5103689, 'Q', Q, false, false)), Q, false, false);
                            var key = J$.W(5103801, 'key', J$.T(5103793, {
                                type: J$.T(5103713, 'ecdsa', 21, false),
                                parts: J$.T(5103785, [
                                    J$.T(5103753, {
                                        name: J$.T(5103721, 'curve', 21, false),
                                        data: J$.M(5103745, J$.R(5103729, 'Buffer', Buffer, false, true), 'from', false)(J$.R(5103737, 'curveName', curveName, false, false))
                                    }, 11, false),
                                    J$.T(5103777, {
                                        name: J$.T(5103761, 'Q', 21, false),
                                        data: J$.R(5103769, 'Q', Q, false, false)
                                    }, 11, false)
                                ], 10, false)
                            }, 11, false), key, false, false);
                            return J$.Rt(5103833, J$.F(5103825, J$.R(5103809, 'Key', Key, false, true), true)(J$.R(5103817, 'key', key, false, false)));
                        } catch (J$e) {
                            J$.Ex(5110753, J$e);
                        } finally {
                            if (J$.Fr(5110761))
                                continue jalangiLabel10;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function readPkcs8EdDSAPublic(der) {
                jalangiLabel11:
                    while (true) {
                        try {
                            J$.Fe(5104073, arguments.callee, this, arguments);
                            arguments = J$.N(5104081, 'arguments', arguments, true, false, false);
                            der = J$.N(5104089, 'der', der, true, false, false);
                            J$.N(5104097, 'A', A, false, false, false);
                            J$.N(5104105, 'key', key, false, false, false);
                            if (J$.C(273696, J$.B(588314, '===', J$.M(5103897, J$.R(5103889, 'der', der, false, false), 'peek', false)(), J$.T(5103905, 0, 22, false))))
                                J$.M(5103921, J$.R(5103913, 'der', der, false, false), 'readByte', false)();
                            var A = J$.W(5103953, 'A', J$.M(5103945, J$.R(5103929, 'utils', utils, false, true), 'readBitString', false)(J$.R(5103937, 'der', der, false, false)), A, false, false);
                            var key = J$.W(5104033, 'key', J$.T(5104025, {
                                type: J$.T(5103961, 'ed25519', 21, false),
                                parts: J$.T(5104017, [J$.T(5104009, {
                                        name: J$.T(5103969, 'A', 21, false),
                                        data: J$.M(5104001, J$.R(5103977, 'utils', utils, false, true), 'zeroPadToLength', false)(J$.R(5103985, 'A', A, false, false), J$.T(5103993, 32, 22, false))
                                    }, 11, false)], 10, false)
                            }, 11, false), key, false, false);
                            return J$.Rt(5104065, J$.F(5104057, J$.R(5104041, 'Key', Key, false, true), true)(J$.R(5104049, 'key', key, false, false)));
                        } catch (J$e) {
                            J$.Ex(5110769, J$e);
                        } finally {
                            if (J$.Fr(5110777))
                                continue jalangiLabel11;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function readPkcs8X25519Public(der) {
                jalangiLabel12:
                    while (true) {
                        try {
                            J$.Fe(5104257, arguments.callee, this, arguments);
                            arguments = J$.N(5104265, 'arguments', arguments, true, false, false);
                            der = J$.N(5104273, 'der', der, true, false, false);
                            J$.N(5104281, 'A', A, false, false, false);
                            J$.N(5104289, 'key', key, false, false, false);
                            var A = J$.W(5104137, 'A', J$.M(5104129, J$.R(5104113, 'utils', utils, false, true), 'readBitString', false)(J$.R(5104121, 'der', der, false, false)), A, false, false);
                            var key = J$.W(5104217, 'key', J$.T(5104209, {
                                type: J$.T(5104145, 'curve25519', 21, false),
                                parts: J$.T(5104201, [J$.T(5104193, {
                                        name: J$.T(5104153, 'A', 21, false),
                                        data: J$.M(5104185, J$.R(5104161, 'utils', utils, false, true), 'zeroPadToLength', false)(J$.R(5104169, 'A', A, false, false), J$.T(5104177, 32, 22, false))
                                    }, 11, false)], 10, false)
                            }, 11, false), key, false, false);
                            return J$.Rt(5104249, J$.F(5104241, J$.R(5104225, 'Key', Key, false, true), true)(J$.R(5104233, 'key', key, false, false)));
                        } catch (J$e) {
                            J$.Ex(5110785, J$e);
                        } finally {
                            if (J$.Fr(5110793))
                                continue jalangiLabel12;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function readPkcs8EdDSAPrivate(der) {
                jalangiLabel13:
                    while (true) {
                        try {
                            J$.Fe(5104777, arguments.callee, this, arguments);
                            arguments = J$.N(5104785, 'arguments', arguments, true, false, false);
                            der = J$.N(5104793, 'der', der, true, false, false);
                            J$.N(5104801, 'k', k, false, false, false);
                            J$.N(5104809, 'A', A, false, false, false);
                            J$.N(5104817, 'key', key, false, false, false);
                            if (J$.C(273704, J$.B(588322, '===', J$.M(5104305, J$.R(5104297, 'der', der, false, false), 'peek', false)(), J$.T(5104313, 0, 22, false))))
                                J$.M(5104329, J$.R(5104321, 'der', der, false, false), 'readByte', false)();
                            J$.M(5104369, J$.R(5104337, 'der', der, false, false), 'readSequence', false)(J$.G(5104361, J$.G(5104353, J$.R(5104345, 'asn1', asn1, false, true), 'Ber'), 'OctetString'));
                            var k = J$.W(5104425, 'k', J$.M(5104417, J$.R(5104377, 'der', der, false, false), 'readString', false)(J$.G(5104401, J$.G(5104393, J$.R(5104385, 'asn1', asn1, false, true), 'Ber'), 'OctetString'), J$.T(5104409, true, 23, false)), k, false, false);
                            k = J$.W(5104465, 'k', J$.M(5104457, J$.R(5104433, 'utils', utils, false, true), 'zeroPadToLength', false)(J$.R(5104441, 'k', k, false, false), J$.T(5104449, 32, 22, false)), k, false, false);
                            var A;
                            if (J$.C(273712, J$.B(588330, '===', J$.M(5104481, J$.R(5104473, 'der', der, false, false), 'peek', false)(), J$.G(5104505, J$.G(5104497, J$.R(5104489, 'asn1', asn1, false, true), 'Ber'), 'BitString')))) {
                                A = J$.W(5104537, 'A', J$.M(5104529, J$.R(5104513, 'utils', utils, false, true), 'readBitString', false)(J$.R(5104521, 'der', der, false, false)), A, false, false);
                                A = J$.W(5104577, 'A', J$.M(5104569, J$.R(5104545, 'utils', utils, false, true), 'zeroPadToLength', false)(J$.R(5104553, 'A', A, false, false), J$.T(5104561, 32, 22, false)), A, false, false);
                            } else {
                                A = J$.W(5104609, 'A', J$.M(5104601, J$.R(5104585, 'utils', utils, false, true), 'calculateED25519Public', false)(J$.R(5104593, 'k', k, false, false)), A, false, false);
                            }
                            var key = J$.W(5104737, 'key', J$.T(5104729, {
                                type: J$.T(5104617, 'ed25519', 21, false),
                                parts: J$.T(5104721, [
                                    J$.T(5104665, {
                                        name: J$.T(5104625, 'A', 21, false),
                                        data: J$.M(5104657, J$.R(5104633, 'utils', utils, false, true), 'zeroPadToLength', false)(J$.R(5104641, 'A', A, false, false), J$.T(5104649, 32, 22, false))
                                    }, 11, false),
                                    J$.T(5104713, {
                                        name: J$.T(5104673, 'k', 21, false),
                                        data: J$.M(5104705, J$.R(5104681, 'utils', utils, false, true), 'zeroPadToLength', false)(J$.R(5104689, 'k', k, false, false), J$.T(5104697, 32, 22, false))
                                    }, 11, false)
                                ], 10, false)
                            }, 11, false), key, false, false);
                            return J$.Rt(5104769, J$.F(5104761, J$.R(5104745, 'PrivateKey', PrivateKey, false, true), true)(J$.R(5104753, 'key', key, false, false)));
                        } catch (J$e) {
                            J$.Ex(5110801, J$e);
                        } finally {
                            if (J$.Fr(5110809))
                                continue jalangiLabel13;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function readPkcs8X25519Private(der) {
                jalangiLabel14:
                    while (true) {
                        try {
                            J$.Fe(5105193, arguments.callee, this, arguments);
                            arguments = J$.N(5105201, 'arguments', arguments, true, false, false);
                            der = J$.N(5105209, 'der', der, true, false, false);
                            J$.N(5105217, 'k', k, false, false, false);
                            J$.N(5105225, 'A', A, false, false, false);
                            J$.N(5105233, 'key', key, false, false, false);
                            if (J$.C(273720, J$.B(588338, '===', J$.M(5104833, J$.R(5104825, 'der', der, false, false), 'peek', false)(), J$.T(5104841, 0, 22, false))))
                                J$.M(5104857, J$.R(5104849, 'der', der, false, false), 'readByte', false)();
                            J$.M(5104897, J$.R(5104865, 'der', der, false, false), 'readSequence', false)(J$.G(5104889, J$.G(5104881, J$.R(5104873, 'asn1', asn1, false, true), 'Ber'), 'OctetString'));
                            var k = J$.W(5104953, 'k', J$.M(5104945, J$.R(5104905, 'der', der, false, false), 'readString', false)(J$.G(5104929, J$.G(5104921, J$.R(5104913, 'asn1', asn1, false, true), 'Ber'), 'OctetString'), J$.T(5104937, true, 23, false)), k, false, false);
                            k = J$.W(5104993, 'k', J$.M(5104985, J$.R(5104961, 'utils', utils, false, true), 'zeroPadToLength', false)(J$.R(5104969, 'k', k, false, false), J$.T(5104977, 32, 22, false)), k, false, false);
                            var A = J$.W(5105025, 'A', J$.M(5105017, J$.R(5105001, 'utils', utils, false, true), 'calculateX25519Public', false)(J$.R(5105009, 'k', k, false, false)), A, false, false);
                            var key = J$.W(5105153, 'key', J$.T(5105145, {
                                type: J$.T(5105033, 'curve25519', 21, false),
                                parts: J$.T(5105137, [
                                    J$.T(5105081, {
                                        name: J$.T(5105041, 'A', 21, false),
                                        data: J$.M(5105073, J$.R(5105049, 'utils', utils, false, true), 'zeroPadToLength', false)(J$.R(5105057, 'A', A, false, false), J$.T(5105065, 32, 22, false))
                                    }, 11, false),
                                    J$.T(5105129, {
                                        name: J$.T(5105089, 'k', 21, false),
                                        data: J$.M(5105121, J$.R(5105097, 'utils', utils, false, true), 'zeroPadToLength', false)(J$.R(5105105, 'k', k, false, false), J$.T(5105113, 32, 22, false))
                                    }, 11, false)
                                ], 10, false)
                            }, 11, false), key, false, false);
                            return J$.Rt(5105185, J$.F(5105177, J$.R(5105161, 'PrivateKey', PrivateKey, false, true), true)(J$.R(5105169, 'key', key, false, false)));
                        } catch (J$e) {
                            J$.Ex(5110817, J$e);
                        } finally {
                            if (J$.Fr(5110825))
                                continue jalangiLabel14;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function pkcs8ToBuffer(key) {
                jalangiLabel15:
                    while (true) {
                        try {
                            J$.Fe(5105321, arguments.callee, this, arguments);
                            arguments = J$.N(5105329, 'arguments', arguments, true, false, false);
                            key = J$.N(5105337, 'key', key, true, false, false);
                            J$.N(5105345, 'der', der, false, false, false);
                            var der = J$.W(5105257, 'der', J$.M(5105249, J$.R(5105241, 'asn1', asn1, false, true), 'BerWriter', true)(), der, false, false);
                            J$.F(5105289, J$.R(5105265, 'writePkcs8', writePkcs8, false, true), false)(J$.R(5105273, 'der', der, false, false), J$.R(5105281, 'key', key, false, false));
                            return J$.Rt(5105313, J$.G(5105305, J$.R(5105297, 'der', der, false, false), 'buffer'));
                        } catch (J$e) {
                            J$.Ex(5110833, J$e);
                        } finally {
                            if (J$.Fr(5110841))
                                continue jalangiLabel15;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function writePkcs8(der, key) {
                jalangiLabel16:
                    while (true) {
                        try {
                            J$.Fe(5106049, arguments.callee, this, arguments);
                            arguments = J$.N(5106057, 'arguments', arguments, true, false, false);
                            der = J$.N(5106065, 'der', der, true, false, false);
                            key = J$.N(5106073, 'key', key, true, false, false);
                            J$.N(5106081, 'sillyInt', sillyInt, false, false, false);
                            J$.M(5105361, J$.R(5105353, 'der', der, false, false), 'startSequence', false)();
                            if (J$.C(273728, J$.M(5105385, J$.R(5105369, 'PrivateKey', PrivateKey, false, true), 'isPrivateKey', false)(J$.R(5105377, 'key', key, false, false)))) {
                                var sillyInt = J$.W(5105425, 'sillyInt', J$.M(5105417, J$.R(5105393, 'Buffer', Buffer, false, true), 'from', false)(J$.T(5105409, [J$.T(5105401, 0, 22, false)], 10, false)), sillyInt, false, false);
                                J$.M(5105473, J$.R(5105433, 'der', der, false, false), 'writeBuffer', false)(J$.R(5105441, 'sillyInt', sillyInt, false, false), J$.G(5105465, J$.G(5105457, J$.R(5105449, 'asn1', asn1, false, true), 'Ber'), 'Integer'));
                            }
                            J$.M(5105489, J$.R(5105481, 'der', der, false, false), 'startSequence', false)();
                            switch (J$.C1(273768, J$.G(5105505, J$.R(5105497, 'key', key, false, false), 'type'))) {
                            case J$.C2(273776, J$.T(5105625, 'rsa', 21, false)):
                                J$.M(5105529, J$.R(5105513, 'der', der, false, false), 'writeOID', false)(J$.T(5105521, '1.2.840.113549.1.1.1', 21, false));
                                if (J$.C(273736, J$.M(5105553, J$.R(5105537, 'PrivateKey', PrivateKey, false, true), 'isPrivateKey', false)(J$.R(5105545, 'key', key, false, false))))
                                    J$.F(5105585, J$.R(5105561, 'writePkcs8RSAPrivate', writePkcs8RSAPrivate, false, true), false)(J$.R(5105569, 'key', key, false, false), J$.R(5105577, 'der', der, false, false));
                                else
                                    J$.F(5105617, J$.R(5105593, 'writePkcs8RSAPublic', writePkcs8RSAPublic, false, true), false)(J$.R(5105601, 'key', key, false, false), J$.R(5105609, 'der', der, false, false));
                                break;
                            case J$.C2(273784, J$.T(5105745, 'dsa', 21, false)):
                                J$.M(5105649, J$.R(5105633, 'der', der, false, false), 'writeOID', false)(J$.T(5105641, '1.2.840.10040.4.1', 21, false));
                                if (J$.C(273744, J$.M(5105673, J$.R(5105657, 'PrivateKey', PrivateKey, false, true), 'isPrivateKey', false)(J$.R(5105665, 'key', key, false, false))))
                                    J$.F(5105705, J$.R(5105681, 'writePkcs8DSAPrivate', writePkcs8DSAPrivate, false, true), false)(J$.R(5105689, 'key', key, false, false), J$.R(5105697, 'der', der, false, false));
                                else
                                    J$.F(5105737, J$.R(5105713, 'writePkcs8DSAPublic', writePkcs8DSAPublic, false, true), false)(J$.R(5105721, 'key', key, false, false), J$.R(5105729, 'der', der, false, false));
                                break;
                            case J$.C2(273792, J$.T(5105865, 'ecdsa', 21, false)):
                                J$.M(5105769, J$.R(5105753, 'der', der, false, false), 'writeOID', false)(J$.T(5105761, '1.2.840.10045.2.1', 21, false));
                                if (J$.C(273752, J$.M(5105793, J$.R(5105777, 'PrivateKey', PrivateKey, false, true), 'isPrivateKey', false)(J$.R(5105785, 'key', key, false, false))))
                                    J$.F(5105825, J$.R(5105801, 'writePkcs8ECDSAPrivate', writePkcs8ECDSAPrivate, false, true), false)(J$.R(5105809, 'key', key, false, false), J$.R(5105817, 'der', der, false, false));
                                else
                                    J$.F(5105857, J$.R(5105833, 'writePkcs8ECDSAPublic', writePkcs8ECDSAPublic, false, true), false)(J$.R(5105841, 'key', key, false, false), J$.R(5105849, 'der', der, false, false));
                                break;
                            case J$.C2(273800, J$.T(5105985, 'ed25519', 21, false)):
                                J$.M(5105889, J$.R(5105873, 'der', der, false, false), 'writeOID', false)(J$.T(5105881, '1.3.101.112', 21, false));
                                if (J$.C(273760, J$.M(5105913, J$.R(5105897, 'PrivateKey', PrivateKey, false, true), 'isPrivateKey', false)(J$.R(5105905, 'key', key, false, false))))
                                    throw J$.F(5105945, J$.I(typeof Error === 'undefined' ? Error = J$.R(5105921, 'Error', undefined, true, true) : Error = J$.R(5105921, 'Error', Error, true, true)), true)(J$.B(588346, '+', J$.T(5105929, 'Ed25519 private keys in pkcs8 ', 21, false), J$.T(5105937, 'format are not supported', 21, false)));
                                J$.F(5105977, J$.R(5105953, 'writePkcs8EdDSAPublic', writePkcs8EdDSAPublic, false, true), false)(J$.R(5105961, 'key', key, false, false), J$.R(5105969, 'der', der, false, false));
                                break;
                            default:
                                throw J$.F(5106025, J$.I(typeof Error === 'undefined' ? Error = J$.R(5105993, 'Error', undefined, true, true) : Error = J$.R(5105993, 'Error', Error, true, true)), true)(J$.B(588354, '+', J$.T(5106001, 'Unsupported key type: ', 21, false), J$.G(5106017, J$.R(5106009, 'key', key, false, false), 'type')));
                            }
                            J$.M(5106041, J$.R(5106033, 'der', der, false, false), 'endSequence', false)();
                        } catch (J$e) {
                            J$.Ex(5110849, J$e);
                        } finally {
                            if (J$.Fr(5110857))
                                continue jalangiLabel16;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function writePkcs8RSAPrivate(key, der) {
                jalangiLabel17:
                    while (true) {
                        try {
                            J$.Fe(5106945, arguments.callee, this, arguments);
                            arguments = J$.N(5106953, 'arguments', arguments, true, false, false);
                            key = J$.N(5106961, 'key', key, true, false, false);
                            der = J$.N(5106969, 'der', der, true, false, false);
                            J$.N(5106977, 'version', version, false, false, false);
                            J$.M(5106097, J$.R(5106089, 'der', der, false, false), 'writeNull', false)();
                            J$.M(5106113, J$.R(5106105, 'der', der, false, false), 'endSequence', false)();
                            J$.M(5106153, J$.R(5106121, 'der', der, false, false), 'startSequence', false)(J$.G(5106145, J$.G(5106137, J$.R(5106129, 'asn1', asn1, false, true), 'Ber'), 'OctetString'));
                            J$.M(5106169, J$.R(5106161, 'der', der, false, false), 'startSequence', false)();
                            var version = J$.W(5106209, 'version', J$.M(5106201, J$.R(5106177, 'Buffer', Buffer, false, true), 'from', false)(J$.T(5106193, [J$.T(5106185, 0, 22, false)], 10, false)), version, false, false);
                            J$.M(5106257, J$.R(5106217, 'der', der, false, false), 'writeBuffer', false)(J$.R(5106225, 'version', version, false, false), J$.G(5106249, J$.G(5106241, J$.R(5106233, 'asn1', asn1, false, true), 'Ber'), 'Integer'));
                            J$.M(5106329, J$.R(5106265, 'der', der, false, false), 'writeBuffer', false)(J$.G(5106297, J$.G(5106289, J$.G(5106281, J$.R(5106273, 'key', key, false, false), 'part'), 'n'), 'data'), J$.G(5106321, J$.G(5106313, J$.R(5106305, 'asn1', asn1, false, true), 'Ber'), 'Integer'));
                            J$.M(5106401, J$.R(5106337, 'der', der, false, false), 'writeBuffer', false)(J$.G(5106369, J$.G(5106361, J$.G(5106353, J$.R(5106345, 'key', key, false, false), 'part'), 'e'), 'data'), J$.G(5106393, J$.G(5106385, J$.R(5106377, 'asn1', asn1, false, true), 'Ber'), 'Integer'));
                            J$.M(5106473, J$.R(5106409, 'der', der, false, false), 'writeBuffer', false)(J$.G(5106441, J$.G(5106433, J$.G(5106425, J$.R(5106417, 'key', key, false, false), 'part'), 'd'), 'data'), J$.G(5106465, J$.G(5106457, J$.R(5106449, 'asn1', asn1, false, true), 'Ber'), 'Integer'));
                            J$.M(5106545, J$.R(5106481, 'der', der, false, false), 'writeBuffer', false)(J$.G(5106513, J$.G(5106505, J$.G(5106497, J$.R(5106489, 'key', key, false, false), 'part'), 'p'), 'data'), J$.G(5106537, J$.G(5106529, J$.R(5106521, 'asn1', asn1, false, true), 'Ber'), 'Integer'));
                            J$.M(5106617, J$.R(5106553, 'der', der, false, false), 'writeBuffer', false)(J$.G(5106585, J$.G(5106577, J$.G(5106569, J$.R(5106561, 'key', key, false, false), 'part'), 'q'), 'data'), J$.G(5106609, J$.G(5106601, J$.R(5106593, 'asn1', asn1, false, true), 'Ber'), 'Integer'));
                            if (J$.C(273816, J$.C(273808, J$.U(588362, '!', J$.G(5106641, J$.G(5106633, J$.R(5106625, 'key', key, false, false), 'part'), 'dmodp'))) ? J$._() : J$.U(588370, '!', J$.G(5106665, J$.G(5106657, J$.R(5106649, 'key', key, false, false), 'part'), 'dmodq'))))
                                J$.M(5106689, J$.R(5106673, 'utils', utils, false, true), 'addRSAMissing', false)(J$.R(5106681, 'key', key, false, false));
                            J$.M(5106761, J$.R(5106697, 'der', der, false, false), 'writeBuffer', false)(J$.G(5106729, J$.G(5106721, J$.G(5106713, J$.R(5106705, 'key', key, false, false), 'part'), 'dmodp'), 'data'), J$.G(5106753, J$.G(5106745, J$.R(5106737, 'asn1', asn1, false, true), 'Ber'), 'Integer'));
                            J$.M(5106833, J$.R(5106769, 'der', der, false, false), 'writeBuffer', false)(J$.G(5106801, J$.G(5106793, J$.G(5106785, J$.R(5106777, 'key', key, false, false), 'part'), 'dmodq'), 'data'), J$.G(5106825, J$.G(5106817, J$.R(5106809, 'asn1', asn1, false, true), 'Ber'), 'Integer'));
                            J$.M(5106905, J$.R(5106841, 'der', der, false, false), 'writeBuffer', false)(J$.G(5106873, J$.G(5106865, J$.G(5106857, J$.R(5106849, 'key', key, false, false), 'part'), 'iqmp'), 'data'), J$.G(5106897, J$.G(5106889, J$.R(5106881, 'asn1', asn1, false, true), 'Ber'), 'Integer'));
                            J$.M(5106921, J$.R(5106913, 'der', der, false, false), 'endSequence', false)();
                            J$.M(5106937, J$.R(5106929, 'der', der, false, false), 'endSequence', false)();
                        } catch (J$e) {
                            J$.Ex(5110865, J$e);
                        } finally {
                            if (J$.Fr(5110873))
                                continue jalangiLabel17;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function writePkcs8RSAPublic(key, der) {
                jalangiLabel18:
                    while (true) {
                        try {
                            J$.Fe(5107273, arguments.callee, this, arguments);
                            arguments = J$.N(5107281, 'arguments', arguments, true, false, false);
                            key = J$.N(5107289, 'key', key, true, false, false);
                            der = J$.N(5107297, 'der', der, true, false, false);
                            J$.M(5106993, J$.R(5106985, 'der', der, false, false), 'writeNull', false)();
                            J$.M(5107009, J$.R(5107001, 'der', der, false, false), 'endSequence', false)();
                            J$.M(5107049, J$.R(5107017, 'der', der, false, false), 'startSequence', false)(J$.G(5107041, J$.G(5107033, J$.R(5107025, 'asn1', asn1, false, true), 'Ber'), 'BitString'));
                            J$.M(5107073, J$.R(5107057, 'der', der, false, false), 'writeByte', false)(J$.T(5107065, 0, 22, false));
                            J$.M(5107089, J$.R(5107081, 'der', der, false, false), 'startSequence', false)();
                            J$.M(5107161, J$.R(5107097, 'der', der, false, false), 'writeBuffer', false)(J$.G(5107129, J$.G(5107121, J$.G(5107113, J$.R(5107105, 'key', key, false, false), 'part'), 'n'), 'data'), J$.G(5107153, J$.G(5107145, J$.R(5107137, 'asn1', asn1, false, true), 'Ber'), 'Integer'));
                            J$.M(5107233, J$.R(5107169, 'der', der, false, false), 'writeBuffer', false)(J$.G(5107201, J$.G(5107193, J$.G(5107185, J$.R(5107177, 'key', key, false, false), 'part'), 'e'), 'data'), J$.G(5107225, J$.G(5107217, J$.R(5107209, 'asn1', asn1, false, true), 'Ber'), 'Integer'));
                            J$.M(5107249, J$.R(5107241, 'der', der, false, false), 'endSequence', false)();
                            J$.M(5107265, J$.R(5107257, 'der', der, false, false), 'endSequence', false)();
                        } catch (J$e) {
                            J$.Ex(5110881, J$e);
                        } finally {
                            if (J$.Fr(5110889))
                                continue jalangiLabel18;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function writePkcs8DSAPrivate(key, der) {
                jalangiLabel19:
                    while (true) {
                        try {
                            J$.Fe(5107697, arguments.callee, this, arguments);
                            arguments = J$.N(5107705, 'arguments', arguments, true, false, false);
                            key = J$.N(5107713, 'key', key, true, false, false);
                            der = J$.N(5107721, 'der', der, true, false, false);
                            J$.M(5107313, J$.R(5107305, 'der', der, false, false), 'startSequence', false)();
                            J$.M(5107385, J$.R(5107321, 'der', der, false, false), 'writeBuffer', false)(J$.G(5107353, J$.G(5107345, J$.G(5107337, J$.R(5107329, 'key', key, false, false), 'part'), 'p'), 'data'), J$.G(5107377, J$.G(5107369, J$.R(5107361, 'asn1', asn1, false, true), 'Ber'), 'Integer'));
                            J$.M(5107457, J$.R(5107393, 'der', der, false, false), 'writeBuffer', false)(J$.G(5107425, J$.G(5107417, J$.G(5107409, J$.R(5107401, 'key', key, false, false), 'part'), 'q'), 'data'), J$.G(5107449, J$.G(5107441, J$.R(5107433, 'asn1', asn1, false, true), 'Ber'), 'Integer'));
                            J$.M(5107529, J$.R(5107465, 'der', der, false, false), 'writeBuffer', false)(J$.G(5107497, J$.G(5107489, J$.G(5107481, J$.R(5107473, 'key', key, false, false), 'part'), 'g'), 'data'), J$.G(5107521, J$.G(5107513, J$.R(5107505, 'asn1', asn1, false, true), 'Ber'), 'Integer'));
                            J$.M(5107545, J$.R(5107537, 'der', der, false, false), 'endSequence', false)();
                            J$.M(5107561, J$.R(5107553, 'der', der, false, false), 'endSequence', false)();
                            J$.M(5107601, J$.R(5107569, 'der', der, false, false), 'startSequence', false)(J$.G(5107593, J$.G(5107585, J$.R(5107577, 'asn1', asn1, false, true), 'Ber'), 'OctetString'));
                            J$.M(5107673, J$.R(5107609, 'der', der, false, false), 'writeBuffer', false)(J$.G(5107641, J$.G(5107633, J$.G(5107625, J$.R(5107617, 'key', key, false, false), 'part'), 'x'), 'data'), J$.G(5107665, J$.G(5107657, J$.R(5107649, 'asn1', asn1, false, true), 'Ber'), 'Integer'));
                            J$.M(5107689, J$.R(5107681, 'der', der, false, false), 'endSequence', false)();
                        } catch (J$e) {
                            J$.Ex(5110897, J$e);
                        } finally {
                            if (J$.Fr(5110905))
                                continue jalangiLabel19;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function writePkcs8DSAPublic(key, der) {
                jalangiLabel20:
                    while (true) {
                        try {
                            J$.Fe(5108145, arguments.callee, this, arguments);
                            arguments = J$.N(5108153, 'arguments', arguments, true, false, false);
                            key = J$.N(5108161, 'key', key, true, false, false);
                            der = J$.N(5108169, 'der', der, true, false, false);
                            J$.M(5107737, J$.R(5107729, 'der', der, false, false), 'startSequence', false)();
                            J$.M(5107809, J$.R(5107745, 'der', der, false, false), 'writeBuffer', false)(J$.G(5107777, J$.G(5107769, J$.G(5107761, J$.R(5107753, 'key', key, false, false), 'part'), 'p'), 'data'), J$.G(5107801, J$.G(5107793, J$.R(5107785, 'asn1', asn1, false, true), 'Ber'), 'Integer'));
                            J$.M(5107881, J$.R(5107817, 'der', der, false, false), 'writeBuffer', false)(J$.G(5107849, J$.G(5107841, J$.G(5107833, J$.R(5107825, 'key', key, false, false), 'part'), 'q'), 'data'), J$.G(5107873, J$.G(5107865, J$.R(5107857, 'asn1', asn1, false, true), 'Ber'), 'Integer'));
                            J$.M(5107953, J$.R(5107889, 'der', der, false, false), 'writeBuffer', false)(J$.G(5107921, J$.G(5107913, J$.G(5107905, J$.R(5107897, 'key', key, false, false), 'part'), 'g'), 'data'), J$.G(5107945, J$.G(5107937, J$.R(5107929, 'asn1', asn1, false, true), 'Ber'), 'Integer'));
                            J$.M(5107969, J$.R(5107961, 'der', der, false, false), 'endSequence', false)();
                            J$.M(5107985, J$.R(5107977, 'der', der, false, false), 'endSequence', false)();
                            J$.M(5108025, J$.R(5107993, 'der', der, false, false), 'startSequence', false)(J$.G(5108017, J$.G(5108009, J$.R(5108001, 'asn1', asn1, false, true), 'Ber'), 'BitString'));
                            J$.M(5108049, J$.R(5108033, 'der', der, false, false), 'writeByte', false)(J$.T(5108041, 0, 22, false));
                            J$.M(5108121, J$.R(5108057, 'der', der, false, false), 'writeBuffer', false)(J$.G(5108089, J$.G(5108081, J$.G(5108073, J$.R(5108065, 'key', key, false, false), 'part'), 'y'), 'data'), J$.G(5108113, J$.G(5108105, J$.R(5108097, 'asn1', asn1, false, true), 'Ber'), 'Integer'));
                            J$.M(5108137, J$.R(5108129, 'der', der, false, false), 'endSequence', false)();
                        } catch (J$e) {
                            J$.Ex(5110913, J$e);
                        } finally {
                            if (J$.Fr(5110921))
                                continue jalangiLabel20;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function writeECDSACurve(key, der) {
                jalangiLabel21:
                    while (true) {
                        try {
                            J$.Fe(5109017, arguments.callee, this, arguments);
                            arguments = J$.N(5109025, 'arguments', arguments, true, false, false);
                            key = J$.N(5109033, 'key', key, true, false, false);
                            der = J$.N(5109041, 'der', der, true, false, false);
                            J$.N(5109049, 'curve', curve, false, false, false);
                            J$.N(5109057, 'version', version, false, false, false);
                            J$.N(5109065, 'a', a, false, false, false);
                            J$.N(5109073, 'h', h, false, false, false);
                            var curve = J$.W(5108217, 'curve', J$.G(5108209, J$.G(5108185, J$.R(5108177, 'algs', algs, false, true), 'curves'), J$.G(5108201, J$.R(5108193, 'key', key, false, false), 'curve')), curve, false, false);
                            if (J$.C(273840, J$.G(5108233, J$.R(5108225, 'curve', curve, false, false), 'pkcs8oid'))) {
                                J$.M(5108265, J$.R(5108241, 'der', der, false, false), 'writeOID', false)(J$.G(5108257, J$.R(5108249, 'curve', curve, false, false), 'pkcs8oid'));
                            } else {
                                J$.M(5108281, J$.R(5108273, 'der', der, false, false), 'startSequence', false)();
                                var version = J$.W(5108321, 'version', J$.M(5108313, J$.R(5108289, 'Buffer', Buffer, false, true), 'from', false)(J$.T(5108305, [J$.T(5108297, 1, 22, false)], 10, false)), version, false, false);
                                J$.M(5108369, J$.R(5108329, 'der', der, false, false), 'writeBuffer', false)(J$.R(5108337, 'version', version, false, false), J$.G(5108361, J$.G(5108353, J$.R(5108345, 'asn1', asn1, false, true), 'Ber'), 'Integer'));
                                J$.M(5108385, J$.R(5108377, 'der', der, false, false), 'startSequence', false)();
                                J$.M(5108409, J$.R(5108393, 'der', der, false, false), 'writeOID', false)(J$.T(5108401, '1.2.840.10045.1.1', 21, false));
                                J$.M(5108465, J$.R(5108417, 'der', der, false, false), 'writeBuffer', false)(J$.G(5108433, J$.R(5108425, 'curve', curve, false, false), 'p'), J$.G(5108457, J$.G(5108449, J$.R(5108441, 'asn1', asn1, false, true), 'Ber'), 'Integer'));
                                J$.M(5108481, J$.R(5108473, 'der', der, false, false), 'endSequence', false)();
                                J$.M(5108497, J$.R(5108489, 'der', der, false, false), 'startSequence', false)();
                                var a = J$.W(5108521, 'a', J$.G(5108513, J$.R(5108505, 'curve', curve, false, false), 'p'), a, false, false);
                                if (J$.C(273824, J$.B(588378, '===', J$.G(5108545, J$.R(5108529, 'a', a, false, false), J$.T(5108537, 0, 22, false)), J$.T(5108553, 0, 22, false))))
                                    a = J$.W(5108585, 'a', J$.M(5108577, J$.R(5108561, 'a', a, false, false), 'slice', false)(J$.T(5108569, 1, 22, false)), a, false, false);
                                J$.M(5108633, J$.R(5108593, 'der', der, false, false), 'writeBuffer', false)(J$.R(5108601, 'a', a, false, false), J$.G(5108625, J$.G(5108617, J$.R(5108609, 'asn1', asn1, false, true), 'Ber'), 'OctetString'));
                                J$.M(5108689, J$.R(5108641, 'der', der, false, false), 'writeBuffer', false)(J$.G(5108657, J$.R(5108649, 'curve', curve, false, false), 'b'), J$.G(5108681, J$.G(5108673, J$.R(5108665, 'asn1', asn1, false, true), 'Ber'), 'OctetString'));
                                J$.M(5108745, J$.R(5108697, 'der', der, false, false), 'writeBuffer', false)(J$.G(5108713, J$.R(5108705, 'curve', curve, false, false), 's'), J$.G(5108737, J$.G(5108729, J$.R(5108721, 'asn1', asn1, false, true), 'Ber'), 'BitString'));
                                J$.M(5108761, J$.R(5108753, 'der', der, false, false), 'endSequence', false)();
                                J$.M(5108817, J$.R(5108769, 'der', der, false, false), 'writeBuffer', false)(J$.G(5108785, J$.R(5108777, 'curve', curve, false, false), 'G'), J$.G(5108809, J$.G(5108801, J$.R(5108793, 'asn1', asn1, false, true), 'Ber'), 'OctetString'));
                                J$.M(5108873, J$.R(5108825, 'der', der, false, false), 'writeBuffer', false)(J$.G(5108841, J$.R(5108833, 'curve', curve, false, false), 'n'), J$.G(5108865, J$.G(5108857, J$.R(5108849, 'asn1', asn1, false, true), 'Ber'), 'Integer'));
                                var h = J$.W(5108897, 'h', J$.G(5108889, J$.R(5108881, 'curve', curve, false, false), 'h'), h, false, false);
                                if (J$.C(273832, J$.U(588386, '!', J$.R(5108905, 'h', h, false, false)))) {
                                    h = J$.W(5108945, 'h', J$.M(5108937, J$.R(5108913, 'Buffer', Buffer, false, true), 'from', false)(J$.T(5108929, [J$.T(5108921, 1, 22, false)], 10, false)), h, false, false);
                                }
                                J$.M(5108993, J$.R(5108953, 'der', der, false, false), 'writeBuffer', false)(J$.R(5108961, 'h', h, false, false), J$.G(5108985, J$.G(5108977, J$.R(5108969, 'asn1', asn1, false, true), 'Ber'), 'Integer'));
                                J$.M(5109009, J$.R(5109001, 'der', der, false, false), 'endSequence', false)();
                            }
                        } catch (J$e) {
                            J$.Ex(5110929, J$e);
                        } finally {
                            if (J$.Fr(5110937))
                                continue jalangiLabel21;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function writePkcs8ECDSAPublic(key, der) {
                jalangiLabel22:
                    while (true) {
                        try {
                            J$.Fe(5109241, arguments.callee, this, arguments);
                            arguments = J$.N(5109249, 'arguments', arguments, true, false, false);
                            key = J$.N(5109257, 'key', key, true, false, false);
                            der = J$.N(5109265, 'der', der, true, false, false);
                            J$.N(5109273, 'Q', Q, false, false, false);
                            J$.F(5109105, J$.R(5109081, 'writeECDSACurve', writeECDSACurve, false, true), false)(J$.R(5109089, 'key', key, false, false), J$.R(5109097, 'der', der, false, false));
                            J$.M(5109121, J$.R(5109113, 'der', der, false, false), 'endSequence', false)();
                            var Q = J$.W(5109185, 'Q', J$.M(5109177, J$.R(5109129, 'utils', utils, false, true), 'ecNormalize', false)(J$.G(5109161, J$.G(5109153, J$.G(5109145, J$.R(5109137, 'key', key, false, false), 'part'), 'Q'), 'data'), J$.T(5109169, true, 23, false)), Q, false, false);
                            J$.M(5109233, J$.R(5109193, 'der', der, false, false), 'writeBuffer', false)(J$.R(5109201, 'Q', Q, false, false), J$.G(5109225, J$.G(5109217, J$.R(5109209, 'asn1', asn1, false, true), 'Ber'), 'BitString'));
                        } catch (J$e) {
                            J$.Ex(5110945, J$e);
                        } finally {
                            if (J$.Fr(5110953))
                                continue jalangiLabel22;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function writePkcs8ECDSAPrivate(key, der) {
                jalangiLabel23:
                    while (true) {
                        try {
                            J$.Fe(5109729, arguments.callee, this, arguments);
                            arguments = J$.N(5109737, 'arguments', arguments, true, false, false);
                            key = J$.N(5109745, 'key', key, true, false, false);
                            der = J$.N(5109753, 'der', der, true, false, false);
                            J$.N(5109761, 'version', version, false, false, false);
                            J$.N(5109769, 'Q', Q, false, false, false);
                            J$.F(5109305, J$.R(5109281, 'writeECDSACurve', writeECDSACurve, false, true), false)(J$.R(5109289, 'key', key, false, false), J$.R(5109297, 'der', der, false, false));
                            J$.M(5109321, J$.R(5109313, 'der', der, false, false), 'endSequence', false)();
                            J$.M(5109361, J$.R(5109329, 'der', der, false, false), 'startSequence', false)(J$.G(5109353, J$.G(5109345, J$.R(5109337, 'asn1', asn1, false, true), 'Ber'), 'OctetString'));
                            J$.M(5109377, J$.R(5109369, 'der', der, false, false), 'startSequence', false)();
                            var version = J$.W(5109417, 'version', J$.M(5109409, J$.R(5109385, 'Buffer', Buffer, false, true), 'from', false)(J$.T(5109401, [J$.T(5109393, 1, 22, false)], 10, false)), version, false, false);
                            J$.M(5109465, J$.R(5109425, 'der', der, false, false), 'writeBuffer', false)(J$.R(5109433, 'version', version, false, false), J$.G(5109457, J$.G(5109449, J$.R(5109441, 'asn1', asn1, false, true), 'Ber'), 'Integer'));
                            J$.M(5109537, J$.R(5109473, 'der', der, false, false), 'writeBuffer', false)(J$.G(5109505, J$.G(5109497, J$.G(5109489, J$.R(5109481, 'key', key, false, false), 'part'), 'd'), 'data'), J$.G(5109529, J$.G(5109521, J$.R(5109513, 'asn1', asn1, false, true), 'Ber'), 'OctetString'));
                            J$.M(5109561, J$.R(5109545, 'der', der, false, false), 'startSequence', false)(J$.T(5109553, 161, 22, false));
                            var Q = J$.W(5109625, 'Q', J$.M(5109617, J$.R(5109569, 'utils', utils, false, true), 'ecNormalize', false)(J$.G(5109601, J$.G(5109593, J$.G(5109585, J$.R(5109577, 'key', key, false, false), 'part'), 'Q'), 'data'), J$.T(5109609, true, 23, false)), Q, false, false);
                            J$.M(5109673, J$.R(5109633, 'der', der, false, false), 'writeBuffer', false)(J$.R(5109641, 'Q', Q, false, false), J$.G(5109665, J$.G(5109657, J$.R(5109649, 'asn1', asn1, false, true), 'Ber'), 'BitString'));
                            J$.M(5109689, J$.R(5109681, 'der', der, false, false), 'endSequence', false)();
                            J$.M(5109705, J$.R(5109697, 'der', der, false, false), 'endSequence', false)();
                            J$.M(5109721, J$.R(5109713, 'der', der, false, false), 'endSequence', false)();
                        } catch (J$e) {
                            J$.Ex(5110961, J$e);
                        } finally {
                            if (J$.Fr(5110969))
                                continue jalangiLabel23;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function writePkcs8EdDSAPublic(key, der) {
                jalangiLabel24:
                    while (true) {
                        try {
                            J$.Fe(5109849, arguments.callee, this, arguments);
                            arguments = J$.N(5109857, 'arguments', arguments, true, false, false);
                            key = J$.N(5109865, 'key', key, true, false, false);
                            der = J$.N(5109873, 'der', der, true, false, false);
                            J$.M(5109785, J$.R(5109777, 'der', der, false, false), 'endSequence', false)();
                            J$.M(5109841, J$.R(5109793, 'utils', utils, false, true), 'writeBitString', false)(J$.R(5109801, 'der', der, false, false), J$.G(5109833, J$.G(5109825, J$.G(5109817, J$.R(5109809, 'key', key, false, false), 'part'), 'A'), 'data'));
                        } catch (J$e) {
                            J$.Ex(5110977, J$e);
                        } finally {
                            if (J$.Fr(5110985))
                                continue jalangiLabel24;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function writePkcs8EdDSAPrivate(key, der) {
                jalangiLabel25:
                    while (true) {
                        try {
                            J$.Fe(5110065, arguments.callee, this, arguments);
                            arguments = J$.N(5110073, 'arguments', arguments, true, false, false);
                            key = J$.N(5110081, 'key', key, true, false, false);
                            der = J$.N(5110089, 'der', der, true, false, false);
                            J$.N(5110097, 'k', k, false, false, false);
                            J$.M(5109889, J$.R(5109881, 'der', der, false, false), 'endSequence', false)();
                            var k = J$.W(5109953, 'k', J$.M(5109945, J$.R(5109897, 'utils', utils, false, true), 'mpNormalize', false)(J$.G(5109929, J$.G(5109921, J$.G(5109913, J$.R(5109905, 'key', key, false, false), 'part'), 'k'), 'data'), J$.T(5109937, true, 23, false)), k, false, false);
                            J$.M(5109993, J$.R(5109961, 'der', der, false, false), 'startSequence', false)(J$.G(5109985, J$.G(5109977, J$.R(5109969, 'asn1', asn1, false, true), 'Ber'), 'OctetString'));
                            J$.M(5110041, J$.R(5110001, 'der', der, false, false), 'writeBuffer', false)(J$.R(5110009, 'k', k, false, false), J$.G(5110033, J$.G(5110025, J$.R(5110017, 'asn1', asn1, false, true), 'Ber'), 'OctetString'));
                            J$.M(5110057, J$.R(5110049, 'der', der, false, false), 'endSequence', false)();
                        } catch (J$e) {
                            J$.Ex(5110993, J$e);
                        } finally {
                            if (J$.Fr(5111001))
                                continue jalangiLabel25;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(5110113, 'assert', assert, false, false, false);
            J$.N(5110121, 'asn1', asn1, false, false, false);
            J$.N(5110129, 'Buffer', Buffer, false, false, false);
            J$.N(5110137, 'algs', algs, false, false, false);
            J$.N(5110145, 'utils', utils, false, false, false);
            J$.N(5110153, 'Key', Key, false, false, false);
            J$.N(5110161, 'PrivateKey', PrivateKey, false, false, false);
            J$.N(5110169, 'pem', pem, false, false, false);
            read = J$.N(5110185, 'read', J$.T(5110177, read, 12, false), true, false, false);
            write = J$.N(5110201, 'write', J$.T(5110193, write, 12, false), true, false, false);
            readMPInt = J$.N(5110217, 'readMPInt', J$.T(5110209, readMPInt, 12, false), true, false, false);
            readPkcs8 = J$.N(5110233, 'readPkcs8', J$.T(5110225, readPkcs8, 12, false), true, false, false);
            readPkcs8RSAPublic = J$.N(5110249, 'readPkcs8RSAPublic', J$.T(5110241, readPkcs8RSAPublic, 12, false), true, false, false);
            readPkcs8RSAPrivate = J$.N(5110265, 'readPkcs8RSAPrivate', J$.T(5110257, readPkcs8RSAPrivate, 12, false), true, false, false);
            readPkcs8DSAPublic = J$.N(5110281, 'readPkcs8DSAPublic', J$.T(5110273, readPkcs8DSAPublic, 12, false), true, false, false);
            readPkcs8DSAPrivate = J$.N(5110297, 'readPkcs8DSAPrivate', J$.T(5110289, readPkcs8DSAPrivate, 12, false), true, false, false);
            readECDSACurve = J$.N(5110313, 'readECDSACurve', J$.T(5110305, readECDSACurve, 12, false), true, false, false);
            readPkcs8ECDSAPrivate = J$.N(5110329, 'readPkcs8ECDSAPrivate', J$.T(5110321, readPkcs8ECDSAPrivate, 12, false), true, false, false);
            readPkcs8ECDSAPublic = J$.N(5110345, 'readPkcs8ECDSAPublic', J$.T(5110337, readPkcs8ECDSAPublic, 12, false), true, false, false);
            readPkcs8EdDSAPublic = J$.N(5110361, 'readPkcs8EdDSAPublic', J$.T(5110353, readPkcs8EdDSAPublic, 12, false), true, false, false);
            readPkcs8X25519Public = J$.N(5110377, 'readPkcs8X25519Public', J$.T(5110369, readPkcs8X25519Public, 12, false), true, false, false);
            readPkcs8EdDSAPrivate = J$.N(5110393, 'readPkcs8EdDSAPrivate', J$.T(5110385, readPkcs8EdDSAPrivate, 12, false), true, false, false);
            readPkcs8X25519Private = J$.N(5110409, 'readPkcs8X25519Private', J$.T(5110401, readPkcs8X25519Private, 12, false), true, false, false);
            pkcs8ToBuffer = J$.N(5110425, 'pkcs8ToBuffer', J$.T(5110417, pkcs8ToBuffer, 12, false), true, false, false);
            writePkcs8 = J$.N(5110441, 'writePkcs8', J$.T(5110433, writePkcs8, 12, false), true, false, false);
            writePkcs8RSAPrivate = J$.N(5110457, 'writePkcs8RSAPrivate', J$.T(5110449, writePkcs8RSAPrivate, 12, false), true, false, false);
            writePkcs8RSAPublic = J$.N(5110473, 'writePkcs8RSAPublic', J$.T(5110465, writePkcs8RSAPublic, 12, false), true, false, false);
            writePkcs8DSAPrivate = J$.N(5110489, 'writePkcs8DSAPrivate', J$.T(5110481, writePkcs8DSAPrivate, 12, false), true, false, false);
            writePkcs8DSAPublic = J$.N(5110505, 'writePkcs8DSAPublic', J$.T(5110497, writePkcs8DSAPublic, 12, false), true, false, false);
            writeECDSACurve = J$.N(5110521, 'writeECDSACurve', J$.T(5110513, writeECDSACurve, 12, false), true, false, false);
            writePkcs8ECDSAPublic = J$.N(5110537, 'writePkcs8ECDSAPublic', J$.T(5110529, writePkcs8ECDSAPublic, 12, false), true, false, false);
            writePkcs8ECDSAPrivate = J$.N(5110553, 'writePkcs8ECDSAPrivate', J$.T(5110545, writePkcs8ECDSAPrivate, 12, false), true, false, false);
            writePkcs8EdDSAPublic = J$.N(5110569, 'writePkcs8EdDSAPublic', J$.T(5110561, writePkcs8EdDSAPublic, 12, false), true, false, false);
            writePkcs8EdDSAPrivate = J$.N(5110585, 'writePkcs8EdDSAPrivate', J$.T(5110577, writePkcs8EdDSAPrivate, 12, false), true, false, false);
            J$.P(5097097, J$.I(typeof module === 'undefined' ? module = J$.R(5097025, 'module', undefined, true, true) : module = J$.R(5097025, 'module', module, true, true)), 'exports', J$.T(5097089, {
                read: J$.R(5097033, 'read', read, false, true),
                readPkcs8: J$.R(5097041, 'readPkcs8', readPkcs8, false, true),
                write: J$.R(5097049, 'write', write, false, true),
                writePkcs8: J$.R(5097057, 'writePkcs8', writePkcs8, false, true),
                pkcs8ToBuffer: J$.R(5097065, 'pkcs8ToBuffer', pkcs8ToBuffer, false, true),
                readECDSACurve: J$.R(5097073, 'readECDSACurve', readECDSACurve, false, true),
                writeECDSACurve: J$.R(5097081, 'writeECDSACurve', writeECDSACurve, false, true)
            }, 11, false));
            var assert = J$.W(5097129, 'assert', J$.F(5097121, J$.I(typeof require === 'undefined' ? require = J$.R(5097105, 'require', undefined, true, true) : require = J$.R(5097105, 'require', require, true, true)), false)(J$.T(5097113, 'assert-plus', 21, false)), assert, false, true);
            var asn1 = J$.W(5097161, 'asn1', J$.F(5097153, J$.I(typeof require === 'undefined' ? require = J$.R(5097137, 'require', undefined, true, true) : require = J$.R(5097137, 'require', require, true, true)), false)(J$.T(5097145, 'asn1', 21, false)), asn1, false, true);
            var Buffer = J$.W(5097201, 'Buffer', J$.G(5097193, J$.F(5097185, J$.I(typeof require === 'undefined' ? require = J$.R(5097169, 'require', undefined, true, true) : require = J$.R(5097169, 'require', require, true, true)), false)(J$.T(5097177, 'safer-buffer', 21, false)), 'Buffer'), Buffer, false, true);
            var algs = J$.W(5097233, 'algs', J$.F(5097225, J$.I(typeof require === 'undefined' ? require = J$.R(5097209, 'require', undefined, true, true) : require = J$.R(5097209, 'require', require, true, true)), false)(J$.T(5097217, '../algs', 21, false)), algs, false, true);
            var utils = J$.W(5097265, 'utils', J$.F(5097257, J$.I(typeof require === 'undefined' ? require = J$.R(5097241, 'require', undefined, true, true) : require = J$.R(5097241, 'require', require, true, true)), false)(J$.T(5097249, '../utils', 21, false)), utils, false, true);
            var Key = J$.W(5097297, 'Key', J$.F(5097289, J$.I(typeof require === 'undefined' ? require = J$.R(5097273, 'require', undefined, true, true) : require = J$.R(5097273, 'require', require, true, true)), false)(J$.T(5097281, '../key', 21, false)), Key, false, true);
            var PrivateKey = J$.W(5097329, 'PrivateKey', J$.F(5097321, J$.I(typeof require === 'undefined' ? require = J$.R(5097305, 'require', undefined, true, true) : require = J$.R(5097305, 'require', require, true, true)), false)(J$.T(5097313, '../private-key', 21, false)), PrivateKey, false, true);
            var pem = J$.W(5097361, 'pem', J$.F(5097353, J$.I(typeof require === 'undefined' ? require = J$.R(5097337, 'require', undefined, true, true) : require = J$.R(5097337, 'require', require, true, true)), false)(J$.T(5097345, './pem', 21, false)), pem, false, true);
        } catch (J$e) {
            J$.Ex(5111009, J$e);
        } finally {
            if (J$.Sr(5111017))
                continue jalangiLabel26;
            else
                break jalangiLabel26;
        }
    }
// JALANGI DO NOT INSTRUMENT

