J$.noInstrEval = false;
jalangiLabel5:
    while (true) {
        try {
            J$.Se(5087417, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestCouchNode/node_modules/sshpk/lib/formats/pem.js');
            function read(buf, options, forceType) {
                jalangiLabel3:
                    while (true) {
                        try {
                            J$.Fe(5085921, arguments.callee, this, arguments);
                            arguments = J$.N(5085929, 'arguments', arguments, true, false, false);
                            buf = J$.N(5085937, 'buf', buf, true, false, false);
                            options = J$.N(5085945, 'options', options, true, false, false);
                            forceType = J$.N(5085953, 'forceType', forceType, true, false, false);
                            J$.N(5085961, 'input', input, false, false, false);
                            J$.N(5085969, 'lines', lines, false, false, false);
                            J$.N(5085977, 'm', m, false, false, false);
                            J$.N(5085985, 'si', si, false, false, false);
                            J$.N(5085993, 'm2', m2, false, false, false);
                            J$.N(5086001, 'ei', ei, false, false, false);
                            J$.N(5086009, 'type', type, false, false, false);
                            J$.N(5086017, 'alg', alg, false, false, false);
                            J$.N(5086025, 'headers', headers, false, false, false);
                            J$.N(5086033, 'cipher', cipher, false, false, false);
                            J$.N(5086041, 'key', key, false, false, false);
                            J$.N(5086049, 'iv', iv, false, false, false);
                            J$.N(5086057, 'parts', parts, false, false, false);
                            J$.N(5086065, 'eder', eder, false, false, false);
                            J$.N(5086073, 'pbesEnd', pbesEnd, false, false, false);
                            J$.N(5086081, 'method', method, false, false, false);
                            J$.N(5086089, 'kdfEnd', kdfEnd, false, false, false);
                            J$.N(5086097, 'kdfOid', kdfOid, false, false, false);
                            J$.N(5086105, 'salt', salt, false, false, false);
                            J$.N(5086113, 'iterations', iterations, false, false, false);
                            J$.N(5086121, 'hashAlg', hashAlg, false, false, false);
                            J$.N(5086129, 'hashAlgOid', hashAlgOid, false, false, false);
                            J$.N(5086137, 'cipherOid', cipherOid, false, false, false);
                            J$.N(5086145, 'cinfo', cinfo, false, false, false);
                            J$.N(5086153, 'cipherStream', cipherStream, false, false, false);
                            J$.N(5086161, 'chunk', chunk, false, false, false);
                            J$.N(5086169, 'chunks', chunks, false, false, false);
                            J$.N(5086177, 'der', der, false, false, false);
                            var input = J$.W(5082441, 'input', J$.R(5082433, 'buf', buf, false, false), input, false, false);
                            if (J$.C(272896, J$.B(587362, '!==', J$.U(587354, 'typeof', J$.R(5082449, 'buf', buf, false, false)), J$.T(5082457, 'string', 21, false)))) {
                                J$.M(5082489, J$.R(5082465, 'assert', assert, false, true), 'buffer', false)(J$.R(5082473, 'buf', buf, false, false), J$.T(5082481, 'buf', 21, false));
                                buf = J$.W(5082521, 'buf', J$.M(5082513, J$.R(5082497, 'buf', buf, false, false), 'toString', false)(J$.T(5082505, 'ascii', 21, false)), buf, false, false);
                            }
                            var lines = J$.W(5082561, 'lines', J$.M(5082553, J$.M(5082537, J$.R(5082529, 'buf', buf, false, false), 'trim', false)(), 'split', false)(J$.T(5082545, /[\r\n]+/g, 14, false)), lines, false, false);
                            var m;
                            var si = J$.W(5082577, 'si', J$.U(587370, '-', J$.T(5082569, 1, 22, false)), si, false, false);
                            while (J$.C(272912, J$.C(272904, J$.U(587378, '!', J$.R(5082585, 'm', m, false, false))) ? J$.B(587386, '<', J$.R(5082593, 'si', si, false, false), J$.G(5082609, J$.R(5082601, 'lines', lines, false, false), 'length')) : J$._())) {
                                m = J$.W(5082665, 'm', J$.M(5082657, J$.G(5082641, J$.R(5082617, 'lines', lines, false, false), si = J$.W(5082633, 'si', J$.B(587402, '+', J$.U(587394, '+', J$.R(5082625, 'si', si, false, false)), 1), si, false, false)), 'match', false)(J$.T(5082649, /[-]+[ ]*BEGIN ([A-Z0-9][A-Za-z0-9]+ )?(PUBLIC|PRIVATE) KEY[ ]*[-]+/, 14, false)), m, false, false);
                            }
                            J$.M(5082697, J$.R(5082673, 'assert', assert, false, true), 'ok', false)(J$.R(5082681, 'm', m, false, false), J$.T(5082689, 'invalid PEM header', 21, false));
                            var m2;
                            var ei = J$.W(5082721, 'ei', J$.G(5082713, J$.R(5082705, 'lines', lines, false, false), 'length'), ei, false, false);
                            while (J$.C(272928, J$.C(272920, J$.U(587410, '!', J$.R(5082729, 'm2', m2, false, false))) ? J$.B(587418, '>', J$.R(5082737, 'ei', ei, false, false), J$.T(5082745, 0, 22, false)) : J$._())) {
                                m2 = J$.W(5082801, 'm2', J$.M(5082793, J$.G(5082777, J$.R(5082753, 'lines', lines, false, false), ei = J$.W(5082769, 'ei', J$.B(587434, '-', J$.U(587426, '+', J$.R(5082761, 'ei', ei, false, false)), 1), ei, false, false)), 'match', false)(J$.T(5082785, /[-]+[ ]*END ([A-Z0-9][A-Za-z0-9]+ )?(PUBLIC|PRIVATE) KEY[ ]*[-]+/, 14, false)), m2, false, false);
                            }
                            J$.M(5082833, J$.R(5082809, 'assert', assert, false, true), 'ok', false)(J$.R(5082817, 'm2', m2, false, false), J$.T(5082825, 'invalid PEM footer', 21, false));
                            J$.M(5082897, J$.R(5082841, 'assert', assert, false, true), 'equal', false)(J$.G(5082865, J$.R(5082849, 'm', m, false, false), J$.T(5082857, 2, 22, false)), J$.G(5082889, J$.R(5082873, 'm2', m2, false, false), J$.T(5082881, 2, 22, false)));
                            var type = J$.W(5082937, 'type', J$.M(5082929, J$.G(5082921, J$.R(5082905, 'm', m, false, false), J$.T(5082913, 2, 22, false)), 'toLowerCase', false)(), type, false, false);
                            var alg;
                            if (J$.C(272936, J$.G(5082961, J$.R(5082945, 'm', m, false, false), J$.T(5082953, 1, 22, false)))) {
                                J$.M(5083033, J$.R(5082969, 'assert', assert, false, true), 'equal', false)(J$.G(5082993, J$.R(5082977, 'm', m, false, false), J$.T(5082985, 1, 22, false)), J$.G(5083017, J$.R(5083001, 'm2', m2, false, false), J$.T(5083009, 1, 22, false)), J$.T(5083025, 'PEM header and footer mismatch', 21, false));
                                alg = J$.W(5083073, 'alg', J$.M(5083065, J$.G(5083057, J$.R(5083041, 'm', m, false, false), J$.T(5083049, 1, 22, false)), 'trim', false)(), alg, false, false);
                            }
                            lines = J$.W(5083121, 'lines', J$.M(5083113, J$.R(5083081, 'lines', lines, false, false), 'slice', false)(J$.R(5083089, 'si', si, false, false), J$.B(587442, '+', J$.R(5083097, 'ei', ei, false, false), J$.T(5083105, 1, 22, false))), lines, false, false);
                            var headers = J$.W(5083137, 'headers', J$.T(5083129, {}, 11, false), headers, false, false);
                            while (J$.C(272952, J$.T(5083145, true, 23, false))) {
                                lines = J$.W(5083177, 'lines', J$.M(5083169, J$.R(5083153, 'lines', lines, false, false), 'slice', false)(J$.T(5083161, 1, 22, false)), lines, false, false);
                                m = J$.W(5083225, 'm', J$.M(5083217, J$.G(5083201, J$.R(5083185, 'lines', lines, false, false), J$.T(5083193, 0, 22, false)), 'match', false)(J$.T(5083209, /^([A-Za-z0-9-]+): (.+)$/, 14, false)), m, false, false);
                                if (J$.C(272944, J$.U(587450, '!', J$.R(5083233, 'm', m, false, false))))
                                    break;
                                J$.P(5083305, J$.R(5083241, 'headers', headers, false, false), J$.M(5083273, J$.G(5083265, J$.R(5083249, 'm', m, false, false), J$.T(5083257, 1, 22, false)), 'toLowerCase', false)(), J$.G(5083297, J$.R(5083281, 'm', m, false, false), J$.T(5083289, 2, 22, false)));
                            }
                            lines = J$.W(5083361, 'lines', J$.M(5083353, J$.M(5083337, J$.R(5083313, 'lines', lines, false, false), 'slice', false)(J$.T(5083321, 0, 22, false), J$.U(587458, '-', J$.T(5083329, 1, 22, false))), 'join', false)(J$.T(5083345, '', 21, false)), lines, false, false);
                            buf = J$.W(5083401, 'buf', J$.M(5083393, J$.R(5083369, 'Buffer', Buffer, false, true), 'from', false)(J$.R(5083377, 'lines', lines, false, false), J$.T(5083385, 'base64', 21, false)), buf, false, false);
                            var cipher, key, iv;
                            if (J$.C(272992, J$.G(5083425, J$.R(5083409, 'headers', headers, false, false), J$.T(5083417, 'proc-type', 21, false)))) {
                                var parts = J$.W(5083473, 'parts', J$.M(5083465, J$.G(5083449, J$.R(5083433, 'headers', headers, false, false), J$.T(5083441, 'proc-type', 21, false)), 'split', false)(J$.T(5083457, ',', 21, false)), parts, false, false);
                                if (J$.C(272984, J$.C(272960, J$.B(587466, '===', J$.G(5083497, J$.R(5083481, 'parts', parts, false, false), J$.T(5083489, 0, 22, false)), J$.T(5083505, '4', 21, false))) ? J$.B(587474, '===', J$.G(5083529, J$.R(5083513, 'parts', parts, false, false), J$.T(5083521, 1, 22, false)), J$.T(5083537, 'ENCRYPTED', 21, false)) : J$._())) {
                                    if (J$.C(272968, J$.B(587490, '===', J$.U(587482, 'typeof', J$.G(5083553, J$.R(5083545, 'options', options, false, false), 'passphrase')), J$.T(5083561, 'string', 21, false)))) {
                                        J$.P(5083617, J$.R(5083569, 'options', options, false, false), 'passphrase', J$.M(5083609, J$.R(5083577, 'Buffer', Buffer, false, true), 'from', false)(J$.G(5083593, J$.R(5083585, 'options', options, false, false), 'passphrase'), J$.T(5083601, 'utf-8', 21, false)));
                                    }
                                    if (J$.C(272976, J$.U(587498, '!', J$.M(5083649, J$.R(5083625, 'Buffer', Buffer, false, true), 'isBuffer', false)(J$.G(5083641, J$.R(5083633, 'options', options, false, false), 'passphrase'))))) {
                                        throw J$.M(5083689, J$.R(5083657, 'errors', errors, false, true), 'KeyEncryptedError', true)(J$.G(5083673, J$.R(5083665, 'options', options, false, false), 'filename'), J$.T(5083681, 'PEM', 21, false));
                                    } else {
                                        parts = J$.W(5083737, 'parts', J$.M(5083729, J$.G(5083713, J$.R(5083697, 'headers', headers, false, false), J$.T(5083705, 'dek-info', 21, false)), 'split', false)(J$.T(5083721, ',', 21, false)), parts, false, false);
                                        J$.M(5083777, J$.R(5083745, 'assert', assert, false, true), 'ok', false)(J$.B(587506, '===', J$.G(5083761, J$.R(5083753, 'parts', parts, false, false), 'length'), J$.T(5083769, 2, 22, false)));
                                        cipher = J$.W(5083817, 'cipher', J$.M(5083809, J$.G(5083801, J$.R(5083785, 'parts', parts, false, false), J$.T(5083793, 0, 22, false)), 'toLowerCase', false)(), cipher, false, false);
                                        iv = J$.W(5083873, 'iv', J$.M(5083865, J$.R(5083825, 'Buffer', Buffer, false, true), 'from', false)(J$.G(5083849, J$.R(5083833, 'parts', parts, false, false), J$.T(5083841, 1, 22, false)), J$.T(5083857, 'hex', 21, false)), iv, false, false);
                                        key = J$.W(5083945, 'key', J$.G(5083937, J$.M(5083929, J$.R(5083881, 'utils', utils, false, true), 'opensslKeyDeriv', false)(J$.R(5083889, 'cipher', cipher, false, false), J$.R(5083897, 'iv', iv, false, false), J$.G(5083913, J$.R(5083905, 'options', options, false, false), 'passphrase'), J$.T(5083921, 1, 22, false)), 'key'), key, false, false);
                                    }
                                }
                            }
                            if (J$.C(273064, J$.C(273000, J$.R(5083953, 'alg', alg, false, false)) ? J$.B(587514, '===', J$.M(5083969, J$.R(5083961, 'alg', alg, false, false), 'toLowerCase', false)(), J$.T(5083977, 'encrypted', 21, false)) : J$._())) {
                                var eder = J$.W(5084009, 'eder', J$.M(5084001, J$.R(5083985, 'asn1', asn1, false, true), 'BerReader', true)(J$.R(5083993, 'buf', buf, false, false)), eder, false, false);
                                var pbesEnd;
                                J$.M(5084025, J$.R(5084017, 'eder', eder, false, false), 'readSequence', false)();
                                J$.M(5084041, J$.R(5084033, 'eder', eder, false, false), 'readSequence', false)();
                                pbesEnd = J$.W(5084081, 'pbesEnd', J$.B(587522, '+', J$.G(5084057, J$.R(5084049, 'eder', eder, false, false), 'offset'), J$.G(5084073, J$.R(5084065, 'eder', eder, false, false), 'length')), pbesEnd, false, false);
                                var method = J$.W(5084105, 'method', J$.M(5084097, J$.R(5084089, 'eder', eder, false, false), 'readOID', false)(), method, false, false);
                                if (J$.C(273008, J$.B(587530, '!==', J$.R(5084113, 'method', method, false, false), J$.R(5084121, 'OID_PBES2', OID_PBES2, false, true)))) {
                                    throw J$.F(5084161, J$.I(typeof Error === 'undefined' ? Error = J$.R(5084129, 'Error', undefined, true, true) : Error = J$.R(5084129, 'Error', Error, true, true)), true)(J$.B(587546, '+', J$.B(587538, '+', J$.T(5084137, 'Unsupported PEM/PKCS8 encryption ', 21, false), J$.T(5084145, 'scheme: ', 21, false)), J$.R(5084153, 'method', method, false, false)));
                                }
                                J$.M(5084177, J$.R(5084169, 'eder', eder, false, false), 'readSequence', false)();
                                J$.M(5084193, J$.R(5084185, 'eder', eder, false, false), 'readSequence', false)();
                                var kdfEnd = J$.W(5084233, 'kdfEnd', J$.B(587554, '+', J$.G(5084209, J$.R(5084201, 'eder', eder, false, false), 'offset'), J$.G(5084225, J$.R(5084217, 'eder', eder, false, false), 'length')), kdfEnd, false, false);
                                var kdfOid = J$.W(5084257, 'kdfOid', J$.M(5084249, J$.R(5084241, 'eder', eder, false, false), 'readOID', false)(), kdfOid, false, false);
                                if (J$.C(273016, J$.B(587562, '!==', J$.R(5084265, 'kdfOid', kdfOid, false, false), J$.R(5084273, 'OID_PBKDF2', OID_PBKDF2, false, true))))
                                    throw J$.F(5084305, J$.I(typeof Error === 'undefined' ? Error = J$.R(5084281, 'Error', undefined, true, true) : Error = J$.R(5084281, 'Error', Error, true, true)), true)(J$.B(587570, '+', J$.T(5084289, 'Unsupported PBES2 KDF: ', 21, false), J$.R(5084297, 'kdfOid', kdfOid, false, false)));
                                J$.M(5084321, J$.R(5084313, 'eder', eder, false, false), 'readSequence', false)();
                                var salt = J$.W(5084377, 'salt', J$.M(5084369, J$.R(5084329, 'eder', eder, false, false), 'readString', false)(J$.G(5084353, J$.G(5084345, J$.R(5084337, 'asn1', asn1, false, true), 'Ber'), 'OctetString'), J$.T(5084361, true, 23, false)), salt, false, false);
                                var iterations = J$.W(5084401, 'iterations', J$.M(5084393, J$.R(5084385, 'eder', eder, false, false), 'readInt', false)(), iterations, false, false);
                                var hashAlg = J$.W(5084417, 'hashAlg', J$.T(5084409, 'sha1', 21, false), hashAlg, false, false);
                                if (J$.C(273032, J$.B(587578, '<', J$.G(5084433, J$.R(5084425, 'eder', eder, false, false), 'offset'), J$.R(5084441, 'kdfEnd', kdfEnd, false, false)))) {
                                    J$.M(5084457, J$.R(5084449, 'eder', eder, false, false), 'readSequence', false)();
                                    var hashAlgOid = J$.W(5084481, 'hashAlgOid', J$.M(5084473, J$.R(5084465, 'eder', eder, false, false), 'readOID', false)(), hashAlgOid, false, false);
                                    hashAlg = J$.W(5084513, 'hashAlg', J$.G(5084505, J$.R(5084489, 'OID_TO_HASH', OID_TO_HASH, false, true), J$.R(5084497, 'hashAlgOid', hashAlgOid, false, false)), hashAlg, false, false);
                                    if (J$.C(273024, J$.B(587586, '===', J$.R(5084521, 'hashAlg', hashAlg, false, false), J$.T(5084529, undefined, 24, false)))) {
                                        throw J$.F(5084561, J$.I(typeof Error === 'undefined' ? Error = J$.R(5084537, 'Error', undefined, true, true) : Error = J$.R(5084537, 'Error', Error, true, true)), true)(J$.B(587594, '+', J$.T(5084545, 'Unsupported PBKDF2 hash: ', 21, false), J$.R(5084553, 'hashAlgOid', hashAlgOid, false, false)));
                                    }
                                }
                                J$.P(5084585, J$.R(5084569, 'eder', eder, false, false), '_offset', J$.R(5084577, 'kdfEnd', kdfEnd, false, false));
                                J$.M(5084601, J$.R(5084593, 'eder', eder, false, false), 'readSequence', false)();
                                var cipherOid = J$.W(5084625, 'cipherOid', J$.M(5084617, J$.R(5084609, 'eder', eder, false, false), 'readOID', false)(), cipherOid, false, false);
                                cipher = J$.W(5084657, 'cipher', J$.G(5084649, J$.R(5084633, 'OID_TO_CIPHER', OID_TO_CIPHER, false, true), J$.R(5084641, 'cipherOid', cipherOid, false, false)), cipher, false, false);
                                if (J$.C(273040, J$.B(587602, '===', J$.R(5084665, 'cipher', cipher, false, false), J$.T(5084673, undefined, 24, false)))) {
                                    throw J$.F(5084705, J$.I(typeof Error === 'undefined' ? Error = J$.R(5084681, 'Error', undefined, true, true) : Error = J$.R(5084681, 'Error', Error, true, true)), true)(J$.B(587610, '+', J$.T(5084689, 'Unsupported PBES2 cipher: ', 21, false), J$.R(5084697, 'cipherOid', cipherOid, false, false)));
                                }
                                iv = J$.W(5084761, 'iv', J$.M(5084753, J$.R(5084713, 'eder', eder, false, false), 'readString', false)(J$.G(5084737, J$.G(5084729, J$.R(5084721, 'asn1', asn1, false, true), 'Ber'), 'OctetString'), J$.T(5084745, true, 23, false)), iv, false, false);
                                J$.P(5084785, J$.R(5084769, 'eder', eder, false, false), '_offset', J$.R(5084777, 'pbesEnd', pbesEnd, false, false));
                                buf = J$.W(5084841, 'buf', J$.M(5084833, J$.R(5084793, 'eder', eder, false, false), 'readString', false)(J$.G(5084817, J$.G(5084809, J$.R(5084801, 'asn1', asn1, false, true), 'Ber'), 'OctetString'), J$.T(5084825, true, 23, false)), buf, false, false);
                                if (J$.C(273048, J$.B(587626, '===', J$.U(587618, 'typeof', J$.G(5084857, J$.R(5084849, 'options', options, false, false), 'passphrase')), J$.T(5084865, 'string', 21, false)))) {
                                    J$.P(5084921, J$.R(5084873, 'options', options, false, false), 'passphrase', J$.M(5084913, J$.R(5084881, 'Buffer', Buffer, false, true), 'from', false)(J$.G(5084897, J$.R(5084889, 'options', options, false, false), 'passphrase'), J$.T(5084905, 'utf-8', 21, false)));
                                }
                                if (J$.C(273056, J$.U(587634, '!', J$.M(5084953, J$.R(5084929, 'Buffer', Buffer, false, true), 'isBuffer', false)(J$.G(5084945, J$.R(5084937, 'options', options, false, false), 'passphrase'))))) {
                                    throw J$.M(5084993, J$.R(5084961, 'errors', errors, false, true), 'KeyEncryptedError', true)(J$.G(5084977, J$.R(5084969, 'options', options, false, false), 'filename'), J$.T(5084985, 'PEM', 21, false));
                                }
                                var cinfo = J$.W(5085025, 'cinfo', J$.M(5085017, J$.R(5085001, 'utils', utils, false, true), 'opensshCipherInfo', false)(J$.R(5085009, 'cipher', cipher, false, false)), cinfo, false, false);
                                cipher = J$.W(5085049, 'cipher', J$.G(5085041, J$.R(5085033, 'cinfo', cinfo, false, false), 'opensslName'), cipher, false, false);
                                key = J$.W(5085129, 'key', J$.M(5085121, J$.R(5085057, 'utils', utils, false, true), 'pbkdf2', false)(J$.R(5085065, 'hashAlg', hashAlg, false, false), J$.R(5085073, 'salt', salt, false, false), J$.R(5085081, 'iterations', iterations, false, false), J$.G(5085097, J$.R(5085089, 'cinfo', cinfo, false, false), 'keySize'), J$.G(5085113, J$.R(5085105, 'options', options, false, false), 'passphrase')), key, false, false);
                                alg = J$.W(5085145, 'alg', J$.T(5085137, undefined, 24, false), alg, false, false);
                            }
                            if (J$.C(273104, J$.C(273080, J$.C(273072, J$.R(5085153, 'cipher', cipher, false, false)) ? J$.R(5085161, 'key', key, false, false) : J$._()) ? J$.R(5085169, 'iv', iv, false, false) : J$._())) {
                                var cipherStream = J$.W(5085217, 'cipherStream', J$.M(5085209, J$.R(5085177, 'crypto', crypto, false, true), 'createDecipheriv', false)(J$.R(5085185, 'cipher', cipher, false, false), J$.R(5085193, 'key', key, false, false), J$.R(5085201, 'iv', iv, false, false)), cipherStream, false, false);
                                var chunk, chunks = J$.W(5085233, 'chunks', J$.T(5085225, [], 10, false), chunks, false, false);
                                J$.M(5085369, J$.R(5085241, 'cipherStream', cipherStream, false, false), 'once', false)(J$.T(5085249, 'error', 21, false), J$.T(5085361, function (e) {
                                    jalangiLabel2:
                                        while (true) {
                                            try {
                                                J$.Fe(5085337, arguments.callee, this, arguments);
                                                arguments = J$.N(5085345, 'arguments', arguments, true, false, false);
                                                e = J$.N(5085353, 'e', e, true, false, false);
                                                if (J$.C(273088, J$.B(587650, '!==', J$.M(5085281, J$.M(5085265, J$.R(5085257, 'e', e, false, false), 'toString', false)(), 'indexOf', false)(J$.T(5085273, 'bad decrypt', 21, false)), J$.U(587642, '-', J$.T(5085289, 1, 22, false))))) {
                                                    throw J$.F(5085321, J$.I(typeof Error === 'undefined' ? Error = J$.R(5085297, 'Error', undefined, true, true) : Error = J$.R(5085297, 'Error', Error, true, true)), true)(J$.B(587658, '+', J$.T(5085305, 'Incorrect passphrase ', 21, false), J$.T(5085313, 'supplied, could not decrypt key', 21, false)));
                                                }
                                                throw J$.R(5085329, 'e', e, false, false);
                                            } catch (J$e) {
                                                J$.Ex(5087641, J$e);
                                            } finally {
                                                if (J$.Fr(5087649))
                                                    continue jalangiLabel2;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false));
                                J$.M(5085393, J$.R(5085377, 'cipherStream', cipherStream, false, false), 'write', false)(J$.R(5085385, 'buf', buf, false, false));
                                J$.M(5085409, J$.R(5085401, 'cipherStream', cipherStream, false, false), 'end', false)();
                                while (J$.C(273096, J$.B(587666, '!==', chunk = J$.W(5085433, 'chunk', J$.M(5085425, J$.R(5085417, 'cipherStream', cipherStream, false, false), 'read', false)(), chunk, false, false), J$.T(5085441, null, 25, false))))
                                    J$.M(5085465, J$.R(5085449, 'chunks', chunks, false, false), 'push', false)(J$.R(5085457, 'chunk', chunk, false, false));
                                buf = J$.W(5085497, 'buf', J$.M(5085489, J$.R(5085473, 'Buffer', Buffer, false, true), 'concat', false)(J$.R(5085481, 'chunks', chunks, false, false)), buf, false, false);
                            }
                            if (J$.C(273120, J$.C(273112, J$.R(5085505, 'alg', alg, false, false)) ? J$.B(587674, '===', J$.M(5085521, J$.R(5085513, 'alg', alg, false, false), 'toLowerCase', false)(), J$.T(5085529, 'openssh', 21, false)) : J$._()))
                                return J$.Rt(5085577, J$.M(5085569, J$.R(5085537, 'sshpriv', sshpriv, false, true), 'readSSHPrivate', false)(J$.R(5085545, 'type', type, false, false), J$.R(5085553, 'buf', buf, false, false), J$.R(5085561, 'options', options, false, false)));
                            if (J$.C(273136, J$.C(273128, J$.R(5085585, 'alg', alg, false, false)) ? J$.B(587682, '===', J$.M(5085601, J$.R(5085593, 'alg', alg, false, false), 'toLowerCase', false)(), J$.T(5085609, 'ssh2', 21, false)) : J$._()))
                                return J$.Rt(5085657, J$.M(5085649, J$.R(5085617, 'rfc4253', rfc4253, false, true), 'readType', false)(J$.R(5085625, 'type', type, false, false), J$.R(5085633, 'buf', buf, false, false), J$.R(5085641, 'options', options, false, false)));
                            var der = J$.W(5085689, 'der', J$.M(5085681, J$.R(5085665, 'asn1', asn1, false, true), 'BerReader', true)(J$.R(5085673, 'buf', buf, false, false)), der, false, false);
                            J$.P(5085713, J$.R(5085697, 'der', der, false, false), 'originalInput', J$.R(5085705, 'input', input, false, false));
                            J$.M(5085729, J$.R(5085721, 'der', der, false, false), 'readSequence', false)();
                            if (J$.C(273160, J$.R(5085737, 'alg', alg, false, false))) {
                                if (J$.C(273144, J$.R(5085745, 'forceType', forceType, false, false)))
                                    J$.M(5085777, J$.R(5085753, 'assert', assert, false, true), 'strictEqual', false)(J$.R(5085761, 'forceType', forceType, false, false), J$.T(5085769, 'pkcs1', 21, false));
                                return J$.Rt(5085825, J$.M(5085817, J$.R(5085785, 'pkcs1', pkcs1, false, true), 'readPkcs1', false)(J$.R(5085793, 'alg', alg, false, false), J$.R(5085801, 'type', type, false, false), J$.R(5085809, 'der', der, false, false)));
                            } else {
                                if (J$.C(273152, J$.R(5085833, 'forceType', forceType, false, false)))
                                    J$.M(5085865, J$.R(5085841, 'assert', assert, false, true), 'strictEqual', false)(J$.R(5085849, 'forceType', forceType, false, false), J$.T(5085857, 'pkcs8', 21, false));
                                return J$.Rt(5085913, J$.M(5085905, J$.R(5085873, 'pkcs8', pkcs8, false, true), 'readPkcs8', false)(J$.R(5085881, 'alg', alg, false, false), J$.R(5085889, 'type', type, false, false), J$.R(5085897, 'der', der, false, false)));
                            }
                        } catch (J$e) {
                            J$.Ex(5087657, J$e);
                        } finally {
                            if (J$.Fr(5087665))
                                continue jalangiLabel3;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function write(key, options, type) {
                jalangiLabel4:
                    while (true) {
                        try {
                            J$.Fe(5087305, arguments.callee, this, arguments);
                            arguments = J$.N(5087313, 'arguments', arguments, true, false, false);
                            key = J$.N(5087321, 'key', key, true, false, false);
                            options = J$.N(5087329, 'options', options, true, false, false);
                            type = J$.N(5087337, 'type', type, true, false, false);
                            J$.N(5087345, 'alg', alg, false, false, false);
                            J$.N(5087353, 'header', header, false, false, false);
                            J$.N(5087361, 'der', der, false, false, false);
                            J$.N(5087369, 'tmp', tmp, false, false, false);
                            J$.N(5087377, 'len', len, false, false, false);
                            J$.N(5087385, 'buf', buf, false, false, false);
                            J$.N(5087393, 'o', o, false, false, false);
                            J$.N(5087401, 'i', i, false, false, false);
                            J$.N(5087409, 'limit', limit, false, false, false);
                            J$.M(5086201, J$.R(5086185, 'assert', assert, false, true), 'object', false)(J$.R(5086193, 'key', key, false, false));
                            var alg = J$.W(5086273, 'alg', J$.G(5086265, J$.T(5086241, {
                                'ecdsa': J$.T(5086209, 'EC', 21, false),
                                'rsa': J$.T(5086217, 'RSA', 21, false),
                                'dsa': J$.T(5086225, 'DSA', 21, false),
                                'ed25519': J$.T(5086233, 'EdDSA', 21, false)
                            }, 11, false), J$.G(5086257, J$.R(5086249, 'key', key, false, false), 'type')), alg, false, false);
                            var header;
                            var der = J$.W(5086297, 'der', J$.M(5086289, J$.R(5086281, 'asn1', asn1, false, true), 'BerWriter', true)(), der, false, false);
                            if (J$.C(273224, J$.M(5086321, J$.R(5086305, 'PrivateKey', PrivateKey, false, true), 'isPrivateKey', false)(J$.R(5086313, 'key', key, false, false)))) {
                                if (J$.C(273184, J$.C(273168, J$.R(5086329, 'type', type, false, false)) ? J$.B(587690, '===', J$.R(5086337, 'type', type, false, false), J$.T(5086345, 'pkcs8', 21, false)) : J$._())) {
                                    header = J$.W(5086361, 'header', J$.T(5086353, 'PRIVATE KEY', 21, false), header, false, false);
                                    J$.M(5086393, J$.R(5086369, 'pkcs8', pkcs8, false, true), 'writePkcs8', false)(J$.R(5086377, 'der', der, false, false), J$.R(5086385, 'key', key, false, false));
                                } else {
                                    if (J$.C(273176, J$.R(5086401, 'type', type, false, false)))
                                        J$.M(5086433, J$.R(5086409, 'assert', assert, false, true), 'strictEqual', false)(J$.R(5086417, 'type', type, false, false), J$.T(5086425, 'pkcs1', 21, false));
                                    header = J$.W(5086457, 'header', J$.B(587698, '+', J$.R(5086441, 'alg', alg, false, false), J$.T(5086449, ' PRIVATE KEY', 21, false)), header, false, false);
                                    J$.M(5086489, J$.R(5086465, 'pkcs1', pkcs1, false, true), 'writePkcs1', false)(J$.R(5086473, 'der', der, false, false), J$.R(5086481, 'key', key, false, false));
                                }
                            } else if (J$.C(273216, J$.M(5086513, J$.R(5086497, 'Key', Key, false, true), 'isKey', false)(J$.R(5086505, 'key', key, false, false)))) {
                                if (J$.C(273208, J$.C(273192, J$.R(5086521, 'type', type, false, false)) ? J$.B(587706, '===', J$.R(5086529, 'type', type, false, false), J$.T(5086537, 'pkcs1', 21, false)) : J$._())) {
                                    header = J$.W(5086561, 'header', J$.B(587714, '+', J$.R(5086545, 'alg', alg, false, false), J$.T(5086553, ' PUBLIC KEY', 21, false)), header, false, false);
                                    J$.M(5086593, J$.R(5086569, 'pkcs1', pkcs1, false, true), 'writePkcs1', false)(J$.R(5086577, 'der', der, false, false), J$.R(5086585, 'key', key, false, false));
                                } else {
                                    if (J$.C(273200, J$.R(5086601, 'type', type, false, false)))
                                        J$.M(5086633, J$.R(5086609, 'assert', assert, false, true), 'strictEqual', false)(J$.R(5086617, 'type', type, false, false), J$.T(5086625, 'pkcs8', 21, false));
                                    header = J$.W(5086649, 'header', J$.T(5086641, 'PUBLIC KEY', 21, false), header, false, false);
                                    J$.M(5086681, J$.R(5086657, 'pkcs8', pkcs8, false, true), 'writePkcs8', false)(J$.R(5086665, 'der', der, false, false), J$.R(5086673, 'key', key, false, false));
                                }
                            } else {
                                throw J$.F(5086705, J$.I(typeof Error === 'undefined' ? Error = J$.R(5086689, 'Error', undefined, true, true) : Error = J$.R(5086689, 'Error', Error, true, true)), true)(J$.T(5086697, 'key is not a Key or PrivateKey', 21, false));
                            }
                            var tmp = J$.W(5086745, 'tmp', J$.M(5086737, J$.G(5086721, J$.R(5086713, 'der', der, false, false), 'buffer'), 'toString', false)(J$.T(5086729, 'base64', 21, false)), tmp, false, false);
                            var len = J$.W(5086841, 'len', J$.B(587770, '+', J$.B(587762, '+', J$.B(587746, '+', J$.B(587738, '+', J$.B(587730, '+', J$.G(5086761, J$.R(5086753, 'tmp', tmp, false, false), 'length'), J$.B(587722, '/', J$.G(5086777, J$.R(5086769, 'tmp', tmp, false, false), 'length'), J$.T(5086785, 64, 22, false))), J$.T(5086793, 18, 22, false)), J$.T(5086801, 16, 22, false)), J$.B(587754, '*', J$.G(5086817, J$.R(5086809, 'header', header, false, false), 'length'), J$.T(5086825, 2, 22, false))), J$.T(5086833, 10, 22, false)), len, false, false);
                            var buf = J$.W(5086873, 'buf', J$.M(5086865, J$.R(5086849, 'Buffer', Buffer, false, true), 'alloc', false)(J$.R(5086857, 'len', len, false, false)), buf, false, false);
                            var o = J$.W(5086889, 'o', J$.T(5086881, 0, 22, false), o, false, false);
                            o = J$.W(5086953, 'o', J$.B(587794, '+', J$.R(5086945, 'o', o, false, false), J$.M(5086937, J$.R(5086897, 'buf', buf, false, false), 'write', false)(J$.B(587786, '+', J$.B(587778, '+', J$.T(5086905, '-----BEGIN ', 21, false), J$.R(5086913, 'header', header, false, false)), J$.T(5086921, '-----\n', 21, false)), J$.R(5086929, 'o', o, false, false))), o, false, false);
                            for (var i = J$.W(5086969, 'i', J$.T(5086961, 0, 22, false), i, false, false); J$.C(273240, J$.B(587802, '<', J$.R(5086977, 'i', i, false, false), J$.G(5086993, J$.R(5086985, 'tmp', tmp, false, false), 'length')));) {
                                var limit = J$.W(5087017, 'limit', J$.B(587810, '+', J$.R(5087001, 'i', i, false, false), J$.T(5087009, 64, 22, false)), limit, false, false);
                                if (J$.C(273232, J$.B(587818, '>', J$.R(5087025, 'limit', limit, false, false), J$.G(5087041, J$.R(5087033, 'tmp', tmp, false, false), 'length'))))
                                    limit = J$.W(5087065, 'limit', J$.G(5087057, J$.R(5087049, 'tmp', tmp, false, false), 'length'), limit, false, false);
                                o = J$.W(5087137, 'o', J$.B(587826, '+', J$.R(5087129, 'o', o, false, false), J$.M(5087121, J$.R(5087073, 'buf', buf, false, false), 'write', false)(J$.M(5087105, J$.R(5087081, 'tmp', tmp, false, false), 'slice', false)(J$.R(5087089, 'i', i, false, false), J$.R(5087097, 'limit', limit, false, false)), J$.R(5087113, 'o', o, false, false))), o, false, false);
                                J$.P(5087177, J$.R(5087145, 'buf', buf, false, false), J$.B(587850, '-', o = J$.W(5087161, 'o', J$.B(587842, '+', J$.U(587834, '+', J$.R(5087153, 'o', o, false, false)), 1), o, false, false), 1), J$.T(5087169, 10, 22, false));
                                i = J$.W(5087193, 'i', J$.R(5087185, 'limit', limit, false, false), i, false, false);
                            }
                            o = J$.W(5087257, 'o', J$.B(587874, '+', J$.R(5087249, 'o', o, false, false), J$.M(5087241, J$.R(5087201, 'buf', buf, false, false), 'write', false)(J$.B(587866, '+', J$.B(587858, '+', J$.T(5087209, '-----END ', 21, false), J$.R(5087217, 'header', header, false, false)), J$.T(5087225, '-----\n', 21, false)), J$.R(5087233, 'o', o, false, false))), o, false, false);
                            return J$.Rt(5087297, J$.M(5087289, J$.R(5087265, 'buf', buf, false, false), 'slice', false)(J$.T(5087273, 0, 22, false), J$.R(5087281, 'o', o, false, false)));
                        } catch (J$e) {
                            J$.Ex(5087673, J$e);
                        } finally {
                            if (J$.Fr(5087681))
                                continue jalangiLabel4;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(5087425, 'assert', assert, false, false, false);
            J$.N(5087433, 'asn1', asn1, false, false, false);
            J$.N(5087441, 'crypto', crypto, false, false, false);
            J$.N(5087449, 'Buffer', Buffer, false, false, false);
            J$.N(5087457, 'algs', algs, false, false, false);
            J$.N(5087465, 'utils', utils, false, false, false);
            J$.N(5087473, 'Key', Key, false, false, false);
            J$.N(5087481, 'PrivateKey', PrivateKey, false, false, false);
            J$.N(5087489, 'pkcs1', pkcs1, false, false, false);
            J$.N(5087497, 'pkcs8', pkcs8, false, false, false);
            J$.N(5087505, 'sshpriv', sshpriv, false, false, false);
            J$.N(5087513, 'rfc4253', rfc4253, false, false, false);
            J$.N(5087521, 'errors', errors, false, false, false);
            J$.N(5087529, 'OID_PBES2', OID_PBES2, false, false, false);
            J$.N(5087537, 'OID_PBKDF2', OID_PBKDF2, false, false, false);
            J$.N(5087545, 'OID_TO_CIPHER', OID_TO_CIPHER, false, false, false);
            J$.N(5087553, 'CIPHER_TO_OID', CIPHER_TO_OID, false, false, false);
            J$.N(5087561, 'OID_TO_HASH', OID_TO_HASH, false, false, false);
            J$.N(5087569, 'HASH_TO_OID', HASH_TO_OID, false, false, false);
            read = J$.N(5087585, 'read', J$.T(5087577, read, 12, false), true, false, false);
            write = J$.N(5087601, 'write', J$.T(5087593, write, 12, false), true, false, false);
            J$.P(5081633, J$.I(typeof module === 'undefined' ? module = J$.R(5081601, 'module', undefined, true, true) : module = J$.R(5081601, 'module', module, true, true)), 'exports', J$.T(5081625, {
                read: J$.R(5081609, 'read', read, false, true),
                write: J$.R(5081617, 'write', write, false, true)
            }, 11, false));
            var assert = J$.W(5081665, 'assert', J$.F(5081657, J$.I(typeof require === 'undefined' ? require = J$.R(5081641, 'require', undefined, true, true) : require = J$.R(5081641, 'require', require, true, true)), false)(J$.T(5081649, 'assert-plus', 21, false)), assert, false, true);
            var asn1 = J$.W(5081697, 'asn1', J$.F(5081689, J$.I(typeof require === 'undefined' ? require = J$.R(5081673, 'require', undefined, true, true) : require = J$.R(5081673, 'require', require, true, true)), false)(J$.T(5081681, 'asn1', 21, false)), asn1, false, true);
            var crypto = J$.W(5081729, 'crypto', J$.F(5081721, J$.I(typeof require === 'undefined' ? require = J$.R(5081705, 'require', undefined, true, true) : require = J$.R(5081705, 'require', require, true, true)), false)(J$.T(5081713, 'crypto', 21, false)), crypto, false, true);
            var Buffer = J$.W(5081769, 'Buffer', J$.G(5081761, J$.F(5081753, J$.I(typeof require === 'undefined' ? require = J$.R(5081737, 'require', undefined, true, true) : require = J$.R(5081737, 'require', require, true, true)), false)(J$.T(5081745, 'safer-buffer', 21, false)), 'Buffer'), Buffer, false, true);
            var algs = J$.W(5081801, 'algs', J$.F(5081793, J$.I(typeof require === 'undefined' ? require = J$.R(5081777, 'require', undefined, true, true) : require = J$.R(5081777, 'require', require, true, true)), false)(J$.T(5081785, '../algs', 21, false)), algs, false, true);
            var utils = J$.W(5081833, 'utils', J$.F(5081825, J$.I(typeof require === 'undefined' ? require = J$.R(5081809, 'require', undefined, true, true) : require = J$.R(5081809, 'require', require, true, true)), false)(J$.T(5081817, '../utils', 21, false)), utils, false, true);
            var Key = J$.W(5081865, 'Key', J$.F(5081857, J$.I(typeof require === 'undefined' ? require = J$.R(5081841, 'require', undefined, true, true) : require = J$.R(5081841, 'require', require, true, true)), false)(J$.T(5081849, '../key', 21, false)), Key, false, true);
            var PrivateKey = J$.W(5081897, 'PrivateKey', J$.F(5081889, J$.I(typeof require === 'undefined' ? require = J$.R(5081873, 'require', undefined, true, true) : require = J$.R(5081873, 'require', require, true, true)), false)(J$.T(5081881, '../private-key', 21, false)), PrivateKey, false, true);
            var pkcs1 = J$.W(5081929, 'pkcs1', J$.F(5081921, J$.I(typeof require === 'undefined' ? require = J$.R(5081905, 'require', undefined, true, true) : require = J$.R(5081905, 'require', require, true, true)), false)(J$.T(5081913, './pkcs1', 21, false)), pkcs1, false, true);
            var pkcs8 = J$.W(5081961, 'pkcs8', J$.F(5081953, J$.I(typeof require === 'undefined' ? require = J$.R(5081937, 'require', undefined, true, true) : require = J$.R(5081937, 'require', require, true, true)), false)(J$.T(5081945, './pkcs8', 21, false)), pkcs8, false, true);
            var sshpriv = J$.W(5081993, 'sshpriv', J$.F(5081985, J$.I(typeof require === 'undefined' ? require = J$.R(5081969, 'require', undefined, true, true) : require = J$.R(5081969, 'require', require, true, true)), false)(J$.T(5081977, './ssh-private', 21, false)), sshpriv, false, true);
            var rfc4253 = J$.W(5082025, 'rfc4253', J$.F(5082017, J$.I(typeof require === 'undefined' ? require = J$.R(5082001, 'require', undefined, true, true) : require = J$.R(5082001, 'require', require, true, true)), false)(J$.T(5082009, './rfc4253', 21, false)), rfc4253, false, true);
            var errors = J$.W(5082057, 'errors', J$.F(5082049, J$.I(typeof require === 'undefined' ? require = J$.R(5082033, 'require', undefined, true, true) : require = J$.R(5082033, 'require', require, true, true)), false)(J$.T(5082041, '../errors', 21, false)), errors, false, true);
            var OID_PBES2 = J$.W(5082073, 'OID_PBES2', J$.T(5082065, '1.2.840.113549.1.5.13', 21, false), OID_PBES2, false, true);
            var OID_PBKDF2 = J$.W(5082089, 'OID_PBKDF2', J$.T(5082081, '1.2.840.113549.1.5.12', 21, false), OID_PBKDF2, false, true);
            var OID_TO_CIPHER = J$.W(5082129, 'OID_TO_CIPHER', J$.T(5082121, {
                '1.2.840.113549.3.7': J$.T(5082097, '3des-cbc', 21, false),
                '2.16.840.1.101.3.4.1.2': J$.T(5082105, 'aes128-cbc', 21, false),
                '2.16.840.1.101.3.4.1.42': J$.T(5082113, 'aes256-cbc', 21, false)
            }, 11, false), OID_TO_CIPHER, false, true);
            var CIPHER_TO_OID = J$.W(5082145, 'CIPHER_TO_OID', J$.T(5082137, {}, 11, false), CIPHER_TO_OID, false, true);
            J$.M(5082257, J$.M(5082169, J$.I(typeof Object === 'undefined' ? Object = J$.R(5082153, 'Object', undefined, true, true) : Object = J$.R(5082153, 'Object', Object, true, true)), 'keys', false)(J$.R(5082161, 'OID_TO_CIPHER', OID_TO_CIPHER, false, true)), 'forEach', false)(J$.T(5082249, function (k) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(5082225, arguments.callee, this, arguments);
                            arguments = J$.N(5082233, 'arguments', arguments, true, false, false);
                            k = J$.N(5082241, 'k', k, true, false, false);
                            J$.P(5082217, J$.R(5082177, 'CIPHER_TO_OID', CIPHER_TO_OID, false, true), J$.G(5082201, J$.R(5082185, 'OID_TO_CIPHER', OID_TO_CIPHER, false, true), J$.R(5082193, 'k', k, false, false)), J$.R(5082209, 'k', k, false, false));
                        } catch (J$e) {
                            J$.Ex(5087609, J$e);
                        } finally {
                            if (J$.Fr(5087617))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            var OID_TO_HASH = J$.W(5082297, 'OID_TO_HASH', J$.T(5082289, {
                '1.2.840.113549.2.7': J$.T(5082265, 'sha1', 21, false),
                '1.2.840.113549.2.9': J$.T(5082273, 'sha256', 21, false),
                '1.2.840.113549.2.11': J$.T(5082281, 'sha512', 21, false)
            }, 11, false), OID_TO_HASH, false, true);
            var HASH_TO_OID = J$.W(5082313, 'HASH_TO_OID', J$.T(5082305, {}, 11, false), HASH_TO_OID, false, true);
            J$.M(5082425, J$.M(5082337, J$.I(typeof Object === 'undefined' ? Object = J$.R(5082321, 'Object', undefined, true, true) : Object = J$.R(5082321, 'Object', Object, true, true)), 'keys', false)(J$.R(5082329, 'OID_TO_HASH', OID_TO_HASH, false, true)), 'forEach', false)(J$.T(5082417, function (k) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(5082393, arguments.callee, this, arguments);
                            arguments = J$.N(5082401, 'arguments', arguments, true, false, false);
                            k = J$.N(5082409, 'k', k, true, false, false);
                            J$.P(5082385, J$.R(5082345, 'HASH_TO_OID', HASH_TO_OID, false, true), J$.G(5082369, J$.R(5082353, 'OID_TO_HASH', OID_TO_HASH, false, true), J$.R(5082361, 'k', k, false, false)), J$.R(5082377, 'k', k, false, false));
                        } catch (J$e) {
                            J$.Ex(5087625, J$e);
                        } finally {
                            if (J$.Fr(5087633))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
        } catch (J$e) {
            J$.Ex(5087689, J$e);
        } finally {
            if (J$.Sr(5087697))
                continue jalangiLabel5;
            else
                break jalangiLabel5;
        }
    }
// JALANGI DO NOT INSTRUMENT

