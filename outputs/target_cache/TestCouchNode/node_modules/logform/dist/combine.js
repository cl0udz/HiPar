J$.noInstrEval = false;
jalangiLabel4:
    while (true) {
        try {
            J$.Se(4464777, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestCouchNode/node_modules/logform/dist/combine.js');
            function cascade(formats) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(4464241, arguments.callee, this, arguments);
                            arguments = J$.N(4464249, 'arguments', arguments, true, false, false);
                            formats = J$.N(4464257, 'formats', formats, true, false, false);
                            if (J$.C(248192, J$.U(551458, '!', J$.M(4463977, J$.R(4463961, 'formats', formats, false, false), 'every', false)(J$.R(4463969, 'isValidFormat', isValidFormat, false, true))))) {
                                return J$.Rt(4463985, undefined);
                            }
                            return J$.Rt(4464233, J$.T(4464225, function (info) {
                                jalangiLabel0:
                                    while (true) {
                                        try {
                                            J$.Fe(4464185, arguments.callee, this, arguments);
                                            arguments = J$.N(4464193, 'arguments', arguments, true, false, false);
                                            info = J$.N(4464201, 'info', info, true, false, false);
                                            J$.N(4464209, 'obj', obj, false, false, false);
                                            J$.N(4464217, 'i', i, false, false, false);
                                            var obj = J$.W(4464001, 'obj', J$.R(4463993, 'info', info, false, false), obj, false, false);
                                            for (var i = J$.W(4464017, 'i', J$.T(4464009, 0, 22, false), i, false, false); J$.C(248208, J$.B(551466, '<', J$.R(4464025, 'i', i, false, false), J$.G(4464041, J$.R(4464033, 'formats', formats, false, false), 'length'))); J$.B(551490, '-', i = J$.W(4464057, 'i', J$.B(551482, '+', J$.U(551474, '+', J$.R(4464049, 'i', i, false, false)), 1), i, false, false), 1)) {
                                                obj = J$.W(4464137, 'obj', J$.M(4464129, J$.G(4464081, J$.R(4464065, 'formats', formats, false, false), J$.R(4464073, 'i', i, false, false)), 'transform', false)(J$.R(4464089, 'obj', obj, false, false), J$.G(4464121, J$.G(4464113, J$.R(4464097, 'formats', formats, false, false), J$.R(4464105, 'i', i, false, false)), 'options')), obj, false, false);
                                                if (J$.C(248200, J$.U(551498, '!', J$.R(4464145, 'obj', obj, false, false)))) {
                                                    return J$.Rt(4464161, J$.T(4464153, false, 23, false));
                                                }
                                            }
                                            return J$.Rt(4464177, J$.R(4464169, 'obj', obj, false, false));
                                        } catch (J$e) {
                                            J$.Ex(4464825, J$e);
                                        } finally {
                                            if (J$.Fr(4464833))
                                                continue jalangiLabel0;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                        } catch (J$e) {
                            J$.Ex(4464841, J$e);
                        } finally {
                            if (J$.Fr(4464849))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function isValidFormat(fmt) {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(4464369, arguments.callee, this, arguments);
                            arguments = J$.N(4464377, 'arguments', arguments, true, false, false);
                            fmt = J$.N(4464385, 'fmt', fmt, true, false, false);
                            if (J$.C(248216, J$.B(551514, '!==', J$.U(551506, 'typeof', J$.G(4464273, J$.R(4464265, 'fmt', fmt, false, false), 'transform')), J$.T(4464281, 'function', 21, false)))) {
                                throw J$.F(4464345, J$.I(typeof Error === 'undefined' ? Error = J$.R(4464289, 'Error', undefined, true, true) : Error = J$.R(4464289, 'Error', Error, true, true)), true)(J$.M(4464337, J$.T(4464321, [
                                    J$.T(4464297, 'No transform function found on format. Did you create a format instance?', 21, false),
                                    J$.T(4464305, 'const myFormat = format(formatFn);', 21, false),
                                    J$.T(4464313, 'const instance = myFormat();', 21, false)
                                ], 10, false), 'join', false)(J$.T(4464329, '\n', 21, false)));
                            }
                            return J$.Rt(4464361, J$.T(4464353, true, 23, false));
                        } catch (J$e) {
                            J$.Ex(4464857, J$e);
                        } finally {
                            if (J$.Fr(4464865))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(4464785, 'format', format, false, false, false);
            cascade = J$.N(4464801, 'cascade', J$.T(4464793, cascade, 12, false), true, false, false);
            isValidFormat = J$.N(4464817, 'isValidFormat', J$.T(4464809, isValidFormat, 12, false), true, false, false);
            J$.T(4463921, 'use strict', 21, false);
            var format = J$.W(4463953, 'format', J$.F(4463945, J$.I(typeof require === 'undefined' ? require = J$.R(4463929, 'require', undefined, true, true) : require = J$.R(4463929, 'require', require, true, true)), false)(J$.T(4463937, './format', 21, false)), format, false, true);
            J$.P(4464737, J$.I(typeof module === 'undefined' ? module = J$.R(4464393, 'module', undefined, true, true) : module = J$.R(4464393, 'module', module, true, true)), 'exports', J$.T(4464729, function () {
                jalangiLabel3:
                    while (true) {
                        try {
                            J$.Fe(4464673, arguments.callee, this, arguments);
                            arguments = J$.N(4464681, 'arguments', arguments, true, false, false);
                            J$.N(4464689, '_len', _len, false, false, false);
                            J$.N(4464697, 'formats', formats, false, false, false);
                            J$.N(4464705, '_key', _key, false, false, false);
                            J$.N(4464713, 'combinedFormat', combinedFormat, false, false, false);
                            J$.N(4464721, 'instance', instance, false, false, false);
                            for (var _len = J$.W(4464449, '_len', J$.G(4464409, J$.I(typeof arguments === 'undefined' ? arguments = J$.R(4464401, 'arguments', undefined, true, true) : arguments = J$.R(4464401, 'arguments', arguments, true, true)), 'length'), _len, false, false), formats = J$.W(4464457, 'formats', J$.F(4464433, J$.I(typeof Array === 'undefined' ? Array = J$.R(4464417, 'Array', undefined, true, true) : Array = J$.R(4464417, 'Array', Array, true, true)), true)(J$.R(4464425, '_len', _len, false, false)), formats, false, false), _key = J$.W(4464465, '_key', J$.T(4464441, 0, 22, false), _key, false, false); J$.C(248224, J$.B(551522, '<', J$.R(4464473, '_key', _key, false, false), J$.R(4464481, '_len', _len, false, false))); J$.B(551546, '-', _key = J$.W(4464497, '_key', J$.B(551538, '+', J$.U(551530, '+', J$.R(4464489, '_key', _key, false, false)), 1), _key, false, false), 1)) {
                                J$.P(4464545, J$.R(4464505, 'formats', formats, false, false), J$.R(4464513, '_key', _key, false, false), J$.G(4464537, J$.I(typeof arguments === 'undefined' ? arguments = J$.R(4464521, 'arguments', undefined, true, true) : arguments = J$.R(4464521, 'arguments', arguments, true, true)), J$.R(4464529, '_key', _key, false, false)));
                            }
                            var combinedFormat = J$.W(4464593, 'combinedFormat', J$.F(4464585, J$.R(4464553, 'format', format, false, true), false)(J$.F(4464577, J$.R(4464561, 'cascade', cascade, false, true), false)(J$.R(4464569, 'formats', formats, false, false))), combinedFormat, false, false);
                            var instance = J$.W(4464617, 'instance', J$.F(4464609, J$.R(4464601, 'combinedFormat', combinedFormat, false, false), false)(), instance, false, false);
                            J$.P(4464649, J$.R(4464625, 'instance', instance, false, false), 'Format', J$.G(4464641, J$.R(4464633, 'combinedFormat', combinedFormat, false, false), 'Format'));
                            return J$.Rt(4464665, J$.R(4464657, 'instance', instance, false, false));
                        } catch (J$e) {
                            J$.Ex(4464873, J$e);
                        } finally {
                            if (J$.Fr(4464881))
                                continue jalangiLabel3;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(4464769, J$.G(4464753, J$.I(typeof module === 'undefined' ? module = J$.R(4464745, 'module', undefined, true, true) : module = J$.R(4464745, 'module', module, true, true)), 'exports'), 'cascade', J$.R(4464761, 'cascade', cascade, false, true));
        } catch (J$e) {
            J$.Ex(4464889, J$e);
        } finally {
            if (J$.Sr(4464897))
                continue jalangiLabel4;
            else
                break jalangiLabel4;
        }
    }
// JALANGI DO NOT INSTRUMENT

