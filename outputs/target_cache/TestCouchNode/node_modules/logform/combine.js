J$.noInstrEval = false;
jalangiLabel2:
    while (true) {
        try {
            J$.Se(4458017, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestCouchNode/node_modules/logform/combine.js');
            function cascade(formats) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(4457673, arguments.callee, this, arguments);
                            arguments = J$.N(4457681, 'arguments', arguments, true, false, false);
                            formats = J$.N(4457689, 'formats', formats, true, false, false);
                            J$.N(4457697, 'obj', obj, false, false, false);
                            J$.N(4457705, 'i', i, false, false, false);
                            if (J$.C(247920, J$.U(551162, '!', J$.M(4457449, J$.R(4457433, 'formats', formats, false, false), 'every', false)(J$.R(4457441, 'isValidFormat', isValidFormat, false, true))))) {
                                return J$.Rt(4457457, undefined);
                            }
                            return J$.Rt(4457665, (J$.I(typeof info === 'undefined' ? info = J$.R(4457465, 'info', undefined, true, true) : info = J$.R(4457465, 'info', info, true, true))) => {
                                let obj = J$.W(4457481, 'obj', J$.I(typeof info === 'undefined' ? info = J$.R(4457473, 'info', undefined, true, true) : info = J$.R(4457473, 'info', info, true, true)), obj, false, false);
                                for (let i = J$.W(4457497, 'i', J$.T(4457489, 0, 22, false), i, false, false); J$.C(247936, J$.B(551170, '<', J$.R(4457505, 'i', i, false, false), J$.G(4457521, J$.R(4457513, 'formats', formats, false, false), 'length'))); J$.B(551194, '-', i = J$.W(4457537, 'i', J$.B(551186, '+', J$.U(551178, '+', J$.R(4457529, 'i', i, false, false)), 1), i, false, false), 1)) {
                                    obj = J$.W(4457617, 'obj', J$.M(4457609, J$.G(4457561, J$.R(4457545, 'formats', formats, false, false), J$.R(4457553, 'i', i, false, false)), 'transform', false)(J$.R(4457569, 'obj', obj, false, false), J$.G(4457601, J$.G(4457593, J$.R(4457577, 'formats', formats, false, false), J$.R(4457585, 'i', i, false, false)), 'options')), obj, false, false);
                                    if (J$.C(247928, J$.U(551202, '!', J$.R(4457625, 'obj', obj, false, false)))) {
                                        return J$.Rt(4457641, J$.T(4457633, false, 23, false));
                                    }
                                }
                                return J$.Rt(4457657, J$.R(4457649, 'obj', obj, false, false));
                            });
                        } catch (J$e) {
                            J$.Ex(4458081, J$e);
                        } finally {
                            if (J$.Fr(4458089))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function isValidFormat(fmt) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(4457817, arguments.callee, this, arguments);
                            arguments = J$.N(4457825, 'arguments', arguments, true, false, false);
                            fmt = J$.N(4457833, 'fmt', fmt, true, false, false);
                            if (J$.C(247944, J$.B(551218, '!==', J$.U(551210, 'typeof', J$.G(4457721, J$.R(4457713, 'fmt', fmt, false, false), 'transform')), J$.T(4457729, 'function', 21, false)))) {
                                throw J$.F(4457793, J$.I(typeof Error === 'undefined' ? Error = J$.R(4457737, 'Error', undefined, true, true) : Error = J$.R(4457737, 'Error', Error, true, true)), true)(J$.M(4457785, J$.T(4457769, [
                                    J$.T(4457745, 'No transform function found on format. Did you create a format instance?', 21, false),
                                    J$.T(4457753, 'const myFormat = format(formatFn);', 21, false),
                                    J$.T(4457761, 'const instance = myFormat();', 21, false)
                                ], 10, false), 'join', false)(J$.T(4457777, '\n', 21, false)));
                            }
                            return J$.Rt(4457809, J$.T(4457801, true, 23, false));
                        } catch (J$e) {
                            J$.Ex(4458097, J$e);
                        } finally {
                            if (J$.Fr(4458105))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(4458025, 'format', format, false, false, false);
            cascade = J$.N(4458041, 'cascade', J$.T(4458033, cascade, 12, false), true, false, false);
            isValidFormat = J$.N(4458057, 'isValidFormat', J$.T(4458049, isValidFormat, 12, false), true, false, false);
            J$.N(4458065, 'combinedFormat', combinedFormat, false, false, false);
            J$.N(4458073, 'instance', instance, false, false, false);
            J$.T(4457393, 'use strict', 21, false);
            const format = J$.W(4457425, 'format', J$.F(4457417, J$.I(typeof require === 'undefined' ? require = J$.R(4457401, 'require', undefined, true, true) : require = J$.R(4457401, 'require', require, true, true)), false)(J$.T(4457409, './format', 21, false)), format, false, true);
            J$.P(4457977, J$.I(typeof module === 'undefined' ? module = J$.R(4457841, 'module', undefined, true, true) : module = J$.R(4457841, 'module', module, true, true)), 'exports', (...(J$.I(typeof formats === 'undefined' ? formats = J$.R(4457849, 'formats', undefined, true, true) : formats = J$.R(4457849, 'formats', formats, true, true)))) => {
                const combinedFormat = J$.W(4457897, 'combinedFormat', J$.F(4457889, J$.R(4457857, 'format', format, false, true), false)(J$.F(4457881, J$.R(4457865, 'cascade', cascade, false, true), false)(J$.I(typeof formats === 'undefined' ? formats = J$.R(4457873, 'formats', undefined, true, true) : formats = J$.R(4457873, 'formats', formats, true, true)))), combinedFormat, false, true);
                const instance = J$.W(4457921, 'instance', J$.F(4457913, J$.R(4457905, 'combinedFormat', combinedFormat, false, true), false)(), instance, false, true);
                J$.P(4457953, J$.R(4457929, 'instance', instance, false, true), 'Format', J$.G(4457945, J$.R(4457937, 'combinedFormat', combinedFormat, false, true), 'Format'));
                return J$.Rt(4457969, J$.R(4457961, 'instance', instance, false, true));
            });
            J$.P(4458009, J$.G(4457993, J$.I(typeof module === 'undefined' ? module = J$.R(4457985, 'module', undefined, true, true) : module = J$.R(4457985, 'module', module, true, true)), 'exports'), 'cascade', J$.R(4458001, 'cascade', cascade, false, true));
        } catch (J$e) {
            J$.Ex(4458113, J$e);
        } finally {
            if (J$.Sr(4458121))
                continue jalangiLabel2;
            else
                break jalangiLabel2;
        }
    }
// JALANGI DO NOT INSTRUMENT

