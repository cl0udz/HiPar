J$.noInstrEval = false;
jalangiLabel8:
    while (true) {
        try {
            J$.Se(4782169, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestCouchNode/node_modules/pump/test-node.js');
            J$.N(4782177, 'pump', pump, false, false, false);
            J$.N(4782185, 'rs', rs, false, false, false);
            J$.N(4782193, 'ws', ws, false, false, false);
            J$.N(4782201, 'toHex', toHex, false, false, false);
            J$.N(4782209, 'wsClosed', wsClosed, false, false, false);
            J$.N(4782217, 'rsClosed', rsClosed, false, false, false);
            J$.N(4782225, 'callbackCalled', callbackCalled, false, false, false);
            J$.N(4782233, 'check', check, false, false, false);
            J$.N(4782241, 'res', res, false, false, false);
            J$.N(4782249, 'timeout', timeout, false, false, false);
            var pump = J$.W(4781209, 'pump', J$.F(4781201, J$.I(typeof require === 'undefined' ? require = J$.R(4781185, 'require', undefined, true, true) : require = J$.R(4781185, 'require', require, true, true)), false)(J$.T(4781193, './index', 21, false)), pump, false, true);
            var rs = J$.W(4781257, 'rs', J$.M(4781249, J$.F(4781233, J$.I(typeof require === 'undefined' ? require = J$.R(4781217, 'require', undefined, true, true) : require = J$.R(4781217, 'require', require, true, true)), false)(J$.T(4781225, 'fs', 21, false)), 'createReadStream', false)(J$.T(4781241, '/dev/random', 21, false)), rs, false, true);
            var ws = J$.W(4781305, 'ws', J$.M(4781297, J$.F(4781281, J$.I(typeof require === 'undefined' ? require = J$.R(4781265, 'require', undefined, true, true) : require = J$.R(4781265, 'require', require, true, true)), false)(J$.T(4781273, 'fs', 21, false)), 'createWriteStream', false)(J$.T(4781289, '/dev/null', 21, false)), ws, false, true);
            var toHex = J$.W(4781521, 'toHex', J$.T(4781513, function () {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(4781489, arguments.callee, this, arguments);
                            arguments = J$.N(4781497, 'arguments', arguments, true, false, false);
                            J$.N(4781505, 'reverse', reverse, false, false, false);
                            var reverse = J$.W(4781345, 'reverse', J$.M(4781337, J$.F(4781329, J$.I(typeof require === 'undefined' ? require = J$.R(4781313, 'require', undefined, true, true) : require = J$.R(4781313, 'require', require, true, true)), false)(J$.T(4781321, 'stream', 21, false)), 'Transform', true)(), reverse, false, false);
                            J$.P(4781465, J$.R(4781353, 'reverse', reverse, false, false), '_transform', J$.T(4781457, function (chunk, enc, callback) {
                                jalangiLabel0:
                                    while (true) {
                                        try {
                                            J$.Fe(4781417, arguments.callee, this, arguments);
                                            arguments = J$.N(4781425, 'arguments', arguments, true, false, false);
                                            chunk = J$.N(4781433, 'chunk', chunk, true, false, false);
                                            enc = J$.N(4781441, 'enc', enc, true, false, false);
                                            callback = J$.N(4781449, 'callback', callback, true, false, false);
                                            J$.M(4781393, J$.R(4781361, 'reverse', reverse, false, false), 'push', false)(J$.M(4781385, J$.R(4781369, 'chunk', chunk, false, false), 'toString', false)(J$.T(4781377, 'hex', 21, false)));
                                            J$.F(4781409, J$.R(4781401, 'callback', callback, false, false), false)();
                                        } catch (J$e) {
                                            J$.Ex(4782257, J$e);
                                        } finally {
                                            if (J$.Fr(4782265))
                                                continue jalangiLabel0;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            return J$.Rt(4781481, J$.R(4781473, 'reverse', reverse, false, false));
                        } catch (J$e) {
                            J$.Ex(4782273, J$e);
                        } finally {
                            if (J$.Fr(4782281))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false), toHex, false, true);
            var wsClosed = J$.W(4781537, 'wsClosed', J$.T(4781529, false, 23, false), wsClosed, false, true);
            var rsClosed = J$.W(4781553, 'rsClosed', J$.T(4781545, false, 23, false), rsClosed, false, true);
            var callbackCalled = J$.W(4781569, 'callbackCalled', J$.T(4781561, false, 23, false), callbackCalled, false, true);
            var check = J$.W(4781673, 'check', J$.T(4781665, function () {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(4781649, arguments.callee, this, arguments);
                            arguments = J$.N(4781657, 'arguments', arguments, true, false, false);
                            if (J$.C(256392, J$.C(256384, J$.C(256376, J$.R(4781577, 'wsClosed', wsClosed, false, true)) ? J$.R(4781585, 'rsClosed', rsClosed, false, true) : J$._()) ? J$.R(4781593, 'callbackCalled', callbackCalled, false, true) : J$._())) {
                                J$.M(4781617, J$.I(typeof console === 'undefined' ? console = J$.R(4781601, 'console', undefined, true, true) : console = J$.R(4781601, 'console', console, true, true)), 'log', false)(J$.T(4781609, 'test-node.js passes', 21, false));
                                J$.F(4781641, J$.I(typeof clearTimeout === 'undefined' ? clearTimeout = J$.R(4781625, 'clearTimeout', undefined, true, true) : clearTimeout = J$.R(4781625, 'clearTimeout', clearTimeout, true, true)), false)(J$.R(4781633, 'timeout', timeout, false, true));
                            }
                        } catch (J$e) {
                            J$.Ex(4782289, J$e);
                        } finally {
                            if (J$.Fr(4782297))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false), check, false, true);
            J$.M(4781753, J$.R(4781681, 'ws', ws, false, true), 'on', false)(J$.T(4781689, 'close', 21, false), J$.T(4781745, function () {
                jalangiLabel3:
                    while (true) {
                        try {
                            J$.Fe(4781729, arguments.callee, this, arguments);
                            arguments = J$.N(4781737, 'arguments', arguments, true, false, false);
                            wsClosed = J$.W(4781705, 'wsClosed', J$.T(4781697, true, 23, false), wsClosed, false, true);
                            J$.F(4781721, J$.R(4781713, 'check', check, false, true), false)();
                        } catch (J$e) {
                            J$.Ex(4782305, J$e);
                        } finally {
                            if (J$.Fr(4782313))
                                continue jalangiLabel3;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.M(4781833, J$.R(4781761, 'rs', rs, false, true), 'on', false)(J$.T(4781769, 'close', 21, false), J$.T(4781825, function () {
                jalangiLabel4:
                    while (true) {
                        try {
                            J$.Fe(4781809, arguments.callee, this, arguments);
                            arguments = J$.N(4781817, 'arguments', arguments, true, false, false);
                            rsClosed = J$.W(4781785, 'rsClosed', J$.T(4781777, true, 23, false), rsClosed, false, true);
                            J$.F(4781801, J$.R(4781793, 'check', check, false, true), false)();
                        } catch (J$e) {
                            J$.Ex(4782321, J$e);
                        } finally {
                            if (J$.Fr(4782329))
                                continue jalangiLabel4;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            var res = J$.W(4781977, 'res', J$.F(4781969, J$.R(4781841, 'pump', pump, false, true), false)(J$.R(4781849, 'rs', rs, false, true), J$.F(4781865, J$.R(4781857, 'toHex', toHex, false, true), false)(), J$.F(4781881, J$.R(4781873, 'toHex', toHex, false, true), false)(), J$.F(4781897, J$.R(4781889, 'toHex', toHex, false, true), false)(), J$.R(4781905, 'ws', ws, false, true), J$.T(4781961, function () {
                jalangiLabel5:
                    while (true) {
                        try {
                            J$.Fe(4781945, arguments.callee, this, arguments);
                            arguments = J$.N(4781953, 'arguments', arguments, true, false, false);
                            callbackCalled = J$.W(4781921, 'callbackCalled', J$.T(4781913, true, 23, false), callbackCalled, false, true);
                            J$.F(4781937, J$.R(4781929, 'check', check, false, true), false)();
                        } catch (J$e) {
                            J$.Ex(4782337, J$e);
                        } finally {
                            if (J$.Fr(4782345))
                                continue jalangiLabel5;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false)), res, false, true);
            if (J$.C(256400, J$.B(562498, '!==', J$.R(4781985, 'res', res, false, true), J$.R(4781993, 'ws', ws, false, true)))) {
                throw J$.F(4782017, J$.I(typeof Error === 'undefined' ? Error = J$.R(4782001, 'Error', undefined, true, true) : Error = J$.R(4782001, 'Error', Error, true, true)), true)(J$.T(4782009, 'should return last stream', 21, false));
            }
            J$.F(4782081, J$.I(typeof setTimeout === 'undefined' ? setTimeout = J$.R(4782025, 'setTimeout', undefined, true, true) : setTimeout = J$.R(4782025, 'setTimeout', setTimeout, true, true)), false)(J$.T(4782065, function () {
                jalangiLabel6:
                    while (true) {
                        try {
                            J$.Fe(4782049, arguments.callee, this, arguments);
                            arguments = J$.N(4782057, 'arguments', arguments, true, false, false);
                            J$.M(4782041, J$.R(4782033, 'rs', rs, false, true), 'destroy', false)();
                        } catch (J$e) {
                            J$.Ex(4782353, J$e);
                        } finally {
                            if (J$.Fr(4782361))
                                continue jalangiLabel6;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false), J$.T(4782073, 1000, 22, false));
            var timeout = J$.W(4782161, 'timeout', J$.F(4782153, J$.I(typeof setTimeout === 'undefined' ? setTimeout = J$.R(4782089, 'setTimeout', undefined, true, true) : setTimeout = J$.R(4782089, 'setTimeout', setTimeout, true, true)), false)(J$.T(4782137, function () {
                jalangiLabel7:
                    while (true) {
                        try {
                            J$.Fe(4782121, arguments.callee, this, arguments);
                            arguments = J$.N(4782129, 'arguments', arguments, true, false, false);
                            throw J$.F(4782113, J$.I(typeof Error === 'undefined' ? Error = J$.R(4782097, 'Error', undefined, true, true) : Error = J$.R(4782097, 'Error', Error, true, true)), true)(J$.T(4782105, 'timeout', 21, false));
                        } catch (J$e) {
                            J$.Ex(4782369, J$e);
                        } finally {
                            if (J$.Fr(4782377))
                                continue jalangiLabel7;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false), J$.T(4782145, 5000, 22, false)), timeout, false, true);
        } catch (J$e) {
            J$.Ex(4782385, J$e);
        } finally {
            if (J$.Sr(4782393))
                continue jalangiLabel8;
            else
                break jalangiLabel8;
        }
    }
// JALANGI DO NOT INSTRUMENT

