J$.noInstrEval = false;
jalangiLabel3:
    while (true) {
        try {
            J$.Se(7203521, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestCouchNode/node_modules/couchbase/lib/mock/clustermgr.js');
            function MockClusterManagement(cluster, username, password) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(7203329, arguments.callee, this, arguments);
                            arguments = J$.N(7203337, 'arguments', arguments, true, false, false);
                            cluster = J$.N(7203345, 'cluster', cluster, true, false, false);
                            username = J$.N(7203353, 'username', username, true, false, false);
                            password = J$.N(7203361, 'password', password, true, false, false);
                            J$.P(7203273, J$.R(7203257, 'this', this, false, false), '_cluster', J$.R(7203265, 'cluster', cluster, false, false));
                            J$.P(7203297, J$.R(7203281, 'this', this, false, false), '_username', J$.R(7203289, 'username', username, false, false));
                            J$.P(7203321, J$.R(7203305, 'this', this, false, false), '_password', J$.R(7203313, 'password', password, false, false));
                        } catch (J$e) {
                            J$.Ex(7203545, J$e);
                        } finally {
                            if (J$.Fr(7203553))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            MockClusterManagement = J$.N(7203537, 'MockClusterManagement', J$.T(7203529, MockClusterManagement, 12, false), true, false, false);
            J$.T(7203249, 'use strict', 21, false);
            J$.P(7203489, J$.G(7203377, J$.R(7203369, 'MockClusterManagement', MockClusterManagement, false, true), 'prototype'), 'listBuckets', J$.T(7203481, function (callback) {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(7203457, arguments.callee, this, arguments);
                            arguments = J$.N(7203465, 'arguments', arguments, true, false, false);
                            callback = J$.N(7203473, 'callback', callback, true, false, false);
                            J$.M(7203449, J$.I(typeof process === 'undefined' ? process = J$.R(7203385, 'process', undefined, true, true) : process = J$.R(7203385, 'process', process, true, true)), 'nextTick', false)(J$.T(7203441, function () {
                                jalangiLabel1:
                                    while (true) {
                                        try {
                                            J$.Fe(7203425, arguments.callee, this, arguments);
                                            arguments = J$.N(7203433, 'arguments', arguments, true, false, false);
                                            J$.F(7203417, J$.R(7203393, 'callback', callback, false, false), false)(J$.T(7203401, null, 25, false), J$.T(7203409, [], 10, false));
                                        } catch (J$e) {
                                            J$.Ex(7203561, J$e);
                                        } finally {
                                            if (J$.Fr(7203569))
                                                continue jalangiLabel1;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                        } catch (J$e) {
                            J$.Ex(7203577, J$e);
                        } finally {
                            if (J$.Fr(7203585))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(7203513, J$.I(typeof module === 'undefined' ? module = J$.R(7203497, 'module', undefined, true, true) : module = J$.R(7203497, 'module', module, true, true)), 'exports', J$.R(7203505, 'MockClusterManagement', MockClusterManagement, false, true));
        } catch (J$e) {
            J$.Ex(7203593, J$e);
        } finally {
            if (J$.Sr(7203601))
                continue jalangiLabel3;
            else
                break jalangiLabel3;
        }
    }
// JALANGI DO NOT INSTRUMENT

