J$.noInstrEval = false;
jalangiLabel16:
    while (true) {
        try {
            J$.Se(7208393, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestCouchNode/node_modules/couchbase/lib/n1qlquery.js');
            function N1qlQuery() {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(7206065, arguments.callee, this, arguments);
                            arguments = J$.N(7206073, 'arguments', arguments, true, false, false);
                        } catch (J$e) {
                            J$.Ex(7208449, J$e);
                        } finally {
                            if (J$.Fr(7208457))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function N1qlStringQuery(str) {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(7206329, arguments.callee, this, arguments);
                            arguments = J$.N(7206337, 'arguments', arguments, true, false, false);
                            str = J$.N(7206345, 'str', str, true, false, false);
                            J$.P(7206297, J$.R(7206273, 'this', this, false, false), 'options', J$.T(7206289, { statement: J$.R(7206281, 'str', str, false, false) }, 11, false));
                            J$.P(7206321, J$.R(7206305, 'this', this, false, false), 'isAdhoc', J$.T(7206313, true, 23, false));
                        } catch (J$e) {
                            J$.Ex(7208481, J$e);
                        } finally {
                            if (J$.Fr(7208489))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(7208401, 'util', util, false, false, false);
            J$.N(7208409, 'qs', qs, false, false, false);
            N1qlQuery = J$.N(7208425, 'N1qlQuery', J$.T(7208417, N1qlQuery, 12, false), true, false, false);
            N1qlStringQuery = J$.N(7208441, 'N1qlStringQuery', J$.T(7208433, N1qlStringQuery, 12, false), true, false, false);
            J$.T(7205993, 'use strict', 21, false);
            var util = J$.W(7206025, 'util', J$.F(7206017, J$.I(typeof require === 'undefined' ? require = J$.R(7206001, 'require', undefined, true, true) : require = J$.R(7206001, 'require', require, true, true)), false)(J$.T(7206009, 'util', 21, false)), util, false, true);
            var qs = J$.W(7206057, 'qs', J$.F(7206049, J$.I(typeof require === 'undefined' ? require = J$.R(7206033, 'require', undefined, true, true) : require = J$.R(7206033, 'require', require, true, true)), false)(J$.T(7206041, 'querystring', 21, false)), qs, false, true);
            J$.P(7206121, J$.R(7206081, 'N1qlQuery', N1qlQuery, false, true), 'Consistency', J$.T(7206113, {
                NOT_BOUNDED: J$.T(7206089, 1, 22, false),
                REQUEST_PLUS: J$.T(7206097, 2, 22, false),
                STATEMENT_PLUS: J$.T(7206105, 3, 22, false)
            }, 11, false));
            J$.P(7206169, J$.R(7206129, 'N1qlQuery', N1qlQuery, false, true), 'ProfileType', J$.T(7206161, {
                PROFILE_NONE: J$.T(7206137, 'off', 21, false),
                PROFILE_PHASES: J$.T(7206145, 'phases', 21, false),
                PROFILE_TIMINGS: J$.T(7206153, 'timings', 21, false)
            }, 11, false));
            J$.P(7206241, J$.G(7206185, J$.R(7206177, 'N1qlQuery', N1qlQuery, false, true), 'prototype'), 'toString', J$.T(7206233, function () {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(7206217, arguments.callee, this, arguments);
                            arguments = J$.N(7206225, 'arguments', arguments, true, false, false);
                            throw J$.F(7206209, J$.I(typeof Error === 'undefined' ? Error = J$.R(7206193, 'Error', undefined, true, true) : Error = J$.R(7206193, 'Error', Error, true, true)), true)(J$.T(7206201, 'Must use N1qlQuery subclasses only.', 21, false));
                        } catch (J$e) {
                            J$.Ex(7208465, J$e);
                        } finally {
                            if (J$.Fr(7208473))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(7206265, J$.I(typeof module === 'undefined' ? module = J$.R(7206249, 'module', undefined, true, true) : module = J$.R(7206249, 'module', module, true, true)), 'exports', J$.R(7206257, 'N1qlQuery', N1qlQuery, false, true));
            J$.M(7206377, J$.R(7206353, 'util', util, false, true), 'inherits', false)(J$.R(7206361, 'N1qlStringQuery', N1qlStringQuery, false, true), J$.R(7206369, 'N1qlQuery', N1qlQuery, false, true));
            J$.P(7206401, J$.R(7206385, 'N1qlQuery', N1qlQuery, false, true), 'Direct', J$.R(7206393, 'N1qlStringQuery', N1qlStringQuery, false, true));
            J$.P(7206745, J$.G(7206417, J$.R(7206409, 'N1qlStringQuery', N1qlStringQuery, false, true), 'prototype'), 'consistency', J$.T(7206737, function (val) {
                jalangiLabel3:
                    while (true) {
                        try {
                            J$.Fe(7206713, arguments.callee, this, arguments);
                            arguments = J$.N(7206721, 'arguments', arguments, true, false, false);
                            val = J$.N(7206729, 'val', val, true, false, false);
                            if (J$.C(386248, J$.B(726322, '!==', J$.G(7206441, J$.G(7206433, J$.R(7206425, 'this', this, false, false), 'options'), 'scan_vectors'), J$.T(7206449, undefined, 24, false)))) {
                                throw J$.F(7206473, J$.I(typeof Error === 'undefined' ? Error = J$.R(7206457, 'Error', undefined, true, true) : Error = J$.R(7206457, 'Error', Error, true, true)), true)(J$.T(7206465, 'consistency and consistentWith must be use exclusively.', 21, false));
                            }
                            if (J$.C(386272, J$.B(726330, '===', J$.R(7206481, 'val', val, false, false), J$.G(7206505, J$.G(7206497, J$.R(7206489, 'N1qlQuery', N1qlQuery, false, true), 'Consistency'), 'NOT_BOUNDED')))) {
                                J$.P(7206537, J$.G(7206521, J$.R(7206513, 'this', this, false, false), 'options'), 'scan_consistency', J$.T(7206529, 'not_bounded', 21, false));
                            } else if (J$.C(386264, J$.B(726338, '===', J$.R(7206545, 'val', val, false, false), J$.G(7206569, J$.G(7206561, J$.R(7206553, 'N1qlQuery', N1qlQuery, false, true), 'Consistency'), 'REQUEST_PLUS')))) {
                                J$.P(7206601, J$.G(7206585, J$.R(7206577, 'this', this, false, false), 'options'), 'scan_consistency', J$.T(7206593, 'request_plus', 21, false));
                            } else if (J$.C(386256, J$.B(726346, '===', J$.R(7206609, 'val', val, false, false), J$.G(7206633, J$.G(7206625, J$.R(7206617, 'N1qlQuery', N1qlQuery, false, true), 'Consistency'), 'STATEMENT_PLUS')))) {
                                J$.P(7206665, J$.G(7206649, J$.R(7206641, 'this', this, false, false), 'options'), 'scan_consistency', J$.T(7206657, 'statement_plus', 21, false));
                            } else {
                                throw J$.F(7206689, J$.I(typeof TypeError === 'undefined' ? TypeError = J$.R(7206673, 'TypeError', undefined, true, true) : TypeError = J$.R(7206673, 'TypeError', TypeError, true, true)), true)(J$.T(7206681, 'invalid option passed.', 21, false));
                            }
                            return J$.Rt(7206705, J$.R(7206697, 'this', this, false, false));
                        } catch (J$e) {
                            J$.Ex(7208497, J$e);
                        } finally {
                            if (J$.Fr(7208505))
                                continue jalangiLabel3;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(7206921, J$.G(7206761, J$.R(7206753, 'N1qlStringQuery', N1qlStringQuery, false, true), 'prototype'), 'consistentWith', J$.T(7206913, function (state) {
                jalangiLabel4:
                    while (true) {
                        try {
                            J$.Fe(7206889, arguments.callee, this, arguments);
                            arguments = J$.N(7206897, 'arguments', arguments, true, false, false);
                            state = J$.N(7206905, 'state', state, true, false, false);
                            if (J$.C(386280, J$.B(726354, '!==', J$.G(7206785, J$.G(7206777, J$.R(7206769, 'this', this, false, false), 'options'), 'scan_consistency'), J$.T(7206793, undefined, 24, false)))) {
                                throw J$.F(7206817, J$.I(typeof Error === 'undefined' ? Error = J$.R(7206801, 'Error', undefined, true, true) : Error = J$.R(7206801, 'Error', Error, true, true)), true)(J$.T(7206809, 'consistency and consistentWith must be use exclusively.', 21, false));
                            }
                            J$.P(7206849, J$.G(7206833, J$.R(7206825, 'this', this, false, false), 'options'), 'scan_consistency', J$.T(7206841, 'at_plus', 21, false));
                            J$.P(7206881, J$.G(7206865, J$.R(7206857, 'this', this, false, false), 'options'), 'scan_vectors', J$.R(7206873, 'state', state, false, false));
                        } catch (J$e) {
                            J$.Ex(7208513, J$e);
                        } finally {
                            if (J$.Fr(7208521))
                                continue jalangiLabel4;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(7207017, J$.G(7206937, J$.R(7206929, 'N1qlStringQuery', N1qlStringQuery, false, true), 'prototype'), 'adhoc', J$.T(7207009, function (adhoc) {
                jalangiLabel5:
                    while (true) {
                        try {
                            J$.Fe(7206985, arguments.callee, this, arguments);
                            arguments = J$.N(7206993, 'arguments', arguments, true, false, false);
                            adhoc = J$.N(7207001, 'adhoc', adhoc, true, false, false);
                            J$.P(7206961, J$.R(7206945, 'this', this, false, false), 'isAdhoc', J$.U(726370, '!', J$.U(726362, '!', J$.R(7206953, 'adhoc', adhoc, false, false))));
                            return J$.Rt(7206977, J$.R(7206969, 'this', this, false, false));
                        } catch (J$e) {
                            J$.Ex(7208529, J$e);
                        } finally {
                            if (J$.Fr(7208537))
                                continue jalangiLabel5;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(7207121, J$.G(7207033, J$.R(7207025, 'N1qlStringQuery', N1qlStringQuery, false, true), 'prototype'), 'pretty', J$.T(7207113, function (pretty) {
                jalangiLabel6:
                    while (true) {
                        try {
                            J$.Fe(7207089, arguments.callee, this, arguments);
                            arguments = J$.N(7207097, 'arguments', arguments, true, false, false);
                            pretty = J$.N(7207105, 'pretty', pretty, true, false, false);
                            J$.P(7207065, J$.G(7207049, J$.R(7207041, 'this', this, false, false), 'options'), 'pretty', J$.U(726386, '!', J$.U(726378, '!', J$.R(7207057, 'pretty', pretty, false, false))));
                            return J$.Rt(7207081, J$.R(7207073, 'this', this, false, false));
                        } catch (J$e) {
                            J$.Ex(7208545, J$e);
                        } finally {
                            if (J$.Fr(7208553))
                                continue jalangiLabel6;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(7207233, J$.G(7207137, J$.R(7207129, 'N1qlStringQuery', N1qlStringQuery, false, true), 'prototype'), 'scanCap', J$.T(7207225, function (scanCap) {
                jalangiLabel7:
                    while (true) {
                        try {
                            J$.Fe(7207201, arguments.callee, this, arguments);
                            arguments = J$.N(7207209, 'arguments', arguments, true, false, false);
                            scanCap = J$.N(7207217, 'scanCap', scanCap, true, false, false);
                            J$.P(7207177, J$.G(7207153, J$.R(7207145, 'this', this, false, false), 'options'), 'scan_cap', J$.M(7207169, J$.R(7207161, 'scanCap', scanCap, false, false), 'toString', false)());
                            return J$.Rt(7207193, J$.R(7207185, 'this', this, false, false));
                        } catch (J$e) {
                            J$.Ex(7208561, J$e);
                        } finally {
                            if (J$.Fr(7208569))
                                continue jalangiLabel7;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(7207345, J$.G(7207249, J$.R(7207241, 'N1qlStringQuery', N1qlStringQuery, false, true), 'prototype'), 'pipelineBatch', J$.T(7207337, function (pipelineBatch) {
                jalangiLabel8:
                    while (true) {
                        try {
                            J$.Fe(7207313, arguments.callee, this, arguments);
                            arguments = J$.N(7207321, 'arguments', arguments, true, false, false);
                            pipelineBatch = J$.N(7207329, 'pipelineBatch', pipelineBatch, true, false, false);
                            J$.P(7207289, J$.G(7207265, J$.R(7207257, 'this', this, false, false), 'options'), 'pipeline_batch', J$.M(7207281, J$.R(7207273, 'pipelineBatch', pipelineBatch, false, false), 'toString', false)());
                            return J$.Rt(7207305, J$.R(7207297, 'this', this, false, false));
                        } catch (J$e) {
                            J$.Ex(7208577, J$e);
                        } finally {
                            if (J$.Fr(7208585))
                                continue jalangiLabel8;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(7207457, J$.G(7207361, J$.R(7207353, 'N1qlStringQuery', N1qlStringQuery, false, true), 'prototype'), 'pipelineCap', J$.T(7207449, function (pipelineCap) {
                jalangiLabel9:
                    while (true) {
                        try {
                            J$.Fe(7207425, arguments.callee, this, arguments);
                            arguments = J$.N(7207433, 'arguments', arguments, true, false, false);
                            pipelineCap = J$.N(7207441, 'pipelineCap', pipelineCap, true, false, false);
                            J$.P(7207401, J$.G(7207377, J$.R(7207369, 'this', this, false, false), 'options'), 'pipeline_cap', J$.M(7207393, J$.R(7207385, 'pipelineCap', pipelineCap, false, false), 'toString', false)());
                            return J$.Rt(7207417, J$.R(7207409, 'this', this, false, false));
                        } catch (J$e) {
                            J$.Ex(7208593, J$e);
                        } finally {
                            if (J$.Fr(7208601))
                                continue jalangiLabel9;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(7207561, J$.G(7207473, J$.R(7207465, 'N1qlStringQuery', N1qlStringQuery, false, true), 'prototype'), 'readonly', J$.T(7207553, function (readonly) {
                jalangiLabel10:
                    while (true) {
                        try {
                            J$.Fe(7207529, arguments.callee, this, arguments);
                            arguments = J$.N(7207537, 'arguments', arguments, true, false, false);
                            readonly = J$.N(7207545, 'readonly', readonly, true, false, false);
                            J$.P(7207505, J$.G(7207489, J$.R(7207481, 'this', this, false, false), 'options'), 'readonly', J$.U(726402, '!', J$.U(726394, '!', J$.R(7207497, 'readonly', readonly, false, false))));
                            return J$.Rt(7207521, J$.R(7207513, 'this', this, false, false));
                        } catch (J$e) {
                            J$.Ex(7208609, J$e);
                        } finally {
                            if (J$.Fr(7208617))
                                continue jalangiLabel10;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(7207665, J$.G(7207577, J$.R(7207569, 'N1qlStringQuery', N1qlStringQuery, false, true), 'prototype'), 'profile', J$.T(7207657, function (profileType) {
                jalangiLabel11:
                    while (true) {
                        try {
                            J$.Fe(7207633, arguments.callee, this, arguments);
                            arguments = J$.N(7207641, 'arguments', arguments, true, false, false);
                            profileType = J$.N(7207649, 'profileType', profileType, true, false, false);
                            J$.P(7207609, J$.G(7207593, J$.R(7207585, 'this', this, false, false), 'options'), 'profile', J$.R(7207601, 'profileType', profileType, false, false));
                            return J$.Rt(7207625, J$.R(7207617, 'this', this, false, false));
                        } catch (J$e) {
                            J$.Ex(7208625, J$e);
                        } finally {
                            if (J$.Fr(7208633))
                                continue jalangiLabel11;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(7207785, J$.G(7207681, J$.R(7207673, 'N1qlStringQuery', N1qlStringQuery, false, true), 'prototype'), 'rawParam', J$.T(7207777, function (name, value) {
                jalangiLabel12:
                    while (true) {
                        try {
                            J$.Fe(7207745, arguments.callee, this, arguments);
                            arguments = J$.N(7207753, 'arguments', arguments, true, false, false);
                            name = J$.N(7207761, 'name', name, true, false, false);
                            value = J$.N(7207769, 'value', value, true, false, false);
                            J$.P(7207721, J$.G(7207697, J$.R(7207689, 'this', this, false, false), 'options'), J$.R(7207705, 'name', name, false, false), J$.R(7207713, 'value', value, false, false));
                            return J$.Rt(7207737, J$.R(7207729, 'this', this, false, false));
                        } catch (J$e) {
                            J$.Ex(7208641, J$e);
                        } finally {
                            if (J$.Fr(7208649))
                                continue jalangiLabel12;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(7207889, J$.G(7207801, J$.R(7207793, 'N1qlStringQuery', N1qlStringQuery, false, true), 'prototype'), 'toString', J$.T(7207881, function (args) {
                jalangiLabel13:
                    while (true) {
                        try {
                            J$.Fe(7207857, arguments.callee, this, arguments);
                            arguments = J$.N(7207865, 'arguments', arguments, true, false, false);
                            args = J$.N(7207873, 'args', args, true, false, false);
                            return J$.Rt(7207849, J$.M(7207841, J$.R(7207809, 'qs', qs, false, true), 'stringify', false)(J$.M(7207833, J$.R(7207817, 'this', this, false, false), 'toObject', false)(J$.R(7207825, 'args', args, false, false))));
                        } catch (J$e) {
                            J$.Ex(7208657, J$e);
                        } finally {
                            if (J$.Fr(7208665))
                                continue jalangiLabel13;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(7208305, J$.G(7207905, J$.R(7207897, 'N1qlStringQuery', N1qlStringQuery, false, true), 'prototype'), 'toObject', J$.T(7208297, function (args) {
                jalangiLabel14:
                    while (true) {
                        try {
                            J$.Fe(7208249, arguments.callee, this, arguments);
                            arguments = J$.N(7208257, 'arguments', arguments, true, false, false);
                            args = J$.N(7208265, 'args', args, true, false, false);
                            J$.N(7208273, 'out', out, false, false, false);
                            J$.N(7208281, 'i', i, false, false, false);
                            J$.N(7208289, 'j', j, false, false, false);
                            if (J$.C(386288, J$.U(726410, '!', J$.R(7207913, 'args', args, false, false)))) {
                                return J$.Rt(7207937, J$.G(7207929, J$.R(7207921, 'this', this, false, false), 'options'));
                            }
                            var out = J$.W(7207953, 'out', J$.T(7207945, {}, 11, false), out, false, false);
                            for (var i in J$.H(7208065, J$.G(7207969, J$.R(7207961, 'this', this, false, false), 'options'))) {
                                J$.N(7208073, 'i', i, false, true, false);
                                {
                                    {
                                        if (J$.C(386296, J$.M(7208001, J$.G(7207985, J$.R(7207977, 'this', this, false, false), 'options'), 'hasOwnProperty', false)(J$.R(7207993, 'i', i, false, false)))) {
                                            J$.P(7208057, J$.R(7208009, 'out', out, false, false), J$.R(7208017, 'i', i, false, false), J$.G(7208049, J$.G(7208033, J$.R(7208025, 'this', this, false, false), 'options'), J$.R(7208041, 'i', i, false, false)));
                                        }
                                    }
                                }
                            }
                            if (J$.C(386312, J$.M(7208097, J$.I(typeof Array === 'undefined' ? Array = J$.R(7208081, 'Array', undefined, true, true) : Array = J$.R(7208081, 'Array', Array, true, true)), 'isArray', false)(J$.R(7208089, 'args', args, false, false)))) {
                                J$.P(7208121, J$.R(7208105, 'out', out, false, false), 'args', J$.R(7208113, 'args', args, false, false));
                            } else {
                                for (var j in J$.H(7208217, J$.R(7208129, 'args', args, false, false))) {
                                    J$.N(7208225, 'j', j, false, true, false);
                                    {
                                        {
                                            if (J$.C(386304, J$.M(7208153, J$.R(7208137, 'args', args, false, false), 'hasOwnProperty', false)(J$.R(7208145, 'j', j, false, false)))) {
                                                J$.P(7208209, J$.R(7208161, 'out', out, false, false), J$.B(726418, '+', J$.T(7208169, '$', 21, false), J$.R(7208177, 'j', j, false, false)), J$.G(7208201, J$.R(7208185, 'args', args, false, false), J$.R(7208193, 'j', j, false, false)));
                                            }
                                        }
                                    }
                                }
                            }
                            return J$.Rt(7208241, J$.R(7208233, 'out', out, false, false));
                        } catch (J$e) {
                            J$.Ex(7208673, J$e);
                        } finally {
                            if (J$.Fr(7208681))
                                continue jalangiLabel14;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(7208385, J$.R(7208313, 'N1qlQuery', N1qlQuery, false, true), 'fromString', J$.T(7208377, function (str) {
                jalangiLabel15:
                    while (true) {
                        try {
                            J$.Fe(7208353, arguments.callee, this, arguments);
                            arguments = J$.N(7208361, 'arguments', arguments, true, false, false);
                            str = J$.N(7208369, 'str', str, true, false, false);
                            return J$.Rt(7208345, J$.F(7208337, J$.R(7208321, 'N1qlStringQuery', N1qlStringQuery, false, true), true)(J$.R(7208329, 'str', str, false, false)));
                        } catch (J$e) {
                            J$.Ex(7208689, J$e);
                        } finally {
                            if (J$.Fr(7208697))
                                continue jalangiLabel15;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
        } catch (J$e) {
            J$.Ex(7208705, J$e);
        } finally {
            if (J$.Sr(7208713))
                continue jalangiLabel16;
            else
                break jalangiLabel16;
        }
    }
// JALANGI DO NOT INSTRUMENT

