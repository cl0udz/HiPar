J$.noInstrEval = false;
jalangiLabel3:
    while (true) {
        try {
            J$.Se(7090849, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestCouchNode/node_modules/couchbase/lib/auth.js');
            function ClassicAuthenticator(buckets, username, password) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(7090569, arguments.callee, this, arguments);
                            arguments = J$.N(7090577, 'arguments', arguments, true, false, false);
                            buckets = J$.N(7090585, 'buckets', buckets, true, false, false);
                            username = J$.N(7090593, 'username', username, true, false, false);
                            password = J$.N(7090601, 'password', password, true, false, false);
                            J$.P(7090513, J$.R(7090497, 'this', this, false, false), 'buckets', J$.R(7090505, 'buckets', buckets, false, false));
                            J$.P(7090537, J$.R(7090521, 'this', this, false, false), 'username', J$.R(7090529, 'username', username, false, false));
                            J$.P(7090561, J$.R(7090545, 'this', this, false, false), 'password', J$.R(7090553, 'password', password, false, false));
                        } catch (J$e) {
                            J$.Ex(7090905, J$e);
                        } finally {
                            if (J$.Fr(7090913))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function PasswordAuthenticator(username, password) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(7090689, arguments.callee, this, arguments);
                            arguments = J$.N(7090697, 'arguments', arguments, true, false, false);
                            username = J$.N(7090705, 'username', username, true, false, false);
                            password = J$.N(7090713, 'password', password, true, false, false);
                            J$.P(7090657, J$.R(7090641, 'this', this, false, false), 'username', J$.R(7090649, 'username', username, false, false));
                            J$.P(7090681, J$.R(7090665, 'this', this, false, false), 'password', J$.R(7090673, 'password', password, false, false));
                        } catch (J$e) {
                            J$.Ex(7090921, J$e);
                        } finally {
                            if (J$.Fr(7090929))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function CertAuthenticator() {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(7090801, arguments.callee, this, arguments);
                            arguments = J$.N(7090809, 'arguments', arguments, true, false, false);
                            J$.P(7090769, J$.R(7090753, 'this', this, false, false), 'username', J$.T(7090761, '', 21, false));
                            J$.P(7090793, J$.R(7090777, 'this', this, false, false), 'password', J$.T(7090785, '', 21, false));
                        } catch (J$e) {
                            J$.Ex(7090937, J$e);
                        } finally {
                            if (J$.Fr(7090945))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }
            ClassicAuthenticator = J$.N(7090865, 'ClassicAuthenticator', J$.T(7090857, ClassicAuthenticator, 12, false), true, false, false);
            PasswordAuthenticator = J$.N(7090881, 'PasswordAuthenticator', J$.T(7090873, PasswordAuthenticator, 12, false), true, false, false);
            CertAuthenticator = J$.N(7090897, 'CertAuthenticator', J$.T(7090889, CertAuthenticator, 12, false), true, false, false);
            J$.T(7090489, 'use strict', 21, false);
            J$.P(7090633, J$.G(7090617, J$.I(typeof module === 'undefined' ? module = J$.R(7090609, 'module', undefined, true, true) : module = J$.R(7090609, 'module', module, true, true)), 'exports'), 'ClassicAuthenticator', J$.R(7090625, 'ClassicAuthenticator', ClassicAuthenticator, false, true));
            J$.P(7090745, J$.G(7090729, J$.I(typeof module === 'undefined' ? module = J$.R(7090721, 'module', undefined, true, true) : module = J$.R(7090721, 'module', module, true, true)), 'exports'), 'PasswordAuthenticator', J$.R(7090737, 'PasswordAuthenticator', PasswordAuthenticator, false, true));
            J$.P(7090841, J$.G(7090825, J$.I(typeof module === 'undefined' ? module = J$.R(7090817, 'module', undefined, true, true) : module = J$.R(7090817, 'module', module, true, true)), 'exports'), 'CertAuthenticator', J$.R(7090833, 'CertAuthenticator', CertAuthenticator, false, true));
        } catch (J$e) {
            J$.Ex(7090953, J$e);
        } finally {
            if (J$.Sr(7090961))
                continue jalangiLabel3;
            else
                break jalangiLabel3;
        }
    }
// JALANGI DO NOT INSTRUMENT

