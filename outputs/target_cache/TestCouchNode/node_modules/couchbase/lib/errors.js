J$.noInstrEval = false;
jalangiLabel0:
    while (true) {
        try {
            J$.Se(7169553, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestCouchNode/node_modules/couchbase/lib/errors.js');
            J$.N(7169561, 'binding', binding, false, false, false);
            J$.N(7169569, 'CONST', CONST, false, false, false);
            J$.T(7167985, 'use strict', 21, false);
            var binding = J$.W(7168017, 'binding', J$.F(7168009, J$.I(typeof require === 'undefined' ? require = J$.R(7167993, 'require', undefined, true, true) : require = J$.R(7167993, 'require', require, true, true)), false)(J$.T(7168001, './binding', 21, false)), binding, false, true);
            var CONST = J$.W(7168041, 'CONST', J$.G(7168033, J$.R(7168025, 'binding', binding, false, true), 'Constants'), CONST, false, true);
            J$.P(7169545, J$.I(typeof module === 'undefined' ? module = J$.R(7168049, 'module', undefined, true, true) : module = J$.R(7168049, 'module', module, true, true)), 'exports', J$.T(7169537, {
                success: J$.G(7168065, J$.R(7168057, 'CONST', CONST, false, true), 'SUCCESS'),
                authContinue: J$.G(7168081, J$.R(7168073, 'CONST', CONST, false, true), 'AUTH_CONTINUE'),
                authError: J$.G(7168097, J$.R(7168089, 'CONST', CONST, false, true), 'AUTH_ERROR'),
                deltaBadVal: J$.G(7168113, J$.R(7168105, 'CONST', CONST, false, true), 'DELTA_BADVAL'),
                objectTooBig: J$.G(7168129, J$.R(7168121, 'CONST', CONST, false, true), 'E2BIG'),
                serverBusy: J$.G(7168145, J$.R(7168137, 'CONST', CONST, false, true), 'EBUSY'),
                cLibInternal: J$.G(7168161, J$.R(7168153, 'CONST', CONST, false, true), 'EINTERNAL'),
                cLibInvalidArgument: J$.G(7168177, J$.R(7168169, 'CONST', CONST, false, true), 'EINVAL'),
                cLibOutOfMemory: J$.G(7168193, J$.R(7168185, 'CONST', CONST, false, true), 'ENOMEM'),
                invalidRange: J$.G(7168209, J$.R(7168201, 'CONST', CONST, false, true), 'ERANGE'),
                cLibGenericError: J$.G(7168225, J$.R(7168217, 'CONST', CONST, false, true), 'ERROR'),
                temporaryError: J$.G(7168241, J$.R(7168233, 'CONST', CONST, false, true), 'ETMPFAIL'),
                keyAlreadyExists: J$.G(7168257, J$.R(7168249, 'CONST', CONST, false, true), 'KEY_EEXISTS'),
                keyNotFound: J$.G(7168273, J$.R(7168265, 'CONST', CONST, false, true), 'KEY_ENOENT'),
                failedToOpenLibrary: J$.G(7168289, J$.R(7168281, 'CONST', CONST, false, true), 'DLOPEN_FAILED'),
                failedToFindSymbol: J$.G(7168305, J$.R(7168297, 'CONST', CONST, false, true), 'DLSYM_FAILED'),
                networkError: J$.G(7168321, J$.R(7168313, 'CONST', CONST, false, true), 'NETWORK_ERROR'),
                wrongServer: J$.G(7168337, J$.R(7168329, 'CONST', CONST, false, true), 'NOT_MY_VBUCKET'),
                notMyVBucket: J$.G(7168353, J$.R(7168345, 'CONST', CONST, false, true), 'NOT_MY_VBUCKET'),
                notStored: J$.G(7168369, J$.R(7168361, 'CONST', CONST, false, true), 'NOT_STORED'),
                notSupported: J$.G(7168385, J$.R(7168377, 'CONST', CONST, false, true), 'NOT_SUPPORTED'),
                unknownCommand: J$.G(7168401, J$.R(7168393, 'CONST', CONST, false, true), 'UNKNOWN_COMMAND'),
                unknownHost: J$.G(7168417, J$.R(7168409, 'CONST', CONST, false, true), 'UNKNOWN_HOST'),
                protocolError: J$.G(7168433, J$.R(7168425, 'CONST', CONST, false, true), 'PROTOCOL_ERROR'),
                timedOut: J$.G(7168449, J$.R(7168441, 'CONST', CONST, false, true), 'ETIMEDOUT'),
                connectError: J$.G(7168465, J$.R(7168457, 'CONST', CONST, false, true), 'CONNECT_ERROR'),
                bucketNotFound: J$.G(7168481, J$.R(7168473, 'CONST', CONST, false, true), 'BUCKET_ENOENT'),
                clientOutOfMemory: J$.G(7168497, J$.R(7168489, 'CONST', CONST, false, true), 'CLIENT_ENOMEM'),
                clientTemporaryError: J$.G(7168513, J$.R(7168505, 'CONST', CONST, false, true), 'CLIENT_ETMPFAIL'),
                badHandle: J$.G(7168529, J$.R(7168521, 'CONST', CONST, false, true), 'EBADHANDLE'),
                serverBug: J$.G(7168545, J$.R(7168537, 'CONST', CONST, false, true), 'SERVER_BUG'),
                invalidHostFormat: J$.G(7168561, J$.R(7168553, 'CONST', CONST, false, true), 'INVALID_HOST_FORMAT'),
                notEnoughNodes: J$.G(7168577, J$.R(7168569, 'CONST', CONST, false, true), 'DURABILITY_ETOOMANY'),
                duplicateItems: J$.G(7168593, J$.R(7168585, 'CONST', CONST, false, true), 'DUPLICATE_COMMANDS'),
                noMatchingServerForKey: J$.G(7168609, J$.R(7168601, 'CONST', CONST, false, true), 'NO_MATCHING_SERVER'),
                badEnvironmentVariable: J$.G(7168625, J$.R(7168617, 'CONST', CONST, false, true), 'BAD_ENVIRONMENT'),
                clientBusy: J$.G(7168641, J$.R(7168633, 'CONST', CONST, false, true), 'BUSY'),
                invalidUsername: J$.G(7168657, J$.R(7168649, 'CONST', CONST, false, true), 'INVALID_USERNAME'),
                configCacheInvalid: J$.G(7168673, J$.R(7168665, 'CONST', CONST, false, true), 'CONFIG_CACHE_INVALID'),
                saslmechUnavailable: J$.G(7168689, J$.R(7168681, 'CONST', CONST, false, true), 'SASLMECH_UNAVAILABLE'),
                tooManyRedirects: J$.G(7168705, J$.R(7168697, 'CONST', CONST, false, true), 'TOO_MANY_REDIRECTS'),
                mapChanged: J$.G(7168721, J$.R(7168713, 'CONST', CONST, false, true), 'MAP_CHANGED'),
                incompletePacket: J$.G(7168737, J$.R(7168729, 'CONST', CONST, false, true), 'INCOMPLETE_PACKET'),
                connectionRefused: J$.G(7168753, J$.R(7168745, 'CONST', CONST, false, true), 'ECONNREFUSED'),
                socketShutdown: J$.G(7168769, J$.R(7168761, 'CONST', CONST, false, true), 'ESOCKSHUTDOWN'),
                connectionReset: J$.G(7168785, J$.R(7168777, 'CONST', CONST, false, true), 'ECONNRESET'),
                cannotGetPort: J$.G(7168801, J$.R(7168793, 'CONST', CONST, false, true), 'ECANTGETPORT'),
                fdLimitReached: J$.G(7168817, J$.R(7168809, 'CONST', CONST, false, true), 'EFDLIMITREACHED'),
                netUnreachable: J$.G(7168833, J$.R(7168825, 'CONST', CONST, false, true), 'ENETUNREACH'),
                ctlUnknown: J$.G(7168849, J$.R(7168841, 'CONST', CONST, false, true), 'ECTL_UNKNOWN'),
                ctlUnsupportedMode: J$.G(7168865, J$.R(7168857, 'CONST', CONST, false, true), 'ECTL_UNSUPPMODE'),
                ctlBadArguments: J$.G(7168881, J$.R(7168873, 'CONST', CONST, false, true), 'ECTL_BADARG'),
                emptyKey: J$.G(7168897, J$.R(7168889, 'CONST', CONST, false, true), 'EMPTY_KEY'),
                sslError: J$.G(7168913, J$.R(7168905, 'CONST', CONST, false, true), 'SSL_ERROR'),
                sslCantVerify: J$.G(7168929, J$.R(7168921, 'CONST', CONST, false, true), 'SSL_CANTVERIFY'),
                internalSchedulingFailure: J$.G(7168945, J$.R(7168937, 'CONST', CONST, false, true), 'SCHEDFAIL_INTERNAL'),
                clientFeatureUnavailable: J$.G(7168961, J$.R(7168953, 'CONST', CONST, false, true), 'CLIENT_FEATURE_UNAVAILABLE'),
                optionsConflict: J$.G(7168977, J$.R(7168969, 'CONST', CONST, false, true), 'OPTIONS_CONFLICT'),
                httpError: J$.G(7168993, J$.R(7168985, 'CONST', CONST, false, true), 'HTTP_ERROR'),
                durabilityNoMutationTokens: J$.G(7169009, J$.R(7169001, 'CONST', CONST, false, true), 'DURABILITY_NO_MUTATION_TOKENS'),
                unknownMemcachedError: J$.G(7169025, J$.R(7169017, 'CONST', CONST, false, true), 'UNKNOWN_MEMCACHED_ERROR'),
                mutationLost: J$.G(7169041, J$.R(7169033, 'CONST', CONST, false, true), 'MUTATION_LOST'),
                subdocPathNotFound: J$.G(7169057, J$.R(7169049, 'CONST', CONST, false, true), 'SUBDOC_PATH_ENOENT'),
                subdocPathMismatch: J$.G(7169073, J$.R(7169065, 'CONST', CONST, false, true), 'SUBDOC_PATH_MISMATCH'),
                subdocPathInvalid: J$.G(7169089, J$.R(7169081, 'CONST', CONST, false, true), 'SUBDOC_PATH_EINVAL'),
                subdocPathTooBig: J$.G(7169105, J$.R(7169097, 'CONST', CONST, false, true), 'SUBDOC_PATH_E2BIG'),
                subdocDocTooDeep: J$.G(7169121, J$.R(7169113, 'CONST', CONST, false, true), 'SUBDOC_DOC_E2DEEP'),
                subdocCannotInsertValue: J$.G(7169137, J$.R(7169129, 'CONST', CONST, false, true), 'SUBDOC_VALUE_CANTINSERT'),
                subdocDocumentNotJson: J$.G(7169153, J$.R(7169145, 'CONST', CONST, false, true), 'SUBDOC_DOC_NOTJSON'),
                subdocInvalidRange: J$.G(7169169, J$.R(7169161, 'CONST', CONST, false, true), 'SUBDOC_NUM_ERANGE'),
                subdocBadDelta: J$.G(7169185, J$.R(7169177, 'CONST', CONST, false, true), 'SUBDOC_BAD_DELTA'),
                subdocPathExists: J$.G(7169201, J$.R(7169193, 'CONST', CONST, false, true), 'SUBDOC_PATH_EEXISTS'),
                subdocMultiFailure: J$.G(7169217, J$.R(7169209, 'CONST', CONST, false, true), 'SUBDOC_MULTI_FAILURE'),
                subdocValueTooDeep: J$.G(7169233, J$.R(7169225, 'CONST', CONST, false, true), 'SUBDOC_VALUE_E2DEEP'),
                invalidArgument: J$.G(7169249, J$.R(7169241, 'CONST', CONST, false, true), 'EINVAL_MCD'),
                emptyPath: J$.G(7169265, J$.R(7169257, 'CONST', CONST, false, true), 'EMPTY_PATH'),
                unknownSubdocCommand: J$.G(7169281, J$.R(7169273, 'CONST', CONST, false, true), 'UNKNOWN_SDCMD'),
                noCommands: J$.G(7169297, J$.R(7169289, 'CONST', CONST, false, true), 'ENO_COMMANDS'),
                queryError: J$.G(7169313, J$.R(7169305, 'CONST', CONST, false, true), 'QUERY_ERROR'),
                genericTmpError: J$.G(7169329, J$.R(7169321, 'CONST', CONST, false, true), 'GENERIC_TMPERR'),
                genericSubdocError: J$.G(7169345, J$.R(7169337, 'CONST', CONST, false, true), 'GENERIC_SUBDOCERR'),
                genericConstraintError: J$.G(7169361, J$.R(7169353, 'CONST', CONST, false, true), 'GENERIC_CONSTRAINT_ERR'),
                outOfMemory: J$.G(7169385, J$.R(7169369, 'CONST', CONST, false, true), J$.T(7169377, 'ErrorCode::MEMORY', 21, false)),
                invalidArguments: J$.G(7169409, J$.R(7169393, 'CONST', CONST, false, true), J$.T(7169401, 'ErrorCode::ARGUMENTS', 21, false)),
                schedulingError: J$.G(7169433, J$.R(7169417, 'CONST', CONST, false, true), J$.T(7169425, 'ErrorCode::SCHEDULING', 21, false)),
                checkResults: J$.G(7169457, J$.R(7169441, 'CONST', CONST, false, true), J$.T(7169449, 'ErrorCode::CHECK_RESULTS', 21, false)),
                genericError: J$.G(7169481, J$.R(7169465, 'CONST', CONST, false, true), J$.T(7169473, 'ErrorCode::GENERIC', 21, false)),
                durabilityFailed: J$.G(7169505, J$.R(7169489, 'CONST', CONST, false, true), J$.T(7169497, 'ErrorCode::DURABILITY_FAILED', 21, false)),
                restError: J$.G(7169529, J$.R(7169513, 'CONST', CONST, false, true), J$.T(7169521, 'ErrorCode::REST', 21, false))
            }, 11, false));
        } catch (J$e) {
            J$.Ex(7169577, J$e);
        } finally {
            if (J$.Sr(7169585))
                continue jalangiLabel0;
            else
                break jalangiLabel0;
        }
    }
// JALANGI DO NOT INSTRUMENT

