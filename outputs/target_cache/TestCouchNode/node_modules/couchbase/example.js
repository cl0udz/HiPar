J$.noInstrEval = false;
jalangiLabel4:
    while (true) {
        try {
            J$.Se(7088329, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestCouchNode/node_modules/couchbase/example.js');
            J$.N(7088337, 'couchbase', couchbase, false, false, false);
            J$.N(7088345, 'http', http, false, false, false);
            J$.N(7088353, 'fs', fs, false, false, false);
            J$.N(7088361, 'util', util, false, false, false);
            J$.N(7088369, 'port', port, false, false, false);
            J$.N(7088377, 'configFilename', configFilename, false, false, false);
            var couchbase = J$.W(7087513, 'couchbase', J$.F(7087433, J$.I(typeof require === 'undefined' ? require = J$.R(7087417, 'require', undefined, true, true) : require = J$.R(7087417, 'require', require, true, true)), false)(J$.T(7087425, './lib/couchbase.js', 21, false)), couchbase, false, true), http = J$.W(7087521, 'http', J$.F(7087457, J$.I(typeof require === 'undefined' ? require = J$.R(7087441, 'require', undefined, true, true) : require = J$.R(7087441, 'require', require, true, true)), false)(J$.T(7087449, 'http', 21, false)), http, false, true), fs = J$.W(7087529, 'fs', J$.F(7087481, J$.I(typeof require === 'undefined' ? require = J$.R(7087465, 'require', undefined, true, true) : require = J$.R(7087465, 'require', require, true, true)), false)(J$.T(7087473, 'fs', 21, false)), fs, false, true), util = J$.W(7087537, 'util', J$.F(7087505, J$.I(typeof require === 'undefined' ? require = J$.R(7087489, 'require', undefined, true, true) : require = J$.R(7087489, 'require', require, true, true)), false)(J$.T(7087497, 'util', 21, false)), util, false, true);
            var port = J$.W(7087553, 'port', J$.T(7087545, 8080, 22, false), port, false, true);
            var configFilename = J$.W(7087569, 'configFilename', J$.T(7087561, 'config.json', 21, false), configFilename, false, true);
            if (J$.C(379864, J$.M(7087593, J$.R(7087577, 'fs', fs, false, true), 'existsSync', false)(J$.R(7087585, 'configFilename', configFilename, false, true)))) {
                config = J$.W(7087641, 'config', J$.M(7087633, J$.I(typeof JSON === 'undefined' ? JSON = J$.R(7087601, 'JSON', undefined, true, true) : JSON = J$.R(7087601, 'JSON', JSON, true, true)), 'parse', false)(J$.M(7087625, J$.R(7087609, 'fs', fs, false, true), 'readFileSync', false)(J$.R(7087617, 'configFilename', configFilename, false, true))), J$.I(typeof config === 'undefined' ? undefined : config), true, true);
            } else {
                J$.M(7087673, J$.I(typeof console === 'undefined' ? console = J$.R(7087649, 'console', undefined, true, true) : console = J$.R(7087649, 'console', console, true, true)), 'log', false)(J$.B(718378, '+', J$.R(7087657, 'configFilename', configFilename, false, true), J$.T(7087665, ' not found. Using default', 21, false)));
                config = J$.W(7087689, 'config', J$.T(7087681, {}, 11, false), J$.I(typeof config === 'undefined' ? undefined : config), true, true);
            }
            bucket = J$.W(7087769, 'bucket', J$.M(7087761, J$.R(7087697, 'couchbase', couchbase, false, true), 'Connection', true)(J$.I(typeof config === 'undefined' ? config = J$.R(7087705, 'config', undefined, true, true) : config = J$.R(7087705, 'config', config, true, true)), J$.T(7087753, function (err) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(7087729, arguments.callee, this, arguments);
                            arguments = J$.N(7087737, 'arguments', arguments, true, false, false);
                            err = J$.N(7087745, 'err', err, true, false, false);
                            if (J$.C(379872, J$.R(7087713, 'err', err, false, false))) {
                                throw J$.R(7087721, 'err', err, false, false);
                            }
                        } catch (J$e) {
                            J$.Ex(7088385, J$e);
                        } finally {
                            if (J$.Fr(7088393))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false)), J$.I(typeof bucket === 'undefined' ? undefined : bucket), true, true);
            J$.M(7088289, J$.M(7088273, J$.R(7087777, 'http', http, false, true), 'createServer', false)(J$.T(7088265, function (req, resp) {
                jalangiLabel3:
                    while (true) {
                        try {
                            J$.Fe(7088233, arguments.callee, this, arguments);
                            arguments = J$.N(7088241, 'arguments', arguments, true, false, false);
                            req = J$.N(7088249, 'req', req, true, false, false);
                            resp = J$.N(7088257, 'resp', resp, true, false, false);
                            J$.M(7088225, J$.I(typeof bucket === 'undefined' ? bucket = J$.R(7087785, 'bucket', undefined, true, true) : bucket = J$.R(7087785, 'bucket', bucket, true, true)), 'get', false)(J$.T(7087793, 'hitcount', 21, false), J$.T(7088217, function (err, result) {
                                jalangiLabel2:
                                    while (true) {
                                        try {
                                            J$.Fe(7088177, arguments.callee, this, arguments);
                                            arguments = J$.N(7088185, 'arguments', arguments, true, false, false);
                                            err = J$.N(7088193, 'err', err, true, false, false);
                                            result = J$.N(7088201, 'result', result, true, false, false);
                                            J$.N(7088209, 'doc', doc, false, false, false);
                                            var doc = J$.W(7087817, 'doc', J$.G(7087809, J$.R(7087801, 'result', result, false, false), 'value'), doc, false, false);
                                            if (J$.C(379880, J$.U(718386, '!', J$.R(7087825, 'doc', doc, false, false)))) {
                                                doc = J$.W(7087849, 'doc', J$.T(7087841, { count: J$.T(7087833, 0, 22, false) }, 11, false), doc, false, false);
                                            }
                                            J$.B(718394, '-', J$.A(7087865, J$.R(7087857, 'doc', doc, false, false), 'count', '+')(1), 1);
                                            J$.M(7087889, J$.R(7087873, 'resp', resp, false, false), 'writeHead', false)(J$.T(7087881, 200, 22, false));
                                            J$.M(7087929, J$.I(typeof console === 'undefined' ? console = J$.R(7087897, 'console', undefined, true, true) : console = J$.R(7087897, 'console', console, true, true)), 'log', false)(J$.T(7087905, 'hits', 21, false), J$.G(7087921, J$.R(7087913, 'doc', doc, false, false), 'count'));
                                            J$.M(7088169, J$.I(typeof bucket === 'undefined' ? bucket = J$.R(7087937, 'bucket', undefined, true, true) : bucket = J$.R(7087937, 'bucket', bucket, true, true)), 'set', false)(J$.T(7087945, 'hitcount', 21, false), J$.R(7087953, 'doc', doc, false, false), J$.T(7087961, {}, 11, false), J$.T(7088161, function (err) {
                                                jalangiLabel1:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(7088137, arguments.callee, this, arguments);
                                                            arguments = J$.N(7088145, 'arguments', arguments, true, false, false);
                                                            err = J$.N(7088153, 'err', err, true, false, false);
                                                            if (J$.C(379888, J$.R(7087969, 'err', err, false, false))) {
                                                                J$.M(7088017, J$.I(typeof console === 'undefined' ? console = J$.R(7087977, 'console', undefined, true, true) : console = J$.R(7087977, 'console', console, true, true)), 'warn', false)(J$.B(718402, '+', J$.T(7087985, 'Failed to store hit counter: ', 21, false), J$.M(7088009, J$.R(7087993, 'util', util, false, true), 'inspect', false)(J$.R(7088001, 'err', err, false, false))));
                                                                J$.M(7088081, J$.R(7088025, 'resp', resp, false, false), 'end', false)(J$.B(718426, '+', J$.B(718418, '+', J$.B(718410, '+', J$.T(7088033, '<p>Internal server error. ', 21, false), J$.T(7088041, 'Failed to store:</p><pre>', 21, false)), J$.M(7088065, J$.R(7088049, 'util', util, false, true), 'inspect', false)(J$.R(7088057, 'err', err, false, false))), J$.T(7088073, '</pre>', 21, false)));
                                                            } else {
                                                                J$.M(7088129, J$.R(7088089, 'resp', resp, false, false), 'end', false)(J$.B(718442, '+', J$.B(718434, '+', J$.T(7088097, '<p>The server has seen ', 21, false), J$.G(7088113, J$.R(7088105, 'doc', doc, false, false), 'count')), J$.T(7088121, ' hits</p>', 21, false)));
                                                            }
                                                        } catch (J$e) {
                                                            J$.Ex(7088401, J$e);
                                                        } finally {
                                                            if (J$.Fr(7088409))
                                                                continue jalangiLabel1;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false));
                                        } catch (J$e) {
                                            J$.Ex(7088417, J$e);
                                        } finally {
                                            if (J$.Fr(7088425))
                                                continue jalangiLabel2;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                        } catch (J$e) {
                            J$.Ex(7088433, J$e);
                        } finally {
                            if (J$.Fr(7088441))
                                continue jalangiLabel3;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false)), 'listen', false)(J$.R(7088281, 'port', port, false, true));
            J$.M(7088321, J$.I(typeof console === 'undefined' ? console = J$.R(7088297, 'console', undefined, true, true) : console = J$.R(7088297, 'console', console, true, true)), 'log', false)(J$.B(718450, '+', J$.T(7088305, 'listening on http://localhost:', 21, false), J$.R(7088313, 'port', port, false, true)));
        } catch (J$e) {
            J$.Ex(7088449, J$e);
        } finally {
            if (J$.Sr(7088457))
                continue jalangiLabel4;
            else
                break jalangiLabel4;
        }
    }
// JALANGI DO NOT INSTRUMENT

