J$.noInstrEval = false;
jalangiLabel3:
    while (true) {
        try {
            J$.Se(7076585, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestCouchNode/node_modules/colorspace/test.js');
            J$.F(7076577, J$.I(typeof describe === 'undefined' ? describe = J$.R(7076137, 'describe', undefined, true, true) : describe = J$.R(7076137, 'describe', describe, true, true)), false)(J$.T(7076145, 'colorspace', 21, false), J$.T(7076569, function () {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(7076537, arguments.callee, this, arguments);
                            arguments = J$.N(7076545, 'arguments', arguments, true, false, false);
                            J$.N(7076553, 'colorspace', colorspace, false, false, false);
                            J$.N(7076561, 'assume', assume, false, false, false);
                            var colorspace = J$.W(7076177, 'colorspace', J$.F(7076169, J$.I(typeof require === 'undefined' ? require = J$.R(7076153, 'require', undefined, true, true) : require = J$.R(7076153, 'require', require, true, true)), false)(J$.T(7076161, './', 21, false)), colorspace, false, false);
                            var assume = J$.W(7076209, 'assume', J$.F(7076201, J$.I(typeof require === 'undefined' ? require = J$.R(7076185, 'require', undefined, true, true) : require = J$.R(7076185, 'require', require, true, true)), false)(J$.T(7076193, 'assume', 21, false)), assume, false, false);
                            J$.F(7076425, J$.I(typeof it === 'undefined' ? it = J$.R(7076217, 'it', undefined, true, true) : it = J$.R(7076217, 'it', it, true, true)), false)(J$.T(7076225, 'returns a consistent color for a given name', 21, false), J$.T(7076417, function () {
                                jalangiLabel0:
                                    while (true) {
                                        try {
                                            J$.Fe(7076401, arguments.callee, this, arguments);
                                            arguments = J$.N(7076409, 'arguments', arguments, true, false, false);
                                            J$.M(7076281, J$.F(7076265, J$.R(7076233, 'assume', assume, false, false), false)(J$.F(7076257, J$.R(7076241, 'colorspace', colorspace, false, false), false)(J$.T(7076249, 'bigpipe', 21, false))), 'equals', false)(J$.T(7076273, '#20f95a', 21, false));
                                            J$.M(7076337, J$.F(7076321, J$.R(7076289, 'assume', assume, false, false), false)(J$.F(7076313, J$.R(7076297, 'colorspace', colorspace, false, false), false)(J$.T(7076305, 'bigpipe', 21, false))), 'equals', false)(J$.T(7076329, '#20f95a', 21, false));
                                            J$.M(7076393, J$.F(7076377, J$.R(7076345, 'assume', assume, false, false), false)(J$.F(7076369, J$.R(7076353, 'colorspace', colorspace, false, false), false)(J$.T(7076361, 'bigpipe', 21, false))), 'equals', false)(J$.T(7076385, '#20f95a', 21, false));
                                        } catch (J$e) {
                                            J$.Ex(7076593, J$e);
                                        } finally {
                                            if (J$.Fr(7076601))
                                                continue jalangiLabel0;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            J$.F(7076529, J$.I(typeof it === 'undefined' ? it = J$.R(7076433, 'it', undefined, true, true) : it = J$.R(7076433, 'it', it, true, true)), false)(J$.T(7076441, 'tones the color when namespaced by a : char', 21, false), J$.T(7076521, function () {
                                jalangiLabel1:
                                    while (true) {
                                        try {
                                            J$.Fe(7076505, arguments.callee, this, arguments);
                                            arguments = J$.N(7076513, 'arguments', arguments, true, false, false);
                                            J$.M(7076497, J$.F(7076481, J$.R(7076449, 'assume', assume, false, false), false)(J$.F(7076473, J$.R(7076457, 'colorspace', colorspace, false, false), false)(J$.T(7076465, 'bigpipe:pagelet', 21, false))), 'equals', false)(J$.T(7076489, '#00FF2C', 21, false));
                                        } catch (J$e) {
                                            J$.Ex(7076609, J$e);
                                        } finally {
                                            if (J$.Fr(7076617))
                                                continue jalangiLabel1;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                        } catch (J$e) {
                            J$.Ex(7076625, J$e);
                        } finally {
                            if (J$.Fr(7076633))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
        } catch (J$e) {
            J$.Ex(7076641, J$e);
        } finally {
            if (J$.Sr(7076649))
                continue jalangiLabel3;
            else
                break jalangiLabel3;
        }
    }
// JALANGI DO NOT INSTRUMENT

