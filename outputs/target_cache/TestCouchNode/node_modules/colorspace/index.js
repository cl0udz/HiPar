J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(7076081, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestCouchNode/node_modules/colorspace/index.js');
            J$.N(7076089, 'color', color, false, false, false);
            J$.N(7076097, 'hex', hex, false, false, false);
            J$.T(7075577, 'use strict', 21, false);
            var color = J$.W(7075633, 'color', J$.F(7075601, J$.I(typeof require === 'undefined' ? require = J$.R(7075585, 'require', undefined, true, true) : require = J$.R(7075585, 'require', require, true, true)), false)(J$.T(7075593, 'color', 21, false)), color, false, true), hex = J$.W(7075641, 'hex', J$.F(7075625, J$.I(typeof require === 'undefined' ? require = J$.R(7075609, 'require', undefined, true, true) : require = J$.R(7075609, 'require', require, true, true)), false)(J$.T(7075617, 'text-hex', 21, false)), hex, false, true);
            J$.P(7076073, J$.I(typeof module === 'undefined' ? module = J$.R(7075649, 'module', undefined, true, true) : module = J$.R(7075649, 'module', module, true, true)), 'exports', J$.T(7076065, function colorspace(namespace, delimiter) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(7076001, arguments.callee, this, arguments);
                            arguments = J$.N(7076009, 'arguments', arguments, true, false, false);
                            namespace = J$.N(7076017, 'namespace', namespace, true, false, false);
                            delimiter = J$.N(7076025, 'delimiter', delimiter, true, false, false);
                            J$.N(7076033, 'split', split, false, false, false);
                            J$.N(7076041, 'base', base, false, false, false);
                            J$.N(7076049, 'i', i, false, false, false);
                            J$.N(7076057, 'l', l, false, false, false);
                            var split = J$.W(7075689, 'split', J$.M(7075681, J$.R(7075657, 'namespace', namespace, false, false), 'split', false)(J$.C(379488, J$.R(7075665, 'delimiter', delimiter, false, false)) ? J$._() : J$.T(7075673, ':', 21, false)), split, false, false);
                            var base = J$.W(7075737, 'base', J$.F(7075729, J$.R(7075697, 'hex', hex, false, true), false)(J$.G(7075721, J$.R(7075705, 'split', split, false, false), J$.T(7075713, 0, 22, false))), base, false, false);
                            if (J$.C(379496, J$.U(717618, '!', J$.G(7075753, J$.R(7075745, 'split', split, false, false), 'length'))))
                                return J$.Rt(7075769, J$.R(7075761, 'base', base, false, false));
                            for (var i = J$.W(7075809, 'i', J$.T(7075777, 0, 22, false), i, false, false), l = J$.W(7075817, 'l', J$.B(717626, '-', J$.G(7075793, J$.R(7075785, 'split', split, false, false), 'length'), J$.T(7075801, 1, 22, false)), l, false, false); J$.C(379504, J$.B(717634, '<', J$.R(7075825, 'i', i, false, false), J$.R(7075833, 'l', l, false, false))); J$.B(717658, '-', i = J$.W(7075849, 'i', J$.B(717650, '+', J$.U(717642, '+', J$.R(7075841, 'i', i, false, false)), 1), i, false, false), 1)) {
                                base = J$.W(7075977, 'base', J$.M(7075969, J$.M(7075961, J$.M(7075945, J$.F(7075873, J$.R(7075857, 'color', color, false, true), false)(J$.R(7075865, 'base', base, false, false)), 'mix', false)(J$.F(7075937, J$.R(7075881, 'color', color, false, true), false)(J$.F(7075929, J$.R(7075889, 'hex', hex, false, true), false)(J$.G(7075921, J$.R(7075897, 'split', split, false, false), J$.B(717666, '+', J$.R(7075905, 'i', i, false, false), J$.T(7075913, 1, 22, false)))))), 'saturate', false)(J$.T(7075953, 1, 22, false)), 'hex', false)(), base, false, false);
                            }
                            return J$.Rt(7075993, J$.R(7075985, 'base', base, false, false));
                        } catch (J$e) {
                            J$.Ex(7076105, J$e);
                        } finally {
                            if (J$.Fr(7076113))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
        } catch (J$e) {
            J$.Ex(7076121, J$e);
        } finally {
            if (J$.Sr(7076129))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

