J$.noInstrEval = false;
jalangiLabel3:
    while (true) {
        try {
            J$.Se(7326161, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestCouchNode/node_modules/ecc-jsbn/index.js');
            function unstupid(hex, len) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(7325089, arguments.callee, this, arguments);
                            arguments = J$.N(7325097, 'arguments', arguments, true, false, false);
                            hex = J$.N(7325105, 'hex', hex, true, false, false);
                            len = J$.N(7325113, 'len', len, true, false, false);
                            return J$.Rt(7325081, J$.C(390424, J$.B(735210, '>=', J$.G(7325017, J$.R(7325009, 'hex', hex, false, false), 'length'), J$.R(7325025, 'len', len, false, false))) ? J$.R(7325033, 'hex', hex, false, false) : J$.F(7325073, J$.R(7325041, 'unstupid', unstupid, false, true), false)(J$.B(735218, '+', J$.T(7325049, '0', 21, false), J$.R(7325057, 'hex', hex, false, false)), J$.R(7325065, 'len', len, false, false)));
                        } catch (J$e) {
                            J$.Ex(7326217, J$e);
                        } finally {
                            if (J$.Fr(7326225))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(7326169, 'crypto', crypto, false, false, false);
            J$.N(7326177, 'BigInteger', BigInteger, false, false, false);
            J$.N(7326185, 'ECPointFp', ECPointFp, false, false, false);
            J$.N(7326193, 'Buffer', Buffer, false, false, false);
            unstupid = J$.N(7326209, 'unstupid', J$.T(7326201, unstupid, 12, false), true, false, false);
            var crypto = J$.W(7324841, 'crypto', J$.F(7324833, J$.I(typeof require === 'undefined' ? require = J$.R(7324817, 'require', undefined, true, true) : require = J$.R(7324817, 'require', require, true, true)), false)(J$.T(7324825, 'crypto', 21, false)), crypto, false, true);
            var BigInteger = J$.W(7324881, 'BigInteger', J$.G(7324873, J$.F(7324865, J$.I(typeof require === 'undefined' ? require = J$.R(7324849, 'require', undefined, true, true) : require = J$.R(7324849, 'require', require, true, true)), false)(J$.T(7324857, 'jsbn', 21, false)), 'BigInteger'), BigInteger, false, true);
            var ECPointFp = J$.W(7324921, 'ECPointFp', J$.G(7324913, J$.F(7324905, J$.I(typeof require === 'undefined' ? require = J$.R(7324889, 'require', undefined, true, true) : require = J$.R(7324889, 'require', require, true, true)), false)(J$.T(7324897, './lib/ec.js', 21, false)), 'ECPointFp'), ECPointFp, false, true);
            var Buffer = J$.W(7324961, 'Buffer', J$.G(7324953, J$.F(7324945, J$.I(typeof require === 'undefined' ? require = J$.R(7324929, 'require', undefined, true, true) : require = J$.R(7324929, 'require', require, true, true)), false)(J$.T(7324937, 'safer-buffer', 21, false)), 'Buffer'), Buffer, false, true);
            J$.P(7325001, J$.I(typeof exports === 'undefined' ? exports = J$.R(7324969, 'exports', undefined, true, true) : exports = J$.R(7324969, 'exports', exports, true, true)), 'ECCurves', J$.F(7324993, J$.I(typeof require === 'undefined' ? require = J$.R(7324977, 'require', undefined, true, true) : require = J$.R(7324977, 'require', require, true, true)), false)(J$.T(7324985, './lib/sec.js', 21, false)));
            J$.P(7326153, J$.I(typeof exports === 'undefined' ? exports = J$.R(7325121, 'exports', undefined, true, true) : exports = J$.R(7325121, 'exports', exports, true, true)), 'ECKey', J$.T(7326145, function (curve, key, isPublic) {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(7326057, arguments.callee, this, arguments);
                            arguments = J$.N(7326065, 'arguments', arguments, true, false, false);
                            curve = J$.N(7326073, 'curve', curve, true, false, false);
                            key = J$.N(7326081, 'key', key, true, false, false);
                            isPublic = J$.N(7326089, 'isPublic', isPublic, true, false, false);
                            J$.N(7326097, 'priv', priv, false, false, false);
                            J$.N(7326105, 'c', c, false, false, false);
                            J$.N(7326113, 'n', n, false, false, false);
                            J$.N(7326121, 'bytes', bytes, false, false, false);
                            J$.N(7326129, 'n1', n1, false, false, false);
                            J$.N(7326137, 'r', r, false, false, false);
                            var priv;
                            var c = J$.W(7325145, 'c', J$.F(7325137, J$.R(7325129, 'curve', curve, false, false), false)(), c, false, false);
                            var n = J$.W(7325169, 'n', J$.M(7325161, J$.R(7325153, 'c', c, false, false), 'getN', false)(), n, false, false);
                            var bytes = J$.W(7325217, 'bytes', J$.M(7325209, J$.I(typeof Math === 'undefined' ? Math = J$.R(7325177, 'Math', undefined, true, true) : Math = J$.R(7325177, 'Math', Math, true, true)), 'floor', false)(J$.B(735226, '/', J$.M(7325193, J$.R(7325185, 'n', n, false, false), 'bitLength', false)(), J$.T(7325201, 8, 22, false))), bytes, false, false);
                            if (J$.C(390448, J$.R(7325225, 'key', key, false, false))) {
                                if (J$.C(390440, J$.R(7325233, 'isPublic', isPublic, false, false))) {
                                    var curve = J$.W(7325257, 'curve', J$.M(7325249, J$.R(7325241, 'c', c, false, false), 'getCurve', false)(), curve, false, false);
                                    J$.P(7325313, J$.R(7325265, 'this', this, false, false), 'P', J$.M(7325305, J$.R(7325273, 'curve', curve, false, false), 'decodePointHex', false)(J$.M(7325297, J$.R(7325281, 'key', key, false, false), 'toString', false)(J$.T(7325289, 'hex', 21, false))));
                                } else {
                                    if (J$.C(390432, J$.B(735234, '!=', J$.G(7325329, J$.R(7325321, 'key', key, false, false), 'length'), J$.R(7325337, 'bytes', bytes, false, false))))
                                        return J$.Rt(7325353, J$.T(7325345, false, 23, false));
                                    priv = J$.W(7325409, 'priv', J$.F(7325401, J$.R(7325361, 'BigInteger', BigInteger, false, true), true)(J$.M(7325385, J$.R(7325369, 'key', key, false, false), 'toString', false)(J$.T(7325377, 'hex', 21, false)), J$.T(7325393, 16, 22, false)), priv, false, false);
                                }
                            } else {
                                var n1 = J$.W(7325449, 'n1', J$.M(7325441, J$.R(7325417, 'n', n, false, false), 'subtract', false)(J$.G(7325433, J$.R(7325425, 'BigInteger', BigInteger, false, true), 'ONE')), n1, false, false);
                                var r = J$.W(7325505, 'r', J$.F(7325497, J$.R(7325457, 'BigInteger', BigInteger, false, true), true)(J$.M(7325489, J$.R(7325465, 'crypto', crypto, false, true), 'randomBytes', false)(J$.M(7325481, J$.R(7325473, 'n', n, false, false), 'bitLength', false)())), r, false, false);
                                priv = J$.W(7325561, 'priv', J$.M(7325553, J$.M(7325529, J$.R(7325513, 'r', r, false, false), 'mod', false)(J$.R(7325521, 'n1', n1, false, false)), 'add', false)(J$.G(7325545, J$.R(7325537, 'BigInteger', BigInteger, false, true), 'ONE')), priv, false, false);
                                J$.P(7325609, J$.R(7325569, 'this', this, false, false), 'P', J$.M(7325601, J$.M(7325585, J$.R(7325577, 'c', c, false, false), 'getG', false)(), 'multiply', false)(J$.R(7325593, 'priv', priv, false, false)));
                            }
                            if (J$.C(390456, J$.G(7325625, J$.R(7325617, 'this', this, false, false), 'P'))) {
                                J$.P(7325705, J$.R(7325633, 'this', this, false, false), 'PublicKey', J$.M(7325697, J$.R(7325641, 'Buffer', Buffer, false, true), 'from', false)(J$.M(7325681, J$.M(7325657, J$.R(7325649, 'c', c, false, false), 'getCurve', false)(), 'encodeCompressedPointHex', false)(J$.G(7325673, J$.R(7325665, 'this', this, false, false), 'P')), J$.T(7325689, 'hex', 21, false)));
                            }
                            if (J$.C(390480, J$.R(7325713, 'priv', priv, false, false))) {
                                J$.P(7325809, J$.R(7325721, 'this', this, false, false), 'PrivateKey', J$.M(7325801, J$.R(7325729, 'Buffer', Buffer, false, true), 'from', false)(J$.F(7325785, J$.R(7325737, 'unstupid', unstupid, false, true), false)(J$.M(7325761, J$.R(7325745, 'priv', priv, false, false), 'toString', false)(J$.T(7325753, 16, 22, false)), J$.B(735242, '*', J$.R(7325769, 'bytes', bytes, false, false), J$.T(7325777, 2, 22, false))), J$.T(7325793, 'hex', 21, false)));
                                J$.P(7326049, J$.R(7325817, 'this', this, false, false), 'deriveSharedSecret', J$.T(7326041, function (key) {
                                    jalangiLabel1:
                                        while (true) {
                                            try {
                                                J$.Fe(7326009, arguments.callee, this, arguments);
                                                arguments = J$.N(7326017, 'arguments', arguments, true, false, false);
                                                key = J$.N(7326025, 'key', key, true, false, false);
                                                J$.N(7326033, 'S', S, false, false, false);
                                                if (J$.C(390472, J$.C(390464, J$.U(735250, '!', J$.R(7325825, 'key', key, false, false))) ? J$._() : J$.U(735258, '!', J$.G(7325841, J$.R(7325833, 'key', key, false, false), 'P'))))
                                                    return J$.Rt(7325857, J$.T(7325849, false, 23, false));
                                                var S = J$.W(7325897, 'S', J$.M(7325889, J$.G(7325873, J$.R(7325865, 'key', key, false, false), 'P'), 'multiply', false)(J$.R(7325881, 'priv', priv, false, false)), S, false, false);
                                                return J$.Rt(7326001, J$.M(7325993, J$.R(7325905, 'Buffer', Buffer, false, true), 'from', false)(J$.F(7325977, J$.R(7325913, 'unstupid', unstupid, false, true), false)(J$.M(7325953, J$.M(7325937, J$.M(7325929, J$.R(7325921, 'S', S, false, false), 'getX', false)(), 'toBigInteger', false)(), 'toString', false)(J$.T(7325945, 16, 22, false)), J$.B(735266, '*', J$.R(7325961, 'bytes', bytes, false, false), J$.T(7325969, 2, 22, false))), J$.T(7325985, 'hex', 21, false)));
                                            } catch (J$e) {
                                                J$.Ex(7326233, J$e);
                                            } finally {
                                                if (J$.Fr(7326241))
                                                    continue jalangiLabel1;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false));
                            }
                        } catch (J$e) {
                            J$.Ex(7326249, J$e);
                        } finally {
                            if (J$.Fr(7326257))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
        } catch (J$e) {
            J$.Ex(7326265, J$e);
        } finally {
            if (J$.Sr(7326273))
                continue jalangiLabel3;
            else
                break jalangiLabel3;
        }
    }
// JALANGI DO NOT INSTRUMENT

