J$.noInstrEval = false;
jalangiLabel3:
    while (true) {
        try {
            J$.Se(7407553, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestCouchNode/node_modules/file-uri-to-path/test/test.js');
            J$.N(7407561, 'sep', sep, false, false, false);
            J$.N(7407569, 'assert', assert, false, false, false);
            J$.N(7407577, 'uri2path', uri2path, false, false, false);
            J$.N(7407585, 'tests', tests, false, false, false);
            var sep = J$.W(7407097, 'sep', J$.C(393720, J$.G(7407081, J$.F(7407073, J$.I(typeof require === 'undefined' ? require = J$.R(7407057, 'require', undefined, true, true) : require = J$.R(7407057, 'require', require, true, true)), false)(J$.T(7407065, 'path', 21, false)), 'sep')) ? J$._() : J$.T(7407089, '/', 21, false), sep, false, true);
            var assert = J$.W(7407129, 'assert', J$.F(7407121, J$.I(typeof require === 'undefined' ? require = J$.R(7407105, 'require', undefined, true, true) : require = J$.R(7407105, 'require', require, true, true)), false)(J$.T(7407113, 'assert', 21, false)), assert, false, true);
            var uri2path = J$.W(7407161, 'uri2path', J$.F(7407153, J$.I(typeof require === 'undefined' ? require = J$.R(7407137, 'require', undefined, true, true) : require = J$.R(7407137, 'require', require, true, true)), false)(J$.T(7407145, '../', 21, false)), uri2path, false, true);
            var tests = J$.W(7407193, 'tests', J$.F(7407185, J$.I(typeof require === 'undefined' ? require = J$.R(7407169, 'require', undefined, true, true) : require = J$.R(7407169, 'require', require, true, true)), false)(J$.T(7407177, './tests.json', 21, false)), tests, false, true);
            J$.F(7407545, J$.I(typeof describe === 'undefined' ? describe = J$.R(7407201, 'describe', undefined, true, true) : describe = J$.R(7407201, 'describe', describe, true, true)), false)(J$.T(7407209, 'file-uri-to-path', 21, false), J$.T(7407537, function () {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(7407521, arguments.callee, this, arguments);
                            arguments = J$.N(7407529, 'arguments', arguments, true, false, false);
                            J$.M(7407513, J$.M(7407233, J$.I(typeof Object === 'undefined' ? Object = J$.R(7407217, 'Object', undefined, true, true) : Object = J$.R(7407217, 'Object', Object, true, true)), 'keys', false)(J$.R(7407225, 'tests', tests, false, true)), 'forEach', false)(J$.T(7407505, function (uri) {
                                jalangiLabel1:
                                    while (true) {
                                        try {
                                            J$.Fe(7407473, arguments.callee, this, arguments);
                                            arguments = J$.N(7407481, 'arguments', arguments, true, false, false);
                                            uri = J$.N(7407489, 'uri', uri, true, false, false);
                                            J$.N(7407497, 'expected', expected, false, false, false);
                                            var expected = J$.W(7407289, 'expected', J$.M(7407281, J$.G(7407257, J$.R(7407241, 'tests', tests, false, true), J$.R(7407249, 'uri', uri, false, false)), 'replace', false)(J$.T(7407265, /\\/g, 14, false), J$.R(7407273, 'sep', sep, false, true)), expected, false, false);
                                            J$.F(7407465, J$.I(typeof it === 'undefined' ? it = J$.R(7407297, 'it', undefined, true, true) : it = J$.R(7407297, 'it', it, true, true)), false)(J$.B(739402, '+', J$.B(739394, '+', J$.B(739386, '+', J$.T(7407305, 'should convert ', 21, false), J$.M(7407329, J$.I(typeof JSON === 'undefined' ? JSON = J$.R(7407313, 'JSON', undefined, true, true) : JSON = J$.R(7407313, 'JSON', JSON, true, true)), 'stringify', false)(J$.R(7407321, 'uri', uri, false, false))), J$.T(7407337, ' to ', 21, false)), J$.M(7407361, J$.I(typeof JSON === 'undefined' ? JSON = J$.R(7407345, 'JSON', undefined, true, true) : JSON = J$.R(7407345, 'JSON', JSON, true, true)), 'stringify', false)(J$.R(7407353, 'expected', expected, false, false))), J$.T(7407457, function () {
                                                jalangiLabel0:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(7407433, arguments.callee, this, arguments);
                                                            arguments = J$.N(7407441, 'arguments', arguments, true, false, false);
                                                            J$.N(7407449, 'actual', actual, false, false, false);
                                                            var actual = J$.W(7407393, 'actual', J$.F(7407385, J$.R(7407369, 'uri2path', uri2path, false, true), false)(J$.R(7407377, 'uri', uri, false, false)), actual, false, false);
                                                            J$.M(7407425, J$.R(7407401, 'assert', assert, false, true), 'equal', false)(J$.R(7407409, 'actual', actual, false, false), J$.R(7407417, 'expected', expected, false, false));
                                                        } catch (J$e) {
                                                            J$.Ex(7407593, J$e);
                                                        } finally {
                                                            if (J$.Fr(7407601))
                                                                continue jalangiLabel0;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false));
                                        } catch (J$e) {
                                            J$.Ex(7407609, J$e);
                                        } finally {
                                            if (J$.Fr(7407617))
                                                continue jalangiLabel1;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                        } catch (J$e) {
                            J$.Ex(7407625, J$e);
                        } finally {
                            if (J$.Fr(7407633))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
        } catch (J$e) {
            J$.Ex(7407641, J$e);
        } finally {
            if (J$.Sr(7407649))
                continue jalangiLabel3;
            else
                break jalangiLabel3;
        }
    }
// JALANGI DO NOT INSTRUMENT

