J$.noInstrEval = false;
jalangiLabel8:
    while (true) {
        try {
            J$.Se(7348433, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestCouchNode/node_modules/enabled/test.js');
            J$.F(7348425, J$.I(typeof describe === 'undefined' ? describe = J$.R(7346465, 'describe', undefined, true, true) : describe = J$.R(7346465, 'describe', describe, true, true)), false)(J$.T(7346473, 'enabled', 21, false), J$.T(7348417, function () {
                jalangiLabel7:
                    while (true) {
                        try {
                            J$.Fe(7348385, arguments.callee, this, arguments);
                            arguments = J$.N(7348393, 'arguments', arguments, true, false, false);
                            J$.N(7348401, 'assume', assume, false, false, false);
                            J$.N(7348409, 'enabled', enabled, false, false, false);
                            J$.T(7346481, 'use strict', 21, false);
                            var assume = J$.W(7346537, 'assume', J$.F(7346505, J$.I(typeof require === 'undefined' ? require = J$.R(7346489, 'require', undefined, true, true) : require = J$.R(7346489, 'require', require, true, true)), false)(J$.T(7346497, 'assume', 21, false)), assume, false, false), enabled = J$.W(7346545, 'enabled', J$.F(7346529, J$.I(typeof require === 'undefined' ? require = J$.R(7346513, 'require', undefined, true, true) : require = J$.R(7346513, 'require', require, true, true)), false)(J$.T(7346521, './', 21, false)), enabled, false, false);
                            J$.F(7346649, J$.I(typeof beforeEach === 'undefined' ? beforeEach = J$.R(7346553, 'beforeEach', undefined, true, true) : beforeEach = J$.R(7346553, 'beforeEach', beforeEach, true, true)), false)(J$.T(7346641, function () {
                                jalangiLabel0:
                                    while (true) {
                                        try {
                                            J$.Fe(7346625, arguments.callee, this, arguments);
                                            arguments = J$.N(7346633, 'arguments', arguments, true, false, false);
                                            J$.P(7346585, J$.G(7346569, J$.I(typeof process === 'undefined' ? process = J$.R(7346561, 'process', undefined, true, true) : process = J$.R(7346561, 'process', process, true, true)), 'env'), 'DEBUG', J$.T(7346577, '', 21, false));
                                            J$.P(7346617, J$.G(7346601, J$.I(typeof process === 'undefined' ? process = J$.R(7346593, 'process', undefined, true, true) : process = J$.R(7346593, 'process', process, true, true)), 'env'), 'DIAGNOSTICS', J$.T(7346609, '', 21, false));
                                        } catch (J$e) {
                                            J$.Ex(7348441, J$e);
                                        } finally {
                                            if (J$.Fr(7348449))
                                                continue jalangiLabel0;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            J$.F(7346857, J$.I(typeof it === 'undefined' ? it = J$.R(7346657, 'it', undefined, true, true) : it = J$.R(7346657, 'it', it, true, true)), false)(J$.T(7346665, 'uses the `debug` env', 21, false), J$.T(7346849, function () {
                                jalangiLabel1:
                                    while (true) {
                                        try {
                                            J$.Fe(7346833, arguments.callee, this, arguments);
                                            arguments = J$.N(7346841, 'arguments', arguments, true, false, false);
                                            J$.P(7346697, J$.G(7346681, J$.I(typeof process === 'undefined' ? process = J$.R(7346673, 'process', undefined, true, true) : process = J$.R(7346673, 'process', process, true, true)), 'env'), 'DEBUG', J$.T(7346689, 'bigpipe', 21, false));
                                            J$.M(7346761, J$.G(7346753, J$.G(7346745, J$.F(7346737, J$.R(7346705, 'assume', assume, false, false), false)(J$.F(7346729, J$.R(7346713, 'enabled', enabled, false, false), false)(J$.T(7346721, 'bigpipe', 21, false))), 'to'), 'be'), 'true', false)();
                                            J$.M(7346825, J$.G(7346817, J$.G(7346809, J$.F(7346801, J$.R(7346769, 'assume', assume, false, false), false)(J$.F(7346793, J$.R(7346777, 'enabled', enabled, false, false), false)(J$.T(7346785, 'false', 21, false))), 'to'), 'be'), 'false', false)();
                                        } catch (J$e) {
                                            J$.Ex(7348457, J$e);
                                        } finally {
                                            if (J$.Fr(7348465))
                                                continue jalangiLabel1;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            J$.F(7347065, J$.I(typeof it === 'undefined' ? it = J$.R(7346865, 'it', undefined, true, true) : it = J$.R(7346865, 'it', it, true, true)), false)(J$.T(7346873, 'uses the `diagnostics` env', 21, false), J$.T(7347057, function () {
                                jalangiLabel2:
                                    while (true) {
                                        try {
                                            J$.Fe(7347041, arguments.callee, this, arguments);
                                            arguments = J$.N(7347049, 'arguments', arguments, true, false, false);
                                            J$.P(7346905, J$.G(7346889, J$.I(typeof process === 'undefined' ? process = J$.R(7346881, 'process', undefined, true, true) : process = J$.R(7346881, 'process', process, true, true)), 'env'), 'DIAGNOSTICS', J$.T(7346897, 'bigpipe', 21, false));
                                            J$.M(7346969, J$.G(7346961, J$.G(7346953, J$.F(7346945, J$.R(7346913, 'assume', assume, false, false), false)(J$.F(7346937, J$.R(7346921, 'enabled', enabled, false, false), false)(J$.T(7346929, 'bigpipe', 21, false))), 'to'), 'be'), 'true', false)();
                                            J$.M(7347033, J$.G(7347025, J$.G(7347017, J$.F(7347009, J$.R(7346977, 'assume', assume, false, false), false)(J$.F(7347001, J$.R(7346985, 'enabled', enabled, false, false), false)(J$.T(7346993, 'false', 21, false))), 'to'), 'be'), 'false', false)();
                                        } catch (J$e) {
                                            J$.Ex(7348473, J$e);
                                        } finally {
                                            if (J$.Fr(7348481))
                                                continue jalangiLabel2;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            J$.F(7347337, J$.I(typeof it === 'undefined' ? it = J$.R(7347073, 'it', undefined, true, true) : it = J$.R(7347073, 'it', it, true, true)), false)(J$.T(7347081, 'supports wildcards', 21, false), J$.T(7347329, function () {
                                jalangiLabel3:
                                    while (true) {
                                        try {
                                            J$.Fe(7347313, arguments.callee, this, arguments);
                                            arguments = J$.N(7347321, 'arguments', arguments, true, false, false);
                                            J$.P(7347113, J$.G(7347097, J$.I(typeof process === 'undefined' ? process = J$.R(7347089, 'process', undefined, true, true) : process = J$.R(7347089, 'process', process, true, true)), 'env'), 'DEBUG', J$.T(7347105, 'b*', 21, false));
                                            J$.M(7347177, J$.G(7347169, J$.G(7347161, J$.F(7347153, J$.R(7347121, 'assume', assume, false, false), false)(J$.F(7347145, J$.R(7347129, 'enabled', enabled, false, false), false)(J$.T(7347137, 'bigpipe', 21, false))), 'to'), 'be'), 'true', false)();
                                            J$.M(7347241, J$.G(7347233, J$.G(7347225, J$.F(7347217, J$.R(7347185, 'assume', assume, false, false), false)(J$.F(7347209, J$.R(7347193, 'enabled', enabled, false, false), false)(J$.T(7347201, 'bro-fist', 21, false))), 'to'), 'be'), 'true', false)();
                                            J$.M(7347305, J$.G(7347297, J$.G(7347289, J$.F(7347281, J$.R(7347249, 'assume', assume, false, false), false)(J$.F(7347273, J$.R(7347257, 'enabled', enabled, false, false), false)(J$.T(7347265, 'ro-fist', 21, false))), 'to'), 'be'), 'false', false)();
                                        } catch (J$e) {
                                            J$.Ex(7348489, J$e);
                                        } finally {
                                            if (J$.Fr(7348497))
                                                continue jalangiLabel3;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            J$.F(7347577, J$.I(typeof it === 'undefined' ? it = J$.R(7347345, 'it', undefined, true, true) : it = J$.R(7347345, 'it', it, true, true)), false)(J$.T(7347353, 'is disabled by default', 21, false), J$.T(7347569, function () {
                                jalangiLabel4:
                                    while (true) {
                                        try {
                                            J$.Fe(7347553, arguments.callee, this, arguments);
                                            arguments = J$.N(7347561, 'arguments', arguments, true, false, false);
                                            J$.P(7347385, J$.G(7347369, J$.I(typeof process === 'undefined' ? process = J$.R(7347361, 'process', undefined, true, true) : process = J$.R(7347361, 'process', process, true, true)), 'env'), 'DEBUG', J$.T(7347377, '', 21, false));
                                            J$.M(7347449, J$.G(7347441, J$.G(7347433, J$.F(7347425, J$.R(7347393, 'assume', assume, false, false), false)(J$.F(7347417, J$.R(7347401, 'enabled', enabled, false, false), false)(J$.T(7347409, 'bigpipe', 21, false))), 'to'), 'be'), 'false', false)();
                                            J$.P(7347481, J$.G(7347465, J$.I(typeof process === 'undefined' ? process = J$.R(7347457, 'process', undefined, true, true) : process = J$.R(7347457, 'process', process, true, true)), 'env'), 'DEBUG', J$.T(7347473, 'bigpipe', 21, false));
                                            J$.M(7347545, J$.G(7347537, J$.G(7347529, J$.F(7347521, J$.R(7347489, 'assume', assume, false, false), false)(J$.F(7347513, J$.R(7347497, 'enabled', enabled, false, false), false)(J$.T(7347505, 'bigpipe', 21, false))), 'to'), 'be'), 'true', false)();
                                        } catch (J$e) {
                                            J$.Ex(7348505, J$e);
                                        } finally {
                                            if (J$.Fr(7348513))
                                                continue jalangiLabel4;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            J$.F(7347977, J$.I(typeof it === 'undefined' ? it = J$.R(7347585, 'it', undefined, true, true) : it = J$.R(7347585, 'it', it, true, true)), false)(J$.T(7347593, 'can ignore loggers using a -', 21, false), J$.T(7347969, function () {
                                jalangiLabel5:
                                    while (true) {
                                        try {
                                            J$.Fe(7347953, arguments.callee, this, arguments);
                                            arguments = J$.N(7347961, 'arguments', arguments, true, false, false);
                                            J$.P(7347625, J$.G(7347609, J$.I(typeof process === 'undefined' ? process = J$.R(7347601, 'process', undefined, true, true) : process = J$.R(7347601, 'process', process, true, true)), 'env'), 'DEBUG', J$.T(7347617, 'bigpipe,-primus,sack,-other', 21, false));
                                            J$.M(7347689, J$.G(7347681, J$.G(7347673, J$.F(7347665, J$.R(7347633, 'assume', assume, false, false), false)(J$.F(7347657, J$.R(7347641, 'enabled', enabled, false, false), false)(J$.T(7347649, 'bigpipe', 21, false))), 'to'), 'be'), 'true', false)();
                                            J$.M(7347753, J$.G(7347745, J$.G(7347737, J$.F(7347729, J$.R(7347697, 'assume', assume, false, false), false)(J$.F(7347721, J$.R(7347705, 'enabled', enabled, false, false), false)(J$.T(7347713, 'sack', 21, false))), 'to'), 'be'), 'true', false)();
                                            J$.M(7347817, J$.G(7347809, J$.G(7347801, J$.F(7347793, J$.R(7347761, 'assume', assume, false, false), false)(J$.F(7347785, J$.R(7347769, 'enabled', enabled, false, false), false)(J$.T(7347777, 'primus', 21, false))), 'to'), 'be'), 'false', false)();
                                            J$.M(7347881, J$.G(7347873, J$.G(7347865, J$.F(7347857, J$.R(7347825, 'assume', assume, false, false), false)(J$.F(7347849, J$.R(7347833, 'enabled', enabled, false, false), false)(J$.T(7347841, 'other', 21, false))), 'to'), 'be'), 'false', false)();
                                            J$.M(7347945, J$.G(7347937, J$.G(7347929, J$.F(7347921, J$.R(7347889, 'assume', assume, false, false), false)(J$.F(7347913, J$.R(7347897, 'enabled', enabled, false, false), false)(J$.T(7347905, 'unknown', 21, false))), 'to'), 'be'), 'false', false)();
                                        } catch (J$e) {
                                            J$.Ex(7348521, J$e);
                                        } finally {
                                            if (J$.Fr(7348529))
                                                continue jalangiLabel5;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            J$.F(7348377, J$.I(typeof it === 'undefined' ? it = J$.R(7347985, 'it', undefined, true, true) : it = J$.R(7347985, 'it', it, true, true)), false)(J$.T(7347993, 'supports multiple ranges', 21, false), J$.T(7348369, function () {
                                jalangiLabel6:
                                    while (true) {
                                        try {
                                            J$.Fe(7348353, arguments.callee, this, arguments);
                                            arguments = J$.N(7348361, 'arguments', arguments, true, false, false);
                                            J$.P(7348025, J$.G(7348009, J$.I(typeof process === 'undefined' ? process = J$.R(7348001, 'process', undefined, true, true) : process = J$.R(7348001, 'process', process, true, true)), 'env'), 'DEBUG', J$.T(7348017, 'bigpipe*,primus*', 21, false));
                                            J$.M(7348089, J$.G(7348081, J$.G(7348073, J$.F(7348065, J$.R(7348033, 'assume', assume, false, false), false)(J$.F(7348057, J$.R(7348041, 'enabled', enabled, false, false), false)(J$.T(7348049, 'bigpipe:', 21, false))), 'to'), 'be'), 'true', false)();
                                            J$.M(7348153, J$.G(7348145, J$.G(7348137, J$.F(7348129, J$.R(7348097, 'assume', assume, false, false), false)(J$.F(7348121, J$.R(7348105, 'enabled', enabled, false, false), false)(J$.T(7348113, 'bigpipes', 21, false))), 'to'), 'be'), 'true', false)();
                                            J$.M(7348217, J$.G(7348209, J$.G(7348201, J$.F(7348193, J$.R(7348161, 'assume', assume, false, false), false)(J$.F(7348185, J$.R(7348169, 'enabled', enabled, false, false), false)(J$.T(7348177, 'primus:', 21, false))), 'to'), 'be'), 'true', false)();
                                            J$.M(7348281, J$.G(7348273, J$.G(7348265, J$.F(7348257, J$.R(7348225, 'assume', assume, false, false), false)(J$.F(7348249, J$.R(7348233, 'enabled', enabled, false, false), false)(J$.T(7348241, 'primush', 21, false))), 'to'), 'be'), 'true', false)();
                                            J$.M(7348345, J$.G(7348337, J$.G(7348329, J$.F(7348321, J$.R(7348289, 'assume', assume, false, false), false)(J$.F(7348313, J$.R(7348297, 'enabled', enabled, false, false), false)(J$.T(7348305, 'unknown', 21, false))), 'to'), 'be'), 'false', false)();
                                        } catch (J$e) {
                                            J$.Ex(7348537, J$e);
                                        } finally {
                                            if (J$.Fr(7348545))
                                                continue jalangiLabel6;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                        } catch (J$e) {
                            J$.Ex(7348553, J$e);
                        } finally {
                            if (J$.Fr(7348561))
                                continue jalangiLabel7;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
        } catch (J$e) {
            J$.Ex(7348569, J$e);
        } finally {
            if (J$.Sr(7348577))
                continue jalangiLabel8;
            else
                break jalangiLabel8;
        }
    }
// JALANGI DO NOT INSTRUMENT

