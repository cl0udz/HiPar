J$.noInstrEval = false;
jalangiLabel5:
    while (true) {
        try {
            J$.Se(5777737, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestCouchNode/node_modules/uuid/lib/v35.js');
            function uuidToBytes(uuid) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(5776625, arguments.callee, this, arguments);
                            arguments = J$.N(5776633, 'arguments', arguments, true, false, false);
                            uuid = J$.N(5776641, 'uuid', uuid, true, false, false);
                            J$.N(5776649, 'bytes', bytes, false, false, false);
                            var bytes = J$.W(5776497, 'bytes', J$.T(5776489, [], 10, false), bytes, false, false);
                            J$.M(5776601, J$.R(5776505, 'uuid', uuid, false, false), 'replace', false)(J$.T(5776513, /[a-fA-F0-9]{2}/g, 14, false), J$.T(5776593, function (hex) {
                                jalangiLabel0:
                                    while (true) {
                                        try {
                                            J$.Fe(5776569, arguments.callee, this, arguments);
                                            arguments = J$.N(5776577, 'arguments', arguments, true, false, false);
                                            hex = J$.N(5776585, 'hex', hex, true, false, false);
                                            J$.M(5776561, J$.R(5776521, 'bytes', bytes, false, false), 'push', false)(J$.F(5776553, J$.I(typeof parseInt === 'undefined' ? parseInt = J$.R(5776529, 'parseInt', undefined, true, true) : parseInt = J$.R(5776529, 'parseInt', parseInt, true, true)), false)(J$.R(5776537, 'hex', hex, false, false), J$.T(5776545, 16, 22, false)));
                                        } catch (J$e) {
                                            J$.Ex(5777785, J$e);
                                        } finally {
                                            if (J$.Fr(5777793))
                                                continue jalangiLabel0;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            return J$.Rt(5776617, J$.R(5776609, 'bytes', bytes, false, false));
                        } catch (J$e) {
                            J$.Ex(5777801, J$e);
                        } finally {
                            if (J$.Fr(5777809))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function stringToBytes(str) {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(5776865, arguments.callee, this, arguments);
                            arguments = J$.N(5776873, 'arguments', arguments, true, false, false);
                            str = J$.N(5776881, 'str', str, true, false, false);
                            J$.N(5776889, 'bytes', bytes, false, false, false);
                            J$.N(5776897, 'i', i, false, false, false);
                            str = J$.W(5776697, 'str', J$.F(5776689, J$.I(typeof unescape === 'undefined' ? unescape = J$.R(5776657, 'unescape', undefined, true, true) : unescape = J$.R(5776657, 'unescape', unescape, true, true)), false)(J$.F(5776681, J$.I(typeof encodeURIComponent === 'undefined' ? encodeURIComponent = J$.R(5776665, 'encodeURIComponent', undefined, true, true) : encodeURIComponent = J$.R(5776665, 'encodeURIComponent', encodeURIComponent, true, true)), false)(J$.R(5776673, 'str', str, false, false))), str, false, false);
                            var bytes = J$.W(5776737, 'bytes', J$.F(5776729, J$.I(typeof Array === 'undefined' ? Array = J$.R(5776705, 'Array', undefined, true, true) : Array = J$.R(5776705, 'Array', Array, true, true)), true)(J$.G(5776721, J$.R(5776713, 'str', str, false, false), 'length')), bytes, false, false);
                            for (var i = J$.W(5776753, 'i', J$.T(5776745, 0, 22, false), i, false, false); J$.C(299632, J$.B(691210, '<', J$.R(5776761, 'i', i, false, false), J$.G(5776777, J$.R(5776769, 'str', str, false, false), 'length'))); J$.B(691234, '-', i = J$.W(5776793, 'i', J$.B(691226, '+', J$.U(691218, '+', J$.R(5776785, 'i', i, false, false)), 1), i, false, false), 1)) {
                                J$.P(5776841, J$.R(5776801, 'bytes', bytes, false, false), J$.R(5776809, 'i', i, false, false), J$.M(5776833, J$.R(5776817, 'str', str, false, false), 'charCodeAt', false)(J$.R(5776825, 'i', i, false, false)));
                            }
                            return J$.Rt(5776857, J$.R(5776849, 'bytes', bytes, false, false));
                        } catch (J$e) {
                            J$.Ex(5777817, J$e);
                        } finally {
                            if (J$.Fr(5777825))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(5777745, 'bytesToUuid', bytesToUuid, false, false, false);
            uuidToBytes = J$.N(5777761, 'uuidToBytes', J$.T(5777753, uuidToBytes, 12, false), true, false, false);
            stringToBytes = J$.N(5777777, 'stringToBytes', J$.T(5777769, stringToBytes, 12, false), true, false, false);
            var bytesToUuid = J$.W(5776481, 'bytesToUuid', J$.F(5776473, J$.I(typeof require === 'undefined' ? require = J$.R(5776457, 'require', undefined, true, true) : require = J$.R(5776457, 'require', require, true, true)), false)(J$.T(5776465, './bytesToUuid', 21, false)), bytesToUuid, false, true);
            J$.P(5777729, J$.I(typeof module === 'undefined' ? module = J$.R(5776905, 'module', undefined, true, true) : module = J$.R(5776905, 'module', module, true, true)), 'exports', J$.T(5777721, function (name, version, hashfunc) {
                jalangiLabel4:
                    while (true) {
                        try {
                            J$.Fe(5777673, arguments.callee, this, arguments);
                            arguments = J$.N(5777681, 'arguments', arguments, true, false, false);
                            name = J$.N(5777689, 'name', name, true, false, false);
                            version = J$.N(5777697, 'version', version, true, false, false);
                            hashfunc = J$.N(5777705, 'hashfunc', hashfunc, true, false, false);
                            J$.N(5777713, 'generateUUID', generateUUID, false, false, false);
                            var generateUUID = J$.W(5777569, 'generateUUID', J$.T(5777561, function (value, namespace, buf, offset) {
                                jalangiLabel3:
                                    while (true) {
                                        try {
                                            J$.Fe(5777489, arguments.callee, this, arguments);
                                            arguments = J$.N(5777497, 'arguments', arguments, true, false, false);
                                            value = J$.N(5777505, 'value', value, true, false, false);
                                            namespace = J$.N(5777513, 'namespace', namespace, true, false, false);
                                            buf = J$.N(5777521, 'buf', buf, true, false, false);
                                            offset = J$.N(5777529, 'offset', offset, true, false, false);
                                            J$.N(5777537, 'off', off, false, false, false);
                                            J$.N(5777545, 'bytes', bytes, false, false, false);
                                            J$.N(5777553, 'idx', idx, false, false, false);
                                            var off = J$.W(5776937, 'off', J$.C(299648, J$.C(299640, J$.R(5776913, 'buf', buf, false, false)) ? J$.R(5776921, 'offset', offset, false, false) : J$._()) ? J$._() : J$.T(5776929, 0, 22, false), off, false, false);
                                            if (J$.C(299656, J$.B(691250, '==', J$.U(691242, 'typeof', J$.R(5776945, 'value', value, false, false)), J$.T(5776953, 'string', 21, false))))
                                                value = J$.W(5776985, 'value', J$.F(5776977, J$.R(5776961, 'stringToBytes', stringToBytes, false, true), false)(J$.R(5776969, 'value', value, false, false)), value, false, false);
                                            if (J$.C(299664, J$.B(691266, '==', J$.U(691258, 'typeof', J$.R(5776993, 'namespace', namespace, false, false)), J$.T(5777001, 'string', 21, false))))
                                                namespace = J$.W(5777033, 'namespace', J$.F(5777025, J$.R(5777009, 'uuidToBytes', uuidToBytes, false, true), false)(J$.R(5777017, 'namespace', namespace, false, false)), namespace, false, false);
                                            if (J$.C(299672, J$.U(691274, '!', J$.M(5777057, J$.I(typeof Array === 'undefined' ? Array = J$.R(5777041, 'Array', undefined, true, true) : Array = J$.R(5777041, 'Array', Array, true, true)), 'isArray', false)(J$.R(5777049, 'value', value, false, false)))))
                                                throw J$.F(5777081, J$.I(typeof TypeError === 'undefined' ? TypeError = J$.R(5777065, 'TypeError', undefined, true, true) : TypeError = J$.R(5777065, 'TypeError', TypeError, true, true)), false)(J$.T(5777073, 'value must be an array of bytes', 21, false));
                                            if (J$.C(299688, J$.C(299680, J$.U(691282, '!', J$.M(5777105, J$.I(typeof Array === 'undefined' ? Array = J$.R(5777089, 'Array', undefined, true, true) : Array = J$.R(5777089, 'Array', Array, true, true)), 'isArray', false)(J$.R(5777097, 'namespace', namespace, false, false)))) ? J$._() : J$.B(691290, '!==', J$.G(5777121, J$.R(5777113, 'namespace', namespace, false, false), 'length'), J$.T(5777129, 16, 22, false))))
                                                throw J$.F(5777153, J$.I(typeof TypeError === 'undefined' ? TypeError = J$.R(5777137, 'TypeError', undefined, true, true) : TypeError = J$.R(5777137, 'TypeError', TypeError, true, true)), false)(J$.T(5777145, 'namespace must be uuid string or an Array of 16 byte values', 21, false));
                                            var bytes = J$.W(5777201, 'bytes', J$.F(5777193, J$.R(5777161, 'hashfunc', hashfunc, false, false), false)(J$.M(5777185, J$.R(5777169, 'namespace', namespace, false, false), 'concat', false)(J$.R(5777177, 'value', value, false, false))), bytes, false, false);
                                            J$.P(5777265, J$.R(5777209, 'bytes', bytes, false, false), J$.T(5777217, 6, 22, false), J$.B(691306, '|', J$.B(691298, '&', J$.G(5777241, J$.R(5777225, 'bytes', bytes, false, false), J$.T(5777233, 6, 22, false)), J$.T(5777249, 15, 22, false)), J$.R(5777257, 'version', version, false, false)));
                                            J$.P(5777329, J$.R(5777273, 'bytes', bytes, false, false), J$.T(5777281, 8, 22, false), J$.B(691322, '|', J$.B(691314, '&', J$.G(5777305, J$.R(5777289, 'bytes', bytes, false, false), J$.T(5777297, 8, 22, false)), J$.T(5777313, 63, 22, false)), J$.T(5777321, 128, 22, false)));
                                            if (J$.C(299704, J$.R(5777337, 'buf', buf, false, false))) {
                                                for (var idx = J$.W(5777353, 'idx', J$.T(5777345, 0, 22, false), idx, false, false); J$.C(299696, J$.B(691330, '<', J$.R(5777361, 'idx', idx, false, false), J$.T(5777369, 16, 22, false))); idx = J$.W(5777385, 'idx', J$.B(691346, '+', J$.U(691338, '+', J$.R(5777377, 'idx', idx, false, false)), 1), idx, false, false)) {
                                                    J$.P(5777441, J$.R(5777393, 'buf', buf, false, false), J$.B(691354, '+', J$.R(5777401, 'off', off, false, false), J$.R(5777409, 'idx', idx, false, false)), J$.G(5777433, J$.R(5777417, 'bytes', bytes, false, false), J$.R(5777425, 'idx', idx, false, false)));
                                                }
                                            }
                                            return J$.Rt(5777481, J$.C(299712, J$.R(5777449, 'buf', buf, false, false)) ? J$._() : J$.F(5777473, J$.R(5777457, 'bytesToUuid', bytesToUuid, false, true), false)(J$.R(5777465, 'bytes', bytes, false, false)));
                                        } catch (J$e) {
                                            J$.Ex(5777833, J$e);
                                        } finally {
                                            if (J$.Fr(5777841))
                                                continue jalangiLabel3;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false), generateUUID, false, false);
                            try {
                                J$.P(5777593, J$.R(5777577, 'generateUUID', generateUUID, false, false), 'name', J$.R(5777585, 'name', name, false, false));
                            } catch (err) {
                                J$.N(5777601, 'err', err, false, false, true);
                            }
                            J$.P(5777625, J$.R(5777609, 'generateUUID', generateUUID, false, false), 'DNS', J$.T(5777617, '6ba7b810-9dad-11d1-80b4-00c04fd430c8', 21, false));
                            J$.P(5777649, J$.R(5777633, 'generateUUID', generateUUID, false, false), 'URL', J$.T(5777641, '6ba7b811-9dad-11d1-80b4-00c04fd430c8', 21, false));
                            return J$.Rt(5777665, J$.R(5777657, 'generateUUID', generateUUID, false, false));
                        } catch (J$e) {
                            J$.Ex(5777849, J$e);
                        } finally {
                            if (J$.Fr(5777857))
                                continue jalangiLabel4;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
        } catch (J$e) {
            J$.Ex(5777865, J$e);
        } finally {
            if (J$.Sr(5777873))
                continue jalangiLabel5;
            else
                break jalangiLabel5;
        }
    }
// JALANGI DO NOT INSTRUMENT

