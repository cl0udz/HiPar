J$.noInstrEval = false;
jalangiLabel7:
    while (true) {
        try {
            J$.Se(7456457, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestCouchNode/node_modules/http-signature/lib/parser.js');
            function ExpiredRequestError(message) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(7452377, arguments.callee, this, arguments);
                            arguments = J$.N(7452385, 'arguments', arguments, true, false, false);
                            message = J$.N(7452393, 'message', message, true, false, false);
                            J$.M(7452369, J$.R(7452337, 'HttpSignatureError', HttpSignatureError, false, true), 'call', false)(J$.R(7452345, 'this', this, false, false), J$.R(7452353, 'message', message, false, false), J$.R(7452361, 'ExpiredRequestError', ExpiredRequestError, false, true));
                        } catch (J$e) {
                            J$.Ex(7456625, J$e);
                        } finally {
                            if (J$.Fr(7456633))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function InvalidHeaderError(message) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(7452473, arguments.callee, this, arguments);
                            arguments = J$.N(7452481, 'arguments', arguments, true, false, false);
                            message = J$.N(7452489, 'message', message, true, false, false);
                            J$.M(7452465, J$.R(7452433, 'HttpSignatureError', HttpSignatureError, false, true), 'call', false)(J$.R(7452441, 'this', this, false, false), J$.R(7452449, 'message', message, false, false), J$.R(7452457, 'InvalidHeaderError', InvalidHeaderError, false, true));
                        } catch (J$e) {
                            J$.Ex(7456641, J$e);
                        } finally {
                            if (J$.Fr(7456649))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function InvalidParamsError(message) {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(7452569, arguments.callee, this, arguments);
                            arguments = J$.N(7452577, 'arguments', arguments, true, false, false);
                            message = J$.N(7452585, 'message', message, true, false, false);
                            J$.M(7452561, J$.R(7452529, 'HttpSignatureError', HttpSignatureError, false, true), 'call', false)(J$.R(7452537, 'this', this, false, false), J$.R(7452545, 'message', message, false, false), J$.R(7452553, 'InvalidParamsError', InvalidParamsError, false, true));
                        } catch (J$e) {
                            J$.Ex(7456657, J$e);
                        } finally {
                            if (J$.Fr(7456665))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function MissingHeaderError(message) {
                jalangiLabel3:
                    while (true) {
                        try {
                            J$.Fe(7452665, arguments.callee, this, arguments);
                            arguments = J$.N(7452673, 'arguments', arguments, true, false, false);
                            message = J$.N(7452681, 'message', message, true, false, false);
                            J$.M(7452657, J$.R(7452625, 'HttpSignatureError', HttpSignatureError, false, true), 'call', false)(J$.R(7452633, 'this', this, false, false), J$.R(7452641, 'message', message, false, false), J$.R(7452649, 'MissingHeaderError', MissingHeaderError, false, true));
                        } catch (J$e) {
                            J$.Ex(7456673, J$e);
                        } finally {
                            if (J$.Fr(7456681))
                                continue jalangiLabel3;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function StrictParsingError(message) {
                jalangiLabel4:
                    while (true) {
                        try {
                            J$.Fe(7452761, arguments.callee, this, arguments);
                            arguments = J$.N(7452769, 'arguments', arguments, true, false, false);
                            message = J$.N(7452777, 'message', message, true, false, false);
                            J$.M(7452753, J$.R(7452721, 'HttpSignatureError', HttpSignatureError, false, true), 'call', false)(J$.R(7452729, 'this', this, false, false), J$.R(7452737, 'message', message, false, false), J$.R(7452745, 'StrictParsingError', StrictParsingError, false, true));
                        } catch (J$e) {
                            J$.Ex(7456689, J$e);
                        } finally {
                            if (J$.Fr(7456697))
                                continue jalangiLabel4;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(7456465, 'assert', assert, false, false, false);
            J$.N(7456473, 'util', util, false, false, false);
            J$.N(7456481, 'utils', utils, false, false, false);
            J$.N(7456489, 'HASH_ALGOS', HASH_ALGOS, false, false, false);
            J$.N(7456497, 'PK_ALGOS', PK_ALGOS, false, false, false);
            J$.N(7456505, 'HttpSignatureError', HttpSignatureError, false, false, false);
            J$.N(7456513, 'InvalidAlgorithmError', InvalidAlgorithmError, false, false, false);
            J$.N(7456521, 'validateAlgorithm', validateAlgorithm, false, false, false);
            J$.N(7456529, 'State', State, false, false, false);
            J$.N(7456537, 'ParamsState', ParamsState, false, false, false);
            ExpiredRequestError = J$.N(7456553, 'ExpiredRequestError', J$.T(7456545, ExpiredRequestError, 12, false), true, false, false);
            InvalidHeaderError = J$.N(7456569, 'InvalidHeaderError', J$.T(7456561, InvalidHeaderError, 12, false), true, false, false);
            InvalidParamsError = J$.N(7456585, 'InvalidParamsError', J$.T(7456577, InvalidParamsError, 12, false), true, false, false);
            MissingHeaderError = J$.N(7456601, 'MissingHeaderError', J$.T(7456593, MissingHeaderError, 12, false), true, false, false);
            StrictParsingError = J$.N(7456617, 'StrictParsingError', J$.T(7456609, StrictParsingError, 12, false), true, false, false);
            var assert = J$.W(7452065, 'assert', J$.F(7452057, J$.I(typeof require === 'undefined' ? require = J$.R(7452041, 'require', undefined, true, true) : require = J$.R(7452041, 'require', require, true, true)), false)(J$.T(7452049, 'assert-plus', 21, false)), assert, false, true);
            var util = J$.W(7452097, 'util', J$.F(7452089, J$.I(typeof require === 'undefined' ? require = J$.R(7452073, 'require', undefined, true, true) : require = J$.R(7452073, 'require', require, true, true)), false)(J$.T(7452081, 'util', 21, false)), util, false, true);
            var utils = J$.W(7452129, 'utils', J$.F(7452121, J$.I(typeof require === 'undefined' ? require = J$.R(7452105, 'require', undefined, true, true) : require = J$.R(7452105, 'require', require, true, true)), false)(J$.T(7452113, './utils', 21, false)), utils, false, true);
            var HASH_ALGOS = J$.W(7452153, 'HASH_ALGOS', J$.G(7452145, J$.R(7452137, 'utils', utils, false, true), 'HASH_ALGOS'), HASH_ALGOS, false, true);
            var PK_ALGOS = J$.W(7452177, 'PK_ALGOS', J$.G(7452169, J$.R(7452161, 'utils', utils, false, true), 'PK_ALGOS'), PK_ALGOS, false, true);
            var HttpSignatureError = J$.W(7452201, 'HttpSignatureError', J$.G(7452193, J$.R(7452185, 'utils', utils, false, true), 'HttpSignatureError'), HttpSignatureError, false, true);
            var InvalidAlgorithmError = J$.W(7452225, 'InvalidAlgorithmError', J$.G(7452217, J$.R(7452209, 'utils', utils, false, true), 'InvalidAlgorithmError'), InvalidAlgorithmError, false, true);
            var validateAlgorithm = J$.W(7452249, 'validateAlgorithm', J$.G(7452241, J$.R(7452233, 'utils', utils, false, true), 'validateAlgorithm'), validateAlgorithm, false, true);
            var State = J$.W(7452281, 'State', J$.T(7452273, {
                New: J$.T(7452257, 0, 22, false),
                Params: J$.T(7452265, 1, 22, false)
            }, 11, false), State, false, true);
            var ParamsState = J$.W(7452329, 'ParamsState', J$.T(7452321, {
                Name: J$.T(7452289, 0, 22, false),
                Quote: J$.T(7452297, 1, 22, false),
                Value: J$.T(7452305, 2, 22, false),
                Comma: J$.T(7452313, 3, 22, false)
            }, 11, false), ParamsState, false, true);
            J$.M(7452425, J$.R(7452401, 'util', util, false, true), 'inherits', false)(J$.R(7452409, 'ExpiredRequestError', ExpiredRequestError, false, true), J$.R(7452417, 'HttpSignatureError', HttpSignatureError, false, true));
            J$.M(7452521, J$.R(7452497, 'util', util, false, true), 'inherits', false)(J$.R(7452505, 'InvalidHeaderError', InvalidHeaderError, false, true), J$.R(7452513, 'HttpSignatureError', HttpSignatureError, false, true));
            J$.M(7452617, J$.R(7452593, 'util', util, false, true), 'inherits', false)(J$.R(7452601, 'InvalidParamsError', InvalidParamsError, false, true), J$.R(7452609, 'HttpSignatureError', HttpSignatureError, false, true));
            J$.M(7452713, J$.R(7452689, 'util', util, false, true), 'inherits', false)(J$.R(7452697, 'MissingHeaderError', MissingHeaderError, false, true), J$.R(7452705, 'HttpSignatureError', HttpSignatureError, false, true));
            J$.M(7452809, J$.R(7452785, 'util', util, false, true), 'inherits', false)(J$.R(7452793, 'StrictParsingError', StrictParsingError, false, true), J$.R(7452801, 'HttpSignatureError', HttpSignatureError, false, true));
            J$.P(7456449, J$.I(typeof module === 'undefined' ? module = J$.R(7452817, 'module', undefined, true, true) : module = J$.R(7452817, 'module', module, true, true)), 'exports', J$.T(7456441, {
                parseRequest: J$.T(7456433, function parseRequest(request, options) {
                    jalangiLabel6:
                        while (true) {
                            try {
                                J$.Fe(7456281, arguments.callee, this, arguments);
                                arguments = J$.N(7456289, 'arguments', arguments, true, false, false);
                                request = J$.N(7456297, 'request', request, true, false, false);
                                options = J$.N(7456305, 'options', options, true, false, false);
                                J$.N(7456313, 'authzHeaderName', authzHeaderName, false, false, false);
                                J$.N(7456321, 'i', i, false, false, false);
                                J$.N(7456329, 'state', state, false, false, false);
                                J$.N(7456337, 'substate', substate, false, false, false);
                                J$.N(7456345, 'tmpName', tmpName, false, false, false);
                                J$.N(7456353, 'tmpValue', tmpValue, false, false, false);
                                J$.N(7456361, 'parsed', parsed, false, false, false);
                                J$.N(7456369, 'authz', authz, false, false, false);
                                J$.N(7456377, 'c', c, false, false, false);
                                J$.N(7456385, 'code', code, false, false, false);
                                J$.N(7456393, 'h', h, false, false, false);
                                J$.N(7456401, 'value', value, false, false, false);
                                J$.N(7456409, 'date', date, false, false, false);
                                J$.N(7456417, 'now', now, false, false, false);
                                J$.N(7456425, 'skew', skew, false, false, false);
                                J$.M(7452849, J$.R(7452825, 'assert', assert, false, true), 'object', false)(J$.R(7452833, 'request', request, false, false), J$.T(7452841, 'request', 21, false));
                                J$.M(7452889, J$.R(7452857, 'assert', assert, false, true), 'object', false)(J$.G(7452873, J$.R(7452865, 'request', request, false, false), 'headers'), J$.T(7452881, 'request.headers', 21, false));
                                if (J$.C(396216, J$.B(742018, '===', J$.R(7452897, 'options', options, false, false), J$.T(7452905, undefined, 24, false)))) {
                                    options = J$.W(7452921, 'options', J$.T(7452913, {}, 11, false), options, false, false);
                                }
                                if (J$.C(396232, J$.B(742026, '===', J$.G(7452937, J$.R(7452929, 'options', options, false, false), 'headers'), J$.T(7452945, undefined, 24, false)))) {
                                    J$.P(7453017, J$.R(7452953, 'options', options, false, false), 'headers', J$.T(7453009, [J$.C(396224, J$.G(7452985, J$.G(7452969, J$.R(7452961, 'request', request, false, false), 'headers'), J$.T(7452977, 'x-date', 21, false))) ? J$.T(7452993, 'x-date', 21, false) : J$.T(7453001, 'date', 21, false)], 10, false));
                                }
                                J$.M(7453049, J$.R(7453025, 'assert', assert, false, true), 'object', false)(J$.R(7453033, 'options', options, false, false), J$.T(7453041, 'options', 21, false));
                                J$.M(7453089, J$.R(7453057, 'assert', assert, false, true), 'arrayOfString', false)(J$.G(7453073, J$.R(7453065, 'options', options, false, false), 'headers'), J$.T(7453081, 'options.headers', 21, false));
                                J$.M(7453129, J$.R(7453097, 'assert', assert, false, true), 'optionalFinite', false)(J$.G(7453113, J$.R(7453105, 'options', options, false, false), 'clockSkew'), J$.T(7453121, 'options.clockSkew', 21, false));
                                var authzHeaderName = J$.W(7453161, 'authzHeaderName', J$.C(396240, J$.G(7453145, J$.R(7453137, 'options', options, false, false), 'authorizationHeaderName')) ? J$._() : J$.T(7453153, 'authorization', 21, false), authzHeaderName, false, false);
                                if (J$.C(396248, J$.U(742034, '!', J$.G(7453193, J$.G(7453177, J$.R(7453169, 'request', request, false, false), 'headers'), J$.R(7453185, 'authzHeaderName', authzHeaderName, false, false))))) {
                                    throw J$.F(7453241, J$.R(7453201, 'MissingHeaderError', MissingHeaderError, false, true), true)(J$.B(742058, '+', J$.B(742050, '+', J$.B(742042, '+', J$.T(7453209, 'no ', 21, false), J$.R(7453217, 'authzHeaderName', authzHeaderName, false, false)), J$.T(7453225, ' header ', 21, false)), J$.T(7453233, 'present in the request', 21, false)));
                                }
                                J$.P(7453281, J$.R(7453249, 'options', options, false, false), 'clockSkew', J$.C(396256, J$.G(7453265, J$.R(7453257, 'options', options, false, false), 'clockSkew')) ? J$._() : J$.T(7453273, 300, 22, false));
                                var i = J$.W(7453297, 'i', J$.T(7453289, 0, 22, false), i, false, false);
                                var state = J$.W(7453321, 'state', J$.G(7453313, J$.R(7453305, 'State', State, false, true), 'New'), state, false, false);
                                var substate = J$.W(7453345, 'substate', J$.G(7453337, J$.R(7453329, 'ParamsState', ParamsState, false, true), 'Name'), substate, false, false);
                                var tmpName = J$.W(7453361, 'tmpName', J$.T(7453353, '', 21, false), tmpName, false, false);
                                var tmpValue = J$.W(7453377, 'tmpValue', J$.T(7453369, '', 21, false), tmpValue, false, false);
                                var parsed = J$.W(7453417, 'parsed', J$.T(7453409, {
                                    scheme: J$.T(7453385, '', 21, false),
                                    params: J$.T(7453393, {}, 11, false),
                                    signingString: J$.T(7453401, '', 21, false)
                                }, 11, false), parsed, false, false);
                                var authz = J$.W(7453457, 'authz', J$.G(7453449, J$.G(7453433, J$.R(7453425, 'request', request, false, false), 'headers'), J$.R(7453441, 'authzHeaderName', authzHeaderName, false, false)), authz, false, false);
                                for (i = J$.W(7453473, 'i', J$.T(7453465, 0, 22, false), i, false, false); J$.C(396408, J$.B(742066, '<', J$.R(7453481, 'i', i, false, false), J$.G(7453497, J$.R(7453489, 'authz', authz, false, false), 'length'))); J$.B(742090, '-', i = J$.W(7453513, 'i', J$.B(742082, '+', J$.U(742074, '+', J$.R(7453505, 'i', i, false, false)), 1), i, false, false), 1)) {
                                    var c = J$.W(7453545, 'c', J$.M(7453537, J$.R(7453521, 'authz', authz, false, false), 'charAt', false)(J$.R(7453529, 'i', i, false, false)), c, false, false);
                                    switch (J$.C1(396384, J$.F(7453569, J$.I(typeof Number === 'undefined' ? Number = J$.R(7453553, 'Number', undefined, true, true) : Number = J$.R(7453553, 'Number', Number, true, true)), false)(J$.R(7453561, 'state', state, false, false)))) {
                                    case J$.C2(396392, J$.G(7453649, J$.R(7453641, 'State', State, false, true), 'New')):
                                        if (J$.C(396264, J$.B(742098, '!==', J$.R(7453577, 'c', c, false, false), J$.T(7453585, ' ', 21, false))))
                                            J$.A(7453609, J$.R(7453593, 'parsed', parsed, false, false), 'scheme', '+')(J$.R(7453601, 'c', c, false, false));
                                        else
                                            state = J$.W(7453633, 'state', J$.G(7453625, J$.R(7453617, 'State', State, false, true), 'Params'), state, false, false);
                                        break;
                                    case J$.C2(396400, J$.G(7454273, J$.R(7454265, 'State', State, false, true), 'Params')):
                                        switch (J$.C1(396344, J$.F(7453673, J$.I(typeof Number === 'undefined' ? Number = J$.R(7453657, 'Number', undefined, true, true) : Number = J$.R(7453657, 'Number', Number, true, true)), false)(J$.R(7453665, 'substate', substate, false, false)))) {
                                        case J$.C2(396352, J$.G(7453921, J$.R(7453913, 'ParamsState', ParamsState, false, true), 'Name')):
                                            var code = J$.W(7453705, 'code', J$.M(7453697, J$.R(7453681, 'c', c, false, false), 'charCodeAt', false)(J$.T(7453689, 0, 22, false)), code, false, false);
                                            if (J$.C(396312, J$.C(396288, J$.C(396272, J$.B(742106, '>=', J$.R(7453713, 'code', code, false, false), J$.T(7453721, 65, 22, false))) ? J$.B(742114, '<=', J$.R(7453729, 'code', code, false, false), J$.T(7453737, 90, 22, false)) : J$._()) ? J$._() : J$.C(396280, J$.B(742122, '>=', J$.R(7453745, 'code', code, false, false), J$.T(7453753, 97, 22, false))) ? J$.B(742130, '<=', J$.R(7453761, 'code', code, false, false), J$.T(7453769, 122, 22, false)) : J$._())) {
                                                tmpName = J$.W(7453793, 'tmpName', J$.B(742138, '+', J$.R(7453785, 'tmpName', tmpName, false, false), J$.R(7453777, 'c', c, false, false)), tmpName, false, false);
                                            } else if (J$.C(396304, J$.B(742146, '===', J$.R(7453801, 'c', c, false, false), J$.T(7453809, '=', 21, false)))) {
                                                if (J$.C(396296, J$.B(742154, '===', J$.G(7453825, J$.R(7453817, 'tmpName', tmpName, false, false), 'length'), J$.T(7453833, 0, 22, false))))
                                                    throw J$.F(7453857, J$.R(7453841, 'InvalidHeaderError', InvalidHeaderError, false, true), true)(J$.T(7453849, 'bad param format', 21, false));
                                                substate = J$.W(7453881, 'substate', J$.G(7453873, J$.R(7453865, 'ParamsState', ParamsState, false, true), 'Quote'), substate, false, false);
                                            } else {
                                                throw J$.F(7453905, J$.R(7453889, 'InvalidHeaderError', InvalidHeaderError, false, true), true)(J$.T(7453897, 'bad param format', 21, false));
                                            }
                                            break;
                                        case J$.C2(396360, J$.G(7454017, J$.R(7454009, 'ParamsState', ParamsState, false, true), 'Quote')):
                                            if (J$.C(396320, J$.B(742162, '===', J$.R(7453929, 'c', c, false, false), J$.T(7453937, '"', 21, false)))) {
                                                tmpValue = J$.W(7453953, 'tmpValue', J$.T(7453945, '', 21, false), tmpValue, false, false);
                                                substate = J$.W(7453977, 'substate', J$.G(7453969, J$.R(7453961, 'ParamsState', ParamsState, false, true), 'Value'), substate, false, false);
                                            } else {
                                                throw J$.F(7454001, J$.R(7453985, 'InvalidHeaderError', InvalidHeaderError, false, true), true)(J$.T(7453993, 'bad param format', 21, false));
                                            }
                                            break;
                                        case J$.C2(396368, J$.G(7454137, J$.R(7454129, 'ParamsState', ParamsState, false, true), 'Value')):
                                            if (J$.C(396328, J$.B(742170, '===', J$.R(7454025, 'c', c, false, false), J$.T(7454033, '"', 21, false)))) {
                                                J$.P(7454073, J$.G(7454049, J$.R(7454041, 'parsed', parsed, false, false), 'params'), J$.R(7454057, 'tmpName', tmpName, false, false), J$.R(7454065, 'tmpValue', tmpValue, false, false));
                                                substate = J$.W(7454097, 'substate', J$.G(7454089, J$.R(7454081, 'ParamsState', ParamsState, false, true), 'Comma'), substate, false, false);
                                            } else {
                                                tmpValue = J$.W(7454121, 'tmpValue', J$.B(742178, '+', J$.R(7454113, 'tmpValue', tmpValue, false, false), J$.R(7454105, 'c', c, false, false)), tmpValue, false, false);
                                            }
                                            break;
                                        case J$.C2(396376, J$.G(7454233, J$.R(7454225, 'ParamsState', ParamsState, false, true), 'Comma')):
                                            if (J$.C(396336, J$.B(742186, '===', J$.R(7454145, 'c', c, false, false), J$.T(7454153, ',', 21, false)))) {
                                                tmpName = J$.W(7454169, 'tmpName', J$.T(7454161, '', 21, false), tmpName, false, false);
                                                substate = J$.W(7454193, 'substate', J$.G(7454185, J$.R(7454177, 'ParamsState', ParamsState, false, true), 'Name'), substate, false, false);
                                            } else {
                                                throw J$.F(7454217, J$.R(7454201, 'InvalidHeaderError', InvalidHeaderError, false, true), true)(J$.T(7454209, 'bad param format', 21, false));
                                            }
                                            break;
                                        default:
                                            throw J$.F(7454257, J$.I(typeof Error === 'undefined' ? Error = J$.R(7454241, 'Error', undefined, true, true) : Error = J$.R(7454241, 'Error', Error, true, true)), true)(J$.T(7454249, 'Invalid substate', 21, false));
                                        }
                                        break;
                                    default:
                                        throw J$.F(7454297, J$.I(typeof Error === 'undefined' ? Error = J$.R(7454281, 'Error', undefined, true, true) : Error = J$.R(7454281, 'Error', Error, true, true)), true)(J$.T(7454289, 'Invalid substate', 21, false));
                                    }
                                }
                                if (J$.C(396432, J$.C(396416, J$.U(742194, '!', J$.G(7454321, J$.G(7454313, J$.R(7454305, 'parsed', parsed, false, false), 'params'), 'headers'))) ? J$._() : J$.B(742202, '===', J$.G(7454345, J$.G(7454337, J$.R(7454329, 'parsed', parsed, false, false), 'params'), 'headers'), J$.T(7454353, '', 21, false)))) {
                                    if (J$.C(396424, J$.G(7454385, J$.G(7454369, J$.R(7454361, 'request', request, false, false), 'headers'), J$.T(7454377, 'x-date', 21, false)))) {
                                        J$.P(7454425, J$.G(7454401, J$.R(7454393, 'parsed', parsed, false, false), 'params'), 'headers', J$.T(7454417, [J$.T(7454409, 'x-date', 21, false)], 10, false));
                                    } else {
                                        J$.P(7454465, J$.G(7454441, J$.R(7454433, 'parsed', parsed, false, false), 'params'), 'headers', J$.T(7454457, [J$.T(7454449, 'date', 21, false)], 10, false));
                                    }
                                } else {
                                    J$.P(7454529, J$.G(7454481, J$.R(7454473, 'parsed', parsed, false, false), 'params'), 'headers', J$.M(7454521, J$.G(7454505, J$.G(7454497, J$.R(7454489, 'parsed', parsed, false, false), 'params'), 'headers'), 'split', false)(J$.T(7454513, ' ', 21, false)));
                                }
                                if (J$.C(396448, J$.C(396440, J$.U(742210, '!', J$.G(7454545, J$.R(7454537, 'parsed', parsed, false, false), 'scheme'))) ? J$._() : J$.B(742218, '!==', J$.G(7454561, J$.R(7454553, 'parsed', parsed, false, false), 'scheme'), J$.T(7454569, 'Signature', 21, false))))
                                    throw J$.F(7454593, J$.R(7454577, 'InvalidHeaderError', InvalidHeaderError, false, true), true)(J$.T(7454585, 'scheme was not "Signature"', 21, false));
                                if (J$.C(396456, J$.U(742226, '!', J$.G(7454617, J$.G(7454609, J$.R(7454601, 'parsed', parsed, false, false), 'params'), 'keyId'))))
                                    throw J$.F(7454641, J$.R(7454625, 'InvalidHeaderError', InvalidHeaderError, false, true), true)(J$.T(7454633, 'keyId was not specified', 21, false));
                                if (J$.C(396464, J$.U(742234, '!', J$.G(7454665, J$.G(7454657, J$.R(7454649, 'parsed', parsed, false, false), 'params'), 'algorithm'))))
                                    throw J$.F(7454689, J$.R(7454673, 'InvalidHeaderError', InvalidHeaderError, false, true), true)(J$.T(7454681, 'algorithm was not specified', 21, false));
                                if (J$.C(396472, J$.U(742242, '!', J$.G(7454713, J$.G(7454705, J$.R(7454697, 'parsed', parsed, false, false), 'params'), 'signature'))))
                                    throw J$.F(7454737, J$.R(7454721, 'InvalidHeaderError', InvalidHeaderError, false, true), true)(J$.T(7454729, 'signature was not specified', 21, false));
                                J$.P(7454793, J$.G(7454753, J$.R(7454745, 'parsed', parsed, false, false), 'params'), 'algorithm', J$.M(7454785, J$.G(7454777, J$.G(7454769, J$.R(7454761, 'parsed', parsed, false, false), 'params'), 'algorithm'), 'toLowerCase', false)());
                                try {
                                    J$.F(7454833, J$.R(7454801, 'validateAlgorithm', validateAlgorithm, false, true), false)(J$.G(7454825, J$.G(7454817, J$.R(7454809, 'parsed', parsed, false, false), 'params'), 'algorithm'));
                                } catch (e) {
                                    J$.N(7454921, 'e', e, false, false, true);
                                    if (J$.C(396480, J$.B(742250, 'instanceof', J$.R(7454841, 'e', e, false, false), J$.R(7454849, 'InvalidAlgorithmError', InvalidAlgorithmError, false, true))))
                                        throw J$.F(7454905, J$.R(7454857, 'InvalidParamsError', InvalidParamsError, false, true), true)(J$.B(742266, '+', J$.B(742258, '+', J$.G(7454881, J$.G(7454873, J$.R(7454865, 'parsed', parsed, false, false), 'params'), 'algorithm'), J$.T(7454889, ' is not ', 21, false)), J$.T(7454897, 'supported', 21, false)));
                                    else
                                        throw J$.R(7454913, 'e', e, false, false);
                                }
                                for (i = J$.W(7454937, 'i', J$.T(7454929, 0, 22, false), i, false, false); J$.C(396528, J$.B(742274, '<', J$.R(7454945, 'i', i, false, false), J$.G(7454977, J$.G(7454969, J$.G(7454961, J$.R(7454953, 'parsed', parsed, false, false), 'params'), 'headers'), 'length'))); J$.B(742298, '-', i = J$.W(7454993, 'i', J$.B(742290, '+', J$.U(742282, '+', J$.R(7454985, 'i', i, false, false)), 1), i, false, false), 1)) {
                                    var h = J$.W(7455049, 'h', J$.M(7455041, J$.G(7455033, J$.G(7455017, J$.G(7455009, J$.R(7455001, 'parsed', parsed, false, false), 'params'), 'headers'), J$.R(7455025, 'i', i, false, false)), 'toLowerCase', false)(), h, false, false);
                                    J$.P(7455097, J$.G(7455073, J$.G(7455065, J$.R(7455057, 'parsed', parsed, false, false), 'params'), 'headers'), J$.R(7455081, 'i', i, false, false), J$.R(7455089, 'h', h, false, false));
                                    if (J$.C(396512, J$.B(742306, '===', J$.R(7455105, 'h', h, false, false), J$.T(7455113, 'request-line', 21, false)))) {
                                        if (J$.C(396488, J$.U(742314, '!', J$.G(7455129, J$.R(7455121, 'options', options, false, false), 'strict')))) {
                                            J$.A(7455209, J$.R(7455137, 'parsed', parsed, false, false), 'signingString', '+')(J$.B(742346, '+', J$.B(742338, '+', J$.B(742330, '+', J$.B(742322, '+', J$.G(7455153, J$.R(7455145, 'request', request, false, false), 'method'), J$.T(7455161, ' ', 21, false)), J$.G(7455177, J$.R(7455169, 'request', request, false, false), 'url')), J$.T(7455185, ' HTTP/', 21, false)), J$.G(7455201, J$.R(7455193, 'request', request, false, false), 'httpVersion')));
                                        } else {
                                            throw J$.F(7455241, J$.R(7455217, 'StrictParsingError', StrictParsingError, false, true), true)(J$.B(742354, '+', J$.T(7455225, 'request-line is not a valid header ', 21, false), J$.T(7455233, 'with strict parsing enabled.', 21, false)));
                                        }
                                    } else if (J$.C(396504, J$.B(742362, '===', J$.R(7455249, 'h', h, false, false), J$.T(7455257, '(request-target)', 21, false)))) {
                                        J$.A(7455329, J$.R(7455265, 'parsed', parsed, false, false), 'signingString', '+')(J$.B(742386, '+', J$.B(742378, '+', J$.B(742370, '+', J$.T(7455273, '(request-target): ', 21, false), J$.M(7455297, J$.G(7455289, J$.R(7455281, 'request', request, false, false), 'method'), 'toLowerCase', false)()), J$.T(7455305, ' ', 21, false)), J$.G(7455321, J$.R(7455313, 'request', request, false, false), 'url')));
                                    } else {
                                        var value = J$.W(7455369, 'value', J$.G(7455361, J$.G(7455345, J$.R(7455337, 'request', request, false, false), 'headers'), J$.R(7455353, 'h', h, false, false)), value, false, false);
                                        if (J$.C(396496, J$.B(742394, '===', J$.R(7455377, 'value', value, false, false), J$.T(7455385, undefined, 24, false))))
                                            throw J$.F(7455417, J$.R(7455393, 'MissingHeaderError', MissingHeaderError, false, true), true)(J$.B(742402, '+', J$.R(7455401, 'h', h, false, false), J$.T(7455409, ' was not in the request', 21, false)));
                                        J$.A(7455457, J$.R(7455425, 'parsed', parsed, false, false), 'signingString', '+')(J$.B(742418, '+', J$.B(742410, '+', J$.R(7455433, 'h', h, false, false), J$.T(7455441, ': ', 21, false)), J$.R(7455449, 'value', value, false, false)));
                                    }
                                    if (J$.C(396520, J$.B(742434, '<', J$.B(742426, '+', J$.R(7455465, 'i', i, false, false), J$.T(7455473, 1, 22, false)), J$.G(7455505, J$.G(7455497, J$.G(7455489, J$.R(7455481, 'parsed', parsed, false, false), 'params'), 'headers'), 'length'))))
                                        J$.A(7455529, J$.R(7455513, 'parsed', parsed, false, false), 'signingString', '+')(J$.T(7455521, '\n', 21, false));
                                }
                                var date;
                                if (J$.C(396560, J$.C(396536, J$.G(7455553, J$.G(7455545, J$.R(7455537, 'request', request, false, false), 'headers'), 'date')) ? J$._() : J$.G(7455585, J$.G(7455569, J$.R(7455561, 'request', request, false, false), 'headers'), J$.T(7455577, 'x-date', 21, false)))) {
                                    if (J$.C(396544, J$.G(7455617, J$.G(7455601, J$.R(7455593, 'request', request, false, false), 'headers'), J$.T(7455609, 'x-date', 21, false)))) {
                                        date = J$.W(7455673, 'date', J$.F(7455665, J$.I(typeof Date === 'undefined' ? Date = J$.R(7455625, 'Date', undefined, true, true) : Date = J$.R(7455625, 'Date', Date, true, true)), true)(J$.G(7455657, J$.G(7455641, J$.R(7455633, 'request', request, false, false), 'headers'), J$.T(7455649, 'x-date', 21, false))), date, false, false);
                                    } else {
                                        date = J$.W(7455721, 'date', J$.F(7455713, J$.I(typeof Date === 'undefined' ? Date = J$.R(7455681, 'Date', undefined, true, true) : Date = J$.R(7455681, 'Date', Date, true, true)), true)(J$.G(7455705, J$.G(7455697, J$.R(7455689, 'request', request, false, false), 'headers'), 'date')), date, false, false);
                                    }
                                    var now = J$.W(7455745, 'now', J$.F(7455737, J$.I(typeof Date === 'undefined' ? Date = J$.R(7455729, 'Date', undefined, true, true) : Date = J$.R(7455729, 'Date', Date, true, true)), true)(), now, false, false);
                                    var skew = J$.W(7455801, 'skew', J$.M(7455793, J$.I(typeof Math === 'undefined' ? Math = J$.R(7455753, 'Math', undefined, true, true) : Math = J$.R(7455753, 'Math', Math, true, true)), 'abs', false)(J$.B(742442, '-', J$.M(7455769, J$.R(7455761, 'now', now, false, false), 'getTime', false)(), J$.M(7455785, J$.R(7455777, 'date', date, false, false), 'getTime', false)())), skew, false, false);
                                    if (J$.C(396552, J$.B(742458, '>', J$.R(7455809, 'skew', skew, false, false), J$.B(742450, '*', J$.G(7455825, J$.R(7455817, 'options', options, false, false), 'clockSkew'), J$.T(7455833, 1000, 22, false))))) {
                                        throw J$.F(7455905, J$.R(7455841, 'ExpiredRequestError', ExpiredRequestError, false, true), true)(J$.B(742498, '+', J$.B(742490, '+', J$.B(742482, '+', J$.B(742474, '+', J$.T(7455849, 'clock skew of ', 21, false), J$.B(742466, '/', J$.R(7455857, 'skew', skew, false, false), J$.T(7455865, 1000, 22, false))), J$.T(7455873, 's was greater than ', 21, false)), J$.G(7455889, J$.R(7455881, 'options', options, false, false), 'clockSkew')), J$.T(7455897, 's', 21, false)));
                                    }
                                }
                                J$.M(7456049, J$.G(7455921, J$.R(7455913, 'options', options, false, false), 'headers'), 'forEach', false)(J$.T(7456041, function (hdr) {
                                    jalangiLabel5:
                                        while (true) {
                                            try {
                                                J$.Fe(7456017, arguments.callee, this, arguments);
                                                arguments = J$.N(7456025, 'arguments', arguments, true, false, false);
                                                hdr = J$.N(7456033, 'hdr', hdr, true, false, false);
                                                if (J$.C(396568, J$.B(742506, '<', J$.M(7455969, J$.G(7455945, J$.G(7455937, J$.R(7455929, 'parsed', parsed, false, false), 'params'), 'headers'), 'indexOf', false)(J$.M(7455961, J$.R(7455953, 'hdr', hdr, false, false), 'toLowerCase', false)()), J$.T(7455977, 0, 22, false))))
                                                    throw J$.F(7456009, J$.R(7455985, 'MissingHeaderError', MissingHeaderError, false, true), true)(J$.B(742514, '+', J$.R(7455993, 'hdr', hdr, false, false), J$.T(7456001, ' was not a signed header', 21, false)));
                                            } catch (J$e) {
                                                J$.Ex(7456705, J$e);
                                            } finally {
                                                if (J$.Fr(7456713))
                                                    continue jalangiLabel5;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false));
                                if (J$.C(396584, J$.G(7456065, J$.R(7456057, 'options', options, false, false), 'algorithms'))) {
                                    if (J$.C(396576, J$.B(742530, '===', J$.M(7456113, J$.G(7456081, J$.R(7456073, 'options', options, false, false), 'algorithms'), 'indexOf', false)(J$.G(7456105, J$.G(7456097, J$.R(7456089, 'parsed', parsed, false, false), 'params'), 'algorithm')), J$.U(742522, '-', J$.T(7456121, 1, 22, false)))))
                                        throw J$.F(7456169, J$.R(7456129, 'InvalidParamsError', InvalidParamsError, false, true), true)(J$.B(742538, '+', J$.G(7456153, J$.G(7456145, J$.R(7456137, 'parsed', parsed, false, false), 'params'), 'algorithm'), J$.T(7456161, ' is not a supported algorithm', 21, false)));
                                }
                                J$.P(7456217, J$.R(7456177, 'parsed', parsed, false, false), 'algorithm', J$.M(7456209, J$.G(7456201, J$.G(7456193, J$.R(7456185, 'parsed', parsed, false, false), 'params'), 'algorithm'), 'toUpperCase', false)());
                                J$.P(7456257, J$.R(7456225, 'parsed', parsed, false, false), 'keyId', J$.G(7456249, J$.G(7456241, J$.R(7456233, 'parsed', parsed, false, false), 'params'), 'keyId'));
                                return J$.Rt(7456273, J$.R(7456265, 'parsed', parsed, false, false));
                            } catch (J$e) {
                                J$.Ex(7456721, J$e);
                            } finally {
                                if (J$.Fr(7456729))
                                    continue jalangiLabel6;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false)
            }, 11, false));
        } catch (J$e) {
            J$.Ex(7456737, J$e);
        } finally {
            if (J$.Sr(7456745))
                continue jalangiLabel7;
            else
                break jalangiLabel7;
        }
    }
// JALANGI DO NOT INSTRUMENT

