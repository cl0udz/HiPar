J$.noInstrEval = false;
jalangiLabel13:
    while (true) {
        try {
            J$.Se(7463185, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestCouchNode/node_modules/http-signature/lib/signer.js');
            function MissingHeaderError(message) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(7457193, arguments.callee, this, arguments);
                            arguments = J$.N(7457201, 'arguments', arguments, true, false, false);
                            message = J$.N(7457209, 'message', message, true, false, false);
                            J$.M(7457185, J$.R(7457153, 'HttpSignatureError', HttpSignatureError, false, true), 'call', false)(J$.R(7457161, 'this', this, false, false), J$.R(7457169, 'message', message, false, false), J$.R(7457177, 'MissingHeaderError', MissingHeaderError, false, true));
                        } catch (J$e) {
                            J$.Ex(7463353, J$e);
                        } finally {
                            if (J$.Fr(7463361))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function StrictParsingError(message) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(7457289, arguments.callee, this, arguments);
                            arguments = J$.N(7457297, 'arguments', arguments, true, false, false);
                            message = J$.N(7457305, 'message', message, true, false, false);
                            J$.M(7457281, J$.R(7457249, 'HttpSignatureError', HttpSignatureError, false, true), 'call', false)(J$.R(7457257, 'this', this, false, false), J$.R(7457265, 'message', message, false, false), J$.R(7457273, 'StrictParsingError', StrictParsingError, false, true));
                        } catch (J$e) {
                            J$.Ex(7463369, J$e);
                        } finally {
                            if (J$.Fr(7463377))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function RequestSigner(options) {
                jalangiLabel4:
                    while (true) {
                        try {
                            J$.Fe(7458753, arguments.callee, this, arguments);
                            arguments = J$.N(7458761, 'arguments', arguments, true, false, false);
                            options = J$.N(7458769, 'options', options, true, false, false);
                            J$.N(7458777, 'alg', alg, false, false, false);
                            J$.N(7458785, 'key', key, false, false, false);
                            J$.M(7457369, J$.R(7457345, 'assert', assert, false, true), 'object', false)(J$.R(7457353, 'options', options, false, false), J$.T(7457361, 'options', 21, false));
                            var alg = J$.W(7457385, 'alg', J$.T(7457377, [], 10, false), alg, false, false);
                            if (J$.C(396592, J$.B(742546, '!==', J$.G(7457401, J$.R(7457393, 'options', options, false, false), 'algorithm'), J$.T(7457409, undefined, 24, false)))) {
                                J$.M(7457449, J$.R(7457417, 'assert', assert, false, true), 'string', false)(J$.G(7457433, J$.R(7457425, 'options', options, false, false), 'algorithm'), J$.T(7457441, 'options.algorithm', 21, false));
                                alg = J$.W(7457489, 'alg', J$.F(7457481, J$.R(7457457, 'validateAlgorithm', validateAlgorithm, false, true), false)(J$.G(7457473, J$.R(7457465, 'options', options, false, false), 'algorithm')), alg, false, false);
                            }
                            J$.P(7457513, J$.R(7457497, 'this', this, false, false), 'rs_alg', J$.R(7457505, 'alg', alg, false, false));
                            if (J$.C(396680, J$.B(742554, '!==', J$.G(7457529, J$.R(7457521, 'options', options, false, false), 'sign'), J$.T(7457537, undefined, 24, false)))) {
                                J$.M(7457577, J$.R(7457545, 'assert', assert, false, true), 'func', false)(J$.G(7457561, J$.R(7457553, 'options', options, false, false), 'sign'), J$.T(7457569, 'options.sign', 21, false));
                                J$.P(7457609, J$.R(7457585, 'this', this, false, false), 'rs_signFunc', J$.G(7457601, J$.R(7457593, 'options', options, false, false), 'sign'));
                            } else if (J$.C(396672, J$.C(396600, J$.B(742562, '===', J$.G(7457633, J$.R(7457617, 'alg', alg, false, false), J$.T(7457625, 0, 22, false)), J$.T(7457641, 'hmac', 21, false))) ? J$.B(742570, '!==', J$.G(7457657, J$.R(7457649, 'options', options, false, false), 'key'), J$.T(7457665, undefined, 24, false)) : J$._())) {
                                J$.M(7457705, J$.R(7457673, 'assert', assert, false, true), 'string', false)(J$.G(7457689, J$.R(7457681, 'options', options, false, false), 'keyId'), J$.T(7457697, 'options.keyId', 21, false));
                                J$.P(7457737, J$.R(7457713, 'this', this, false, false), 'rs_keyId', J$.G(7457729, J$.R(7457721, 'options', options, false, false), 'keyId'));
                                if (J$.C(396616, J$.C(396608, J$.B(742586, '!==', J$.U(742578, 'typeof', J$.G(7457753, J$.R(7457745, 'options', options, false, false), 'key')), J$.T(7457761, 'string', 21, false))) ? J$.U(742594, '!', J$.M(7457793, J$.I(typeof Buffer === 'undefined' ? Buffer = J$.R(7457769, 'Buffer', undefined, true, true) : Buffer = J$.R(7457769, 'Buffer', Buffer, true, true)), 'isBuffer', false)(J$.G(7457785, J$.R(7457777, 'options', options, false, false), 'key'))) : J$._()))
                                    throw J$.F(7457817, J$.I(typeof TypeError === 'undefined' ? TypeError = J$.R(7457801, 'TypeError', undefined, true, true) : TypeError = J$.R(7457801, 'TypeError', TypeError, true, true)), true)(J$.T(7457809, 'options.key for HMAC must be a string or Buffer', 21, false));
                                J$.P(7457897, J$.R(7457825, 'this', this, false, false), 'rs_signer', J$.M(7457889, J$.R(7457833, 'crypto', crypto, false, true), 'createHmac', false)(J$.M(7457865, J$.G(7457857, J$.R(7457841, 'alg', alg, false, false), J$.T(7457849, 1, 22, false)), 'toUpperCase', false)(), J$.G(7457881, J$.R(7457873, 'options', options, false, false), 'key')));
                                J$.P(7458065, J$.G(7457913, J$.R(7457905, 'this', this, false, false), 'rs_signer'), 'sign', J$.T(7458057, function () {
                                    jalangiLabel3:
                                        while (true) {
                                            try {
                                                J$.Fe(7458033, arguments.callee, this, arguments);
                                                arguments = J$.N(7458041, 'arguments', arguments, true, false, false);
                                                J$.N(7458049, 'digest', digest, false, false, false);
                                                var digest = J$.W(7457945, 'digest', J$.M(7457937, J$.R(7457921, 'this', this, false, false), 'digest', false)(J$.T(7457929, 'base64', 21, false)), digest, false, false);
                                                return J$.Rt(7458025, J$.T(7458017, {
                                                    hashAlgorithm: J$.G(7457969, J$.R(7457953, 'alg', alg, false, false), J$.T(7457961, 1, 22, false)),
                                                    toString: J$.T(7458009, function () {
                                                        jalangiLabel2:
                                                            while (true) {
                                                                try {
                                                                    J$.Fe(7457993, arguments.callee, this, arguments);
                                                                    arguments = J$.N(7458001, 'arguments', arguments, true, false, false);
                                                                    return J$.Rt(7457985, J$.R(7457977, 'digest', digest, false, false));
                                                                } catch (J$e) {
                                                                    J$.Ex(7463385, J$e);
                                                                } finally {
                                                                    if (J$.Fr(7463393))
                                                                        continue jalangiLabel2;
                                                                    else
                                                                        return J$.Ra();
                                                                }
                                                            }
                                                    }, 12, false)
                                                }, 11, false));
                                            } catch (J$e) {
                                                J$.Ex(7463401, J$e);
                                            } finally {
                                                if (J$.Fr(7463409))
                                                    continue jalangiLabel3;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false));
                            } else if (J$.C(396664, J$.B(742602, '!==', J$.G(7458081, J$.R(7458073, 'options', options, false, false), 'key'), J$.T(7458089, undefined, 24, false)))) {
                                var key = J$.W(7458113, 'key', J$.G(7458105, J$.R(7458097, 'options', options, false, false), 'key'), key, false, false);
                                if (J$.C(396632, J$.C(396624, J$.B(742618, '===', J$.U(742610, 'typeof', J$.R(7458121, 'key', key, false, false)), J$.T(7458129, 'string', 21, false))) ? J$._() : J$.M(7458153, J$.I(typeof Buffer === 'undefined' ? Buffer = J$.R(7458137, 'Buffer', undefined, true, true) : Buffer = J$.R(7458137, 'Buffer', Buffer, true, true)), 'isBuffer', false)(J$.R(7458145, 'key', key, false, false))))
                                    key = J$.W(7458185, 'key', J$.M(7458177, J$.R(7458161, 'sshpk', sshpk, false, true), 'parsePrivateKey', false)(J$.R(7458169, 'key', key, false, false)), key, false, false);
                                J$.M(7458265, J$.R(7458193, 'assert', assert, false, true), 'ok', false)(J$.M(7458249, J$.G(7458209, J$.R(7458201, 'sshpk', sshpk, false, true), 'PrivateKey'), 'isPrivateKey', false)(J$.R(7458217, 'key', key, false, false), J$.T(7458241, [
                                    J$.T(7458225, 1, 22, false),
                                    J$.T(7458233, 2, 22, false)
                                ], 10, false)), J$.T(7458257, 'options.key must be a sshpk.PrivateKey', 21, false));
                                J$.P(7458289, J$.R(7458273, 'this', this, false, false), 'rs_key', J$.R(7458281, 'key', key, false, false));
                                J$.M(7458329, J$.R(7458297, 'assert', assert, false, true), 'string', false)(J$.G(7458313, J$.R(7458305, 'options', options, false, false), 'keyId'), J$.T(7458321, 'options.keyId', 21, false));
                                J$.P(7458361, J$.R(7458337, 'this', this, false, false), 'rs_keyId', J$.G(7458353, J$.R(7458345, 'options', options, false, false), 'keyId'));
                                if (J$.C(396640, J$.U(742626, '!', J$.G(7458393, J$.R(7458369, 'PK_ALGOS', PK_ALGOS, false, true), J$.G(7458385, J$.R(7458377, 'key', key, false, false), 'type'))))) {
                                    throw J$.F(7458449, J$.R(7458401, 'InvalidAlgorithmError', InvalidAlgorithmError, false, true), true)(J$.B(742642, '+', J$.B(742634, '+', J$.M(7458425, J$.G(7458417, J$.R(7458409, 'key', key, false, false), 'type'), 'toUpperCase', false)(), J$.T(7458433, ' type ', 21, false)), J$.T(7458441, 'keys are not supported', 21, false)));
                                }
                                if (J$.C(396656, J$.C(396648, J$.B(742650, '!==', J$.G(7458473, J$.R(7458457, 'alg', alg, false, false), J$.T(7458465, 0, 22, false)), J$.T(7458481, undefined, 24, false))) ? J$.B(742658, '!==', J$.G(7458497, J$.R(7458489, 'key', key, false, false), 'type'), J$.G(7458521, J$.R(7458505, 'alg', alg, false, false), J$.T(7458513, 0, 22, false))) : J$._())) {
                                    throw J$.F(7458617, J$.R(7458529, 'InvalidAlgorithmError', InvalidAlgorithmError, false, true), true)(J$.B(742690, '+', J$.B(742682, '+', J$.B(742674, '+', J$.B(742666, '+', J$.T(7458537, 'options.key must be a ', 21, false), J$.M(7458569, J$.G(7458561, J$.R(7458545, 'alg', alg, false, false), J$.T(7458553, 0, 22, false)), 'toUpperCase', false)()), J$.T(7458577, ' key, was given a ', 21, false)), J$.M(7458601, J$.G(7458593, J$.R(7458585, 'key', key, false, false), 'type'), 'toUpperCase', false)()), J$.T(7458609, ' key instead', 21, false)));
                                }
                                J$.P(7458673, J$.R(7458625, 'this', this, false, false), 'rs_signer', J$.M(7458665, J$.R(7458633, 'key', key, false, false), 'createSign', false)(J$.G(7458657, J$.R(7458641, 'alg', alg, false, false), J$.T(7458649, 1, 22, false))));
                            } else {
                                throw J$.F(7458697, J$.I(typeof TypeError === 'undefined' ? TypeError = J$.R(7458681, 'TypeError', undefined, true, true) : TypeError = J$.R(7458681, 'TypeError', TypeError, true, true)), true)(J$.T(7458689, 'options.sign (func) or options.key is required', 21, false));
                            }
                            J$.P(7458721, J$.R(7458705, 'this', this, false, false), 'rs_headers', J$.T(7458713, [], 10, false));
                            J$.P(7458745, J$.R(7458729, 'this', this, false, false), 'rs_lines', J$.T(7458737, [], 10, false));
                        } catch (J$e) {
                            J$.Ex(7463417, J$e);
                        } finally {
                            if (J$.Fr(7463425))
                                continue jalangiLabel4;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(7463193, 'assert', assert, false, false, false);
            J$.N(7463201, 'crypto', crypto, false, false, false);
            J$.N(7463209, 'http', http, false, false, false);
            J$.N(7463217, 'util', util, false, false, false);
            J$.N(7463225, 'sshpk', sshpk, false, false, false);
            J$.N(7463233, 'jsprim', jsprim, false, false, false);
            J$.N(7463241, 'utils', utils, false, false, false);
            J$.N(7463249, 'sprintf', sprintf, false, false, false);
            J$.N(7463257, 'HASH_ALGOS', HASH_ALGOS, false, false, false);
            J$.N(7463265, 'PK_ALGOS', PK_ALGOS, false, false, false);
            J$.N(7463273, 'InvalidAlgorithmError', InvalidAlgorithmError, false, false, false);
            J$.N(7463281, 'HttpSignatureError', HttpSignatureError, false, false, false);
            J$.N(7463289, 'validateAlgorithm', validateAlgorithm, false, false, false);
            J$.N(7463297, 'AUTHZ_FMT', AUTHZ_FMT, false, false, false);
            MissingHeaderError = J$.N(7463313, 'MissingHeaderError', J$.T(7463305, MissingHeaderError, 12, false), true, false, false);
            StrictParsingError = J$.N(7463329, 'StrictParsingError', J$.T(7463321, StrictParsingError, 12, false), true, false, false);
            RequestSigner = J$.N(7463345, 'RequestSigner', J$.T(7463337, RequestSigner, 12, false), true, false, false);
            var assert = J$.W(7456777, 'assert', J$.F(7456769, J$.I(typeof require === 'undefined' ? require = J$.R(7456753, 'require', undefined, true, true) : require = J$.R(7456753, 'require', require, true, true)), false)(J$.T(7456761, 'assert-plus', 21, false)), assert, false, true);
            var crypto = J$.W(7456809, 'crypto', J$.F(7456801, J$.I(typeof require === 'undefined' ? require = J$.R(7456785, 'require', undefined, true, true) : require = J$.R(7456785, 'require', require, true, true)), false)(J$.T(7456793, 'crypto', 21, false)), crypto, false, true);
            var http = J$.W(7456841, 'http', J$.F(7456833, J$.I(typeof require === 'undefined' ? require = J$.R(7456817, 'require', undefined, true, true) : require = J$.R(7456817, 'require', require, true, true)), false)(J$.T(7456825, 'http', 21, false)), http, false, true);
            var util = J$.W(7456873, 'util', J$.F(7456865, J$.I(typeof require === 'undefined' ? require = J$.R(7456849, 'require', undefined, true, true) : require = J$.R(7456849, 'require', require, true, true)), false)(J$.T(7456857, 'util', 21, false)), util, false, true);
            var sshpk = J$.W(7456905, 'sshpk', J$.F(7456897, J$.I(typeof require === 'undefined' ? require = J$.R(7456881, 'require', undefined, true, true) : require = J$.R(7456881, 'require', require, true, true)), false)(J$.T(7456889, 'sshpk', 21, false)), sshpk, false, true);
            var jsprim = J$.W(7456937, 'jsprim', J$.F(7456929, J$.I(typeof require === 'undefined' ? require = J$.R(7456913, 'require', undefined, true, true) : require = J$.R(7456913, 'require', require, true, true)), false)(J$.T(7456921, 'jsprim', 21, false)), jsprim, false, true);
            var utils = J$.W(7456969, 'utils', J$.F(7456961, J$.I(typeof require === 'undefined' ? require = J$.R(7456945, 'require', undefined, true, true) : require = J$.R(7456945, 'require', require, true, true)), false)(J$.T(7456953, './utils', 21, false)), utils, false, true);
            var sprintf = J$.W(7457009, 'sprintf', J$.G(7457001, J$.F(7456993, J$.I(typeof require === 'undefined' ? require = J$.R(7456977, 'require', undefined, true, true) : require = J$.R(7456977, 'require', require, true, true)), false)(J$.T(7456985, 'util', 21, false)), 'format'), sprintf, false, true);
            var HASH_ALGOS = J$.W(7457033, 'HASH_ALGOS', J$.G(7457025, J$.R(7457017, 'utils', utils, false, true), 'HASH_ALGOS'), HASH_ALGOS, false, true);
            var PK_ALGOS = J$.W(7457057, 'PK_ALGOS', J$.G(7457049, J$.R(7457041, 'utils', utils, false, true), 'PK_ALGOS'), PK_ALGOS, false, true);
            var InvalidAlgorithmError = J$.W(7457081, 'InvalidAlgorithmError', J$.G(7457073, J$.R(7457065, 'utils', utils, false, true), 'InvalidAlgorithmError'), InvalidAlgorithmError, false, true);
            var HttpSignatureError = J$.W(7457105, 'HttpSignatureError', J$.G(7457097, J$.R(7457089, 'utils', utils, false, true), 'HttpSignatureError'), HttpSignatureError, false, true);
            var validateAlgorithm = J$.W(7457129, 'validateAlgorithm', J$.G(7457121, J$.R(7457113, 'utils', utils, false, true), 'validateAlgorithm'), validateAlgorithm, false, true);
            var AUTHZ_FMT = J$.W(7457145, 'AUTHZ_FMT', J$.T(7457137, 'Signature keyId="%s",algorithm="%s",headers="%s",signature="%s"', 21, false), AUTHZ_FMT, false, true);
            J$.M(7457241, J$.R(7457217, 'util', util, false, true), 'inherits', false)(J$.R(7457225, 'MissingHeaderError', MissingHeaderError, false, true), J$.R(7457233, 'HttpSignatureError', HttpSignatureError, false, true));
            J$.M(7457337, J$.R(7457313, 'util', util, false, true), 'inherits', false)(J$.R(7457321, 'StrictParsingError', StrictParsingError, false, true), J$.R(7457329, 'HttpSignatureError', HttpSignatureError, false, true));
            J$.P(7459177, J$.G(7458801, J$.R(7458793, 'RequestSigner', RequestSigner, false, true), 'prototype'), 'writeHeader', J$.T(7459169, function (header, value) {
                jalangiLabel5:
                    while (true) {
                        try {
                            J$.Fe(7459129, arguments.callee, this, arguments);
                            arguments = J$.N(7459137, 'arguments', arguments, true, false, false);
                            header = J$.N(7459145, 'header', header, true, false, false);
                            value = J$.N(7459153, 'value', value, true, false, false);
                            J$.N(7459161, 'line', line, false, false, false);
                            J$.M(7458833, J$.R(7458809, 'assert', assert, false, true), 'string', false)(J$.R(7458817, 'header', header, false, false), J$.T(7458825, 'header', 21, false));
                            header = J$.W(7458857, 'header', J$.M(7458849, J$.R(7458841, 'header', header, false, false), 'toLowerCase', false)(), header, false, false);
                            J$.M(7458889, J$.R(7458865, 'assert', assert, false, true), 'string', false)(J$.R(7458873, 'value', value, false, false), J$.T(7458881, 'value', 21, false));
                            J$.M(7458921, J$.G(7458905, J$.R(7458897, 'this', this, false, false), 'rs_headers'), 'push', false)(J$.R(7458913, 'header', header, false, false));
                            if (J$.C(396696, J$.G(7458937, J$.R(7458929, 'this', this, false, false), 'rs_signFunc'))) {
                                J$.M(7458985, J$.G(7458953, J$.R(7458945, 'this', this, false, false), 'rs_lines'), 'push', false)(J$.B(742706, '+', J$.B(742698, '+', J$.R(7458961, 'header', header, false, false), J$.T(7458969, ': ', 21, false)), J$.R(7458977, 'value', value, false, false)));
                            } else {
                                var line = J$.W(7459017, 'line', J$.B(742722, '+', J$.B(742714, '+', J$.R(7458993, 'header', header, false, false), J$.T(7459001, ': ', 21, false)), J$.R(7459009, 'value', value, false, false)), line, false, false);
                                if (J$.C(396688, J$.B(742730, '>', J$.G(7459041, J$.G(7459033, J$.R(7459025, 'this', this, false, false), 'rs_headers'), 'length'), J$.T(7459049, 0, 22, false))))
                                    line = J$.W(7459073, 'line', J$.B(742738, '+', J$.T(7459057, '\n', 21, false), J$.R(7459065, 'line', line, false, false)), line, false, false);
                                J$.M(7459105, J$.G(7459089, J$.R(7459081, 'this', this, false, false), 'rs_signer'), 'update', false)(J$.R(7459097, 'line', line, false, false));
                            }
                            return J$.Rt(7459121, J$.R(7459113, 'value', value, false, false));
                        } catch (J$e) {
                            J$.Ex(7463433, J$e);
                        } finally {
                            if (J$.Fr(7463441))
                                continue jalangiLabel5;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(7459289, J$.G(7459193, J$.R(7459185, 'RequestSigner', RequestSigner, false, true), 'prototype'), 'writeDateHeader', J$.T(7459281, function () {
                jalangiLabel6:
                    while (true) {
                        try {
                            J$.Fe(7459265, arguments.callee, this, arguments);
                            arguments = J$.N(7459273, 'arguments', arguments, true, false, false);
                            return J$.Rt(7459257, J$.M(7459249, J$.R(7459201, 'this', this, false, false), 'writeHeader', false)(J$.T(7459209, 'date', 21, false), J$.M(7459241, J$.R(7459217, 'jsprim', jsprim, false, true), 'rfc1123', false)(J$.F(7459233, J$.I(typeof Date === 'undefined' ? Date = J$.R(7459225, 'Date', undefined, true, true) : Date = J$.R(7459225, 'Date', Date, true, true)), true)())));
                        } catch (J$e) {
                            J$.Ex(7463449, J$e);
                        } finally {
                            if (J$.Fr(7463457))
                                continue jalangiLabel6;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(7459489, J$.G(7459305, J$.R(7459297, 'RequestSigner', RequestSigner, false, true), 'prototype'), 'writeTarget', J$.T(7459481, function (method, path) {
                jalangiLabel7:
                    while (true) {
                        try {
                            J$.Fe(7459449, arguments.callee, this, arguments);
                            arguments = J$.N(7459457, 'arguments', arguments, true, false, false);
                            method = J$.N(7459465, 'method', method, true, false, false);
                            path = J$.N(7459473, 'path', path, true, false, false);
                            J$.M(7459337, J$.R(7459313, 'assert', assert, false, true), 'string', false)(J$.R(7459321, 'method', method, false, false), J$.T(7459329, 'method', 21, false));
                            J$.M(7459369, J$.R(7459345, 'assert', assert, false, true), 'string', false)(J$.R(7459353, 'path', path, false, false), J$.T(7459361, 'path', 21, false));
                            method = J$.W(7459393, 'method', J$.M(7459385, J$.R(7459377, 'method', method, false, false), 'toLowerCase', false)(), method, false, false);
                            J$.M(7459441, J$.R(7459401, 'this', this, false, false), 'writeHeader', false)(J$.T(7459409, '(request-target)', 21, false), J$.B(742754, '+', J$.B(742746, '+', J$.R(7459417, 'method', method, false, false), J$.T(7459425, ' ', 21, false)), J$.R(7459433, 'path', path, false, false)));
                        } catch (J$e) {
                            J$.Ex(7463465, J$e);
                        } finally {
                            if (J$.Fr(7463473))
                                continue jalangiLabel7;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(7460545, J$.G(7459505, J$.R(7459497, 'RequestSigner', RequestSigner, false, true), 'prototype'), 'sign', J$.T(7460537, function (cb) {
                jalangiLabel9:
                    while (true) {
                        try {
                            J$.Fe(7460465, arguments.callee, this, arguments);
                            arguments = J$.N(7460473, 'arguments', arguments, true, false, false);
                            cb = J$.N(7460481, 'cb', cb, true, false, false);
                            J$.N(7460489, 'alg', alg, false, false, false);
                            J$.N(7460497, 'authz', authz, false, false, false);
                            J$.N(7460505, 'data', data, false, false, false);
                            J$.N(7460513, 'self', self, false, false, false);
                            J$.N(7460521, 'sigObj', sigObj, false, false, false);
                            J$.N(7460529, 'signature', signature, false, false, false);
                            J$.M(7459537, J$.R(7459513, 'assert', assert, false, true), 'func', false)(J$.R(7459521, 'cb', cb, false, false), J$.T(7459529, 'callback', 21, false));
                            if (J$.C(396704, J$.B(742762, '<', J$.G(7459561, J$.G(7459553, J$.R(7459545, 'this', this, false, false), 'rs_headers'), 'length'), J$.T(7459569, 1, 22, false))))
                                throw J$.F(7459593, J$.I(typeof Error === 'undefined' ? Error = J$.R(7459577, 'Error', undefined, true, true) : Error = J$.R(7459577, 'Error', Error, true, true)), true)(J$.T(7459585, 'At least one header must be signed', 21, false));
                            var alg, authz;
                            if (J$.C(396728, J$.G(7459609, J$.R(7459601, 'this', this, false, false), 'rs_signFunc'))) {
                                var data = J$.W(7459649, 'data', J$.M(7459641, J$.G(7459625, J$.R(7459617, 'this', this, false, false), 'rs_lines'), 'join', false)(J$.T(7459633, '\n', 21, false)), data, false, false);
                                var self = J$.W(7459665, 'self', J$.R(7459657, 'this', this, false, false), self, false, false);
                                J$.M(7460145, J$.R(7459673, 'this', this, false, false), 'rs_signFunc', false)(J$.R(7459681, 'data', data, false, false), J$.T(7460137, function (err, sig) {
                                    jalangiLabel8:
                                        while (true) {
                                            try {
                                                J$.Fe(7460105, arguments.callee, this, arguments);
                                                arguments = J$.N(7460113, 'arguments', arguments, true, false, false);
                                                err = J$.N(7460121, 'err', err, true, false, false);
                                                sig = J$.N(7460129, 'sig', sig, true, false, false);
                                                if (J$.C(396712, J$.R(7459689, 'err', err, false, false))) {
                                                    J$.F(7459713, J$.R(7459697, 'cb', cb, false, false), false)(J$.R(7459705, 'err', err, false, false));
                                                    return J$.Rt(7459721, undefined);
                                                }
                                                try {
                                                    J$.M(7459753, J$.R(7459729, 'assert', assert, false, true), 'object', false)(J$.R(7459737, 'sig', sig, false, false), J$.T(7459745, 'signature', 21, false));
                                                    J$.M(7459793, J$.R(7459761, 'assert', assert, false, true), 'string', false)(J$.G(7459777, J$.R(7459769, 'sig', sig, false, false), 'keyId'), J$.T(7459785, 'signature.keyId', 21, false));
                                                    J$.M(7459833, J$.R(7459801, 'assert', assert, false, true), 'string', false)(J$.G(7459817, J$.R(7459809, 'sig', sig, false, false), 'algorithm'), J$.T(7459825, 'signature.algorithm', 21, false));
                                                    J$.M(7459873, J$.R(7459841, 'assert', assert, false, true), 'string', false)(J$.G(7459857, J$.R(7459849, 'sig', sig, false, false), 'signature'), J$.T(7459865, 'signature.signature', 21, false));
                                                    alg = J$.W(7459913, 'alg', J$.F(7459905, J$.R(7459881, 'validateAlgorithm', validateAlgorithm, false, true), false)(J$.G(7459897, J$.R(7459889, 'sig', sig, false, false), 'algorithm')), alg, false, false);
                                                    authz = J$.W(7460025, 'authz', J$.F(7460017, J$.R(7459921, 'sprintf', sprintf, false, true), false)(J$.R(7459929, 'AUTHZ_FMT', AUTHZ_FMT, false, true), J$.G(7459945, J$.R(7459937, 'sig', sig, false, false), 'keyId'), J$.G(7459961, J$.R(7459953, 'sig', sig, false, false), 'algorithm'), J$.M(7459993, J$.G(7459977, J$.R(7459969, 'self', self, false, false), 'rs_headers'), 'join', false)(J$.T(7459985, ' ', 21, false)), J$.G(7460009, J$.R(7460001, 'sig', sig, false, false), 'signature')), authz, false, false);
                                                } catch (e) {
                                                    J$.N(7460065, 'e', e, false, false, true);
                                                    J$.F(7460049, J$.R(7460033, 'cb', cb, false, false), false)(J$.R(7460041, 'e', e, false, false));
                                                    return J$.Rt(7460057, undefined);
                                                }
                                                J$.F(7460097, J$.R(7460073, 'cb', cb, false, false), false)(J$.T(7460081, null, 25, false), J$.R(7460089, 'authz', authz, false, false));
                                            } catch (J$e) {
                                                J$.Ex(7463481, J$e);
                                            } finally {
                                                if (J$.Fr(7463489))
                                                    continue jalangiLabel8;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false));
                            } else {
                                try {
                                    var sigObj = J$.W(7460177, 'sigObj', J$.M(7460169, J$.G(7460161, J$.R(7460153, 'this', this, false, false), 'rs_signer'), 'sign', false)(), sigObj, false, false);
                                } catch (e) {
                                    J$.N(7460217, 'e', e, false, false, true);
                                    J$.F(7460201, J$.R(7460185, 'cb', cb, false, false), false)(J$.R(7460193, 'e', e, false, false));
                                    return J$.Rt(7460209, undefined);
                                }
                                alg = J$.W(7460305, 'alg', J$.B(742778, '+', J$.B(742770, '+', J$.C(396720, J$.G(7460249, J$.G(7460233, J$.R(7460225, 'this', this, false, false), 'rs_alg'), J$.T(7460241, 0, 22, false))) ? J$._() : J$.G(7460273, J$.G(7460265, J$.R(7460257, 'this', this, false, false), 'rs_key'), 'type'), J$.T(7460281, '-', 21, false)), J$.G(7460297, J$.R(7460289, 'sigObj', sigObj, false, false), 'hashAlgorithm')), alg, false, false);
                                var signature = J$.W(7460329, 'signature', J$.M(7460321, J$.R(7460313, 'sigObj', sigObj, false, false), 'toString', false)(), signature, false, false);
                                authz = J$.W(7460425, 'authz', J$.F(7460417, J$.R(7460337, 'sprintf', sprintf, false, true), false)(J$.R(7460345, 'AUTHZ_FMT', AUTHZ_FMT, false, true), J$.G(7460361, J$.R(7460353, 'this', this, false, false), 'rs_keyId'), J$.R(7460369, 'alg', alg, false, false), J$.M(7460401, J$.G(7460385, J$.R(7460377, 'this', this, false, false), 'rs_headers'), 'join', false)(J$.T(7460393, ' ', 21, false)), J$.R(7460409, 'signature', signature, false, false)), authz, false, false);
                                J$.F(7460457, J$.R(7460433, 'cb', cb, false, false), false)(J$.T(7460441, null, 25, false), J$.R(7460449, 'authz', authz, false, false));
                            }
                        } catch (J$e) {
                            J$.Ex(7463497, J$e);
                        } finally {
                            if (J$.Fr(7463505))
                                continue jalangiLabel9;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(7463177, J$.I(typeof module === 'undefined' ? module = J$.R(7460553, 'module', undefined, true, true) : module = J$.R(7460553, 'module', module, true, true)), 'exports', J$.T(7463169, {
                isSigner: J$.T(7460649, function (obj) {
                    jalangiLabel10:
                        while (true) {
                            try {
                                J$.Fe(7460625, arguments.callee, this, arguments);
                                arguments = J$.N(7460633, 'arguments', arguments, true, false, false);
                                obj = J$.N(7460641, 'obj', obj, true, false, false);
                                if (J$.C(396744, J$.C(396736, J$.B(742794, '===', J$.U(742786, 'typeof', J$.R(7460561, 'obj', obj, false, false)), J$.T(7460569, 'object', 21, false))) ? J$.B(742802, 'instanceof', J$.R(7460577, 'obj', obj, false, false), J$.R(7460585, 'RequestSigner', RequestSigner, false, true)) : J$._()))
                                    return J$.Rt(7460601, J$.T(7460593, true, 23, false));
                                return J$.Rt(7460617, J$.T(7460609, false, 23, false));
                            } catch (J$e) {
                                J$.Ex(7463513, J$e);
                            } finally {
                                if (J$.Fr(7463521))
                                    continue jalangiLabel10;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false),
                createSigner: J$.T(7460713, function createSigner(options) {
                    jalangiLabel11:
                        while (true) {
                            try {
                                J$.Fe(7460689, arguments.callee, this, arguments);
                                arguments = J$.N(7460697, 'arguments', arguments, true, false, false);
                                options = J$.N(7460705, 'options', options, true, false, false);
                                return J$.Rt(7460681, J$.F(7460673, J$.R(7460657, 'RequestSigner', RequestSigner, false, true), true)(J$.R(7460665, 'options', options, false, false)));
                            } catch (J$e) {
                                J$.Ex(7463529, J$e);
                            } finally {
                                if (J$.Fr(7463537))
                                    continue jalangiLabel11;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false),
                signRequest: J$.T(7463161, function signRequest(request, options) {
                    jalangiLabel12:
                        while (true) {
                            try {
                                J$.Fe(7463041, arguments.callee, this, arguments);
                                arguments = J$.N(7463049, 'arguments', arguments, true, false, false);
                                request = J$.N(7463057, 'request', request, true, false, false);
                                options = J$.N(7463065, 'options', options, true, false, false);
                                J$.N(7463073, 'alg', alg, false, false, false);
                                J$.N(7463081, 'i', i, false, false, false);
                                J$.N(7463089, 'stringToSign', stringToSign, false, false, false);
                                J$.N(7463097, 'h', h, false, false, false);
                                J$.N(7463105, 'value', value, false, false, false);
                                J$.N(7463113, 'signature', signature, false, false, false);
                                J$.N(7463121, 'hmac', hmac, false, false, false);
                                J$.N(7463129, 'key', key, false, false, false);
                                J$.N(7463137, 'signer', signer, false, false, false);
                                J$.N(7463145, 'sigObj', sigObj, false, false, false);
                                J$.N(7463153, 'authzHeaderName', authzHeaderName, false, false, false);
                                J$.M(7460745, J$.R(7460721, 'assert', assert, false, true), 'object', false)(J$.R(7460729, 'request', request, false, false), J$.T(7460737, 'request', 21, false));
                                J$.M(7460777, J$.R(7460753, 'assert', assert, false, true), 'object', false)(J$.R(7460761, 'options', options, false, false), J$.T(7460769, 'options', 21, false));
                                J$.M(7460817, J$.R(7460785, 'assert', assert, false, true), 'optionalString', false)(J$.G(7460801, J$.R(7460793, 'options', options, false, false), 'algorithm'), J$.T(7460809, 'options.algorithm', 21, false));
                                J$.M(7460857, J$.R(7460825, 'assert', assert, false, true), 'string', false)(J$.G(7460841, J$.R(7460833, 'options', options, false, false), 'keyId'), J$.T(7460849, 'options.keyId', 21, false));
                                J$.M(7460897, J$.R(7460865, 'assert', assert, false, true), 'optionalArrayOfString', false)(J$.G(7460881, J$.R(7460873, 'options', options, false, false), 'headers'), J$.T(7460889, 'options.headers', 21, false));
                                J$.M(7460937, J$.R(7460905, 'assert', assert, false, true), 'optionalString', false)(J$.G(7460921, J$.R(7460913, 'options', options, false, false), 'httpVersion'), J$.T(7460929, 'options.httpVersion', 21, false));
                                if (J$.C(396752, J$.U(742810, '!', J$.M(7460961, J$.R(7460945, 'request', request, false, false), 'getHeader', false)(J$.T(7460953, 'Date', 21, false)))))
                                    J$.M(7461017, J$.R(7460969, 'request', request, false, false), 'setHeader', false)(J$.T(7460977, 'Date', 21, false), J$.M(7461009, J$.R(7460985, 'jsprim', jsprim, false, true), 'rfc1123', false)(J$.F(7461001, J$.I(typeof Date === 'undefined' ? Date = J$.R(7460993, 'Date', undefined, true, true) : Date = J$.R(7460993, 'Date', Date, true, true)), true)()));
                                if (J$.C(396760, J$.U(742818, '!', J$.G(7461033, J$.R(7461025, 'options', options, false, false), 'headers'))))
                                    J$.P(7461065, J$.R(7461041, 'options', options, false, false), 'headers', J$.T(7461057, [J$.T(7461049, 'date', 21, false)], 10, false));
                                if (J$.C(396768, J$.U(742826, '!', J$.G(7461081, J$.R(7461073, 'options', options, false, false), 'httpVersion'))))
                                    J$.P(7461105, J$.R(7461089, 'options', options, false, false), 'httpVersion', J$.T(7461097, '1.1', 21, false));
                                var alg = J$.W(7461121, 'alg', J$.T(7461113, [], 10, false), alg, false, false);
                                if (J$.C(396776, J$.G(7461137, J$.R(7461129, 'options', options, false, false), 'algorithm'))) {
                                    J$.P(7461177, J$.R(7461145, 'options', options, false, false), 'algorithm', J$.M(7461169, J$.G(7461161, J$.R(7461153, 'options', options, false, false), 'algorithm'), 'toLowerCase', false)());
                                    alg = J$.W(7461217, 'alg', J$.F(7461209, J$.R(7461185, 'validateAlgorithm', validateAlgorithm, false, true), false)(J$.G(7461201, J$.R(7461193, 'options', options, false, false), 'algorithm')), alg, false, false);
                                }
                                var i;
                                var stringToSign = J$.W(7461233, 'stringToSign', J$.T(7461225, '', 21, false), stringToSign, false, false);
                                for (i = J$.W(7461249, 'i', J$.T(7461241, 0, 22, false), i, false, false); J$.C(396840, J$.B(742834, '<', J$.R(7461257, 'i', i, false, false), J$.G(7461281, J$.G(7461273, J$.R(7461265, 'options', options, false, false), 'headers'), 'length'))); J$.B(742858, '-', i = J$.W(7461297, 'i', J$.B(742850, '+', J$.U(742842, '+', J$.R(7461289, 'i', i, false, false)), 1), i, false, false), 1)) {
                                    if (J$.C(396784, J$.B(742874, '!==', J$.U(742866, 'typeof', J$.G(7461329, J$.G(7461313, J$.R(7461305, 'options', options, false, false), 'headers'), J$.R(7461321, 'i', i, false, false))), J$.T(7461337, 'string', 21, false))))
                                        throw J$.F(7461361, J$.I(typeof TypeError === 'undefined' ? TypeError = J$.R(7461345, 'TypeError', undefined, true, true) : TypeError = J$.R(7461345, 'TypeError', TypeError, true, true)), true)(J$.T(7461353, 'options.headers must be an array of Strings', 21, false));
                                    var h = J$.W(7461409, 'h', J$.M(7461401, J$.G(7461393, J$.G(7461377, J$.R(7461369, 'options', options, false, false), 'headers'), J$.R(7461385, 'i', i, false, false)), 'toLowerCase', false)(), h, false, false);
                                    if (J$.C(396824, J$.B(742882, '===', J$.R(7461417, 'h', h, false, false), J$.T(7461425, 'request-line', 21, false)))) {
                                        if (J$.C(396792, J$.U(742890, '!', J$.G(7461441, J$.R(7461433, 'options', options, false, false), 'strict')))) {
                                            stringToSign = J$.W(7461521, 'stringToSign', J$.B(742930, '+', J$.R(7461513, 'stringToSign', stringToSign, false, false), J$.B(742922, '+', J$.B(742914, '+', J$.B(742906, '+', J$.B(742898, '+', J$.G(7461457, J$.R(7461449, 'request', request, false, false), 'method'), J$.T(7461465, ' ', 21, false)), J$.G(7461481, J$.R(7461473, 'request', request, false, false), 'path')), J$.T(7461489, ' HTTP/', 21, false)), J$.G(7461505, J$.R(7461497, 'options', options, false, false), 'httpVersion'))), stringToSign, false, false);
                                        } else {
                                            throw J$.F(7461553, J$.R(7461529, 'StrictParsingError', StrictParsingError, false, true), true)(J$.B(742938, '+', J$.T(7461537, 'request-line is not a valid header ', 21, false), J$.T(7461545, 'with strict parsing enabled.', 21, false)));
                                        }
                                    } else if (J$.C(396816, J$.B(742946, '===', J$.R(7461561, 'h', h, false, false), J$.T(7461569, '(request-target)', 21, false)))) {
                                        stringToSign = J$.W(7461641, 'stringToSign', J$.B(742978, '+', J$.R(7461633, 'stringToSign', stringToSign, false, false), J$.B(742970, '+', J$.B(742962, '+', J$.B(742954, '+', J$.T(7461577, '(request-target): ', 21, false), J$.M(7461601, J$.G(7461593, J$.R(7461585, 'request', request, false, false), 'method'), 'toLowerCase', false)()), J$.T(7461609, ' ', 21, false)), J$.G(7461625, J$.R(7461617, 'request', request, false, false), 'path'))), stringToSign, false, false);
                                    } else {
                                        var value = J$.W(7461673, 'value', J$.M(7461665, J$.R(7461649, 'request', request, false, false), 'getHeader', false)(J$.R(7461657, 'h', h, false, false)), value, false, false);
                                        if (J$.C(396808, J$.C(396800, J$.B(742986, '===', J$.R(7461681, 'value', value, false, false), J$.T(7461689, undefined, 24, false))) ? J$._() : J$.B(742994, '===', J$.R(7461697, 'value', value, false, false), J$.T(7461705, '', 21, false)))) {
                                            throw J$.F(7461737, J$.R(7461713, 'MissingHeaderError', MissingHeaderError, false, true), true)(J$.B(743002, '+', J$.R(7461721, 'h', h, false, false), J$.T(7461729, ' was not in the request', 21, false)));
                                        }
                                        stringToSign = J$.W(7461777, 'stringToSign', J$.B(743026, '+', J$.R(7461769, 'stringToSign', stringToSign, false, false), J$.B(743018, '+', J$.B(743010, '+', J$.R(7461745, 'h', h, false, false), J$.T(7461753, ': ', 21, false)), J$.R(7461761, 'value', value, false, false))), stringToSign, false, false);
                                    }
                                    if (J$.C(396832, J$.B(743042, '<', J$.B(743034, '+', J$.R(7461785, 'i', i, false, false), J$.T(7461793, 1, 22, false)), J$.G(7461817, J$.G(7461809, J$.R(7461801, 'options', options, false, false), 'headers'), 'length'))))
                                        stringToSign = J$.W(7461841, 'stringToSign', J$.B(743050, '+', J$.R(7461833, 'stringToSign', stringToSign, false, false), J$.T(7461825, '\n', 21, false)), stringToSign, false, false);
                                }
                                if (J$.C(396848, J$.M(7461865, J$.R(7461849, 'request', request, false, false), 'hasOwnProperty', false)(J$.T(7461857, '_stringToSign', 21, false)))) {
                                    J$.P(7461889, J$.R(7461873, 'request', request, false, false), '_stringToSign', J$.R(7461881, 'stringToSign', stringToSign, false, false));
                                }
                                var signature;
                                if (J$.C(396920, J$.B(743058, '===', J$.G(7461913, J$.R(7461897, 'alg', alg, false, false), J$.T(7461905, 0, 22, false)), J$.T(7461921, 'hmac', 21, false)))) {
                                    if (J$.C(396864, J$.C(396856, J$.B(743074, '!==', J$.U(743066, 'typeof', J$.G(7461937, J$.R(7461929, 'options', options, false, false), 'key')), J$.T(7461945, 'string', 21, false))) ? J$.U(743082, '!', J$.M(7461977, J$.I(typeof Buffer === 'undefined' ? Buffer = J$.R(7461953, 'Buffer', undefined, true, true) : Buffer = J$.R(7461953, 'Buffer', Buffer, true, true)), 'isBuffer', false)(J$.G(7461969, J$.R(7461961, 'options', options, false, false), 'key'))) : J$._()))
                                        throw J$.F(7462001, J$.I(typeof TypeError === 'undefined' ? TypeError = J$.R(7461985, 'TypeError', undefined, true, true) : TypeError = J$.R(7461985, 'TypeError', TypeError, true, true)), true)(J$.T(7461993, 'options.key must be a string or Buffer', 21, false));
                                    var hmac = J$.W(7462073, 'hmac', J$.M(7462065, J$.R(7462009, 'crypto', crypto, false, true), 'createHmac', false)(J$.M(7462041, J$.G(7462033, J$.R(7462017, 'alg', alg, false, false), J$.T(7462025, 1, 22, false)), 'toUpperCase', false)(), J$.G(7462057, J$.R(7462049, 'options', options, false, false), 'key')), hmac, false, false);
                                    J$.M(7462097, J$.R(7462081, 'hmac', hmac, false, false), 'update', false)(J$.R(7462089, 'stringToSign', stringToSign, false, false));
                                    signature = J$.W(7462129, 'signature', J$.M(7462121, J$.R(7462105, 'hmac', hmac, false, false), 'digest', false)(J$.T(7462113, 'base64', 21, false)), signature, false, false);
                                } else {
                                    var key = J$.W(7462153, 'key', J$.G(7462145, J$.R(7462137, 'options', options, false, false), 'key'), key, false, false);
                                    if (J$.C(396880, J$.C(396872, J$.B(743098, '===', J$.U(743090, 'typeof', J$.R(7462161, 'key', key, false, false)), J$.T(7462169, 'string', 21, false))) ? J$._() : J$.M(7462193, J$.I(typeof Buffer === 'undefined' ? Buffer = J$.R(7462177, 'Buffer', undefined, true, true) : Buffer = J$.R(7462177, 'Buffer', Buffer, true, true)), 'isBuffer', false)(J$.R(7462185, 'key', key, false, false))))
                                        key = J$.W(7462233, 'key', J$.M(7462225, J$.R(7462201, 'sshpk', sshpk, false, true), 'parsePrivateKey', false)(J$.G(7462217, J$.R(7462209, 'options', options, false, false), 'key')), key, false, false);
                                    J$.M(7462313, J$.R(7462241, 'assert', assert, false, true), 'ok', false)(J$.M(7462297, J$.G(7462257, J$.R(7462249, 'sshpk', sshpk, false, true), 'PrivateKey'), 'isPrivateKey', false)(J$.R(7462265, 'key', key, false, false), J$.T(7462289, [
                                        J$.T(7462273, 1, 22, false),
                                        J$.T(7462281, 2, 22, false)
                                    ], 10, false)), J$.T(7462305, 'options.key must be a sshpk.PrivateKey', 21, false));
                                    if (J$.C(396888, J$.U(743106, '!', J$.G(7462345, J$.R(7462321, 'PK_ALGOS', PK_ALGOS, false, true), J$.G(7462337, J$.R(7462329, 'key', key, false, false), 'type'))))) {
                                        throw J$.F(7462401, J$.R(7462353, 'InvalidAlgorithmError', InvalidAlgorithmError, false, true), true)(J$.B(743122, '+', J$.B(743114, '+', J$.M(7462377, J$.G(7462369, J$.R(7462361, 'key', key, false, false), 'type'), 'toUpperCase', false)(), J$.T(7462385, ' type ', 21, false)), J$.T(7462393, 'keys are not supported', 21, false)));
                                    }
                                    if (J$.C(396904, J$.C(396896, J$.B(743130, '!==', J$.G(7462425, J$.R(7462409, 'alg', alg, false, false), J$.T(7462417, 0, 22, false)), J$.T(7462433, undefined, 24, false))) ? J$.B(743138, '!==', J$.G(7462449, J$.R(7462441, 'key', key, false, false), 'type'), J$.G(7462473, J$.R(7462457, 'alg', alg, false, false), J$.T(7462465, 0, 22, false))) : J$._())) {
                                        throw J$.F(7462569, J$.R(7462481, 'InvalidAlgorithmError', InvalidAlgorithmError, false, true), true)(J$.B(743170, '+', J$.B(743162, '+', J$.B(743154, '+', J$.B(743146, '+', J$.T(7462489, 'options.key must be a ', 21, false), J$.M(7462521, J$.G(7462513, J$.R(7462497, 'alg', alg, false, false), J$.T(7462505, 0, 22, false)), 'toUpperCase', false)()), J$.T(7462529, ' key, was given a ', 21, false)), J$.M(7462553, J$.G(7462545, J$.R(7462537, 'key', key, false, false), 'type'), 'toUpperCase', false)()), J$.T(7462561, ' key instead', 21, false)));
                                    }
                                    var signer = J$.W(7462617, 'signer', J$.M(7462609, J$.R(7462577, 'key', key, false, false), 'createSign', false)(J$.G(7462601, J$.R(7462585, 'alg', alg, false, false), J$.T(7462593, 1, 22, false))), signer, false, false);
                                    J$.M(7462641, J$.R(7462625, 'signer', signer, false, false), 'update', false)(J$.R(7462633, 'stringToSign', stringToSign, false, false));
                                    var sigObj = J$.W(7462665, 'sigObj', J$.M(7462657, J$.R(7462649, 'signer', signer, false, false), 'sign', false)(), sigObj, false, false);
                                    if (J$.C(396912, J$.U(743178, '!', J$.G(7462697, J$.R(7462673, 'HASH_ALGOS', HASH_ALGOS, false, true), J$.G(7462689, J$.R(7462681, 'sigObj', sigObj, false, false), 'hashAlgorithm'))))) {
                                        throw J$.F(7462745, J$.R(7462705, 'InvalidAlgorithmError', InvalidAlgorithmError, false, true), true)(J$.B(743186, '+', J$.M(7462729, J$.G(7462721, J$.R(7462713, 'sigObj', sigObj, false, false), 'hashAlgorithm'), 'toUpperCase', false)(), J$.T(7462737, ' is not a supported hash algorithm', 21, false)));
                                    }
                                    J$.P(7462801, J$.R(7462753, 'options', options, false, false), 'algorithm', J$.B(743202, '+', J$.B(743194, '+', J$.G(7462769, J$.R(7462761, 'key', key, false, false), 'type'), J$.T(7462777, '-', 21, false)), J$.G(7462793, J$.R(7462785, 'sigObj', sigObj, false, false), 'hashAlgorithm')));
                                    signature = J$.W(7462825, 'signature', J$.M(7462817, J$.R(7462809, 'sigObj', sigObj, false, false), 'toString', false)(), signature, false, false);
                                    J$.M(7462865, J$.R(7462833, 'assert', assert, false, true), 'notStrictEqual', false)(J$.R(7462841, 'signature', signature, false, false), J$.T(7462849, '', 21, false), J$.T(7462857, 'empty signature produced', 21, false));
                                }
                                var authzHeaderName = J$.W(7462897, 'authzHeaderName', J$.C(396928, J$.G(7462881, J$.R(7462873, 'options', options, false, false), 'authorizationHeaderName')) ? J$._() : J$.T(7462889, 'Authorization', 21, false), authzHeaderName, false, false);
                                J$.M(7463017, J$.R(7462905, 'request', request, false, false), 'setHeader', false)(J$.R(7462913, 'authzHeaderName', authzHeaderName, false, false), J$.F(7463009, J$.R(7462921, 'sprintf', sprintf, false, true), false)(J$.R(7462929, 'AUTHZ_FMT', AUTHZ_FMT, false, true), J$.G(7462945, J$.R(7462937, 'options', options, false, false), 'keyId'), J$.G(7462961, J$.R(7462953, 'options', options, false, false), 'algorithm'), J$.M(7462993, J$.G(7462977, J$.R(7462969, 'options', options, false, false), 'headers'), 'join', false)(J$.T(7462985, ' ', 21, false)), J$.R(7463001, 'signature', signature, false, false)));
                                return J$.Rt(7463033, J$.T(7463025, true, 23, false));
                            } catch (J$e) {
                                J$.Ex(7463545, J$e);
                            } finally {
                                if (J$.Fr(7463553))
                                    continue jalangiLabel12;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false)
            }, 11, false));
        } catch (J$e) {
            J$.Ex(7463561, J$e);
        } finally {
            if (J$.Sr(7463569))
                continue jalangiLabel13;
            else
                break jalangiLabel13;
        }
    }
// JALANGI DO NOT INSTRUMENT

