J$.noInstrEval = false;
jalangiLabel2:
    while (true) {
        try {
            J$.Se(6832137, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestCouchNode/node_modules/asynckit/lib/abort.js');
            function abort(state) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(6832017, arguments.callee, this, arguments);
                            arguments = J$.N(6832025, 'arguments', arguments, true, false, false);
                            state = J$.N(6832033, 'state', state, true, false, false);
                            J$.M(6831985, J$.M(6831953, J$.I(typeof Object === 'undefined' ? Object = J$.R(6831929, 'Object', undefined, true, true) : Object = J$.R(6831929, 'Object', Object, true, true)), 'keys', false)(J$.G(6831945, J$.R(6831937, 'state', state, false, false), 'jobs')), 'forEach', false)(J$.M(6831977, J$.R(6831961, 'clean', clean, false, true), 'bind', false)(J$.R(6831969, 'state', state, false, false)));
                            J$.P(6832009, J$.R(6831993, 'state', state, false, false), 'jobs', J$.T(6832001, {}, 11, false));
                        } catch (J$e) {
                            J$.Ex(6832177, J$e);
                        } finally {
                            if (J$.Fr(6832185))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function clean(key) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(6832113, arguments.callee, this, arguments);
                            arguments = J$.N(6832121, 'arguments', arguments, true, false, false);
                            key = J$.N(6832129, 'key', key, true, false, false);
                            if (J$.C(370296, J$.B(699778, '==', J$.U(699770, 'typeof', J$.G(6832065, J$.G(6832049, J$.R(6832041, 'this', this, false, false), 'jobs'), J$.R(6832057, 'key', key, false, false))), J$.T(6832073, 'function', 21, false)))) {
                                J$.M(6832105, J$.G(6832089, J$.R(6832081, 'this', this, false, false), 'jobs'), J$.R(6832097, 'key', key, false, false), false)();
                            }
                        } catch (J$e) {
                            J$.Ex(6832193, J$e);
                        } finally {
                            if (J$.Fr(6832201))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            abort = J$.N(6832153, 'abort', J$.T(6832145, abort, 12, false), true, false, false);
            clean = J$.N(6832169, 'clean', J$.T(6832161, clean, 12, false), true, false, false);
            J$.P(6831921, J$.I(typeof module === 'undefined' ? module = J$.R(6831905, 'module', undefined, true, true) : module = J$.R(6831905, 'module', module, true, true)), 'exports', J$.R(6831913, 'abort', abort, false, true));
        } catch (J$e) {
            J$.Ex(6832209, J$e);
        } finally {
            if (J$.Sr(6832217))
                continue jalangiLabel2;
            else
                break jalangiLabel2;
        }
    }
// JALANGI DO NOT INSTRUMENT

