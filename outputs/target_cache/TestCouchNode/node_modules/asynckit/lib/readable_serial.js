J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(6835481, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestCouchNode/node_modules/asynckit/lib/readable_serial.js');
            function ReadableSerial(list, iterator, callback) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(6835441, arguments.callee, this, arguments);
                            arguments = J$.N(6835449, 'arguments', arguments, true, false, false);
                            list = J$.N(6835457, 'list', list, true, false, false);
                            iterator = J$.N(6835465, 'iterator', iterator, true, false, false);
                            callback = J$.N(6835473, 'callback', callback, true, false, false);
                            if (J$.C(370416, J$.U(699930, '!', J$.B(699922, 'instanceof', J$.R(6835281, 'this', this, false, false), J$.R(6835289, 'ReadableSerial', ReadableSerial, false, true))))) {
                                return J$.Rt(6835337, J$.F(6835329, J$.R(6835297, 'ReadableSerial', ReadableSerial, false, true), true)(J$.R(6835305, 'list', list, false, false), J$.R(6835313, 'iterator', iterator, false, false), J$.R(6835321, 'callback', callback, false, false)));
                            }
                            J$.M(6835385, J$.G(6835353, J$.R(6835345, 'ReadableSerial', ReadableSerial, false, true), 'super_'), 'call', false)(J$.R(6835361, 'this', this, false, false), J$.T(6835377, { objectMode: J$.T(6835369, true, 23, false) }, 11, false));
                            J$.M(6835433, J$.R(6835393, 'this', this, false, false), '_start', false)(J$.R(6835401, 'serial', serial, false, true), J$.R(6835409, 'list', list, false, false), J$.R(6835417, 'iterator', iterator, false, false), J$.R(6835425, 'callback', callback, false, false));
                        } catch (J$e) {
                            J$.Ex(6835513, J$e);
                        } finally {
                            if (J$.Fr(6835521))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(6835489, 'serial', serial, false, false, false);
            ReadableSerial = J$.N(6835505, 'ReadableSerial', J$.T(6835497, ReadableSerial, 12, false), true, false, false);
            var serial = J$.W(6835249, 'serial', J$.F(6835241, J$.I(typeof require === 'undefined' ? require = J$.R(6835225, 'require', undefined, true, true) : require = J$.R(6835225, 'require', require, true, true)), false)(J$.T(6835233, '../serial.js', 21, false)), serial, false, true);
            J$.P(6835273, J$.I(typeof module === 'undefined' ? module = J$.R(6835257, 'module', undefined, true, true) : module = J$.R(6835257, 'module', module, true, true)), 'exports', J$.R(6835265, 'ReadableSerial', ReadableSerial, false, true));
        } catch (J$e) {
            J$.Ex(6835529, J$e);
        } finally {
            if (J$.Sr(6835537))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

