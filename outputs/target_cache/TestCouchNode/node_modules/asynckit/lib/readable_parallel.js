J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(6835161, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestCouchNode/node_modules/asynckit/lib/readable_parallel.js');
            function ReadableParallel(list, iterator, callback) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(6835121, arguments.callee, this, arguments);
                            arguments = J$.N(6835129, 'arguments', arguments, true, false, false);
                            list = J$.N(6835137, 'list', list, true, false, false);
                            iterator = J$.N(6835145, 'iterator', iterator, true, false, false);
                            callback = J$.N(6835153, 'callback', callback, true, false, false);
                            if (J$.C(370408, J$.U(699914, '!', J$.B(699906, 'instanceof', J$.R(6834961, 'this', this, false, false), J$.R(6834969, 'ReadableParallel', ReadableParallel, false, true))))) {
                                return J$.Rt(6835017, J$.F(6835009, J$.R(6834977, 'ReadableParallel', ReadableParallel, false, true), true)(J$.R(6834985, 'list', list, false, false), J$.R(6834993, 'iterator', iterator, false, false), J$.R(6835001, 'callback', callback, false, false)));
                            }
                            J$.M(6835065, J$.G(6835033, J$.R(6835025, 'ReadableParallel', ReadableParallel, false, true), 'super_'), 'call', false)(J$.R(6835041, 'this', this, false, false), J$.T(6835057, { objectMode: J$.T(6835049, true, 23, false) }, 11, false));
                            J$.M(6835113, J$.R(6835073, 'this', this, false, false), '_start', false)(J$.R(6835081, 'parallel', parallel, false, true), J$.R(6835089, 'list', list, false, false), J$.R(6835097, 'iterator', iterator, false, false), J$.R(6835105, 'callback', callback, false, false));
                        } catch (J$e) {
                            J$.Ex(6835193, J$e);
                        } finally {
                            if (J$.Fr(6835201))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(6835169, 'parallel', parallel, false, false, false);
            ReadableParallel = J$.N(6835185, 'ReadableParallel', J$.T(6835177, ReadableParallel, 12, false), true, false, false);
            var parallel = J$.W(6834929, 'parallel', J$.F(6834921, J$.I(typeof require === 'undefined' ? require = J$.R(6834905, 'require', undefined, true, true) : require = J$.R(6834905, 'require', require, true, true)), false)(J$.T(6834913, '../parallel.js', 21, false)), parallel, false, true);
            J$.P(6834953, J$.I(typeof module === 'undefined' ? module = J$.R(6834937, 'module', undefined, true, true) : module = J$.R(6834937, 'module', module, true, true)), 'exports', J$.R(6834945, 'ReadableParallel', ReadableParallel, false, true));
        } catch (J$e) {
            J$.Ex(6835209, J$e);
        } finally {
            if (J$.Sr(6835217))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

