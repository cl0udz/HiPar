J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(6835905, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestCouchNode/node_modules/asynckit/lib/readable_serial_ordered.js');
            function ReadableSerialOrdered(list, iterator, sortMethod, callback) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(6835857, arguments.callee, this, arguments);
                            arguments = J$.N(6835865, 'arguments', arguments, true, false, false);
                            list = J$.N(6835873, 'list', list, true, false, false);
                            iterator = J$.N(6835881, 'iterator', iterator, true, false, false);
                            sortMethod = J$.N(6835889, 'sortMethod', sortMethod, true, false, false);
                            callback = J$.N(6835897, 'callback', callback, true, false, false);
                            if (J$.C(370424, J$.U(699946, '!', J$.B(699938, 'instanceof', J$.R(6835681, 'this', this, false, false), J$.R(6835689, 'ReadableSerialOrdered', ReadableSerialOrdered, false, true))))) {
                                return J$.Rt(6835745, J$.F(6835737, J$.R(6835697, 'ReadableSerialOrdered', ReadableSerialOrdered, false, true), true)(J$.R(6835705, 'list', list, false, false), J$.R(6835713, 'iterator', iterator, false, false), J$.R(6835721, 'sortMethod', sortMethod, false, false), J$.R(6835729, 'callback', callback, false, false)));
                            }
                            J$.M(6835793, J$.G(6835761, J$.R(6835753, 'ReadableSerialOrdered', ReadableSerialOrdered, false, true), 'super_'), 'call', false)(J$.R(6835769, 'this', this, false, false), J$.T(6835785, { objectMode: J$.T(6835777, true, 23, false) }, 11, false));
                            J$.M(6835849, J$.R(6835801, 'this', this, false, false), '_start', false)(J$.R(6835809, 'serialOrdered', serialOrdered, false, true), J$.R(6835817, 'list', list, false, false), J$.R(6835825, 'iterator', iterator, false, false), J$.R(6835833, 'sortMethod', sortMethod, false, false), J$.R(6835841, 'callback', callback, false, false));
                        } catch (J$e) {
                            J$.Ex(6835937, J$e);
                        } finally {
                            if (J$.Fr(6835945))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(6835913, 'serialOrdered', serialOrdered, false, false, false);
            ReadableSerialOrdered = J$.N(6835929, 'ReadableSerialOrdered', J$.T(6835921, ReadableSerialOrdered, 12, false), true, false, false);
            var serialOrdered = J$.W(6835569, 'serialOrdered', J$.F(6835561, J$.I(typeof require === 'undefined' ? require = J$.R(6835545, 'require', undefined, true, true) : require = J$.R(6835545, 'require', require, true, true)), false)(J$.T(6835553, '../serialOrdered.js', 21, false)), serialOrdered, false, true);
            J$.P(6835593, J$.I(typeof module === 'undefined' ? module = J$.R(6835577, 'module', undefined, true, true) : module = J$.R(6835577, 'module', module, true, true)), 'exports', J$.R(6835585, 'ReadableSerialOrdered', ReadableSerialOrdered, false, true));
            J$.P(6835633, J$.G(6835609, J$.I(typeof module === 'undefined' ? module = J$.R(6835601, 'module', undefined, true, true) : module = J$.R(6835601, 'module', module, true, true)), 'exports'), 'ascending', J$.G(6835625, J$.R(6835617, 'serialOrdered', serialOrdered, false, true), 'ascending'));
            J$.P(6835673, J$.G(6835649, J$.I(typeof module === 'undefined' ? module = J$.R(6835641, 'module', undefined, true, true) : module = J$.R(6835641, 'module', module, true, true)), 'exports'), 'descending', J$.G(6835665, J$.R(6835657, 'serialOrdered', serialOrdered, false, true), 'descending'));
        } catch (J$e) {
            J$.Ex(6835953, J$e);
        } finally {
            if (J$.Sr(6835961))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

