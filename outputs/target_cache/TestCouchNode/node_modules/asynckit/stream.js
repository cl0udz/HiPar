J$.noInstrEval = false;
jalangiLabel0:
    while (true) {
        try {
            J$.Se(6840481, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestCouchNode/node_modules/asynckit/stream.js');
            J$.N(6840489, 'inherits', inherits, false, false, false);
            J$.N(6840497, 'Readable', Readable, false, false, false);
            J$.N(6840505, 'ReadableAsyncKit', ReadableAsyncKit, false, false, false);
            J$.N(6840513, 'ReadableParallel', ReadableParallel, false, false, false);
            J$.N(6840521, 'ReadableSerial', ReadableSerial, false, false, false);
            J$.N(6840529, 'ReadableSerialOrdered', ReadableSerialOrdered, false, false, false);
            var inherits = J$.W(6840257, 'inherits', J$.G(6840121, J$.F(6840113, J$.I(typeof require === 'undefined' ? require = J$.R(6840097, 'require', undefined, true, true) : require = J$.R(6840097, 'require', require, true, true)), false)(J$.T(6840105, 'util', 21, false)), 'inherits'), inherits, false, true), Readable = J$.W(6840265, 'Readable', J$.G(6840153, J$.F(6840145, J$.I(typeof require === 'undefined' ? require = J$.R(6840129, 'require', undefined, true, true) : require = J$.R(6840129, 'require', require, true, true)), false)(J$.T(6840137, 'stream', 21, false)), 'Readable'), Readable, false, true), ReadableAsyncKit = J$.W(6840273, 'ReadableAsyncKit', J$.F(6840177, J$.I(typeof require === 'undefined' ? require = J$.R(6840161, 'require', undefined, true, true) : require = J$.R(6840161, 'require', require, true, true)), false)(J$.T(6840169, './lib/readable_asynckit.js', 21, false)), ReadableAsyncKit, false, true), ReadableParallel = J$.W(6840281, 'ReadableParallel', J$.F(6840201, J$.I(typeof require === 'undefined' ? require = J$.R(6840185, 'require', undefined, true, true) : require = J$.R(6840185, 'require', require, true, true)), false)(J$.T(6840193, './lib/readable_parallel.js', 21, false)), ReadableParallel, false, true), ReadableSerial = J$.W(6840289, 'ReadableSerial', J$.F(6840225, J$.I(typeof require === 'undefined' ? require = J$.R(6840209, 'require', undefined, true, true) : require = J$.R(6840209, 'require', require, true, true)), false)(J$.T(6840217, './lib/readable_serial.js', 21, false)), ReadableSerial, false, true), ReadableSerialOrdered = J$.W(6840297, 'ReadableSerialOrdered', J$.F(6840249, J$.I(typeof require === 'undefined' ? require = J$.R(6840233, 'require', undefined, true, true) : require = J$.R(6840233, 'require', require, true, true)), false)(J$.T(6840241, './lib/readable_serial_ordered.js', 21, false)), ReadableSerialOrdered, false, true);
            J$.P(6840345, J$.I(typeof module === 'undefined' ? module = J$.R(6840305, 'module', undefined, true, true) : module = J$.R(6840305, 'module', module, true, true)), 'exports', J$.T(6840337, {
                parallel: J$.R(6840313, 'ReadableParallel', ReadableParallel, false, true),
                serial: J$.R(6840321, 'ReadableSerial', ReadableSerial, false, true),
                serialOrdered: J$.R(6840329, 'ReadableSerialOrdered', ReadableSerialOrdered, false, true)
            }, 11, false));
            J$.F(6840377, J$.R(6840353, 'inherits', inherits, false, true), false)(J$.R(6840361, 'ReadableAsyncKit', ReadableAsyncKit, false, true), J$.R(6840369, 'Readable', Readable, false, true));
            J$.F(6840409, J$.R(6840385, 'inherits', inherits, false, true), false)(J$.R(6840393, 'ReadableParallel', ReadableParallel, false, true), J$.R(6840401, 'ReadableAsyncKit', ReadableAsyncKit, false, true));
            J$.F(6840441, J$.R(6840417, 'inherits', inherits, false, true), false)(J$.R(6840425, 'ReadableSerial', ReadableSerial, false, true), J$.R(6840433, 'ReadableAsyncKit', ReadableAsyncKit, false, true));
            J$.F(6840473, J$.R(6840449, 'inherits', inherits, false, true), false)(J$.R(6840457, 'ReadableSerialOrdered', ReadableSerialOrdered, false, true), J$.R(6840465, 'ReadableAsyncKit', ReadableAsyncKit, false, true));
        } catch (J$e) {
            J$.Ex(6840537, J$e);
        } finally {
            if (J$.Sr(6840545))
                continue jalangiLabel0;
            else
                break jalangiLabel0;
        }
    }
// JALANGI DO NOT INSTRUMENT

