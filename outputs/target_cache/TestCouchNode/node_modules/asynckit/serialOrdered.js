J$.noInstrEval = false;
jalangiLabel4:
    while (true) {
        try {
            J$.Se(6839937, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestCouchNode/node_modules/asynckit/serialOrdered.js');
            function serialOrdered(list, iterator, sortMethod, callback) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(6839705, arguments.callee, this, arguments);
                            arguments = J$.N(6839713, 'arguments', arguments, true, false, false);
                            list = J$.N(6839721, 'list', list, true, false, false);
                            iterator = J$.N(6839729, 'iterator', iterator, true, false, false);
                            sortMethod = J$.N(6839737, 'sortMethod', sortMethod, true, false, false);
                            callback = J$.N(6839745, 'callback', callback, true, false, false);
                            J$.N(6839753, 'state', state, false, false, false);
                            var state = J$.W(6839361, 'state', J$.F(6839353, J$.R(6839329, 'initState', initState, false, true), false)(J$.R(6839337, 'list', list, false, false), J$.R(6839345, 'sortMethod', sortMethod, false, false)), state, false, false);
                            J$.F(6839657, J$.R(6839369, 'iterate', iterate, false, true), false)(J$.R(6839377, 'list', list, false, false), J$.R(6839385, 'iterator', iterator, false, false), J$.R(6839393, 'state', state, false, false), J$.T(6839649, function iteratorHandler(error, result) {
                                jalangiLabel0:
                                    while (true) {
                                        try {
                                            J$.Fe(6839617, arguments.callee, this, arguments);
                                            arguments = J$.N(6839625, 'arguments', arguments, true, false, false);
                                            error = J$.N(6839633, 'error', error, true, false, false);
                                            result = J$.N(6839641, 'result', result, true, false, false);
                                            if (J$.C(370576, J$.R(6839401, 'error', error, false, false))) {
                                                J$.F(6839433, J$.R(6839409, 'callback', callback, false, false), false)(J$.R(6839417, 'error', error, false, false), J$.R(6839425, 'result', result, false, false));
                                                return J$.Rt(6839441, undefined);
                                            }
                                            J$.B(700042, '-', J$.A(6839457, J$.R(6839449, 'state', state, false, false), 'index', '+')(1), 1);
                                            if (J$.C(370592, J$.B(700050, '<', J$.G(6839473, J$.R(6839465, 'state', state, false, false), 'index'), J$.G(6839513, J$.C(370584, J$.G(6839497, J$.R(6839481, 'state', state, false, false), J$.T(6839489, 'keyedList', 21, false))) ? J$._() : J$.R(6839505, 'list', list, false, false), 'length')))) {
                                                J$.F(6839561, J$.R(6839521, 'iterate', iterate, false, true), false)(J$.R(6839529, 'list', list, false, false), J$.R(6839537, 'iterator', iterator, false, false), J$.R(6839545, 'state', state, false, false), J$.R(6839553, 'iteratorHandler', iteratorHandler, false, false));
                                                return J$.Rt(6839569, undefined);
                                            }
                                            J$.F(6839609, J$.R(6839577, 'callback', callback, false, false), false)(J$.T(6839585, null, 25, false), J$.G(6839601, J$.R(6839593, 'state', state, false, false), 'results'));
                                        } catch (J$e) {
                                            J$.Ex(6840017, J$e);
                                        } finally {
                                            if (J$.Fr(6840025))
                                                continue jalangiLabel0;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            return J$.Rt(6839697, J$.M(6839689, J$.R(6839665, 'terminator', terminator, false, true), 'bind', false)(J$.R(6839673, 'state', state, false, false), J$.R(6839681, 'callback', callback, false, false)));
                        } catch (J$e) {
                            J$.Ex(6840033, J$e);
                        } finally {
                            if (J$.Fr(6840041))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function ascending(a, b) {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(6839825, arguments.callee, this, arguments);
                            arguments = J$.N(6839833, 'arguments', arguments, true, false, false);
                            a = J$.N(6839841, 'a', a, true, false, false);
                            b = J$.N(6839849, 'b', b, true, false, false);
                            return J$.Rt(6839817, J$.C(370608, J$.B(700058, '<', J$.R(6839761, 'a', a, false, false), J$.R(6839769, 'b', b, false, false))) ? J$.U(700066, '-', J$.T(6839777, 1, 22, false)) : J$.C(370600, J$.B(700074, '>', J$.R(6839785, 'a', a, false, false), J$.R(6839793, 'b', b, false, false))) ? J$.T(6839801, 1, 22, false) : J$.T(6839809, 0, 22, false));
                        } catch (J$e) {
                            J$.Ex(6840049, J$e);
                        } finally {
                            if (J$.Fr(6840057))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function descending(a, b) {
                jalangiLabel3:
                    while (true) {
                        try {
                            J$.Fe(6839905, arguments.callee, this, arguments);
                            arguments = J$.N(6839913, 'arguments', arguments, true, false, false);
                            a = J$.N(6839921, 'a', a, true, false, false);
                            b = J$.N(6839929, 'b', b, true, false, false);
                            return J$.Rt(6839897, J$.B(700090, '*', J$.U(700082, '-', J$.T(6839857, 1, 22, false)), J$.F(6839889, J$.R(6839865, 'ascending', ascending, false, true), false)(J$.R(6839873, 'a', a, false, false), J$.R(6839881, 'b', b, false, false))));
                        } catch (J$e) {
                            J$.Ex(6840065, J$e);
                        } finally {
                            if (J$.Fr(6840073))
                                continue jalangiLabel3;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(6839945, 'iterate', iterate, false, false, false);
            J$.N(6839953, 'initState', initState, false, false, false);
            J$.N(6839961, 'terminator', terminator, false, false, false);
            serialOrdered = J$.N(6839977, 'serialOrdered', J$.T(6839969, serialOrdered, 12, false), true, false, false);
            ascending = J$.N(6839993, 'ascending', J$.T(6839985, ascending, 12, false), true, false, false);
            descending = J$.N(6840009, 'descending', J$.T(6840001, descending, 12, false), true, false, false);
            var iterate = J$.W(6839217, 'iterate', J$.F(6839161, J$.I(typeof require === 'undefined' ? require = J$.R(6839145, 'require', undefined, true, true) : require = J$.R(6839145, 'require', require, true, true)), false)(J$.T(6839153, './lib/iterate.js', 21, false)), iterate, false, true), initState = J$.W(6839225, 'initState', J$.F(6839185, J$.I(typeof require === 'undefined' ? require = J$.R(6839169, 'require', undefined, true, true) : require = J$.R(6839169, 'require', require, true, true)), false)(J$.T(6839177, './lib/state.js', 21, false)), initState, false, true), terminator = J$.W(6839233, 'terminator', J$.F(6839209, J$.I(typeof require === 'undefined' ? require = J$.R(6839193, 'require', undefined, true, true) : require = J$.R(6839193, 'require', require, true, true)), false)(J$.T(6839201, './lib/terminator.js', 21, false)), terminator, false, true);
            J$.P(6839257, J$.I(typeof module === 'undefined' ? module = J$.R(6839241, 'module', undefined, true, true) : module = J$.R(6839241, 'module', module, true, true)), 'exports', J$.R(6839249, 'serialOrdered', serialOrdered, false, true));
            J$.P(6839289, J$.G(6839273, J$.I(typeof module === 'undefined' ? module = J$.R(6839265, 'module', undefined, true, true) : module = J$.R(6839265, 'module', module, true, true)), 'exports'), 'ascending', J$.R(6839281, 'ascending', ascending, false, true));
            J$.P(6839321, J$.G(6839305, J$.I(typeof module === 'undefined' ? module = J$.R(6839297, 'module', undefined, true, true) : module = J$.R(6839297, 'module', module, true, true)), 'exports'), 'descending', J$.R(6839313, 'descending', descending, false, true));
        } catch (J$e) {
            J$.Ex(6840081, J$e);
        } finally {
            if (J$.Sr(6840089))
                continue jalangiLabel4;
            else
                break jalangiLabel4;
        }
    }
// JALANGI DO NOT INSTRUMENT

