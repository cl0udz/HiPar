J$.noInstrEval = false;
jalangiLabel8:
    while (true) {
        try {
            J$.Se(7324665, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestCouchNode/node_modules/diagnostics/test.js');
            J$.F(7324657, J$.I(typeof describe === 'undefined' ? describe = J$.R(7323577, 'describe', undefined, true, true) : describe = J$.R(7323577, 'describe', describe, true, true)), false)(J$.T(7323585, 'diagnostics', 21, false), J$.T(7324649, function () {
                jalangiLabel7:
                    while (true) {
                        try {
                            J$.Fe(7324617, arguments.callee, this, arguments);
                            arguments = J$.N(7324625, 'arguments', arguments, true, false, false);
                            J$.N(7324633, 'assume', assume, false, false, false);
                            J$.N(7324641, 'debug', debug, false, false, false);
                            J$.T(7323593, 'use strict', 21, false);
                            var assume = J$.W(7323649, 'assume', J$.F(7323617, J$.I(typeof require === 'undefined' ? require = J$.R(7323601, 'require', undefined, true, true) : require = J$.R(7323601, 'require', require, true, true)), false)(J$.T(7323609, 'assume', 21, false)), assume, false, false), debug = J$.W(7323657, 'debug', J$.F(7323641, J$.I(typeof require === 'undefined' ? require = J$.R(7323625, 'require', undefined, true, true) : require = J$.R(7323625, 'require', require, true, true)), false)(J$.T(7323633, './', 21, false)), debug, false, false);
                            J$.F(7323761, J$.I(typeof beforeEach === 'undefined' ? beforeEach = J$.R(7323665, 'beforeEach', undefined, true, true) : beforeEach = J$.R(7323665, 'beforeEach', beforeEach, true, true)), false)(J$.T(7323753, function () {
                                jalangiLabel0:
                                    while (true) {
                                        try {
                                            J$.Fe(7323737, arguments.callee, this, arguments);
                                            arguments = J$.N(7323745, 'arguments', arguments, true, false, false);
                                            J$.P(7323697, J$.G(7323681, J$.I(typeof process === 'undefined' ? process = J$.R(7323673, 'process', undefined, true, true) : process = J$.R(7323673, 'process', process, true, true)), 'env'), 'DEBUG', J$.T(7323689, '', 21, false));
                                            J$.P(7323729, J$.G(7323713, J$.I(typeof process === 'undefined' ? process = J$.R(7323705, 'process', undefined, true, true) : process = J$.R(7323705, 'process', process, true, true)), 'env'), 'DIAGNOSTICS', J$.T(7323721, '', 21, false));
                                        } catch (J$e) {
                                            J$.Ex(7324673, J$e);
                                        } finally {
                                            if (J$.Fr(7324681))
                                                continue jalangiLabel0;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            J$.F(7323865, J$.I(typeof it === 'undefined' ? it = J$.R(7323769, 'it', undefined, true, true) : it = J$.R(7323769, 'it', it, true, true)), false)(J$.T(7323777, 'is exposed as function', 21, false), J$.T(7323857, function () {
                                jalangiLabel1:
                                    while (true) {
                                        try {
                                            J$.Fe(7323841, arguments.callee, this, arguments);
                                            arguments = J$.N(7323849, 'arguments', arguments, true, false, false);
                                            J$.M(7323833, J$.G(7323817, J$.G(7323809, J$.F(7323801, J$.R(7323785, 'assume', assume, false, false), false)(J$.R(7323793, 'debug', debug, false, false)), 'to'), 'be'), 'a', false)(J$.T(7323825, 'function', 21, false));
                                        } catch (J$e) {
                                            J$.Ex(7324689, J$e);
                                        } finally {
                                            if (J$.Fr(7324697))
                                                continue jalangiLabel1;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            J$.F(7324209, J$.I(typeof it === 'undefined' ? it = J$.R(7323873, 'it', undefined, true, true) : it = J$.R(7323873, 'it', it, true, true)), false)(J$.T(7323881, 'stringifies objects', 21, false), J$.T(7324201, function (next) {
                                jalangiLabel3:
                                    while (true) {
                                        try {
                                            J$.Fe(7324177, arguments.callee, this, arguments);
                                            arguments = J$.N(7324185, 'arguments', arguments, true, false, false);
                                            next = J$.N(7324193, 'next', next, true, false, false);
                                            J$.P(7323913, J$.G(7323897, J$.I(typeof process === 'undefined' ? process = J$.R(7323889, 'process', undefined, true, true) : process = J$.R(7323889, 'process', process, true, true)), 'env'), 'DEBUG', J$.T(7323905, 'test', 21, false));
                                            J$.M(7324113, J$.R(7323921, 'debug', debug, false, false), 'to', false)(J$.T(7324105, {
                                                write: J$.T(7324097, function write(line) {
                                                    jalangiLabel2:
                                                        while (true) {
                                                            try {
                                                                J$.Fe(7324073, arguments.callee, this, arguments);
                                                                arguments = J$.N(7324081, 'arguments', arguments, true, false, false);
                                                                line = J$.N(7324089, 'line', line, true, false, false);
                                                                J$.M(7323969, J$.G(7323953, J$.F(7323945, J$.R(7323929, 'assume', assume, false, false), false)(J$.R(7323937, 'line', line, false, false)), 'to'), 'contain', false)(J$.T(7323961, 'test', 21, false));
                                                                J$.M(7324017, J$.G(7324001, J$.F(7323993, J$.R(7323977, 'assume', assume, false, false), false)(J$.R(7323985, 'line', line, false, false)), 'to'), 'contain', false)(J$.T(7324009, 'I will be readable { json: 1 }', 21, false));
                                                                J$.M(7324049, J$.R(7324025, 'debug', debug, false, false), 'to', false)(J$.G(7324041, J$.I(typeof process === 'undefined' ? process = J$.R(7324033, 'process', undefined, true, true) : process = J$.R(7324033, 'process', process, true, true)), 'stdout'));
                                                                J$.F(7324065, J$.R(7324057, 'next', next, false, false), false)();
                                                            } catch (J$e) {
                                                                J$.Ex(7324705, J$e);
                                                            } finally {
                                                                if (J$.Fr(7324713))
                                                                    continue jalangiLabel2;
                                                                else
                                                                    return J$.Ra();
                                                            }
                                                        }
                                                }, 12, false)
                                            }, 11, false));
                                            J$.F(7324169, J$.F(7324137, J$.R(7324121, 'debug', debug, false, false), false)(J$.T(7324129, 'test', 21, false)), false)(J$.T(7324145, 'I will be readable', 21, false), J$.T(7324161, { json: J$.T(7324153, 1, 22, false) }, 11, false));
                                        } catch (J$e) {
                                            J$.Ex(7324721, J$e);
                                        } finally {
                                            if (J$.Fr(7324729))
                                                continue jalangiLabel3;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            J$.F(7324609, J$.I(typeof describe === 'undefined' ? describe = J$.R(7324217, 'describe', undefined, true, true) : describe = J$.R(7324217, 'describe', describe, true, true)), false)(J$.T(7324225, '.to', 21, false), J$.T(7324601, function () {
                                jalangiLabel6:
                                    while (true) {
                                        try {
                                            J$.Fe(7324585, arguments.callee, this, arguments);
                                            arguments = J$.N(7324593, 'arguments', arguments, true, false, false);
                                            J$.F(7324577, J$.I(typeof it === 'undefined' ? it = J$.R(7324233, 'it', undefined, true, true) : it = J$.R(7324233, 'it', it, true, true)), false)(J$.T(7324241, 'globally overrides the stream', 21, false), J$.T(7324569, function (next) {
                                                jalangiLabel5:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(7324537, arguments.callee, this, arguments);
                                                            arguments = J$.N(7324545, 'arguments', arguments, true, false, false);
                                                            next = J$.N(7324553, 'next', next, true, false, false);
                                                            J$.N(7324561, 'log', log, false, false, false);
                                                            J$.P(7324273, J$.G(7324257, J$.I(typeof process === 'undefined' ? process = J$.R(7324249, 'process', undefined, true, true) : process = J$.R(7324249, 'process', process, true, true)), 'env'), 'DEBUG', J$.T(7324265, 'foo', 21, false));
                                                            J$.M(7324473, J$.R(7324281, 'debug', debug, false, false), 'to', false)(J$.T(7324465, {
                                                                write: J$.T(7324457, function write(line) {
                                                                    jalangiLabel4:
                                                                        while (true) {
                                                                            try {
                                                                                J$.Fe(7324433, arguments.callee, this, arguments);
                                                                                arguments = J$.N(7324441, 'arguments', arguments, true, false, false);
                                                                                line = J$.N(7324449, 'line', line, true, false, false);
                                                                                J$.M(7324329, J$.G(7324313, J$.F(7324305, J$.R(7324289, 'assume', assume, false, false), false)(J$.R(7324297, 'line', line, false, false)), 'to'), 'contain', false)(J$.T(7324321, 'foo', 21, false));
                                                                                J$.M(7324377, J$.G(7324361, J$.F(7324353, J$.R(7324337, 'assume', assume, false, false), false)(J$.R(7324345, 'line', line, false, false)), 'to'), 'contain', false)(J$.T(7324369, 'bar', 21, false));
                                                                                J$.M(7324409, J$.R(7324385, 'debug', debug, false, false), 'to', false)(J$.G(7324401, J$.I(typeof process === 'undefined' ? process = J$.R(7324393, 'process', undefined, true, true) : process = J$.R(7324393, 'process', process, true, true)), 'stdout'));
                                                                                J$.F(7324425, J$.R(7324417, 'next', next, false, false), false)();
                                                                            } catch (J$e) {
                                                                                J$.Ex(7324737, J$e);
                                                                            } finally {
                                                                                if (J$.Fr(7324745))
                                                                                    continue jalangiLabel4;
                                                                                else
                                                                                    return J$.Ra();
                                                                            }
                                                                        }
                                                                }, 12, false)
                                                            }, 11, false));
                                                            var log = J$.W(7324505, 'log', J$.F(7324497, J$.R(7324481, 'debug', debug, false, false), false)(J$.T(7324489, 'foo', 21, false)), log, false, false);
                                                            J$.F(7324529, J$.R(7324513, 'log', log, false, false), false)(J$.T(7324521, 'bar', 21, false));
                                                        } catch (J$e) {
                                                            J$.Ex(7324753, J$e);
                                                        } finally {
                                                            if (J$.Fr(7324761))
                                                                continue jalangiLabel5;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false));
                                        } catch (J$e) {
                                            J$.Ex(7324769, J$e);
                                        } finally {
                                            if (J$.Fr(7324777))
                                                continue jalangiLabel6;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                        } catch (J$e) {
                            J$.Ex(7324785, J$e);
                        } finally {
                            if (J$.Fr(7324793))
                                continue jalangiLabel7;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
        } catch (J$e) {
            J$.Ex(7324801, J$e);
        } finally {
            if (J$.Sr(7324809))
                continue jalangiLabel8;
            else
                break jalangiLabel8;
        }
    }
// JALANGI DO NOT INSTRUMENT

