J$.noInstrEval = false;
jalangiLabel9:
    while (true) {
        try {
            J$.Se(4927881, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestCouchNode/node_modules/request/lib/multipart.js');
            function Multipart(request) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(4925801, arguments.callee, this, arguments);
                            arguments = J$.N(4925809, 'arguments', arguments, true, false, false);
                            request = J$.N(4925817, 'request', request, true, false, false);
                            J$.P(4925713, J$.R(4925697, 'this', this, false, false), 'request', J$.R(4925705, 'request', request, false, false));
                            J$.P(4925745, J$.R(4925721, 'this', this, false, false), 'boundary', J$.F(4925737, J$.R(4925729, 'uuid', uuid, false, true), false)());
                            J$.P(4925769, J$.R(4925753, 'this', this, false, false), 'chunked', J$.T(4925761, false, 23, false));
                            J$.P(4925793, J$.R(4925777, 'this', this, false, false), 'body', J$.T(4925785, null, 25, false));
                        } catch (J$e) {
                            J$.Ex(4927937, J$e);
                        } finally {
                            if (J$.Fr(4927945))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(4927889, 'uuid', uuid, false, false, false);
            J$.N(4927897, 'CombinedStream', CombinedStream, false, false, false);
            J$.N(4927905, 'isstream', isstream, false, false, false);
            J$.N(4927913, 'Buffer', Buffer, false, false, false);
            Multipart = J$.N(4927929, 'Multipart', J$.T(4927921, Multipart, 12, false), true, false, false);
            J$.T(4925553, 'use strict', 21, false);
            var uuid = J$.W(4925585, 'uuid', J$.F(4925577, J$.I(typeof require === 'undefined' ? require = J$.R(4925561, 'require', undefined, true, true) : require = J$.R(4925561, 'require', require, true, true)), false)(J$.T(4925569, 'uuid/v4', 21, false)), uuid, false, true);
            var CombinedStream = J$.W(4925617, 'CombinedStream', J$.F(4925609, J$.I(typeof require === 'undefined' ? require = J$.R(4925593, 'require', undefined, true, true) : require = J$.R(4925593, 'require', require, true, true)), false)(J$.T(4925601, 'combined-stream', 21, false)), CombinedStream, false, true);
            var isstream = J$.W(4925649, 'isstream', J$.F(4925641, J$.I(typeof require === 'undefined' ? require = J$.R(4925625, 'require', undefined, true, true) : require = J$.R(4925625, 'require', require, true, true)), false)(J$.T(4925633, 'isstream', 21, false)), isstream, false, true);
            var Buffer = J$.W(4925689, 'Buffer', J$.G(4925681, J$.F(4925673, J$.I(typeof require === 'undefined' ? require = J$.R(4925657, 'require', undefined, true, true) : require = J$.R(4925657, 'require', require, true, true)), false)(J$.T(4925665, 'safe-buffer', 21, false)), 'Buffer'), Buffer, false, true);
            J$.P(4926337, J$.G(4925833, J$.R(4925825, 'Multipart', Multipart, false, true), 'prototype'), 'isChunked', J$.T(4926329, function (options) {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(4926281, arguments.callee, this, arguments);
                            arguments = J$.N(4926289, 'arguments', arguments, true, false, false);
                            options = J$.N(4926297, 'options', options, true, false, false);
                            J$.N(4926305, 'self', self, false, false, false);
                            J$.N(4926313, 'chunked', chunked, false, false, false);
                            J$.N(4926321, 'parts', parts, false, false, false);
                            var self = J$.W(4925849, 'self', J$.R(4925841, 'this', this, false, false), self, false, false);
                            var chunked = J$.W(4925865, 'chunked', J$.T(4925857, false, 23, false), chunked, false, false);
                            var parts = J$.W(4925897, 'parts', J$.C(264160, J$.G(4925881, J$.R(4925873, 'options', options, false, false), 'data')) ? J$._() : J$.R(4925889, 'options', options, false, false), parts, false, false);
                            if (J$.C(264168, J$.U(573378, '!', J$.G(4925913, J$.R(4925905, 'parts', parts, false, false), 'forEach')))) {
                                J$.M(4925969, J$.G(4925929, J$.R(4925921, 'self', self, false, false), 'request'), 'emit', false)(J$.T(4925937, 'error', 21, false), J$.F(4925961, J$.I(typeof Error === 'undefined' ? Error = J$.R(4925945, 'Error', undefined, true, true) : Error = J$.R(4925945, 'Error', Error, true, true)), true)(J$.T(4925953, 'Argument error, options.multipart.', 21, false)));
                            }
                            if (J$.C(264176, J$.B(573386, '!==', J$.G(4925985, J$.R(4925977, 'options', options, false, false), 'chunked'), J$.T(4925993, undefined, 24, false)))) {
                                chunked = J$.W(4926017, 'chunked', J$.G(4926009, J$.R(4926001, 'options', options, false, false), 'chunked'), chunked, false, false);
                            }
                            if (J$.C(264184, J$.B(573394, '===', J$.M(4926049, J$.G(4926033, J$.R(4926025, 'self', self, false, false), 'request'), 'getHeader', false)(J$.T(4926041, 'transfer-encoding', 21, false)), J$.T(4926057, 'chunked', 21, false)))) {
                                chunked = J$.W(4926073, 'chunked', J$.T(4926065, true, 23, false), chunked, false, false);
                            }
                            if (J$.C(264208, J$.U(573402, '!', J$.R(4926081, 'chunked', chunked, false, false)))) {
                                J$.M(4926257, J$.R(4926089, 'parts', parts, false, false), 'forEach', false)(J$.T(4926249, function (part) {
                                    jalangiLabel1:
                                        while (true) {
                                            try {
                                                J$.Fe(4926225, arguments.callee, this, arguments);
                                                arguments = J$.N(4926233, 'arguments', arguments, true, false, false);
                                                part = J$.N(4926241, 'part', part, true, false, false);
                                                if (J$.C(264192, J$.B(573418, '===', J$.U(573410, 'typeof', J$.G(4926105, J$.R(4926097, 'part', part, false, false), 'body')), J$.T(4926113, 'undefined', 21, false)))) {
                                                    J$.M(4926169, J$.G(4926129, J$.R(4926121, 'self', self, false, false), 'request'), 'emit', false)(J$.T(4926137, 'error', 21, false), J$.F(4926161, J$.I(typeof Error === 'undefined' ? Error = J$.R(4926145, 'Error', undefined, true, true) : Error = J$.R(4926145, 'Error', Error, true, true)), true)(J$.T(4926153, 'Body attribute missing in multipart.', 21, false)));
                                                }
                                                if (J$.C(264200, J$.F(4926201, J$.R(4926177, 'isstream', isstream, false, true), false)(J$.G(4926193, J$.R(4926185, 'part', part, false, false), 'body')))) {
                                                    chunked = J$.W(4926217, 'chunked', J$.T(4926209, true, 23, false), chunked, false, false);
                                                }
                                            } catch (J$e) {
                                                J$.Ex(4927953, J$e);
                                            } finally {
                                                if (J$.Fr(4927961))
                                                    continue jalangiLabel1;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false));
                            }
                            return J$.Rt(4926273, J$.R(4926265, 'chunked', chunked, false, false));
                        } catch (J$e) {
                            J$.Ex(4927969, J$e);
                        } finally {
                            if (J$.Fr(4927977))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(4926785, J$.G(4926353, J$.R(4926345, 'Multipart', Multipart, false, true), 'prototype'), 'setHeaders', J$.T(4926777, function (chunked) {
                jalangiLabel3:
                    while (true) {
                        try {
                            J$.Fe(4926737, arguments.callee, this, arguments);
                            arguments = J$.N(4926745, 'arguments', arguments, true, false, false);
                            chunked = J$.N(4926753, 'chunked', chunked, true, false, false);
                            J$.N(4926761, 'self', self, false, false, false);
                            J$.N(4926769, 'header', header, false, false, false);
                            var self = J$.W(4926369, 'self', J$.R(4926361, 'this', this, false, false), self, false, false);
                            if (J$.C(264224, J$.C(264216, J$.R(4926377, 'chunked', chunked, false, false)) ? J$.U(573426, '!', J$.M(4926409, J$.G(4926393, J$.R(4926385, 'self', self, false, false), 'request'), 'hasHeader', false)(J$.T(4926401, 'transfer-encoding', 21, false))) : J$._())) {
                                J$.M(4926449, J$.G(4926425, J$.R(4926417, 'self', self, false, false), 'request'), 'setHeader', false)(J$.T(4926433, 'transfer-encoding', 21, false), J$.T(4926441, 'chunked', 21, false));
                            }
                            var header = J$.W(4926489, 'header', J$.M(4926481, J$.G(4926465, J$.R(4926457, 'self', self, false, false), 'request'), 'getHeader', false)(J$.T(4926473, 'content-type', 21, false)), header, false, false);
                            if (J$.C(264248, J$.C(264232, J$.U(573434, '!', J$.R(4926497, 'header', header, false, false))) ? J$._() : J$.B(573450, '===', J$.M(4926521, J$.R(4926505, 'header', header, false, false), 'indexOf', false)(J$.T(4926513, 'multipart', 21, false)), J$.U(573442, '-', J$.T(4926529, 1, 22, false))))) {
                                J$.M(4926585, J$.G(4926545, J$.R(4926537, 'self', self, false, false), 'request'), 'setHeader', false)(J$.T(4926553, 'content-type', 21, false), J$.B(573458, '+', J$.T(4926561, 'multipart/related; boundary=', 21, false), J$.G(4926577, J$.R(4926569, 'self', self, false, false), 'boundary')));
                            } else {
                                if (J$.C(264240, J$.B(573474, '!==', J$.M(4926609, J$.R(4926593, 'header', header, false, false), 'indexOf', false)(J$.T(4926601, 'boundary', 21, false)), J$.U(573466, '-', J$.T(4926617, 1, 22, false))))) {
                                    J$.P(4926665, J$.R(4926625, 'self', self, false, false), 'boundary', J$.M(4926657, J$.R(4926633, 'header', header, false, false), 'replace', false)(J$.T(4926641, /.*boundary=([^\s;]+).*/, 14, false), J$.T(4926649, '$1', 21, false)));
                                } else {
                                    J$.M(4926729, J$.G(4926681, J$.R(4926673, 'self', self, false, false), 'request'), 'setHeader', false)(J$.T(4926689, 'content-type', 21, false), J$.B(573490, '+', J$.B(573482, '+', J$.R(4926697, 'header', header, false, false), J$.T(4926705, '; boundary=', 21, false)), J$.G(4926721, J$.R(4926713, 'self', self, false, false), 'boundary')));
                                }
                            }
                        } catch (J$e) {
                            J$.Ex(4927985, J$e);
                        } finally {
                            if (J$.Fr(4927993))
                                continue jalangiLabel3;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(4927593, J$.G(4926801, J$.R(4926793, 'Multipart', Multipart, false, true), 'prototype'), 'build', J$.T(4927585, function (parts, chunked) {
                jalangiLabel7:
                    while (true) {
                        try {
                            J$.Fe(4927521, arguments.callee, this, arguments);
                            function add(part) {
                                jalangiLabel4:
                                    while (true) {
                                        try {
                                            J$.Fe(4926985, arguments.callee, this, arguments);
                                            arguments = J$.N(4926993, 'arguments', arguments, true, false, false);
                                            part = J$.N(4927001, 'part', part, true, false, false);
                                            if (J$.C(264264, J$.B(573506, '===', J$.U(573498, 'typeof', J$.R(4926865, 'part', part, false, false)), J$.T(4926873, 'number', 21, false)))) {
                                                part = J$.W(4926897, 'part', J$.M(4926889, J$.R(4926881, 'part', part, false, false), 'toString', false)(), part, false, false);
                                            }
                                            return J$.Rt(4926977, J$.C(264272, J$.R(4926905, 'chunked', chunked, false, false)) ? J$.M(4926929, J$.R(4926913, 'body', body, false, false), 'append', false)(J$.R(4926921, 'part', part, false, false)) : J$.M(4926969, J$.R(4926937, 'body', body, false, false), 'push', false)(J$.M(4926961, J$.R(4926945, 'Buffer', Buffer, false, true), 'from', false)(J$.R(4926953, 'part', part, false, false))));
                                        } catch (J$e) {
                                            J$.Ex(4928001, J$e);
                                        } finally {
                                            if (J$.Fr(4928009))
                                                continue jalangiLabel4;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }
                            arguments = J$.N(4927529, 'arguments', arguments, true, false, false);
                            parts = J$.N(4927537, 'parts', parts, true, false, false);
                            chunked = J$.N(4927545, 'chunked', chunked, true, false, false);
                            J$.N(4927553, 'self', self, false, false, false);
                            J$.N(4927561, 'body', body, false, false, false);
                            add = J$.N(4927577, 'add', J$.T(4927569, add, 12, false), true, false, false);
                            var self = J$.W(4926817, 'self', J$.R(4926809, 'this', this, false, false), self, false, false);
                            var body = J$.W(4926857, 'body', J$.C(264256, J$.R(4926825, 'chunked', chunked, false, false)) ? J$.F(4926841, J$.R(4926833, 'CombinedStream', CombinedStream, false, true), true)() : J$.T(4926849, [], 10, false), body, false, false);
                            if (J$.C(264280, J$.G(4927025, J$.G(4927017, J$.R(4927009, 'self', self, false, false), 'request'), 'preambleCRLF'))) {
                                J$.F(4927049, J$.R(4927033, 'add', add, false, false), false)(J$.T(4927041, '\r\n', 21, false));
                            }
                            J$.M(4927401, J$.R(4927057, 'parts', parts, false, false), 'forEach', false)(J$.T(4927393, function (part) {
                                jalangiLabel6:
                                    while (true) {
                                        try {
                                            J$.Fe(4927361, arguments.callee, this, arguments);
                                            arguments = J$.N(4927369, 'arguments', arguments, true, false, false);
                                            part = J$.N(4927377, 'part', part, true, false, false);
                                            J$.N(4927385, 'preamble', preamble, false, false, false);
                                            var preamble = J$.W(4927097, 'preamble', J$.B(573522, '+', J$.B(573514, '+', J$.T(4927065, '--', 21, false), J$.G(4927081, J$.R(4927073, 'self', self, false, false), 'boundary')), J$.T(4927089, '\r\n', 21, false)), preamble, false, false);
                                            J$.M(4927249, J$.M(4927121, J$.I(typeof Object === 'undefined' ? Object = J$.R(4927105, 'Object', undefined, true, true) : Object = J$.R(4927105, 'Object', Object, true, true)), 'keys', false)(J$.R(4927113, 'part', part, false, false)), 'forEach', false)(J$.T(4927241, function (key) {
                                                jalangiLabel5:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(4927217, arguments.callee, this, arguments);
                                                            arguments = J$.N(4927225, 'arguments', arguments, true, false, false);
                                                            key = J$.N(4927233, 'key', key, true, false, false);
                                                            if (J$.C(264288, J$.B(573530, '===', J$.R(4927129, 'key', key, false, false), J$.T(4927137, 'body', 21, false)))) {
                                                                return J$.Rt(4927145, undefined);
                                                            }
                                                            preamble = J$.W(4927209, 'preamble', J$.B(573562, '+', J$.R(4927201, 'preamble', preamble, false, false), J$.B(573554, '+', J$.B(573546, '+', J$.B(573538, '+', J$.R(4927153, 'key', key, false, false), J$.T(4927161, ': ', 21, false)), J$.G(4927185, J$.R(4927169, 'part', part, false, false), J$.R(4927177, 'key', key, false, false))), J$.T(4927193, '\r\n', 21, false))), preamble, false, false);
                                                        } catch (J$e) {
                                                            J$.Ex(4928017, J$e);
                                                        } finally {
                                                            if (J$.Fr(4928025))
                                                                continue jalangiLabel5;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false));
                                            preamble = J$.W(4927273, 'preamble', J$.B(573570, '+', J$.R(4927265, 'preamble', preamble, false, false), J$.T(4927257, '\r\n', 21, false)), preamble, false, false);
                                            J$.F(4927297, J$.R(4927281, 'add', add, false, false), false)(J$.R(4927289, 'preamble', preamble, false, false));
                                            J$.F(4927329, J$.R(4927305, 'add', add, false, false), false)(J$.G(4927321, J$.R(4927313, 'part', part, false, false), 'body'));
                                            J$.F(4927353, J$.R(4927337, 'add', add, false, false), false)(J$.T(4927345, '\r\n', 21, false));
                                        } catch (J$e) {
                                            J$.Ex(4928033, J$e);
                                        } finally {
                                            if (J$.Fr(4928041))
                                                continue jalangiLabel6;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            J$.F(4927449, J$.R(4927409, 'add', add, false, false), false)(J$.B(573586, '+', J$.B(573578, '+', J$.T(4927417, '--', 21, false), J$.G(4927433, J$.R(4927425, 'self', self, false, false), 'boundary')), J$.T(4927441, '--', 21, false)));
                            if (J$.C(264296, J$.G(4927473, J$.G(4927465, J$.R(4927457, 'self', self, false, false), 'request'), 'postambleCRLF'))) {
                                J$.F(4927497, J$.R(4927481, 'add', add, false, false), false)(J$.T(4927489, '\r\n', 21, false));
                            }
                            return J$.Rt(4927513, J$.R(4927505, 'body', body, false, false));
                        } catch (J$e) {
                            J$.Ex(4928049, J$e);
                        } finally {
                            if (J$.Fr(4928057))
                                continue jalangiLabel7;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(4927849, J$.G(4927609, J$.R(4927601, 'Multipart', Multipart, false, true), 'prototype'), 'onRequest', J$.T(4927841, function (options) {
                jalangiLabel8:
                    while (true) {
                        try {
                            J$.Fe(4927793, arguments.callee, this, arguments);
                            arguments = J$.N(4927801, 'arguments', arguments, true, false, false);
                            options = J$.N(4927809, 'options', options, true, false, false);
                            J$.N(4927817, 'self', self, false, false, false);
                            J$.N(4927825, 'chunked', chunked, false, false, false);
                            J$.N(4927833, 'parts', parts, false, false, false);
                            var self = J$.W(4927625, 'self', J$.R(4927617, 'this', this, false, false), self, false, false);
                            var chunked = J$.W(4927657, 'chunked', J$.M(4927649, J$.R(4927633, 'self', self, false, false), 'isChunked', false)(J$.R(4927641, 'options', options, false, false)), chunked, false, false);
                            var parts = J$.W(4927689, 'parts', J$.C(264304, J$.G(4927673, J$.R(4927665, 'options', options, false, false), 'data')) ? J$._() : J$.R(4927681, 'options', options, false, false), parts, false, false);
                            J$.M(4927713, J$.R(4927697, 'self', self, false, false), 'setHeaders', false)(J$.R(4927705, 'chunked', chunked, false, false));
                            J$.P(4927737, J$.R(4927721, 'self', self, false, false), 'chunked', J$.R(4927729, 'chunked', chunked, false, false));
                            J$.P(4927785, J$.R(4927745, 'self', self, false, false), 'body', J$.M(4927777, J$.R(4927753, 'self', self, false, false), 'build', false)(J$.R(4927761, 'parts', parts, false, false), J$.R(4927769, 'chunked', chunked, false, false)));
                        } catch (J$e) {
                            J$.Ex(4928065, J$e);
                        } finally {
                            if (J$.Fr(4928073))
                                continue jalangiLabel8;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(4927873, J$.I(typeof exports === 'undefined' ? exports = J$.R(4927857, 'exports', undefined, true, true) : exports = J$.R(4927857, 'exports', exports, true, true)), 'Multipart', J$.R(4927865, 'Multipart', Multipart, false, true));
        } catch (J$e) {
            J$.Ex(4928081, J$e);
        } finally {
            if (J$.Sr(4928089))
                continue jalangiLabel9;
            else
                break jalangiLabel9;
        }
    }
// JALANGI DO NOT INSTRUMENT

