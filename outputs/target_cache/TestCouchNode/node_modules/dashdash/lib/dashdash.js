J$.noInstrEval = false;
jalangiLabel44:
    while (true) {
        try {
            J$.Se(7253289, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestCouchNode/node_modules/dashdash/lib/dashdash.js');
            function renderTemplate(s, d) {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(7236441, arguments.callee, this, arguments);
                            arguments = J$.N(7236449, 'arguments', arguments, true, false, false);
                            s = J$.N(7236457, 's', s, true, false, false);
                            d = J$.N(7236465, 'd', d, true, false, false);
                            return J$.Rt(7236433, J$.M(7236425, J$.R(7236305, 's', s, false, false), 'replace', false)(J$.T(7236313, /{{([a-zA-Z]+)}}/g, 14, false), J$.T(7236417, function (match, key) {
                                jalangiLabel1:
                                    while (true) {
                                        try {
                                            J$.Fe(7236385, arguments.callee, this, arguments);
                                            arguments = J$.N(7236393, 'arguments', arguments, true, false, false);
                                            match = J$.N(7236401, 'match', match, true, false, false);
                                            key = J$.N(7236409, 'key', key, true, false, false);
                                            return J$.Rt(7236377, J$.C(386888, J$.M(7236337, J$.R(7236321, 'd', d, false, false), 'hasOwnProperty', false)(J$.R(7236329, 'key', key, false, false))) ? J$.G(7236361, J$.R(7236345, 'd', d, false, false), J$.R(7236353, 'key', key, false, false)) : J$.R(7236369, 'match', match, false, false));
                                        } catch (J$e) {
                                            J$.Ex(7253697, J$e);
                                        } finally {
                                            if (J$.Fr(7253705))
                                                continue jalangiLabel1;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false)));
                        } catch (J$e) {
                            J$.Ex(7253713, J$e);
                        } finally {
                            if (J$.Fr(7253721))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function shallowCopy(obj) {
                jalangiLabel4:
                    while (true) {
                        try {
                            J$.Fe(7236641, arguments.callee, this, arguments);
                            arguments = J$.N(7236649, 'arguments', arguments, true, false, false);
                            obj = J$.N(7236657, 'obj', obj, true, false, false);
                            J$.N(7236665, 'copy', copy, false, false, false);
                            if (J$.C(386896, J$.U(727106, '!', J$.R(7236473, 'obj', obj, false, false)))) {
                                return J$.Rt(7236489, J$.R(7236481, 'obj', obj, false, false));
                            }
                            var copy = J$.W(7236505, 'copy', J$.T(7236497, {}, 11, false), copy, false, false);
                            J$.M(7236617, J$.M(7236529, J$.I(typeof Object === 'undefined' ? Object = J$.R(7236513, 'Object', undefined, true, true) : Object = J$.R(7236513, 'Object', Object, true, true)), 'keys', false)(J$.R(7236521, 'obj', obj, false, false)), 'forEach', false)(J$.T(7236609, function (k) {
                                jalangiLabel3:
                                    while (true) {
                                        try {
                                            J$.Fe(7236585, arguments.callee, this, arguments);
                                            arguments = J$.N(7236593, 'arguments', arguments, true, false, false);
                                            k = J$.N(7236601, 'k', k, true, false, false);
                                            J$.P(7236577, J$.R(7236537, 'copy', copy, false, false), J$.R(7236545, 'k', k, false, false), J$.G(7236569, J$.R(7236553, 'obj', obj, false, false), J$.R(7236561, 'k', k, false, false)));
                                        } catch (J$e) {
                                            J$.Ex(7253729, J$e);
                                        } finally {
                                            if (J$.Fr(7253737))
                                                continue jalangiLabel3;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            return J$.Rt(7236633, J$.R(7236625, 'copy', copy, false, false));
                        } catch (J$e) {
                            J$.Ex(7253745, J$e);
                        } finally {
                            if (J$.Fr(7253753))
                                continue jalangiLabel4;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function space(n) {
                jalangiLabel5:
                    while (true) {
                        try {
                            J$.Fe(7236777, arguments.callee, this, arguments);
                            arguments = J$.N(7236785, 'arguments', arguments, true, false, false);
                            n = J$.N(7236793, 'n', n, true, false, false);
                            J$.N(7236801, 's', s, false, false, false);
                            J$.N(7236809, 'i', i, false, false, false);
                            var s = J$.W(7236681, 's', J$.T(7236673, '', 21, false), s, false, false);
                            for (var i = J$.W(7236697, 'i', J$.T(7236689, 0, 22, false), i, false, false); J$.C(386904, J$.B(727114, '<', J$.R(7236705, 'i', i, false, false), J$.R(7236713, 'n', n, false, false))); J$.B(727138, '-', i = J$.W(7236729, 'i', J$.B(727130, '+', J$.U(727122, '+', J$.R(7236721, 'i', i, false, false)), 1), i, false, false), 1)) {
                                s = J$.W(7236753, 's', J$.B(727146, '+', J$.R(7236745, 's', s, false, false), J$.T(7236737, ' ', 21, false)), s, false, false);
                            }
                            return J$.Rt(7236769, J$.R(7236761, 's', s, false, false));
                        } catch (J$e) {
                            J$.Ex(7253761, J$e);
                        } finally {
                            if (J$.Fr(7253769))
                                continue jalangiLabel5;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function makeIndent(arg, deflen, name) {
                jalangiLabel6:
                    while (true) {
                        try {
                            J$.Fe(7237009, arguments.callee, this, arguments);
                            arguments = J$.N(7237017, 'arguments', arguments, true, false, false);
                            arg = J$.N(7237025, 'arg', arg, true, false, false);
                            deflen = J$.N(7237033, 'deflen', deflen, true, false, false);
                            name = J$.N(7237041, 'name', name, true, false, false);
                            if (J$.C(386936, J$.C(386912, J$.B(727154, '===', J$.R(7236817, 'arg', arg, false, false), J$.T(7236825, null, 25, false))) ? J$._() : J$.B(727162, '===', J$.R(7236833, 'arg', arg, false, false), J$.T(7236841, undefined, 24, false))))
                                return J$.Rt(7236873, J$.F(7236865, J$.R(7236849, 'space', space, false, true), false)(J$.R(7236857, 'deflen', deflen, false, false)));
                            else if (J$.C(386928, J$.B(727178, '===', J$.U(727170, 'typeof', J$.R(7236881, 'arg', arg, false, false)), J$.T(7236889, 'number', 21, false))))
                                return J$.Rt(7236921, J$.F(7236913, J$.R(7236897, 'space', space, false, true), false)(J$.R(7236905, 'arg', arg, false, false)));
                            else if (J$.C(386920, J$.B(727194, '===', J$.U(727186, 'typeof', J$.R(7236929, 'arg', arg, false, false)), J$.T(7236937, 'string', 21, false))))
                                return J$.Rt(7236953, J$.R(7236945, 'arg', arg, false, false));
                            else
                                J$.M(7237001, J$.R(7236961, 'assert', assert, false, true), 'fail', false)(J$.B(727218, '+', J$.B(727210, '+', J$.B(727202, '+', J$.T(7236969, 'invalid "', 21, false), J$.R(7236977, 'name', name, false, false)), J$.T(7236985, '": not a string or number: ', 21, false)), J$.R(7236993, 'arg', arg, false, false)));
                        } catch (J$e) {
                            J$.Ex(7253777, J$e);
                        } finally {
                            if (J$.Fr(7253785))
                                continue jalangiLabel6;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function textwrap(s, width) {
                jalangiLabel8:
                    while (true) {
                        try {
                            J$.Fe(7237433, arguments.callee, this, arguments);
                            arguments = J$.N(7237441, 'arguments', arguments, true, false, false);
                            s = J$.N(7237449, 's', s, true, false, false);
                            width = J$.N(7237457, 'width', width, true, false, false);
                            J$.N(7237465, 'words', words, false, false, false);
                            J$.N(7237473, 'lines', lines, false, false, false);
                            J$.N(7237481, 'line', line, false, false, false);
                            var words = J$.W(7237081, 'words', J$.M(7237073, J$.M(7237057, J$.R(7237049, 's', s, false, false), 'trim', false)(), 'split', false)(J$.T(7237065, /\s+/, 14, false)), words, false, false);
                            var lines = J$.W(7237097, 'lines', J$.T(7237089, [], 10, false), lines, false, false);
                            var line = J$.W(7237113, 'line', J$.T(7237105, '', 21, false), line, false, false);
                            J$.M(7237385, J$.R(7237121, 'words', words, false, false), 'forEach', false)(J$.T(7237377, function (w) {
                                jalangiLabel7:
                                    while (true) {
                                        try {
                                            J$.Fe(7237345, arguments.callee, this, arguments);
                                            arguments = J$.N(7237353, 'arguments', arguments, true, false, false);
                                            w = J$.N(7237361, 'w', w, true, false, false);
                                            J$.N(7237369, 'newLength', newLength, false, false, false);
                                            var newLength = J$.W(7237161, 'newLength', J$.B(727226, '+', J$.G(7237137, J$.R(7237129, 'line', line, false, false), 'length'), J$.G(7237153, J$.R(7237145, 'w', w, false, false), 'length')), newLength, false, false);
                                            if (J$.C(386944, J$.B(727234, '>', J$.G(7237177, J$.R(7237169, 'line', line, false, false), 'length'), J$.T(7237185, 0, 22, false))))
                                                newLength = J$.W(7237209, 'newLength', J$.B(727242, '+', J$.R(7237201, 'newLength', newLength, false, false), J$.T(7237193, 1, 22, false)), newLength, false, false);
                                            if (J$.C(386952, J$.B(727250, '>', J$.R(7237217, 'newLength', newLength, false, false), J$.R(7237225, 'width', width, false, false)))) {
                                                J$.M(7237249, J$.R(7237233, 'lines', lines, false, false), 'push', false)(J$.R(7237241, 'line', line, false, false));
                                                line = J$.W(7237265, 'line', J$.T(7237257, '', 21, false), line, false, false);
                                            }
                                            if (J$.C(386960, J$.B(727258, '>', J$.G(7237281, J$.R(7237273, 'line', line, false, false), 'length'), J$.T(7237289, 0, 22, false))))
                                                line = J$.W(7237313, 'line', J$.B(727266, '+', J$.R(7237305, 'line', line, false, false), J$.T(7237297, ' ', 21, false)), line, false, false);
                                            line = J$.W(7237337, 'line', J$.B(727274, '+', J$.R(7237329, 'line', line, false, false), J$.R(7237321, 'w', w, false, false)), line, false, false);
                                        } catch (J$e) {
                                            J$.Ex(7253793, J$e);
                                        } finally {
                                            if (J$.Fr(7253801))
                                                continue jalangiLabel7;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            J$.M(7237409, J$.R(7237393, 'lines', lines, false, false), 'push', false)(J$.R(7237401, 'line', line, false, false));
                            return J$.Rt(7237425, J$.R(7237417, 'lines', lines, false, false));
                        } catch (J$e) {
                            J$.Ex(7253809, J$e);
                        } finally {
                            if (J$.Fr(7253817))
                                continue jalangiLabel8;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function optionKeyFromName(name) {
                jalangiLabel9:
                    while (true) {
                        try {
                            J$.Fe(7237529, arguments.callee, this, arguments);
                            arguments = J$.N(7237537, 'arguments', arguments, true, false, false);
                            name = J$.N(7237545, 'name', name, true, false, false);
                            return J$.Rt(7237521, J$.M(7237513, J$.R(7237489, 'name', name, false, false), 'replace', false)(J$.T(7237497, /-/g, 14, false), J$.T(7237505, '_', 21, false)));
                        } catch (J$e) {
                            J$.Ex(7253825, J$e);
                        } finally {
                            if (J$.Fr(7253833))
                                continue jalangiLabel9;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function parseBool(option, optstr, arg) {
                jalangiLabel10:
                    while (true) {
                        try {
                            J$.Fe(7237585, arguments.callee, this, arguments);
                            arguments = J$.N(7237593, 'arguments', arguments, true, false, false);
                            option = J$.N(7237601, 'option', option, true, false, false);
                            optstr = J$.N(7237609, 'optstr', optstr, true, false, false);
                            arg = J$.N(7237617, 'arg', arg, true, false, false);
                            return J$.Rt(7237577, J$.F(7237569, J$.I(typeof Boolean === 'undefined' ? Boolean = J$.R(7237553, 'Boolean', undefined, true, true) : Boolean = J$.R(7237553, 'Boolean', Boolean, true, true)), false)(J$.R(7237561, 'arg', arg, false, false)));
                        } catch (J$e) {
                            J$.Ex(7253841, J$e);
                        } finally {
                            if (J$.Fr(7253849))
                                continue jalangiLabel10;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function parseString(option, optstr, arg) {
                jalangiLabel11:
                    while (true) {
                        try {
                            J$.Fe(7237673, arguments.callee, this, arguments);
                            arguments = J$.N(7237681, 'arguments', arguments, true, false, false);
                            option = J$.N(7237689, 'option', option, true, false, false);
                            optstr = J$.N(7237697, 'optstr', optstr, true, false, false);
                            arg = J$.N(7237705, 'arg', arg, true, false, false);
                            J$.M(7237649, J$.R(7237625, 'assert', assert, false, true), 'string', false)(J$.R(7237633, 'arg', arg, false, false), J$.T(7237641, 'arg', 21, false));
                            return J$.Rt(7237665, J$.R(7237657, 'arg', arg, false, false));
                        } catch (J$e) {
                            J$.Ex(7253857, J$e);
                        } finally {
                            if (J$.Fr(7253865))
                                continue jalangiLabel11;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function parseNumber(option, optstr, arg) {
                jalangiLabel12:
                    while (true) {
                        try {
                            J$.Fe(7237873, arguments.callee, this, arguments);
                            arguments = J$.N(7237881, 'arguments', arguments, true, false, false);
                            option = J$.N(7237889, 'option', option, true, false, false);
                            optstr = J$.N(7237897, 'optstr', optstr, true, false, false);
                            arg = J$.N(7237905, 'arg', arg, true, false, false);
                            J$.N(7237913, 'num', num, false, false, false);
                            J$.M(7237737, J$.R(7237713, 'assert', assert, false, true), 'string', false)(J$.R(7237721, 'arg', arg, false, false), J$.T(7237729, 'arg', 21, false));
                            var num = J$.W(7237769, 'num', J$.F(7237761, J$.I(typeof Number === 'undefined' ? Number = J$.R(7237745, 'Number', undefined, true, true) : Number = J$.R(7237745, 'Number', Number, true, true)), false)(J$.R(7237753, 'arg', arg, false, false)), num, false, false);
                            if (J$.C(386968, J$.F(7237793, J$.I(typeof isNaN === 'undefined' ? isNaN = J$.R(7237777, 'isNaN', undefined, true, true) : isNaN = J$.R(7237777, 'isNaN', isNaN, true, true)), false)(J$.R(7237785, 'num', num, false, false)))) {
                                throw J$.F(7237849, J$.I(typeof Error === 'undefined' ? Error = J$.R(7237801, 'Error', undefined, true, true) : Error = J$.R(7237801, 'Error', Error, true, true)), true)(J$.F(7237841, J$.R(7237809, 'format', format, false, true), false)(J$.T(7237817, 'arg for "%s" is not a number: "%s"', 21, false), J$.R(7237825, 'optstr', optstr, false, false), J$.R(7237833, 'arg', arg, false, false)));
                            }
                            return J$.Rt(7237865, J$.R(7237857, 'num', num, false, false));
                        } catch (J$e) {
                            J$.Ex(7253873, J$e);
                        } finally {
                            if (J$.Fr(7253881))
                                continue jalangiLabel12;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function parseInteger(option, optstr, arg) {
                jalangiLabel13:
                    while (true) {
                        try {
                            J$.Fe(7238105, arguments.callee, this, arguments);
                            arguments = J$.N(7238113, 'arguments', arguments, true, false, false);
                            option = J$.N(7238121, 'option', option, true, false, false);
                            optstr = J$.N(7238129, 'optstr', optstr, true, false, false);
                            arg = J$.N(7238137, 'arg', arg, true, false, false);
                            J$.N(7238145, 'num', num, false, false, false);
                            J$.M(7237945, J$.R(7237921, 'assert', assert, false, true), 'string', false)(J$.R(7237929, 'arg', arg, false, false), J$.T(7237937, 'arg', 21, false));
                            var num = J$.W(7237977, 'num', J$.F(7237969, J$.I(typeof Number === 'undefined' ? Number = J$.R(7237953, 'Number', undefined, true, true) : Number = J$.R(7237953, 'Number', Number, true, true)), false)(J$.R(7237961, 'arg', arg, false, false)), num, false, false);
                            if (J$.C(386984, J$.C(386976, J$.U(727282, '!', J$.M(7238001, J$.T(7237985, /^[0-9-]+$/, 14, false), 'test', false)(J$.R(7237993, 'arg', arg, false, false)))) ? J$._() : J$.F(7238025, J$.I(typeof isNaN === 'undefined' ? isNaN = J$.R(7238009, 'isNaN', undefined, true, true) : isNaN = J$.R(7238009, 'isNaN', isNaN, true, true)), false)(J$.R(7238017, 'num', num, false, false)))) {
                                throw J$.F(7238081, J$.I(typeof Error === 'undefined' ? Error = J$.R(7238033, 'Error', undefined, true, true) : Error = J$.R(7238033, 'Error', Error, true, true)), true)(J$.F(7238073, J$.R(7238041, 'format', format, false, true), false)(J$.T(7238049, 'arg for "%s" is not an integer: "%s"', 21, false), J$.R(7238057, 'optstr', optstr, false, false), J$.R(7238065, 'arg', arg, false, false)));
                            }
                            return J$.Rt(7238097, J$.R(7238089, 'num', num, false, false));
                        } catch (J$e) {
                            J$.Ex(7253889, J$e);
                        } finally {
                            if (J$.Fr(7253897))
                                continue jalangiLabel13;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function parsePositiveInteger(option, optstr, arg) {
                jalangiLabel14:
                    while (true) {
                        try {
                            J$.Fe(7238353, arguments.callee, this, arguments);
                            arguments = J$.N(7238361, 'arguments', arguments, true, false, false);
                            option = J$.N(7238369, 'option', option, true, false, false);
                            optstr = J$.N(7238377, 'optstr', optstr, true, false, false);
                            arg = J$.N(7238385, 'arg', arg, true, false, false);
                            J$.N(7238393, 'num', num, false, false, false);
                            J$.M(7238177, J$.R(7238153, 'assert', assert, false, true), 'string', false)(J$.R(7238161, 'arg', arg, false, false), J$.T(7238169, 'arg', 21, false));
                            var num = J$.W(7238209, 'num', J$.F(7238201, J$.I(typeof Number === 'undefined' ? Number = J$.R(7238185, 'Number', undefined, true, true) : Number = J$.R(7238185, 'Number', Number, true, true)), false)(J$.R(7238193, 'arg', arg, false, false)), num, false, false);
                            if (J$.C(387008, J$.C(387000, J$.C(386992, J$.U(727290, '!', J$.M(7238233, J$.T(7238217, /^[0-9]+$/, 14, false), 'test', false)(J$.R(7238225, 'arg', arg, false, false)))) ? J$._() : J$.F(7238257, J$.I(typeof isNaN === 'undefined' ? isNaN = J$.R(7238241, 'isNaN', undefined, true, true) : isNaN = J$.R(7238241, 'isNaN', isNaN, true, true)), false)(J$.R(7238249, 'num', num, false, false))) ? J$._() : J$.B(727298, '===', J$.R(7238265, 'num', num, false, false), J$.T(7238273, 0, 22, false)))) {
                                throw J$.F(7238329, J$.I(typeof Error === 'undefined' ? Error = J$.R(7238281, 'Error', undefined, true, true) : Error = J$.R(7238281, 'Error', Error, true, true)), true)(J$.F(7238321, J$.R(7238289, 'format', format, false, true), false)(J$.T(7238297, 'arg for "%s" is not a positive integer: "%s"', 21, false), J$.R(7238305, 'optstr', optstr, false, false), J$.R(7238313, 'arg', arg, false, false)));
                            }
                            return J$.Rt(7238345, J$.R(7238337, 'num', num, false, false));
                        } catch (J$e) {
                            J$.Ex(7253905, J$e);
                        } finally {
                            if (J$.Fr(7253913))
                                continue jalangiLabel14;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function parseDate(option, optstr, arg) {
                jalangiLabel15:
                    while (true) {
                        try {
                            J$.Fe(7238721, arguments.callee, this, arguments);
                            arguments = J$.N(7238729, 'arguments', arguments, true, false, false);
                            option = J$.N(7238737, 'option', option, true, false, false);
                            optstr = J$.N(7238745, 'optstr', optstr, true, false, false);
                            arg = J$.N(7238753, 'arg', arg, true, false, false);
                            J$.N(7238761, 'date', date, false, false, false);
                            J$.M(7238425, J$.R(7238401, 'assert', assert, false, true), 'string', false)(J$.R(7238409, 'arg', arg, false, false), J$.T(7238417, 'arg', 21, false));
                            var date;
                            if (J$.C(387024, J$.M(7238449, J$.T(7238433, /^\d+$/, 14, false), 'test', false)(J$.R(7238441, 'arg', arg, false, false)))) {
                                date = J$.W(7238505, 'date', J$.F(7238497, J$.I(typeof Date === 'undefined' ? Date = J$.R(7238457, 'Date', undefined, true, true) : Date = J$.R(7238457, 'Date', Date, true, true)), true)(J$.B(727306, '*', J$.F(7238481, J$.I(typeof Number === 'undefined' ? Number = J$.R(7238465, 'Number', undefined, true, true) : Number = J$.R(7238465, 'Number', Number, true, true)), false)(J$.R(7238473, 'arg', arg, false, false)), J$.T(7238489, 1000, 22, false))), date, false, false);
                            } else if (J$.C(387016, J$.M(7238529, J$.T(7238513, /^\d{4}-\d{2}-\d{2}(T\d{2}:\d{2}:\d{2}(\.\d+)?Z?)?$/i, 14, false), 'test', false)(J$.R(7238521, 'arg', arg, false, false)))) {
                                date = J$.W(7238561, 'date', J$.F(7238553, J$.I(typeof Date === 'undefined' ? Date = J$.R(7238537, 'Date', undefined, true, true) : Date = J$.R(7238537, 'Date', Date, true, true)), true)(J$.R(7238545, 'arg', arg, false, false)), date, false, false);
                            } else {
                                throw J$.F(7238617, J$.I(typeof Error === 'undefined' ? Error = J$.R(7238569, 'Error', undefined, true, true) : Error = J$.R(7238569, 'Error', Error, true, true)), true)(J$.F(7238609, J$.R(7238577, 'format', format, false, true), false)(J$.T(7238585, 'arg for "%s" is not a valid date format: "%s"', 21, false), J$.R(7238593, 'optstr', optstr, false, false), J$.R(7238601, 'arg', arg, false, false)));
                            }
                            if (J$.C(387032, J$.B(727314, '===', J$.M(7238633, J$.R(7238625, 'date', date, false, false), 'toString', false)(), J$.T(7238641, 'Invalid Date', 21, false)))) {
                                throw J$.F(7238697, J$.I(typeof Error === 'undefined' ? Error = J$.R(7238649, 'Error', undefined, true, true) : Error = J$.R(7238649, 'Error', Error, true, true)), true)(J$.F(7238689, J$.R(7238657, 'format', format, false, true), false)(J$.T(7238665, 'arg for "%s" is an invalid date: "%s"', 21, false), J$.R(7238673, 'optstr', optstr, false, false), J$.R(7238681, 'arg', arg, false, false)));
                            }
                            return J$.Rt(7238713, J$.R(7238705, 'date', date, false, false));
                        } catch (J$e) {
                            J$.Ex(7253921, J$e);
                        } finally {
                            if (J$.Fr(7253929))
                                continue jalangiLabel15;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function Parser(config) {
                jalangiLabel19:
                    while (true) {
                        try {
                            J$.Fe(7241177, arguments.callee, this, arguments);
                            arguments = J$.N(7241185, 'arguments', arguments, true, false, false);
                            config = J$.N(7241193, 'config', config, true, false, false);
                            J$.N(7241201, 'self', self, false, false, false);
                            J$.N(7241209, 'i', i, false, false, false);
                            J$.N(7241217, 'o', o, false, false, false);
                            J$.N(7241225, 'env', env, false, false, false);
                            J$.M(7239225, J$.R(7239201, 'assert', assert, false, true), 'object', false)(J$.R(7239209, 'config', config, false, false), J$.T(7239217, 'config', 21, false));
                            J$.M(7239265, J$.R(7239233, 'assert', assert, false, true), 'arrayOfObject', false)(J$.G(7239249, J$.R(7239241, 'config', config, false, false), 'options'), J$.T(7239257, 'config.options', 21, false));
                            J$.M(7239305, J$.R(7239273, 'assert', assert, false, true), 'optionalBool', false)(J$.G(7239289, J$.R(7239281, 'config', config, false, false), 'interspersed'), J$.T(7239297, 'config.interspersed', 21, false));
                            var self = J$.W(7239321, 'self', J$.R(7239313, 'this', this, false, false), self, false, false);
                            J$.P(7239385, J$.R(7239329, 'this', this, false, false), 'interspersed', J$.C(387040, J$.B(727322, '!==', J$.G(7239345, J$.R(7239337, 'config', config, false, false), 'interspersed'), J$.T(7239353, undefined, 24, false))) ? J$.G(7239369, J$.R(7239361, 'config', config, false, false), 'interspersed') : J$.T(7239377, true, 23, false));
                            J$.P(7239449, J$.R(7239393, 'this', this, false, false), 'allowUnknown', J$.C(387048, J$.B(727330, '!==', J$.G(7239409, J$.R(7239401, 'config', config, false, false), 'allowUnknown'), J$.T(7239417, undefined, 24, false))) ? J$.G(7239433, J$.R(7239425, 'config', config, false, false), 'allowUnknown') : J$.T(7239441, false, 23, false));
                            J$.P(7239553, J$.R(7239457, 'this', this, false, false), 'options', J$.M(7239545, J$.G(7239473, J$.R(7239465, 'config', config, false, false), 'options'), 'map', false)(J$.T(7239537, function (o) {
                                jalangiLabel16:
                                    while (true) {
                                        try {
                                            J$.Fe(7239513, arguments.callee, this, arguments);
                                            arguments = J$.N(7239521, 'arguments', arguments, true, false, false);
                                            o = J$.N(7239529, 'o', o, true, false, false);
                                            return J$.Rt(7239505, J$.F(7239497, J$.R(7239481, 'shallowCopy', shallowCopy, false, true), false)(J$.R(7239489, 'o', o, false, false)));
                                        } catch (J$e) {
                                            J$.Ex(7253937, J$e);
                                        } finally {
                                            if (J$.Fr(7253945))
                                                continue jalangiLabel16;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false)));
                            J$.P(7239577, J$.R(7239561, 'this', this, false, false), 'optionFromName', J$.T(7239569, {}, 11, false));
                            J$.P(7239601, J$.R(7239585, 'this', this, false, false), 'optionFromEnv', J$.T(7239593, {}, 11, false));
                            for (var i = J$.W(7239617, 'i', J$.T(7239609, 0, 22, false), i, false, false); J$.C(387136, J$.B(727338, '<', J$.R(7239625, 'i', i, false, false), J$.G(7239649, J$.G(7239641, J$.R(7239633, 'this', this, false, false), 'options'), 'length'))); J$.B(727362, '-', i = J$.W(7239665, 'i', J$.B(727354, '+', J$.U(727346, '+', J$.R(7239657, 'i', i, false, false)), 1), i, false, false), 1)) {
                                var o = J$.W(7239705, 'o', J$.G(7239697, J$.G(7239681, J$.R(7239673, 'this', this, false, false), 'options'), J$.R(7239689, 'i', i, false, false)), o, false, false);
                                if (J$.C(387064, J$.C(387056, J$.B(727370, '!==', J$.G(7239721, J$.R(7239713, 'o', o, false, false), 'group'), J$.T(7239729, undefined, 24, false))) ? J$.B(727378, '!==', J$.G(7239745, J$.R(7239737, 'o', o, false, false), 'group'), J$.T(7239753, null, 25, false)) : J$._())) {
                                    J$.M(7239817, J$.R(7239761, 'assert', assert, false, true), 'optionalString', false)(J$.G(7239777, J$.R(7239769, 'o', o, false, false), 'group'), J$.F(7239809, J$.R(7239785, 'format', format, false, true), false)(J$.T(7239793, 'config.options.%d.group', 21, false), J$.R(7239801, 'i', i, false, false)));
                                    continue;
                                }
                                J$.M(7239921, J$.R(7239825, 'assert', assert, false, true), 'ok', false)(J$.G(7239857, J$.R(7239833, 'optionTypes', optionTypes, false, true), J$.G(7239849, J$.R(7239841, 'o', o, false, false), 'type')), J$.F(7239913, J$.R(7239865, 'format', format, false, true), false)(J$.T(7239873, 'invalid config.options.%d.type: "%s" in %j', 21, false), J$.R(7239881, 'i', i, false, false), J$.G(7239897, J$.R(7239889, 'o', o, false, false), 'type'), J$.R(7239905, 'o', o, false, false)));
                                J$.M(7239985, J$.R(7239929, 'assert', assert, false, true), 'optionalString', false)(J$.G(7239945, J$.R(7239937, 'o', o, false, false), 'name'), J$.F(7239977, J$.R(7239953, 'format', format, false, true), false)(J$.T(7239961, 'config.options.%d.name', 21, false), J$.R(7239969, 'i', i, false, false)));
                                J$.M(7240049, J$.R(7239993, 'assert', assert, false, true), 'optionalArrayOfString', false)(J$.G(7240009, J$.R(7240001, 'o', o, false, false), 'names'), J$.F(7240041, J$.R(7240017, 'format', format, false, true), false)(J$.T(7240025, 'config.options.%d.names', 21, false), J$.R(7240033, 'i', i, false, false)));
                                J$.M(7240161, J$.R(7240057, 'assert', assert, false, true), 'ok', false)(J$.C(387088, J$.C(387072, J$.G(7240073, J$.R(7240065, 'o', o, false, false), 'name')) ? J$._() : J$.G(7240089, J$.R(7240081, 'o', o, false, false), 'names')) ? J$.U(727386, '!', J$.C(387080, J$.G(7240105, J$.R(7240097, 'o', o, false, false), 'name')) ? J$.G(7240121, J$.R(7240113, 'o', o, false, false), 'names') : J$._()) : J$._(), J$.F(7240153, J$.R(7240129, 'format', format, false, true), false)(J$.T(7240137, 'exactly one of "name" or "names" required: %j', 21, false), J$.R(7240145, 'o', o, false, false)));
                                J$.M(7240225, J$.R(7240169, 'assert', assert, false, true), 'optionalString', false)(J$.G(7240185, J$.R(7240177, 'o', o, false, false), 'help'), J$.F(7240217, J$.R(7240193, 'format', format, false, true), false)(J$.T(7240201, 'config.options.%d.help', 21, false), J$.R(7240209, 'i', i, false, false)));
                                var env = J$.W(7240257, 'env', J$.C(387096, J$.G(7240241, J$.R(7240233, 'o', o, false, false), 'env')) ? J$._() : J$.T(7240249, [], 10, false), env, false, false);
                                if (J$.C(387104, J$.B(727402, '===', J$.U(727394, 'typeof', J$.R(7240265, 'env', env, false, false)), J$.T(7240273, 'string', 21, false)))) {
                                    env = J$.W(7240297, 'env', J$.T(7240289, [J$.R(7240281, 'env', env, false, false)], 10, false), env, false, false);
                                }
                                J$.M(7240353, J$.R(7240305, 'assert', assert, false, true), 'optionalArrayOfString', false)(J$.R(7240313, 'env', env, false, false), J$.F(7240345, J$.R(7240321, 'format', format, false, true), false)(J$.T(7240329, 'config.options.%d.env', 21, false), J$.R(7240337, 'i', i, false, false)));
                                J$.M(7240417, J$.R(7240361, 'assert', assert, false, true), 'optionalString', false)(J$.G(7240377, J$.R(7240369, 'o', o, false, false), 'helpGroup'), J$.F(7240409, J$.R(7240385, 'format', format, false, true), false)(J$.T(7240393, 'config.options.%d.helpGroup', 21, false), J$.R(7240401, 'i', i, false, false)));
                                J$.M(7240481, J$.R(7240425, 'assert', assert, false, true), 'optionalBool', false)(J$.G(7240441, J$.R(7240433, 'o', o, false, false), 'helpWrap'), J$.F(7240473, J$.R(7240449, 'format', format, false, true), false)(J$.T(7240457, 'config.options.%d.helpWrap', 21, false), J$.R(7240465, 'i', i, false, false)));
                                J$.M(7240545, J$.R(7240489, 'assert', assert, false, true), 'optionalBool', false)(J$.G(7240505, J$.R(7240497, 'o', o, false, false), 'hidden'), J$.F(7240537, J$.R(7240513, 'format', format, false, true), false)(J$.T(7240521, 'config.options.%d.hidden', 21, false), J$.R(7240529, 'i', i, false, false)));
                                if (J$.C(387112, J$.G(7240561, J$.R(7240553, 'o', o, false, false), 'name'))) {
                                    J$.P(7240601, J$.R(7240569, 'o', o, false, false), 'names', J$.T(7240593, [J$.G(7240585, J$.R(7240577, 'o', o, false, false), 'name')], 10, false));
                                } else {
                                    J$.M(7240681, J$.R(7240609, 'assert', assert, false, true), 'string', false)(J$.G(7240641, J$.G(7240625, J$.R(7240617, 'o', o, false, false), 'names'), J$.T(7240633, 0, 22, false)), J$.F(7240673, J$.R(7240649, 'format', format, false, true), false)(J$.T(7240657, 'config.options.%d.names is empty', 21, false), J$.R(7240665, 'i', i, false, false)));
                                }
                                J$.P(7240745, J$.R(7240689, 'o', o, false, false), 'key', J$.F(7240737, J$.R(7240697, 'optionKeyFromName', optionKeyFromName, false, true), false)(J$.G(7240729, J$.G(7240713, J$.R(7240705, 'o', o, false, false), 'names'), J$.T(7240721, 0, 22, false))));
                                J$.M(7240961, J$.G(7240761, J$.R(7240753, 'o', o, false, false), 'names'), 'forEach', false)(J$.T(7240953, function (n) {
                                    jalangiLabel17:
                                        while (true) {
                                            try {
                                                J$.Fe(7240929, arguments.callee, this, arguments);
                                                arguments = J$.N(7240937, 'arguments', arguments, true, false, false);
                                                n = J$.N(7240945, 'n', n, true, false, false);
                                                if (J$.C(387120, J$.G(7240793, J$.G(7240777, J$.R(7240769, 'self', self, false, false), 'optionFromName'), J$.R(7240785, 'n', n, false, false)))) {
                                                    throw J$.F(7240881, J$.I(typeof Error === 'undefined' ? Error = J$.R(7240801, 'Error', undefined, true, true) : Error = J$.R(7240801, 'Error', Error, true, true)), true)(J$.F(7240873, J$.R(7240809, 'format', format, false, true), false)(J$.T(7240817, 'option name collision: "%s" used in %j and %j', 21, false), J$.R(7240825, 'n', n, false, false), J$.G(7240857, J$.G(7240841, J$.R(7240833, 'self', self, false, false), 'optionFromName'), J$.R(7240849, 'n', n, false, false)), J$.R(7240865, 'o', o, false, false)));
                                                }
                                                J$.P(7240921, J$.G(7240897, J$.R(7240889, 'self', self, false, false), 'optionFromName'), J$.R(7240905, 'n', n, false, false), J$.R(7240913, 'o', o, false, false));
                                            } catch (J$e) {
                                                J$.Ex(7253953, J$e);
                                            } finally {
                                                if (J$.Fr(7253961))
                                                    continue jalangiLabel17;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false));
                                J$.M(7241169, J$.R(7240969, 'env', env, false, false), 'forEach', false)(J$.T(7241161, function (n) {
                                    jalangiLabel18:
                                        while (true) {
                                            try {
                                                J$.Fe(7241137, arguments.callee, this, arguments);
                                                arguments = J$.N(7241145, 'arguments', arguments, true, false, false);
                                                n = J$.N(7241153, 'n', n, true, false, false);
                                                if (J$.C(387128, J$.G(7241001, J$.G(7240985, J$.R(7240977, 'self', self, false, false), 'optionFromEnv'), J$.R(7240993, 'n', n, false, false)))) {
                                                    throw J$.F(7241089, J$.I(typeof Error === 'undefined' ? Error = J$.R(7241009, 'Error', undefined, true, true) : Error = J$.R(7241009, 'Error', Error, true, true)), true)(J$.F(7241081, J$.R(7241017, 'format', format, false, true), false)(J$.T(7241025, 'option env collision: "%s" used in %j and %j', 21, false), J$.R(7241033, 'n', n, false, false), J$.G(7241065, J$.G(7241049, J$.R(7241041, 'self', self, false, false), 'optionFromEnv'), J$.R(7241057, 'n', n, false, false)), J$.R(7241073, 'o', o, false, false)));
                                                }
                                                J$.P(7241129, J$.G(7241105, J$.R(7241097, 'self', self, false, false), 'optionFromEnv'), J$.R(7241113, 'n', n, false, false), J$.R(7241121, 'o', o, false, false));
                                            } catch (J$e) {
                                                J$.Ex(7253969, J$e);
                                            } finally {
                                                if (J$.Fr(7253977))
                                                    continue jalangiLabel18;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false));
                            }
                        } catch (J$e) {
                            J$.Ex(7253985, J$e);
                        } finally {
                            if (J$.Fr(7253993))
                                continue jalangiLabel19;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function bashCompletionSpecFromOptions(args) {
                jalangiLabel36:
                    while (true) {
                        try {
                            J$.Fe(7251105, arguments.callee, this, arguments);
                            arguments = J$.N(7251113, 'arguments', arguments, true, false, false);
                            args = J$.N(7251121, 'args', args, true, false, false);
                            J$.N(7251129, 'context', context, false, false, false);
                            J$.N(7251137, 'includeHidden', includeHidden, false, false, false);
                            J$.N(7251145, 'spec', spec, false, false, false);
                            J$.N(7251153, 'shortopts', shortopts, false, false, false);
                            J$.N(7251161, 'longopts', longopts, false, false, false);
                            J$.N(7251169, 'optargs', optargs, false, false, false);
                            J$.M(7249673, J$.R(7249649, 'assert', assert, false, true), 'object', false)(J$.R(7249657, 'args', args, false, false), J$.T(7249665, 'args', 21, false));
                            J$.M(7249713, J$.R(7249681, 'assert', assert, false, true), 'object', false)(J$.G(7249697, J$.R(7249689, 'args', args, false, false), 'options'), J$.T(7249705, 'args.options', 21, false));
                            J$.M(7249753, J$.R(7249721, 'assert', assert, false, true), 'optionalString', false)(J$.G(7249737, J$.R(7249729, 'args', args, false, false), 'context'), J$.T(7249745, 'args.context', 21, false));
                            J$.M(7249793, J$.R(7249761, 'assert', assert, false, true), 'optionalBool', false)(J$.G(7249777, J$.R(7249769, 'args', args, false, false), 'includeHidden'), J$.T(7249785, 'args.includeHidden', 21, false));
                            J$.M(7249833, J$.R(7249801, 'assert', assert, false, true), 'optionalArrayOfString', false)(J$.G(7249817, J$.R(7249809, 'args', args, false, false), 'argtypes'), J$.T(7249825, 'args.argtypes', 21, false));
                            var context = J$.W(7249865, 'context', J$.C(387896, J$.G(7249849, J$.R(7249841, 'args', args, false, false), 'context')) ? J$._() : J$.T(7249857, '', 21, false), context, false, false);
                            var includeHidden = J$.W(7249921, 'includeHidden', J$.C(387904, J$.B(728482, '===', J$.G(7249881, J$.R(7249873, 'args', args, false, false), 'includeHidden'), J$.T(7249889, undefined, 24, false))) ? J$.T(7249897, false, 23, false) : J$.G(7249913, J$.R(7249905, 'args', args, false, false), 'includeHidden'), includeHidden, false, false);
                            var spec = J$.W(7249937, 'spec', J$.T(7249929, [], 10, false), spec, false, false);
                            var shortopts = J$.W(7249953, 'shortopts', J$.T(7249945, [], 10, false), shortopts, false, false);
                            var longopts = J$.W(7249969, 'longopts', J$.T(7249961, [], 10, false), longopts, false, false);
                            var optargs = J$.W(7249985, 'optargs', J$.T(7249977, [], 10, false), optargs, false, false);
                            J$.M(7250729, J$.C(387912, J$.G(7250001, J$.R(7249993, 'args', args, false, false), 'options')) ? J$._() : J$.T(7250009, [], 10, false), 'forEach', false)(J$.T(7250721, function (o) {
                                jalangiLabel35:
                                    while (true) {
                                        try {
                                            J$.Fe(7250673, arguments.callee, this, arguments);
                                            arguments = J$.N(7250681, 'arguments', arguments, true, false, false);
                                            o = J$.N(7250689, 'o', o, true, false, false);
                                            J$.N(7250697, 'optNames', optNames, false, false, false);
                                            J$.N(7250705, 'optType', optType, false, false, false);
                                            J$.N(7250713, 'completionType', completionType, false, false, false);
                                            if (J$.C(387928, J$.C(387920, J$.B(728490, '!==', J$.G(7250025, J$.R(7250017, 'o', o, false, false), 'group'), J$.T(7250033, undefined, 24, false))) ? J$.B(728498, '!==', J$.G(7250049, J$.R(7250041, 'o', o, false, false), 'group'), J$.T(7250057, null, 25, false)) : J$._())) {
                                                return J$.Rt(7250065, undefined);
                                            }
                                            var optNames = J$.W(7250113, 'optNames', J$.C(387936, J$.G(7250081, J$.R(7250073, 'o', o, false, false), 'names')) ? J$._() : J$.T(7250105, [J$.G(7250097, J$.R(7250089, 'o', o, false, false), 'name')], 10, false), optNames, false, false);
                                            var optType = J$.W(7250153, 'optType', J$.F(7250145, J$.R(7250121, 'getOptionType', getOptionType, false, true), false)(J$.G(7250137, J$.R(7250129, 'o', o, false, false), 'type')), optType, false, false);
                                            if (J$.C(388024, J$.G(7250169, J$.R(7250161, 'optType', optType, false, false), 'takesArg'))) {
                                                var completionType = J$.W(7250225, 'completionType', J$.C(387952, J$.C(387944, J$.G(7250185, J$.R(7250177, 'o', o, false, false), 'completionType')) ? J$._() : J$.G(7250201, J$.R(7250193, 'optType', optType, false, false), 'completionType')) ? J$._() : J$.G(7250217, J$.R(7250209, 'o', o, false, false), 'type'), completionType, false, false);
                                                J$.M(7250505, J$.R(7250233, 'optNames', optNames, false, false), 'forEach', false)(J$.T(7250497, function (optName) {
                                                    jalangiLabel33:
                                                        while (true) {
                                                            try {
                                                                J$.Fe(7250473, arguments.callee, this, arguments);
                                                                arguments = J$.N(7250481, 'arguments', arguments, true, false, false);
                                                                optName = J$.N(7250489, 'optName', optName, true, false, false);
                                                                if (J$.C(387992, J$.B(728506, '===', J$.G(7250249, J$.R(7250241, 'optName', optName, false, false), 'length'), J$.T(7250257, 1, 22, false)))) {
                                                                    if (J$.C(387968, J$.C(387960, J$.R(7250265, 'includeHidden', includeHidden, false, false)) ? J$._() : J$.U(728514, '!', J$.G(7250281, J$.R(7250273, 'o', o, false, false), 'hidden')))) {
                                                                        J$.M(7250313, J$.R(7250289, 'shortopts', shortopts, false, false), 'push', false)(J$.B(728522, '+', J$.T(7250297, '-', 21, false), J$.R(7250305, 'optName', optName, false, false)));
                                                                    }
                                                                    J$.M(7250361, J$.R(7250321, 'optargs', optargs, false, false), 'push', false)(J$.B(728546, '+', J$.B(728538, '+', J$.B(728530, '+', J$.T(7250329, '-', 21, false), J$.R(7250337, 'optName', optName, false, false)), J$.T(7250345, '=', 21, false)), J$.R(7250353, 'completionType', completionType, false, false)));
                                                                } else {
                                                                    if (J$.C(387984, J$.C(387976, J$.R(7250369, 'includeHidden', includeHidden, false, false)) ? J$._() : J$.U(728554, '!', J$.G(7250385, J$.R(7250377, 'o', o, false, false), 'hidden')))) {
                                                                        J$.M(7250417, J$.R(7250393, 'longopts', longopts, false, false), 'push', false)(J$.B(728562, '+', J$.T(7250401, '--', 21, false), J$.R(7250409, 'optName', optName, false, false)));
                                                                    }
                                                                    J$.M(7250465, J$.R(7250425, 'optargs', optargs, false, false), 'push', false)(J$.B(728586, '+', J$.B(728578, '+', J$.B(728570, '+', J$.T(7250433, '--', 21, false), J$.R(7250441, 'optName', optName, false, false)), J$.T(7250449, '=', 21, false)), J$.R(7250457, 'completionType', completionType, false, false)));
                                                                }
                                                            } catch (J$e) {
                                                                J$.Ex(7254209, J$e);
                                                            } finally {
                                                                if (J$.Fr(7254217))
                                                                    continue jalangiLabel33;
                                                                else
                                                                    return J$.Ra();
                                                            }
                                                        }
                                                }, 12, false));
                                            } else {
                                                J$.M(7250665, J$.R(7250513, 'optNames', optNames, false, false), 'forEach', false)(J$.T(7250657, function (optName) {
                                                    jalangiLabel34:
                                                        while (true) {
                                                            try {
                                                                J$.Fe(7250633, arguments.callee, this, arguments);
                                                                arguments = J$.N(7250641, 'arguments', arguments, true, false, false);
                                                                optName = J$.N(7250649, 'optName', optName, true, false, false);
                                                                if (J$.C(388016, J$.C(388000, J$.R(7250521, 'includeHidden', includeHidden, false, false)) ? J$._() : J$.U(728594, '!', J$.G(7250537, J$.R(7250529, 'o', o, false, false), 'hidden')))) {
                                                                    if (J$.C(388008, J$.B(728602, '===', J$.G(7250553, J$.R(7250545, 'optName', optName, false, false), 'length'), J$.T(7250561, 1, 22, false)))) {
                                                                        J$.M(7250593, J$.R(7250569, 'shortopts', shortopts, false, false), 'push', false)(J$.B(728610, '+', J$.T(7250577, '-', 21, false), J$.R(7250585, 'optName', optName, false, false)));
                                                                    } else {
                                                                        J$.M(7250625, J$.R(7250601, 'longopts', longopts, false, false), 'push', false)(J$.B(728618, '+', J$.T(7250609, '--', 21, false), J$.R(7250617, 'optName', optName, false, false)));
                                                                    }
                                                                }
                                                            } catch (J$e) {
                                                                J$.Ex(7254225, J$e);
                                                            } finally {
                                                                if (J$.Fr(7254233))
                                                                    continue jalangiLabel34;
                                                                else
                                                                    return J$.Ra();
                                                            }
                                                        }
                                                }, 12, false));
                                            }
                                        } catch (J$e) {
                                            J$.Ex(7254241, J$e);
                                        } finally {
                                            if (J$.Fr(7254249))
                                                continue jalangiLabel35;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            J$.M(7250809, J$.R(7250737, 'spec', spec, false, false), 'push', false)(J$.F(7250801, J$.R(7250745, 'format', format, false, true), false)(J$.T(7250753, 'local cmd%s_shortopts="%s"', 21, false), J$.R(7250761, 'context', context, false, false), J$.M(7250793, J$.M(7250777, J$.R(7250769, 'shortopts', shortopts, false, false), 'sort', false)(), 'join', false)(J$.T(7250785, ' ', 21, false))));
                            J$.M(7250889, J$.R(7250817, 'spec', spec, false, false), 'push', false)(J$.F(7250881, J$.R(7250825, 'format', format, false, true), false)(J$.T(7250833, 'local cmd%s_longopts="%s"', 21, false), J$.R(7250841, 'context', context, false, false), J$.M(7250873, J$.M(7250857, J$.R(7250849, 'longopts', longopts, false, false), 'sort', false)(), 'join', false)(J$.T(7250865, ' ', 21, false))));
                            J$.M(7250969, J$.R(7250897, 'spec', spec, false, false), 'push', false)(J$.F(7250961, J$.R(7250905, 'format', format, false, true), false)(J$.T(7250913, 'local cmd%s_optargs="%s"', 21, false), J$.R(7250921, 'context', context, false, false), J$.M(7250953, J$.M(7250937, J$.R(7250929, 'optargs', optargs, false, false), 'sort', false)(), 'join', false)(J$.T(7250945, ' ', 21, false))));
                            if (J$.C(388032, J$.G(7250985, J$.R(7250977, 'args', args, false, false), 'argtypes'))) {
                                J$.M(7251065, J$.R(7250993, 'spec', spec, false, false), 'push', false)(J$.F(7251057, J$.R(7251001, 'format', format, false, true), false)(J$.T(7251009, 'local cmd%s_argtypes="%s"', 21, false), J$.R(7251017, 'context', context, false, false), J$.M(7251049, J$.G(7251033, J$.R(7251025, 'args', args, false, false), 'argtypes'), 'join', false)(J$.T(7251041, ' ', 21, false))));
                            }
                            return J$.Rt(7251097, J$.M(7251089, J$.R(7251073, 'spec', spec, false, false), 'join', false)(J$.T(7251081, '\n', 21, false)));
                        } catch (J$e) {
                            J$.Ex(7254257, J$e);
                        } finally {
                            if (J$.Fr(7254265))
                                continue jalangiLabel36;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function bashCompletionFromOptions(args) {
                jalangiLabel37:
                    while (true) {
                        try {
                            J$.Fe(7251609, arguments.callee, this, arguments);
                            arguments = J$.N(7251617, 'arguments', arguments, true, false, false);
                            args = J$.N(7251625, 'args', args, true, false, false);
                            J$.N(7251633, 'data', data, false, false, false);
                            J$.N(7251641, 'template', template, false, false, false);
                            J$.M(7251201, J$.R(7251177, 'assert', assert, false, true), 'object', false)(J$.R(7251185, 'args', args, false, false), J$.T(7251193, 'args', 21, false));
                            J$.M(7251241, J$.R(7251209, 'assert', assert, false, true), 'object', false)(J$.G(7251225, J$.R(7251217, 'args', args, false, false), 'options'), J$.T(7251233, 'args.options', 21, false));
                            J$.M(7251281, J$.R(7251249, 'assert', assert, false, true), 'string', false)(J$.G(7251265, J$.R(7251257, 'args', args, false, false), 'name'), J$.T(7251273, 'args.name', 21, false));
                            J$.M(7251321, J$.R(7251289, 'assert', assert, false, true), 'optionalString', false)(J$.G(7251305, J$.R(7251297, 'args', args, false, false), 'specExtra'), J$.T(7251313, 'args.specExtra', 21, false));
                            J$.M(7251361, J$.R(7251329, 'assert', assert, false, true), 'optionalArrayOfString', false)(J$.G(7251345, J$.R(7251337, 'args', args, false, false), 'argtypes'), J$.T(7251353, 'args.argtypes', 21, false));
                            var data = J$.W(7251465, 'data', J$.T(7251457, {
                                name: J$.G(7251377, J$.R(7251369, 'args', args, false, false), 'name'),
                                date: J$.F(7251393, J$.I(typeof Date === 'undefined' ? Date = J$.R(7251385, 'Date', undefined, true, true) : Date = J$.R(7251385, 'Date', Date, true, true)), true)(),
                                spec: J$.F(7251449, J$.R(7251401, 'bashCompletionSpecFromOptions', bashCompletionSpecFromOptions, false, true), false)(J$.T(7251441, {
                                    options: J$.G(7251417, J$.R(7251409, 'args', args, false, false), 'options'),
                                    argtypes: J$.G(7251433, J$.R(7251425, 'args', args, false, false), 'argtypes')
                                }, 11, false))
                            }, 11, false), data, false, false);
                            if (J$.C(388040, J$.G(7251481, J$.R(7251473, 'args', args, false, false), 'specExtra'))) {
                                J$.A(7251521, J$.R(7251489, 'data', data, false, false), 'spec', '+')(J$.B(728626, '+', J$.T(7251497, '\n\n', 21, false), J$.G(7251513, J$.R(7251505, 'args', args, false, false), 'specExtra')));
                            }
                            var template = J$.W(7251561, 'template', J$.M(7251553, J$.R(7251529, 'fs', fs, false, true), 'readFileSync', false)(J$.R(7251537, 'BASH_COMPLETION_TEMPLATE_PATH', BASH_COMPLETION_TEMPLATE_PATH, false, true), J$.T(7251545, 'utf8', 21, false)), template, false, false);
                            return J$.Rt(7251601, J$.F(7251593, J$.R(7251569, 'renderTemplate', renderTemplate, false, true), false)(J$.R(7251577, 'template', template, false, false), J$.R(7251585, 'data', data, false, false)));
                        } catch (J$e) {
                            J$.Ex(7254273, J$e);
                        } finally {
                            if (J$.Fr(7254281))
                                continue jalangiLabel37;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function createParser(config) {
                jalangiLabel38:
                    while (true) {
                        try {
                            J$.Fe(7251681, arguments.callee, this, arguments);
                            arguments = J$.N(7251689, 'arguments', arguments, true, false, false);
                            config = J$.N(7251697, 'config', config, true, false, false);
                            return J$.Rt(7251673, J$.F(7251665, J$.R(7251649, 'Parser', Parser, false, true), true)(J$.R(7251657, 'config', config, false, false)));
                        } catch (J$e) {
                            J$.Ex(7254289, J$e);
                        } finally {
                            if (J$.Fr(7254297))
                                continue jalangiLabel38;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function parse(config) {
                jalangiLabel39:
                    while (true) {
                        try {
                            J$.Fe(7251993, arguments.callee, this, arguments);
                            arguments = J$.N(7252001, 'arguments', arguments, true, false, false);
                            config = J$.N(7252009, 'config', config, true, false, false);
                            J$.N(7252017, 'argv', argv, false, false, false);
                            J$.N(7252025, 'env', env, false, false, false);
                            J$.N(7252033, 'parser', parser, false, false, false);
                            J$.M(7251729, J$.R(7251705, 'assert', assert, false, true), 'object', false)(J$.R(7251713, 'config', config, false, false), J$.T(7251721, 'config', 21, false));
                            J$.M(7251769, J$.R(7251737, 'assert', assert, false, true), 'optionalArrayOfString', false)(J$.G(7251753, J$.R(7251745, 'config', config, false, false), 'argv'), J$.T(7251761, 'config.argv', 21, false));
                            J$.M(7251809, J$.R(7251777, 'assert', assert, false, true), 'optionalObject', false)(J$.G(7251793, J$.R(7251785, 'config', config, false, false), 'env'), J$.T(7251801, 'config.env', 21, false));
                            var config = J$.W(7251841, 'config', J$.F(7251833, J$.R(7251817, 'shallowCopy', shallowCopy, false, true), false)(J$.R(7251825, 'config', config, false, false)), config, false, false);
                            var argv = J$.W(7251865, 'argv', J$.G(7251857, J$.R(7251849, 'config', config, false, false), 'argv'), argv, false, false);
                            J$.B(728634, 'delete', J$.R(7251873, 'config', config, false, false), 'argv');
                            var env = J$.W(7251897, 'env', J$.G(7251889, J$.R(7251881, 'config', config, false, false), 'env'), env, false, false);
                            J$.B(728642, 'delete', J$.R(7251905, 'config', config, false, false), 'env');
                            var parser = J$.W(7251937, 'parser', J$.F(7251929, J$.R(7251913, 'Parser', Parser, false, true), true)(J$.R(7251921, 'config', config, false, false)), parser, false, false);
                            return J$.Rt(7251985, J$.M(7251977, J$.R(7251945, 'parser', parser, false, false), 'parse', false)(J$.T(7251969, {
                                argv: J$.R(7251953, 'argv', argv, false, false),
                                env: J$.R(7251961, 'env', env, false, false)
                            }, 11, false)));
                        } catch (J$e) {
                            J$.Ex(7254305, J$e);
                        } finally {
                            if (J$.Fr(7254313))
                                continue jalangiLabel39;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function addOptionType(optionType) {
                jalangiLabel40:
                    while (true) {
                        try {
                            J$.Fe(7252465, arguments.callee, this, arguments);
                            arguments = J$.N(7252473, 'arguments', arguments, true, false, false);
                            optionType = J$.N(7252481, 'optionType', optionType, true, false, false);
                            J$.M(7252065, J$.R(7252041, 'assert', assert, false, true), 'object', false)(J$.R(7252049, 'optionType', optionType, false, false), J$.T(7252057, 'optionType', 21, false));
                            J$.M(7252105, J$.R(7252073, 'assert', assert, false, true), 'string', false)(J$.G(7252089, J$.R(7252081, 'optionType', optionType, false, false), 'name'), J$.T(7252097, 'optionType.name', 21, false));
                            J$.M(7252145, J$.R(7252113, 'assert', assert, false, true), 'bool', false)(J$.G(7252129, J$.R(7252121, 'optionType', optionType, false, false), 'takesArg'), J$.T(7252137, 'optionType.takesArg', 21, false));
                            if (J$.C(388048, J$.G(7252161, J$.R(7252153, 'optionType', optionType, false, false), 'takesArg'))) {
                                J$.M(7252201, J$.R(7252169, 'assert', assert, false, true), 'string', false)(J$.G(7252185, J$.R(7252177, 'optionType', optionType, false, false), 'helpArg'), J$.T(7252193, 'optionType.helpArg', 21, false));
                            }
                            J$.M(7252241, J$.R(7252209, 'assert', assert, false, true), 'func', false)(J$.G(7252225, J$.R(7252217, 'optionType', optionType, false, false), 'parseArg'), J$.T(7252233, 'optionType.parseArg', 21, false));
                            J$.M(7252281, J$.R(7252249, 'assert', assert, false, true), 'optionalBool', false)(J$.G(7252265, J$.R(7252257, 'optionType', optionType, false, false), 'array'), J$.T(7252273, 'optionType.array', 21, false));
                            J$.M(7252321, J$.R(7252289, 'assert', assert, false, true), 'optionalBool', false)(J$.G(7252305, J$.R(7252297, 'optionType', optionType, false, false), 'arrayFlatten'), J$.T(7252313, 'optionType.arrayFlatten', 21, false));
                            J$.P(7252457, J$.R(7252329, 'optionTypes', optionTypes, false, true), J$.G(7252345, J$.R(7252337, 'optionType', optionType, false, false), 'name'), J$.T(7252449, {
                                takesArg: J$.G(7252361, J$.R(7252353, 'optionType', optionType, false, false), 'takesArg'),
                                helpArg: J$.G(7252377, J$.R(7252369, 'optionType', optionType, false, false), 'helpArg'),
                                parseArg: J$.G(7252393, J$.R(7252385, 'optionType', optionType, false, false), 'parseArg'),
                                array: J$.G(7252409, J$.R(7252401, 'optionType', optionType, false, false), 'array'),
                                arrayFlatten: J$.G(7252425, J$.R(7252417, 'optionType', optionType, false, false), 'arrayFlatten'),
                                default: J$.G(7252441, J$.R(7252433, 'optionType', optionType, false, false), 'default')
                            }, 11, false));
                        } catch (J$e) {
                            J$.Ex(7254321, J$e);
                        } finally {
                            if (J$.Fr(7254329))
                                continue jalangiLabel40;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function getOptionType(name) {
                jalangiLabel41:
                    while (true) {
                        try {
                            J$.Fe(7252553, arguments.callee, this, arguments);
                            arguments = J$.N(7252561, 'arguments', arguments, true, false, false);
                            name = J$.N(7252569, 'name', name, true, false, false);
                            J$.M(7252513, J$.R(7252489, 'assert', assert, false, true), 'string', false)(J$.R(7252497, 'name', name, false, false), J$.T(7252505, 'name', 21, false));
                            return J$.Rt(7252545, J$.G(7252537, J$.R(7252521, 'optionTypes', optionTypes, false, true), J$.R(7252529, 'name', name, false, false)));
                        } catch (J$e) {
                            J$.Ex(7254337, J$e);
                        } finally {
                            if (J$.Fr(7254345))
                                continue jalangiLabel41;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function synopsisFromOpt(o) {
                jalangiLabel43:
                    while (true) {
                        try {
                            J$.Fe(7253089, arguments.callee, this, arguments);
                            arguments = J$.N(7253097, 'arguments', arguments, true, false, false);
                            o = J$.N(7253105, 'o', o, true, false, false);
                            J$.N(7253113, 'names', names, false, false, false);
                            J$.N(7253121, 'type', type, false, false, false);
                            J$.N(7253129, 'helpArg', helpArg, false, false, false);
                            J$.N(7253137, 'parts', parts, false, false, false);
                            J$.M(7252601, J$.R(7252577, 'assert', assert, false, true), 'object', false)(J$.R(7252585, 'o', o, false, false), J$.T(7252593, 'o', 21, false));
                            if (J$.C(388056, J$.M(7252625, J$.R(7252609, 'o', o, false, false), 'hasOwnProperty', false)(J$.T(7252617, 'group', 21, false)))) {
                                return J$.Rt(7252641, J$.T(7252633, null, 25, false));
                            }
                            var names = J$.W(7252689, 'names', J$.C(388064, J$.G(7252657, J$.R(7252649, 'o', o, false, false), 'names')) ? J$._() : J$.T(7252681, [J$.G(7252673, J$.R(7252665, 'o', o, false, false), 'name')], 10, false), names, false, false);
                            var type = J$.W(7252729, 'type', J$.F(7252721, J$.R(7252697, 'getOptionType', getOptionType, false, true), false)(J$.G(7252713, J$.R(7252705, 'o', o, false, false), 'type')), type, false, false);
                            var helpArg = J$.W(7252785, 'helpArg', J$.C(388088, J$.C(388080, J$.G(7252745, J$.R(7252737, 'o', o, false, false), 'helpArg')) ? J$._() : J$.C(388072, J$.R(7252753, 'type', type, false, false)) ? J$.G(7252769, J$.R(7252761, 'type', type, false, false), 'helpArg') : J$._()) ? J$._() : J$.T(7252777, 'ARG', 21, false), helpArg, false, false);
                            var parts = J$.W(7252801, 'parts', J$.T(7252793, [], 10, false), parts, false, false);
                            J$.M(7253033, J$.R(7252809, 'names', names, false, false), 'forEach', false)(J$.T(7253025, function (name) {
                                jalangiLabel42:
                                    while (true) {
                                        try {
                                            J$.Fe(7252993, arguments.callee, this, arguments);
                                            arguments = J$.N(7253001, 'arguments', arguments, true, false, false);
                                            name = J$.N(7253009, 'name', name, true, false, false);
                                            J$.N(7253017, 'part', part, false, false, false);
                                            var part = J$.W(7252865, 'part', J$.B(728658, '+', J$.C(388096, J$.B(728650, '===', J$.G(7252825, J$.R(7252817, 'name', name, false, false), 'length'), J$.T(7252833, 1, 22, false))) ? J$.T(7252841, '-', 21, false) : J$.T(7252849, '--', 21, false), J$.R(7252857, 'name', name, false, false)), part, false, false);
                                            if (J$.C(388120, J$.C(388104, J$.R(7252873, 'type', type, false, false)) ? J$.G(7252889, J$.R(7252881, 'type', type, false, false), 'takesArg') : J$._())) {
                                                part = J$.W(7252961, 'part', J$.B(728690, '+', J$.R(7252953, 'part', part, false, false), J$.C(388112, J$.B(728666, '===', J$.G(7252905, J$.R(7252897, 'name', name, false, false), 'length'), J$.T(7252913, 1, 22, false))) ? J$.B(728674, '+', J$.T(7252921, ' ', 21, false), J$.R(7252929, 'helpArg', helpArg, false, false)) : J$.B(728682, '+', J$.T(7252937, '=', 21, false), J$.R(7252945, 'helpArg', helpArg, false, false))), part, false, false);
                                            }
                                            J$.M(7252985, J$.R(7252969, 'parts', parts, false, false), 'push', false)(J$.R(7252977, 'part', part, false, false));
                                        } catch (J$e) {
                                            J$.Ex(7254353, J$e);
                                        } finally {
                                            if (J$.Fr(7254361))
                                                continue jalangiLabel42;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            return J$.Rt(7253081, J$.B(728706, '+', J$.B(728698, '+', J$.T(7253041, '[ ', 21, false), J$.M(7253065, J$.R(7253049, 'parts', parts, false, false), 'join', false)(J$.T(7253057, ' | ', 21, false))), J$.T(7253073, ' ]', 21, false)));
                        } catch (J$e) {
                            J$.Ex(7254369, J$e);
                        } finally {
                            if (J$.Fr(7254377))
                                continue jalangiLabel43;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(7253297, 'assert', assert, false, false, false);
            J$.N(7253305, 'format', format, false, false, false);
            J$.N(7253313, 'fs', fs, false, false, false);
            J$.N(7253321, 'path', path, false, false, false);
            J$.N(7253329, 'DEBUG', DEBUG, false, false, false);
            J$.N(7253337, 'debug', debug, false, false, false);
            renderTemplate = J$.N(7253353, 'renderTemplate', J$.T(7253345, renderTemplate, 12, false), true, false, false);
            shallowCopy = J$.N(7253369, 'shallowCopy', J$.T(7253361, shallowCopy, 12, false), true, false, false);
            space = J$.N(7253385, 'space', J$.T(7253377, space, 12, false), true, false, false);
            makeIndent = J$.N(7253401, 'makeIndent', J$.T(7253393, makeIndent, 12, false), true, false, false);
            textwrap = J$.N(7253417, 'textwrap', J$.T(7253409, textwrap, 12, false), true, false, false);
            optionKeyFromName = J$.N(7253433, 'optionKeyFromName', J$.T(7253425, optionKeyFromName, 12, false), true, false, false);
            parseBool = J$.N(7253449, 'parseBool', J$.T(7253441, parseBool, 12, false), true, false, false);
            parseString = J$.N(7253465, 'parseString', J$.T(7253457, parseString, 12, false), true, false, false);
            parseNumber = J$.N(7253481, 'parseNumber', J$.T(7253473, parseNumber, 12, false), true, false, false);
            parseInteger = J$.N(7253497, 'parseInteger', J$.T(7253489, parseInteger, 12, false), true, false, false);
            parsePositiveInteger = J$.N(7253513, 'parsePositiveInteger', J$.T(7253505, parsePositiveInteger, 12, false), true, false, false);
            parseDate = J$.N(7253529, 'parseDate', J$.T(7253521, parseDate, 12, false), true, false, false);
            J$.N(7253537, 'optionTypes', optionTypes, false, false, false);
            Parser = J$.N(7253553, 'Parser', J$.T(7253545, Parser, 12, false), true, false, false);
            J$.N(7253561, 'BASH_COMPLETION_TEMPLATE_PATH', BASH_COMPLETION_TEMPLATE_PATH, false, false, false);
            bashCompletionSpecFromOptions = J$.N(7253577, 'bashCompletionSpecFromOptions', J$.T(7253569, bashCompletionSpecFromOptions, 12, false), true, false, false);
            bashCompletionFromOptions = J$.N(7253593, 'bashCompletionFromOptions', J$.T(7253585, bashCompletionFromOptions, 12, false), true, false, false);
            createParser = J$.N(7253609, 'createParser', J$.T(7253601, createParser, 12, false), true, false, false);
            parse = J$.N(7253625, 'parse', J$.T(7253617, parse, 12, false), true, false, false);
            addOptionType = J$.N(7253641, 'addOptionType', J$.T(7253633, addOptionType, 12, false), true, false, false);
            getOptionType = J$.N(7253657, 'getOptionType', J$.T(7253649, getOptionType, 12, false), true, false, false);
            synopsisFromOpt = J$.N(7253673, 'synopsisFromOpt', J$.T(7253665, synopsisFromOpt, 12, false), true, false, false);
            var assert = J$.W(7236113, 'assert', J$.F(7236105, J$.I(typeof require === 'undefined' ? require = J$.R(7236089, 'require', undefined, true, true) : require = J$.R(7236089, 'require', require, true, true)), false)(J$.T(7236097, 'assert-plus', 21, false)), assert, false, true);
            var format = J$.W(7236153, 'format', J$.G(7236145, J$.F(7236137, J$.I(typeof require === 'undefined' ? require = J$.R(7236121, 'require', undefined, true, true) : require = J$.R(7236121, 'require', require, true, true)), false)(J$.T(7236129, 'util', 21, false)), 'format'), format, false, true);
            var fs = J$.W(7236185, 'fs', J$.F(7236177, J$.I(typeof require === 'undefined' ? require = J$.R(7236161, 'require', undefined, true, true) : require = J$.R(7236161, 'require', require, true, true)), false)(J$.T(7236169, 'fs', 21, false)), fs, false, true);
            var path = J$.W(7236217, 'path', J$.F(7236209, J$.I(typeof require === 'undefined' ? require = J$.R(7236193, 'require', undefined, true, true) : require = J$.R(7236193, 'require', require, true, true)), false)(J$.T(7236201, 'path', 21, false)), path, false, true);
            var DEBUG = J$.W(7236233, 'DEBUG', J$.T(7236225, true, 23, false), DEBUG, false, true);
            if (J$.C(386880, J$.R(7236241, 'DEBUG', DEBUG, false, true))) {
                var debug = J$.W(7236265, 'debug', J$.G(7236257, J$.I(typeof console === 'undefined' ? console = J$.R(7236249, 'console', undefined, true, true) : console = J$.R(7236249, 'console', console, true, true)), 'warn'), debug, false, true);
            } else {
                var debug = J$.W(7236297, 'debug', J$.T(7236289, function () {
                    jalangiLabel0:
                        while (true) {
                            try {
                                J$.Fe(7236273, arguments.callee, this, arguments);
                                arguments = J$.N(7236281, 'arguments', arguments, true, false, false);
                            } catch (J$e) {
                                J$.Ex(7253681, J$e);
                            } finally {
                                if (J$.Fr(7253689))
                                    continue jalangiLabel0;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false), debug, false, true);
            }
            var optionTypes = J$.W(7239193, 'optionTypes', J$.T(7239185, {
                bool: J$.T(7238785, {
                    takesArg: J$.T(7238769, false, 23, false),
                    parseArg: J$.R(7238777, 'parseBool', parseBool, false, true)
                }, 11, false),
                string: J$.T(7238817, {
                    takesArg: J$.T(7238793, true, 23, false),
                    helpArg: J$.T(7238801, 'ARG', 21, false),
                    parseArg: J$.R(7238809, 'parseString', parseString, false, true)
                }, 11, false),
                number: J$.T(7238849, {
                    takesArg: J$.T(7238825, true, 23, false),
                    helpArg: J$.T(7238833, 'NUM', 21, false),
                    parseArg: J$.R(7238841, 'parseNumber', parseNumber, false, true)
                }, 11, false),
                integer: J$.T(7238881, {
                    takesArg: J$.T(7238857, true, 23, false),
                    helpArg: J$.T(7238865, 'INT', 21, false),
                    parseArg: J$.R(7238873, 'parseInteger', parseInteger, false, true)
                }, 11, false),
                positiveInteger: J$.T(7238913, {
                    takesArg: J$.T(7238889, true, 23, false),
                    helpArg: J$.T(7238897, 'INT', 21, false),
                    parseArg: J$.R(7238905, 'parsePositiveInteger', parsePositiveInteger, false, true)
                }, 11, false),
                date: J$.T(7238945, {
                    takesArg: J$.T(7238921, true, 23, false),
                    helpArg: J$.T(7238929, 'DATE', 21, false),
                    parseArg: J$.R(7238937, 'parseDate', parseDate, false, true)
                }, 11, false),
                arrayOfBool: J$.T(7238977, {
                    takesArg: J$.T(7238953, false, 23, false),
                    array: J$.T(7238961, true, 23, false),
                    parseArg: J$.R(7238969, 'parseBool', parseBool, false, true)
                }, 11, false),
                arrayOfString: J$.T(7239017, {
                    takesArg: J$.T(7238985, true, 23, false),
                    helpArg: J$.T(7238993, 'ARG', 21, false),
                    array: J$.T(7239001, true, 23, false),
                    parseArg: J$.R(7239009, 'parseString', parseString, false, true)
                }, 11, false),
                arrayOfNumber: J$.T(7239057, {
                    takesArg: J$.T(7239025, true, 23, false),
                    helpArg: J$.T(7239033, 'NUM', 21, false),
                    array: J$.T(7239041, true, 23, false),
                    parseArg: J$.R(7239049, 'parseNumber', parseNumber, false, true)
                }, 11, false),
                arrayOfInteger: J$.T(7239097, {
                    takesArg: J$.T(7239065, true, 23, false),
                    helpArg: J$.T(7239073, 'INT', 21, false),
                    array: J$.T(7239081, true, 23, false),
                    parseArg: J$.R(7239089, 'parseInteger', parseInteger, false, true)
                }, 11, false),
                arrayOfPositiveInteger: J$.T(7239137, {
                    takesArg: J$.T(7239105, true, 23, false),
                    helpArg: J$.T(7239113, 'INT', 21, false),
                    array: J$.T(7239121, true, 23, false),
                    parseArg: J$.R(7239129, 'parsePositiveInteger', parsePositiveInteger, false, true)
                }, 11, false),
                arrayOfDate: J$.T(7239177, {
                    takesArg: J$.T(7239145, true, 23, false),
                    helpArg: J$.T(7239153, 'INT', 21, false),
                    array: J$.T(7239161, true, 23, false),
                    parseArg: J$.R(7239169, 'parseDate', parseDate, false, true)
                }, 11, false)
            }, 11, false), optionTypes, false, true);
            J$.P(7241329, J$.G(7241241, J$.R(7241233, 'Parser', Parser, false, true), 'prototype'), 'optionTakesArg', J$.T(7241321, function optionTakesArg(option) {
                jalangiLabel20:
                    while (true) {
                        try {
                            J$.Fe(7241297, arguments.callee, this, arguments);
                            arguments = J$.N(7241305, 'arguments', arguments, true, false, false);
                            option = J$.N(7241313, 'option', option, true, false, false);
                            return J$.Rt(7241289, J$.G(7241281, J$.G(7241273, J$.R(7241249, 'optionTypes', optionTypes, false, true), J$.G(7241265, J$.R(7241257, 'option', option, false, false), 'type')), 'takesArg'));
                        } catch (J$e) {
                            J$.Ex(7254001, J$e);
                        } finally {
                            if (J$.Fr(7254009))
                                continue jalangiLabel20;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(7245369, J$.G(7241345, J$.R(7241337, 'Parser', Parser, false, true), 'prototype'), 'parse', J$.T(7245361, function parse(inputs) {
                jalangiLabel24:
                    while (true) {
                        try {
                            J$.Fe(7245185, arguments.callee, this, arguments);
                            function addOpt(option, optstr, key, val, from) {
                                jalangiLabel21:
                                    while (true) {
                                        try {
                                            J$.Fe(7242217, arguments.callee, this, arguments);
                                            arguments = J$.N(7242225, 'arguments', arguments, true, false, false);
                                            option = J$.N(7242233, 'option', option, true, false, false);
                                            optstr = J$.N(7242241, 'optstr', optstr, true, false, false);
                                            key = J$.N(7242249, 'key', key, true, false, false);
                                            val = J$.N(7242257, 'val', val, true, false, false);
                                            from = J$.N(7242265, 'from', from, true, false, false);
                                            J$.N(7242273, 'type', type, false, false, false);
                                            J$.N(7242281, 'parsedVal', parsedVal, false, false, false);
                                            J$.N(7242289, 'i', i, false, false, false);
                                            J$.N(7242297, 'item', item, false, false, false);
                                            var type = J$.W(7241801, 'type', J$.G(7241793, J$.R(7241769, 'optionTypes', optionTypes, false, true), J$.G(7241785, J$.R(7241777, 'option', option, false, false), 'type')), type, false, false);
                                            var parsedVal = J$.W(7241849, 'parsedVal', J$.M(7241841, J$.R(7241809, 'type', type, false, false), 'parseArg', false)(J$.R(7241817, 'option', option, false, false), J$.R(7241825, 'optstr', optstr, false, false), J$.R(7241833, 'val', val, false, false)), parsedVal, false, false);
                                            if (J$.C(387216, J$.G(7241865, J$.R(7241857, 'type', type, false, false), 'array'))) {
                                                if (J$.C(387184, J$.U(727426, '!', J$.G(7241889, J$.R(7241873, 'opts', opts, false, false), J$.R(7241881, 'key', key, false, false))))) {
                                                    J$.P(7241921, J$.R(7241897, 'opts', opts, false, false), J$.R(7241905, 'key', key, false, false), J$.T(7241913, [], 10, false));
                                                }
                                                if (J$.C(387208, J$.C(387192, J$.G(7241937, J$.R(7241929, 'type', type, false, false), 'arrayFlatten')) ? J$.M(7241961, J$.I(typeof Array === 'undefined' ? Array = J$.R(7241945, 'Array', undefined, true, true) : Array = J$.R(7241945, 'Array', Array, true, true)), 'isArray', false)(J$.R(7241953, 'parsedVal', parsedVal, false, false)) : J$._())) {
                                                    for (var i = J$.W(7241977, 'i', J$.T(7241969, 0, 22, false), i, false, false); J$.C(387200, J$.B(727434, '<', J$.R(7241985, 'i', i, false, false), J$.G(7242001, J$.R(7241993, 'parsedVal', parsedVal, false, false), 'length'))); J$.B(727458, '-', i = J$.W(7242017, 'i', J$.B(727450, '+', J$.U(727442, '+', J$.R(7242009, 'i', i, false, false)), 1), i, false, false), 1)) {
                                                        J$.M(7242073, J$.G(7242041, J$.R(7242025, 'opts', opts, false, false), J$.R(7242033, 'key', key, false, false)), 'push', false)(J$.G(7242065, J$.R(7242049, 'parsedVal', parsedVal, false, false), J$.R(7242057, 'i', i, false, false)));
                                                    }
                                                } else {
                                                    J$.M(7242113, J$.G(7242097, J$.R(7242081, 'opts', opts, false, false), J$.R(7242089, 'key', key, false, false)), 'push', false)(J$.R(7242105, 'parsedVal', parsedVal, false, false));
                                                }
                                            } else {
                                                J$.P(7242145, J$.R(7242121, 'opts', opts, false, false), J$.R(7242129, 'key', key, false, false), J$.R(7242137, 'parsedVal', parsedVal, false, false));
                                            }
                                            var item = J$.W(7242185, 'item', J$.T(7242177, {
                                                key: J$.R(7242153, 'key', key, false, false),
                                                value: J$.R(7242161, 'parsedVal', parsedVal, false, false),
                                                from: J$.R(7242169, 'from', from, false, false)
                                            }, 11, false), item, false, false);
                                            J$.M(7242209, J$.R(7242193, '_order', _order, false, false), 'push', false)(J$.R(7242201, 'item', item, false, false));
                                        } catch (J$e) {
                                            J$.Ex(7254017, J$e);
                                        } finally {
                                            if (J$.Fr(7254025))
                                                continue jalangiLabel21;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }
                            arguments = J$.N(7245193, 'arguments', arguments, true, false, false);
                            inputs = J$.N(7245201, 'inputs', inputs, true, false, false);
                            J$.N(7245209, 'self', self, false, false, false);
                            J$.N(7245217, 'argv', argv, false, false, false);
                            J$.N(7245225, 'slice', slice, false, false, false);
                            J$.N(7245233, 'args', args, false, false, false);
                            J$.N(7245241, 'env', env, false, false, false);
                            J$.N(7245249, 'opts', opts, false, false, false);
                            J$.N(7245257, '_order', _order, false, false, false);
                            addOpt = J$.N(7245273, 'addOpt', J$.T(7245265, addOpt, 12, false), true, false, false);
                            J$.N(7245281, '_args', _args, false, false, false);
                            J$.N(7245289, 'i', i, false, false, false);
                            J$.N(7245297, 'arg', arg, false, false, false);
                            J$.N(7245305, 'name', name, false, false, false);
                            J$.N(7245313, 'val', val, false, false, false);
                            J$.N(7245321, 'idx', idx, false, false, false);
                            J$.N(7245329, 'option', option, false, false, false);
                            J$.N(7245337, 'takesArg', takesArg, false, false, false);
                            J$.N(7245345, 'j', j, false, false, false);
                            J$.N(7245353, 'allFound', allFound, false, false, false);
                            var self = J$.W(7241361, 'self', J$.R(7241353, 'this', this, false, false), self, false, false);
                            if (J$.C(387144, J$.M(7241401, J$.I(typeof Array === 'undefined' ? Array = J$.R(7241369, 'Array', undefined, true, true) : Array = J$.R(7241369, 'Array', Array, true, true)), 'isArray', false)(J$.G(7241393, J$.I(typeof arguments === 'undefined' ? arguments = J$.R(7241377, 'arguments', undefined, true, true) : arguments = J$.R(7241377, 'arguments', arguments, true, true)), J$.T(7241385, 0, 22, false))))) {
                                inputs = J$.W(7241465, 'inputs', J$.T(7241457, {
                                    argv: J$.G(7241425, J$.I(typeof arguments === 'undefined' ? arguments = J$.R(7241409, 'arguments', undefined, true, true) : arguments = J$.R(7241409, 'arguments', arguments, true, true)), J$.T(7241417, 0, 22, false)),
                                    slice: J$.G(7241449, J$.I(typeof arguments === 'undefined' ? arguments = J$.R(7241433, 'arguments', undefined, true, true) : arguments = J$.R(7241433, 'arguments', arguments, true, true)), J$.T(7241441, 1, 22, false))
                                }, 11, false), inputs, false, false);
                            }
                            J$.M(7241497, J$.R(7241473, 'assert', assert, false, true), 'optionalObject', false)(J$.R(7241481, 'inputs', inputs, false, false), J$.T(7241489, 'inputs', 21, false));
                            if (J$.C(387152, J$.U(727410, '!', J$.R(7241505, 'inputs', inputs, false, false)))) {
                                inputs = J$.W(7241521, 'inputs', J$.T(7241513, {}, 11, false), inputs, false, false);
                            }
                            J$.M(7241561, J$.R(7241529, 'assert', assert, false, true), 'optionalArrayOfString', false)(J$.G(7241545, J$.R(7241537, 'inputs', inputs, false, false), 'argv'), J$.T(7241553, 'inputs.argv', 21, false));
                            var argv = J$.W(7241601, 'argv', J$.C(387160, J$.G(7241577, J$.R(7241569, 'inputs', inputs, false, false), 'argv')) ? J$._() : J$.G(7241593, J$.I(typeof process === 'undefined' ? process = J$.R(7241585, 'process', undefined, true, true) : process = J$.R(7241585, 'process', process, true, true)), 'argv'), argv, false, false);
                            var slice = J$.W(7241657, 'slice', J$.C(387168, J$.B(727418, '!==', J$.G(7241617, J$.R(7241609, 'inputs', inputs, false, false), 'slice'), J$.T(7241625, undefined, 24, false))) ? J$.G(7241641, J$.R(7241633, 'inputs', inputs, false, false), 'slice') : J$.T(7241649, 2, 22, false), slice, false, false);
                            var args = J$.W(7241689, 'args', J$.M(7241681, J$.R(7241665, 'argv', argv, false, false), 'slice', false)(J$.R(7241673, 'slice', slice, false, false)), args, false, false);
                            var env = J$.W(7241729, 'env', J$.C(387176, J$.G(7241705, J$.R(7241697, 'inputs', inputs, false, false), 'env')) ? J$._() : J$.G(7241721, J$.I(typeof process === 'undefined' ? process = J$.R(7241713, 'process', undefined, true, true) : process = J$.R(7241713, 'process', process, true, true)), 'env'), env, false, false);
                            var opts = J$.W(7241745, 'opts', J$.T(7241737, {}, 11, false), opts, false, false);
                            var _order = J$.W(7241761, '_order', J$.T(7241753, [], 10, false), _order, false, false);
                            var _args = J$.W(7242313, '_args', J$.T(7242305, [], 10, false), _args, false, false);
                            var i = J$.W(7242329, 'i', J$.T(7242321, 0, 22, false), i, false, false);
                            outer:
                                while (J$.C(387424, J$.B(727466, '<', J$.R(7242337, 'i', i, false, false), J$.G(7242353, J$.R(7242345, 'args', args, false, false), 'length')))) {
                                    var arg = J$.W(7242385, 'arg', J$.G(7242377, J$.R(7242361, 'args', args, false, false), J$.R(7242369, 'i', i, false, false)), arg, false, false);
                                    if (J$.C(387416, J$.B(727474, '===', J$.R(7242393, 'arg', arg, false, false), J$.T(7242401, '--', 21, false)))) {
                                        J$.B(727498, '-', i = J$.W(7242417, 'i', J$.B(727490, '+', J$.U(727482, '+', J$.R(7242409, 'i', i, false, false)), 1), i, false, false), 1);
                                        break;
                                    } else if (J$.C(387408, J$.B(727506, '===', J$.M(7242449, J$.R(7242425, 'arg', arg, false, false), 'slice', false)(J$.T(7242433, 0, 22, false), J$.T(7242441, 2, 22, false)), J$.T(7242457, '--', 21, false)))) {
                                        var name = J$.W(7242489, 'name', J$.M(7242481, J$.R(7242465, 'arg', arg, false, false), 'slice', false)(J$.T(7242473, 2, 22, false)), name, false, false);
                                        var val = J$.W(7242505, 'val', J$.T(7242497, null, 25, false), val, false, false);
                                        var idx = J$.W(7242537, 'idx', J$.M(7242529, J$.R(7242513, 'name', name, false, false), 'indexOf', false)(J$.T(7242521, '=', 21, false)), idx, false, false);
                                        if (J$.C(387224, J$.B(727522, '!==', J$.R(7242545, 'idx', idx, false, false), J$.U(727514, '-', J$.T(7242553, 1, 22, false))))) {
                                            val = J$.W(7242593, 'val', J$.M(7242585, J$.R(7242561, 'name', name, false, false), 'slice', false)(J$.B(727530, '+', J$.R(7242569, 'idx', idx, false, false), J$.T(7242577, 1, 22, false))), val, false, false);
                                            name = J$.W(7242633, 'name', J$.M(7242625, J$.R(7242601, 'name', name, false, false), 'slice', false)(J$.T(7242609, 0, 22, false), J$.R(7242617, 'idx', idx, false, false)), name, false, false);
                                        }
                                        var option = J$.W(7242673, 'option', J$.G(7242665, J$.G(7242649, J$.R(7242641, 'this', this, false, false), 'optionFromName'), J$.R(7242657, 'name', name, false, false)), option, false, false);
                                        if (J$.C(387288, J$.U(727538, '!', J$.R(7242681, 'option', option, false, false)))) {
                                            if (J$.C(387240, J$.U(727546, '!', J$.G(7242697, J$.R(7242689, 'this', this, false, false), 'allowUnknown'))))
                                                throw J$.F(7242745, J$.I(typeof Error === 'undefined' ? Error = J$.R(7242705, 'Error', undefined, true, true) : Error = J$.R(7242705, 'Error', Error, true, true)), true)(J$.F(7242737, J$.R(7242713, 'format', format, false, true), false)(J$.T(7242721, 'unknown option: "--%s"', 21, false), J$.R(7242729, 'name', name, false, false)));
                                            else if (J$.C(387232, J$.G(7242761, J$.R(7242753, 'this', this, false, false), 'interspersed')))
                                                J$.M(7242785, J$.R(7242769, '_args', _args, false, false), 'push', false)(J$.R(7242777, 'arg', arg, false, false));
                                            else
                                                break outer;
                                        } else {
                                            var takesArg = J$.W(7242817, 'takesArg', J$.M(7242809, J$.R(7242793, 'this', this, false, false), 'optionTakesArg', false)(J$.R(7242801, 'option', option, false, false)), takesArg, false, false);
                                            if (J$.C(387256, J$.C(387248, J$.B(727554, '!==', J$.R(7242825, 'val', val, false, false), J$.T(7242833, null, 25, false))) ? J$.U(727562, '!', J$.R(7242841, 'takesArg', takesArg, false, false)) : J$._())) {
                                                throw J$.F(7242905, J$.I(typeof Error === 'undefined' ? Error = J$.R(7242849, 'Error', undefined, true, true) : Error = J$.R(7242849, 'Error', Error, true, true)), true)(J$.F(7242897, J$.R(7242857, 'format', format, false, true), false)(J$.B(727570, '+', J$.T(7242865, 'argument given to "--%s" option ', 21, false), J$.T(7242873, 'that does not take one: "%s"', 21, false)), J$.R(7242881, 'name', name, false, false), J$.R(7242889, 'arg', arg, false, false)));
                                            }
                                            if (J$.C(387280, J$.U(727578, '!', J$.R(7242913, 'takesArg', takesArg, false, false)))) {
                                                J$.F(7242985, J$.R(7242921, 'addOpt', addOpt, false, false), false)(J$.R(7242929, 'option', option, false, false), J$.B(727586, '+', J$.T(7242937, '--', 21, false), J$.R(7242945, 'name', name, false, false)), J$.G(7242961, J$.R(7242953, 'option', option, false, false), 'key'), J$.T(7242969, true, 23, false), J$.T(7242977, 'argv', 21, false));
                                            } else if (J$.C(387272, J$.B(727594, '!==', J$.R(7242993, 'val', val, false, false), J$.T(7243001, null, 25, false)))) {
                                                J$.F(7243073, J$.R(7243009, 'addOpt', addOpt, false, false), false)(J$.R(7243017, 'option', option, false, false), J$.B(727602, '+', J$.T(7243025, '--', 21, false), J$.R(7243033, 'name', name, false, false)), J$.G(7243049, J$.R(7243041, 'option', option, false, false), 'key'), J$.R(7243057, 'val', val, false, false), J$.T(7243065, 'argv', 21, false));
                                            } else if (J$.C(387264, J$.B(727618, '>=', J$.B(727610, '+', J$.R(7243081, 'i', i, false, false), J$.T(7243089, 1, 22, false)), J$.G(7243105, J$.R(7243097, 'args', args, false, false), 'length')))) {
                                                throw J$.F(7243161, J$.I(typeof Error === 'undefined' ? Error = J$.R(7243113, 'Error', undefined, true, true) : Error = J$.R(7243113, 'Error', Error, true, true)), true)(J$.F(7243153, J$.R(7243121, 'format', format, false, true), false)(J$.B(727626, '+', J$.T(7243129, 'do not have enough args for "--%s" ', 21, false), J$.T(7243137, 'option', 21, false)), J$.R(7243145, 'name', name, false, false)));
                                            } else {
                                                J$.F(7243257, J$.R(7243169, 'addOpt', addOpt, false, false), false)(J$.R(7243177, 'option', option, false, false), J$.B(727634, '+', J$.T(7243185, '--', 21, false), J$.R(7243193, 'name', name, false, false)), J$.G(7243209, J$.R(7243201, 'option', option, false, false), 'key'), J$.G(7243241, J$.R(7243217, 'args', args, false, false), J$.B(727642, '+', J$.R(7243225, 'i', i, false, false), J$.T(7243233, 1, 22, false))), J$.T(7243249, 'argv', 21, false));
                                                J$.B(727666, '-', i = J$.W(7243273, 'i', J$.B(727658, '+', J$.U(727650, '+', J$.R(7243265, 'i', i, false, false)), 1), i, false, false), 1);
                                            }
                                        }
                                    } else if (J$.C(387400, J$.C(387296, J$.B(727674, '===', J$.G(7243297, J$.R(7243281, 'arg', arg, false, false), J$.T(7243289, 0, 22, false)), J$.T(7243305, '-', 21, false))) ? J$.B(727682, '>', J$.G(7243321, J$.R(7243313, 'arg', arg, false, false), 'length'), J$.T(7243329, 1, 22, false)) : J$._())) {
                                        var j = J$.W(7243345, 'j', J$.T(7243337, 1, 22, false), j, false, false);
                                        var allFound = J$.W(7243361, 'allFound', J$.T(7243353, true, 23, false), allFound, false, false);
                                        while (J$.C(387344, J$.B(727690, '<', J$.R(7243369, 'j', j, false, false), J$.G(7243385, J$.R(7243377, 'arg', arg, false, false), 'length')))) {
                                            var name = J$.W(7243417, 'name', J$.G(7243409, J$.R(7243393, 'arg', arg, false, false), J$.R(7243401, 'j', j, false, false)), name, false, false);
                                            var option = J$.W(7243457, 'option', J$.G(7243449, J$.G(7243433, J$.R(7243425, 'this', this, false, false), 'optionFromName'), J$.R(7243441, 'name', name, false, false)), option, false, false);
                                            if (J$.C(387336, J$.U(727698, '!', J$.R(7243465, 'option', option, false, false)))) {
                                                allFound = J$.W(7243481, 'allFound', J$.T(7243473, false, 23, false), allFound, false, false);
                                                if (J$.C(387320, J$.G(7243497, J$.R(7243489, 'this', this, false, false), 'allowUnknown'))) {
                                                    if (J$.C(387304, J$.G(7243513, J$.R(7243505, 'this', this, false, false), 'interspersed'))) {
                                                        J$.M(7243537, J$.R(7243521, '_args', _args, false, false), 'push', false)(J$.R(7243529, 'arg', arg, false, false));
                                                        break;
                                                    } else
                                                        break outer;
                                                } else if (J$.C(387312, J$.B(727706, '>', J$.G(7243553, J$.R(7243545, 'arg', arg, false, false), 'length'), J$.T(7243561, 2, 22, false)))) {
                                                    throw J$.F(7243617, J$.I(typeof Error === 'undefined' ? Error = J$.R(7243569, 'Error', undefined, true, true) : Error = J$.R(7243569, 'Error', Error, true, true)), true)(J$.F(7243609, J$.R(7243577, 'format', format, false, true), false)(J$.T(7243585, 'unknown option: "-%s" in "%s" group', 21, false), J$.R(7243593, 'name', name, false, false), J$.R(7243601, 'arg', arg, false, false)));
                                                } else {
                                                    throw J$.F(7243665, J$.I(typeof Error === 'undefined' ? Error = J$.R(7243625, 'Error', undefined, true, true) : Error = J$.R(7243625, 'Error', Error, true, true)), true)(J$.F(7243657, J$.R(7243633, 'format', format, false, true), false)(J$.T(7243641, 'unknown option: "-%s"', 21, false), J$.R(7243649, 'name', name, false, false)));
                                                }
                                            } else if (J$.C(387328, J$.M(7243689, J$.R(7243673, 'this', this, false, false), 'optionTakesArg', false)(J$.R(7243681, 'option', option, false, false)))) {
                                                break;
                                            }
                                            J$.B(727730, '-', j = J$.W(7243705, 'j', J$.B(727722, '+', J$.U(727714, '+', J$.R(7243697, 'j', j, false, false)), 1), j, false, false), 1);
                                        }
                                        j = J$.W(7243721, 'j', J$.T(7243713, 1, 22, false), j, false, false);
                                        while (J$.C(387384, J$.C(387352, J$.R(7243729, 'allFound', allFound, false, false)) ? J$.B(727738, '<', J$.R(7243737, 'j', j, false, false), J$.G(7243753, J$.R(7243745, 'arg', arg, false, false), 'length')) : J$._())) {
                                            var name = J$.W(7243785, 'name', J$.G(7243777, J$.R(7243761, 'arg', arg, false, false), J$.R(7243769, 'j', j, false, false)), name, false, false);
                                            var val = J$.W(7243825, 'val', J$.M(7243817, J$.R(7243793, 'arg', arg, false, false), 'slice', false)(J$.B(727746, '+', J$.R(7243801, 'j', j, false, false), J$.T(7243809, 1, 22, false))), val, false, false);
                                            var option = J$.W(7243865, 'option', J$.G(7243857, J$.G(7243841, J$.R(7243833, 'this', this, false, false), 'optionFromName'), J$.R(7243849, 'name', name, false, false)), option, false, false);
                                            var takesArg = J$.W(7243897, 'takesArg', J$.M(7243889, J$.R(7243873, 'this', this, false, false), 'optionTakesArg', false)(J$.R(7243881, 'option', option, false, false)), takesArg, false, false);
                                            if (J$.C(387376, J$.U(727754, '!', J$.R(7243905, 'takesArg', takesArg, false, false)))) {
                                                J$.F(7243977, J$.R(7243913, 'addOpt', addOpt, false, false), false)(J$.R(7243921, 'option', option, false, false), J$.B(727762, '+', J$.T(7243929, '-', 21, false), J$.R(7243937, 'name', name, false, false)), J$.G(7243953, J$.R(7243945, 'option', option, false, false), 'key'), J$.T(7243961, true, 23, false), J$.T(7243969, 'argv', 21, false));
                                            } else if (J$.C(387368, J$.R(7243985, 'val', val, false, false))) {
                                                J$.F(7244057, J$.R(7243993, 'addOpt', addOpt, false, false), false)(J$.R(7244001, 'option', option, false, false), J$.B(727770, '+', J$.T(7244009, '-', 21, false), J$.R(7244017, 'name', name, false, false)), J$.G(7244033, J$.R(7244025, 'option', option, false, false), 'key'), J$.R(7244041, 'val', val, false, false), J$.T(7244049, 'argv', 21, false));
                                                break;
                                            } else {
                                                if (J$.C(387360, J$.B(727786, '>=', J$.B(727778, '+', J$.R(7244065, 'i', i, false, false), J$.T(7244073, 1, 22, false)), J$.G(7244089, J$.R(7244081, 'args', args, false, false), 'length')))) {
                                                    throw J$.F(7244145, J$.I(typeof Error === 'undefined' ? Error = J$.R(7244097, 'Error', undefined, true, true) : Error = J$.R(7244097, 'Error', Error, true, true)), true)(J$.F(7244137, J$.R(7244105, 'format', format, false, true), false)(J$.B(727794, '+', J$.T(7244113, 'do not have enough args ', 21, false), J$.T(7244121, 'for "-%s" option', 21, false)), J$.R(7244129, 'name', name, false, false)));
                                                }
                                                J$.F(7244241, J$.R(7244153, 'addOpt', addOpt, false, false), false)(J$.R(7244161, 'option', option, false, false), J$.B(727802, '+', J$.T(7244169, '-', 21, false), J$.R(7244177, 'name', name, false, false)), J$.G(7244193, J$.R(7244185, 'option', option, false, false), 'key'), J$.G(7244225, J$.R(7244201, 'args', args, false, false), J$.B(727810, '+', J$.R(7244209, 'i', i, false, false), J$.T(7244217, 1, 22, false))), J$.T(7244233, 'argv', 21, false));
                                                J$.B(727834, '-', i = J$.W(7244257, 'i', J$.B(727826, '+', J$.U(727818, '+', J$.R(7244249, 'i', i, false, false)), 1), i, false, false), 1);
                                                break;
                                            }
                                            J$.B(727858, '-', j = J$.W(7244273, 'j', J$.B(727850, '+', J$.U(727842, '+', J$.R(7244265, 'j', j, false, false)), 1), j, false, false), 1);
                                        }
                                    } else if (J$.C(387392, J$.G(7244289, J$.R(7244281, 'this', this, false, false), 'interspersed'))) {
                                        J$.M(7244313, J$.R(7244297, '_args', _args, false, false), 'push', false)(J$.R(7244305, 'arg', arg, false, false));
                                    } else {
                                        break outer;
                                    }
                                    J$.B(727882, '-', i = J$.W(7244329, 'i', J$.B(727874, '+', J$.U(727866, '+', J$.R(7244321, 'i', i, false, false)), 1), i, false, false), 1);
                                }
                            _args = J$.W(7244377, '_args', J$.M(7244369, J$.R(7244337, '_args', _args, false, false), 'concat', false)(J$.M(7244361, J$.R(7244345, 'args', args, false, false), 'slice', false)(J$.R(7244353, 'i', i, false, false))), _args, false, false);
                            J$.M(7244809, J$.M(7244409, J$.I(typeof Object === 'undefined' ? Object = J$.R(7244385, 'Object', undefined, true, true) : Object = J$.R(7244385, 'Object', Object, true, true)), 'keys', false)(J$.G(7244401, J$.R(7244393, 'this', this, false, false), 'optionFromEnv')), 'forEach', false)(J$.T(7244801, function (envname) {
                                jalangiLabel22:
                                    while (true) {
                                        try {
                                            J$.Fe(7244753, arguments.callee, this, arguments);
                                            arguments = J$.N(7244761, 'arguments', arguments, true, false, false);
                                            envname = J$.N(7244769, 'envname', envname, true, false, false);
                                            J$.N(7244777, 'val', val, false, false, false);
                                            J$.N(7244785, 'option', option, false, false, false);
                                            J$.N(7244793, 'takesArg', takesArg, false, false, false);
                                            var val = J$.W(7244441, 'val', J$.G(7244433, J$.R(7244417, 'env', env, false, false), J$.R(7244425, 'envname', envname, false, false)), val, false, false);
                                            if (J$.C(387432, J$.B(727890, '===', J$.R(7244449, 'val', val, false, false), J$.T(7244457, undefined, 24, false))))
                                                return J$.Rt(7244465, undefined);
                                            var option = J$.W(7244505, 'option', J$.G(7244497, J$.G(7244481, J$.R(7244473, 'self', self, false, false), 'optionFromEnv'), J$.R(7244489, 'envname', envname, false, false)), option, false, false);
                                            if (J$.C(387440, J$.B(727898, '!==', J$.G(7244537, J$.R(7244513, 'opts', opts, false, false), J$.G(7244529, J$.R(7244521, 'option', option, false, false), 'key')), J$.T(7244545, undefined, 24, false))))
                                                return J$.Rt(7244553, undefined);
                                            var takesArg = J$.W(7244585, 'takesArg', J$.M(7244577, J$.R(7244561, 'self', self, false, false), 'optionTakesArg', false)(J$.R(7244569, 'option', option, false, false)), takesArg, false, false);
                                            if (J$.C(387456, J$.R(7244593, 'takesArg', takesArg, false, false))) {
                                                J$.F(7244657, J$.R(7244601, 'addOpt', addOpt, false, false), false)(J$.R(7244609, 'option', option, false, false), J$.R(7244617, 'envname', envname, false, false), J$.G(7244633, J$.R(7244625, 'option', option, false, false), 'key'), J$.R(7244641, 'val', val, false, false), J$.T(7244649, 'env', 21, false));
                                            } else if (J$.C(387448, J$.B(727906, '!==', J$.R(7244665, 'val', val, false, false), J$.T(7244673, '', 21, false)))) {
                                                J$.F(7244745, J$.R(7244681, 'addOpt', addOpt, false, false), false)(J$.R(7244689, 'option', option, false, false), J$.R(7244697, 'envname', envname, false, false), J$.G(7244713, J$.R(7244705, 'option', option, false, false), 'key'), J$.B(727914, '!==', J$.R(7244721, 'val', val, false, false), J$.T(7244729, '0', 21, false)), J$.T(7244737, 'env', 21, false));
                                            }
                                        } catch (J$e) {
                                            J$.Ex(7254033, J$e);
                                        } finally {
                                            if (J$.Fr(7254041))
                                                continue jalangiLabel22;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            J$.M(7245113, J$.G(7244825, J$.R(7244817, 'this', this, false, false), 'options'), 'forEach', false)(J$.T(7245105, function (o) {
                                jalangiLabel23:
                                    while (true) {
                                        try {
                                            J$.Fe(7245081, arguments.callee, this, arguments);
                                            arguments = J$.N(7245089, 'arguments', arguments, true, false, false);
                                            o = J$.N(7245097, 'o', o, true, false, false);
                                            if (J$.C(387488, J$.B(727922, '===', J$.G(7244857, J$.R(7244833, 'opts', opts, false, false), J$.G(7244849, J$.R(7244841, 'o', o, false, false), 'key')), J$.T(7244865, undefined, 24, false)))) {
                                                if (J$.C(387480, J$.B(727930, '!==', J$.G(7244881, J$.R(7244873, 'o', o, false, false), 'default'), J$.T(7244889, undefined, 24, false)))) {
                                                    J$.P(7244937, J$.R(7244897, 'opts', opts, false, false), J$.G(7244913, J$.R(7244905, 'o', o, false, false), 'key'), J$.G(7244929, J$.R(7244921, 'o', o, false, false), 'default'));
                                                } else if (J$.C(387472, J$.C(387464, J$.G(7244953, J$.R(7244945, 'o', o, false, false), 'type')) ? J$.B(727938, '!==', J$.G(7244993, J$.G(7244985, J$.R(7244961, 'optionTypes', optionTypes, false, true), J$.G(7244977, J$.R(7244969, 'o', o, false, false), 'type')), 'default'), J$.T(7245001, undefined, 24, false)) : J$._())) {
                                                    J$.P(7245073, J$.R(7245009, 'opts', opts, false, false), J$.G(7245025, J$.R(7245017, 'o', o, false, false), 'key'), J$.G(7245065, J$.G(7245057, J$.R(7245033, 'optionTypes', optionTypes, false, true), J$.G(7245049, J$.R(7245041, 'o', o, false, false), 'type')), 'default'));
                                                }
                                            }
                                        } catch (J$e) {
                                            J$.Ex(7254049, J$e);
                                        } finally {
                                            if (J$.Fr(7254057))
                                                continue jalangiLabel23;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            J$.P(7245137, J$.R(7245121, 'opts', opts, false, false), '_order', J$.R(7245129, '_order', _order, false, false));
                            J$.P(7245161, J$.R(7245145, 'opts', opts, false, false), '_args', J$.R(7245153, '_args', _args, false, false));
                            return J$.Rt(7245177, J$.R(7245169, 'opts', opts, false, false));
                        } catch (J$e) {
                            J$.Ex(7254065, J$e);
                        } finally {
                            if (J$.Fr(7254073))
                                continue jalangiLabel24;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(7249297, J$.G(7245385, J$.R(7245377, 'Parser', Parser, false, true), 'prototype'), 'help', J$.T(7249289, function help(config) {
                jalangiLabel31:
                    while (true) {
                        try {
                            J$.Fe(7249177, arguments.callee, this, arguments);
                            arguments = J$.N(7249185, 'arguments', arguments, true, false, false);
                            config = J$.N(7249193, 'config', config, true, false, false);
                            J$.N(7249201, 'indent', indent, false, false, false);
                            J$.N(7249209, 'headingIndent', headingIndent, false, false, false);
                            J$.N(7249217, 'nameSort', nameSort, false, false, false);
                            J$.N(7249225, 'maxCol', maxCol, false, false, false);
                            J$.N(7249233, 'minHelpCol', minHelpCol, false, false, false);
                            J$.N(7249241, 'maxHelpCol', maxHelpCol, false, false, false);
                            J$.N(7249249, 'lines', lines, false, false, false);
                            J$.N(7249257, 'maxWidth', maxWidth, false, false, false);
                            J$.N(7249265, 'helpCol', helpCol, false, false, false);
                            J$.N(7249273, 'i', i, false, false, false);
                            J$.N(7249281, 'rv', rv, false, false, false);
                            config = J$.W(7245409, 'config', J$.C(387496, J$.R(7245393, 'config', config, false, false)) ? J$._() : J$.T(7245401, {}, 11, false), config, false, false);
                            J$.M(7245441, J$.R(7245417, 'assert', assert, false, true), 'object', false)(J$.R(7245425, 'config', config, false, false), J$.T(7245433, 'config', 21, false));
                            var indent = J$.W(7245497, 'indent', J$.F(7245489, J$.R(7245449, 'makeIndent', makeIndent, false, true), false)(J$.G(7245465, J$.R(7245457, 'config', config, false, false), 'indent'), J$.T(7245473, 4, 22, false), J$.T(7245481, 'config.indent', 21, false)), indent, false, false);
                            var headingIndent = J$.W(7245585, 'headingIndent', J$.F(7245577, J$.R(7245505, 'makeIndent', makeIndent, false, true), false)(J$.G(7245521, J$.R(7245513, 'config', config, false, false), 'headingIndent'), J$.M(7245561, J$.I(typeof Math === 'undefined' ? Math = J$.R(7245529, 'Math', undefined, true, true) : Math = J$.R(7245529, 'Math', Math, true, true)), 'round', false)(J$.B(727946, '/', J$.G(7245545, J$.R(7245537, 'indent', indent, false, false), 'length'), J$.T(7245553, 2, 22, false))), J$.T(7245569, 'config.headingIndent', 21, false)), headingIndent, false, false);
                            J$.M(7245625, J$.R(7245593, 'assert', assert, false, true), 'optionalString', false)(J$.G(7245609, J$.R(7245601, 'config', config, false, false), 'nameSort'), J$.T(7245617, 'config.nameSort', 21, false));
                            var nameSort = J$.W(7245657, 'nameSort', J$.C(387504, J$.G(7245641, J$.R(7245633, 'config', config, false, false), 'nameSort')) ? J$._() : J$.T(7245649, 'length', 21, false), nameSort, false, false);
                            J$.M(7245721, J$.R(7245665, 'assert', assert, false, true), 'ok', false)(J$.U(727954, '~', J$.M(7245705, J$.T(7245689, [
                                J$.T(7245673, 'length', 21, false),
                                J$.T(7245681, 'none', 21, false)
                            ], 10, false), 'indexOf', false)(J$.R(7245697, 'nameSort', nameSort, false, false))), J$.T(7245713, 'invalid "config.nameSort"', 21, false));
                            J$.M(7245761, J$.R(7245729, 'assert', assert, false, true), 'optionalNumber', false)(J$.G(7245745, J$.R(7245737, 'config', config, false, false), 'maxCol'), J$.T(7245753, 'config.maxCol', 21, false));
                            J$.M(7245801, J$.R(7245769, 'assert', assert, false, true), 'optionalNumber', false)(J$.G(7245785, J$.R(7245777, 'config', config, false, false), 'maxHelpCol'), J$.T(7245793, 'config.maxHelpCol', 21, false));
                            J$.M(7245841, J$.R(7245809, 'assert', assert, false, true), 'optionalNumber', false)(J$.G(7245825, J$.R(7245817, 'config', config, false, false), 'minHelpCol'), J$.T(7245833, 'config.minHelpCol', 21, false));
                            J$.M(7245881, J$.R(7245849, 'assert', assert, false, true), 'optionalNumber', false)(J$.G(7245865, J$.R(7245857, 'config', config, false, false), 'helpCol'), J$.T(7245873, 'config.helpCol', 21, false));
                            J$.M(7245921, J$.R(7245889, 'assert', assert, false, true), 'optionalBool', false)(J$.G(7245905, J$.R(7245897, 'config', config, false, false), 'includeEnv'), J$.T(7245913, 'config.includeEnv', 21, false));
                            J$.M(7245961, J$.R(7245929, 'assert', assert, false, true), 'optionalBool', false)(J$.G(7245945, J$.R(7245937, 'config', config, false, false), 'includeDefault'), J$.T(7245953, 'config.includeDefault', 21, false));
                            J$.M(7246001, J$.R(7245969, 'assert', assert, false, true), 'optionalBool', false)(J$.G(7245985, J$.R(7245977, 'config', config, false, false), 'helpWrap'), J$.T(7245993, 'config.helpWrap', 21, false));
                            var maxCol = J$.W(7246033, 'maxCol', J$.C(387512, J$.G(7246017, J$.R(7246009, 'config', config, false, false), 'maxCol')) ? J$._() : J$.T(7246025, 80, 22, false), maxCol, false, false);
                            var minHelpCol = J$.W(7246065, 'minHelpCol', J$.C(387520, J$.G(7246049, J$.R(7246041, 'config', config, false, false), 'minHelpCol')) ? J$._() : J$.T(7246057, 20, 22, false), minHelpCol, false, false);
                            var maxHelpCol = J$.W(7246097, 'maxHelpCol', J$.C(387528, J$.G(7246081, J$.R(7246073, 'config', config, false, false), 'maxHelpCol')) ? J$._() : J$.T(7246089, 40, 22, false), maxHelpCol, false, false);
                            var lines = J$.W(7246113, 'lines', J$.T(7246105, [], 10, false), lines, false, false);
                            var maxWidth = J$.W(7246129, 'maxWidth', J$.T(7246121, 0, 22, false), maxWidth, false, false);
                            J$.M(7246993, J$.G(7246145, J$.R(7246137, 'this', this, false, false), 'options'), 'forEach', false)(J$.T(7246985, function (o) {
                                jalangiLabel27:
                                    while (true) {
                                        try {
                                            J$.Fe(7246929, arguments.callee, this, arguments);
                                            arguments = J$.N(7246937, 'arguments', arguments, true, false, false);
                                            o = J$.N(7246945, 'o', o, true, false, false);
                                            J$.N(7246953, 'type', type, false, false, false);
                                            J$.N(7246961, 'arg', arg, false, false, false);
                                            J$.N(7246969, 'line', line, false, false, false);
                                            J$.N(7246977, 'names', names, false, false, false);
                                            if (J$.C(387536, J$.G(7246161, J$.R(7246153, 'o', o, false, false), 'hidden'))) {
                                                return J$.Rt(7246169, undefined);
                                            }
                                            if (J$.C(387552, J$.C(387544, J$.B(727962, '!==', J$.G(7246185, J$.R(7246177, 'o', o, false, false), 'group'), J$.T(7246193, undefined, 24, false))) ? J$.B(727970, '!==', J$.G(7246209, J$.R(7246201, 'o', o, false, false), 'group'), J$.T(7246217, null, 25, false)) : J$._())) {
                                                J$.M(7246241, J$.R(7246225, 'lines', lines, false, false), 'push', false)(J$.T(7246233, null, 25, false));
                                                return J$.Rt(7246249, undefined);
                                            }
                                            var type = J$.W(7246289, 'type', J$.G(7246281, J$.R(7246257, 'optionTypes', optionTypes, false, true), J$.G(7246273, J$.R(7246265, 'o', o, false, false), 'type')), type, false, false);
                                            var arg = J$.W(7246337, 'arg', J$.C(387568, J$.C(387560, J$.G(7246305, J$.R(7246297, 'o', o, false, false), 'helpArg')) ? J$._() : J$.G(7246321, J$.R(7246313, 'type', type, false, false), 'helpArg')) ? J$._() : J$.T(7246329, 'ARG', 21, false), arg, false, false);
                                            var line = J$.W(7246353, 'line', J$.T(7246345, '', 21, false), line, false, false);
                                            var names = J$.W(7246385, 'names', J$.M(7246377, J$.G(7246369, J$.R(7246361, 'o', o, false, false), 'names'), 'slice', false)(), names, false, false);
                                            if (J$.C(387592, J$.B(727978, '===', J$.R(7246393, 'nameSort', nameSort, false, false), J$.T(7246401, 'length', 21, false)))) {
                                                J$.M(7246569, J$.R(7246409, 'names', names, false, false), 'sort', false)(J$.T(7246561, function (a, b) {
                                                    jalangiLabel25:
                                                        while (true) {
                                                            try {
                                                                J$.Fe(7246529, arguments.callee, this, arguments);
                                                                arguments = J$.N(7246537, 'arguments', arguments, true, false, false);
                                                                a = J$.N(7246545, 'a', a, true, false, false);
                                                                b = J$.N(7246553, 'b', b, true, false, false);
                                                                if (J$.C(387584, J$.B(727986, '<', J$.G(7246425, J$.R(7246417, 'a', a, false, false), 'length'), J$.G(7246441, J$.R(7246433, 'b', b, false, false), 'length'))))
                                                                    return J$.Rt(7246457, J$.U(727994, '-', J$.T(7246449, 1, 22, false)));
                                                                else if (J$.C(387576, J$.B(728002, '<', J$.G(7246473, J$.R(7246465, 'b', b, false, false), 'length'), J$.G(7246489, J$.R(7246481, 'a', a, false, false), 'length'))))
                                                                    return J$.Rt(7246505, J$.T(7246497, 1, 22, false));
                                                                else
                                                                    return J$.Rt(7246521, J$.T(7246513, 0, 22, false));
                                                            } catch (J$e) {
                                                                J$.Ex(7254081, J$e);
                                                            } finally {
                                                                if (J$.Fr(7254089))
                                                                    continue jalangiLabel25;
                                                                else
                                                                    return J$.Ra();
                                                            }
                                                        }
                                                }, 12, false));
                                            }
                                            J$.M(7246849, J$.R(7246577, 'names', names, false, false), 'forEach', false)(J$.T(7246841, function (name, i) {
                                                jalangiLabel26:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(7246809, arguments.callee, this, arguments);
                                                            arguments = J$.N(7246817, 'arguments', arguments, true, false, false);
                                                            name = J$.N(7246825, 'name', name, true, false, false);
                                                            i = J$.N(7246833, 'i', i, true, false, false);
                                                            if (J$.C(387600, J$.B(728010, '>', J$.R(7246585, 'i', i, false, false), J$.T(7246593, 0, 22, false))))
                                                                line = J$.W(7246617, 'line', J$.B(728018, '+', J$.R(7246609, 'line', line, false, false), J$.T(7246601, ', ', 21, false)), line, false, false);
                                                            if (J$.C(387624, J$.B(728026, '===', J$.G(7246633, J$.R(7246625, 'name', name, false, false), 'length'), J$.T(7246641, 1, 22, false)))) {
                                                                line = J$.W(7246673, 'line', J$.B(728042, '+', J$.R(7246665, 'line', line, false, false), J$.B(728034, '+', J$.T(7246649, '-', 21, false), J$.R(7246657, 'name', name, false, false))), line, false, false);
                                                                if (J$.C(387608, J$.G(7246689, J$.R(7246681, 'type', type, false, false), 'takesArg')))
                                                                    line = J$.W(7246721, 'line', J$.B(728058, '+', J$.R(7246713, 'line', line, false, false), J$.B(728050, '+', J$.T(7246697, ' ', 21, false), J$.R(7246705, 'arg', arg, false, false))), line, false, false);
                                                            } else {
                                                                line = J$.W(7246753, 'line', J$.B(728074, '+', J$.R(7246745, 'line', line, false, false), J$.B(728066, '+', J$.T(7246729, '--', 21, false), J$.R(7246737, 'name', name, false, false))), line, false, false);
                                                                if (J$.C(387616, J$.G(7246769, J$.R(7246761, 'type', type, false, false), 'takesArg')))
                                                                    line = J$.W(7246801, 'line', J$.B(728090, '+', J$.R(7246793, 'line', line, false, false), J$.B(728082, '+', J$.T(7246777, '=', 21, false), J$.R(7246785, 'arg', arg, false, false))), line, false, false);
                                                            }
                                                        } catch (J$e) {
                                                            J$.Ex(7254097, J$e);
                                                        } finally {
                                                            if (J$.Fr(7254105))
                                                                continue jalangiLabel26;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false));
                                            maxWidth = J$.W(7246897, 'maxWidth', J$.M(7246889, J$.I(typeof Math === 'undefined' ? Math = J$.R(7246857, 'Math', undefined, true, true) : Math = J$.R(7246857, 'Math', Math, true, true)), 'max', false)(J$.R(7246865, 'maxWidth', maxWidth, false, false), J$.G(7246881, J$.R(7246873, 'line', line, false, false), 'length')), maxWidth, false, false);
                                            J$.M(7246921, J$.R(7246905, 'lines', lines, false, false), 'push', false)(J$.R(7246913, 'line', line, false, false));
                                        } catch (J$e) {
                                            J$.Ex(7254113, J$e);
                                        } finally {
                                            if (J$.Fr(7254121))
                                                continue jalangiLabel27;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            var helpCol = J$.W(7247017, 'helpCol', J$.G(7247009, J$.R(7247001, 'config', config, false, false), 'helpCol'), helpCol, false, false);
                            if (J$.C(387632, J$.U(728098, '!', J$.R(7247025, 'helpCol', helpCol, false, false)))) {
                                helpCol = J$.W(7247065, 'helpCol', J$.B(728114, '+', J$.B(728106, '+', J$.R(7247033, 'maxWidth', maxWidth, false, false), J$.G(7247049, J$.R(7247041, 'indent', indent, false, false), 'length')), J$.T(7247057, 2, 22, false)), helpCol, false, false);
                                helpCol = J$.W(7247129, 'helpCol', J$.M(7247121, J$.I(typeof Math === 'undefined' ? Math = J$.R(7247073, 'Math', undefined, true, true) : Math = J$.R(7247073, 'Math', Math, true, true)), 'min', false)(J$.M(7247105, J$.I(typeof Math === 'undefined' ? Math = J$.R(7247081, 'Math', undefined, true, true) : Math = J$.R(7247081, 'Math', Math, true, true)), 'max', false)(J$.R(7247089, 'helpCol', helpCol, false, false), J$.R(7247097, 'minHelpCol', minHelpCol, false, false)), J$.R(7247113, 'maxHelpCol', maxHelpCol, false, false)), helpCol, false, false);
                            }
                            var i = J$.W(7247145, 'i', J$.U(728122, '-', J$.T(7247137, 1, 22, false)), i, false, false);
                            J$.M(7249073, J$.G(7247161, J$.R(7247153, 'this', this, false, false), 'options'), 'forEach', false)(J$.T(7249065, function (o) {
                                jalangiLabel30:
                                    while (true) {
                                        try {
                                            J$.Fe(7248969, arguments.callee, this, arguments);
                                            arguments = J$.N(7248977, 'arguments', arguments, true, false, false);
                                            o = J$.N(7248985, 'o', o, true, false, false);
                                            J$.N(7248993, 'helpDefault', helpDefault, false, false, false);
                                            J$.N(7249001, 'line', line, false, false, false);
                                            J$.N(7249009, 'n', n, false, false, false);
                                            J$.N(7249017, 'helpEnv', helpEnv, false, false, false);
                                            J$.N(7249025, 'type', type, false, false, false);
                                            J$.N(7249033, 'arg', arg, false, false, false);
                                            J$.N(7249041, 'envs', envs, false, false, false);
                                            J$.N(7249049, 'help', help, false, false, false);
                                            J$.N(7249057, 'helpLines', helpLines, false, false, false);
                                            if (J$.C(387640, J$.G(7247177, J$.R(7247169, 'o', o, false, false), 'hidden'))) {
                                                return J$.Rt(7247185, undefined);
                                            }
                                            J$.B(728146, '-', i = J$.W(7247201, 'i', J$.B(728138, '+', J$.U(728130, '+', J$.R(7247193, 'i', i, false, false)), 1), i, false, false), 1);
                                            if (J$.C(387672, J$.C(387648, J$.B(728154, '!==', J$.G(7247217, J$.R(7247209, 'o', o, false, false), 'group'), J$.T(7247225, undefined, 24, false))) ? J$.B(728162, '!==', J$.G(7247241, J$.R(7247233, 'o', o, false, false), 'group'), J$.T(7247249, null, 25, false)) : J$._())) {
                                                if (J$.C(387664, J$.B(728170, '===', J$.G(7247265, J$.R(7247257, 'o', o, false, false), 'group'), J$.T(7247273, '', 21, false)))) {
                                                    J$.P(7247305, J$.R(7247281, 'lines', lines, false, false), J$.R(7247289, 'i', i, false, false), J$.T(7247297, '', 21, false));
                                                } else {
                                                    J$.P(7247393, J$.R(7247313, 'lines', lines, false, false), J$.R(7247321, 'i', i, false, false), J$.B(728202, '+', J$.B(728194, '+', J$.B(728186, '+', J$.C(387656, J$.B(728178, '===', J$.R(7247329, 'i', i, false, false), J$.T(7247337, 0, 22, false))) ? J$.T(7247345, '', 21, false) : J$.T(7247353, '\n', 21, false), J$.R(7247361, 'headingIndent', headingIndent, false, false)), J$.G(7247377, J$.R(7247369, 'o', o, false, false), 'group')), J$.T(7247385, ':', 21, false)));
                                                }
                                                return J$.Rt(7247401, undefined);
                                            }
                                            var helpDefault;
                                            if (J$.C(387704, J$.G(7247417, J$.R(7247409, 'config', config, false, false), 'includeDefault'))) {
                                                if (J$.C(387696, J$.B(728210, '!==', J$.G(7247433, J$.R(7247425, 'o', o, false, false), 'default'), J$.T(7247441, undefined, 24, false)))) {
                                                    helpDefault = J$.W(7247489, 'helpDefault', J$.F(7247481, J$.R(7247449, 'format', format, false, true), false)(J$.T(7247457, 'Default: %j', 21, false), J$.G(7247473, J$.R(7247465, 'o', o, false, false), 'default')), helpDefault, false, false);
                                                } else if (J$.C(387688, J$.C(387680, J$.G(7247505, J$.R(7247497, 'o', o, false, false), 'type')) ? J$.B(728218, '!==', J$.G(7247545, J$.G(7247537, J$.R(7247513, 'optionTypes', optionTypes, false, true), J$.G(7247529, J$.R(7247521, 'o', o, false, false), 'type')), 'default'), J$.T(7247553, undefined, 24, false)) : J$._())) {
                                                    helpDefault = J$.W(7247625, 'helpDefault', J$.F(7247617, J$.R(7247561, 'format', format, false, true), false)(J$.T(7247569, 'Default: %j', 21, false), J$.G(7247609, J$.G(7247601, J$.R(7247577, 'optionTypes', optionTypes, false, true), J$.G(7247593, J$.R(7247585, 'o', o, false, false), 'type')), 'default')), helpDefault, false, false);
                                                }
                                            }
                                            var line = J$.W(7247689, 'line', J$.P(7247681, J$.R(7247633, 'lines', lines, false, false), J$.R(7247641, 'i', i, false, false), J$.B(728226, '+', J$.R(7247649, 'indent', indent, false, false), J$.G(7247673, J$.R(7247657, 'lines', lines, false, false), J$.R(7247665, 'i', i, false, false)))), line, false, false);
                                            if (J$.C(387736, J$.C(387728, J$.C(387720, J$.U(728234, '!', J$.G(7247705, J$.R(7247697, 'o', o, false, false), 'help'))) ? J$.U(728242, '!', J$.C(387712, J$.G(7247721, J$.R(7247713, 'config', config, false, false), 'includeEnv')) ? J$.G(7247737, J$.R(7247729, 'o', o, false, false), 'env') : J$._()) : J$._()) ? J$.U(728250, '!', J$.R(7247745, 'helpDefault', helpDefault, false, false)) : J$._())) {
                                                return J$.Rt(7247753, undefined);
                                            }
                                            var n = J$.W(7247785, 'n', J$.B(728258, '-', J$.R(7247761, 'helpCol', helpCol, false, false), J$.G(7247777, J$.R(7247769, 'line', line, false, false), 'length')), n, false, false);
                                            if (J$.C(387744, J$.B(728266, '>=', J$.R(7247793, 'n', n, false, false), J$.T(7247801, 0, 22, false)))) {
                                                line = J$.W(7247841, 'line', J$.B(728274, '+', J$.R(7247833, 'line', line, false, false), J$.F(7247825, J$.R(7247809, 'space', space, false, true), false)(J$.R(7247817, 'n', n, false, false))), line, false, false);
                                            } else {
                                                line = J$.W(7247889, 'line', J$.B(728290, '+', J$.R(7247881, 'line', line, false, false), J$.B(728282, '+', J$.T(7247849, '\n', 21, false), J$.F(7247873, J$.R(7247857, 'space', space, false, true), false)(J$.R(7247865, 'helpCol', helpCol, false, false)))), line, false, false);
                                            }
                                            var helpEnv = J$.W(7247905, 'helpEnv', J$.T(7247897, '', 21, false), helpEnv, false, false);
                                            if (J$.C(387800, J$.C(387760, J$.C(387752, J$.G(7247921, J$.R(7247913, 'o', o, false, false), 'env')) ? J$.G(7247945, J$.G(7247937, J$.R(7247929, 'o', o, false, false), 'env'), 'length') : J$._()) ? J$.G(7247961, J$.R(7247953, 'config', config, false, false), 'includeEnv') : J$._())) {
                                                helpEnv = J$.W(7247985, 'helpEnv', J$.B(728298, '+', J$.R(7247977, 'helpEnv', helpEnv, false, false), J$.T(7247969, 'Environment: ', 21, false)), helpEnv, false, false);
                                                var type = J$.W(7248025, 'type', J$.G(7248017, J$.R(7247993, 'optionTypes', optionTypes, false, true), J$.G(7248009, J$.R(7248001, 'o', o, false, false), 'type')), type, false, false);
                                                var arg = J$.W(7248073, 'arg', J$.C(387776, J$.C(387768, J$.G(7248041, J$.R(7248033, 'o', o, false, false), 'helpArg')) ? J$._() : J$.G(7248057, J$.R(7248049, 'type', type, false, false), 'helpArg')) ? J$._() : J$.T(7248065, 'ARG', 21, false), arg, false, false);
                                                var envs = J$.W(7248265, 'envs', J$.M(7248257, J$.C(387784, J$.M(7248105, J$.I(typeof Array === 'undefined' ? Array = J$.R(7248081, 'Array', undefined, true, true) : Array = J$.R(7248081, 'Array', Array, true, true)), 'isArray', false)(J$.G(7248097, J$.R(7248089, 'o', o, false, false), 'env'))) ? J$.G(7248121, J$.R(7248113, 'o', o, false, false), 'env') : J$.T(7248145, [J$.G(7248137, J$.R(7248129, 'o', o, false, false), 'env')], 10, false), 'map', false)(J$.T(7248249, function (e) {
                                                    jalangiLabel28:
                                                        while (true) {
                                                            try {
                                                                J$.Fe(7248225, arguments.callee, this, arguments);
                                                                arguments = J$.N(7248233, 'arguments', arguments, true, false, false);
                                                                e = J$.N(7248241, 'e', e, true, false, false);
                                                                if (J$.C(387792, J$.G(7248161, J$.R(7248153, 'type', type, false, false), 'takesArg'))) {
                                                                    return J$.Rt(7248193, J$.B(728314, '+', J$.B(728306, '+', J$.R(7248169, 'e', e, false, false), J$.T(7248177, '=', 21, false)), J$.R(7248185, 'arg', arg, false, false)));
                                                                } else {
                                                                    return J$.Rt(7248217, J$.B(728322, '+', J$.R(7248201, 'e', e, false, false), J$.T(7248209, '=1', 21, false)));
                                                                }
                                                            } catch (J$e) {
                                                                J$.Ex(7254129, J$e);
                                                            } finally {
                                                                if (J$.Fr(7254137))
                                                                    continue jalangiLabel28;
                                                                else
                                                                    return J$.Ra();
                                                            }
                                                        }
                                                }, 12, false)), envs, false, false);
                                                helpEnv = J$.W(7248305, 'helpEnv', J$.B(728330, '+', J$.R(7248297, 'helpEnv', helpEnv, false, false), J$.M(7248289, J$.R(7248273, 'envs', envs, false, false), 'join', false)(J$.T(7248281, ', ', 21, false))), helpEnv, false, false);
                                            }
                                            var help = J$.W(7248345, 'help', J$.M(7248337, J$.C(387808, J$.G(7248321, J$.R(7248313, 'o', o, false, false), 'help')) ? J$._() : J$.T(7248329, '', 21, false), 'trim', false)(), help, false, false);
                                            if (J$.C(387880, J$.C(387816, J$.B(728338, '!==', J$.G(7248361, J$.R(7248353, 'o', o, false, false), 'helpWrap'), J$.T(7248369, false, 23, false))) ? J$.B(728346, '!==', J$.G(7248385, J$.R(7248377, 'config', config, false, false), 'helpWrap'), J$.T(7248393, false, 23, false)) : J$._())) {
                                                if (J$.C(387832, J$.C(387824, J$.G(7248409, J$.R(7248401, 'help', help, false, false), 'length')) ? J$.U(728370, '!', J$.U(728362, '~', J$.M(7248449, J$.T(7248417, '.!?"\'', 21, false), 'indexOf', false)(J$.M(7248441, J$.R(7248425, 'help', help, false, false), 'slice', false)(J$.U(728354, '-', J$.T(7248433, 1, 22, false)))))) : J$._())) {
                                                    help = J$.W(7248473, 'help', J$.B(728378, '+', J$.R(7248465, 'help', help, false, false), J$.T(7248457, '.', 21, false)), help, false, false);
                                                }
                                                if (J$.C(387840, J$.G(7248489, J$.R(7248481, 'help', help, false, false), 'length'))) {
                                                    help = J$.W(7248513, 'help', J$.B(728386, '+', J$.R(7248505, 'help', help, false, false), J$.T(7248497, ' ', 21, false)), help, false, false);
                                                }
                                                help = J$.W(7248537, 'help', J$.B(728394, '+', J$.R(7248529, 'help', help, false, false), J$.R(7248521, 'helpEnv', helpEnv, false, false)), help, false, false);
                                                if (J$.C(387856, J$.R(7248545, 'helpDefault', helpDefault, false, false))) {
                                                    if (J$.C(387848, J$.R(7248553, 'helpEnv', helpEnv, false, false))) {
                                                        help = J$.W(7248577, 'help', J$.B(728402, '+', J$.R(7248569, 'help', help, false, false), J$.T(7248561, '. ', 21, false)), help, false, false);
                                                    }
                                                    help = J$.W(7248601, 'help', J$.B(728410, '+', J$.R(7248593, 'help', help, false, false), J$.R(7248585, 'helpDefault', helpDefault, false, false)), help, false, false);
                                                }
                                                line = J$.W(7248697, 'line', J$.B(728434, '+', J$.R(7248689, 'line', line, false, false), J$.M(7248681, J$.F(7248641, J$.R(7248609, 'textwrap', textwrap, false, true), false)(J$.R(7248617, 'help', help, false, false), J$.B(728418, '-', J$.R(7248625, 'maxCol', maxCol, false, false), J$.R(7248633, 'helpCol', helpCol, false, false))), 'join', false)(J$.B(728426, '+', J$.T(7248649, '\n', 21, false), J$.F(7248673, J$.R(7248657, 'space', space, false, true), false)(J$.R(7248665, 'helpCol', helpCol, false, false))))), line, false, false);
                                            } else {
                                                var helpLines = J$.W(7248793, 'helpLines', J$.M(7248785, J$.M(7248721, J$.R(7248705, 'help', help, false, false), 'split', false)(J$.T(7248713, '\n', 21, false)), 'filter', false)(J$.T(7248777, function (ln) {
                                                    jalangiLabel29:
                                                        while (true) {
                                                            try {
                                                                J$.Fe(7248753, arguments.callee, this, arguments);
                                                                arguments = J$.N(7248761, 'arguments', arguments, true, false, false);
                                                                ln = J$.N(7248769, 'ln', ln, true, false, false);
                                                                return J$.Rt(7248745, J$.G(7248737, J$.R(7248729, 'ln', ln, false, false), 'length'));
                                                            } catch (J$e) {
                                                                J$.Ex(7254145, J$e);
                                                            } finally {
                                                                if (J$.Fr(7254153))
                                                                    continue jalangiLabel29;
                                                                else
                                                                    return J$.Ra();
                                                            }
                                                        }
                                                }, 12, false)), helpLines, false, false);
                                                if (J$.C(387864, J$.B(728442, '!==', J$.R(7248801, 'helpEnv', helpEnv, false, false), J$.T(7248809, '', 21, false)))) {
                                                    J$.M(7248833, J$.R(7248817, 'helpLines', helpLines, false, false), 'push', false)(J$.R(7248825, 'helpEnv', helpEnv, false, false));
                                                }
                                                if (J$.C(387872, J$.R(7248841, 'helpDefault', helpDefault, false, false))) {
                                                    J$.M(7248865, J$.R(7248849, 'helpLines', helpLines, false, false), 'push', false)(J$.R(7248857, 'helpDefault', helpDefault, false, false));
                                                }
                                                line = J$.W(7248929, 'line', J$.B(728458, '+', J$.R(7248921, 'line', line, false, false), J$.M(7248913, J$.R(7248873, 'helpLines', helpLines, false, false), 'join', false)(J$.B(728450, '+', J$.T(7248881, '\n', 21, false), J$.F(7248905, J$.R(7248889, 'space', space, false, true), false)(J$.R(7248897, 'helpCol', helpCol, false, false))))), line, false, false);
                                            }
                                            J$.P(7248961, J$.R(7248937, 'lines', lines, false, false), J$.R(7248945, 'i', i, false, false), J$.R(7248953, 'line', line, false, false));
                                        } catch (J$e) {
                                            J$.Ex(7254161, J$e);
                                        } finally {
                                            if (J$.Fr(7254169))
                                                continue jalangiLabel30;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            var rv = J$.W(7249089, 'rv', J$.T(7249081, '', 21, false), rv, false, false);
                            if (J$.C(387888, J$.B(728466, '>', J$.G(7249105, J$.R(7249097, 'lines', lines, false, false), 'length'), J$.T(7249113, 0, 22, false)))) {
                                rv = J$.W(7249153, 'rv', J$.B(728474, '+', J$.M(7249137, J$.R(7249121, 'lines', lines, false, false), 'join', false)(J$.T(7249129, '\n', 21, false)), J$.T(7249145, '\n', 21, false)), rv, false, false);
                            }
                            return J$.Rt(7249169, J$.R(7249161, 'rv', rv, false, false));
                        } catch (J$e) {
                            J$.Ex(7254177, J$e);
                        } finally {
                            if (J$.Fr(7254185))
                                continue jalangiLabel31;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(7249601, J$.G(7249313, J$.R(7249305, 'Parser', Parser, false, true), 'prototype'), 'bashCompletion', J$.T(7249593, function bashCompletion(args) {
                jalangiLabel32:
                    while (true) {
                        try {
                            J$.Fe(7249569, arguments.callee, this, arguments);
                            arguments = J$.N(7249577, 'arguments', arguments, true, false, false);
                            args = J$.N(7249585, 'args', args, true, false, false);
                            J$.M(7249345, J$.R(7249321, 'assert', assert, false, true), 'object', false)(J$.R(7249329, 'args', args, false, false), J$.T(7249337, 'args', 21, false));
                            J$.M(7249385, J$.R(7249353, 'assert', assert, false, true), 'string', false)(J$.G(7249369, J$.R(7249361, 'args', args, false, false), 'name'), J$.T(7249377, 'args.name', 21, false));
                            J$.M(7249425, J$.R(7249393, 'assert', assert, false, true), 'optionalString', false)(J$.G(7249409, J$.R(7249401, 'args', args, false, false), 'specExtra'), J$.T(7249417, 'args.specExtra', 21, false));
                            J$.M(7249465, J$.R(7249433, 'assert', assert, false, true), 'optionalArrayOfString', false)(J$.G(7249449, J$.R(7249441, 'args', args, false, false), 'argtypes'), J$.T(7249457, 'args.argtypes', 21, false));
                            return J$.Rt(7249561, J$.F(7249553, J$.R(7249473, 'bashCompletionFromOptions', bashCompletionFromOptions, false, true), false)(J$.T(7249545, {
                                name: J$.G(7249489, J$.R(7249481, 'args', args, false, false), 'name'),
                                specExtra: J$.G(7249505, J$.R(7249497, 'args', args, false, false), 'specExtra'),
                                argtypes: J$.G(7249521, J$.R(7249513, 'args', args, false, false), 'argtypes'),
                                options: J$.G(7249537, J$.R(7249529, 'this', this, false, false), 'options')
                            }, 11, false)));
                        } catch (J$e) {
                            J$.Ex(7254193, J$e);
                        } finally {
                            if (J$.Fr(7254201))
                                continue jalangiLabel32;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            const BASH_COMPLETION_TEMPLATE_PATH = J$.W(7249641, 'BASH_COMPLETION_TEMPLATE_PATH', J$.M(7249633, J$.R(7249609, 'path', path, false, true), 'join', false)(J$.I(typeof __dirname === 'undefined' ? __dirname = J$.R(7249617, '__dirname', undefined, true, true) : __dirname = J$.R(7249617, '__dirname', __dirname, true, true)), J$.T(7249625, '../etc/dashdash.bash_completion.in', 21, false)), BASH_COMPLETION_TEMPLATE_PATH, false, true);
            ;
            J$.P(7253281, J$.I(typeof module === 'undefined' ? module = J$.R(7253145, 'module', undefined, true, true) : module = J$.R(7253145, 'module', module, true, true)), 'exports', J$.T(7253273, {
                createParser: J$.R(7253153, 'createParser', createParser, false, true),
                Parser: J$.R(7253161, 'Parser', Parser, false, true),
                parse: J$.R(7253169, 'parse', parse, false, true),
                addOptionType: J$.R(7253177, 'addOptionType', addOptionType, false, true),
                getOptionType: J$.R(7253185, 'getOptionType', getOptionType, false, true),
                synopsisFromOpt: J$.R(7253193, 'synopsisFromOpt', synopsisFromOpt, false, true),
                BASH_COMPLETION_TEMPLATE_PATH: J$.R(7253201, 'BASH_COMPLETION_TEMPLATE_PATH', BASH_COMPLETION_TEMPLATE_PATH, false, true),
                bashCompletionFromOptions: J$.R(7253209, 'bashCompletionFromOptions', bashCompletionFromOptions, false, true),
                bashCompletionSpecFromOptions: J$.R(7253217, 'bashCompletionSpecFromOptions', bashCompletionSpecFromOptions, false, true),
                parseBool: J$.R(7253225, 'parseBool', parseBool, false, true),
                parseString: J$.R(7253233, 'parseString', parseString, false, true),
                parseNumber: J$.R(7253241, 'parseNumber', parseNumber, false, true),
                parseInteger: J$.R(7253249, 'parseInteger', parseInteger, false, true),
                parsePositiveInteger: J$.R(7253257, 'parsePositiveInteger', parsePositiveInteger, false, true),
                parseDate: J$.R(7253265, 'parseDate', parseDate, false, true)
            }, 11, false));
        } catch (J$e) {
            J$.Ex(7254385, J$e);
        } finally {
            if (J$.Sr(7254393))
                continue jalangiLabel44;
            else
                break jalangiLabel44;
        }
    }
// JALANGI DO NOT INSTRUMENT

