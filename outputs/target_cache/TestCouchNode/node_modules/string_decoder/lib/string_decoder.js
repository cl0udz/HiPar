J$.noInstrEval = false;
jalangiLabel18:
    while (true) {
        try {
            J$.Se(5199697, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestCouchNode/node_modules/string_decoder/lib/string_decoder.js');
            function _normalizeEncoding(enc) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(5194313, arguments.callee, this, arguments);
                            arguments = J$.N(5194321, 'arguments', arguments, true, false, false);
                            enc = J$.N(5194329, 'enc', enc, true, false, false);
                            J$.N(5194337, 'retried', retried, false, false, false);
                            if (J$.C(278104, J$.U(594554, '!', J$.R(5194057, 'enc', enc, false, false))))
                                return J$.Rt(5194073, J$.T(5194065, 'utf8', 21, false));
                            var retried;
                            while (J$.C(278216, J$.T(5194081, true, 23, false))) {
                                switch (J$.C1(278120, J$.R(5194089, 'enc', enc, false, false))) {
                                case J$.C2(278128, J$.T(5194097, 'utf8', 21, false)):
                                case J$.C2(278136, J$.T(5194121, 'utf-8', 21, false)):
                                    return J$.Rt(5194113, J$.T(5194105, 'utf8', 21, false));
                                case J$.C2(278144, J$.T(5194129, 'ucs2', 21, false)):
                                case J$.C2(278152, J$.T(5194137, 'ucs-2', 21, false)):
                                case J$.C2(278160, J$.T(5194145, 'utf16le', 21, false)):
                                case J$.C2(278168, J$.T(5194169, 'utf-16le', 21, false)):
                                    return J$.Rt(5194161, J$.T(5194153, 'utf16le', 21, false));
                                case J$.C2(278176, J$.T(5194177, 'latin1', 21, false)):
                                case J$.C2(278184, J$.T(5194201, 'binary', 21, false)):
                                    return J$.Rt(5194193, J$.T(5194185, 'latin1', 21, false));
                                case J$.C2(278192, J$.T(5194209, 'base64', 21, false)):
                                case J$.C2(278200, J$.T(5194217, 'ascii', 21, false)):
                                case J$.C2(278208, J$.T(5194241, 'hex', 21, false)):
                                    return J$.Rt(5194233, J$.R(5194225, 'enc', enc, false, false));
                                default:
                                    if (J$.C(278112, J$.R(5194249, 'retried', retried, false, false)))
                                        return J$.Rt(5194257, undefined);
                                    enc = J$.W(5194289, 'enc', J$.M(5194281, J$.B(594562, '+', J$.T(5194265, '', 21, false), J$.R(5194273, 'enc', enc, false, false)), 'toLowerCase', false)(), enc, false, false);
                                    retried = J$.W(5194305, 'retried', J$.T(5194297, true, 23, false), retried, false, false);
                                }
                            }
                        } catch (J$e) {
                            J$.Ex(5199977, J$e);
                        } finally {
                            if (J$.Fr(5199985))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function normalizeEncoding(enc) {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(5194497, arguments.callee, this, arguments);
                            arguments = J$.N(5194505, 'arguments', arguments, true, false, false);
                            enc = J$.N(5194513, 'enc', enc, true, false, false);
                            J$.N(5194521, 'nenc', nenc, false, false, false);
                            var nenc = J$.W(5194369, 'nenc', J$.F(5194361, J$.R(5194345, '_normalizeEncoding', _normalizeEncoding, false, true), false)(J$.R(5194353, 'enc', enc, false, false)), nenc, false, false);
                            if (J$.C(278240, J$.C(278232, J$.B(594578, '!==', J$.U(594570, 'typeof', J$.R(5194377, 'nenc', nenc, false, false)), J$.T(5194385, 'string', 21, false))) ? J$.C(278224, J$.B(594586, '===', J$.G(5194401, J$.R(5194393, 'Buffer', Buffer, false, true), 'isEncoding'), J$.R(5194409, 'isEncoding', isEncoding, false, true))) ? J$._() : J$.U(594594, '!', J$.F(5194433, J$.R(5194417, 'isEncoding', isEncoding, false, true), false)(J$.R(5194425, 'enc', enc, false, false))) : J$._()))
                                throw J$.F(5194465, J$.I(typeof Error === 'undefined' ? Error = J$.R(5194441, 'Error', undefined, true, true) : Error = J$.R(5194441, 'Error', Error, true, true)), true)(J$.B(594602, '+', J$.T(5194449, 'Unknown encoding: ', 21, false), J$.R(5194457, 'enc', enc, false, false)));
                            return J$.Rt(5194489, J$.C(278248, J$.R(5194473, 'nenc', nenc, false, false)) ? J$._() : J$.R(5194481, 'enc', enc, false, false));
                        } catch (J$e) {
                            J$.Ex(5199993, J$e);
                        } finally {
                            if (J$.Fr(5200001))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function StringDecoder(encoding) {
                jalangiLabel3:
                    while (true) {
                        try {
                            J$.Fe(5194945, arguments.callee, this, arguments);
                            arguments = J$.N(5194953, 'arguments', arguments, true, false, false);
                            encoding = J$.N(5194961, 'encoding', encoding, true, false, false);
                            J$.N(5194969, 'nb', nb, false, false, false);
                            J$.P(5194585, J$.R(5194553, 'this', this, false, false), 'encoding', J$.F(5194577, J$.R(5194561, 'normalizeEncoding', normalizeEncoding, false, true), false)(J$.R(5194569, 'encoding', encoding, false, false)));
                            var nb;
                            switch (J$.C1(278256, J$.G(5194601, J$.R(5194593, 'this', this, false, false), 'encoding'))) {
                            case J$.C2(278264, J$.T(5194673, 'utf16le', 21, false)):
                                J$.P(5194625, J$.R(5194609, 'this', this, false, false), 'text', J$.R(5194617, 'utf16Text', utf16Text, false, true));
                                J$.P(5194649, J$.R(5194633, 'this', this, false, false), 'end', J$.R(5194641, 'utf16End', utf16End, false, true));
                                nb = J$.W(5194665, 'nb', J$.T(5194657, 4, 22, false), nb, false, false);
                                break;
                            case J$.C2(278272, J$.T(5194721, 'utf8', 21, false)):
                                J$.P(5194697, J$.R(5194681, 'this', this, false, false), 'fillLast', J$.R(5194689, 'utf8FillLast', utf8FillLast, false, true));
                                nb = J$.W(5194713, 'nb', J$.T(5194705, 4, 22, false), nb, false, false);
                                break;
                            case J$.C2(278280, J$.T(5194793, 'base64', 21, false)):
                                J$.P(5194745, J$.R(5194729, 'this', this, false, false), 'text', J$.R(5194737, 'base64Text', base64Text, false, true));
                                J$.P(5194769, J$.R(5194753, 'this', this, false, false), 'end', J$.R(5194761, 'base64End', base64End, false, true));
                                nb = J$.W(5194785, 'nb', J$.T(5194777, 3, 22, false), nb, false, false);
                                break;
                            default:
                                J$.P(5194817, J$.R(5194801, 'this', this, false, false), 'write', J$.R(5194809, 'simpleWrite', simpleWrite, false, true));
                                J$.P(5194841, J$.R(5194825, 'this', this, false, false), 'end', J$.R(5194833, 'simpleEnd', simpleEnd, false, true));
                                return J$.Rt(5194849, undefined);
                            }
                            J$.P(5194873, J$.R(5194857, 'this', this, false, false), 'lastNeed', J$.T(5194865, 0, 22, false));
                            J$.P(5194897, J$.R(5194881, 'this', this, false, false), 'lastTotal', J$.T(5194889, 0, 22, false));
                            J$.P(5194937, J$.R(5194905, 'this', this, false, false), 'lastChar', J$.M(5194929, J$.R(5194913, 'Buffer', Buffer, false, true), 'allocUnsafe', false)(J$.R(5194921, 'nb', nb, false, false)));
                        } catch (J$e) {
                            J$.Ex(5200009, J$e);
                        } finally {
                            if (J$.Fr(5200017))
                                continue jalangiLabel3;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function utf8CheckByte(byte) {
                jalangiLabel6:
                    while (true) {
                        try {
                            J$.Fe(5196001, arguments.callee, this, arguments);
                            arguments = J$.N(5196009, 'arguments', arguments, true, false, false);
                            byte = J$.N(5196017, 'byte', byte, true, false, false);
                            if (J$.C(278368, J$.B(594666, '<=', J$.R(5195801, 'byte', byte, false, false), J$.T(5195809, 127, 22, false))))
                                return J$.Rt(5195825, J$.T(5195817, 0, 22, false));
                            else if (J$.C(278360, J$.B(594682, '===', J$.B(594674, '>>', J$.R(5195833, 'byte', byte, false, false), J$.T(5195841, 5, 22, false)), J$.T(5195849, 6, 22, false))))
                                return J$.Rt(5195865, J$.T(5195857, 2, 22, false));
                            else if (J$.C(278352, J$.B(594698, '===', J$.B(594690, '>>', J$.R(5195873, 'byte', byte, false, false), J$.T(5195881, 4, 22, false)), J$.T(5195889, 14, 22, false))))
                                return J$.Rt(5195905, J$.T(5195897, 3, 22, false));
                            else if (J$.C(278344, J$.B(594714, '===', J$.B(594706, '>>', J$.R(5195913, 'byte', byte, false, false), J$.T(5195921, 3, 22, false)), J$.T(5195929, 30, 22, false))))
                                return J$.Rt(5195945, J$.T(5195937, 4, 22, false));
                            return J$.Rt(5195993, J$.C(278376, J$.B(594730, '===', J$.B(594722, '>>', J$.R(5195953, 'byte', byte, false, false), J$.T(5195961, 6, 22, false)), J$.T(5195969, 2, 22, false))) ? J$.U(594738, '-', J$.T(5195977, 1, 22, false)) : J$.U(594746, '-', J$.T(5195985, 2, 22, false)));
                        } catch (J$e) {
                            J$.Ex(5200057, J$e);
                        } finally {
                            if (J$.Fr(5200065))
                                continue jalangiLabel6;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function utf8CheckIncomplete(self, buf, i) {
                jalangiLabel7:
                    while (true) {
                        try {
                            J$.Fe(5196633, arguments.callee, this, arguments);
                            arguments = J$.N(5196641, 'arguments', arguments, true, false, false);
                            self = J$.N(5196649, 'self', self, true, false, false);
                            buf = J$.N(5196657, 'buf', buf, true, false, false);
                            i = J$.N(5196665, 'i', i, true, false, false);
                            J$.N(5196673, 'j', j, false, false, false);
                            J$.N(5196681, 'nb', nb, false, false, false);
                            var j = J$.W(5196049, 'j', J$.B(594754, '-', J$.G(5196033, J$.R(5196025, 'buf', buf, false, false), 'length'), J$.T(5196041, 1, 22, false)), j, false, false);
                            if (J$.C(278384, J$.B(594762, '<', J$.R(5196057, 'j', j, false, false), J$.R(5196065, 'i', i, false, false))))
                                return J$.Rt(5196081, J$.T(5196073, 0, 22, false));
                            var nb = J$.W(5196129, 'nb', J$.F(5196121, J$.R(5196089, 'utf8CheckByte', utf8CheckByte, false, true), false)(J$.G(5196113, J$.R(5196097, 'buf', buf, false, false), J$.R(5196105, 'j', j, false, false))), nb, false, false);
                            if (J$.C(278400, J$.B(594770, '>=', J$.R(5196137, 'nb', nb, false, false), J$.T(5196145, 0, 22, false)))) {
                                if (J$.C(278392, J$.B(594778, '>', J$.R(5196153, 'nb', nb, false, false), J$.T(5196161, 0, 22, false))))
                                    J$.P(5196193, J$.R(5196169, 'self', self, false, false), 'lastNeed', J$.B(594786, '-', J$.R(5196177, 'nb', nb, false, false), J$.T(5196185, 1, 22, false)));
                                return J$.Rt(5196209, J$.R(5196201, 'nb', nb, false, false));
                            }
                            if (J$.C(278416, J$.C(278408, J$.B(594810, '<', j = J$.W(5196225, 'j', J$.B(594802, '-', J$.U(594794, '+', J$.R(5196217, 'j', j, false, false)), 1), j, false, false), J$.R(5196233, 'i', i, false, false))) ? J$._() : J$.B(594826, '===', J$.R(5196241, 'nb', nb, false, false), J$.U(594818, '-', J$.T(5196249, 2, 22, false)))))
                                return J$.Rt(5196265, J$.T(5196257, 0, 22, false));
                            nb = J$.W(5196313, 'nb', J$.F(5196305, J$.R(5196273, 'utf8CheckByte', utf8CheckByte, false, true), false)(J$.G(5196297, J$.R(5196281, 'buf', buf, false, false), J$.R(5196289, 'j', j, false, false))), nb, false, false);
                            if (J$.C(278432, J$.B(594834, '>=', J$.R(5196321, 'nb', nb, false, false), J$.T(5196329, 0, 22, false)))) {
                                if (J$.C(278424, J$.B(594842, '>', J$.R(5196337, 'nb', nb, false, false), J$.T(5196345, 0, 22, false))))
                                    J$.P(5196377, J$.R(5196353, 'self', self, false, false), 'lastNeed', J$.B(594850, '-', J$.R(5196361, 'nb', nb, false, false), J$.T(5196369, 2, 22, false)));
                                return J$.Rt(5196393, J$.R(5196385, 'nb', nb, false, false));
                            }
                            if (J$.C(278448, J$.C(278440, J$.B(594874, '<', j = J$.W(5196409, 'j', J$.B(594866, '-', J$.U(594858, '+', J$.R(5196401, 'j', j, false, false)), 1), j, false, false), J$.R(5196417, 'i', i, false, false))) ? J$._() : J$.B(594890, '===', J$.R(5196425, 'nb', nb, false, false), J$.U(594882, '-', J$.T(5196433, 2, 22, false)))))
                                return J$.Rt(5196449, J$.T(5196441, 0, 22, false));
                            nb = J$.W(5196497, 'nb', J$.F(5196489, J$.R(5196457, 'utf8CheckByte', utf8CheckByte, false, true), false)(J$.G(5196481, J$.R(5196465, 'buf', buf, false, false), J$.R(5196473, 'j', j, false, false))), nb, false, false);
                            if (J$.C(278472, J$.B(594898, '>=', J$.R(5196505, 'nb', nb, false, false), J$.T(5196513, 0, 22, false)))) {
                                if (J$.C(278464, J$.B(594906, '>', J$.R(5196521, 'nb', nb, false, false), J$.T(5196529, 0, 22, false)))) {
                                    if (J$.C(278456, J$.B(594914, '===', J$.R(5196537, 'nb', nb, false, false), J$.T(5196545, 2, 22, false))))
                                        nb = J$.W(5196561, 'nb', J$.T(5196553, 0, 22, false), nb, false, false);
                                    else
                                        J$.P(5196593, J$.R(5196569, 'self', self, false, false), 'lastNeed', J$.B(594922, '-', J$.R(5196577, 'nb', nb, false, false), J$.T(5196585, 3, 22, false)));
                                }
                                return J$.Rt(5196609, J$.R(5196601, 'nb', nb, false, false));
                            }
                            return J$.Rt(5196625, J$.T(5196617, 0, 22, false));
                        } catch (J$e) {
                            J$.Ex(5200073, J$e);
                        } finally {
                            if (J$.Fr(5200081))
                                continue jalangiLabel7;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function utf8CheckExtraBytes(self, buf, p) {
                jalangiLabel8:
                    while (true) {
                        try {
                            J$.Fe(5197025, arguments.callee, this, arguments);
                            arguments = J$.N(5197033, 'arguments', arguments, true, false, false);
                            self = J$.N(5197041, 'self', self, true, false, false);
                            buf = J$.N(5197049, 'buf', buf, true, false, false);
                            p = J$.N(5197057, 'p', p, true, false, false);
                            if (J$.C(278480, J$.B(594938, '!==', J$.B(594930, '&', J$.G(5196705, J$.R(5196689, 'buf', buf, false, false), J$.T(5196697, 0, 22, false)), J$.T(5196713, 192, 22, false)), J$.T(5196721, 128, 22, false)))) {
                                J$.P(5196745, J$.R(5196729, 'self', self, false, false), 'lastNeed', J$.T(5196737, 0, 22, false));
                                return J$.Rt(5196761, J$.T(5196753, '\uFFFD', 21, false));
                            }
                            if (J$.C(278528, J$.C(278488, J$.B(594946, '>', J$.G(5196777, J$.R(5196769, 'self', self, false, false), 'lastNeed'), J$.T(5196785, 1, 22, false))) ? J$.B(594954, '>', J$.G(5196801, J$.R(5196793, 'buf', buf, false, false), 'length'), J$.T(5196809, 1, 22, false)) : J$._())) {
                                if (J$.C(278496, J$.B(594970, '!==', J$.B(594962, '&', J$.G(5196833, J$.R(5196817, 'buf', buf, false, false), J$.T(5196825, 1, 22, false)), J$.T(5196841, 192, 22, false)), J$.T(5196849, 128, 22, false)))) {
                                    J$.P(5196873, J$.R(5196857, 'self', self, false, false), 'lastNeed', J$.T(5196865, 1, 22, false));
                                    return J$.Rt(5196889, J$.T(5196881, '\uFFFD', 21, false));
                                }
                                if (J$.C(278520, J$.C(278504, J$.B(594978, '>', J$.G(5196905, J$.R(5196897, 'self', self, false, false), 'lastNeed'), J$.T(5196913, 2, 22, false))) ? J$.B(594986, '>', J$.G(5196929, J$.R(5196921, 'buf', buf, false, false), 'length'), J$.T(5196937, 2, 22, false)) : J$._())) {
                                    if (J$.C(278512, J$.B(595002, '!==', J$.B(594994, '&', J$.G(5196961, J$.R(5196945, 'buf', buf, false, false), J$.T(5196953, 2, 22, false)), J$.T(5196969, 192, 22, false)), J$.T(5196977, 128, 22, false)))) {
                                        J$.P(5197001, J$.R(5196985, 'self', self, false, false), 'lastNeed', J$.T(5196993, 2, 22, false));
                                        return J$.Rt(5197017, J$.T(5197009, '\uFFFD', 21, false));
                                    }
                                }
                            }
                        } catch (J$e) {
                            J$.Ex(5200089, J$e);
                        } finally {
                            if (J$.Fr(5200097))
                                continue jalangiLabel8;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function utf8FillLast(buf) {
                jalangiLabel9:
                    while (true) {
                        try {
                            J$.Fe(5197449, arguments.callee, this, arguments);
                            arguments = J$.N(5197457, 'arguments', arguments, true, false, false);
                            buf = J$.N(5197465, 'buf', buf, true, false, false);
                            J$.N(5197473, 'p', p, false, false, false);
                            J$.N(5197481, 'r', r, false, false, false);
                            var p = J$.W(5197097, 'p', J$.B(595010, '-', J$.G(5197073, J$.R(5197065, 'this', this, false, false), 'lastTotal'), J$.G(5197089, J$.R(5197081, 'this', this, false, false), 'lastNeed')), p, false, false);
                            var r = J$.W(5197145, 'r', J$.F(5197137, J$.R(5197105, 'utf8CheckExtraBytes', utf8CheckExtraBytes, false, true), false)(J$.R(5197113, 'this', this, false, false), J$.R(5197121, 'buf', buf, false, false), J$.R(5197129, 'p', p, false, false)), r, false, false);
                            if (J$.C(278536, J$.B(595018, '!==', J$.R(5197153, 'r', r, false, false), J$.T(5197161, undefined, 24, false))))
                                return J$.Rt(5197177, J$.R(5197169, 'r', r, false, false));
                            if (J$.C(278544, J$.B(595026, '<=', J$.G(5197193, J$.R(5197185, 'this', this, false, false), 'lastNeed'), J$.G(5197209, J$.R(5197201, 'buf', buf, false, false), 'length')))) {
                                J$.M(5197273, J$.R(5197217, 'buf', buf, false, false), 'copy', false)(J$.G(5197233, J$.R(5197225, 'this', this, false, false), 'lastChar'), J$.R(5197241, 'p', p, false, false), J$.T(5197249, 0, 22, false), J$.G(5197265, J$.R(5197257, 'this', this, false, false), 'lastNeed'));
                                return J$.Rt(5197345, J$.M(5197337, J$.G(5197289, J$.R(5197281, 'this', this, false, false), 'lastChar'), 'toString', false)(J$.G(5197305, J$.R(5197297, 'this', this, false, false), 'encoding'), J$.T(5197313, 0, 22, false), J$.G(5197329, J$.R(5197321, 'this', this, false, false), 'lastTotal')));
                            }
                            J$.M(5197409, J$.R(5197353, 'buf', buf, false, false), 'copy', false)(J$.G(5197369, J$.R(5197361, 'this', this, false, false), 'lastChar'), J$.R(5197377, 'p', p, false, false), J$.T(5197385, 0, 22, false), J$.G(5197401, J$.R(5197393, 'buf', buf, false, false), 'length'));
                            J$.A(5197441, J$.R(5197417, 'this', this, false, false), 'lastNeed', '-')(J$.G(5197433, J$.R(5197425, 'buf', buf, false, false), 'length'));
                        } catch (J$e) {
                            J$.Ex(5200105, J$e);
                        } finally {
                            if (J$.Fr(5200113))
                                continue jalangiLabel9;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function utf8Text(buf, i) {
                jalangiLabel10:
                    while (true) {
                        try {
                            J$.Fe(5197761, arguments.callee, this, arguments);
                            arguments = J$.N(5197769, 'arguments', arguments, true, false, false);
                            buf = J$.N(5197777, 'buf', buf, true, false, false);
                            i = J$.N(5197785, 'i', i, true, false, false);
                            J$.N(5197793, 'total', total, false, false, false);
                            J$.N(5197801, 'end', end, false, false, false);
                            var total = J$.W(5197529, 'total', J$.F(5197521, J$.R(5197489, 'utf8CheckIncomplete', utf8CheckIncomplete, false, true), false)(J$.R(5197497, 'this', this, false, false), J$.R(5197505, 'buf', buf, false, false), J$.R(5197513, 'i', i, false, false)), total, false, false);
                            if (J$.C(278552, J$.U(595034, '!', J$.G(5197545, J$.R(5197537, 'this', this, false, false), 'lastNeed'))))
                                return J$.Rt(5197585, J$.M(5197577, J$.R(5197553, 'buf', buf, false, false), 'toString', false)(J$.T(5197561, 'utf8', 21, false), J$.R(5197569, 'i', i, false, false)));
                            J$.P(5197609, J$.R(5197593, 'this', this, false, false), 'lastTotal', J$.R(5197601, 'total', total, false, false));
                            var end = J$.W(5197657, 'end', J$.B(595050, '-', J$.G(5197625, J$.R(5197617, 'buf', buf, false, false), 'length'), J$.B(595042, '-', J$.R(5197633, 'total', total, false, false), J$.G(5197649, J$.R(5197641, 'this', this, false, false), 'lastNeed'))), end, false, false);
                            J$.M(5197705, J$.R(5197665, 'buf', buf, false, false), 'copy', false)(J$.G(5197681, J$.R(5197673, 'this', this, false, false), 'lastChar'), J$.T(5197689, 0, 22, false), J$.R(5197697, 'end', end, false, false));
                            return J$.Rt(5197753, J$.M(5197745, J$.R(5197713, 'buf', buf, false, false), 'toString', false)(J$.T(5197721, 'utf8', 21, false), J$.R(5197729, 'i', i, false, false), J$.R(5197737, 'end', end, false, false)));
                        } catch (J$e) {
                            J$.Ex(5200121, J$e);
                        } finally {
                            if (J$.Fr(5200129))
                                continue jalangiLabel10;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function utf8End(buf) {
                jalangiLabel11:
                    while (true) {
                        try {
                            J$.Fe(5197929, arguments.callee, this, arguments);
                            arguments = J$.N(5197937, 'arguments', arguments, true, false, false);
                            buf = J$.N(5197945, 'buf', buf, true, false, false);
                            J$.N(5197953, 'r', r, false, false, false);
                            var r = J$.W(5197865, 'r', J$.C(278568, J$.C(278560, J$.R(5197809, 'buf', buf, false, false)) ? J$.G(5197825, J$.R(5197817, 'buf', buf, false, false), 'length') : J$._()) ? J$.M(5197849, J$.R(5197833, 'this', this, false, false), 'write', false)(J$.R(5197841, 'buf', buf, false, false)) : J$.T(5197857, '', 21, false), r, false, false);
                            if (J$.C(278576, J$.G(5197881, J$.R(5197873, 'this', this, false, false), 'lastNeed')))
                                return J$.Rt(5197905, J$.B(595058, '+', J$.R(5197889, 'r', r, false, false), J$.T(5197897, '\uFFFD', 21, false)));
                            return J$.Rt(5197921, J$.R(5197913, 'r', r, false, false));
                        } catch (J$e) {
                            J$.Ex(5200137, J$e);
                        } finally {
                            if (J$.Fr(5200145))
                                continue jalangiLabel11;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function utf16Text(buf, i) {
                jalangiLabel12:
                    while (true) {
                        try {
                            J$.Fe(5198561, arguments.callee, this, arguments);
                            arguments = J$.N(5198569, 'arguments', arguments, true, false, false);
                            buf = J$.N(5198577, 'buf', buf, true, false, false);
                            i = J$.N(5198585, 'i', i, true, false, false);
                            J$.N(5198593, 'r', r, false, false, false);
                            J$.N(5198601, 'c', c, false, false, false);
                            if (J$.C(278608, J$.B(595082, '===', J$.B(595074, '%', J$.B(595066, '-', J$.G(5197969, J$.R(5197961, 'buf', buf, false, false), 'length'), J$.R(5197977, 'i', i, false, false)), J$.T(5197985, 2, 22, false)), J$.T(5197993, 0, 22, false)))) {
                                var r = J$.W(5198033, 'r', J$.M(5198025, J$.R(5198001, 'buf', buf, false, false), 'toString', false)(J$.T(5198009, 'utf16le', 21, false), J$.R(5198017, 'i', i, false, false)), r, false, false);
                                if (J$.C(278600, J$.R(5198041, 'r', r, false, false))) {
                                    var c = J$.W(5198089, 'c', J$.M(5198081, J$.R(5198049, 'r', r, false, false), 'charCodeAt', false)(J$.B(595090, '-', J$.G(5198065, J$.R(5198057, 'r', r, false, false), 'length'), J$.T(5198073, 1, 22, false))), c, false, false);
                                    if (J$.C(278592, J$.C(278584, J$.B(595098, '>=', J$.R(5198097, 'c', c, false, false), J$.T(5198105, 55296, 22, false))) ? J$.B(595106, '<=', J$.R(5198113, 'c', c, false, false), J$.T(5198121, 56319, 22, false)) : J$._())) {
                                        J$.P(5198145, J$.R(5198129, 'this', this, false, false), 'lastNeed', J$.T(5198137, 2, 22, false));
                                        J$.P(5198169, J$.R(5198153, 'this', this, false, false), 'lastTotal', J$.T(5198161, 4, 22, false));
                                        J$.P(5198241, J$.G(5198185, J$.R(5198177, 'this', this, false, false), 'lastChar'), J$.T(5198193, 0, 22, false), J$.G(5198233, J$.R(5198201, 'buf', buf, false, false), J$.B(595114, '-', J$.G(5198217, J$.R(5198209, 'buf', buf, false, false), 'length'), J$.T(5198225, 2, 22, false))));
                                        J$.P(5198313, J$.G(5198257, J$.R(5198249, 'this', this, false, false), 'lastChar'), J$.T(5198265, 1, 22, false), J$.G(5198305, J$.R(5198273, 'buf', buf, false, false), J$.B(595122, '-', J$.G(5198289, J$.R(5198281, 'buf', buf, false, false), 'length'), J$.T(5198297, 1, 22, false))));
                                        return J$.Rt(5198353, J$.M(5198345, J$.R(5198321, 'r', r, false, false), 'slice', false)(J$.T(5198329, 0, 22, false), J$.U(595130, '-', J$.T(5198337, 1, 22, false))));
                                    }
                                }
                                return J$.Rt(5198369, J$.R(5198361, 'r', r, false, false));
                            }
                            J$.P(5198393, J$.R(5198377, 'this', this, false, false), 'lastNeed', J$.T(5198385, 1, 22, false));
                            J$.P(5198417, J$.R(5198401, 'this', this, false, false), 'lastTotal', J$.T(5198409, 2, 22, false));
                            J$.P(5198489, J$.G(5198433, J$.R(5198425, 'this', this, false, false), 'lastChar'), J$.T(5198441, 0, 22, false), J$.G(5198481, J$.R(5198449, 'buf', buf, false, false), J$.B(595138, '-', J$.G(5198465, J$.R(5198457, 'buf', buf, false, false), 'length'), J$.T(5198473, 1, 22, false))));
                            return J$.Rt(5198553, J$.M(5198545, J$.R(5198497, 'buf', buf, false, false), 'toString', false)(J$.T(5198505, 'utf16le', 21, false), J$.R(5198513, 'i', i, false, false), J$.B(595146, '-', J$.G(5198529, J$.R(5198521, 'buf', buf, false, false), 'length'), J$.T(5198537, 1, 22, false))));
                        } catch (J$e) {
                            J$.Ex(5200153, J$e);
                        } finally {
                            if (J$.Fr(5200161))
                                continue jalangiLabel12;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function utf16End(buf) {
                jalangiLabel13:
                    while (true) {
                        try {
                            J$.Fe(5198809, arguments.callee, this, arguments);
                            arguments = J$.N(5198817, 'arguments', arguments, true, false, false);
                            buf = J$.N(5198825, 'buf', buf, true, false, false);
                            J$.N(5198833, 'r', r, false, false, false);
                            J$.N(5198841, 'end', end, false, false, false);
                            var r = J$.W(5198665, 'r', J$.C(278624, J$.C(278616, J$.R(5198609, 'buf', buf, false, false)) ? J$.G(5198625, J$.R(5198617, 'buf', buf, false, false), 'length') : J$._()) ? J$.M(5198649, J$.R(5198633, 'this', this, false, false), 'write', false)(J$.R(5198641, 'buf', buf, false, false)) : J$.T(5198657, '', 21, false), r, false, false);
                            if (J$.C(278632, J$.G(5198681, J$.R(5198673, 'this', this, false, false), 'lastNeed'))) {
                                var end = J$.W(5198721, 'end', J$.B(595154, '-', J$.G(5198697, J$.R(5198689, 'this', this, false, false), 'lastTotal'), J$.G(5198713, J$.R(5198705, 'this', this, false, false), 'lastNeed')), end, false, false);
                                return J$.Rt(5198785, J$.B(595162, '+', J$.R(5198729, 'r', r, false, false), J$.M(5198777, J$.G(5198745, J$.R(5198737, 'this', this, false, false), 'lastChar'), 'toString', false)(J$.T(5198753, 'utf16le', 21, false), J$.T(5198761, 0, 22, false), J$.R(5198769, 'end', end, false, false))));
                            }
                            return J$.Rt(5198801, J$.R(5198793, 'r', r, false, false));
                        } catch (J$e) {
                            J$.Ex(5200169, J$e);
                        } finally {
                            if (J$.Fr(5200177))
                                continue jalangiLabel13;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function base64Text(buf, i) {
                jalangiLabel14:
                    while (true) {
                        try {
                            J$.Fe(5199297, arguments.callee, this, arguments);
                            arguments = J$.N(5199305, 'arguments', arguments, true, false, false);
                            buf = J$.N(5199313, 'buf', buf, true, false, false);
                            i = J$.N(5199321, 'i', i, true, false, false);
                            J$.N(5199329, 'n', n, false, false, false);
                            var n = J$.W(5198881, 'n', J$.B(595178, '%', J$.B(595170, '-', J$.G(5198857, J$.R(5198849, 'buf', buf, false, false), 'length'), J$.R(5198865, 'i', i, false, false)), J$.T(5198873, 3, 22, false)), n, false, false);
                            if (J$.C(278640, J$.B(595186, '===', J$.R(5198889, 'n', n, false, false), J$.T(5198897, 0, 22, false))))
                                return J$.Rt(5198937, J$.M(5198929, J$.R(5198905, 'buf', buf, false, false), 'toString', false)(J$.T(5198913, 'base64', 21, false), J$.R(5198921, 'i', i, false, false)));
                            J$.P(5198969, J$.R(5198945, 'this', this, false, false), 'lastNeed', J$.B(595194, '-', J$.T(5198953, 3, 22, false), J$.R(5198961, 'n', n, false, false)));
                            J$.P(5198993, J$.R(5198977, 'this', this, false, false), 'lastTotal', J$.T(5198985, 3, 22, false));
                            if (J$.C(278648, J$.B(595202, '===', J$.R(5199001, 'n', n, false, false), J$.T(5199009, 1, 22, false)))) {
                                J$.P(5199081, J$.G(5199025, J$.R(5199017, 'this', this, false, false), 'lastChar'), J$.T(5199033, 0, 22, false), J$.G(5199073, J$.R(5199041, 'buf', buf, false, false), J$.B(595210, '-', J$.G(5199057, J$.R(5199049, 'buf', buf, false, false), 'length'), J$.T(5199065, 1, 22, false))));
                            } else {
                                J$.P(5199153, J$.G(5199097, J$.R(5199089, 'this', this, false, false), 'lastChar'), J$.T(5199105, 0, 22, false), J$.G(5199145, J$.R(5199113, 'buf', buf, false, false), J$.B(595218, '-', J$.G(5199129, J$.R(5199121, 'buf', buf, false, false), 'length'), J$.T(5199137, 2, 22, false))));
                                J$.P(5199225, J$.G(5199169, J$.R(5199161, 'this', this, false, false), 'lastChar'), J$.T(5199177, 1, 22, false), J$.G(5199217, J$.R(5199185, 'buf', buf, false, false), J$.B(595226, '-', J$.G(5199201, J$.R(5199193, 'buf', buf, false, false), 'length'), J$.T(5199209, 1, 22, false))));
                            }
                            return J$.Rt(5199289, J$.M(5199281, J$.R(5199233, 'buf', buf, false, false), 'toString', false)(J$.T(5199241, 'base64', 21, false), J$.R(5199249, 'i', i, false, false), J$.B(595234, '-', J$.G(5199265, J$.R(5199257, 'buf', buf, false, false), 'length'), J$.R(5199273, 'n', n, false, false))));
                        } catch (J$e) {
                            J$.Ex(5200185, J$e);
                        } finally {
                            if (J$.Fr(5200193))
                                continue jalangiLabel14;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function base64End(buf) {
                jalangiLabel15:
                    while (true) {
                        try {
                            J$.Fe(5199513, arguments.callee, this, arguments);
                            arguments = J$.N(5199521, 'arguments', arguments, true, false, false);
                            buf = J$.N(5199529, 'buf', buf, true, false, false);
                            J$.N(5199537, 'r', r, false, false, false);
                            var r = J$.W(5199393, 'r', J$.C(278664, J$.C(278656, J$.R(5199337, 'buf', buf, false, false)) ? J$.G(5199353, J$.R(5199345, 'buf', buf, false, false), 'length') : J$._()) ? J$.M(5199377, J$.R(5199361, 'this', this, false, false), 'write', false)(J$.R(5199369, 'buf', buf, false, false)) : J$.T(5199385, '', 21, false), r, false, false);
                            if (J$.C(278672, J$.G(5199409, J$.R(5199401, 'this', this, false, false), 'lastNeed')))
                                return J$.Rt(5199489, J$.B(595250, '+', J$.R(5199417, 'r', r, false, false), J$.M(5199481, J$.G(5199433, J$.R(5199425, 'this', this, false, false), 'lastChar'), 'toString', false)(J$.T(5199441, 'base64', 21, false), J$.T(5199449, 0, 22, false), J$.B(595242, '-', J$.T(5199457, 3, 22, false), J$.G(5199473, J$.R(5199465, 'this', this, false, false), 'lastNeed')))));
                            return J$.Rt(5199505, J$.R(5199497, 'r', r, false, false));
                        } catch (J$e) {
                            J$.Ex(5200201, J$e);
                        } finally {
                            if (J$.Fr(5200209))
                                continue jalangiLabel15;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function simpleWrite(buf) {
                jalangiLabel16:
                    while (true) {
                        try {
                            J$.Fe(5199585, arguments.callee, this, arguments);
                            arguments = J$.N(5199593, 'arguments', arguments, true, false, false);
                            buf = J$.N(5199601, 'buf', buf, true, false, false);
                            return J$.Rt(5199577, J$.M(5199569, J$.R(5199545, 'buf', buf, false, false), 'toString', false)(J$.G(5199561, J$.R(5199553, 'this', this, false, false), 'encoding')));
                        } catch (J$e) {
                            J$.Ex(5200217, J$e);
                        } finally {
                            if (J$.Fr(5200225))
                                continue jalangiLabel16;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function simpleEnd(buf) {
                jalangiLabel17:
                    while (true) {
                        try {
                            J$.Fe(5199673, arguments.callee, this, arguments);
                            arguments = J$.N(5199681, 'arguments', arguments, true, false, false);
                            buf = J$.N(5199689, 'buf', buf, true, false, false);
                            return J$.Rt(5199665, J$.C(278688, J$.C(278680, J$.R(5199609, 'buf', buf, false, false)) ? J$.G(5199625, J$.R(5199617, 'buf', buf, false, false), 'length') : J$._()) ? J$.M(5199649, J$.R(5199633, 'this', this, false, false), 'write', false)(J$.R(5199641, 'buf', buf, false, false)) : J$.T(5199657, '', 21, false));
                        } catch (J$e) {
                            J$.Ex(5200233, J$e);
                        } finally {
                            if (J$.Fr(5200241))
                                continue jalangiLabel17;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(5199705, 'Buffer', Buffer, false, false, false);
            J$.N(5199713, 'isEncoding', isEncoding, false, false, false);
            _normalizeEncoding = J$.N(5199729, '_normalizeEncoding', J$.T(5199721, _normalizeEncoding, 12, false), true, false, false);
            normalizeEncoding = J$.N(5199745, 'normalizeEncoding', J$.T(5199737, normalizeEncoding, 12, false), true, false, false);
            StringDecoder = J$.N(5199761, 'StringDecoder', J$.T(5199753, StringDecoder, 12, false), true, false, false);
            utf8CheckByte = J$.N(5199777, 'utf8CheckByte', J$.T(5199769, utf8CheckByte, 12, false), true, false, false);
            utf8CheckIncomplete = J$.N(5199793, 'utf8CheckIncomplete', J$.T(5199785, utf8CheckIncomplete, 12, false), true, false, false);
            utf8CheckExtraBytes = J$.N(5199809, 'utf8CheckExtraBytes', J$.T(5199801, utf8CheckExtraBytes, 12, false), true, false, false);
            utf8FillLast = J$.N(5199825, 'utf8FillLast', J$.T(5199817, utf8FillLast, 12, false), true, false, false);
            utf8Text = J$.N(5199841, 'utf8Text', J$.T(5199833, utf8Text, 12, false), true, false, false);
            utf8End = J$.N(5199857, 'utf8End', J$.T(5199849, utf8End, 12, false), true, false, false);
            utf16Text = J$.N(5199873, 'utf16Text', J$.T(5199865, utf16Text, 12, false), true, false, false);
            utf16End = J$.N(5199889, 'utf16End', J$.T(5199881, utf16End, 12, false), true, false, false);
            base64Text = J$.N(5199905, 'base64Text', J$.T(5199897, base64Text, 12, false), true, false, false);
            base64End = J$.N(5199921, 'base64End', J$.T(5199913, base64End, 12, false), true, false, false);
            simpleWrite = J$.N(5199937, 'simpleWrite', J$.T(5199929, simpleWrite, 12, false), true, false, false);
            simpleEnd = J$.N(5199953, 'simpleEnd', J$.T(5199945, simpleEnd, 12, false), true, false, false);
            J$.T(5193785, 'use strict', 21, false);
            var Buffer = J$.W(5193825, 'Buffer', J$.G(5193817, J$.F(5193809, J$.I(typeof require === 'undefined' ? require = J$.R(5193793, 'require', undefined, true, true) : require = J$.R(5193793, 'require', require, true, true)), false)(J$.T(5193801, 'safe-buffer', 21, false)), 'Buffer'), Buffer, false, true);
            var isEncoding = J$.W(5194049, 'isEncoding', J$.C(278096, J$.G(5193841, J$.R(5193833, 'Buffer', Buffer, false, true), 'isEncoding')) ? J$._() : J$.T(5194041, function (encoding) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(5194017, arguments.callee, this, arguments);
                            arguments = J$.N(5194025, 'arguments', arguments, true, false, false);
                            encoding = J$.N(5194033, 'encoding', encoding, true, false, false);
                            encoding = J$.W(5193865, 'encoding', J$.B(594546, '+', J$.T(5193849, '', 21, false), J$.R(5193857, 'encoding', encoding, false, false)), encoding, false, false);
                            switch (J$.C1(278000, J$.C(277992, J$.R(5193873, 'encoding', encoding, false, false)) ? J$.M(5193889, J$.R(5193881, 'encoding', encoding, false, false), 'toLowerCase', false)() : J$._())) {
                            case J$.C2(278008, J$.T(5193897, 'hex', 21, false)):
                            case J$.C2(278016, J$.T(5193905, 'utf8', 21, false)):
                            case J$.C2(278024, J$.T(5193913, 'utf-8', 21, false)):
                            case J$.C2(278032, J$.T(5193921, 'ascii', 21, false)):
                            case J$.C2(278040, J$.T(5193929, 'binary', 21, false)):
                            case J$.C2(278048, J$.T(5193937, 'base64', 21, false)):
                            case J$.C2(278056, J$.T(5193945, 'ucs2', 21, false)):
                            case J$.C2(278064, J$.T(5193953, 'ucs-2', 21, false)):
                            case J$.C2(278072, J$.T(5193961, 'utf16le', 21, false)):
                            case J$.C2(278080, J$.T(5193969, 'utf-16le', 21, false)):
                            case J$.C2(278088, J$.T(5193993, 'raw', 21, false)):
                                return J$.Rt(5193985, J$.T(5193977, true, 23, false));
                            default:
                                return J$.Rt(5194009, J$.T(5194001, false, 23, false));
                            }
                        } catch (J$e) {
                            J$.Ex(5199961, J$e);
                        } finally {
                            if (J$.Fr(5199969))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false), isEncoding, false, true);
            ;
            J$.P(5194545, J$.I(typeof exports === 'undefined' ? exports = J$.R(5194529, 'exports', undefined, true, true) : exports = J$.R(5194529, 'exports', exports, true, true)), 'StringDecoder', J$.R(5194537, 'StringDecoder', StringDecoder, false, true));
            J$.P(5195361, J$.G(5194985, J$.R(5194977, 'StringDecoder', StringDecoder, false, true), 'prototype'), 'write', J$.T(5195353, function (buf) {
                jalangiLabel4:
                    while (true) {
                        try {
                            J$.Fe(5195313, arguments.callee, this, arguments);
                            arguments = J$.N(5195321, 'arguments', arguments, true, false, false);
                            buf = J$.N(5195329, 'buf', buf, true, false, false);
                            J$.N(5195337, 'r', r, false, false, false);
                            J$.N(5195345, 'i', i, false, false, false);
                            if (J$.C(278288, J$.B(594610, '===', J$.G(5195001, J$.R(5194993, 'buf', buf, false, false), 'length'), J$.T(5195009, 0, 22, false))))
                                return J$.Rt(5195025, J$.T(5195017, '', 21, false));
                            var r;
                            var i;
                            if (J$.C(278304, J$.G(5195041, J$.R(5195033, 'this', this, false, false), 'lastNeed'))) {
                                r = J$.W(5195073, 'r', J$.M(5195065, J$.R(5195049, 'this', this, false, false), 'fillLast', false)(J$.R(5195057, 'buf', buf, false, false)), r, false, false);
                                if (J$.C(278296, J$.B(594618, '===', J$.R(5195081, 'r', r, false, false), J$.T(5195089, undefined, 24, false))))
                                    return J$.Rt(5195105, J$.T(5195097, '', 21, false));
                                i = J$.W(5195129, 'i', J$.G(5195121, J$.R(5195113, 'this', this, false, false), 'lastNeed'), i, false, false);
                                J$.P(5195153, J$.R(5195137, 'this', this, false, false), 'lastNeed', J$.T(5195145, 0, 22, false));
                            } else {
                                i = J$.W(5195169, 'i', J$.T(5195161, 0, 22, false), i, false, false);
                            }
                            if (J$.C(278320, J$.B(594626, '<', J$.R(5195177, 'i', i, false, false), J$.G(5195193, J$.R(5195185, 'buf', buf, false, false), 'length'))))
                                return J$.Rt(5195281, J$.C(278312, J$.R(5195201, 'r', r, false, false)) ? J$.B(594634, '+', J$.R(5195209, 'r', r, false, false), J$.M(5195241, J$.R(5195217, 'this', this, false, false), 'text', false)(J$.R(5195225, 'buf', buf, false, false), J$.R(5195233, 'i', i, false, false))) : J$.M(5195273, J$.R(5195249, 'this', this, false, false), 'text', false)(J$.R(5195257, 'buf', buf, false, false), J$.R(5195265, 'i', i, false, false)));
                            return J$.Rt(5195305, J$.C(278328, J$.R(5195289, 'r', r, false, false)) ? J$._() : J$.T(5195297, '', 21, false));
                        } catch (J$e) {
                            J$.Ex(5200025, J$e);
                        } finally {
                            if (J$.Fr(5200033))
                                continue jalangiLabel4;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(5195393, J$.G(5195377, J$.R(5195369, 'StringDecoder', StringDecoder, false, true), 'prototype'), 'end', J$.R(5195385, 'utf8End', utf8End, false, true));
            J$.P(5195425, J$.G(5195409, J$.R(5195401, 'StringDecoder', StringDecoder, false, true), 'prototype'), 'text', J$.R(5195417, 'utf8Text', utf8Text, false, true));
            J$.P(5195793, J$.G(5195441, J$.R(5195433, 'StringDecoder', StringDecoder, false, true), 'prototype'), 'fillLast', J$.T(5195785, function (buf) {
                jalangiLabel5:
                    while (true) {
                        try {
                            J$.Fe(5195761, arguments.callee, this, arguments);
                            arguments = J$.N(5195769, 'arguments', arguments, true, false, false);
                            buf = J$.N(5195777, 'buf', buf, true, false, false);
                            if (J$.C(278336, J$.B(594642, '<=', J$.G(5195457, J$.R(5195449, 'this', this, false, false), 'lastNeed'), J$.G(5195473, J$.R(5195465, 'buf', buf, false, false), 'length')))) {
                                J$.M(5195561, J$.R(5195481, 'buf', buf, false, false), 'copy', false)(J$.G(5195497, J$.R(5195489, 'this', this, false, false), 'lastChar'), J$.B(594650, '-', J$.G(5195513, J$.R(5195505, 'this', this, false, false), 'lastTotal'), J$.G(5195529, J$.R(5195521, 'this', this, false, false), 'lastNeed')), J$.T(5195537, 0, 22, false), J$.G(5195553, J$.R(5195545, 'this', this, false, false), 'lastNeed'));
                                return J$.Rt(5195633, J$.M(5195625, J$.G(5195577, J$.R(5195569, 'this', this, false, false), 'lastChar'), 'toString', false)(J$.G(5195593, J$.R(5195585, 'this', this, false, false), 'encoding'), J$.T(5195601, 0, 22, false), J$.G(5195617, J$.R(5195609, 'this', this, false, false), 'lastTotal')));
                            }
                            J$.M(5195721, J$.R(5195641, 'buf', buf, false, false), 'copy', false)(J$.G(5195657, J$.R(5195649, 'this', this, false, false), 'lastChar'), J$.B(594658, '-', J$.G(5195673, J$.R(5195665, 'this', this, false, false), 'lastTotal'), J$.G(5195689, J$.R(5195681, 'this', this, false, false), 'lastNeed')), J$.T(5195697, 0, 22, false), J$.G(5195713, J$.R(5195705, 'buf', buf, false, false), 'length'));
                            J$.A(5195753, J$.R(5195729, 'this', this, false, false), 'lastNeed', '-')(J$.G(5195745, J$.R(5195737, 'buf', buf, false, false), 'length'));
                        } catch (J$e) {
                            J$.Ex(5200041, J$e);
                        } finally {
                            if (J$.Fr(5200049))
                                continue jalangiLabel5;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
        } catch (J$e) {
            J$.Ex(5200249, J$e);
        } finally {
            if (J$.Sr(5200257))
                continue jalangiLabel18;
            else
                break jalangiLabel18;
        }
    }
// JALANGI DO NOT INSTRUMENT

