J$.noInstrEval = false;
jalangiLabel2:
    while (true) {
        try {
            J$.Se(4577577, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestCouchNode/node_modules/noop-logger/test/index.js');
            J$.N(4577585, 'assert', assert, false, false, false);
            J$.N(4577593, 'logger', logger, false, false, false);
            var assert = J$.W(4577041, 'assert', J$.F(4577033, J$.I(typeof require === 'undefined' ? require = J$.R(4577017, 'require', undefined, true, true) : require = J$.R(4577017, 'require', require, true, true)), false)(J$.T(4577025, 'assert', 21, false)), assert, false, true);
            var logger = J$.W(4577073, 'logger', J$.F(4577065, J$.I(typeof require === 'undefined' ? require = J$.R(4577049, 'require', undefined, true, true) : require = J$.R(4577049, 'require', require, true, true)), false)(J$.T(4577057, '..', 21, false)), logger, false, true);
            J$.F(4577569, J$.I(typeof describe === 'undefined' ? describe = J$.R(4577081, 'describe', undefined, true, true) : describe = J$.R(4577081, 'describe', describe, true, true)), false)(J$.T(4577089, 'noop-logger', 21, false), J$.T(4577561, function () {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(4577545, arguments.callee, this, arguments);
                            arguments = J$.N(4577553, 'arguments', arguments, true, false, false);
                            J$.F(4577537, J$.I(typeof it === 'undefined' ? it = J$.R(4577097, 'it', undefined, true, true) : it = J$.R(4577097, 'it', it, true, true)), false)(J$.T(4577105, 'should expose methods', 21, false), J$.T(4577529, function () {
                                jalangiLabel0:
                                    while (true) {
                                        try {
                                            J$.Fe(4577513, arguments.callee, this, arguments);
                                            arguments = J$.N(4577521, 'arguments', arguments, true, false, false);
                                            J$.M(4577145, J$.R(4577113, 'assert', assert, false, true), 'equal', false)(J$.T(4577121, 'function', 21, false), J$.U(556554, 'typeof', J$.G(4577137, J$.R(4577129, 'logger', logger, false, true), 'debug')));
                                            J$.M(4577185, J$.R(4577153, 'assert', assert, false, true), 'equal', false)(J$.T(4577161, 'function', 21, false), J$.U(556562, 'typeof', J$.G(4577177, J$.R(4577169, 'logger', logger, false, true), 'info')));
                                            J$.M(4577225, J$.R(4577193, 'assert', assert, false, true), 'equal', false)(J$.T(4577201, 'function', 21, false), J$.U(556570, 'typeof', J$.G(4577217, J$.R(4577209, 'logger', logger, false, true), 'warn')));
                                            J$.M(4577265, J$.R(4577233, 'assert', assert, false, true), 'equal', false)(J$.T(4577241, 'function', 21, false), J$.U(556578, 'typeof', J$.G(4577257, J$.R(4577249, 'logger', logger, false, true), 'error')));
                                            J$.M(4577305, J$.R(4577273, 'assert', assert, false, true), 'equal', false)(J$.T(4577281, 'function', 21, false), J$.U(556586, 'typeof', J$.G(4577297, J$.R(4577289, 'logger', logger, false, true), 'critical')));
                                            J$.M(4577345, J$.R(4577313, 'assert', assert, false, true), 'equal', false)(J$.T(4577321, 'function', 21, false), J$.U(556594, 'typeof', J$.G(4577337, J$.R(4577329, 'logger', logger, false, true), 'alert')));
                                            J$.M(4577385, J$.R(4577353, 'assert', assert, false, true), 'equal', false)(J$.T(4577361, 'function', 21, false), J$.U(556602, 'typeof', J$.G(4577377, J$.R(4577369, 'logger', logger, false, true), 'emergency')));
                                            J$.M(4577425, J$.R(4577393, 'assert', assert, false, true), 'equal', false)(J$.T(4577401, 'function', 21, false), J$.U(556610, 'typeof', J$.G(4577417, J$.R(4577409, 'logger', logger, false, true), 'notice')));
                                            J$.M(4577465, J$.R(4577433, 'assert', assert, false, true), 'equal', false)(J$.T(4577441, 'function', 21, false), J$.U(556618, 'typeof', J$.G(4577457, J$.R(4577449, 'logger', logger, false, true), 'verbose')));
                                            J$.M(4577505, J$.R(4577473, 'assert', assert, false, true), 'equal', false)(J$.T(4577481, 'function', 21, false), J$.U(556626, 'typeof', J$.G(4577497, J$.R(4577489, 'logger', logger, false, true), 'fatal')));
                                        } catch (J$e) {
                                            J$.Ex(4577601, J$e);
                                        } finally {
                                            if (J$.Fr(4577609))
                                                continue jalangiLabel0;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                        } catch (J$e) {
                            J$.Ex(4577617, J$e);
                        } finally {
                            if (J$.Fr(4577625))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
        } catch (J$e) {
            J$.Ex(4577633, J$e);
        } finally {
            if (J$.Sr(4577641))
                continue jalangiLabel2;
            else
                break jalangiLabel2;
        }
    }
// JALANGI DO NOT INSTRUMENT

