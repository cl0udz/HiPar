J$.noInstrEval = false;
jalangiLabel11:
    while (true) {
        try {
            J$.Se(6448985, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestCouchNode/node_modules/ajv/lib/compile/async.js');
            function compileAsync(schema, meta, callback) {
                jalangiLabel10:
                    while (true) {
                        try {
                            J$.Fe(6448897, arguments.callee, this, arguments);
                            function loadMetaSchemaOf(sch) {
                                jalangiLabel2:
                                    while (true) {
                                        try {
                                            J$.Fe(6447977, arguments.callee, this, arguments);
                                            arguments = J$.N(6447985, 'arguments', arguments, true, false, false);
                                            sch = J$.N(6447993, 'sch', sch, true, false, false);
                                            J$.N(6448001, '$schema', $schema, false, false, false);
                                            var $schema = J$.W(6447865, '$schema', J$.G(6447857, J$.R(6447849, 'sch', sch, false, false), '$schema'), $schema, false, false);
                                            return J$.Rt(6447969, J$.C(350808, J$.C(350800, J$.R(6447873, '$schema', $schema, false, false)) ? J$.U(654994, '!', J$.M(6447897, J$.R(6447881, 'self', self, false, false), 'getSchema', false)(J$.R(6447889, '$schema', $schema, false, false))) : J$._()) ? J$.M(6447945, J$.R(6447905, 'compileAsync', compileAsync, false, true), 'call', false)(J$.R(6447913, 'self', self, false, false), J$.T(6447929, { $ref: J$.R(6447921, '$schema', $schema, false, false) }, 11, false), J$.T(6447937, true, 23, false)) : J$.M(6447961, J$.I(typeof Promise === 'undefined' ? Promise = J$.R(6447953, 'Promise', undefined, true, true) : Promise = J$.R(6447953, 'Promise', Promise, true, true)), 'resolve', false)());
                                        } catch (J$e) {
                                            J$.Ex(6449049, J$e);
                                        } finally {
                                            if (J$.Fr(6449057))
                                                continue jalangiLabel2;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }
                            function _compileAsync(schemaObj) {
                                jalangiLabel9:
                                    while (true) {
                                        try {
                                            J$.Fe(6448857, arguments.callee, this, arguments);
                                            function loadMissingSchema(e) {
                                                jalangiLabel8:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(6448785, arguments.callee, this, arguments);
                                                            function removePromise() {
                                                                jalangiLabel6:
                                                                    while (true) {
                                                                        try {
                                                                            J$.Fe(6448673, arguments.callee, this, arguments);
                                                                            arguments = J$.N(6448681, 'arguments', arguments, true, false, false);
                                                                            J$.B(655066, 'delete', J$.G(6448657, J$.R(6448649, 'self', self, false, false), '_loadingSchemas'), J$.R(6448665, 'ref', ref, false, false));
                                                                        } catch (J$e) {
                                                                            J$.Ex(6449113, J$e);
                                                                        } finally {
                                                                            if (J$.Fr(6449121))
                                                                                continue jalangiLabel6;
                                                                            else
                                                                                return J$.Ra();
                                                                        }
                                                                    }
                                                            }
                                                            function added(ref) {
                                                                jalangiLabel7:
                                                                    while (true) {
                                                                        try {
                                                                            J$.Fe(6448761, arguments.callee, this, arguments);
                                                                            arguments = J$.N(6448769, 'arguments', arguments, true, false, false);
                                                                            ref = J$.N(6448777, 'ref', ref, true, false, false);
                                                                            return J$.Rt(6448753, J$.C(350856, J$.G(6448713, J$.G(6448697, J$.R(6448689, 'self', self, false, false), '_refs'), J$.R(6448705, 'ref', ref, false, false))) ? J$._() : J$.G(6448745, J$.G(6448729, J$.R(6448721, 'self', self, false, false), '_schemas'), J$.R(6448737, 'ref', ref, false, false)));
                                                                        } catch (J$e) {
                                                                            J$.Ex(6449129, J$e);
                                                                        } finally {
                                                                            if (J$.Fr(6449137))
                                                                                continue jalangiLabel7;
                                                                            else
                                                                                return J$.Ra();
                                                                        }
                                                                    }
                                                            }
                                                            arguments = J$.N(6448793, 'arguments', arguments, true, false, false);
                                                            e = J$.N(6448801, 'e', e, true, false, false);
                                                            J$.N(6448809, 'ref', ref, false, false, false);
                                                            J$.N(6448817, 'schemaPromise', schemaPromise, false, false, false);
                                                            removePromise = J$.N(6448833, 'removePromise', J$.T(6448825, removePromise, 12, false), true, false, false);
                                                            added = J$.N(6448849, 'added', J$.T(6448841, added, 12, false), true, false, false);
                                                            var ref = J$.W(6448121, 'ref', J$.G(6448113, J$.R(6448105, 'e', e, false, false), 'missingSchema'), ref, false, false);
                                                            if (J$.C(350824, J$.F(6448145, J$.R(6448129, 'added', added, false, false), false)(J$.R(6448137, 'ref', ref, false, false))))
                                                                throw J$.F(6448209, J$.I(typeof Error === 'undefined' ? Error = J$.R(6448153, 'Error', undefined, true, true) : Error = J$.R(6448153, 'Error', Error, true, true)), true)(J$.B(655034, '+', J$.B(655026, '+', J$.B(655018, '+', J$.B(655010, '+', J$.T(6448161, 'Schema ', 21, false), J$.R(6448169, 'ref', ref, false, false)), J$.T(6448177, ' is loaded but ', 21, false)), J$.G(6448193, J$.R(6448185, 'e', e, false, false), 'missingRef')), J$.T(6448201, ' cannot be resolved', 21, false)));
                                                            var schemaPromise = J$.W(6448249, 'schemaPromise', J$.G(6448241, J$.G(6448225, J$.R(6448217, 'self', self, false, false), '_loadingSchemas'), J$.R(6448233, 'ref', ref, false, false)), schemaPromise, false, false);
                                                            if (J$.C(350832, J$.U(655042, '!', J$.R(6448257, 'schemaPromise', schemaPromise, false, false)))) {
                                                                schemaPromise = J$.W(6448329, 'schemaPromise', J$.P(6448321, J$.G(6448273, J$.R(6448265, 'self', self, false, false), '_loadingSchemas'), J$.R(6448281, 'ref', ref, false, false), J$.M(6448313, J$.G(6448297, J$.R(6448289, 'self', self, false, false), '_opts'), 'loadSchema', false)(J$.R(6448305, 'ref', ref, false, false))), schemaPromise, false, false);
                                                                J$.M(6448361, J$.R(6448337, 'schemaPromise', schemaPromise, false, false), 'then', false)(J$.R(6448345, 'removePromise', removePromise, false, false), J$.R(6448353, 'removePromise', removePromise, false, false));
                                                            }
                                                            return J$.Rt(6448641, J$.M(6448633, J$.M(6448569, J$.R(6448369, 'schemaPromise', schemaPromise, false, false), 'then', false)(J$.T(6448561, function (sch) {
                                                                jalangiLabel4:
                                                                    while (true) {
                                                                        try {
                                                                            J$.Fe(6448537, arguments.callee, this, arguments);
                                                                            arguments = J$.N(6448545, 'arguments', arguments, true, false, false);
                                                                            sch = J$.N(6448553, 'sch', sch, true, false, false);
                                                                            if (J$.C(350848, J$.U(655050, '!', J$.F(6448393, J$.R(6448377, 'added', added, false, false), false)(J$.R(6448385, 'ref', ref, false, false))))) {
                                                                                return J$.Rt(6448529, J$.M(6448521, J$.F(6448417, J$.R(6448401, 'loadMetaSchemaOf', loadMetaSchemaOf, false, false), false)(J$.R(6448409, 'sch', sch, false, false)), 'then', false)(J$.T(6448513, function () {
                                                                                    jalangiLabel3:
                                                                                        while (true) {
                                                                                            try {
                                                                                                J$.Fe(6448497, arguments.callee, this, arguments);
                                                                                                arguments = J$.N(6448505, 'arguments', arguments, true, false, false);
                                                                                                if (J$.C(350840, J$.U(655058, '!', J$.F(6448441, J$.R(6448425, 'added', added, false, false), false)(J$.R(6448433, 'ref', ref, false, false)))))
                                                                                                    J$.M(6448489, J$.R(6448449, 'self', self, false, false), 'addSchema', false)(J$.R(6448457, 'sch', sch, false, false), J$.R(6448465, 'ref', ref, false, false), J$.T(6448473, undefined, 24, false), J$.R(6448481, 'meta', meta, false, false));
                                                                                            } catch (J$e) {
                                                                                                J$.Ex(6449065, J$e);
                                                                                            } finally {
                                                                                                if (J$.Fr(6449073))
                                                                                                    continue jalangiLabel3;
                                                                                                else
                                                                                                    return J$.Ra();
                                                                                            }
                                                                                        }
                                                                                }, 12, false)));
                                                                            }
                                                                        } catch (J$e) {
                                                                            J$.Ex(6449081, J$e);
                                                                        } finally {
                                                                            if (J$.Fr(6449089))
                                                                                continue jalangiLabel4;
                                                                            else
                                                                                return J$.Ra();
                                                                        }
                                                                    }
                                                            }, 12, false)), 'then', false)(J$.T(6448625, function () {
                                                                jalangiLabel5:
                                                                    while (true) {
                                                                        try {
                                                                            J$.Fe(6448609, arguments.callee, this, arguments);
                                                                            arguments = J$.N(6448617, 'arguments', arguments, true, false, false);
                                                                            return J$.Rt(6448601, J$.F(6448593, J$.R(6448577, '_compileAsync', _compileAsync, false, false), false)(J$.R(6448585, 'schemaObj', schemaObj, false, false)));
                                                                        } catch (J$e) {
                                                                            J$.Ex(6449097, J$e);
                                                                        } finally {
                                                                            if (J$.Fr(6449105))
                                                                                continue jalangiLabel5;
                                                                            else
                                                                                return J$.Ra();
                                                                        }
                                                                    }
                                                            }, 12, false)));
                                                        } catch (J$e) {
                                                            J$.Ex(6449145, J$e);
                                                        } finally {
                                                            if (J$.Fr(6449153))
                                                                continue jalangiLabel8;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }
                                            arguments = J$.N(6448865, 'arguments', arguments, true, false, false);
                                            schemaObj = J$.N(6448873, 'schemaObj', schemaObj, true, false, false);
                                            loadMissingSchema = J$.N(6448889, 'loadMissingSchema', J$.T(6448881, loadMissingSchema, 12, false), true, false, false);
                                            try {
                                                return J$.Rt(6448033, J$.M(6448025, J$.R(6448009, 'self', self, false, false), '_compile', false)(J$.R(6448017, 'schemaObj', schemaObj, false, false)));
                                            } catch (e) {
                                                J$.N(6448097, 'e', e, false, false, true);
                                                if (J$.C(350816, J$.B(655002, 'instanceof', J$.R(6448041, 'e', e, false, false), J$.R(6448049, 'MissingRefError', MissingRefError, false, true))))
                                                    return J$.Rt(6448081, J$.F(6448073, J$.R(6448057, 'loadMissingSchema', loadMissingSchema, false, false), false)(J$.R(6448065, 'e', e, false, false)));
                                                throw J$.R(6448089, 'e', e, false, false);
                                            }
                                        } catch (J$e) {
                                            J$.Ex(6449161, J$e);
                                        } finally {
                                            if (J$.Fr(6449169))
                                                continue jalangiLabel9;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }
                            arguments = J$.N(6448905, 'arguments', arguments, true, false, false);
                            schema = J$.N(6448913, 'schema', schema, true, false, false);
                            meta = J$.N(6448921, 'meta', meta, true, false, false);
                            callback = J$.N(6448929, 'callback', callback, true, false, false);
                            J$.N(6448937, 'self', self, false, false, false);
                            J$.N(6448945, 'p', p, false, false, false);
                            loadMetaSchemaOf = J$.N(6448961, 'loadMetaSchemaOf', J$.T(6448953, loadMetaSchemaOf, 12, false), true, false, false);
                            _compileAsync = J$.N(6448977, '_compileAsync', J$.T(6448969, _compileAsync, 12, false), true, false, false);
                            var self = J$.W(6447457, 'self', J$.R(6447449, 'this', this, false, false), self, false, false);
                            if (J$.C(350768, J$.B(654970, '!=', J$.U(654962, 'typeof', J$.G(6447481, J$.G(6447473, J$.R(6447465, 'this', this, false, false), '_opts'), 'loadSchema')), J$.T(6447489, 'function', 21, false))))
                                throw J$.F(6447513, J$.I(typeof Error === 'undefined' ? Error = J$.R(6447497, 'Error', undefined, true, true) : Error = J$.R(6447497, 'Error', Error, true, true)), true)(J$.T(6447505, 'options.loadSchema should be a function', 21, false));
                            if (J$.C(350776, J$.B(654986, '==', J$.U(654978, 'typeof', J$.R(6447521, 'meta', meta, false, false)), J$.T(6447529, 'function', 21, false)))) {
                                callback = J$.W(6447545, 'callback', J$.R(6447537, 'meta', meta, false, false), callback, false, false);
                                meta = J$.W(6447561, 'meta', J$.T(6447553, undefined, 24, false), meta, false, false);
                            }
                            var p = J$.W(6447729, 'p', J$.M(6447721, J$.F(6447585, J$.R(6447569, 'loadMetaSchemaOf', loadMetaSchemaOf, false, false), false)(J$.R(6447577, 'schema', schema, false, false)), 'then', false)(J$.T(6447713, function () {
                                jalangiLabel0:
                                    while (true) {
                                        try {
                                            J$.Fe(6447689, arguments.callee, this, arguments);
                                            arguments = J$.N(6447697, 'arguments', arguments, true, false, false);
                                            J$.N(6447705, 'schemaObj', schemaObj, false, false, false);
                                            var schemaObj = J$.W(6447633, 'schemaObj', J$.M(6447625, J$.R(6447593, 'self', self, false, false), '_addSchema', false)(J$.R(6447601, 'schema', schema, false, false), J$.T(6447609, undefined, 24, false), J$.R(6447617, 'meta', meta, false, false)), schemaObj, false, false);
                                            return J$.Rt(6447681, J$.C(350784, J$.G(6447649, J$.R(6447641, 'schemaObj', schemaObj, false, false), 'validate')) ? J$._() : J$.F(6447673, J$.R(6447657, '_compileAsync', _compileAsync, false, false), false)(J$.R(6447665, 'schemaObj', schemaObj, false, false)));
                                        } catch (J$e) {
                                            J$.Ex(6449017, J$e);
                                        } finally {
                                            if (J$.Fr(6449025))
                                                continue jalangiLabel0;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false)), p, false, false);
                            if (J$.C(350792, J$.R(6447737, 'callback', callback, false, false))) {
                                J$.M(6447825, J$.R(6447745, 'p', p, false, false), 'then', false)(J$.T(6447809, function (v) {
                                    jalangiLabel1:
                                        while (true) {
                                            try {
                                                J$.Fe(6447785, arguments.callee, this, arguments);
                                                arguments = J$.N(6447793, 'arguments', arguments, true, false, false);
                                                v = J$.N(6447801, 'v', v, true, false, false);
                                                J$.F(6447777, J$.R(6447753, 'callback', callback, false, false), false)(J$.T(6447761, null, 25, false), J$.R(6447769, 'v', v, false, false));
                                            } catch (J$e) {
                                                J$.Ex(6449033, J$e);
                                            } finally {
                                                if (J$.Fr(6449041))
                                                    continue jalangiLabel1;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false), J$.R(6447817, 'callback', callback, false, false));
                            }
                            return J$.Rt(6447841, J$.R(6447833, 'p', p, false, false));
                        } catch (J$e) {
                            J$.Ex(6449177, J$e);
                        } finally {
                            if (J$.Fr(6449185))
                                continue jalangiLabel10;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(6448993, 'MissingRefError', MissingRefError, false, false, false);
            compileAsync = J$.N(6449009, 'compileAsync', J$.T(6449001, compileAsync, 12, false), true, false, false);
            J$.T(6447377, 'use strict', 21, false);
            var MissingRefError = J$.W(6447417, 'MissingRefError', J$.G(6447409, J$.F(6447401, J$.I(typeof require === 'undefined' ? require = J$.R(6447385, 'require', undefined, true, true) : require = J$.R(6447385, 'require', require, true, true)), false)(J$.T(6447393, './error_classes', 21, false)), 'MissingRef'), MissingRefError, false, true);
            J$.P(6447441, J$.I(typeof module === 'undefined' ? module = J$.R(6447425, 'module', undefined, true, true) : module = J$.R(6447425, 'module', module, true, true)), 'exports', J$.R(6447433, 'compileAsync', compileAsync, false, true));
        } catch (J$e) {
            J$.Ex(6449193, J$e);
        } finally {
            if (J$.Sr(6449201))
                continue jalangiLabel11;
            else
                break jalangiLabel11;
        }
    }
// JALANGI DO NOT INSTRUMENT

