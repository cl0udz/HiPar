J$.noInstrEval = false;
jalangiLabel4:
    while (true) {
        try {
            J$.Se(6449929, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestCouchNode/node_modules/ajv/lib/compile/error_classes.js');
            function ValidationError(errors) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(6449481, arguments.callee, this, arguments);
                            arguments = J$.N(6449489, 'arguments', arguments, true, false, false);
                            errors = J$.N(6449497, 'errors', errors, true, false, false);
                            J$.P(6449409, J$.R(6449393, 'this', this, false, false), 'message', J$.T(6449401, 'validation failed', 21, false));
                            J$.P(6449433, J$.R(6449417, 'this', this, false, false), 'errors', J$.R(6449425, 'errors', errors, false, false));
                            J$.P(6449473, J$.R(6449441, 'this', this, false, false), 'ajv', J$.P(6449465, J$.R(6449449, 'this', this, false, false), 'validation', J$.T(6449457, true, 23, false)));
                        } catch (J$e) {
                            J$.Ex(6449993, J$e);
                        } finally {
                            if (J$.Fr(6450001))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function MissingRefError(baseId, ref, message) {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(6449769, arguments.callee, this, arguments);
                            arguments = J$.N(6449777, 'arguments', arguments, true, false, false);
                            baseId = J$.N(6449785, 'baseId', baseId, true, false, false);
                            ref = J$.N(6449793, 'ref', ref, true, false, false);
                            message = J$.N(6449801, 'message', message, true, false, false);
                            J$.P(6449649, J$.R(6449601, 'this', this, false, false), 'message', J$.C(350864, J$.R(6449609, 'message', message, false, false)) ? J$._() : J$.M(6449641, J$.R(6449617, 'MissingRefError', MissingRefError, false, true), 'message', false)(J$.R(6449625, 'baseId', baseId, false, false), J$.R(6449633, 'ref', ref, false, false)));
                            J$.P(6449697, J$.R(6449657, 'this', this, false, false), 'missingRef', J$.M(6449689, J$.R(6449665, 'resolve', resolve, false, true), 'url', false)(J$.R(6449673, 'baseId', baseId, false, false), J$.R(6449681, 'ref', ref, false, false)));
                            J$.P(6449761, J$.R(6449705, 'this', this, false, false), 'missingSchema', J$.M(6449753, J$.R(6449713, 'resolve', resolve, false, true), 'normalizeId', false)(J$.M(6449745, J$.R(6449721, 'resolve', resolve, false, true), 'fullPath', false)(J$.G(6449737, J$.R(6449729, 'this', this, false, false), 'missingRef'))));
                        } catch (J$e) {
                            J$.Ex(6450025, J$e);
                        } finally {
                            if (J$.Fr(6450033))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function errorSubclass(Subclass) {
                jalangiLabel3:
                    while (true) {
                        try {
                            J$.Fe(6449905, arguments.callee, this, arguments);
                            arguments = J$.N(6449913, 'arguments', arguments, true, false, false);
                            Subclass = J$.N(6449921, 'Subclass', Subclass, true, false, false);
                            J$.P(6449849, J$.R(6449809, 'Subclass', Subclass, false, false), 'prototype', J$.M(6449841, J$.I(typeof Object === 'undefined' ? Object = J$.R(6449817, 'Object', undefined, true, true) : Object = J$.R(6449817, 'Object', Object, true, true)), 'create', false)(J$.G(6449833, J$.I(typeof Error === 'undefined' ? Error = J$.R(6449825, 'Error', undefined, true, true) : Error = J$.R(6449825, 'Error', Error, true, true)), 'prototype')));
                            J$.P(6449881, J$.G(6449865, J$.R(6449857, 'Subclass', Subclass, false, false), 'prototype'), 'constructor', J$.R(6449873, 'Subclass', Subclass, false, false));
                            return J$.Rt(6449897, J$.R(6449889, 'Subclass', Subclass, false, false));
                        } catch (J$e) {
                            J$.Ex(6450041, J$e);
                        } finally {
                            if (J$.Fr(6450049))
                                continue jalangiLabel3;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(6449937, 'resolve', resolve, false, false, false);
            ValidationError = J$.N(6449953, 'ValidationError', J$.T(6449945, ValidationError, 12, false), true, false, false);
            MissingRefError = J$.N(6449969, 'MissingRefError', J$.T(6449961, MissingRefError, 12, false), true, false, false);
            errorSubclass = J$.N(6449985, 'errorSubclass', J$.T(6449977, errorSubclass, 12, false), true, false, false);
            J$.T(6449281, 'use strict', 21, false);
            var resolve = J$.W(6449313, 'resolve', J$.F(6449305, J$.I(typeof require === 'undefined' ? require = J$.R(6449289, 'require', undefined, true, true) : require = J$.R(6449289, 'require', require, true, true)), false)(J$.T(6449297, './resolve', 21, false)), resolve, false, true);
            J$.P(6449385, J$.I(typeof module === 'undefined' ? module = J$.R(6449321, 'module', undefined, true, true) : module = J$.R(6449321, 'module', module, true, true)), 'exports', J$.T(6449377, {
                Validation: J$.F(6449345, J$.R(6449329, 'errorSubclass', errorSubclass, false, true), false)(J$.R(6449337, 'ValidationError', ValidationError, false, true)),
                MissingRef: J$.F(6449369, J$.R(6449353, 'errorSubclass', errorSubclass, false, true), false)(J$.R(6449361, 'MissingRefError', MissingRefError, false, true))
            }, 11, false));
            J$.P(6449593, J$.R(6449505, 'MissingRefError', MissingRefError, false, true), 'message', J$.T(6449585, function (baseId, ref) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(6449553, arguments.callee, this, arguments);
                            arguments = J$.N(6449561, 'arguments', arguments, true, false, false);
                            baseId = J$.N(6449569, 'baseId', baseId, true, false, false);
                            ref = J$.N(6449577, 'ref', ref, true, false, false);
                            return J$.Rt(6449545, J$.B(655090, '+', J$.B(655082, '+', J$.B(655074, '+', J$.T(6449513, 'can\'t resolve reference ', 21, false), J$.R(6449521, 'ref', ref, false, false)), J$.T(6449529, ' from id ', 21, false)), J$.R(6449537, 'baseId', baseId, false, false)));
                        } catch (J$e) {
                            J$.Ex(6450009, J$e);
                        } finally {
                            if (J$.Fr(6450017))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
        } catch (J$e) {
            J$.Ex(6450057, J$e);
        } finally {
            if (J$.Sr(6450065))
                continue jalangiLabel4;
            else
                break jalangiLabel4;
        }
    }
// JALANGI DO NOT INSTRUMENT

