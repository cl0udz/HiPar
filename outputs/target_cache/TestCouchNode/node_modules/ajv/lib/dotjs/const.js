J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(6492937, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestCouchNode/node_modules/ajv/lib/dotjs/const.js');
            J$.T(6491417, 'use strict', 21, false);
            J$.P(6492929, J$.I(typeof module === 'undefined' ? module = J$.R(6491425, 'module', undefined, true, true) : module = J$.R(6491425, 'module', module, true, true)), 'exports', J$.T(6492921, function generate_const(it, $keyword, $ruleType) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(6492777, arguments.callee, this, arguments);
                            arguments = J$.N(6492785, 'arguments', arguments, true, false, false);
                            it = J$.N(6492793, 'it', it, true, false, false);
                            $keyword = J$.N(6492801, '$keyword', $keyword, true, false, false);
                            $ruleType = J$.N(6492809, '$ruleType', $ruleType, true, false, false);
                            J$.N(6492817, 'out', out, false, false, false);
                            J$.N(6492825, '$lvl', $lvl, false, false, false);
                            J$.N(6492833, '$dataLvl', $dataLvl, false, false, false);
                            J$.N(6492841, '$schema', $schema, false, false, false);
                            J$.N(6492849, '$schemaPath', $schemaPath, false, false, false);
                            J$.N(6492857, '$errSchemaPath', $errSchemaPath, false, false, false);
                            J$.N(6492865, '$breakOnError', $breakOnError, false, false, false);
                            J$.N(6492873, '$data', $data, false, false, false);
                            J$.N(6492881, '$valid', $valid, false, false, false);
                            J$.N(6492889, '$isData', $isData, false, false, false);
                            J$.N(6492897, '$schemaValue', $schemaValue, false, false, false);
                            J$.N(6492905, '$$outStack', $$outStack, false, false, false);
                            J$.N(6492913, '__err', __err, false, false, false);
                            var out = J$.W(6491441, 'out', J$.T(6491433, ' ', 21, false), out, false, false);
                            var $lvl = J$.W(6491465, '$lvl', J$.G(6491457, J$.R(6491449, 'it', it, false, false), 'level'), $lvl, false, false);
                            var $dataLvl = J$.W(6491489, '$dataLvl', J$.G(6491481, J$.R(6491473, 'it', it, false, false), 'dataLevel'), $dataLvl, false, false);
                            var $schema = J$.W(6491529, '$schema', J$.G(6491521, J$.G(6491505, J$.R(6491497, 'it', it, false, false), 'schema'), J$.R(6491513, '$keyword', $keyword, false, false)), $schema, false, false);
                            var $schemaPath = J$.W(6491585, '$schemaPath', J$.B(662362, '+', J$.G(6491545, J$.R(6491537, 'it', it, false, false), 'schemaPath'), J$.M(6491577, J$.G(6491561, J$.R(6491553, 'it', it, false, false), 'util'), 'getProperty', false)(J$.R(6491569, '$keyword', $keyword, false, false))), $schemaPath, false, false);
                            var $errSchemaPath = J$.W(6491625, '$errSchemaPath', J$.B(662378, '+', J$.B(662370, '+', J$.G(6491601, J$.R(6491593, 'it', it, false, false), 'errSchemaPath'), J$.T(6491609, '/', 21, false)), J$.R(6491617, '$keyword', $keyword, false, false)), $errSchemaPath, false, false);
                            var $breakOnError = J$.W(6491657, '$breakOnError', J$.U(662386, '!', J$.G(6491649, J$.G(6491641, J$.R(6491633, 'it', it, false, false), 'opts'), 'allErrors')), $breakOnError, false, false);
                            var $data = J$.W(6491689, '$data', J$.B(662394, '+', J$.T(6491665, 'data', 21, false), J$.C(353528, J$.R(6491673, '$dataLvl', $dataLvl, false, false)) ? J$._() : J$.T(6491681, '', 21, false)), $data, false, false);
                            var $valid = J$.W(6491713, '$valid', J$.B(662402, '+', J$.T(6491697, 'valid', 21, false), J$.R(6491705, '$lvl', $lvl, false, false)), $valid, false, false);
                            var $isData = J$.W(6491769, '$isData', J$.C(353544, J$.C(353536, J$.G(6491737, J$.G(6491729, J$.R(6491721, 'it', it, false, false), 'opts'), '$data')) ? J$.R(6491745, '$schema', $schema, false, false) : J$._()) ? J$.G(6491761, J$.R(6491753, '$schema', $schema, false, false), '$data') : J$._(), $isData, false, false), $schemaValue;
                            if (J$.C(353552, J$.R(6491777, '$isData', $isData, false, false))) {
                                out = J$.W(6491889, 'out', J$.B(662442, '+', J$.R(6491881, 'out', out, false, false), J$.B(662434, '+', J$.B(662426, '+', J$.B(662418, '+', J$.B(662410, '+', J$.T(6491785, ' var schema', 21, false), J$.R(6491793, '$lvl', $lvl, false, false)), J$.T(6491801, ' = ', 21, false)), J$.M(6491865, J$.G(6491817, J$.R(6491809, 'it', it, false, false), 'util'), 'getData', false)(J$.G(6491833, J$.R(6491825, '$schema', $schema, false, false), '$data'), J$.R(6491841, '$dataLvl', $dataLvl, false, false), J$.G(6491857, J$.R(6491849, 'it', it, false, false), 'dataPathArr'))), J$.T(6491873, '; ', 21, false))), out, false, false);
                                $schemaValue = J$.W(6491913, '$schemaValue', J$.B(662450, '+', J$.T(6491897, 'schema', 21, false), J$.R(6491905, '$lvl', $lvl, false, false)), $schemaValue, false, false);
                            } else {
                                $schemaValue = J$.W(6491929, '$schemaValue', J$.R(6491921, '$schema', $schema, false, false), $schemaValue, false, false);
                            }
                            if (J$.C(353560, J$.U(662458, '!', J$.R(6491937, '$isData', $isData, false, false)))) {
                                out = J$.W(6491993, 'out', J$.B(662498, '+', J$.R(6491985, 'out', out, false, false), J$.B(662490, '+', J$.B(662482, '+', J$.B(662474, '+', J$.B(662466, '+', J$.T(6491945, ' var schema', 21, false), J$.R(6491953, '$lvl', $lvl, false, false)), J$.T(6491961, ' = validate.schema', 21, false)), J$.R(6491969, '$schemaPath', $schemaPath, false, false)), J$.T(6491977, ';', 21, false))), out, false, false);
                            }
                            out = J$.W(6492081, 'out', J$.B(662570, '+', J$.R(6492073, 'out', out, false, false), J$.B(662562, '+', J$.B(662554, '+', J$.B(662546, '+', J$.B(662538, '+', J$.B(662530, '+', J$.B(662522, '+', J$.B(662514, '+', J$.B(662506, '+', J$.T(6492001, 'var ', 21, false), J$.R(6492009, '$valid', $valid, false, false)), J$.T(6492017, ' = equal(', 21, false)), J$.R(6492025, '$data', $data, false, false)), J$.T(6492033, ', schema', 21, false)), J$.R(6492041, '$lvl', $lvl, false, false)), J$.T(6492049, '); if (!', 21, false)), J$.R(6492057, '$valid', $valid, false, false)), J$.T(6492065, ') {   ', 21, false))), out, false, false);
                            var $$outStack = J$.W(6492105, '$$outStack', J$.C(353568, J$.R(6492089, '$$outStack', $$outStack, false, false)) ? J$._() : J$.T(6492097, [], 10, false), $$outStack, false, false);
                            J$.M(6492129, J$.R(6492113, '$$outStack', $$outStack, false, false), 'push', false)(J$.R(6492121, 'out', out, false, false));
                            out = J$.W(6492145, 'out', J$.T(6492137, '', 21, false), out, false, false);
                            if (J$.C(353592, J$.B(662578, '!==', J$.G(6492161, J$.R(6492153, 'it', it, false, false), 'createErrors'), J$.T(6492169, false, 23, false)))) {
                                out = J$.W(6492289, 'out', J$.B(662650, '+', J$.R(6492281, 'out', out, false, false), J$.B(662642, '+', J$.B(662634, '+', J$.B(662626, '+', J$.B(662618, '+', J$.B(662610, '+', J$.B(662602, '+', J$.B(662594, '+', J$.B(662586, '+', J$.T(6492177, ' { keyword: \'', 21, false), J$.T(6492185, 'const', 21, false)), J$.T(6492193, '\' , dataPath: (dataPath || \'\') + ', 21, false)), J$.G(6492209, J$.R(6492201, 'it', it, false, false), 'errorPath')), J$.T(6492217, ' , schemaPath: ', 21, false)), J$.M(6492249, J$.G(6492233, J$.R(6492225, 'it', it, false, false), 'util'), 'toQuotedString', false)(J$.R(6492241, '$errSchemaPath', $errSchemaPath, false, false))), J$.T(6492257, ' , params: { allowedValue: schema', 21, false)), J$.R(6492265, '$lvl', $lvl, false, false)), J$.T(6492273, ' } ', 21, false))), out, false, false);
                                if (J$.C(353576, J$.B(662658, '!==', J$.G(6492313, J$.G(6492305, J$.R(6492297, 'it', it, false, false), 'opts'), 'messages'), J$.T(6492321, false, 23, false)))) {
                                    out = J$.W(6492345, 'out', J$.B(662666, '+', J$.R(6492337, 'out', out, false, false), J$.T(6492329, ' , message: \'should be equal to constant\' ', 21, false)), out, false, false);
                                }
                                if (J$.C(353584, J$.G(6492369, J$.G(6492361, J$.R(6492353, 'it', it, false, false), 'opts'), 'verbose'))) {
                                    out = J$.W(6492449, 'out', J$.B(662722, '+', J$.R(6492441, 'out', out, false, false), J$.B(662714, '+', J$.B(662706, '+', J$.B(662698, '+', J$.B(662690, '+', J$.B(662682, '+', J$.B(662674, '+', J$.T(6492377, ' , schema: validate.schema', 21, false), J$.R(6492385, '$schemaPath', $schemaPath, false, false)), J$.T(6492393, ' , parentSchema: validate.schema', 21, false)), J$.G(6492409, J$.R(6492401, 'it', it, false, false), 'schemaPath')), J$.T(6492417, ' , data: ', 21, false)), J$.R(6492425, '$data', $data, false, false)), J$.T(6492433, ' ', 21, false))), out, false, false);
                                }
                                out = J$.W(6492473, 'out', J$.B(662730, '+', J$.R(6492465, 'out', out, false, false), J$.T(6492457, ' } ', 21, false)), out, false, false);
                            } else {
                                out = J$.W(6492497, 'out', J$.B(662738, '+', J$.R(6492489, 'out', out, false, false), J$.T(6492481, ' {} ', 21, false)), out, false, false);
                            }
                            var __err = J$.W(6492513, '__err', J$.R(6492505, 'out', out, false, false), __err, false, false);
                            out = J$.W(6492537, 'out', J$.M(6492529, J$.R(6492521, '$$outStack', $$outStack, false, false), 'pop', false)(), out, false, false);
                            if (J$.C(353616, J$.C(353600, J$.U(662746, '!', J$.G(6492553, J$.R(6492545, 'it', it, false, false), 'compositeRule'))) ? J$.R(6492561, '$breakOnError', $breakOnError, false, false) : J$._())) {
                                if (J$.C(353608, J$.G(6492577, J$.R(6492569, 'it', it, false, false), 'async'))) {
                                    out = J$.W(6492617, 'out', J$.B(662770, '+', J$.R(6492609, 'out', out, false, false), J$.B(662762, '+', J$.B(662754, '+', J$.T(6492585, ' throw new ValidationError([', 21, false), J$.R(6492593, '__err', __err, false, false)), J$.T(6492601, ']); ', 21, false))), out, false, false);
                                } else {
                                    out = J$.W(6492657, 'out', J$.B(662794, '+', J$.R(6492649, 'out', out, false, false), J$.B(662786, '+', J$.B(662778, '+', J$.T(6492625, ' validate.errors = [', 21, false), J$.R(6492633, '__err', __err, false, false)), J$.T(6492641, ']; return false; ', 21, false))), out, false, false);
                                }
                            } else {
                                out = J$.W(6492697, 'out', J$.B(662818, '+', J$.R(6492689, 'out', out, false, false), J$.B(662810, '+', J$.B(662802, '+', J$.T(6492665, ' var err = ', 21, false), J$.R(6492673, '__err', __err, false, false)), J$.T(6492681, ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ', 21, false))), out, false, false);
                            }
                            out = J$.W(6492721, 'out', J$.B(662826, '+', J$.R(6492713, 'out', out, false, false), J$.T(6492705, ' }', 21, false)), out, false, false);
                            if (J$.C(353624, J$.R(6492729, '$breakOnError', $breakOnError, false, false))) {
                                out = J$.W(6492753, 'out', J$.B(662834, '+', J$.R(6492745, 'out', out, false, false), J$.T(6492737, ' else { ', 21, false)), out, false, false);
                            }
                            return J$.Rt(6492769, J$.R(6492761, 'out', out, false, false));
                        } catch (J$e) {
                            J$.Ex(6492945, J$e);
                        } finally {
                            if (J$.Fr(6492953))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
        } catch (J$e) {
            J$.Ex(6492961, J$e);
        } finally {
            if (J$.Sr(6492969))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

