J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(6488609, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestCouchNode/node_modules/ajv/lib/dotjs/allOf.js');
            J$.T(6487385, 'use strict', 21, false);
            J$.P(6488601, J$.I(typeof module === 'undefined' ? module = J$.R(6487393, 'module', undefined, true, true) : module = J$.R(6487393, 'module', module, true, true)), 'exports', J$.T(6488593, function generate_allOf(it, $keyword, $ruleType) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(6488441, arguments.callee, this, arguments);
                            arguments = J$.N(6488449, 'arguments', arguments, true, false, false);
                            it = J$.N(6488457, 'it', it, true, false, false);
                            $keyword = J$.N(6488465, '$keyword', $keyword, true, false, false);
                            $ruleType = J$.N(6488473, '$ruleType', $ruleType, true, false, false);
                            J$.N(6488481, 'out', out, false, false, false);
                            J$.N(6488489, '$schema', $schema, false, false, false);
                            J$.N(6488497, '$schemaPath', $schemaPath, false, false, false);
                            J$.N(6488505, '$errSchemaPath', $errSchemaPath, false, false, false);
                            J$.N(6488513, '$breakOnError', $breakOnError, false, false, false);
                            J$.N(6488521, '$it', $it, false, false, false);
                            J$.N(6488529, '$closingBraces', $closingBraces, false, false, false);
                            J$.N(6488537, '$nextValid', $nextValid, false, false, false);
                            J$.N(6488545, '$currentBaseId', $currentBaseId, false, false, false);
                            J$.N(6488553, '$allSchemasEmpty', $allSchemasEmpty, false, false, false);
                            J$.N(6488561, 'arr1', arr1, false, false, false);
                            J$.N(6488569, '$sch', $sch, false, false, false);
                            J$.N(6488577, '$i', $i, false, false, false);
                            J$.N(6488585, 'l1', l1, false, false, false);
                            var out = J$.W(6487409, 'out', J$.T(6487401, ' ', 21, false), out, false, false);
                            var $schema = J$.W(6487449, '$schema', J$.G(6487441, J$.G(6487425, J$.R(6487417, 'it', it, false, false), 'schema'), J$.R(6487433, '$keyword', $keyword, false, false)), $schema, false, false);
                            var $schemaPath = J$.W(6487505, '$schemaPath', J$.B(661402, '+', J$.G(6487465, J$.R(6487457, 'it', it, false, false), 'schemaPath'), J$.M(6487497, J$.G(6487481, J$.R(6487473, 'it', it, false, false), 'util'), 'getProperty', false)(J$.R(6487489, '$keyword', $keyword, false, false))), $schemaPath, false, false);
                            var $errSchemaPath = J$.W(6487545, '$errSchemaPath', J$.B(661418, '+', J$.B(661410, '+', J$.G(6487521, J$.R(6487513, 'it', it, false, false), 'errSchemaPath'), J$.T(6487529, '/', 21, false)), J$.R(6487537, '$keyword', $keyword, false, false)), $errSchemaPath, false, false);
                            var $breakOnError = J$.W(6487577, '$breakOnError', J$.U(661426, '!', J$.G(6487569, J$.G(6487561, J$.R(6487553, 'it', it, false, false), 'opts'), 'allErrors')), $breakOnError, false, false);
                            var $it = J$.W(6487617, '$it', J$.M(6487609, J$.G(6487593, J$.R(6487585, 'it', it, false, false), 'util'), 'copy', false)(J$.R(6487601, 'it', it, false, false)), $it, false, false);
                            var $closingBraces = J$.W(6487633, '$closingBraces', J$.T(6487625, '', 21, false), $closingBraces, false, false);
                            J$.B(661434, '-', J$.A(6487649, J$.R(6487641, '$it', $it, false, false), 'level', '+')(1), 1);
                            var $nextValid = J$.W(6487681, '$nextValid', J$.B(661442, '+', J$.T(6487657, 'valid', 21, false), J$.G(6487673, J$.R(6487665, '$it', $it, false, false), 'level')), $nextValid, false, false);
                            var $currentBaseId = J$.W(6487713, '$currentBaseId', J$.G(6487697, J$.R(6487689, '$it', $it, false, false), 'baseId'), $currentBaseId, false, false), $allSchemasEmpty = J$.W(6487721, '$allSchemasEmpty', J$.T(6487705, true, 23, false), $allSchemasEmpty, false, false);
                            var arr1 = J$.W(6487737, 'arr1', J$.R(6487729, '$schema', $schema, false, false), arr1, false, false);
                            if (J$.C(353376, J$.R(6487745, 'arr1', arr1, false, false))) {
                                var $sch, $i = J$.W(6487785, '$i', J$.U(661450, '-', J$.T(6487753, 1, 22, false)), $i, false, false), l1 = J$.W(6487793, 'l1', J$.B(661458, '-', J$.G(6487769, J$.R(6487761, 'arr1', arr1, false, false), 'length'), J$.T(6487777, 1, 22, false)), l1, false, false);
                                while (J$.C(353368, J$.B(661466, '<', J$.R(6487801, '$i', $i, false, false), J$.R(6487809, 'l1', l1, false, false)))) {
                                    $sch = J$.W(6487857, '$sch', J$.G(6487849, J$.R(6487817, 'arr1', arr1, false, false), $i = J$.W(6487841, '$i', J$.B(661474, '+', J$.R(6487833, '$i', $i, false, false), J$.T(6487825, 1, 22, false)), $i, false, false)), $sch, false, false);
                                    if (J$.C(353360, J$.C(353344, J$.G(6487881, J$.G(6487873, J$.R(6487865, 'it', it, false, false), 'opts'), 'strictKeywords')) ? J$.C(353336, J$.B(661490, '==', J$.U(661482, 'typeof', J$.R(6487889, '$sch', $sch, false, false)), J$.T(6487897, 'object', 21, false))) ? J$.B(661498, '>', J$.G(6487929, J$.M(6487921, J$.I(typeof Object === 'undefined' ? Object = J$.R(6487905, 'Object', undefined, true, true) : Object = J$.R(6487905, 'Object', Object, true, true)), 'keys', false)(J$.R(6487913, '$sch', $sch, false, false)), 'length'), J$.T(6487937, 0, 22, false)) : J$._() : J$.M(6487993, J$.G(6487953, J$.R(6487945, 'it', it, false, false), 'util'), 'schemaHasRules', false)(J$.R(6487961, '$sch', $sch, false, false), J$.G(6487985, J$.G(6487977, J$.R(6487969, 'it', it, false, false), 'RULES'), 'all')))) {
                                        $allSchemasEmpty = J$.W(6488009, '$allSchemasEmpty', J$.T(6488001, false, 23, false), $allSchemasEmpty, false, false);
                                        J$.P(6488033, J$.R(6488017, '$it', $it, false, false), 'schema', J$.R(6488025, '$sch', $sch, false, false));
                                        J$.P(6488081, J$.R(6488041, '$it', $it, false, false), 'schemaPath', J$.B(661522, '+', J$.B(661514, '+', J$.B(661506, '+', J$.R(6488049, '$schemaPath', $schemaPath, false, false), J$.T(6488057, '[', 21, false)), J$.R(6488065, '$i', $i, false, false)), J$.T(6488073, ']', 21, false)));
                                        J$.P(6488121, J$.R(6488089, '$it', $it, false, false), 'errSchemaPath', J$.B(661538, '+', J$.B(661530, '+', J$.R(6488097, '$errSchemaPath', $errSchemaPath, false, false), J$.T(6488105, '/', 21, false)), J$.R(6488113, '$i', $i, false, false)));
                                        out = J$.W(6488177, 'out', J$.B(661562, '+', J$.R(6488169, 'out', out, false, false), J$.B(661554, '+', J$.B(661546, '+', J$.T(6488129, '  ', 21, false), J$.M(6488153, J$.R(6488137, 'it', it, false, false), 'validate', false)(J$.R(6488145, '$it', $it, false, false))), J$.T(6488161, ' ', 21, false))), out, false, false);
                                        J$.P(6488201, J$.R(6488185, '$it', $it, false, false), 'baseId', J$.R(6488193, '$currentBaseId', $currentBaseId, false, false));
                                        if (J$.C(353352, J$.R(6488209, '$breakOnError', $breakOnError, false, false))) {
                                            out = J$.W(6488249, 'out', J$.B(661586, '+', J$.R(6488241, 'out', out, false, false), J$.B(661578, '+', J$.B(661570, '+', J$.T(6488217, ' if (', 21, false), J$.R(6488225, '$nextValid', $nextValid, false, false)), J$.T(6488233, ') { ', 21, false))), out, false, false);
                                            $closingBraces = J$.W(6488273, '$closingBraces', J$.B(661594, '+', J$.R(6488265, '$closingBraces', $closingBraces, false, false), J$.T(6488257, '}', 21, false)), $closingBraces, false, false);
                                        }
                                    }
                                }
                            }
                            if (J$.C(353392, J$.R(6488281, '$breakOnError', $breakOnError, false, false))) {
                                if (J$.C(353384, J$.R(6488289, '$allSchemasEmpty', $allSchemasEmpty, false, false))) {
                                    out = J$.W(6488313, 'out', J$.B(661602, '+', J$.R(6488305, 'out', out, false, false), J$.T(6488297, ' if (true) { ', 21, false)), out, false, false);
                                } else {
                                    out = J$.W(6488377, 'out', J$.B(661634, '+', J$.R(6488369, 'out', out, false, false), J$.B(661626, '+', J$.B(661618, '+', J$.T(6488321, ' ', 21, false), J$.M(6488353, J$.R(6488329, '$closingBraces', $closingBraces, false, false), 'slice', false)(J$.T(6488337, 0, 22, false), J$.U(661610, '-', J$.T(6488345, 1, 22, false)))), J$.T(6488361, ' ', 21, false))), out, false, false);
                                }
                            }
                            out = J$.W(6488417, 'out', J$.M(6488409, J$.G(6488393, J$.R(6488385, 'it', it, false, false), 'util'), 'cleanUpCode', false)(J$.R(6488401, 'out', out, false, false)), out, false, false);
                            return J$.Rt(6488433, J$.R(6488425, 'out', out, false, false));
                        } catch (J$e) {
                            J$.Ex(6488617, J$e);
                        } finally {
                            if (J$.Fr(6488625))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
        } catch (J$e) {
            J$.Ex(6488633, J$e);
        } finally {
            if (J$.Sr(6488641))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

