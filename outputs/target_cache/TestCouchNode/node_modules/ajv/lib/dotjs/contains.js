J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(6495633, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestCouchNode/node_modules/ajv/lib/dotjs/contains.js');
            J$.T(6492977, 'use strict', 21, false);
            J$.P(6495625, J$.I(typeof module === 'undefined' ? module = J$.R(6492985, 'module', undefined, true, true) : module = J$.R(6492985, 'module', module, true, true)), 'exports', J$.T(6495617, function generate_contains(it, $keyword, $ruleType) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(6495393, arguments.callee, this, arguments);
                            arguments = J$.N(6495401, 'arguments', arguments, true, false, false);
                            it = J$.N(6495409, 'it', it, true, false, false);
                            $keyword = J$.N(6495417, '$keyword', $keyword, true, false, false);
                            $ruleType = J$.N(6495425, '$ruleType', $ruleType, true, false, false);
                            J$.N(6495433, 'out', out, false, false, false);
                            J$.N(6495441, '$lvl', $lvl, false, false, false);
                            J$.N(6495449, '$dataLvl', $dataLvl, false, false, false);
                            J$.N(6495457, '$schema', $schema, false, false, false);
                            J$.N(6495465, '$schemaPath', $schemaPath, false, false, false);
                            J$.N(6495473, '$errSchemaPath', $errSchemaPath, false, false, false);
                            J$.N(6495481, '$breakOnError', $breakOnError, false, false, false);
                            J$.N(6495489, '$data', $data, false, false, false);
                            J$.N(6495497, '$valid', $valid, false, false, false);
                            J$.N(6495505, '$errs', $errs, false, false, false);
                            J$.N(6495513, '$it', $it, false, false, false);
                            J$.N(6495521, '$closingBraces', $closingBraces, false, false, false);
                            J$.N(6495529, '$nextValid', $nextValid, false, false, false);
                            J$.N(6495537, '$idx', $idx, false, false, false);
                            J$.N(6495545, '$dataNxt', $dataNxt, false, false, false);
                            J$.N(6495553, '$nextData', $nextData, false, false, false);
                            J$.N(6495561, '$currentBaseId', $currentBaseId, false, false, false);
                            J$.N(6495569, '$nonEmptySchema', $nonEmptySchema, false, false, false);
                            J$.N(6495577, '$wasComposite', $wasComposite, false, false, false);
                            J$.N(6495585, '$passData', $passData, false, false, false);
                            J$.N(6495593, '$code', $code, false, false, false);
                            J$.N(6495601, '$$outStack', $$outStack, false, false, false);
                            J$.N(6495609, '__err', __err, false, false, false);
                            var out = J$.W(6493001, 'out', J$.T(6492993, ' ', 21, false), out, false, false);
                            var $lvl = J$.W(6493025, '$lvl', J$.G(6493017, J$.R(6493009, 'it', it, false, false), 'level'), $lvl, false, false);
                            var $dataLvl = J$.W(6493049, '$dataLvl', J$.G(6493041, J$.R(6493033, 'it', it, false, false), 'dataLevel'), $dataLvl, false, false);
                            var $schema = J$.W(6493089, '$schema', J$.G(6493081, J$.G(6493065, J$.R(6493057, 'it', it, false, false), 'schema'), J$.R(6493073, '$keyword', $keyword, false, false)), $schema, false, false);
                            var $schemaPath = J$.W(6493145, '$schemaPath', J$.B(662842, '+', J$.G(6493105, J$.R(6493097, 'it', it, false, false), 'schemaPath'), J$.M(6493137, J$.G(6493121, J$.R(6493113, 'it', it, false, false), 'util'), 'getProperty', false)(J$.R(6493129, '$keyword', $keyword, false, false))), $schemaPath, false, false);
                            var $errSchemaPath = J$.W(6493185, '$errSchemaPath', J$.B(662858, '+', J$.B(662850, '+', J$.G(6493161, J$.R(6493153, 'it', it, false, false), 'errSchemaPath'), J$.T(6493169, '/', 21, false)), J$.R(6493177, '$keyword', $keyword, false, false)), $errSchemaPath, false, false);
                            var $breakOnError = J$.W(6493217, '$breakOnError', J$.U(662866, '!', J$.G(6493209, J$.G(6493201, J$.R(6493193, 'it', it, false, false), 'opts'), 'allErrors')), $breakOnError, false, false);
                            var $data = J$.W(6493249, '$data', J$.B(662874, '+', J$.T(6493225, 'data', 21, false), J$.C(353632, J$.R(6493233, '$dataLvl', $dataLvl, false, false)) ? J$._() : J$.T(6493241, '', 21, false)), $data, false, false);
                            var $valid = J$.W(6493273, '$valid', J$.B(662882, '+', J$.T(6493257, 'valid', 21, false), J$.R(6493265, '$lvl', $lvl, false, false)), $valid, false, false);
                            var $errs = J$.W(6493297, '$errs', J$.B(662890, '+', J$.T(6493281, 'errs__', 21, false), J$.R(6493289, '$lvl', $lvl, false, false)), $errs, false, false);
                            var $it = J$.W(6493337, '$it', J$.M(6493329, J$.G(6493313, J$.R(6493305, 'it', it, false, false), 'util'), 'copy', false)(J$.R(6493321, 'it', it, false, false)), $it, false, false);
                            var $closingBraces = J$.W(6493353, '$closingBraces', J$.T(6493345, '', 21, false), $closingBraces, false, false);
                            J$.B(662898, '-', J$.A(6493369, J$.R(6493361, '$it', $it, false, false), 'level', '+')(1), 1);
                            var $nextValid = J$.W(6493401, '$nextValid', J$.B(662906, '+', J$.T(6493377, 'valid', 21, false), J$.G(6493393, J$.R(6493385, '$it', $it, false, false), 'level')), $nextValid, false, false);
                            var $idx = J$.W(6493633, '$idx', J$.B(662914, '+', J$.T(6493409, 'i', 21, false), J$.R(6493417, '$lvl', $lvl, false, false)), $idx, false, false), $dataNxt = J$.W(6493641, '$dataNxt', J$.P(6493457, J$.R(6493425, '$it', $it, false, false), 'dataLevel', J$.B(662922, '+', J$.G(6493441, J$.R(6493433, 'it', it, false, false), 'dataLevel'), J$.T(6493449, 1, 22, false))), $dataNxt, false, false), $nextData = J$.W(6493649, '$nextData', J$.B(662930, '+', J$.T(6493465, 'data', 21, false), J$.R(6493473, '$dataNxt', $dataNxt, false, false)), $nextData, false, false), $currentBaseId = J$.W(6493657, '$currentBaseId', J$.G(6493489, J$.R(6493481, 'it', it, false, false), 'baseId'), $currentBaseId, false, false), $nonEmptySchema = J$.W(6493665, '$nonEmptySchema', J$.C(353648, J$.G(6493513, J$.G(6493505, J$.R(6493497, 'it', it, false, false), 'opts'), 'strictKeywords')) ? J$.C(353640, J$.B(662946, '==', J$.U(662938, 'typeof', J$.R(6493521, '$schema', $schema, false, false)), J$.T(6493529, 'object', 21, false))) ? J$.B(662954, '>', J$.G(6493561, J$.M(6493553, J$.I(typeof Object === 'undefined' ? Object = J$.R(6493537, 'Object', undefined, true, true) : Object = J$.R(6493537, 'Object', Object, true, true)), 'keys', false)(J$.R(6493545, '$schema', $schema, false, false)), 'length'), J$.T(6493569, 0, 22, false)) : J$._() : J$.M(6493625, J$.G(6493585, J$.R(6493577, 'it', it, false, false), 'util'), 'schemaHasRules', false)(J$.R(6493593, '$schema', $schema, false, false), J$.G(6493617, J$.G(6493609, J$.R(6493601, 'it', it, false, false), 'RULES'), 'all')), $nonEmptySchema, false, false);
                            out = J$.W(6493721, 'out', J$.B(662994, '+', J$.R(6493713, 'out', out, false, false), J$.B(662986, '+', J$.B(662978, '+', J$.B(662970, '+', J$.B(662962, '+', J$.T(6493673, 'var ', 21, false), J$.R(6493681, '$errs', $errs, false, false)), J$.T(6493689, ' = errors;var ', 21, false)), J$.R(6493697, '$valid', $valid, false, false)), J$.T(6493705, ';', 21, false))), out, false, false);
                            if (J$.C(353664, J$.R(6493729, '$nonEmptySchema', $nonEmptySchema, false, false))) {
                                var $wasComposite = J$.W(6493753, '$wasComposite', J$.G(6493745, J$.R(6493737, 'it', it, false, false), 'compositeRule'), $wasComposite, false, false);
                                J$.P(6493793, J$.R(6493761, 'it', it, false, false), 'compositeRule', J$.P(6493785, J$.R(6493769, '$it', $it, false, false), 'compositeRule', J$.T(6493777, true, 23, false)));
                                J$.P(6493817, J$.R(6493801, '$it', $it, false, false), 'schema', J$.R(6493809, '$schema', $schema, false, false));
                                J$.P(6493841, J$.R(6493825, '$it', $it, false, false), 'schemaPath', J$.R(6493833, '$schemaPath', $schemaPath, false, false));
                                J$.P(6493865, J$.R(6493849, '$it', $it, false, false), 'errSchemaPath', J$.R(6493857, '$errSchemaPath', $errSchemaPath, false, false));
                                out = J$.W(6493969, 'out', J$.B(663082, '+', J$.R(6493961, 'out', out, false, false), J$.B(663074, '+', J$.B(663066, '+', J$.B(663058, '+', J$.B(663050, '+', J$.B(663042, '+', J$.B(663034, '+', J$.B(663026, '+', J$.B(663018, '+', J$.B(663010, '+', J$.B(663002, '+', J$.T(6493873, ' var ', 21, false), J$.R(6493881, '$nextValid', $nextValid, false, false)), J$.T(6493889, ' = false; for (var ', 21, false)), J$.R(6493897, '$idx', $idx, false, false)), J$.T(6493905, ' = 0; ', 21, false)), J$.R(6493913, '$idx', $idx, false, false)), J$.T(6493921, ' < ', 21, false)), J$.R(6493929, '$data', $data, false, false)), J$.T(6493937, '.length; ', 21, false)), J$.R(6493945, '$idx', $idx, false, false)), J$.T(6493953, '++) { ', 21, false))), out, false, false);
                                J$.P(6494065, J$.R(6493977, '$it', $it, false, false), 'errorPath', J$.M(6494057, J$.G(6493993, J$.R(6493985, 'it', it, false, false), 'util'), 'getPathExpr', false)(J$.G(6494009, J$.R(6494001, 'it', it, false, false), 'errorPath'), J$.R(6494017, '$idx', $idx, false, false), J$.G(6494041, J$.G(6494033, J$.R(6494025, 'it', it, false, false), 'opts'), 'jsonPointers'), J$.T(6494049, true, 23, false)));
                                var $passData = J$.W(6494105, '$passData', J$.B(663106, '+', J$.B(663098, '+', J$.B(663090, '+', J$.R(6494073, '$data', $data, false, false), J$.T(6494081, '[', 21, false)), J$.R(6494089, '$idx', $idx, false, false)), J$.T(6494097, ']', 21, false)), $passData, false, false);
                                J$.P(6494145, J$.G(6494121, J$.R(6494113, '$it', $it, false, false), 'dataPathArr'), J$.R(6494129, '$dataNxt', $dataNxt, false, false), J$.R(6494137, '$idx', $idx, false, false));
                                var $code = J$.W(6494177, '$code', J$.M(6494169, J$.R(6494153, 'it', it, false, false), 'validate', false)(J$.R(6494161, '$it', $it, false, false)), $code, false, false);
                                J$.P(6494201, J$.R(6494185, '$it', $it, false, false), 'baseId', J$.R(6494193, '$currentBaseId', $currentBaseId, false, false));
                                if (J$.C(353656, J$.B(663114, '<', J$.M(6494241, J$.G(6494217, J$.R(6494209, 'it', it, false, false), 'util'), 'varOccurences', false)(J$.R(6494225, '$code', $code, false, false), J$.R(6494233, '$nextData', $nextData, false, false)), J$.T(6494249, 2, 22, false)))) {
                                    out = J$.W(6494329, 'out', J$.B(663138, '+', J$.R(6494321, 'out', out, false, false), J$.B(663130, '+', J$.B(663122, '+', J$.T(6494257, ' ', 21, false), J$.M(6494305, J$.G(6494273, J$.R(6494265, 'it', it, false, false), 'util'), 'varReplace', false)(J$.R(6494281, '$code', $code, false, false), J$.R(6494289, '$nextData', $nextData, false, false), J$.R(6494297, '$passData', $passData, false, false))), J$.T(6494313, ' ', 21, false))), out, false, false);
                                } else {
                                    out = J$.W(6494401, 'out', J$.B(663194, '+', J$.R(6494393, 'out', out, false, false), J$.B(663186, '+', J$.B(663178, '+', J$.B(663170, '+', J$.B(663162, '+', J$.B(663154, '+', J$.B(663146, '+', J$.T(6494337, ' var ', 21, false), J$.R(6494345, '$nextData', $nextData, false, false)), J$.T(6494353, ' = ', 21, false)), J$.R(6494361, '$passData', $passData, false, false)), J$.T(6494369, '; ', 21, false)), J$.R(6494377, '$code', $code, false, false)), J$.T(6494385, ' ', 21, false))), out, false, false);
                                }
                                out = J$.W(6494441, 'out', J$.B(663218, '+', J$.R(6494433, 'out', out, false, false), J$.B(663210, '+', J$.B(663202, '+', J$.T(6494409, ' if (', 21, false), J$.R(6494417, '$nextValid', $nextValid, false, false)), J$.T(6494425, ') break; }  ', 21, false))), out, false, false);
                                J$.P(6494481, J$.R(6494449, 'it', it, false, false), 'compositeRule', J$.P(6494473, J$.R(6494457, '$it', $it, false, false), 'compositeRule', J$.R(6494465, '$wasComposite', $wasComposite, false, false)));
                                out = J$.W(6494537, 'out', J$.B(663258, '+', J$.R(6494529, 'out', out, false, false), J$.B(663250, '+', J$.B(663242, '+', J$.B(663234, '+', J$.B(663226, '+', J$.T(6494489, ' ', 21, false), J$.R(6494497, '$closingBraces', $closingBraces, false, false)), J$.T(6494505, ' if (!', 21, false)), J$.R(6494513, '$nextValid', $nextValid, false, false)), J$.T(6494521, ') {', 21, false))), out, false, false);
                            } else {
                                out = J$.W(6494577, 'out', J$.B(663282, '+', J$.R(6494569, 'out', out, false, false), J$.B(663274, '+', J$.B(663266, '+', J$.T(6494545, ' if (', 21, false), J$.R(6494553, '$data', $data, false, false)), J$.T(6494561, '.length == 0) {', 21, false))), out, false, false);
                            }
                            var $$outStack = J$.W(6494601, '$$outStack', J$.C(353672, J$.R(6494585, '$$outStack', $$outStack, false, false)) ? J$._() : J$.T(6494593, [], 10, false), $$outStack, false, false);
                            J$.M(6494625, J$.R(6494609, '$$outStack', $$outStack, false, false), 'push', false)(J$.R(6494617, 'out', out, false, false));
                            out = J$.W(6494641, 'out', J$.T(6494633, '', 21, false), out, false, false);
                            if (J$.C(353696, J$.B(663290, '!==', J$.G(6494657, J$.R(6494649, 'it', it, false, false), 'createErrors'), J$.T(6494665, false, 23, false)))) {
                                out = J$.W(6494769, 'out', J$.B(663346, '+', J$.R(6494761, 'out', out, false, false), J$.B(663338, '+', J$.B(663330, '+', J$.B(663322, '+', J$.B(663314, '+', J$.B(663306, '+', J$.B(663298, '+', J$.T(6494673, ' { keyword: \'', 21, false), J$.T(6494681, 'contains', 21, false)), J$.T(6494689, '\' , dataPath: (dataPath || \'\') + ', 21, false)), J$.G(6494705, J$.R(6494697, 'it', it, false, false), 'errorPath')), J$.T(6494713, ' , schemaPath: ', 21, false)), J$.M(6494745, J$.G(6494729, J$.R(6494721, 'it', it, false, false), 'util'), 'toQuotedString', false)(J$.R(6494737, '$errSchemaPath', $errSchemaPath, false, false))), J$.T(6494753, ' , params: {} ', 21, false))), out, false, false);
                                if (J$.C(353680, J$.B(663354, '!==', J$.G(6494793, J$.G(6494785, J$.R(6494777, 'it', it, false, false), 'opts'), 'messages'), J$.T(6494801, false, 23, false)))) {
                                    out = J$.W(6494825, 'out', J$.B(663362, '+', J$.R(6494817, 'out', out, false, false), J$.T(6494809, ' , message: \'should contain a valid item\' ', 21, false)), out, false, false);
                                }
                                if (J$.C(353688, J$.G(6494849, J$.G(6494841, J$.R(6494833, 'it', it, false, false), 'opts'), 'verbose'))) {
                                    out = J$.W(6494929, 'out', J$.B(663418, '+', J$.R(6494921, 'out', out, false, false), J$.B(663410, '+', J$.B(663402, '+', J$.B(663394, '+', J$.B(663386, '+', J$.B(663378, '+', J$.B(663370, '+', J$.T(6494857, ' , schema: validate.schema', 21, false), J$.R(6494865, '$schemaPath', $schemaPath, false, false)), J$.T(6494873, ' , parentSchema: validate.schema', 21, false)), J$.G(6494889, J$.R(6494881, 'it', it, false, false), 'schemaPath')), J$.T(6494897, ' , data: ', 21, false)), J$.R(6494905, '$data', $data, false, false)), J$.T(6494913, ' ', 21, false))), out, false, false);
                                }
                                out = J$.W(6494953, 'out', J$.B(663426, '+', J$.R(6494945, 'out', out, false, false), J$.T(6494937, ' } ', 21, false)), out, false, false);
                            } else {
                                out = J$.W(6494977, 'out', J$.B(663434, '+', J$.R(6494969, 'out', out, false, false), J$.T(6494961, ' {} ', 21, false)), out, false, false);
                            }
                            var __err = J$.W(6494993, '__err', J$.R(6494985, 'out', out, false, false), __err, false, false);
                            out = J$.W(6495017, 'out', J$.M(6495009, J$.R(6495001, '$$outStack', $$outStack, false, false), 'pop', false)(), out, false, false);
                            if (J$.C(353720, J$.C(353704, J$.U(663442, '!', J$.G(6495033, J$.R(6495025, 'it', it, false, false), 'compositeRule'))) ? J$.R(6495041, '$breakOnError', $breakOnError, false, false) : J$._())) {
                                if (J$.C(353712, J$.G(6495057, J$.R(6495049, 'it', it, false, false), 'async'))) {
                                    out = J$.W(6495097, 'out', J$.B(663466, '+', J$.R(6495089, 'out', out, false, false), J$.B(663458, '+', J$.B(663450, '+', J$.T(6495065, ' throw new ValidationError([', 21, false), J$.R(6495073, '__err', __err, false, false)), J$.T(6495081, ']); ', 21, false))), out, false, false);
                                } else {
                                    out = J$.W(6495137, 'out', J$.B(663490, '+', J$.R(6495129, 'out', out, false, false), J$.B(663482, '+', J$.B(663474, '+', J$.T(6495105, ' validate.errors = [', 21, false), J$.R(6495113, '__err', __err, false, false)), J$.T(6495121, ']; return false; ', 21, false))), out, false, false);
                                }
                            } else {
                                out = J$.W(6495177, 'out', J$.B(663514, '+', J$.R(6495169, 'out', out, false, false), J$.B(663506, '+', J$.B(663498, '+', J$.T(6495145, ' var err = ', 21, false), J$.R(6495153, '__err', __err, false, false)), J$.T(6495161, ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ', 21, false))), out, false, false);
                            }
                            out = J$.W(6495201, 'out', J$.B(663522, '+', J$.R(6495193, 'out', out, false, false), J$.T(6495185, ' } else { ', 21, false)), out, false, false);
                            if (J$.C(353728, J$.R(6495209, '$nonEmptySchema', $nonEmptySchema, false, false))) {
                                out = J$.W(6495281, 'out', J$.B(663578, '+', J$.R(6495273, 'out', out, false, false), J$.B(663570, '+', J$.B(663562, '+', J$.B(663554, '+', J$.B(663546, '+', J$.B(663538, '+', J$.B(663530, '+', J$.T(6495217, '  errors = ', 21, false), J$.R(6495225, '$errs', $errs, false, false)), J$.T(6495233, '; if (vErrors !== null) { if (', 21, false)), J$.R(6495241, '$errs', $errs, false, false)), J$.T(6495249, ') vErrors.length = ', 21, false)), J$.R(6495257, '$errs', $errs, false, false)), J$.T(6495265, '; else vErrors = null; } ', 21, false))), out, false, false);
                            }
                            if (J$.C(353736, J$.G(6495305, J$.G(6495297, J$.R(6495289, 'it', it, false, false), 'opts'), 'allErrors'))) {
                                out = J$.W(6495329, 'out', J$.B(663586, '+', J$.R(6495321, 'out', out, false, false), J$.T(6495313, ' } ', 21, false)), out, false, false);
                            }
                            out = J$.W(6495369, 'out', J$.M(6495361, J$.G(6495345, J$.R(6495337, 'it', it, false, false), 'util'), 'cleanUpCode', false)(J$.R(6495353, 'out', out, false, false)), out, false, false);
                            return J$.Rt(6495385, J$.R(6495377, 'out', out, false, false));
                        } catch (J$e) {
                            J$.Ex(6495641, J$e);
                        } finally {
                            if (J$.Fr(6495649))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
        } catch (J$e) {
            J$.Ex(6495657, J$e);
        } finally {
            if (J$.Sr(6495665))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

