J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(6528473, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestCouchNode/node_modules/ajv/lib/dotjs/oneOf.js');
            J$.T(6526137, 'use strict', 21, false);
            J$.P(6528465, J$.I(typeof module === 'undefined' ? module = J$.R(6526145, 'module', undefined, true, true) : module = J$.R(6526145, 'module', module, true, true)), 'exports', J$.T(6528457, function generate_oneOf(it, $keyword, $ruleType) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(6528249, arguments.callee, this, arguments);
                            arguments = J$.N(6528257, 'arguments', arguments, true, false, false);
                            it = J$.N(6528265, 'it', it, true, false, false);
                            $keyword = J$.N(6528273, '$keyword', $keyword, true, false, false);
                            $ruleType = J$.N(6528281, '$ruleType', $ruleType, true, false, false);
                            J$.N(6528289, 'out', out, false, false, false);
                            J$.N(6528297, '$lvl', $lvl, false, false, false);
                            J$.N(6528305, '$dataLvl', $dataLvl, false, false, false);
                            J$.N(6528313, '$schema', $schema, false, false, false);
                            J$.N(6528321, '$schemaPath', $schemaPath, false, false, false);
                            J$.N(6528329, '$errSchemaPath', $errSchemaPath, false, false, false);
                            J$.N(6528337, '$breakOnError', $breakOnError, false, false, false);
                            J$.N(6528345, '$data', $data, false, false, false);
                            J$.N(6528353, '$valid', $valid, false, false, false);
                            J$.N(6528361, '$errs', $errs, false, false, false);
                            J$.N(6528369, '$it', $it, false, false, false);
                            J$.N(6528377, '$closingBraces', $closingBraces, false, false, false);
                            J$.N(6528385, '$nextValid', $nextValid, false, false, false);
                            J$.N(6528393, '$currentBaseId', $currentBaseId, false, false, false);
                            J$.N(6528401, '$prevValid', $prevValid, false, false, false);
                            J$.N(6528409, '$passingSchemas', $passingSchemas, false, false, false);
                            J$.N(6528417, '$wasComposite', $wasComposite, false, false, false);
                            J$.N(6528425, 'arr1', arr1, false, false, false);
                            J$.N(6528433, '$sch', $sch, false, false, false);
                            J$.N(6528441, '$i', $i, false, false, false);
                            J$.N(6528449, 'l1', l1, false, false, false);
                            var out = J$.W(6526161, 'out', J$.T(6526153, ' ', 21, false), out, false, false);
                            var $lvl = J$.W(6526185, '$lvl', J$.G(6526177, J$.R(6526169, 'it', it, false, false), 'level'), $lvl, false, false);
                            var $dataLvl = J$.W(6526209, '$dataLvl', J$.G(6526201, J$.R(6526193, 'it', it, false, false), 'dataLevel'), $dataLvl, false, false);
                            var $schema = J$.W(6526249, '$schema', J$.G(6526241, J$.G(6526225, J$.R(6526217, 'it', it, false, false), 'schema'), J$.R(6526233, '$keyword', $keyword, false, false)), $schema, false, false);
                            var $schemaPath = J$.W(6526305, '$schemaPath', J$.B(673434, '+', J$.G(6526265, J$.R(6526257, 'it', it, false, false), 'schemaPath'), J$.M(6526297, J$.G(6526281, J$.R(6526273, 'it', it, false, false), 'util'), 'getProperty', false)(J$.R(6526289, '$keyword', $keyword, false, false))), $schemaPath, false, false);
                            var $errSchemaPath = J$.W(6526345, '$errSchemaPath', J$.B(673450, '+', J$.B(673442, '+', J$.G(6526321, J$.R(6526313, 'it', it, false, false), 'errSchemaPath'), J$.T(6526329, '/', 21, false)), J$.R(6526337, '$keyword', $keyword, false, false)), $errSchemaPath, false, false);
                            var $breakOnError = J$.W(6526377, '$breakOnError', J$.U(673458, '!', J$.G(6526369, J$.G(6526361, J$.R(6526353, 'it', it, false, false), 'opts'), 'allErrors')), $breakOnError, false, false);
                            var $data = J$.W(6526409, '$data', J$.B(673466, '+', J$.T(6526385, 'data', 21, false), J$.C(355672, J$.R(6526393, '$dataLvl', $dataLvl, false, false)) ? J$._() : J$.T(6526401, '', 21, false)), $data, false, false);
                            var $valid = J$.W(6526433, '$valid', J$.B(673474, '+', J$.T(6526417, 'valid', 21, false), J$.R(6526425, '$lvl', $lvl, false, false)), $valid, false, false);
                            var $errs = J$.W(6526457, '$errs', J$.B(673482, '+', J$.T(6526441, 'errs__', 21, false), J$.R(6526449, '$lvl', $lvl, false, false)), $errs, false, false);
                            var $it = J$.W(6526497, '$it', J$.M(6526489, J$.G(6526473, J$.R(6526465, 'it', it, false, false), 'util'), 'copy', false)(J$.R(6526481, 'it', it, false, false)), $it, false, false);
                            var $closingBraces = J$.W(6526513, '$closingBraces', J$.T(6526505, '', 21, false), $closingBraces, false, false);
                            J$.B(673490, '-', J$.A(6526529, J$.R(6526521, '$it', $it, false, false), 'level', '+')(1), 1);
                            var $nextValid = J$.W(6526561, '$nextValid', J$.B(673498, '+', J$.T(6526537, 'valid', 21, false), J$.G(6526553, J$.R(6526545, '$it', $it, false, false), 'level')), $nextValid, false, false);
                            var $currentBaseId = J$.W(6526617, '$currentBaseId', J$.G(6526577, J$.R(6526569, '$it', $it, false, false), 'baseId'), $currentBaseId, false, false), $prevValid = J$.W(6526625, '$prevValid', J$.B(673506, '+', J$.T(6526585, 'prevValid', 21, false), J$.R(6526593, '$lvl', $lvl, false, false)), $prevValid, false, false), $passingSchemas = J$.W(6526633, '$passingSchemas', J$.B(673514, '+', J$.T(6526601, 'passingSchemas', 21, false), J$.R(6526609, '$lvl', $lvl, false, false)), $passingSchemas, false, false);
                            out = J$.W(6526721, 'out', J$.B(673586, '+', J$.R(6526713, 'out', out, false, false), J$.B(673578, '+', J$.B(673570, '+', J$.B(673562, '+', J$.B(673554, '+', J$.B(673546, '+', J$.B(673538, '+', J$.B(673530, '+', J$.B(673522, '+', J$.T(6526641, 'var ', 21, false), J$.R(6526649, '$errs', $errs, false, false)), J$.T(6526657, ' = errors , ', 21, false)), J$.R(6526665, '$prevValid', $prevValid, false, false)), J$.T(6526673, ' = false , ', 21, false)), J$.R(6526681, '$valid', $valid, false, false)), J$.T(6526689, ' = false , ', 21, false)), J$.R(6526697, '$passingSchemas', $passingSchemas, false, false)), J$.T(6526705, ' = null; ', 21, false))), out, false, false);
                            var $wasComposite = J$.W(6526745, '$wasComposite', J$.G(6526737, J$.R(6526729, 'it', it, false, false), 'compositeRule'), $wasComposite, false, false);
                            J$.P(6526785, J$.R(6526753, 'it', it, false, false), 'compositeRule', J$.P(6526777, J$.R(6526761, '$it', $it, false, false), 'compositeRule', J$.T(6526769, true, 23, false)));
                            var arr1 = J$.W(6526801, 'arr1', J$.R(6526793, '$schema', $schema, false, false), arr1, false, false);
                            if (J$.C(355720, J$.R(6526809, 'arr1', arr1, false, false))) {
                                var $sch, $i = J$.W(6526849, '$i', J$.U(673594, '-', J$.T(6526817, 1, 22, false)), $i, false, false), l1 = J$.W(6526857, 'l1', J$.B(673602, '-', J$.G(6526833, J$.R(6526825, 'arr1', arr1, false, false), 'length'), J$.T(6526841, 1, 22, false)), l1, false, false);
                                while (J$.C(355712, J$.B(673610, '<', J$.R(6526865, '$i', $i, false, false), J$.R(6526873, 'l1', l1, false, false)))) {
                                    $sch = J$.W(6526921, '$sch', J$.G(6526913, J$.R(6526881, 'arr1', arr1, false, false), $i = J$.W(6526905, '$i', J$.B(673618, '+', J$.R(6526897, '$i', $i, false, false), J$.T(6526889, 1, 22, false)), $i, false, false)), $sch, false, false);
                                    if (J$.C(355696, J$.C(355688, J$.G(6526945, J$.G(6526937, J$.R(6526929, 'it', it, false, false), 'opts'), 'strictKeywords')) ? J$.C(355680, J$.B(673634, '==', J$.U(673626, 'typeof', J$.R(6526953, '$sch', $sch, false, false)), J$.T(6526961, 'object', 21, false))) ? J$.B(673642, '>', J$.G(6526993, J$.M(6526985, J$.I(typeof Object === 'undefined' ? Object = J$.R(6526969, 'Object', undefined, true, true) : Object = J$.R(6526969, 'Object', Object, true, true)), 'keys', false)(J$.R(6526977, '$sch', $sch, false, false)), 'length'), J$.T(6527001, 0, 22, false)) : J$._() : J$.M(6527057, J$.G(6527017, J$.R(6527009, 'it', it, false, false), 'util'), 'schemaHasRules', false)(J$.R(6527025, '$sch', $sch, false, false), J$.G(6527049, J$.G(6527041, J$.R(6527033, 'it', it, false, false), 'RULES'), 'all')))) {
                                        J$.P(6527081, J$.R(6527065, '$it', $it, false, false), 'schema', J$.R(6527073, '$sch', $sch, false, false));
                                        J$.P(6527129, J$.R(6527089, '$it', $it, false, false), 'schemaPath', J$.B(673666, '+', J$.B(673658, '+', J$.B(673650, '+', J$.R(6527097, '$schemaPath', $schemaPath, false, false), J$.T(6527105, '[', 21, false)), J$.R(6527113, '$i', $i, false, false)), J$.T(6527121, ']', 21, false)));
                                        J$.P(6527169, J$.R(6527137, '$it', $it, false, false), 'errSchemaPath', J$.B(673682, '+', J$.B(673674, '+', J$.R(6527145, '$errSchemaPath', $errSchemaPath, false, false), J$.T(6527153, '/', 21, false)), J$.R(6527161, '$i', $i, false, false)));
                                        out = J$.W(6527225, 'out', J$.B(673706, '+', J$.R(6527217, 'out', out, false, false), J$.B(673698, '+', J$.B(673690, '+', J$.T(6527177, '  ', 21, false), J$.M(6527201, J$.R(6527185, 'it', it, false, false), 'validate', false)(J$.R(6527193, '$it', $it, false, false))), J$.T(6527209, ' ', 21, false))), out, false, false);
                                        J$.P(6527249, J$.R(6527233, '$it', $it, false, false), 'baseId', J$.R(6527241, '$currentBaseId', $currentBaseId, false, false));
                                    } else {
                                        out = J$.W(6527289, 'out', J$.B(673730, '+', J$.R(6527281, 'out', out, false, false), J$.B(673722, '+', J$.B(673714, '+', J$.T(6527257, ' var ', 21, false), J$.R(6527265, '$nextValid', $nextValid, false, false)), J$.T(6527273, ' = true; ', 21, false))), out, false, false);
                                    }
                                    if (J$.C(355704, J$.R(6527297, '$i', $i, false, false))) {
                                        out = J$.W(6527417, 'out', J$.B(673834, '+', J$.R(6527409, 'out', out, false, false), J$.B(673826, '+', J$.B(673818, '+', J$.B(673810, '+', J$.B(673802, '+', J$.B(673794, '+', J$.B(673786, '+', J$.B(673778, '+', J$.B(673770, '+', J$.B(673762, '+', J$.B(673754, '+', J$.B(673746, '+', J$.B(673738, '+', J$.T(6527305, ' if (', 21, false), J$.R(6527313, '$nextValid', $nextValid, false, false)), J$.T(6527321, ' && ', 21, false)), J$.R(6527329, '$prevValid', $prevValid, false, false)), J$.T(6527337, ') { ', 21, false)), J$.R(6527345, '$valid', $valid, false, false)), J$.T(6527353, ' = false; ', 21, false)), J$.R(6527361, '$passingSchemas', $passingSchemas, false, false)), J$.T(6527369, ' = [', 21, false)), J$.R(6527377, '$passingSchemas', $passingSchemas, false, false)), J$.T(6527385, ', ', 21, false)), J$.R(6527393, '$i', $i, false, false)), J$.T(6527401, ']; } else { ', 21, false))), out, false, false);
                                        $closingBraces = J$.W(6527441, '$closingBraces', J$.B(673842, '+', J$.R(6527433, '$closingBraces', $closingBraces, false, false), J$.T(6527425, '}', 21, false)), $closingBraces, false, false);
                                    }
                                    out = J$.W(6527545, 'out', J$.B(673930, '+', J$.R(6527537, 'out', out, false, false), J$.B(673922, '+', J$.B(673914, '+', J$.B(673906, '+', J$.B(673898, '+', J$.B(673890, '+', J$.B(673882, '+', J$.B(673874, '+', J$.B(673866, '+', J$.B(673858, '+', J$.B(673850, '+', J$.T(6527449, ' if (', 21, false), J$.R(6527457, '$nextValid', $nextValid, false, false)), J$.T(6527465, ') { ', 21, false)), J$.R(6527473, '$valid', $valid, false, false)), J$.T(6527481, ' = ', 21, false)), J$.R(6527489, '$prevValid', $prevValid, false, false)), J$.T(6527497, ' = true; ', 21, false)), J$.R(6527505, '$passingSchemas', $passingSchemas, false, false)), J$.T(6527513, ' = ', 21, false)), J$.R(6527521, '$i', $i, false, false)), J$.T(6527529, '; }', 21, false))), out, false, false);
                                }
                            }
                            J$.P(6527585, J$.R(6527553, 'it', it, false, false), 'compositeRule', J$.P(6527577, J$.R(6527561, '$it', $it, false, false), 'compositeRule', J$.R(6527569, '$wasComposite', $wasComposite, false, false)));
                            out = J$.W(6527641, 'out', J$.B(673970, '+', J$.R(6527633, 'out', out, false, false), J$.B(673962, '+', J$.B(673954, '+', J$.B(673946, '+', J$.B(673938, '+', J$.T(6527593, '', 21, false), J$.R(6527601, '$closingBraces', $closingBraces, false, false)), J$.T(6527609, 'if (!', 21, false)), J$.R(6527617, '$valid', $valid, false, false)), J$.T(6527625, ') {   var err =   ', 21, false))), out, false, false);
                            if (J$.C(355744, J$.B(673978, '!==', J$.G(6527657, J$.R(6527649, 'it', it, false, false), 'createErrors'), J$.T(6527665, false, 23, false)))) {
                                out = J$.W(6527785, 'out', J$.B(674050, '+', J$.R(6527777, 'out', out, false, false), J$.B(674042, '+', J$.B(674034, '+', J$.B(674026, '+', J$.B(674018, '+', J$.B(674010, '+', J$.B(674002, '+', J$.B(673994, '+', J$.B(673986, '+', J$.T(6527673, ' { keyword: \'', 21, false), J$.T(6527681, 'oneOf', 21, false)), J$.T(6527689, '\' , dataPath: (dataPath || \'\') + ', 21, false)), J$.G(6527705, J$.R(6527697, 'it', it, false, false), 'errorPath')), J$.T(6527713, ' , schemaPath: ', 21, false)), J$.M(6527745, J$.G(6527729, J$.R(6527721, 'it', it, false, false), 'util'), 'toQuotedString', false)(J$.R(6527737, '$errSchemaPath', $errSchemaPath, false, false))), J$.T(6527753, ' , params: { passingSchemas: ', 21, false)), J$.R(6527761, '$passingSchemas', $passingSchemas, false, false)), J$.T(6527769, ' } ', 21, false))), out, false, false);
                                if (J$.C(355728, J$.B(674058, '!==', J$.G(6527809, J$.G(6527801, J$.R(6527793, 'it', it, false, false), 'opts'), 'messages'), J$.T(6527817, false, 23, false)))) {
                                    out = J$.W(6527841, 'out', J$.B(674066, '+', J$.R(6527833, 'out', out, false, false), J$.T(6527825, ' , message: \'should match exactly one schema in oneOf\' ', 21, false)), out, false, false);
                                }
                                if (J$.C(355736, J$.G(6527865, J$.G(6527857, J$.R(6527849, 'it', it, false, false), 'opts'), 'verbose'))) {
                                    out = J$.W(6527945, 'out', J$.B(674122, '+', J$.R(6527937, 'out', out, false, false), J$.B(674114, '+', J$.B(674106, '+', J$.B(674098, '+', J$.B(674090, '+', J$.B(674082, '+', J$.B(674074, '+', J$.T(6527873, ' , schema: validate.schema', 21, false), J$.R(6527881, '$schemaPath', $schemaPath, false, false)), J$.T(6527889, ' , parentSchema: validate.schema', 21, false)), J$.G(6527905, J$.R(6527897, 'it', it, false, false), 'schemaPath')), J$.T(6527913, ' , data: ', 21, false)), J$.R(6527921, '$data', $data, false, false)), J$.T(6527929, ' ', 21, false))), out, false, false);
                                }
                                out = J$.W(6527969, 'out', J$.B(674130, '+', J$.R(6527961, 'out', out, false, false), J$.T(6527953, ' } ', 21, false)), out, false, false);
                            } else {
                                out = J$.W(6527993, 'out', J$.B(674138, '+', J$.R(6527985, 'out', out, false, false), J$.T(6527977, ' {} ', 21, false)), out, false, false);
                            }
                            out = J$.W(6528017, 'out', J$.B(674146, '+', J$.R(6528009, 'out', out, false, false), J$.T(6528001, ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ', 21, false)), out, false, false);
                            if (J$.C(355768, J$.C(355752, J$.U(674154, '!', J$.G(6528033, J$.R(6528025, 'it', it, false, false), 'compositeRule'))) ? J$.R(6528041, '$breakOnError', $breakOnError, false, false) : J$._())) {
                                if (J$.C(355760, J$.G(6528057, J$.R(6528049, 'it', it, false, false), 'async'))) {
                                    out = J$.W(6528081, 'out', J$.B(674162, '+', J$.R(6528073, 'out', out, false, false), J$.T(6528065, ' throw new ValidationError(vErrors); ', 21, false)), out, false, false);
                                } else {
                                    out = J$.W(6528105, 'out', J$.B(674170, '+', J$.R(6528097, 'out', out, false, false), J$.T(6528089, ' validate.errors = vErrors; return false; ', 21, false)), out, false, false);
                                }
                            }
                            out = J$.W(6528177, 'out', J$.B(674226, '+', J$.R(6528169, 'out', out, false, false), J$.B(674218, '+', J$.B(674210, '+', J$.B(674202, '+', J$.B(674194, '+', J$.B(674186, '+', J$.B(674178, '+', J$.T(6528113, '} else {  errors = ', 21, false), J$.R(6528121, '$errs', $errs, false, false)), J$.T(6528129, '; if (vErrors !== null) { if (', 21, false)), J$.R(6528137, '$errs', $errs, false, false)), J$.T(6528145, ') vErrors.length = ', 21, false)), J$.R(6528153, '$errs', $errs, false, false)), J$.T(6528161, '; else vErrors = null; }', 21, false))), out, false, false);
                            if (J$.C(355776, J$.G(6528201, J$.G(6528193, J$.R(6528185, 'it', it, false, false), 'opts'), 'allErrors'))) {
                                out = J$.W(6528225, 'out', J$.B(674234, '+', J$.R(6528217, 'out', out, false, false), J$.T(6528209, ' } ', 21, false)), out, false, false);
                            }
                            return J$.Rt(6528241, J$.R(6528233, 'out', out, false, false));
                        } catch (J$e) {
                            J$.Ex(6528481, J$e);
                        } finally {
                            if (J$.Fr(6528489))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
        } catch (J$e) {
            J$.Ex(6528497, J$e);
        } finally {
            if (J$.Sr(6528505))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

