J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(6476497, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestCouchNode/node_modules/ajv/lib/data.js');
            J$.N(6476505, 'KEYWORDS', KEYWORDS, false, false, false);
            J$.T(6475737, 'use strict', 21, false);
            var KEYWORDS = J$.W(6475905, 'KEYWORDS', J$.T(6475897, [
                J$.T(6475745, 'multipleOf', 21, false),
                J$.T(6475753, 'maximum', 21, false),
                J$.T(6475761, 'exclusiveMaximum', 21, false),
                J$.T(6475769, 'minimum', 21, false),
                J$.T(6475777, 'exclusiveMinimum', 21, false),
                J$.T(6475785, 'maxLength', 21, false),
                J$.T(6475793, 'minLength', 21, false),
                J$.T(6475801, 'pattern', 21, false),
                J$.T(6475809, 'additionalItems', 21, false),
                J$.T(6475817, 'maxItems', 21, false),
                J$.T(6475825, 'minItems', 21, false),
                J$.T(6475833, 'uniqueItems', 21, false),
                J$.T(6475841, 'maxProperties', 21, false),
                J$.T(6475849, 'minProperties', 21, false),
                J$.T(6475857, 'required', 21, false),
                J$.T(6475865, 'additionalProperties', 21, false),
                J$.T(6475873, 'enum', 21, false),
                J$.T(6475881, 'format', 21, false),
                J$.T(6475889, 'const', 21, false)
            ], 10, false), KEYWORDS, false, true);
            J$.P(6476489, J$.I(typeof module === 'undefined' ? module = J$.R(6475913, 'module', undefined, true, true) : module = J$.R(6475913, 'module', module, true, true)), 'exports', J$.T(6476481, function (metaSchema, keywordsJsonPointers) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(6476401, arguments.callee, this, arguments);
                            arguments = J$.N(6476409, 'arguments', arguments, true, false, false);
                            metaSchema = J$.N(6476417, 'metaSchema', metaSchema, true, false, false);
                            keywordsJsonPointers = J$.N(6476425, 'keywordsJsonPointers', keywordsJsonPointers, true, false, false);
                            J$.N(6476433, 'i', i, false, false, false);
                            J$.N(6476441, 'segments', segments, false, false, false);
                            J$.N(6476449, 'keywords', keywords, false, false, false);
                            J$.N(6476457, 'j', j, false, false, false);
                            J$.N(6476465, 'key', key, false, false, false);
                            J$.N(6476473, 'schema', schema, false, false, false);
                            for (var i = J$.W(6475929, 'i', J$.T(6475921, 0, 22, false), i, false, false); J$.C(352552, J$.B(657642, '<', J$.R(6475937, 'i', i, false, false), J$.G(6475953, J$.R(6475945, 'keywordsJsonPointers', keywordsJsonPointers, false, false), 'length'))); J$.B(657666, '-', i = J$.W(6475969, 'i', J$.B(657658, '+', J$.U(657650, '+', J$.R(6475961, 'i', i, false, false)), 1), i, false, false), 1)) {
                                metaSchema = J$.W(6476017, 'metaSchema', J$.M(6476009, J$.I(typeof JSON === 'undefined' ? JSON = J$.R(6475977, 'JSON', undefined, true, true) : JSON = J$.R(6475977, 'JSON', JSON, true, true)), 'parse', false)(J$.M(6476001, J$.I(typeof JSON === 'undefined' ? JSON = J$.R(6475985, 'JSON', undefined, true, true) : JSON = J$.R(6475985, 'JSON', JSON, true, true)), 'stringify', false)(J$.R(6475993, 'metaSchema', metaSchema, false, false))), metaSchema, false, false);
                                var segments = J$.W(6476065, 'segments', J$.M(6476057, J$.G(6476041, J$.R(6476025, 'keywordsJsonPointers', keywordsJsonPointers, false, false), J$.R(6476033, 'i', i, false, false)), 'split', false)(J$.T(6476049, '/', 21, false)), segments, false, false);
                                var keywords = J$.W(6476081, 'keywords', J$.R(6476073, 'metaSchema', metaSchema, false, false), keywords, false, false);
                                var j;
                                for (j = J$.W(6476097, 'j', J$.T(6476089, 1, 22, false), j, false, false); J$.C(352528, J$.B(657674, '<', J$.R(6476105, 'j', j, false, false), J$.G(6476121, J$.R(6476113, 'segments', segments, false, false), 'length'))); J$.B(657698, '-', j = J$.W(6476137, 'j', J$.B(657690, '+', J$.U(657682, '+', J$.R(6476129, 'j', j, false, false)), 1), j, false, false), 1))
                                    keywords = J$.W(6476185, 'keywords', J$.G(6476177, J$.R(6476145, 'keywords', keywords, false, false), J$.G(6476169, J$.R(6476153, 'segments', segments, false, false), J$.R(6476161, 'j', j, false, false))), keywords, false, false);
                                for (j = J$.W(6476201, 'j', J$.T(6476193, 0, 22, false), j, false, false); J$.C(352544, J$.B(657706, '<', J$.R(6476209, 'j', j, false, false), J$.G(6476225, J$.R(6476217, 'KEYWORDS', KEYWORDS, false, true), 'length'))); J$.B(657730, '-', j = J$.W(6476241, 'j', J$.B(657722, '+', J$.U(657714, '+', J$.R(6476233, 'j', j, false, false)), 1), j, false, false), 1)) {
                                    var key = J$.W(6476273, 'key', J$.G(6476265, J$.R(6476249, 'KEYWORDS', KEYWORDS, false, true), J$.R(6476257, 'j', j, false, false)), key, false, false);
                                    var schema = J$.W(6476305, 'schema', J$.G(6476297, J$.R(6476281, 'keywords', keywords, false, false), J$.R(6476289, 'key', key, false, false)), schema, false, false);
                                    if (J$.C(352536, J$.R(6476313, 'schema', schema, false, false))) {
                                        J$.P(6476377, J$.R(6476321, 'keywords', keywords, false, false), J$.R(6476329, 'key', key, false, false), J$.T(6476369, {
                                            anyOf: J$.T(6476361, [
                                                J$.R(6476337, 'schema', schema, false, false),
                                                J$.T(6476353, { $ref: J$.T(6476345, 'https://raw.githubusercontent.com/epoberezkin/ajv/master/lib/refs/data.json#', 21, false) }, 11, false)
                                            ], 10, false)
                                        }, 11, false));
                                    }
                                }
                            }
                            return J$.Rt(6476393, J$.R(6476385, 'metaSchema', metaSchema, false, false));
                        } catch (J$e) {
                            J$.Ex(6476513, J$e);
                        } finally {
                            if (J$.Fr(6476521))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
        } catch (J$e) {
            J$.Ex(6476529, J$e);
        } finally {
            if (J$.Sr(6476537))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

