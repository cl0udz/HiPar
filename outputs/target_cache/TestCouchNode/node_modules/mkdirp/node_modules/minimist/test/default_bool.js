J$.noInstrEval = false;
jalangiLabel2:
    while (true) {
        try {
            J$.Se(4524417, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestCouchNode/node_modules/mkdirp/node_modules/minimist/test/default_bool.js');
            J$.N(4524425, 'test', test, false, false, false);
            J$.N(4524433, 'parse', parse, false, false, false);
            var test = J$.W(4524009, 'test', J$.F(4524001, J$.I(typeof require === 'undefined' ? require = J$.R(4523985, 'require', undefined, true, true) : require = J$.R(4523985, 'require', require, true, true)), false)(J$.T(4523993, 'tape', 21, false)), test, false, true);
            var parse = J$.W(4524041, 'parse', J$.F(4524033, J$.I(typeof require === 'undefined' ? require = J$.R(4524017, 'require', undefined, true, true) : require = J$.R(4524017, 'require', require, true, true)), false)(J$.T(4524025, '../', 21, false)), parse, false, true);
            J$.F(4524225, J$.R(4524049, 'test', test, false, true), false)(J$.T(4524057, 'boolean default true', 21, false), J$.T(4524217, function (t) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(4524185, arguments.callee, this, arguments);
                            arguments = J$.N(4524193, 'arguments', arguments, true, false, false);
                            t = J$.N(4524201, 't', t, true, false, false);
                            J$.N(4524209, 'argv', argv, false, false, false);
                            var argv = J$.W(4524121, 'argv', J$.F(4524113, J$.R(4524065, 'parse', parse, false, true), false)(J$.T(4524073, [], 10, false), J$.T(4524105, {
                                boolean: J$.T(4524081, 'sometrue', 21, false),
                                default: J$.T(4524097, { sometrue: J$.T(4524089, true, 23, false) }, 11, false)
                            }, 11, false)), argv, false, false);
                            J$.M(4524161, J$.R(4524129, 't', t, false, false), 'equal', false)(J$.G(4524145, J$.R(4524137, 'argv', argv, false, false), 'sometrue'), J$.T(4524153, true, 23, false));
                            J$.M(4524177, J$.R(4524169, 't', t, false, false), 'end', false)();
                        } catch (J$e) {
                            J$.Ex(4524441, J$e);
                        } finally {
                            if (J$.Fr(4524449))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.F(4524409, J$.R(4524233, 'test', test, false, true), false)(J$.T(4524241, 'boolean default false', 21, false), J$.T(4524401, function (t) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(4524369, arguments.callee, this, arguments);
                            arguments = J$.N(4524377, 'arguments', arguments, true, false, false);
                            t = J$.N(4524385, 't', t, true, false, false);
                            J$.N(4524393, 'argv', argv, false, false, false);
                            var argv = J$.W(4524305, 'argv', J$.F(4524297, J$.R(4524249, 'parse', parse, false, true), false)(J$.T(4524257, [], 10, false), J$.T(4524289, {
                                boolean: J$.T(4524265, 'somefalse', 21, false),
                                default: J$.T(4524281, { somefalse: J$.T(4524273, false, 23, false) }, 11, false)
                            }, 11, false)), argv, false, false);
                            J$.M(4524345, J$.R(4524313, 't', t, false, false), 'equal', false)(J$.G(4524329, J$.R(4524321, 'argv', argv, false, false), 'somefalse'), J$.T(4524337, false, 23, false));
                            J$.M(4524361, J$.R(4524353, 't', t, false, false), 'end', false)();
                        } catch (J$e) {
                            J$.Ex(4524457, J$e);
                        } finally {
                            if (J$.Fr(4524465))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
        } catch (J$e) {
            J$.Ex(4524473, J$e);
        } finally {
            if (J$.Sr(4524481))
                continue jalangiLabel2;
            else
                break jalangiLabel2;
        }
    }
// JALANGI DO NOT INSTRUMENT

