J$.noInstrEval = false;
jalangiLabel20:
    while (true) {
        try {
            J$.Se(5787017, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestCouchNode/node_modules/verror/lib/verror.js');
            function parseConstructorArguments(args) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(5782137, arguments.callee, this, arguments);
                            arguments = J$.N(5782145, 'arguments', arguments, true, false, false);
                            args = J$.N(5782153, 'args', args, true, false, false);
                            J$.N(5782161, 'argv', argv, false, false, false);
                            J$.N(5782169, 'options', options, false, false, false);
                            J$.N(5782177, 'sprintf_args', sprintf_args, false, false, false);
                            J$.N(5782185, 'shortmessage', shortmessage, false, false, false);
                            J$.N(5782193, 'k', k, false, false, false);
                            var argv, options, sprintf_args, shortmessage, k;
                            J$.M(5781297, J$.R(5781273, 'mod_assertplus', mod_assertplus, false, true), 'object', false)(J$.R(5781281, 'args', args, false, false), J$.T(5781289, 'args', 21, false));
                            J$.M(5781337, J$.R(5781305, 'mod_assertplus', mod_assertplus, false, true), 'bool', false)(J$.G(5781321, J$.R(5781313, 'args', args, false, false), 'strict'), J$.T(5781329, 'args.strict', 21, false));
                            J$.M(5781377, J$.R(5781345, 'mod_assertplus', mod_assertplus, false, true), 'array', false)(J$.G(5781361, J$.R(5781353, 'args', args, false, false), 'argv'), J$.T(5781369, 'args.argv', 21, false));
                            argv = J$.W(5781401, 'argv', J$.G(5781393, J$.R(5781385, 'args', args, false, false), 'argv'), argv, false, false);
                            if (J$.C(299976, J$.B(692122, '===', J$.G(5781417, J$.R(5781409, 'argv', argv, false, false), 'length'), J$.T(5781425, 0, 22, false)))) {
                                options = J$.W(5781441, 'options', J$.T(5781433, {}, 11, false), options, false, false);
                                sprintf_args = J$.W(5781457, 'sprintf_args', J$.T(5781449, [], 10, false), sprintf_args, false, false);
                            } else if (J$.C(299968, J$.F(5781497, J$.R(5781465, 'mod_isError', mod_isError, false, true), false)(J$.G(5781489, J$.R(5781473, 'argv', argv, false, false), J$.T(5781481, 0, 22, false))))) {
                                options = J$.W(5781537, 'options', J$.T(5781529, { 'cause': J$.G(5781521, J$.R(5781505, 'argv', argv, false, false), J$.T(5781513, 0, 22, false)) }, 11, false), options, false, false);
                                sprintf_args = J$.W(5781569, 'sprintf_args', J$.M(5781561, J$.R(5781545, 'argv', argv, false, false), 'slice', false)(J$.T(5781553, 1, 22, false)), sprintf_args, false, false);
                            } else if (J$.C(299960, J$.B(692138, '===', J$.U(692130, 'typeof', J$.G(5781593, J$.R(5781577, 'argv', argv, false, false), J$.T(5781585, 0, 22, false))), J$.T(5781601, 'object', 21, false)))) {
                                options = J$.W(5781617, 'options', J$.T(5781609, {}, 11, false), options, false, false);
                                for (k in J$.H(5781713, J$.G(5781641, J$.R(5781625, 'argv', argv, false, false), J$.T(5781633, 0, 22, false)))) {
                                    J$.N(5781721, 'k', k, false, true, false);
                                    {
                                        {
                                            J$.P(5781705, J$.R(5781649, 'options', options, false, false), J$.R(5781657, 'k', k, false, false), J$.G(5781697, J$.G(5781681, J$.R(5781665, 'argv', argv, false, false), J$.T(5781673, 0, 22, false)), J$.R(5781689, 'k', k, false, false)));
                                        }
                                    }
                                }
                                sprintf_args = J$.W(5781753, 'sprintf_args', J$.M(5781745, J$.R(5781729, 'argv', argv, false, false), 'slice', false)(J$.T(5781737, 1, 22, false)), sprintf_args, false, false);
                            } else {
                                J$.M(5781809, J$.R(5781761, 'mod_assertplus', mod_assertplus, false, true), 'string', false)(J$.G(5781785, J$.R(5781769, 'argv', argv, false, false), J$.T(5781777, 0, 22, false)), J$.B(692146, '+', J$.T(5781793, 'first argument to VError, SError, or WError ', 21, false), J$.T(5781801, 'constructor must be a string, object, or Error', 21, false)));
                                options = J$.W(5781825, 'options', J$.T(5781817, {}, 11, false), options, false, false);
                                sprintf_args = J$.W(5781841, 'sprintf_args', J$.R(5781833, 'argv', argv, false, false), sprintf_args, false, false);
                            }
                            J$.M(5781865, J$.R(5781849, 'mod_assertplus', mod_assertplus, false, true), 'object', false)(J$.R(5781857, 'options', options, false, false));
                            if (J$.C(300008, J$.C(299984, J$.U(692154, '!', J$.G(5781881, J$.R(5781873, 'options', options, false, false), 'strict'))) ? J$.U(692162, '!', J$.G(5781897, J$.R(5781889, 'args', args, false, false), 'strict')) : J$._())) {
                                sprintf_args = J$.W(5782017, 'sprintf_args', J$.M(5782009, J$.R(5781905, 'sprintf_args', sprintf_args, false, false), 'map', false)(J$.T(5782001, function (a) {
                                    jalangiLabel0:
                                        while (true) {
                                            try {
                                                J$.Fe(5781977, arguments.callee, this, arguments);
                                                arguments = J$.N(5781985, 'arguments', arguments, true, false, false);
                                                a = J$.N(5781993, 'a', a, true, false, false);
                                                return J$.Rt(5781969, J$.C(300000, J$.B(692170, '===', J$.R(5781913, 'a', a, false, false), J$.T(5781921, null, 25, false))) ? J$.T(5781929, 'null', 21, false) : J$.C(299992, J$.B(692178, '===', J$.R(5781937, 'a', a, false, false), J$.T(5781945, undefined, 24, false))) ? J$.T(5781953, 'undefined', 21, false) : J$.R(5781961, 'a', a, false, false));
                                            } catch (J$e) {
                                                J$.Ex(5787145, J$e);
                                            } finally {
                                                if (J$.Fr(5787153))
                                                    continue jalangiLabel0;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false)), sprintf_args, false, false);
                            }
                            if (J$.C(300016, J$.B(692186, '===', J$.G(5782033, J$.R(5782025, 'sprintf_args', sprintf_args, false, false), 'length'), J$.T(5782041, 0, 22, false)))) {
                                shortmessage = J$.W(5782057, 'shortmessage', J$.T(5782049, '', 21, false), shortmessage, false, false);
                            } else {
                                shortmessage = J$.W(5782097, 'shortmessage', J$.M(5782089, J$.R(5782065, 'sprintf', sprintf, false, true), 'apply', false)(J$.T(5782073, null, 25, false), J$.R(5782081, 'sprintf_args', sprintf_args, false, false)), shortmessage, false, false);
                            }
                            return J$.Rt(5782129, J$.T(5782121, {
                                'options': J$.R(5782105, 'options', options, false, false),
                                'shortmessage': J$.R(5782113, 'shortmessage', shortmessage, false, false)
                            }, 11, false));
                        } catch (J$e) {
                            J$.Ex(5787161, J$e);
                        } finally {
                            if (J$.Fr(5787169))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function VError() {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(5783081, arguments.callee, this, arguments);
                            arguments = J$.N(5783089, 'arguments', arguments, true, false, false);
                            J$.N(5783097, 'args', args, false, false, false);
                            J$.N(5783105, 'obj', obj, false, false, false);
                            J$.N(5783113, 'parsed', parsed, false, false, false);
                            J$.N(5783121, 'cause', cause, false, false, false);
                            J$.N(5783129, 'ctor', ctor, false, false, false);
                            J$.N(5783137, 'message', message, false, false, false);
                            J$.N(5783145, 'k', k, false, false, false);
                            var args, obj, parsed, cause, ctor, message, k;
                            args = J$.W(5782249, 'args', J$.M(5782241, J$.G(5782217, J$.G(5782209, J$.I(typeof Array === 'undefined' ? Array = J$.R(5782201, 'Array', undefined, true, true) : Array = J$.R(5782201, 'Array', Array, true, true)), 'prototype'), 'slice'), 'call', false)(J$.I(typeof arguments === 'undefined' ? arguments = J$.R(5782225, 'arguments', undefined, true, true) : arguments = J$.R(5782225, 'arguments', arguments, true, true)), J$.T(5782233, 0, 22, false)), args, false, false);
                            if (J$.C(300024, J$.U(692202, '!', J$.B(692194, 'instanceof', J$.R(5782257, 'this', this, false, false), J$.R(5782265, 'VError', VError, false, true))))) {
                                obj = J$.W(5782305, 'obj', J$.M(5782297, J$.I(typeof Object === 'undefined' ? Object = J$.R(5782273, 'Object', undefined, true, true) : Object = J$.R(5782273, 'Object', Object, true, true)), 'create', false)(J$.G(5782289, J$.R(5782281, 'VError', VError, false, true), 'prototype')), obj, false, false);
                                J$.M(5782337, J$.R(5782313, 'VError', VError, false, true), 'apply', false)(J$.R(5782321, 'obj', obj, false, false), J$.I(typeof arguments === 'undefined' ? arguments = J$.R(5782329, 'arguments', undefined, true, true) : arguments = J$.R(5782329, 'arguments', arguments, true, true)));
                                return J$.Rt(5782353, J$.R(5782345, 'obj', obj, false, false));
                            }
                            parsed = J$.W(5782401, 'parsed', J$.F(5782393, J$.R(5782361, 'parseConstructorArguments', parseConstructorArguments, false, true), false)(J$.T(5782385, {
                                'argv': J$.R(5782369, 'args', args, false, false),
                                'strict': J$.T(5782377, false, 23, false)
                            }, 11, false)), parsed, false, false);
                            if (J$.C(300032, J$.G(5782425, J$.G(5782417, J$.R(5782409, 'parsed', parsed, false, false), 'options'), 'name'))) {
                                J$.M(5782473, J$.R(5782433, 'mod_assertplus', mod_assertplus, false, true), 'string', false)(J$.G(5782457, J$.G(5782449, J$.R(5782441, 'parsed', parsed, false, false), 'options'), 'name'), J$.T(5782465, 'error\'s "name" must be a string', 21, false));
                                J$.P(5782513, J$.R(5782481, 'this', this, false, false), 'name', J$.G(5782505, J$.G(5782497, J$.R(5782489, 'parsed', parsed, false, false), 'options'), 'name'));
                            }
                            J$.P(5782545, J$.R(5782521, 'this', this, false, false), 'jse_shortmsg', J$.G(5782537, J$.R(5782529, 'parsed', parsed, false, false), 'shortmessage'));
                            message = J$.W(5782569, 'message', J$.G(5782561, J$.R(5782553, 'parsed', parsed, false, false), 'shortmessage'), message, false, false);
                            cause = J$.W(5782601, 'cause', J$.G(5782593, J$.G(5782585, J$.R(5782577, 'parsed', parsed, false, false), 'options'), 'cause'), cause, false, false);
                            if (J$.C(300048, J$.R(5782609, 'cause', cause, false, false))) {
                                J$.M(5782657, J$.R(5782617, 'mod_assertplus', mod_assertplus, false, true), 'ok', false)(J$.F(5782641, J$.R(5782625, 'mod_isError', mod_isError, false, true), false)(J$.R(5782633, 'cause', cause, false, false)), J$.T(5782649, 'cause is not an Error', 21, false));
                                J$.P(5782681, J$.R(5782665, 'this', this, false, false), 'jse_cause', J$.R(5782673, 'cause', cause, false, false));
                                if (J$.C(300040, J$.U(692210, '!', J$.G(5782705, J$.G(5782697, J$.R(5782689, 'parsed', parsed, false, false), 'options'), 'skipCauseMessage')))) {
                                    message = J$.W(5782745, 'message', J$.B(692226, '+', J$.R(5782737, 'message', message, false, false), J$.B(692218, '+', J$.T(5782713, ': ', 21, false), J$.G(5782729, J$.R(5782721, 'cause', cause, false, false), 'message'))), message, false, false);
                                }
                            }
                            J$.P(5782769, J$.R(5782753, 'this', this, false, false), 'jse_info', J$.T(5782761, {}, 11, false));
                            if (J$.C(300056, J$.G(5782793, J$.G(5782785, J$.R(5782777, 'parsed', parsed, false, false), 'options'), 'info'))) {
                                for (k in J$.H(5782897, J$.G(5782817, J$.G(5782809, J$.R(5782801, 'parsed', parsed, false, false), 'options'), 'info'))) {
                                    J$.N(5782905, 'k', k, false, true, false);
                                    {
                                        {
                                            J$.P(5782889, J$.G(5782833, J$.R(5782825, 'this', this, false, false), 'jse_info'), J$.R(5782841, 'k', k, false, false), J$.G(5782881, J$.G(5782865, J$.G(5782857, J$.R(5782849, 'parsed', parsed, false, false), 'options'), 'info'), J$.R(5782873, 'k', k, false, false)));
                                        }
                                    }
                                }
                            }
                            J$.P(5782929, J$.R(5782913, 'this', this, false, false), 'message', J$.R(5782921, 'message', message, false, false));
                            J$.M(5782961, J$.I(typeof Error === 'undefined' ? Error = J$.R(5782937, 'Error', undefined, true, true) : Error = J$.R(5782937, 'Error', Error, true, true)), 'call', false)(J$.R(5782945, 'this', this, false, false), J$.R(5782953, 'message', message, false, false));
                            if (J$.C(300072, J$.G(5782977, J$.I(typeof Error === 'undefined' ? Error = J$.R(5782969, 'Error', undefined, true, true) : Error = J$.R(5782969, 'Error', Error, true, true)), 'captureStackTrace'))) {
                                ctor = J$.W(5783025, 'ctor', J$.C(300064, J$.G(5783001, J$.G(5782993, J$.R(5782985, 'parsed', parsed, false, false), 'options'), 'constructorOpt')) ? J$._() : J$.G(5783017, J$.R(5783009, 'this', this, false, false), 'constructor'), ctor, false, false);
                                J$.M(5783057, J$.I(typeof Error === 'undefined' ? Error = J$.R(5783033, 'Error', undefined, true, true) : Error = J$.R(5783033, 'Error', Error, true, true)), 'captureStackTrace', false)(J$.R(5783041, 'this', this, false, false), J$.R(5783049, 'ctor', ctor, false, false));
                            }
                            return J$.Rt(5783073, J$.R(5783065, 'this', this, false, false));
                        } catch (J$e) {
                            J$.Ex(5787177, J$e);
                        } finally {
                            if (J$.Fr(5787185))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function SError() {
                jalangiLabel14:
                    while (true) {
                        try {
                            J$.Fe(5785641, arguments.callee, this, arguments);
                            arguments = J$.N(5785649, 'arguments', arguments, true, false, false);
                            J$.N(5785657, 'args', args, false, false, false);
                            J$.N(5785665, 'obj', obj, false, false, false);
                            J$.N(5785673, 'parsed', parsed, false, false, false);
                            J$.N(5785681, 'options', options, false, false, false);
                            var args, obj, parsed, options;
                            args = J$.W(5785385, 'args', J$.M(5785377, J$.G(5785353, J$.G(5785345, J$.I(typeof Array === 'undefined' ? Array = J$.R(5785337, 'Array', undefined, true, true) : Array = J$.R(5785337, 'Array', Array, true, true)), 'prototype'), 'slice'), 'call', false)(J$.I(typeof arguments === 'undefined' ? arguments = J$.R(5785361, 'arguments', undefined, true, true) : arguments = J$.R(5785361, 'arguments', arguments, true, true)), J$.T(5785369, 0, 22, false)), args, false, false);
                            if (J$.C(300200, J$.U(692370, '!', J$.B(692362, 'instanceof', J$.R(5785393, 'this', this, false, false), J$.R(5785401, 'SError', SError, false, true))))) {
                                obj = J$.W(5785441, 'obj', J$.M(5785433, J$.I(typeof Object === 'undefined' ? Object = J$.R(5785409, 'Object', undefined, true, true) : Object = J$.R(5785409, 'Object', Object, true, true)), 'create', false)(J$.G(5785425, J$.R(5785417, 'SError', SError, false, true), 'prototype')), obj, false, false);
                                J$.M(5785473, J$.R(5785449, 'SError', SError, false, true), 'apply', false)(J$.R(5785457, 'obj', obj, false, false), J$.I(typeof arguments === 'undefined' ? arguments = J$.R(5785465, 'arguments', undefined, true, true) : arguments = J$.R(5785465, 'arguments', arguments, true, true)));
                                return J$.Rt(5785489, J$.R(5785481, 'obj', obj, false, false));
                            }
                            parsed = J$.W(5785537, 'parsed', J$.F(5785529, J$.R(5785497, 'parseConstructorArguments', parseConstructorArguments, false, true), false)(J$.T(5785521, {
                                'argv': J$.R(5785505, 'args', args, false, false),
                                'strict': J$.T(5785513, true, 23, false)
                            }, 11, false)), parsed, false, false);
                            options = J$.W(5785561, 'options', J$.G(5785553, J$.R(5785545, 'parsed', parsed, false, false), 'options'), options, false, false);
                            J$.M(5785617, J$.R(5785569, 'VError', VError, false, true), 'call', false)(J$.R(5785577, 'this', this, false, false), J$.R(5785585, 'options', options, false, false), J$.T(5785593, '%s', 21, false), J$.G(5785609, J$.R(5785601, 'parsed', parsed, false, false), 'shortmessage'));
                            return J$.Rt(5785633, J$.R(5785625, 'this', this, false, false));
                        } catch (J$e) {
                            J$.Ex(5787369, J$e);
                        } finally {
                            if (J$.Fr(5787377))
                                continue jalangiLabel14;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function MultiError(errors) {
                jalangiLabel15:
                    while (true) {
                        try {
                            J$.Fe(5785945, arguments.callee, this, arguments);
                            arguments = J$.N(5785953, 'arguments', arguments, true, false, false);
                            errors = J$.N(5785961, 'errors', errors, true, false, false);
                            J$.M(5785745, J$.R(5785721, 'mod_assertplus', mod_assertplus, false, true), 'array', false)(J$.R(5785729, 'errors', errors, false, false), J$.T(5785737, 'list of errors', 21, false));
                            J$.M(5785793, J$.R(5785753, 'mod_assertplus', mod_assertplus, false, true), 'ok', false)(J$.B(692378, '>', J$.G(5785769, J$.R(5785761, 'errors', errors, false, false), 'length'), J$.T(5785777, 0, 22, false)), J$.T(5785785, 'must be at least one error', 21, false));
                            J$.P(5785817, J$.R(5785801, 'this', this, false, false), 'ase_errors', J$.R(5785809, 'errors', errors, false, false));
                            J$.M(5785937, J$.R(5785825, 'VError', VError, false, true), 'call', false)(J$.R(5785833, 'this', this, false, false), J$.T(5785865, { 'cause': J$.G(5785857, J$.R(5785841, 'errors', errors, false, false), J$.T(5785849, 0, 22, false)) }, 11, false), J$.T(5785873, 'first of %d error%s', 21, false), J$.G(5785889, J$.R(5785881, 'errors', errors, false, false), 'length'), J$.C(300208, J$.B(692386, '==', J$.G(5785905, J$.R(5785897, 'errors', errors, false, false), 'length'), J$.T(5785913, 1, 22, false))) ? J$.T(5785921, '', 21, false) : J$.T(5785929, 's', 21, false));
                        } catch (J$e) {
                            J$.Ex(5787385, J$e);
                        } finally {
                            if (J$.Fr(5787393))
                                continue jalangiLabel15;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function WError() {
                jalangiLabel17:
                    while (true) {
                        try {
                            J$.Fe(5786457, arguments.callee, this, arguments);
                            arguments = J$.N(5786465, 'arguments', arguments, true, false, false);
                            J$.N(5786473, 'args', args, false, false, false);
                            J$.N(5786481, 'obj', obj, false, false, false);
                            J$.N(5786489, 'parsed', parsed, false, false, false);
                            J$.N(5786497, 'options', options, false, false, false);
                            var args, obj, parsed, options;
                            args = J$.W(5786169, 'args', J$.M(5786161, J$.G(5786137, J$.G(5786129, J$.I(typeof Array === 'undefined' ? Array = J$.R(5786121, 'Array', undefined, true, true) : Array = J$.R(5786121, 'Array', Array, true, true)), 'prototype'), 'slice'), 'call', false)(J$.I(typeof arguments === 'undefined' ? arguments = J$.R(5786145, 'arguments', undefined, true, true) : arguments = J$.R(5786145, 'arguments', arguments, true, true)), J$.T(5786153, 0, 22, false)), args, false, false);
                            if (J$.C(300216, J$.U(692402, '!', J$.B(692394, 'instanceof', J$.R(5786177, 'this', this, false, false), J$.R(5786185, 'WError', WError, false, true))))) {
                                obj = J$.W(5786225, 'obj', J$.M(5786217, J$.I(typeof Object === 'undefined' ? Object = J$.R(5786193, 'Object', undefined, true, true) : Object = J$.R(5786193, 'Object', Object, true, true)), 'create', false)(J$.G(5786209, J$.R(5786201, 'WError', WError, false, true), 'prototype')), obj, false, false);
                                J$.M(5786257, J$.R(5786233, 'WError', WError, false, true), 'apply', false)(J$.R(5786241, 'obj', obj, false, false), J$.R(5786249, 'args', args, false, false));
                                return J$.Rt(5786273, J$.R(5786265, 'obj', obj, false, false));
                            }
                            parsed = J$.W(5786321, 'parsed', J$.F(5786313, J$.R(5786281, 'parseConstructorArguments', parseConstructorArguments, false, true), false)(J$.T(5786305, {
                                'argv': J$.R(5786289, 'args', args, false, false),
                                'strict': J$.T(5786297, false, 23, false)
                            }, 11, false)), parsed, false, false);
                            options = J$.W(5786345, 'options', J$.G(5786337, J$.R(5786329, 'parsed', parsed, false, false), 'options'), options, false, false);
                            J$.P(5786377, J$.R(5786353, 'options', options, false, false), J$.T(5786361, 'skipCauseMessage', 21, false), J$.T(5786369, true, 23, false));
                            J$.M(5786433, J$.R(5786385, 'VError', VError, false, true), 'call', false)(J$.R(5786393, 'this', this, false, false), J$.R(5786401, 'options', options, false, false), J$.T(5786409, '%s', 21, false), J$.G(5786425, J$.R(5786417, 'parsed', parsed, false, false), 'shortmessage'));
                            return J$.Rt(5786449, J$.R(5786441, 'this', this, false, false));
                        } catch (J$e) {
                            J$.Ex(5787417, J$e);
                        } finally {
                            if (J$.Fr(5787425))
                                continue jalangiLabel17;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(5787025, 'mod_assertplus', mod_assertplus, false, false, false);
            J$.N(5787033, 'mod_util', mod_util, false, false, false);
            J$.N(5787041, 'mod_extsprintf', mod_extsprintf, false, false, false);
            J$.N(5787049, 'mod_isError', mod_isError, false, false, false);
            J$.N(5787057, 'sprintf', sprintf, false, false, false);
            parseConstructorArguments = J$.N(5787073, 'parseConstructorArguments', J$.T(5787065, parseConstructorArguments, 12, false), true, false, false);
            VError = J$.N(5787089, 'VError', J$.T(5787081, VError, 12, false), true, false, false);
            SError = J$.N(5787105, 'SError', J$.T(5787097, SError, 12, false), true, false, false);
            MultiError = J$.N(5787121, 'MultiError', J$.T(5787113, MultiError, 12, false), true, false, false);
            WError = J$.N(5787137, 'WError', J$.T(5787129, WError, 12, false), true, false, false);
            var mod_assertplus = J$.W(5781017, 'mod_assertplus', J$.F(5781009, J$.I(typeof require === 'undefined' ? require = J$.R(5780993, 'require', undefined, true, true) : require = J$.R(5780993, 'require', require, true, true)), false)(J$.T(5781001, 'assert-plus', 21, false)), mod_assertplus, false, true);
            var mod_util = J$.W(5781049, 'mod_util', J$.F(5781041, J$.I(typeof require === 'undefined' ? require = J$.R(5781025, 'require', undefined, true, true) : require = J$.R(5781025, 'require', require, true, true)), false)(J$.T(5781033, 'util', 21, false)), mod_util, false, true);
            var mod_extsprintf = J$.W(5781081, 'mod_extsprintf', J$.F(5781073, J$.I(typeof require === 'undefined' ? require = J$.R(5781057, 'require', undefined, true, true) : require = J$.R(5781057, 'require', require, true, true)), false)(J$.T(5781065, 'extsprintf', 21, false)), mod_extsprintf, false, true);
            var mod_isError = J$.W(5781121, 'mod_isError', J$.G(5781113, J$.F(5781105, J$.I(typeof require === 'undefined' ? require = J$.R(5781089, 'require', undefined, true, true) : require = J$.R(5781089, 'require', require, true, true)), false)(J$.T(5781097, 'core-util-is', 21, false)), 'isError'), mod_isError, false, true);
            var sprintf = J$.W(5781145, 'sprintf', J$.G(5781137, J$.R(5781129, 'mod_extsprintf', mod_extsprintf, false, true), 'sprintf'), sprintf, false, true);
            J$.P(5781169, J$.I(typeof module === 'undefined' ? module = J$.R(5781153, 'module', undefined, true, true) : module = J$.R(5781153, 'module', module, true, true)), 'exports', J$.R(5781161, 'VError', VError, false, true));
            J$.P(5781193, J$.R(5781177, 'VError', VError, false, true), 'VError', J$.R(5781185, 'VError', VError, false, true));
            J$.P(5781217, J$.R(5781201, 'VError', VError, false, true), 'SError', J$.R(5781209, 'SError', SError, false, true));
            J$.P(5781241, J$.R(5781225, 'VError', VError, false, true), 'WError', J$.R(5781233, 'WError', WError, false, true));
            J$.P(5781265, J$.R(5781249, 'VError', VError, false, true), 'MultiError', J$.R(5781257, 'MultiError', MultiError, false, true));
            J$.M(5783177, J$.R(5783153, 'mod_util', mod_util, false, true), 'inherits', false)(J$.R(5783161, 'VError', VError, false, true), J$.I(typeof Error === 'undefined' ? Error = J$.R(5783169, 'Error', undefined, true, true) : Error = J$.R(5783169, 'Error', Error, true, true)));
            J$.P(5783209, J$.G(5783193, J$.R(5783185, 'VError', VError, false, true), 'prototype'), 'name', J$.T(5783201, 'VError', 21, false));
            J$.P(5783441, J$.G(5783225, J$.R(5783217, 'VError', VError, false, true), 'prototype'), 'toString', J$.T(5783433, function ve_toString() {
                jalangiLabel3:
                    while (true) {
                        try {
                            J$.Fe(5783409, arguments.callee, this, arguments);
                            arguments = J$.N(5783417, 'arguments', arguments, true, false, false);
                            J$.N(5783425, 'str', str, false, false, false);
                            var str = J$.W(5783329, 'str', J$.C(300096, J$.C(300088, J$.C(300080, J$.M(5783249, J$.R(5783233, 'this', this, false, false), 'hasOwnProperty', false)(J$.T(5783241, 'name', 21, false))) ? J$.G(5783265, J$.R(5783257, 'this', this, false, false), 'name') : J$._()) ? J$._() : J$.G(5783289, J$.G(5783281, J$.R(5783273, 'this', this, false, false), 'constructor'), 'name')) ? J$._() : J$.G(5783321, J$.G(5783313, J$.G(5783305, J$.R(5783297, 'this', this, false, false), 'constructor'), 'prototype'), 'name'), str, false, false);
                            if (J$.C(300104, J$.G(5783345, J$.R(5783337, 'this', this, false, false), 'message')))
                                str = J$.W(5783385, 'str', J$.B(692242, '+', J$.R(5783377, 'str', str, false, false), J$.B(692234, '+', J$.T(5783353, ': ', 21, false), J$.G(5783369, J$.R(5783361, 'this', this, false, false), 'message'))), str, false, false);
                            return J$.Rt(5783401, J$.R(5783393, 'str', str, false, false));
                        } catch (J$e) {
                            J$.Ex(5787193, J$e);
                        } finally {
                            if (J$.Fr(5787201))
                                continue jalangiLabel3;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(5783569, J$.G(5783457, J$.R(5783449, 'VError', VError, false, true), 'prototype'), 'cause', J$.T(5783561, function ve_cause() {
                jalangiLabel4:
                    while (true) {
                        try {
                            J$.Fe(5783537, arguments.callee, this, arguments);
                            arguments = J$.N(5783545, 'arguments', arguments, true, false, false);
                            J$.N(5783553, 'cause', cause, false, false, false);
                            var cause = J$.W(5783489, 'cause', J$.M(5783481, J$.R(5783465, 'VError', VError, false, true), 'cause', false)(J$.R(5783473, 'this', this, false, false)), cause, false, false);
                            return J$.Rt(5783529, J$.C(300112, J$.B(692250, '===', J$.R(5783497, 'cause', cause, false, false), J$.T(5783505, null, 25, false))) ? J$.T(5783513, undefined, 24, false) : J$.R(5783521, 'cause', cause, false, false));
                        } catch (J$e) {
                            J$.Ex(5787209, J$e);
                        } finally {
                            if (J$.Fr(5787217))
                                continue jalangiLabel4;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(5783729, J$.R(5783577, 'VError', VError, false, true), 'cause', J$.T(5783721, function (err) {
                jalangiLabel5:
                    while (true) {
                        try {
                            J$.Fe(5783697, arguments.callee, this, arguments);
                            arguments = J$.N(5783705, 'arguments', arguments, true, false, false);
                            err = J$.N(5783713, 'err', err, true, false, false);
                            J$.M(5783625, J$.R(5783585, 'mod_assertplus', mod_assertplus, false, true), 'ok', false)(J$.F(5783609, J$.R(5783593, 'mod_isError', mod_isError, false, true), false)(J$.R(5783601, 'err', err, false, false)), J$.T(5783617, 'err must be an Error', 21, false));
                            return J$.Rt(5783689, J$.C(300120, J$.F(5783657, J$.R(5783633, 'mod_isError', mod_isError, false, true), false)(J$.G(5783649, J$.R(5783641, 'err', err, false, false), 'jse_cause'))) ? J$.G(5783673, J$.R(5783665, 'err', err, false, false), 'jse_cause') : J$.T(5783681, null, 25, false));
                        } catch (J$e) {
                            J$.Ex(5787225, J$e);
                        } finally {
                            if (J$.Fr(5787233))
                                continue jalangiLabel5;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(5784097, J$.R(5783737, 'VError', VError, false, true), 'info', J$.T(5784089, function (err) {
                jalangiLabel6:
                    while (true) {
                        try {
                            J$.Fe(5784041, arguments.callee, this, arguments);
                            arguments = J$.N(5784049, 'arguments', arguments, true, false, false);
                            err = J$.N(5784057, 'err', err, true, false, false);
                            J$.N(5784065, 'rv', rv, false, false, false);
                            J$.N(5784073, 'cause', cause, false, false, false);
                            J$.N(5784081, 'k', k, false, false, false);
                            var rv, cause, k;
                            J$.M(5783785, J$.R(5783745, 'mod_assertplus', mod_assertplus, false, true), 'ok', false)(J$.F(5783769, J$.R(5783753, 'mod_isError', mod_isError, false, true), false)(J$.R(5783761, 'err', err, false, false)), J$.T(5783777, 'err must be an Error', 21, false));
                            cause = J$.W(5783817, 'cause', J$.M(5783809, J$.R(5783793, 'VError', VError, false, true), 'cause', false)(J$.R(5783801, 'err', err, false, false)), cause, false, false);
                            if (J$.C(300128, J$.B(692258, '!==', J$.R(5783825, 'cause', cause, false, false), J$.T(5783833, null, 25, false)))) {
                                rv = J$.W(5783865, 'rv', J$.M(5783857, J$.R(5783841, 'VError', VError, false, true), 'info', false)(J$.R(5783849, 'cause', cause, false, false)), rv, false, false);
                            } else {
                                rv = J$.W(5783881, 'rv', J$.T(5783873, {}, 11, false), rv, false, false);
                            }
                            if (J$.C(300144, J$.C(300136, J$.B(692274, '==', J$.U(692266, 'typeof', J$.G(5783897, J$.R(5783889, 'err', err, false, false), 'jse_info')), J$.T(5783905, 'object', 21, false))) ? J$.B(692282, '!==', J$.G(5783921, J$.R(5783913, 'err', err, false, false), 'jse_info'), J$.T(5783929, null, 25, false)) : J$._())) {
                                for (k in J$.H(5784009, J$.G(5783945, J$.R(5783937, 'err', err, false, false), 'jse_info'))) {
                                    J$.N(5784017, 'k', k, false, true, false);
                                    {
                                        {
                                            J$.P(5784001, J$.R(5783953, 'rv', rv, false, false), J$.R(5783961, 'k', k, false, false), J$.G(5783993, J$.G(5783977, J$.R(5783969, 'err', err, false, false), 'jse_info'), J$.R(5783985, 'k', k, false, false)));
                                        }
                                    }
                                }
                            }
                            return J$.Rt(5784033, J$.R(5784025, 'rv', rv, false, false));
                        } catch (J$e) {
                            J$.Ex(5787241, J$e);
                        } finally {
                            if (J$.Fr(5787249))
                                continue jalangiLabel6;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(5784449, J$.R(5784105, 'VError', VError, false, true), 'findCauseByName', J$.T(5784441, function (err, name) {
                jalangiLabel7:
                    while (true) {
                        try {
                            J$.Fe(5784401, arguments.callee, this, arguments);
                            arguments = J$.N(5784409, 'arguments', arguments, true, false, false);
                            err = J$.N(5784417, 'err', err, true, false, false);
                            name = J$.N(5784425, 'name', name, true, false, false);
                            J$.N(5784433, 'cause', cause, false, false, false);
                            var cause;
                            J$.M(5784153, J$.R(5784113, 'mod_assertplus', mod_assertplus, false, true), 'ok', false)(J$.F(5784137, J$.R(5784121, 'mod_isError', mod_isError, false, true), false)(J$.R(5784129, 'err', err, false, false)), J$.T(5784145, 'err must be an Error', 21, false));
                            J$.M(5784185, J$.R(5784161, 'mod_assertplus', mod_assertplus, false, true), 'string', false)(J$.R(5784169, 'name', name, false, false), J$.T(5784177, 'name', 21, false));
                            J$.M(5784233, J$.R(5784193, 'mod_assertplus', mod_assertplus, false, true), 'ok', false)(J$.B(692290, '>', J$.G(5784209, J$.R(5784201, 'name', name, false, false), 'length'), J$.T(5784217, 0, 22, false)), J$.T(5784225, 'name cannot be empty', 21, false));
                            for (cause = J$.W(5784249, 'cause', J$.R(5784241, 'err', err, false, false), cause, false, false); J$.C(300160, J$.B(692298, '!==', J$.R(5784257, 'cause', cause, false, false), J$.T(5784265, null, 25, false))); cause = J$.W(5784297, 'cause', J$.M(5784289, J$.R(5784273, 'VError', VError, false, true), 'cause', false)(J$.R(5784281, 'cause', cause, false, false)), cause, false, false)) {
                                J$.M(5784337, J$.R(5784305, 'mod_assertplus', mod_assertplus, false, true), 'ok', false)(J$.F(5784329, J$.R(5784313, 'mod_isError', mod_isError, false, true), false)(J$.R(5784321, 'cause', cause, false, false)));
                                if (J$.C(300152, J$.B(692306, '==', J$.G(5784353, J$.R(5784345, 'cause', cause, false, false), 'name'), J$.R(5784361, 'name', name, false, false)))) {
                                    return J$.Rt(5784377, J$.R(5784369, 'cause', cause, false, false));
                                }
                            }
                            return J$.Rt(5784393, J$.T(5784385, null, 25, false));
                        } catch (J$e) {
                            J$.Ex(5787257, J$e);
                        } finally {
                            if (J$.Fr(5787265))
                                continue jalangiLabel7;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(5784553, J$.R(5784457, 'VError', VError, false, true), 'hasCauseWithName', J$.T(5784545, function (err, name) {
                jalangiLabel8:
                    while (true) {
                        try {
                            J$.Fe(5784513, arguments.callee, this, arguments);
                            arguments = J$.N(5784521, 'arguments', arguments, true, false, false);
                            err = J$.N(5784529, 'err', err, true, false, false);
                            name = J$.N(5784537, 'name', name, true, false, false);
                            return J$.Rt(5784505, J$.B(692314, '!==', J$.M(5784489, J$.R(5784465, 'VError', VError, false, true), 'findCauseByName', false)(J$.R(5784473, 'err', err, false, false), J$.R(5784481, 'name', name, false, false)), J$.T(5784497, null, 25, false)));
                        } catch (J$e) {
                            J$.Ex(5787273, J$e);
                        } finally {
                            if (J$.Fr(5787281))
                                continue jalangiLabel8;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(5784777, J$.R(5784561, 'VError', VError, false, true), 'fullStack', J$.T(5784769, function (err) {
                jalangiLabel9:
                    while (true) {
                        try {
                            J$.Fe(5784737, arguments.callee, this, arguments);
                            arguments = J$.N(5784745, 'arguments', arguments, true, false, false);
                            err = J$.N(5784753, 'err', err, true, false, false);
                            J$.N(5784761, 'cause', cause, false, false, false);
                            J$.M(5784609, J$.R(5784569, 'mod_assertplus', mod_assertplus, false, true), 'ok', false)(J$.F(5784593, J$.R(5784577, 'mod_isError', mod_isError, false, true), false)(J$.R(5784585, 'err', err, false, false)), J$.T(5784601, 'err must be an Error', 21, false));
                            var cause = J$.W(5784641, 'cause', J$.M(5784633, J$.R(5784617, 'VError', VError, false, true), 'cause', false)(J$.R(5784625, 'err', err, false, false)), cause, false, false);
                            if (J$.C(300168, J$.R(5784649, 'cause', cause, false, false))) {
                                return J$.Rt(5784705, J$.B(692330, '+', J$.B(692322, '+', J$.G(5784665, J$.R(5784657, 'err', err, false, false), 'stack'), J$.T(5784673, '\ncaused by: ', 21, false)), J$.M(5784697, J$.R(5784681, 'VError', VError, false, true), 'fullStack', false)(J$.R(5784689, 'cause', cause, false, false))));
                            }
                            return J$.Rt(5784729, J$.G(5784721, J$.R(5784713, 'err', err, false, false), 'stack'));
                        } catch (J$e) {
                            J$.Ex(5787289, J$e);
                        } finally {
                            if (J$.Fr(5787297))
                                continue jalangiLabel9;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(5785073, J$.R(5784785, 'VError', VError, false, true), 'errorFromList', J$.T(5785065, function (errors) {
                jalangiLabel11:
                    while (true) {
                        try {
                            J$.Fe(5785041, arguments.callee, this, arguments);
                            arguments = J$.N(5785049, 'arguments', arguments, true, false, false);
                            errors = J$.N(5785057, 'errors', errors, true, false, false);
                            J$.M(5784817, J$.R(5784793, 'mod_assertplus', mod_assertplus, false, true), 'arrayOfObject', false)(J$.R(5784801, 'errors', errors, false, false), J$.T(5784809, 'errors', 21, false));
                            if (J$.C(300176, J$.B(692338, '===', J$.G(5784833, J$.R(5784825, 'errors', errors, false, false), 'length'), J$.T(5784841, 0, 22, false)))) {
                                return J$.Rt(5784857, J$.T(5784849, null, 25, false));
                            }
                            J$.M(5784945, J$.R(5784865, 'errors', errors, false, false), 'forEach', false)(J$.T(5784937, function (e) {
                                jalangiLabel10:
                                    while (true) {
                                        try {
                                            J$.Fe(5784913, arguments.callee, this, arguments);
                                            arguments = J$.N(5784921, 'arguments', arguments, true, false, false);
                                            e = J$.N(5784929, 'e', e, true, false, false);
                                            J$.M(5784905, J$.R(5784873, 'mod_assertplus', mod_assertplus, false, true), 'ok', false)(J$.F(5784897, J$.R(5784881, 'mod_isError', mod_isError, false, true), false)(J$.R(5784889, 'e', e, false, false)));
                                        } catch (J$e) {
                                            J$.Ex(5787305, J$e);
                                        } finally {
                                            if (J$.Fr(5787313))
                                                continue jalangiLabel10;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            if (J$.C(300184, J$.B(692346, '==', J$.G(5784961, J$.R(5784953, 'errors', errors, false, false), 'length'), J$.T(5784969, 1, 22, false)))) {
                                return J$.Rt(5785001, J$.G(5784993, J$.R(5784977, 'errors', errors, false, false), J$.T(5784985, 0, 22, false)));
                            }
                            return J$.Rt(5785033, J$.F(5785025, J$.R(5785009, 'MultiError', MultiError, false, true), true)(J$.R(5785017, 'errors', errors, false, false)));
                        } catch (J$e) {
                            J$.Ex(5787321, J$e);
                        } finally {
                            if (J$.Fr(5787329))
                                continue jalangiLabel11;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(5785329, J$.R(5785081, 'VError', VError, false, true), 'errorForEach', J$.T(5785321, function (err, func) {
                jalangiLabel13:
                    while (true) {
                        try {
                            J$.Fe(5785289, arguments.callee, this, arguments);
                            arguments = J$.N(5785297, 'arguments', arguments, true, false, false);
                            err = J$.N(5785305, 'err', err, true, false, false);
                            func = J$.N(5785313, 'func', func, true, false, false);
                            J$.M(5785129, J$.R(5785089, 'mod_assertplus', mod_assertplus, false, true), 'ok', false)(J$.F(5785113, J$.R(5785097, 'mod_isError', mod_isError, false, true), false)(J$.R(5785105, 'err', err, false, false)), J$.T(5785121, 'err must be an Error', 21, false));
                            J$.M(5785161, J$.R(5785137, 'mod_assertplus', mod_assertplus, false, true), 'func', false)(J$.R(5785145, 'func', func, false, false), J$.T(5785153, 'func', 21, false));
                            if (J$.C(300192, J$.B(692354, 'instanceof', J$.R(5785169, 'err', err, false, false), J$.R(5785177, 'MultiError', MultiError, false, true)))) {
                                J$.M(5785257, J$.M(5785193, J$.R(5785185, 'err', err, false, false), 'errors', false)(), 'forEach', false)(J$.T(5785249, function iterError(e) {
                                    jalangiLabel12:
                                        while (true) {
                                            try {
                                                J$.Fe(5785225, arguments.callee, this, arguments);
                                                arguments = J$.N(5785233, 'arguments', arguments, true, false, false);
                                                e = J$.N(5785241, 'e', e, true, false, false);
                                                J$.F(5785217, J$.R(5785201, 'func', func, false, false), false)(J$.R(5785209, 'e', e, false, false));
                                            } catch (J$e) {
                                                J$.Ex(5787337, J$e);
                                            } finally {
                                                if (J$.Fr(5787345))
                                                    continue jalangiLabel12;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false));
                            } else {
                                J$.F(5785281, J$.R(5785265, 'func', func, false, false), false)(J$.R(5785273, 'err', err, false, false));
                            }
                        } catch (J$e) {
                            J$.Ex(5787353, J$e);
                        } finally {
                            if (J$.Fr(5787361))
                                continue jalangiLabel13;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.M(5785713, J$.R(5785689, 'mod_util', mod_util, false, true), 'inherits', false)(J$.R(5785697, 'SError', SError, false, true), J$.R(5785705, 'VError', VError, false, true));
            J$.M(5785993, J$.R(5785969, 'mod_util', mod_util, false, true), 'inherits', false)(J$.R(5785977, 'MultiError', MultiError, false, true), J$.R(5785985, 'VError', VError, false, true));
            J$.P(5786025, J$.G(5786009, J$.R(5786001, 'MultiError', MultiError, false, true), 'prototype'), 'name', J$.T(5786017, 'MultiError', 21, false));
            J$.P(5786113, J$.G(5786041, J$.R(5786033, 'MultiError', MultiError, false, true), 'prototype'), 'errors', J$.T(5786105, function me_errors() {
                jalangiLabel16:
                    while (true) {
                        try {
                            J$.Fe(5786089, arguments.callee, this, arguments);
                            arguments = J$.N(5786097, 'arguments', arguments, true, false, false);
                            return J$.Rt(5786081, J$.M(5786073, J$.G(5786057, J$.R(5786049, 'this', this, false, false), 'ase_errors'), 'slice', false)(J$.T(5786065, 0, 22, false)));
                        } catch (J$e) {
                            J$.Ex(5787401, J$e);
                        } finally {
                            if (J$.Fr(5787409))
                                continue jalangiLabel16;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.M(5786529, J$.R(5786505, 'mod_util', mod_util, false, true), 'inherits', false)(J$.R(5786513, 'WError', WError, false, true), J$.R(5786521, 'VError', VError, false, true));
            J$.P(5786561, J$.G(5786545, J$.R(5786537, 'WError', WError, false, true), 'prototype'), 'name', J$.T(5786553, 'WError', 21, false));
            J$.P(5786881, J$.G(5786577, J$.R(5786569, 'WError', WError, false, true), 'prototype'), 'toString', J$.T(5786873, function we_toString() {
                jalangiLabel18:
                    while (true) {
                        try {
                            J$.Fe(5786849, arguments.callee, this, arguments);
                            arguments = J$.N(5786857, 'arguments', arguments, true, false, false);
                            J$.N(5786865, 'str', str, false, false, false);
                            var str = J$.W(5786681, 'str', J$.C(300240, J$.C(300232, J$.C(300224, J$.M(5786601, J$.R(5786585, 'this', this, false, false), 'hasOwnProperty', false)(J$.T(5786593, 'name', 21, false))) ? J$.G(5786617, J$.R(5786609, 'this', this, false, false), 'name') : J$._()) ? J$._() : J$.G(5786641, J$.G(5786633, J$.R(5786625, 'this', this, false, false), 'constructor'), 'name')) ? J$._() : J$.G(5786673, J$.G(5786665, J$.G(5786657, J$.R(5786649, 'this', this, false, false), 'constructor'), 'prototype'), 'name'), str, false, false);
                            if (J$.C(300248, J$.G(5786697, J$.R(5786689, 'this', this, false, false), 'message')))
                                str = J$.W(5786737, 'str', J$.B(692418, '+', J$.R(5786729, 'str', str, false, false), J$.B(692410, '+', J$.T(5786705, ': ', 21, false), J$.G(5786721, J$.R(5786713, 'this', this, false, false), 'message'))), str, false, false);
                            if (J$.C(300264, J$.C(300256, J$.G(5786753, J$.R(5786745, 'this', this, false, false), 'jse_cause')) ? J$.G(5786777, J$.G(5786769, J$.R(5786761, 'this', this, false, false), 'jse_cause'), 'message') : J$._()))
                                str = J$.W(5786825, 'str', J$.B(692434, '+', J$.R(5786817, 'str', str, false, false), J$.B(692426, '+', J$.T(5786785, '; caused by ', 21, false), J$.M(5786809, J$.G(5786801, J$.R(5786793, 'this', this, false, false), 'jse_cause'), 'toString', false)())), str, false, false);
                            return J$.Rt(5786841, J$.R(5786833, 'str', str, false, false));
                        } catch (J$e) {
                            J$.Ex(5787433, J$e);
                        } finally {
                            if (J$.Fr(5787441))
                                continue jalangiLabel18;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(5787009, J$.G(5786897, J$.R(5786889, 'WError', WError, false, true), 'prototype'), 'cause', J$.T(5787001, function we_cause(c) {
                jalangiLabel19:
                    while (true) {
                        try {
                            J$.Fe(5786977, arguments.callee, this, arguments);
                            arguments = J$.N(5786985, 'arguments', arguments, true, false, false);
                            c = J$.N(5786993, 'c', c, true, false, false);
                            if (J$.C(300272, J$.F(5786921, J$.R(5786905, 'mod_isError', mod_isError, false, true), false)(J$.R(5786913, 'c', c, false, false))))
                                J$.P(5786945, J$.R(5786929, 'this', this, false, false), 'jse_cause', J$.R(5786937, 'c', c, false, false));
                            return J$.Rt(5786969, J$.G(5786961, J$.R(5786953, 'this', this, false, false), 'jse_cause'));
                        } catch (J$e) {
                            J$.Ex(5787449, J$e);
                        } finally {
                            if (J$.Fr(5787457))
                                continue jalangiLabel19;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
        } catch (J$e) {
            J$.Ex(5787465, J$e);
        } finally {
            if (J$.Sr(5787473))
                continue jalangiLabel20;
            else
                break jalangiLabel20;
        }
    }
// JALANGI DO NOT INSTRUMENT

