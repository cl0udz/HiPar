J$.noInstrEval = false;
jalangiLabel3:
    while (true) {
        try {
            J$.Se(4603673, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestCouchNode/node_modules/prebuild-install/proxy.js');
            function applyProxy(reqOpts, opts) {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(4603561, arguments.callee, this, arguments);
                            arguments = J$.N(4603569, 'arguments', arguments, true, false, false);
                            reqOpts = J$.N(4603577, 'reqOpts', reqOpts, true, false, false);
                            opts = J$.N(4603585, 'opts', opts, true, false, false);
                            J$.N(4603593, 'log', log, false, false, false);
                            J$.N(4603601, 'proxy', proxy, false, false, false);
                            J$.N(4603609, 'parsedDownloadUrl', parsedDownloadUrl, false, false, false);
                            J$.N(4603617, 'parsedProxy', parsedProxy, false, false, false);
                            J$.N(4603625, 'uriProtocol', uriProtocol, false, false, false);
                            J$.N(4603633, 'proxyProtocol', proxyProtocol, false, false, false);
                            J$.N(4603641, 'tunnelFnName', tunnelFnName, false, false, false);
                            var log = J$.W(4603025, 'log', J$.C(253752, J$.G(4603009, J$.R(4603001, 'opts', opts, false, false), 'log')) ? J$._() : J$.R(4603017, 'noop', noop, false, true), log, false, false);
                            var proxy = J$.W(4603073, 'proxy', J$.C(253760, J$.G(4603049, J$.R(4603033, 'opts', opts, false, false), J$.T(4603041, 'https-proxy', 21, false))) ? J$._() : J$.G(4603065, J$.R(4603057, 'opts', opts, false, false), 'proxy'), proxy, false, false);
                            if (J$.C(253792, J$.R(4603081, 'proxy', proxy, false, false))) {
                                var parsedDownloadUrl = J$.W(4603121, 'parsedDownloadUrl', J$.M(4603113, J$.R(4603089, 'url', url, false, true), 'parse', false)(J$.G(4603105, J$.R(4603097, 'reqOpts', reqOpts, false, false), 'url')), parsedDownloadUrl, false, false);
                                var parsedProxy = J$.W(4603153, 'parsedProxy', J$.M(4603145, J$.R(4603129, 'url', url, false, true), 'parse', false)(J$.R(4603137, 'proxy', proxy, false, false)), parsedProxy, false, false);
                                var uriProtocol = J$.W(4603201, 'uriProtocol', J$.C(253768, J$.B(557850, '===', J$.G(4603169, J$.R(4603161, 'parsedDownloadUrl', parsedDownloadUrl, false, false), 'protocol'), J$.T(4603177, 'https:', 21, false))) ? J$.T(4603185, 'https', 21, false) : J$.T(4603193, 'http', 21, false), uriProtocol, false, false);
                                var proxyProtocol = J$.W(4603249, 'proxyProtocol', J$.C(253776, J$.B(557858, '===', J$.G(4603217, J$.R(4603209, 'parsedProxy', parsedProxy, false, false), 'protocol'), J$.T(4603225, 'https:', 21, false))) ? J$.T(4603233, 'Https', 21, false) : J$.T(4603241, 'Http', 21, false), proxyProtocol, false, false);
                                var tunnelFnName = J$.W(4603297, 'tunnelFnName', J$.M(4603289, J$.T(4603273, [
                                    J$.R(4603257, 'uriProtocol', uriProtocol, false, false),
                                    J$.R(4603265, 'proxyProtocol', proxyProtocol, false, false)
                                ], 10, false), 'join', false)(J$.T(4603281, 'Over', 21, false)), tunnelFnName, false, false);
                                J$.P(4603401, J$.R(4603305, 'reqOpts', reqOpts, false, false), 'agent', J$.M(4603393, J$.R(4603313, 'tunnel', tunnel, false, true), J$.R(4603321, 'tunnelFnName', tunnelFnName, false, false), false)(J$.T(4603385, {
                                    proxy: J$.T(4603377, {
                                        host: J$.G(4603337, J$.R(4603329, 'parsedProxy', parsedProxy, false, false), 'hostname'),
                                        port: J$.U(557866, '+', J$.G(4603353, J$.R(4603345, 'parsedProxy', parsedProxy, false, false), 'port')),
                                        proxyAuth: J$.G(4603369, J$.R(4603361, 'parsedProxy', parsedProxy, false, false), 'auth')
                                    }, 11, false)
                                }, 11, false)));
                                J$.M(4603537, J$.R(4603409, 'log', log, false, false), 'http', false)(J$.T(4603417, 'request', 21, false), J$.B(557930, '+', J$.B(557922, '+', J$.B(557914, '+', J$.B(557906, '+', J$.B(557898, '+', J$.B(557890, '+', J$.B(557882, '+', J$.B(557874, '+', J$.T(4603425, 'Proxy setup detected (Host: ', 21, false), J$.G(4603441, J$.R(4603433, 'parsedProxy', parsedProxy, false, false), 'hostname')), J$.T(4603449, ', Port: ', 21, false)), J$.G(4603465, J$.R(4603457, 'parsedProxy', parsedProxy, false, false), 'port')), J$.T(4603473, ', Authentication: ', 21, false)), J$.C(253784, J$.G(4603489, J$.R(4603481, 'parsedProxy', parsedProxy, false, false), 'auth')) ? J$.T(4603497, 'Yes', 21, false) : J$.T(4603505, 'No', 21, false)), J$.T(4603513, ')', 21, false)), J$.T(4603521, ' Tunneling with ', 21, false)), J$.R(4603529, 'tunnelFnName', tunnelFnName, false, false)));
                            }
                            return J$.Rt(4603553, J$.R(4603545, 'reqOpts', reqOpts, false, false));
                        } catch (J$e) {
                            J$.Ex(4603753, J$e);
                        } finally {
                            if (J$.Fr(4603761))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(4603681, 'url', url, false, false, false);
            J$.N(4603689, 'tunnel', tunnel, false, false, false);
            J$.N(4603697, 'noop', noop, false, false, false);
            applyProxy = J$.N(4603713, 'applyProxy', J$.T(4603705, applyProxy, 12, false), true, false, false);
            var url = J$.W(4602857, 'url', J$.F(4602849, J$.I(typeof require === 'undefined' ? require = J$.R(4602833, 'require', undefined, true, true) : require = J$.R(4602833, 'require', require, true, true)), false)(J$.T(4602841, 'url', 21, false)), url, false, true);
            var tunnel = J$.W(4602889, 'tunnel', J$.F(4602881, J$.I(typeof require === 'undefined' ? require = J$.R(4602865, 'require', undefined, true, true) : require = J$.R(4602865, 'require', require, true, true)), false)(J$.T(4602873, 'tunnel-agent', 21, false)), tunnel, false, true);
            var noop = J$.W(4602993, 'noop', J$.M(4602985, J$.I(typeof Object === 'undefined' ? Object = J$.R(4602897, 'Object', undefined, true, true) : Object = J$.R(4602897, 'Object', Object, true, true)), 'assign', false)(J$.T(4602953, {
                http: J$.T(4602921, function () {
                    jalangiLabel0:
                        while (true) {
                            try {
                                J$.Fe(4602905, arguments.callee, this, arguments);
                                arguments = J$.N(4602913, 'arguments', arguments, true, false, false);
                            } catch (J$e) {
                                J$.Ex(4603721, J$e);
                            } finally {
                                if (J$.Fr(4603729))
                                    continue jalangiLabel0;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false),
                silly: J$.T(4602945, function () {
                    jalangiLabel1:
                        while (true) {
                            try {
                                J$.Fe(4602929, arguments.callee, this, arguments);
                                arguments = J$.N(4602937, 'arguments', arguments, true, false, false);
                            } catch (J$e) {
                                J$.Ex(4603737, J$e);
                            } finally {
                                if (J$.Fr(4603745))
                                    continue jalangiLabel1;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false)
            }, 11, false), J$.F(4602977, J$.I(typeof require === 'undefined' ? require = J$.R(4602961, 'require', undefined, true, true) : require = J$.R(4602961, 'require', require, true, true)), false)(J$.T(4602969, 'noop-logger', 21, false))), noop, false, true);
            J$.P(4603665, J$.I(typeof module === 'undefined' ? module = J$.R(4603649, 'module', undefined, true, true) : module = J$.R(4603649, 'module', module, true, true)), 'exports', J$.R(4603657, 'applyProxy', applyProxy, false, true));
        } catch (J$e) {
            J$.Ex(4603769, J$e);
        } finally {
            if (J$.Sr(4603777))
                continue jalangiLabel3;
            else
                break jalangiLabel3;
        }
    }
// JALANGI DO NOT INSTRUMENT

