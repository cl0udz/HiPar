J$.noInstrEval = false;
jalangiLabel2:
    while (true) {
        try {
            J$.Se(4496817, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestCouchNode/node_modules/minimist/test/all_bool.js');
            J$.N(4496825, 'parse', parse, false, false, false);
            J$.N(4496833, 'test', test, false, false, false);
            var parse = J$.W(4496225, 'parse', J$.F(4496217, J$.I(typeof require === 'undefined' ? require = J$.R(4496201, 'require', undefined, true, true) : require = J$.R(4496201, 'require', require, true, true)), false)(J$.T(4496209, '../', 21, false)), parse, false, true);
            var test = J$.W(4496257, 'test', J$.F(4496249, J$.I(typeof require === 'undefined' ? require = J$.R(4496233, 'require', undefined, true, true) : require = J$.R(4496233, 'require', require, true, true)), false)(J$.T(4496241, 'tape', 21, false)), test, false, true);
            J$.F(4496513, J$.R(4496265, 'test', test, false, true), false)(J$.T(4496273, 'flag boolean true (default all --args to boolean)', 21, false), J$.T(4496505, function (t) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(4496473, arguments.callee, this, arguments);
                            arguments = J$.N(4496481, 'arguments', arguments, true, false, false);
                            t = J$.N(4496489, 't', t, true, false, false);
                            J$.N(4496497, 'argv', argv, false, false, false);
                            var argv = J$.W(4496345, 'argv', J$.F(4496337, J$.R(4496281, 'parse', parse, false, true), false)(J$.T(4496313, [
                                J$.T(4496289, 'moo', 21, false),
                                J$.T(4496297, '--honk', 21, false),
                                J$.T(4496305, 'cow', 21, false)
                            ], 10, false), J$.T(4496329, { boolean: J$.T(4496321, true, 23, false) }, 11, false)), argv, false, false);
                            J$.M(4496409, J$.R(4496353, 't', t, false, false), 'deepEqual', false)(J$.R(4496361, 'argv', argv, false, false), J$.T(4496401, {
                                honk: J$.T(4496369, true, 23, false),
                                _: J$.T(4496393, [
                                    J$.T(4496377, 'moo', 21, false),
                                    J$.T(4496385, 'cow', 21, false)
                                ], 10, false)
                            }, 11, false));
                            J$.M(4496449, J$.R(4496417, 't', t, false, false), 'deepEqual', false)(J$.U(553562, 'typeof', J$.G(4496433, J$.R(4496425, 'argv', argv, false, false), 'honk')), J$.T(4496441, 'boolean', 21, false));
                            J$.M(4496465, J$.R(4496457, 't', t, false, false), 'end', false)();
                        } catch (J$e) {
                            J$.Ex(4496841, J$e);
                        } finally {
                            if (J$.Fr(4496849))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.F(4496809, J$.R(4496521, 'test', test, false, true), false)(J$.T(4496529, 'flag boolean true only affects double hyphen arguments without equals signs', 21, false), J$.T(4496801, function (t) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(4496769, arguments.callee, this, arguments);
                            arguments = J$.N(4496777, 'arguments', arguments, true, false, false);
                            t = J$.N(4496785, 't', t, true, false, false);
                            J$.N(4496793, 'argv', argv, false, false, false);
                            var argv = J$.W(4496625, 'argv', J$.F(4496617, J$.R(4496537, 'parse', parse, false, true), false)(J$.T(4496593, [
                                J$.T(4496545, 'moo', 21, false),
                                J$.T(4496553, '--honk', 21, false),
                                J$.T(4496561, 'cow', 21, false),
                                J$.T(4496569, '-p', 21, false),
                                J$.T(4496577, '55', 21, false),
                                J$.T(4496585, '--tacos=good', 21, false)
                            ], 10, false), J$.T(4496609, { boolean: J$.T(4496601, true, 23, false) }, 11, false)), argv, false, false);
                            J$.M(4496705, J$.R(4496633, 't', t, false, false), 'deepEqual', false)(J$.R(4496641, 'argv', argv, false, false), J$.T(4496697, {
                                honk: J$.T(4496649, true, 23, false),
                                tacos: J$.T(4496657, 'good', 21, false),
                                p: J$.T(4496665, 55, 22, false),
                                _: J$.T(4496689, [
                                    J$.T(4496673, 'moo', 21, false),
                                    J$.T(4496681, 'cow', 21, false)
                                ], 10, false)
                            }, 11, false));
                            J$.M(4496745, J$.R(4496713, 't', t, false, false), 'deepEqual', false)(J$.U(553570, 'typeof', J$.G(4496729, J$.R(4496721, 'argv', argv, false, false), 'honk')), J$.T(4496737, 'boolean', 21, false));
                            J$.M(4496761, J$.R(4496753, 't', t, false, false), 'end', false)();
                        } catch (J$e) {
                            J$.Ex(4496857, J$e);
                        } finally {
                            if (J$.Fr(4496865))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
        } catch (J$e) {
            J$.Ex(4496873, J$e);
        } finally {
            if (J$.Sr(4496881))
                continue jalangiLabel2;
            else
                break jalangiLabel2;
        }
    }
// JALANGI DO NOT INSTRUMENT

