J$.noInstrEval = false;
jalangiLabel9:
    while (true) {
        try {
            J$.Se(4500289, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestCouchNode/node_modules/minimist/test/bool.js');
            J$.N(4500297, 'parse', parse, false, false, false);
            J$.N(4500305, 'test', test, false, false, false);
            var parse = J$.W(4496913, 'parse', J$.F(4496905, J$.I(typeof require === 'undefined' ? require = J$.R(4496889, 'require', undefined, true, true) : require = J$.R(4496889, 'require', require, true, true)), false)(J$.T(4496897, '../', 21, false)), parse, false, true);
            var test = J$.W(4496945, 'test', J$.F(4496937, J$.I(typeof require === 'undefined' ? require = J$.R(4496921, 'require', undefined, true, true) : require = J$.R(4496921, 'require', require, true, true)), false)(J$.T(4496929, 'tape', 21, false)), test, false, true);
            J$.F(4497265, J$.R(4496953, 'test', test, false, true), false)(J$.T(4496961, 'flag boolean default false', 21, false), J$.T(4497257, function (t) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(4497225, arguments.callee, this, arguments);
                            arguments = J$.N(4497233, 'arguments', arguments, true, false, false);
                            t = J$.N(4497241, 't', t, true, false, false);
                            J$.N(4497249, 'argv', argv, false, false, false);
                            var argv = J$.W(4497057, 'argv', J$.F(4497049, J$.R(4496969, 'parse', parse, false, true), false)(J$.T(4496985, [J$.T(4496977, 'moo', 21, false)], 10, false), J$.T(4497041, {
                                boolean: J$.T(4497009, [
                                    J$.T(4496993, 't', 21, false),
                                    J$.T(4497001, 'verbose', 21, false)
                                ], 10, false),
                                default: J$.T(4497033, {
                                    verbose: J$.T(4497017, false, 23, false),
                                    t: J$.T(4497025, false, 23, false)
                                }, 11, false)
                            }, 11, false)), argv, false, false);
                            J$.M(4497121, J$.R(4497065, 't', t, false, false), 'deepEqual', false)(J$.R(4497073, 'argv', argv, false, false), J$.T(4497113, {
                                verbose: J$.T(4497081, false, 23, false),
                                t: J$.T(4497089, false, 23, false),
                                _: J$.T(4497105, [J$.T(4497097, 'moo', 21, false)], 10, false)
                            }, 11, false));
                            J$.M(4497161, J$.R(4497129, 't', t, false, false), 'deepEqual', false)(J$.U(553578, 'typeof', J$.G(4497145, J$.R(4497137, 'argv', argv, false, false), 'verbose')), J$.T(4497153, 'boolean', 21, false));
                            J$.M(4497201, J$.R(4497169, 't', t, false, false), 'deepEqual', false)(J$.U(553586, 'typeof', J$.G(4497185, J$.R(4497177, 'argv', argv, false, false), 't')), J$.T(4497193, 'boolean', 21, false));
                            J$.M(4497217, J$.R(4497209, 't', t, false, false), 'end', false)();
                        } catch (J$e) {
                            J$.Ex(4500313, J$e);
                        } finally {
                            if (J$.Fr(4500321))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.F(4497665, J$.R(4497273, 'test', test, false, true), false)(J$.T(4497281, 'boolean groups', 21, false), J$.T(4497657, function (t) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(4497625, arguments.callee, this, arguments);
                            arguments = J$.N(4497633, 'arguments', arguments, true, false, false);
                            t = J$.N(4497641, 't', t, true, false, false);
                            J$.N(4497649, 'argv', argv, false, false, false);
                            var argv = J$.W(4497393, 'argv', J$.F(4497385, J$.R(4497289, 'parse', parse, false, true), false)(J$.T(4497337, [
                                J$.T(4497297, '-x', 21, false),
                                J$.T(4497305, '-z', 21, false),
                                J$.T(4497313, 'one', 21, false),
                                J$.T(4497321, 'two', 21, false),
                                J$.T(4497329, 'three', 21, false)
                            ], 10, false), J$.T(4497377, {
                                boolean: J$.T(4497369, [
                                    J$.T(4497345, 'x', 21, false),
                                    J$.T(4497353, 'y', 21, false),
                                    J$.T(4497361, 'z', 21, false)
                                ], 10, false)
                            }, 11, false)), argv, false, false);
                            J$.M(4497481, J$.R(4497401, 't', t, false, false), 'deepEqual', false)(J$.R(4497409, 'argv', argv, false, false), J$.T(4497473, {
                                x: J$.T(4497417, true, 23, false),
                                y: J$.T(4497425, false, 23, false),
                                z: J$.T(4497433, true, 23, false),
                                _: J$.T(4497465, [
                                    J$.T(4497441, 'one', 21, false),
                                    J$.T(4497449, 'two', 21, false),
                                    J$.T(4497457, 'three', 21, false)
                                ], 10, false)
                            }, 11, false));
                            J$.M(4497521, J$.R(4497489, 't', t, false, false), 'deepEqual', false)(J$.U(553594, 'typeof', J$.G(4497505, J$.R(4497497, 'argv', argv, false, false), 'x')), J$.T(4497513, 'boolean', 21, false));
                            J$.M(4497561, J$.R(4497529, 't', t, false, false), 'deepEqual', false)(J$.U(553602, 'typeof', J$.G(4497545, J$.R(4497537, 'argv', argv, false, false), 'y')), J$.T(4497553, 'boolean', 21, false));
                            J$.M(4497601, J$.R(4497569, 't', t, false, false), 'deepEqual', false)(J$.U(553610, 'typeof', J$.G(4497585, J$.R(4497577, 'argv', argv, false, false), 'z')), J$.T(4497593, 'boolean', 21, false));
                            J$.M(4497617, J$.R(4497609, 't', t, false, false), 'end', false)();
                        } catch (J$e) {
                            J$.Ex(4500329, J$e);
                        } finally {
                            if (J$.Fr(4500337))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.F(4498129, J$.R(4497673, 'test', test, false, true), false)(J$.T(4497681, 'boolean and alias with chainable api', 21, false), J$.T(4498121, function (t) {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(4498049, arguments.callee, this, arguments);
                            arguments = J$.N(4498057, 'arguments', arguments, true, false, false);
                            t = J$.N(4498065, 't', t, true, false, false);
                            J$.N(4498073, 'aliased', aliased, false, false, false);
                            J$.N(4498081, 'regular', regular, false, false, false);
                            J$.N(4498089, 'opts', opts, false, false, false);
                            J$.N(4498097, 'aliasedArgv', aliasedArgv, false, false, false);
                            J$.N(4498105, 'propertyArgv', propertyArgv, false, false, false);
                            J$.N(4498113, 'expected', expected, false, false, false);
                            var aliased = J$.W(4497713, 'aliased', J$.T(4497705, [
                                J$.T(4497689, '-h', 21, false),
                                J$.T(4497697, 'derp', 21, false)
                            ], 10, false), aliased, false, false);
                            var regular = J$.W(4497745, 'regular', J$.T(4497737, [
                                J$.T(4497721, '--herp', 21, false),
                                J$.T(4497729, 'derp', 21, false)
                            ], 10, false), regular, false, false);
                            var opts = J$.W(4497785, 'opts', J$.T(4497777, {
                                herp: J$.T(4497769, {
                                    alias: J$.T(4497753, 'h', 21, false),
                                    boolean: J$.T(4497761, true, 23, false)
                                }, 11, false)
                            }, 11, false), opts, false, false);
                            var aliasedArgv = J$.W(4497849, 'aliasedArgv', J$.F(4497841, J$.R(4497793, 'parse', parse, false, true), false)(J$.R(4497801, 'aliased', aliased, false, false), J$.T(4497833, {
                                boolean: J$.T(4497809, 'herp', 21, false),
                                alias: J$.T(4497825, { h: J$.T(4497817, 'herp', 21, false) }, 11, false)
                            }, 11, false)), aliasedArgv, false, false);
                            var propertyArgv = J$.W(4497913, 'propertyArgv', J$.F(4497905, J$.R(4497857, 'parse', parse, false, true), false)(J$.R(4497865, 'regular', regular, false, false), J$.T(4497897, {
                                boolean: J$.T(4497873, 'herp', 21, false),
                                alias: J$.T(4497889, { h: J$.T(4497881, 'herp', 21, false) }, 11, false)
                            }, 11, false)), propertyArgv, false, false);
                            var expected = J$.W(4497961, 'expected', J$.T(4497953, {
                                herp: J$.T(4497921, true, 23, false),
                                h: J$.T(4497929, true, 23, false),
                                '_': J$.T(4497945, [J$.T(4497937, 'derp', 21, false)], 10, false)
                            }, 11, false), expected, false, false);
                            J$.M(4497993, J$.R(4497969, 't', t, false, false), 'same', false)(J$.R(4497977, 'aliasedArgv', aliasedArgv, false, false), J$.R(4497985, 'expected', expected, false, false));
                            J$.M(4498025, J$.R(4498001, 't', t, false, false), 'same', false)(J$.R(4498009, 'propertyArgv', propertyArgv, false, false), J$.R(4498017, 'expected', expected, false, false));
                            J$.M(4498041, J$.R(4498033, 't', t, false, false), 'end', false)();
                        } catch (J$e) {
                            J$.Ex(4500345, J$e);
                        } finally {
                            if (J$.Fr(4500353))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.F(4498545, J$.R(4498137, 'test', test, false, true), false)(J$.T(4498145, 'boolean and alias with options hash', 21, false), J$.T(4498537, function (t) {
                jalangiLabel3:
                    while (true) {
                        try {
                            J$.Fe(4498465, arguments.callee, this, arguments);
                            arguments = J$.N(4498473, 'arguments', arguments, true, false, false);
                            t = J$.N(4498481, 't', t, true, false, false);
                            J$.N(4498489, 'aliased', aliased, false, false, false);
                            J$.N(4498497, 'regular', regular, false, false, false);
                            J$.N(4498505, 'opts', opts, false, false, false);
                            J$.N(4498513, 'aliasedArgv', aliasedArgv, false, false, false);
                            J$.N(4498521, 'propertyArgv', propertyArgv, false, false, false);
                            J$.N(4498529, 'expected', expected, false, false, false);
                            var aliased = J$.W(4498177, 'aliased', J$.T(4498169, [
                                J$.T(4498153, '-h', 21, false),
                                J$.T(4498161, 'derp', 21, false)
                            ], 10, false), aliased, false, false);
                            var regular = J$.W(4498209, 'regular', J$.T(4498201, [
                                J$.T(4498185, '--herp', 21, false),
                                J$.T(4498193, 'derp', 21, false)
                            ], 10, false), regular, false, false);
                            var opts = J$.W(4498249, 'opts', J$.T(4498241, {
                                alias: J$.T(4498225, { 'h': J$.T(4498217, 'herp', 21, false) }, 11, false),
                                boolean: J$.T(4498233, 'herp', 21, false)
                            }, 11, false), opts, false, false);
                            var aliasedArgv = J$.W(4498289, 'aliasedArgv', J$.F(4498281, J$.R(4498257, 'parse', parse, false, true), false)(J$.R(4498265, 'aliased', aliased, false, false), J$.R(4498273, 'opts', opts, false, false)), aliasedArgv, false, false);
                            var propertyArgv = J$.W(4498329, 'propertyArgv', J$.F(4498321, J$.R(4498297, 'parse', parse, false, true), false)(J$.R(4498305, 'regular', regular, false, false), J$.R(4498313, 'opts', opts, false, false)), propertyArgv, false, false);
                            var expected = J$.W(4498377, 'expected', J$.T(4498369, {
                                herp: J$.T(4498337, true, 23, false),
                                h: J$.T(4498345, true, 23, false),
                                '_': J$.T(4498361, [J$.T(4498353, 'derp', 21, false)], 10, false)
                            }, 11, false), expected, false, false);
                            J$.M(4498409, J$.R(4498385, 't', t, false, false), 'same', false)(J$.R(4498393, 'aliasedArgv', aliasedArgv, false, false), J$.R(4498401, 'expected', expected, false, false));
                            J$.M(4498441, J$.R(4498417, 't', t, false, false), 'same', false)(J$.R(4498425, 'propertyArgv', propertyArgv, false, false), J$.R(4498433, 'expected', expected, false, false));
                            J$.M(4498457, J$.R(4498449, 't', t, false, false), 'end', false)();
                        } catch (J$e) {
                            J$.Ex(4500361, J$e);
                        } finally {
                            if (J$.Fr(4500369))
                                continue jalangiLabel3;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.F(4499105, J$.R(4498553, 'test', test, false, true), false)(J$.T(4498561, 'boolean and alias array with options hash', 21, false), J$.T(4499097, function (t) {
                jalangiLabel4:
                    while (true) {
                        try {
                            J$.Fe(4499009, arguments.callee, this, arguments);
                            arguments = J$.N(4499017, 'arguments', arguments, true, false, false);
                            t = J$.N(4499025, 't', t, true, false, false);
                            J$.N(4499033, 'aliased', aliased, false, false, false);
                            J$.N(4499041, 'regular', regular, false, false, false);
                            J$.N(4499049, 'alt', alt, false, false, false);
                            J$.N(4499057, 'opts', opts, false, false, false);
                            J$.N(4499065, 'aliasedArgv', aliasedArgv, false, false, false);
                            J$.N(4499073, 'propertyArgv', propertyArgv, false, false, false);
                            J$.N(4499081, 'altPropertyArgv', altPropertyArgv, false, false, false);
                            J$.N(4499089, 'expected', expected, false, false, false);
                            var aliased = J$.W(4498593, 'aliased', J$.T(4498585, [
                                J$.T(4498569, '-h', 21, false),
                                J$.T(4498577, 'derp', 21, false)
                            ], 10, false), aliased, false, false);
                            var regular = J$.W(4498625, 'regular', J$.T(4498617, [
                                J$.T(4498601, '--herp', 21, false),
                                J$.T(4498609, 'derp', 21, false)
                            ], 10, false), regular, false, false);
                            var alt = J$.W(4498657, 'alt', J$.T(4498649, [
                                J$.T(4498633, '--harp', 21, false),
                                J$.T(4498641, 'derp', 21, false)
                            ], 10, false), alt, false, false);
                            var opts = J$.W(4498713, 'opts', J$.T(4498705, {
                                alias: J$.T(4498689, {
                                    'h': J$.T(4498681, [
                                        J$.T(4498665, 'herp', 21, false),
                                        J$.T(4498673, 'harp', 21, false)
                                    ], 10, false)
                                }, 11, false),
                                boolean: J$.T(4498697, 'h', 21, false)
                            }, 11, false), opts, false, false);
                            var aliasedArgv = J$.W(4498753, 'aliasedArgv', J$.F(4498745, J$.R(4498721, 'parse', parse, false, true), false)(J$.R(4498729, 'aliased', aliased, false, false), J$.R(4498737, 'opts', opts, false, false)), aliasedArgv, false, false);
                            var propertyArgv = J$.W(4498793, 'propertyArgv', J$.F(4498785, J$.R(4498761, 'parse', parse, false, true), false)(J$.R(4498769, 'regular', regular, false, false), J$.R(4498777, 'opts', opts, false, false)), propertyArgv, false, false);
                            var altPropertyArgv = J$.W(4498833, 'altPropertyArgv', J$.F(4498825, J$.R(4498801, 'parse', parse, false, true), false)(J$.R(4498809, 'alt', alt, false, false), J$.R(4498817, 'opts', opts, false, false)), altPropertyArgv, false, false);
                            var expected = J$.W(4498889, 'expected', J$.T(4498881, {
                                harp: J$.T(4498841, true, 23, false),
                                herp: J$.T(4498849, true, 23, false),
                                h: J$.T(4498857, true, 23, false),
                                '_': J$.T(4498873, [J$.T(4498865, 'derp', 21, false)], 10, false)
                            }, 11, false), expected, false, false);
                            J$.M(4498921, J$.R(4498897, 't', t, false, false), 'same', false)(J$.R(4498905, 'aliasedArgv', aliasedArgv, false, false), J$.R(4498913, 'expected', expected, false, false));
                            J$.M(4498953, J$.R(4498929, 't', t, false, false), 'same', false)(J$.R(4498937, 'propertyArgv', propertyArgv, false, false), J$.R(4498945, 'expected', expected, false, false));
                            J$.M(4498985, J$.R(4498961, 't', t, false, false), 'same', false)(J$.R(4498969, 'altPropertyArgv', altPropertyArgv, false, false), J$.R(4498977, 'expected', expected, false, false));
                            J$.M(4499001, J$.R(4498993, 't', t, false, false), 'end', false)();
                        } catch (J$e) {
                            J$.Ex(4500377, J$e);
                        } finally {
                            if (J$.Fr(4500385))
                                continue jalangiLabel4;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.F(4499513, J$.R(4499113, 'test', test, false, true), false)(J$.T(4499121, 'boolean and alias using explicit true', 21, false), J$.T(4499505, function (t) {
                jalangiLabel5:
                    while (true) {
                        try {
                            J$.Fe(4499433, arguments.callee, this, arguments);
                            arguments = J$.N(4499441, 'arguments', arguments, true, false, false);
                            t = J$.N(4499449, 't', t, true, false, false);
                            J$.N(4499457, 'aliased', aliased, false, false, false);
                            J$.N(4499465, 'regular', regular, false, false, false);
                            J$.N(4499473, 'opts', opts, false, false, false);
                            J$.N(4499481, 'aliasedArgv', aliasedArgv, false, false, false);
                            J$.N(4499489, 'propertyArgv', propertyArgv, false, false, false);
                            J$.N(4499497, 'expected', expected, false, false, false);
                            var aliased = J$.W(4499153, 'aliased', J$.T(4499145, [
                                J$.T(4499129, '-h', 21, false),
                                J$.T(4499137, 'true', 21, false)
                            ], 10, false), aliased, false, false);
                            var regular = J$.W(4499185, 'regular', J$.T(4499177, [
                                J$.T(4499161, '--herp', 21, false),
                                J$.T(4499169, 'true', 21, false)
                            ], 10, false), regular, false, false);
                            var opts = J$.W(4499225, 'opts', J$.T(4499217, {
                                alias: J$.T(4499201, { h: J$.T(4499193, 'herp', 21, false) }, 11, false),
                                boolean: J$.T(4499209, 'h', 21, false)
                            }, 11, false), opts, false, false);
                            var aliasedArgv = J$.W(4499265, 'aliasedArgv', J$.F(4499257, J$.R(4499233, 'parse', parse, false, true), false)(J$.R(4499241, 'aliased', aliased, false, false), J$.R(4499249, 'opts', opts, false, false)), aliasedArgv, false, false);
                            var propertyArgv = J$.W(4499305, 'propertyArgv', J$.F(4499297, J$.R(4499273, 'parse', parse, false, true), false)(J$.R(4499281, 'regular', regular, false, false), J$.R(4499289, 'opts', opts, false, false)), propertyArgv, false, false);
                            var expected = J$.W(4499345, 'expected', J$.T(4499337, {
                                herp: J$.T(4499313, true, 23, false),
                                h: J$.T(4499321, true, 23, false),
                                '_': J$.T(4499329, [], 10, false)
                            }, 11, false), expected, false, false);
                            J$.M(4499377, J$.R(4499353, 't', t, false, false), 'same', false)(J$.R(4499361, 'aliasedArgv', aliasedArgv, false, false), J$.R(4499369, 'expected', expected, false, false));
                            J$.M(4499409, J$.R(4499385, 't', t, false, false), 'same', false)(J$.R(4499393, 'propertyArgv', propertyArgv, false, false), J$.R(4499401, 'expected', expected, false, false));
                            J$.M(4499425, J$.R(4499417, 't', t, false, false), 'end', false)();
                        } catch (J$e) {
                            J$.Ex(4500393, J$e);
                        } finally {
                            if (J$.Fr(4500401))
                                continue jalangiLabel5;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.F(4499881, J$.R(4499521, 'test', test, false, true), false)(J$.T(4499529, 'boolean and --x=true', 21, false), J$.T(4499873, function (t) {
                jalangiLabel6:
                    while (true) {
                        try {
                            J$.Fe(4499841, arguments.callee, this, arguments);
                            arguments = J$.N(4499849, 'arguments', arguments, true, false, false);
                            t = J$.N(4499857, 't', t, true, false, false);
                            J$.N(4499865, 'parsed', parsed, false, false, false);
                            var parsed = J$.W(4499593, 'parsed', J$.F(4499585, J$.R(4499537, 'parse', parse, false, true), false)(J$.T(4499561, [
                                J$.T(4499545, '--boool', 21, false),
                                J$.T(4499553, '--other=true', 21, false)
                            ], 10, false), J$.T(4499577, { boolean: J$.T(4499569, 'boool', 21, false) }, 11, false)), parsed, false, false);
                            J$.M(4499633, J$.R(4499601, 't', t, false, false), 'same', false)(J$.G(4499617, J$.R(4499609, 'parsed', parsed, false, false), 'boool'), J$.T(4499625, true, 23, false));
                            J$.M(4499673, J$.R(4499641, 't', t, false, false), 'same', false)(J$.G(4499657, J$.R(4499649, 'parsed', parsed, false, false), 'other'), J$.T(4499665, 'true', 21, false));
                            parsed = J$.W(4499737, 'parsed', J$.F(4499729, J$.R(4499681, 'parse', parse, false, true), false)(J$.T(4499705, [
                                J$.T(4499689, '--boool', 21, false),
                                J$.T(4499697, '--other=false', 21, false)
                            ], 10, false), J$.T(4499721, { boolean: J$.T(4499713, 'boool', 21, false) }, 11, false)), parsed, false, false);
                            J$.M(4499777, J$.R(4499745, 't', t, false, false), 'same', false)(J$.G(4499761, J$.R(4499753, 'parsed', parsed, false, false), 'boool'), J$.T(4499769, true, 23, false));
                            J$.M(4499817, J$.R(4499785, 't', t, false, false), 'same', false)(J$.G(4499801, J$.R(4499793, 'parsed', parsed, false, false), 'other'), J$.T(4499809, 'false', 21, false));
                            J$.M(4499833, J$.R(4499825, 't', t, false, false), 'end', false)();
                        } catch (J$e) {
                            J$.Ex(4500409, J$e);
                        } finally {
                            if (J$.Fr(4500417))
                                continue jalangiLabel6;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.F(4500081, J$.R(4499889, 'test', test, false, true), false)(J$.T(4499897, 'boolean --boool=true', 21, false), J$.T(4500073, function (t) {
                jalangiLabel7:
                    while (true) {
                        try {
                            J$.Fe(4500041, arguments.callee, this, arguments);
                            arguments = J$.N(4500049, 'arguments', arguments, true, false, false);
                            t = J$.N(4500057, 't', t, true, false, false);
                            J$.N(4500065, 'parsed', parsed, false, false, false);
                            var parsed = J$.W(4499977, 'parsed', J$.F(4499969, J$.R(4499905, 'parse', parse, false, true), false)(J$.T(4499921, [J$.T(4499913, '--boool=true', 21, false)], 10, false), J$.T(4499961, {
                                default: J$.T(4499937, { boool: J$.T(4499929, false, 23, false) }, 11, false),
                                boolean: J$.T(4499953, [J$.T(4499945, 'boool', 21, false)], 10, false)
                            }, 11, false)), parsed, false, false);
                            J$.M(4500017, J$.R(4499985, 't', t, false, false), 'same', false)(J$.G(4500001, J$.R(4499993, 'parsed', parsed, false, false), 'boool'), J$.T(4500009, true, 23, false));
                            J$.M(4500033, J$.R(4500025, 't', t, false, false), 'end', false)();
                        } catch (J$e) {
                            J$.Ex(4500425, J$e);
                        } finally {
                            if (J$.Fr(4500433))
                                continue jalangiLabel7;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.F(4500281, J$.R(4500089, 'test', test, false, true), false)(J$.T(4500097, 'boolean --boool=false', 21, false), J$.T(4500273, function (t) {
                jalangiLabel8:
                    while (true) {
                        try {
                            J$.Fe(4500241, arguments.callee, this, arguments);
                            arguments = J$.N(4500249, 'arguments', arguments, true, false, false);
                            t = J$.N(4500257, 't', t, true, false, false);
                            J$.N(4500265, 'parsed', parsed, false, false, false);
                            var parsed = J$.W(4500177, 'parsed', J$.F(4500169, J$.R(4500105, 'parse', parse, false, true), false)(J$.T(4500121, [J$.T(4500113, '--boool=false', 21, false)], 10, false), J$.T(4500161, {
                                default: J$.T(4500137, { boool: J$.T(4500129, true, 23, false) }, 11, false),
                                boolean: J$.T(4500153, [J$.T(4500145, 'boool', 21, false)], 10, false)
                            }, 11, false)), parsed, false, false);
                            J$.M(4500217, J$.R(4500185, 't', t, false, false), 'same', false)(J$.G(4500201, J$.R(4500193, 'parsed', parsed, false, false), 'boool'), J$.T(4500209, false, 23, false));
                            J$.M(4500233, J$.R(4500225, 't', t, false, false), 'end', false)();
                        } catch (J$e) {
                            J$.Ex(4500441, J$e);
                        } finally {
                            if (J$.Fr(4500449))
                                continue jalangiLabel8;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
        } catch (J$e) {
            J$.Ex(4500457, J$e);
        } finally {
            if (J$.Sr(4500465))
                continue jalangiLabel9;
            else
                break jalangiLabel9;
        }
    }
// JALANGI DO NOT INSTRUMENT

