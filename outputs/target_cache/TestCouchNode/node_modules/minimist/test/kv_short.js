J$.noInstrEval = false;
jalangiLabel2:
    while (true) {
        try {
            J$.Se(4503817, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestCouchNode/node_modules/minimist/test/kv_short.js');
            J$.N(4503825, 'parse', parse, false, false, false);
            J$.N(4503833, 'test', test, false, false, false);
            var parse = J$.W(4503409, 'parse', J$.F(4503401, J$.I(typeof require === 'undefined' ? require = J$.R(4503385, 'require', undefined, true, true) : require = J$.R(4503385, 'require', require, true, true)), false)(J$.T(4503393, '../', 21, false)), parse, false, true);
            var test = J$.W(4503441, 'test', J$.F(4503433, J$.I(typeof require === 'undefined' ? require = J$.R(4503417, 'require', undefined, true, true) : require = J$.R(4503417, 'require', require, true, true)), false)(J$.T(4503425, 'tape', 21, false)), test, false, true);
            J$.F(4503617, J$.R(4503449, 'test', test, false, true), false)(J$.T(4503457, 'short -k=v', 21, false), J$.T(4503609, function (t) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(4503577, arguments.callee, this, arguments);
                            arguments = J$.N(4503585, 'arguments', arguments, true, false, false);
                            t = J$.N(4503593, 't', t, true, false, false);
                            J$.N(4503601, 'argv', argv, false, false, false);
                            J$.M(4503481, J$.R(4503465, 't', t, false, false), 'plan', false)(J$.T(4503473, 1, 22, false));
                            var argv = J$.W(4503521, 'argv', J$.F(4503513, J$.R(4503489, 'parse', parse, false, true), false)(J$.T(4503505, [J$.T(4503497, '-b=123', 21, false)], 10, false)), argv, false, false);
                            J$.M(4503569, J$.R(4503529, 't', t, false, false), 'deepEqual', false)(J$.R(4503537, 'argv', argv, false, false), J$.T(4503561, {
                                b: J$.T(4503545, 123, 22, false),
                                _: J$.T(4503553, [], 10, false)
                            }, 11, false));
                        } catch (J$e) {
                            J$.Ex(4503841, J$e);
                        } finally {
                            if (J$.Fr(4503849))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.F(4503809, J$.R(4503625, 'test', test, false, true), false)(J$.T(4503633, 'multi short -k=v', 21, false), J$.T(4503801, function (t) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(4503769, arguments.callee, this, arguments);
                            arguments = J$.N(4503777, 'arguments', arguments, true, false, false);
                            t = J$.N(4503785, 't', t, true, false, false);
                            J$.N(4503793, 'argv', argv, false, false, false);
                            J$.M(4503657, J$.R(4503641, 't', t, false, false), 'plan', false)(J$.T(4503649, 1, 22, false));
                            var argv = J$.W(4503705, 'argv', J$.F(4503697, J$.R(4503665, 'parse', parse, false, true), false)(J$.T(4503689, [
                                J$.T(4503673, '-a=whatever', 21, false),
                                J$.T(4503681, '-b=robots', 21, false)
                            ], 10, false)), argv, false, false);
                            J$.M(4503761, J$.R(4503713, 't', t, false, false), 'deepEqual', false)(J$.R(4503721, 'argv', argv, false, false), J$.T(4503753, {
                                a: J$.T(4503729, 'whatever', 21, false),
                                b: J$.T(4503737, 'robots', 21, false),
                                _: J$.T(4503745, [], 10, false)
                            }, 11, false));
                        } catch (J$e) {
                            J$.Ex(4503857, J$e);
                        } finally {
                            if (J$.Fr(4503865))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
        } catch (J$e) {
            J$.Ex(4503873, J$e);
        } finally {
            if (J$.Sr(4503881))
                continue jalangiLabel2;
            else
                break jalangiLabel2;
        }
    }
// JALANGI DO NOT INSTRUMENT

