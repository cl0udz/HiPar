J$.noInstrEval = false;
jalangiLabel3:
    while (true) {
        try {
            J$.Se(4502449, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestCouchNode/node_modules/minimist/test/default_bool.js');
            J$.N(4502457, 'test', test, false, false, false);
            J$.N(4502465, 'parse', parse, false, false, false);
            var test = J$.W(4501745, 'test', J$.F(4501737, J$.I(typeof require === 'undefined' ? require = J$.R(4501721, 'require', undefined, true, true) : require = J$.R(4501721, 'require', require, true, true)), false)(J$.T(4501729, 'tape', 21, false)), test, false, true);
            var parse = J$.W(4501777, 'parse', J$.F(4501769, J$.I(typeof require === 'undefined' ? require = J$.R(4501753, 'require', undefined, true, true) : require = J$.R(4501753, 'require', require, true, true)), false)(J$.T(4501761, '../', 21, false)), parse, false, true);
            J$.F(4501961, J$.R(4501785, 'test', test, false, true), false)(J$.T(4501793, 'boolean default true', 21, false), J$.T(4501953, function (t) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(4501921, arguments.callee, this, arguments);
                            arguments = J$.N(4501929, 'arguments', arguments, true, false, false);
                            t = J$.N(4501937, 't', t, true, false, false);
                            J$.N(4501945, 'argv', argv, false, false, false);
                            var argv = J$.W(4501857, 'argv', J$.F(4501849, J$.R(4501801, 'parse', parse, false, true), false)(J$.T(4501809, [], 10, false), J$.T(4501841, {
                                boolean: J$.T(4501817, 'sometrue', 21, false),
                                default: J$.T(4501833, { sometrue: J$.T(4501825, true, 23, false) }, 11, false)
                            }, 11, false)), argv, false, false);
                            J$.M(4501897, J$.R(4501865, 't', t, false, false), 'equal', false)(J$.G(4501881, J$.R(4501873, 'argv', argv, false, false), 'sometrue'), J$.T(4501889, true, 23, false));
                            J$.M(4501913, J$.R(4501905, 't', t, false, false), 'end', false)();
                        } catch (J$e) {
                            J$.Ex(4502473, J$e);
                        } finally {
                            if (J$.Fr(4502481))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.F(4502145, J$.R(4501969, 'test', test, false, true), false)(J$.T(4501977, 'boolean default false', 21, false), J$.T(4502137, function (t) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(4502105, arguments.callee, this, arguments);
                            arguments = J$.N(4502113, 'arguments', arguments, true, false, false);
                            t = J$.N(4502121, 't', t, true, false, false);
                            J$.N(4502129, 'argv', argv, false, false, false);
                            var argv = J$.W(4502041, 'argv', J$.F(4502033, J$.R(4501985, 'parse', parse, false, true), false)(J$.T(4501993, [], 10, false), J$.T(4502025, {
                                boolean: J$.T(4502001, 'somefalse', 21, false),
                                default: J$.T(4502017, { somefalse: J$.T(4502009, false, 23, false) }, 11, false)
                            }, 11, false)), argv, false, false);
                            J$.M(4502081, J$.R(4502049, 't', t, false, false), 'equal', false)(J$.G(4502065, J$.R(4502057, 'argv', argv, false, false), 'somefalse'), J$.T(4502073, false, 23, false));
                            J$.M(4502097, J$.R(4502089, 't', t, false, false), 'end', false)();
                        } catch (J$e) {
                            J$.Ex(4502489, J$e);
                        } finally {
                            if (J$.Fr(4502497))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.F(4502441, J$.R(4502153, 'test', test, false, true), false)(J$.T(4502161, 'boolean default to null', 21, false), J$.T(4502433, function (t) {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(4502401, arguments.callee, this, arguments);
                            arguments = J$.N(4502409, 'arguments', arguments, true, false, false);
                            t = J$.N(4502417, 't', t, true, false, false);
                            J$.N(4502425, 'argv', argv, false, false, false);
                            var argv = J$.W(4502225, 'argv', J$.F(4502217, J$.R(4502169, 'parse', parse, false, true), false)(J$.T(4502177, [], 10, false), J$.T(4502209, {
                                boolean: J$.T(4502185, 'maybe', 21, false),
                                default: J$.T(4502201, { maybe: J$.T(4502193, null, 25, false) }, 11, false)
                            }, 11, false)), argv, false, false);
                            J$.M(4502265, J$.R(4502233, 't', t, false, false), 'equal', false)(J$.G(4502249, J$.R(4502241, 'argv', argv, false, false), 'maybe'), J$.T(4502257, null, 25, false));
                            var argv = J$.W(4502337, 'argv', J$.F(4502329, J$.R(4502273, 'parse', parse, false, true), false)(J$.T(4502289, [J$.T(4502281, '--maybe', 21, false)], 10, false), J$.T(4502321, {
                                boolean: J$.T(4502297, 'maybe', 21, false),
                                default: J$.T(4502313, { maybe: J$.T(4502305, null, 25, false) }, 11, false)
                            }, 11, false)), argv, false, false);
                            J$.M(4502377, J$.R(4502345, 't', t, false, false), 'equal', false)(J$.G(4502361, J$.R(4502353, 'argv', argv, false, false), 'maybe'), J$.T(4502369, true, 23, false));
                            J$.M(4502393, J$.R(4502385, 't', t, false, false), 'end', false)();
                        } catch (J$e) {
                            J$.Ex(4502505, J$e);
                        } finally {
                            if (J$.Fr(4502513))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
        } catch (J$e) {
            J$.Ex(4502521, J$e);
        } finally {
            if (J$.Sr(4502529))
                continue jalangiLabel3;
            else
                break jalangiLabel3;
        }
    }
// JALANGI DO NOT INSTRUMENT

