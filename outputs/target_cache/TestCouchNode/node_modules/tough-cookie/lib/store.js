J$.noInstrEval = false;
jalangiLabel8:
    while (true) {
        try {
            J$.Se(5330857, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestCouchNode/node_modules/tough-cookie/lib/store.js');
            function Store() {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(5330121, arguments.callee, this, arguments);
                            arguments = J$.N(5330129, 'arguments', arguments, true, false, false);
                        } catch (J$e) {
                            J$.Ex(5330881, J$e);
                        } finally {
                            if (J$.Fr(5330889))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            Store = J$.N(5330873, 'Store', J$.T(5330865, Store, 12, false), true, false, false);
            J$.T(5330113, 'use strict', 21, false);
            J$.P(5330153, J$.I(typeof exports === 'undefined' ? exports = J$.R(5330137, 'exports', undefined, true, true) : exports = J$.R(5330137, 'exports', exports, true, true)), 'Store', J$.R(5330145, 'Store', Store, false, true));
            J$.P(5330185, J$.G(5330169, J$.R(5330161, 'Store', Store, false, true), 'prototype'), 'synchronous', J$.T(5330177, false, 23, false));
            J$.P(5330289, J$.G(5330201, J$.R(5330193, 'Store', Store, false, true), 'prototype'), 'findCookie', J$.T(5330281, function (domain, path, key, cb) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(5330233, arguments.callee, this, arguments);
                            arguments = J$.N(5330241, 'arguments', arguments, true, false, false);
                            domain = J$.N(5330249, 'domain', domain, true, false, false);
                            path = J$.N(5330257, 'path', path, true, false, false);
                            key = J$.N(5330265, 'key', key, true, false, false);
                            cb = J$.N(5330273, 'cb', cb, true, false, false);
                            throw J$.F(5330225, J$.I(typeof Error === 'undefined' ? Error = J$.R(5330209, 'Error', undefined, true, true) : Error = J$.R(5330209, 'Error', Error, true, true)), true)(J$.T(5330217, 'findCookie is not implemented', 21, false));
                        } catch (J$e) {
                            J$.Ex(5330897, J$e);
                        } finally {
                            if (J$.Fr(5330905))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(5330385, J$.G(5330305, J$.R(5330297, 'Store', Store, false, true), 'prototype'), 'findCookies', J$.T(5330377, function (domain, path, cb) {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(5330337, arguments.callee, this, arguments);
                            arguments = J$.N(5330345, 'arguments', arguments, true, false, false);
                            domain = J$.N(5330353, 'domain', domain, true, false, false);
                            path = J$.N(5330361, 'path', path, true, false, false);
                            cb = J$.N(5330369, 'cb', cb, true, false, false);
                            throw J$.F(5330329, J$.I(typeof Error === 'undefined' ? Error = J$.R(5330313, 'Error', undefined, true, true) : Error = J$.R(5330313, 'Error', Error, true, true)), true)(J$.T(5330321, 'findCookies is not implemented', 21, false));
                        } catch (J$e) {
                            J$.Ex(5330913, J$e);
                        } finally {
                            if (J$.Fr(5330921))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(5330473, J$.G(5330401, J$.R(5330393, 'Store', Store, false, true), 'prototype'), 'putCookie', J$.T(5330465, function (cookie, cb) {
                jalangiLabel3:
                    while (true) {
                        try {
                            J$.Fe(5330433, arguments.callee, this, arguments);
                            arguments = J$.N(5330441, 'arguments', arguments, true, false, false);
                            cookie = J$.N(5330449, 'cookie', cookie, true, false, false);
                            cb = J$.N(5330457, 'cb', cb, true, false, false);
                            throw J$.F(5330425, J$.I(typeof Error === 'undefined' ? Error = J$.R(5330409, 'Error', undefined, true, true) : Error = J$.R(5330409, 'Error', Error, true, true)), true)(J$.T(5330417, 'putCookie is not implemented', 21, false));
                        } catch (J$e) {
                            J$.Ex(5330929, J$e);
                        } finally {
                            if (J$.Fr(5330937))
                                continue jalangiLabel3;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(5330569, J$.G(5330489, J$.R(5330481, 'Store', Store, false, true), 'prototype'), 'updateCookie', J$.T(5330561, function (oldCookie, newCookie, cb) {
                jalangiLabel4:
                    while (true) {
                        try {
                            J$.Fe(5330521, arguments.callee, this, arguments);
                            arguments = J$.N(5330529, 'arguments', arguments, true, false, false);
                            oldCookie = J$.N(5330537, 'oldCookie', oldCookie, true, false, false);
                            newCookie = J$.N(5330545, 'newCookie', newCookie, true, false, false);
                            cb = J$.N(5330553, 'cb', cb, true, false, false);
                            throw J$.F(5330513, J$.I(typeof Error === 'undefined' ? Error = J$.R(5330497, 'Error', undefined, true, true) : Error = J$.R(5330497, 'Error', Error, true, true)), true)(J$.T(5330505, 'updateCookie is not implemented', 21, false));
                        } catch (J$e) {
                            J$.Ex(5330945, J$e);
                        } finally {
                            if (J$.Fr(5330953))
                                continue jalangiLabel4;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(5330673, J$.G(5330585, J$.R(5330577, 'Store', Store, false, true), 'prototype'), 'removeCookie', J$.T(5330665, function (domain, path, key, cb) {
                jalangiLabel5:
                    while (true) {
                        try {
                            J$.Fe(5330617, arguments.callee, this, arguments);
                            arguments = J$.N(5330625, 'arguments', arguments, true, false, false);
                            domain = J$.N(5330633, 'domain', domain, true, false, false);
                            path = J$.N(5330641, 'path', path, true, false, false);
                            key = J$.N(5330649, 'key', key, true, false, false);
                            cb = J$.N(5330657, 'cb', cb, true, false, false);
                            throw J$.F(5330609, J$.I(typeof Error === 'undefined' ? Error = J$.R(5330593, 'Error', undefined, true, true) : Error = J$.R(5330593, 'Error', Error, true, true)), true)(J$.T(5330601, 'removeCookie is not implemented', 21, false));
                        } catch (J$e) {
                            J$.Ex(5330961, J$e);
                        } finally {
                            if (J$.Fr(5330969))
                                continue jalangiLabel5;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(5330769, J$.G(5330689, J$.R(5330681, 'Store', Store, false, true), 'prototype'), 'removeCookies', J$.T(5330761, function (domain, path, cb) {
                jalangiLabel6:
                    while (true) {
                        try {
                            J$.Fe(5330721, arguments.callee, this, arguments);
                            arguments = J$.N(5330729, 'arguments', arguments, true, false, false);
                            domain = J$.N(5330737, 'domain', domain, true, false, false);
                            path = J$.N(5330745, 'path', path, true, false, false);
                            cb = J$.N(5330753, 'cb', cb, true, false, false);
                            throw J$.F(5330713, J$.I(typeof Error === 'undefined' ? Error = J$.R(5330697, 'Error', undefined, true, true) : Error = J$.R(5330697, 'Error', Error, true, true)), true)(J$.T(5330705, 'removeCookies is not implemented', 21, false));
                        } catch (J$e) {
                            J$.Ex(5330977, J$e);
                        } finally {
                            if (J$.Fr(5330985))
                                continue jalangiLabel6;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(5330849, J$.G(5330785, J$.R(5330777, 'Store', Store, false, true), 'prototype'), 'getAllCookies', J$.T(5330841, function (cb) {
                jalangiLabel7:
                    while (true) {
                        try {
                            J$.Fe(5330817, arguments.callee, this, arguments);
                            arguments = J$.N(5330825, 'arguments', arguments, true, false, false);
                            cb = J$.N(5330833, 'cb', cb, true, false, false);
                            throw J$.F(5330809, J$.I(typeof Error === 'undefined' ? Error = J$.R(5330793, 'Error', undefined, true, true) : Error = J$.R(5330793, 'Error', Error, true, true)), true)(J$.T(5330801, 'getAllCookies is not implemented (therefore jar cannot be serialized)', 21, false));
                        } catch (J$e) {
                            J$.Ex(5330993, J$e);
                        } finally {
                            if (J$.Fr(5331001))
                                continue jalangiLabel7;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
        } catch (J$e) {
            J$.Ex(5331009, J$e);
        } finally {
            if (J$.Sr(5331017))
                continue jalangiLabel8;
            else
                break jalangiLabel8;
        }
    }
// JALANGI DO NOT INSTRUMENT

