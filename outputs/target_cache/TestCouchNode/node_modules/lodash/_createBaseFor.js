J$.noInstrEval = false;
jalangiLabel2:
    while (true) {
        try {
            J$.Se(7648593, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestCouchNode/node_modules/lodash/_createBaseFor.js');
            function createBaseFor(fromRight) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(7648545, arguments.callee, this, arguments);
                            arguments = J$.N(7648553, 'arguments', arguments, true, false, false);
                            fromRight = J$.N(7648561, 'fromRight', fromRight, true, false, false);
                            return J$.Rt(7648537, J$.T(7648529, function (object, iteratee, keysFunc) {
                                jalangiLabel0:
                                    while (true) {
                                        try {
                                            J$.Fe(7648449, arguments.callee, this, arguments);
                                            arguments = J$.N(7648457, 'arguments', arguments, true, false, false);
                                            object = J$.N(7648465, 'object', object, true, false, false);
                                            iteratee = J$.N(7648473, 'iteratee', iteratee, true, false, false);
                                            keysFunc = J$.N(7648481, 'keysFunc', keysFunc, true, false, false);
                                            J$.N(7648489, 'index', index, false, false, false);
                                            J$.N(7648497, 'iterable', iterable, false, false, false);
                                            J$.N(7648505, 'props', props, false, false, false);
                                            J$.N(7648513, 'length', length, false, false, false);
                                            J$.N(7648521, 'key', key, false, false, false);
                                            var index = J$.W(7648265, 'index', J$.U(761122, '-', J$.T(7648193, 1, 22, false)), index, false, false), iterable = J$.W(7648273, 'iterable', J$.F(7648217, J$.I(typeof Object === 'undefined' ? Object = J$.R(7648201, 'Object', undefined, true, true) : Object = J$.R(7648201, 'Object', Object, true, true)), false)(J$.R(7648209, 'object', object, false, false)), iterable, false, false), props = J$.W(7648281, 'props', J$.F(7648241, J$.R(7648225, 'keysFunc', keysFunc, false, false), false)(J$.R(7648233, 'object', object, false, false)), props, false, false), length = J$.W(7648289, 'length', J$.G(7648257, J$.R(7648249, 'props', props, false, false), 'length'), length, false, false);
                                            while (J$.C(406776, J$.B(761146, '+', length = J$.W(7648305, 'length', J$.B(761138, '-', J$.U(761130, '+', J$.R(7648297, 'length', length, false, false)), 1), length, false, false), 1))) {
                                                var key = J$.W(7648361, 'key', J$.G(7648353, J$.R(7648313, 'props', props, false, false), J$.C(406760, J$.R(7648321, 'fromRight', fromRight, false, false)) ? J$.R(7648329, 'length', length, false, false) : index = J$.W(7648345, 'index', J$.B(761162, '+', J$.U(761154, '+', J$.R(7648337, 'index', index, false, false)), 1), index, false, false)), key, false, false);
                                                if (J$.C(406768, J$.B(761170, '===', J$.F(7648417, J$.R(7648369, 'iteratee', iteratee, false, false), false)(J$.G(7648393, J$.R(7648377, 'iterable', iterable, false, false), J$.R(7648385, 'key', key, false, false)), J$.R(7648401, 'key', key, false, false), J$.R(7648409, 'iterable', iterable, false, false)), J$.T(7648425, false, 23, false)))) {
                                                    break;
                                                }
                                            }
                                            return J$.Rt(7648441, J$.R(7648433, 'object', object, false, false));
                                        } catch (J$e) {
                                            J$.Ex(7648617, J$e);
                                        } finally {
                                            if (J$.Fr(7648625))
                                                continue jalangiLabel0;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                        } catch (J$e) {
                            J$.Ex(7648633, J$e);
                        } finally {
                            if (J$.Fr(7648641))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            createBaseFor = J$.N(7648609, 'createBaseFor', J$.T(7648601, createBaseFor, 12, false), true, false, false);
            J$.P(7648585, J$.I(typeof module === 'undefined' ? module = J$.R(7648569, 'module', undefined, true, true) : module = J$.R(7648569, 'module', module, true, true)), 'exports', J$.R(7648577, 'createBaseFor', createBaseFor, false, true));
        } catch (J$e) {
            J$.Ex(7648649, J$e);
        } finally {
            if (J$.Sr(7648657))
                continue jalangiLabel2;
            else
                break jalangiLabel2;
        }
    }
// JALANGI DO NOT INSTRUMENT

