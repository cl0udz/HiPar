J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(7811017, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestCouchNode/node_modules/lodash/forIn.js');
            function forIn(object, iteratee) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(7810961, arguments.callee, this, arguments);
                            arguments = J$.N(7810969, 'arguments', arguments, true, false, false);
                            object = J$.N(7810977, 'object', object, true, false, false);
                            iteratee = J$.N(7810985, 'iteratee', iteratee, true, false, false);
                            return J$.Rt(7810953, J$.C(416352, J$.B(773682, '==', J$.R(7810873, 'object', object, false, false), J$.T(7810881, null, 25, false))) ? J$.R(7810889, 'object', object, false, false) : J$.F(7810945, J$.R(7810897, 'baseFor', baseFor, false, true), false)(J$.R(7810905, 'object', object, false, false), J$.F(7810929, J$.R(7810913, 'castFunction', castFunction, false, true), false)(J$.R(7810921, 'iteratee', iteratee, false, false)), J$.R(7810937, 'keysIn', keysIn, false, true)));
                        } catch (J$e) {
                            J$.Ex(7811065, J$e);
                        } finally {
                            if (J$.Fr(7811073))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(7811025, 'baseFor', baseFor, false, false, false);
            J$.N(7811033, 'castFunction', castFunction, false, false, false);
            J$.N(7811041, 'keysIn', keysIn, false, false, false);
            forIn = J$.N(7811057, 'forIn', J$.T(7811049, forIn, 12, false), true, false, false);
            var baseFor = J$.W(7810849, 'baseFor', J$.F(7810793, J$.I(typeof require === 'undefined' ? require = J$.R(7810777, 'require', undefined, true, true) : require = J$.R(7810777, 'require', require, true, true)), false)(J$.T(7810785, './_baseFor', 21, false)), baseFor, false, true), castFunction = J$.W(7810857, 'castFunction', J$.F(7810817, J$.I(typeof require === 'undefined' ? require = J$.R(7810801, 'require', undefined, true, true) : require = J$.R(7810801, 'require', require, true, true)), false)(J$.T(7810809, './_castFunction', 21, false)), castFunction, false, true), keysIn = J$.W(7810865, 'keysIn', J$.F(7810841, J$.I(typeof require === 'undefined' ? require = J$.R(7810825, 'require', undefined, true, true) : require = J$.R(7810825, 'require', require, true, true)), false)(J$.T(7810833, './keysIn', 21, false)), keysIn, false, true);
            J$.P(7811009, J$.I(typeof module === 'undefined' ? module = J$.R(7810993, 'module', undefined, true, true) : module = J$.R(7810993, 'module', module, true, true)), 'exports', J$.R(7811001, 'forIn', forIn, false, true));
        } catch (J$e) {
            J$.Ex(7811081, J$e);
        } finally {
            if (J$.Sr(7811089))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

