J$.noInstrEval = false;
jalangiLabel3:
    while (true) {
        try {
            J$.Se(7653313, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestCouchNode/node_modules/lodash/_createFind.js');
            function createFind(findIndexFunc) {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(7653265, arguments.callee, this, arguments);
                            arguments = J$.N(7653273, 'arguments', arguments, true, false, false);
                            findIndexFunc = J$.N(7653281, 'findIndexFunc', findIndexFunc, true, false, false);
                            return J$.Rt(7653257, J$.T(7653249, function (collection, predicate, fromIndex) {
                                jalangiLabel1:
                                    while (true) {
                                        try {
                                            J$.Fe(7653185, arguments.callee, this, arguments);
                                            arguments = J$.N(7653193, 'arguments', arguments, true, false, false);
                                            collection = J$.N(7653201, 'collection', collection, true, false, false);
                                            predicate = J$.N(7653209, 'predicate', predicate, true, false, false);
                                            fromIndex = J$.N(7653217, 'fromIndex', fromIndex, true, false, false);
                                            J$.N(7653225, 'iterable', iterable, false, false, false);
                                            J$.N(7653233, 'iteratee', iteratee, false, false, false);
                                            J$.N(7653241, 'index', index, false, false, false);
                                            var iterable = J$.W(7652841, 'iterable', J$.F(7652833, J$.I(typeof Object === 'undefined' ? Object = J$.R(7652817, 'Object', undefined, true, true) : Object = J$.R(7652817, 'Object', Object, true, true)), false)(J$.R(7652825, 'collection', collection, false, false)), iterable, false, false);
                                            if (J$.C(406984, J$.U(761306, '!', J$.F(7652865, J$.R(7652849, 'isArrayLike', isArrayLike, false, true), false)(J$.R(7652857, 'collection', collection, false, false))))) {
                                                var iteratee = J$.W(7652905, 'iteratee', J$.F(7652897, J$.R(7652873, 'baseIteratee', baseIteratee, false, true), false)(J$.R(7652881, 'predicate', predicate, false, false), J$.T(7652889, 3, 22, false)), iteratee, false, false);
                                                collection = J$.W(7652937, 'collection', J$.F(7652929, J$.R(7652913, 'keys', keys, false, true), false)(J$.R(7652921, 'collection', collection, false, false)), collection, false, false);
                                                predicate = J$.W(7653041, 'predicate', J$.T(7653033, function (key) {
                                                    jalangiLabel0:
                                                        while (true) {
                                                            try {
                                                                J$.Fe(7653009, arguments.callee, this, arguments);
                                                                arguments = J$.N(7653017, 'arguments', arguments, true, false, false);
                                                                key = J$.N(7653025, 'key', key, true, false, false);
                                                                return J$.Rt(7653001, J$.F(7652993, J$.R(7652945, 'iteratee', iteratee, false, false), false)(J$.G(7652969, J$.R(7652953, 'iterable', iterable, false, false), J$.R(7652961, 'key', key, false, false)), J$.R(7652977, 'key', key, false, false), J$.R(7652985, 'iterable', iterable, false, false)));
                                                            } catch (J$e) {
                                                                J$.Ex(7653361, J$e);
                                                            } finally {
                                                                if (J$.Fr(7653369))
                                                                    continue jalangiLabel0;
                                                                else
                                                                    return J$.Ra();
                                                            }
                                                        }
                                                }, 12, false), predicate, false, false);
                                            }
                                            var index = J$.W(7653089, 'index', J$.F(7653081, J$.R(7653049, 'findIndexFunc', findIndexFunc, false, false), false)(J$.R(7653057, 'collection', collection, false, false), J$.R(7653065, 'predicate', predicate, false, false), J$.R(7653073, 'fromIndex', fromIndex, false, false)), index, false, false);
                                            return J$.Rt(7653177, J$.C(407000, J$.B(761322, '>', J$.R(7653097, 'index', index, false, false), J$.U(761314, '-', J$.T(7653105, 1, 22, false)))) ? J$.G(7653161, J$.R(7653113, 'iterable', iterable, false, false), J$.C(406992, J$.R(7653121, 'iteratee', iteratee, false, false)) ? J$.G(7653145, J$.R(7653129, 'collection', collection, false, false), J$.R(7653137, 'index', index, false, false)) : J$.R(7653153, 'index', index, false, false)) : J$.T(7653169, undefined, 24, false));
                                        } catch (J$e) {
                                            J$.Ex(7653377, J$e);
                                        } finally {
                                            if (J$.Fr(7653385))
                                                continue jalangiLabel1;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                        } catch (J$e) {
                            J$.Ex(7653393, J$e);
                        } finally {
                            if (J$.Fr(7653401))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(7653321, 'baseIteratee', baseIteratee, false, false, false);
            J$.N(7653329, 'isArrayLike', isArrayLike, false, false, false);
            J$.N(7653337, 'keys', keys, false, false, false);
            createFind = J$.N(7653353, 'createFind', J$.T(7653345, createFind, 12, false), true, false, false);
            var baseIteratee = J$.W(7652793, 'baseIteratee', J$.F(7652737, J$.I(typeof require === 'undefined' ? require = J$.R(7652721, 'require', undefined, true, true) : require = J$.R(7652721, 'require', require, true, true)), false)(J$.T(7652729, './_baseIteratee', 21, false)), baseIteratee, false, true), isArrayLike = J$.W(7652801, 'isArrayLike', J$.F(7652761, J$.I(typeof require === 'undefined' ? require = J$.R(7652745, 'require', undefined, true, true) : require = J$.R(7652745, 'require', require, true, true)), false)(J$.T(7652753, './isArrayLike', 21, false)), isArrayLike, false, true), keys = J$.W(7652809, 'keys', J$.F(7652785, J$.I(typeof require === 'undefined' ? require = J$.R(7652769, 'require', undefined, true, true) : require = J$.R(7652769, 'require', require, true, true)), false)(J$.T(7652777, './keys', 21, false)), keys, false, true);
            J$.P(7653305, J$.I(typeof module === 'undefined' ? module = J$.R(7653289, 'module', undefined, true, true) : module = J$.R(7653289, 'module', module, true, true)), 'exports', J$.R(7653297, 'createFind', createFind, false, true));
        } catch (J$e) {
            J$.Ex(7653409, J$e);
        } finally {
            if (J$.Sr(7653417))
                continue jalangiLabel3;
            else
                break jalangiLabel3;
        }
    }
// JALANGI DO NOT INSTRUMENT

