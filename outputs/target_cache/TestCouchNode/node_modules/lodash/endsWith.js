J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(7802857, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestCouchNode/node_modules/lodash/endsWith.js');
            function endsWith(string, target, position) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(7802777, arguments.callee, this, arguments);
                            arguments = J$.N(7802785, 'arguments', arguments, true, false, false);
                            string = J$.N(7802793, 'string', string, true, false, false);
                            target = J$.N(7802801, 'target', target, true, false, false);
                            position = J$.N(7802809, 'position', position, true, false, false);
                            J$.N(7802817, 'length', length, false, false, false);
                            J$.N(7802825, 'end', end, false, false, false);
                            string = J$.W(7802513, 'string', J$.F(7802505, J$.R(7802489, 'toString', toString, false, true), false)(J$.R(7802497, 'string', string, false, false)), string, false, false);
                            target = J$.W(7802545, 'target', J$.F(7802537, J$.R(7802521, 'baseToString', baseToString, false, true), false)(J$.R(7802529, 'target', target, false, false)), target, false, false);
                            var length = J$.W(7802569, 'length', J$.G(7802561, J$.R(7802553, 'string', string, false, false), 'length'), length, false, false);
                            position = J$.W(7802657, 'position', J$.C(416072, J$.B(773418, '===', J$.R(7802577, 'position', position, false, false), J$.T(7802585, undefined, 24, false))) ? J$.R(7802593, 'length', length, false, false) : J$.F(7802649, J$.R(7802601, 'baseClamp', baseClamp, false, true), false)(J$.F(7802625, J$.R(7802609, 'toInteger', toInteger, false, true), false)(J$.R(7802617, 'position', position, false, false)), J$.T(7802633, 0, 22, false), J$.R(7802641, 'length', length, false, false)), position, false, false);
                            var end = J$.W(7802673, 'end', J$.R(7802665, 'position', position, false, false), end, false, false);
                            position = J$.W(7802705, 'position', J$.B(773426, '-', J$.R(7802697, 'position', position, false, false), J$.G(7802689, J$.R(7802681, 'target', target, false, false), 'length')), position, false, false);
                            return J$.Rt(7802769, J$.C(416080, J$.B(773434, '>=', J$.R(7802713, 'position', position, false, false), J$.T(7802721, 0, 22, false))) ? J$.B(773442, '==', J$.M(7802753, J$.R(7802729, 'string', string, false, false), 'slice', false)(J$.R(7802737, 'position', position, false, false), J$.R(7802745, 'end', end, false, false)), J$.R(7802761, 'target', target, false, false)) : J$._());
                        } catch (J$e) {
                            J$.Ex(7802913, J$e);
                        } finally {
                            if (J$.Fr(7802921))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(7802865, 'baseClamp', baseClamp, false, false, false);
            J$.N(7802873, 'baseToString', baseToString, false, false, false);
            J$.N(7802881, 'toInteger', toInteger, false, false, false);
            J$.N(7802889, 'toString', toString, false, false, false);
            endsWith = J$.N(7802905, 'endsWith', J$.T(7802897, endsWith, 12, false), true, false, false);
            var baseClamp = J$.W(7802457, 'baseClamp', J$.F(7802377, J$.I(typeof require === 'undefined' ? require = J$.R(7802361, 'require', undefined, true, true) : require = J$.R(7802361, 'require', require, true, true)), false)(J$.T(7802369, './_baseClamp', 21, false)), baseClamp, false, true), baseToString = J$.W(7802465, 'baseToString', J$.F(7802401, J$.I(typeof require === 'undefined' ? require = J$.R(7802385, 'require', undefined, true, true) : require = J$.R(7802385, 'require', require, true, true)), false)(J$.T(7802393, './_baseToString', 21, false)), baseToString, false, true), toInteger = J$.W(7802473, 'toInteger', J$.F(7802425, J$.I(typeof require === 'undefined' ? require = J$.R(7802409, 'require', undefined, true, true) : require = J$.R(7802409, 'require', require, true, true)), false)(J$.T(7802417, './toInteger', 21, false)), toInteger, false, true), toString = J$.W(7802481, 'toString', J$.F(7802449, J$.I(typeof require === 'undefined' ? require = J$.R(7802433, 'require', undefined, true, true) : require = J$.R(7802433, 'require', require, true, true)), false)(J$.T(7802441, './toString', 21, false)), toString, false, true);
            J$.P(7802849, J$.I(typeof module === 'undefined' ? module = J$.R(7802833, 'module', undefined, true, true) : module = J$.R(7802833, 'module', module, true, true)), 'exports', J$.R(7802841, 'endsWith', endsWith, false, true));
        } catch (J$e) {
            J$.Ex(7802929, J$e);
        } finally {
            if (J$.Sr(7802937))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

