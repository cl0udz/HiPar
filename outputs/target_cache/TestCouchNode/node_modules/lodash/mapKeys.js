J$.noInstrEval = false;
jalangiLabel2:
    while (true) {
        try {
            J$.Se(4389993, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestCouchNode/node_modules/lodash/mapKeys.js');
            function mapKeys(object, iteratee) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(4389929, arguments.callee, this, arguments);
                            arguments = J$.N(4389937, 'arguments', arguments, true, false, false);
                            object = J$.N(4389945, 'object', object, true, false, false);
                            iteratee = J$.N(4389953, 'iteratee', iteratee, true, false, false);
                            J$.N(4389961, 'result', result, false, false, false);
                            var result = J$.W(4389721, 'result', J$.T(4389713, {}, 11, false), result, false, false);
                            iteratee = J$.W(4389761, 'iteratee', J$.F(4389753, J$.R(4389729, 'baseIteratee', baseIteratee, false, true), false)(J$.R(4389737, 'iteratee', iteratee, false, false), J$.T(4389745, 3, 22, false)), iteratee, false, false);
                            J$.F(4389905, J$.R(4389769, 'baseForOwn', baseForOwn, false, true), false)(J$.R(4389777, 'object', object, false, false), J$.T(4389897, function (value, key, object) {
                                jalangiLabel0:
                                    while (true) {
                                        try {
                                            J$.Fe(4389857, arguments.callee, this, arguments);
                                            arguments = J$.N(4389865, 'arguments', arguments, true, false, false);
                                            value = J$.N(4389873, 'value', value, true, false, false);
                                            key = J$.N(4389881, 'key', key, true, false, false);
                                            object = J$.N(4389889, 'object', object, true, false, false);
                                            J$.F(4389849, J$.R(4389785, 'baseAssignValue', baseAssignValue, false, true), false)(J$.R(4389793, 'result', result, false, false), J$.F(4389833, J$.R(4389801, 'iteratee', iteratee, false, false), false)(J$.R(4389809, 'value', value, false, false), J$.R(4389817, 'key', key, false, false), J$.R(4389825, 'object', object, false, false)), J$.R(4389841, 'value', value, false, false));
                                        } catch (J$e) {
                                            J$.Ex(4390041, J$e);
                                        } finally {
                                            if (J$.Fr(4390049))
                                                continue jalangiLabel0;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            return J$.Rt(4389921, J$.R(4389913, 'result', result, false, false));
                        } catch (J$e) {
                            J$.Ex(4390057, J$e);
                        } finally {
                            if (J$.Fr(4390065))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(4390001, 'baseAssignValue', baseAssignValue, false, false, false);
            J$.N(4390009, 'baseForOwn', baseForOwn, false, false, false);
            J$.N(4390017, 'baseIteratee', baseIteratee, false, false, false);
            mapKeys = J$.N(4390033, 'mapKeys', J$.T(4390025, mapKeys, 12, false), true, false, false);
            var baseAssignValue = J$.W(4389689, 'baseAssignValue', J$.F(4389633, J$.I(typeof require === 'undefined' ? require = J$.R(4389617, 'require', undefined, true, true) : require = J$.R(4389617, 'require', require, true, true)), false)(J$.T(4389625, './_baseAssignValue', 21, false)), baseAssignValue, false, true), baseForOwn = J$.W(4389697, 'baseForOwn', J$.F(4389657, J$.I(typeof require === 'undefined' ? require = J$.R(4389641, 'require', undefined, true, true) : require = J$.R(4389641, 'require', require, true, true)), false)(J$.T(4389649, './_baseForOwn', 21, false)), baseForOwn, false, true), baseIteratee = J$.W(4389705, 'baseIteratee', J$.F(4389681, J$.I(typeof require === 'undefined' ? require = J$.R(4389665, 'require', undefined, true, true) : require = J$.R(4389665, 'require', require, true, true)), false)(J$.T(4389673, './_baseIteratee', 21, false)), baseIteratee, false, true);
            J$.P(4389985, J$.I(typeof module === 'undefined' ? module = J$.R(4389969, 'module', undefined, true, true) : module = J$.R(4389969, 'module', module, true, true)), 'exports', J$.R(4389977, 'mapKeys', mapKeys, false, true));
        } catch (J$e) {
            J$.Ex(4390073, J$e);
        } finally {
            if (J$.Sr(4390081))
                continue jalangiLabel2;
            else
                break jalangiLabel2;
        }
    }
// JALANGI DO NOT INSTRUMENT

