J$.noInstrEval = false;
jalangiLabel2:
    while (true) {
        try {
            J$.Se(7624673, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestCouchNode/node_modules/lodash/_baseReduce.js');
            function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(7624593, arguments.callee, this, arguments);
                            arguments = J$.N(7624601, 'arguments', arguments, true, false, false);
                            collection = J$.N(7624609, 'collection', collection, true, false, false);
                            iteratee = J$.N(7624617, 'iteratee', iteratee, true, false, false);
                            accumulator = J$.N(7624625, 'accumulator', accumulator, true, false, false);
                            initAccum = J$.N(7624633, 'initAccum', initAccum, true, false, false);
                            eachFunc = J$.N(7624641, 'eachFunc', eachFunc, true, false, false);
                            J$.F(7624569, J$.R(7624417, 'eachFunc', eachFunc, false, false), false)(J$.R(7624425, 'collection', collection, false, false), J$.T(7624561, function (value, index, collection) {
                                jalangiLabel0:
                                    while (true) {
                                        try {
                                            J$.Fe(7624521, arguments.callee, this, arguments);
                                            arguments = J$.N(7624529, 'arguments', arguments, true, false, false);
                                            value = J$.N(7624537, 'value', value, true, false, false);
                                            index = J$.N(7624545, 'index', index, true, false, false);
                                            collection = J$.N(7624553, 'collection', collection, true, false, false);
                                            accumulator = J$.W(7624513, 'accumulator', J$.C(405112, J$.R(7624433, 'initAccum', initAccum, false, false)) ? (initAccum = J$.W(7624449, 'initAccum', J$.T(7624441, false, 23, false), initAccum, false, false), J$.R(7624457, 'value', value, false, false)) : J$.F(7624505, J$.R(7624465, 'iteratee', iteratee, false, false), false)(J$.R(7624473, 'accumulator', accumulator, false, false), J$.R(7624481, 'value', value, false, false), J$.R(7624489, 'index', index, false, false), J$.R(7624497, 'collection', collection, false, false)), accumulator, false, false);
                                        } catch (J$e) {
                                            J$.Ex(7624697, J$e);
                                        } finally {
                                            if (J$.Fr(7624705))
                                                continue jalangiLabel0;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            return J$.Rt(7624585, J$.R(7624577, 'accumulator', accumulator, false, false));
                        } catch (J$e) {
                            J$.Ex(7624713, J$e);
                        } finally {
                            if (J$.Fr(7624721))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            baseReduce = J$.N(7624689, 'baseReduce', J$.T(7624681, baseReduce, 12, false), true, false, false);
            J$.P(7624665, J$.I(typeof module === 'undefined' ? module = J$.R(7624649, 'module', undefined, true, true) : module = J$.R(7624649, 'module', module, true, true)), 'exports', J$.R(7624657, 'baseReduce', baseReduce, false, true));
        } catch (J$e) {
            J$.Ex(7624729, J$e);
        } finally {
            if (J$.Sr(7624737))
                continue jalangiLabel2;
            else
                break jalangiLabel2;
        }
    }
// JALANGI DO NOT INSTRUMENT

