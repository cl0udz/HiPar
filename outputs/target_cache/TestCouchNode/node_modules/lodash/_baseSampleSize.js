J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(7625945, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestCouchNode/node_modules/lodash/_baseSampleSize.js');
            function baseSampleSize(collection, n) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(7625881, arguments.callee, this, arguments);
                            arguments = J$.N(7625889, 'arguments', arguments, true, false, false);
                            collection = J$.N(7625897, 'collection', collection, true, false, false);
                            n = J$.N(7625905, 'n', n, true, false, false);
                            J$.N(7625913, 'array', array, false, false, false);
                            var array = J$.W(7625793, 'array', J$.F(7625785, J$.R(7625769, 'values', values, false, true), false)(J$.R(7625777, 'collection', collection, false, false)), array, false, false);
                            return J$.Rt(7625873, J$.F(7625865, J$.R(7625801, 'shuffleSelf', shuffleSelf, false, true), false)(J$.R(7625809, 'array', array, false, false), J$.F(7625857, J$.R(7625817, 'baseClamp', baseClamp, false, true), false)(J$.R(7625825, 'n', n, false, false), J$.T(7625833, 0, 22, false), J$.G(7625849, J$.R(7625841, 'array', array, false, false), 'length'))));
                        } catch (J$e) {
                            J$.Ex(7625993, J$e);
                        } finally {
                            if (J$.Fr(7626001))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(7625953, 'baseClamp', baseClamp, false, false, false);
            J$.N(7625961, 'shuffleSelf', shuffleSelf, false, false, false);
            J$.N(7625969, 'values', values, false, false, false);
            baseSampleSize = J$.N(7625985, 'baseSampleSize', J$.T(7625977, baseSampleSize, 12, false), true, false, false);
            var baseClamp = J$.W(7625745, 'baseClamp', J$.F(7625689, J$.I(typeof require === 'undefined' ? require = J$.R(7625673, 'require', undefined, true, true) : require = J$.R(7625673, 'require', require, true, true)), false)(J$.T(7625681, './_baseClamp', 21, false)), baseClamp, false, true), shuffleSelf = J$.W(7625753, 'shuffleSelf', J$.F(7625713, J$.I(typeof require === 'undefined' ? require = J$.R(7625697, 'require', undefined, true, true) : require = J$.R(7625697, 'require', require, true, true)), false)(J$.T(7625705, './_shuffleSelf', 21, false)), shuffleSelf, false, true), values = J$.W(7625761, 'values', J$.F(7625737, J$.I(typeof require === 'undefined' ? require = J$.R(7625721, 'require', undefined, true, true) : require = J$.R(7625721, 'require', require, true, true)), false)(J$.T(7625729, './values', 21, false)), values, false, true);
            J$.P(7625937, J$.I(typeof module === 'undefined' ? module = J$.R(7625921, 'module', undefined, true, true) : module = J$.R(7625921, 'module', module, true, true)), 'exports', J$.R(7625929, 'baseSampleSize', baseSampleSize, false, true));
        } catch (J$e) {
            J$.Ex(7626009, J$e);
        } finally {
            if (J$.Sr(7626017))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

