J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(4030601, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestCouchNode/node_modules/lodash/isInteger.js');
            function isInteger(value) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(4030553, arguments.callee, this, arguments);
                            arguments = J$.N(4030561, 'arguments', arguments, true, false, false);
                            value = J$.N(4030569, 'value', value, true, false, false);
                            return J$.Rt(4030545, J$.C(218552, J$.B(519698, '==', J$.U(519690, 'typeof', J$.R(4030497, 'value', value, false, false)), J$.T(4030505, 'number', 21, false))) ? J$.B(519706, '==', J$.R(4030513, 'value', value, false, false), J$.F(4030537, J$.R(4030521, 'toInteger', toInteger, false, true), false)(J$.R(4030529, 'value', value, false, false))) : J$._());
                        } catch (J$e) {
                            J$.Ex(4030633, J$e);
                        } finally {
                            if (J$.Fr(4030641))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(4030609, 'toInteger', toInteger, false, false, false);
            isInteger = J$.N(4030625, 'isInteger', J$.T(4030617, isInteger, 12, false), true, false, false);
            var toInteger = J$.W(4030489, 'toInteger', J$.F(4030481, J$.I(typeof require === 'undefined' ? require = J$.R(4030465, 'require', undefined, true, true) : require = J$.R(4030465, 'require', require, true, true)), false)(J$.T(4030473, './toInteger', 21, false)), toInteger, false, true);
            J$.P(4030593, J$.I(typeof module === 'undefined' ? module = J$.R(4030577, 'module', undefined, true, true) : module = J$.R(4030577, 'module', module, true, true)), 'exports', J$.R(4030585, 'isInteger', isInteger, false, true));
        } catch (J$e) {
            J$.Ex(4030649, J$e);
        } finally {
            if (J$.Sr(4030657))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

