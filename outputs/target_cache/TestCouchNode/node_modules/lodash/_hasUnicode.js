J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(7682609, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestCouchNode/node_modules/lodash/_hasUnicode.js');
            function hasUnicode(string) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(7682561, arguments.callee, this, arguments);
                            arguments = J$.N(7682569, 'arguments', arguments, true, false, false);
                            string = J$.N(7682577, 'string', string, true, false, false);
                            return J$.Rt(7682553, J$.M(7682545, J$.R(7682529, 'reHasUnicode', reHasUnicode, false, true), 'test', false)(J$.R(7682537, 'string', string, false, false)));
                        } catch (J$e) {
                            J$.Ex(7682697, J$e);
                        } finally {
                            if (J$.Fr(7682705))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(7682617, 'rsAstralRange', rsAstralRange, false, false, false);
            J$.N(7682625, 'rsComboMarksRange', rsComboMarksRange, false, false, false);
            J$.N(7682633, 'reComboHalfMarksRange', reComboHalfMarksRange, false, false, false);
            J$.N(7682641, 'rsComboSymbolsRange', rsComboSymbolsRange, false, false, false);
            J$.N(7682649, 'rsComboRange', rsComboRange, false, false, false);
            J$.N(7682657, 'rsVarRange', rsVarRange, false, false, false);
            J$.N(7682665, 'rsZWJ', rsZWJ, false, false, false);
            J$.N(7682673, 'reHasUnicode', reHasUnicode, false, false, false);
            hasUnicode = J$.N(7682689, 'hasUnicode', J$.T(7682681, hasUnicode, 12, false), true, false, false);
            var rsAstralRange = J$.W(7682393, 'rsAstralRange', J$.T(7682329, '\\ud800-\\udfff', 21, false), rsAstralRange, false, true), rsComboMarksRange = J$.W(7682401, 'rsComboMarksRange', J$.T(7682337, '\\u0300-\\u036f', 21, false), rsComboMarksRange, false, true), reComboHalfMarksRange = J$.W(7682409, 'reComboHalfMarksRange', J$.T(7682345, '\\ufe20-\\ufe2f', 21, false), reComboHalfMarksRange, false, true), rsComboSymbolsRange = J$.W(7682417, 'rsComboSymbolsRange', J$.T(7682353, '\\u20d0-\\u20ff', 21, false), rsComboSymbolsRange, false, true), rsComboRange = J$.W(7682425, 'rsComboRange', J$.B(763282, '+', J$.B(763274, '+', J$.R(7682361, 'rsComboMarksRange', rsComboMarksRange, false, true), J$.R(7682369, 'reComboHalfMarksRange', reComboHalfMarksRange, false, true)), J$.R(7682377, 'rsComboSymbolsRange', rsComboSymbolsRange, false, true)), rsComboRange, false, true), rsVarRange = J$.W(7682433, 'rsVarRange', J$.T(7682385, '\\ufe0e\\ufe0f', 21, false), rsVarRange, false, true);
            var rsZWJ = J$.W(7682449, 'rsZWJ', J$.T(7682441, '\\u200d', 21, false), rsZWJ, false, true);
            var reHasUnicode = J$.W(7682521, 'reHasUnicode', J$.F(7682513, J$.I(typeof RegExp === 'undefined' ? RegExp = J$.R(7682457, 'RegExp', undefined, true, true) : RegExp = J$.R(7682457, 'RegExp', RegExp, true, true)), false)(J$.B(763322, '+', J$.B(763314, '+', J$.B(763306, '+', J$.B(763298, '+', J$.B(763290, '+', J$.T(7682465, '[', 21, false), J$.R(7682473, 'rsZWJ', rsZWJ, false, true)), J$.R(7682481, 'rsAstralRange', rsAstralRange, false, true)), J$.R(7682489, 'rsComboRange', rsComboRange, false, true)), J$.R(7682497, 'rsVarRange', rsVarRange, false, true)), J$.T(7682505, ']', 21, false))), reHasUnicode, false, true);
            J$.P(7682601, J$.I(typeof module === 'undefined' ? module = J$.R(7682585, 'module', undefined, true, true) : module = J$.R(7682585, 'module', module, true, true)), 'exports', J$.R(7682593, 'hasUnicode', hasUnicode, false, true));
        } catch (J$e) {
            J$.Ex(7682713, J$e);
        } finally {
            if (J$.Sr(7682721))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

