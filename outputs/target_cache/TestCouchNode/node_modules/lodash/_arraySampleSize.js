J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(7585265, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestCouchNode/node_modules/lodash/_arraySampleSize.js');
            function arraySampleSize(array, n) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(7585209, arguments.callee, this, arguments);
                            arguments = J$.N(7585217, 'arguments', arguments, true, false, false);
                            array = J$.N(7585225, 'array', array, true, false, false);
                            n = J$.N(7585233, 'n', n, true, false, false);
                            return J$.Rt(7585201, J$.F(7585193, J$.R(7585113, 'shuffleSelf', shuffleSelf, false, true), false)(J$.F(7585137, J$.R(7585121, 'copyArray', copyArray, false, true), false)(J$.R(7585129, 'array', array, false, false)), J$.F(7585185, J$.R(7585145, 'baseClamp', baseClamp, false, true), false)(J$.R(7585153, 'n', n, false, false), J$.T(7585161, 0, 22, false), J$.G(7585177, J$.R(7585169, 'array', array, false, false), 'length'))));
                        } catch (J$e) {
                            J$.Ex(7585313, J$e);
                        } finally {
                            if (J$.Fr(7585321))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(7585273, 'baseClamp', baseClamp, false, false, false);
            J$.N(7585281, 'copyArray', copyArray, false, false, false);
            J$.N(7585289, 'shuffleSelf', shuffleSelf, false, false, false);
            arraySampleSize = J$.N(7585305, 'arraySampleSize', J$.T(7585297, arraySampleSize, 12, false), true, false, false);
            var baseClamp = J$.W(7585089, 'baseClamp', J$.F(7585033, J$.I(typeof require === 'undefined' ? require = J$.R(7585017, 'require', undefined, true, true) : require = J$.R(7585017, 'require', require, true, true)), false)(J$.T(7585025, './_baseClamp', 21, false)), baseClamp, false, true), copyArray = J$.W(7585097, 'copyArray', J$.F(7585057, J$.I(typeof require === 'undefined' ? require = J$.R(7585041, 'require', undefined, true, true) : require = J$.R(7585041, 'require', require, true, true)), false)(J$.T(7585049, './_copyArray', 21, false)), copyArray, false, true), shuffleSelf = J$.W(7585105, 'shuffleSelf', J$.F(7585081, J$.I(typeof require === 'undefined' ? require = J$.R(7585065, 'require', undefined, true, true) : require = J$.R(7585065, 'require', require, true, true)), false)(J$.T(7585073, './_shuffleSelf', 21, false)), shuffleSelf, false, true);
            J$.P(7585257, J$.I(typeof module === 'undefined' ? module = J$.R(7585241, 'module', undefined, true, true) : module = J$.R(7585241, 'module', module, true, true)), 'exports', J$.R(7585249, 'arraySampleSize', arraySampleSize, false, true));
        } catch (J$e) {
            J$.Ex(7585329, J$e);
        } finally {
            if (J$.Sr(7585337))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

