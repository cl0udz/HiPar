J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(7803521, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestCouchNode/node_modules/lodash/escape.js');
            function escape(string) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(7803473, arguments.callee, this, arguments);
                            arguments = J$.N(7803481, 'arguments', arguments, true, false, false);
                            string = J$.N(7803489, 'string', string, true, false, false);
                            string = J$.W(7803385, 'string', J$.F(7803377, J$.R(7803361, 'toString', toString, false, true), false)(J$.R(7803369, 'string', string, false, false)), string, false, false);
                            return J$.Rt(7803465, J$.C(416112, J$.C(416104, J$.R(7803393, 'string', string, false, false)) ? J$.M(7803417, J$.R(7803401, 'reHasUnescapedHtml', reHasUnescapedHtml, false, true), 'test', false)(J$.R(7803409, 'string', string, false, false)) : J$._()) ? J$.M(7803449, J$.R(7803425, 'string', string, false, false), 'replace', false)(J$.R(7803433, 'reUnescapedHtml', reUnescapedHtml, false, true), J$.R(7803441, 'escapeHtmlChar', escapeHtmlChar, false, true)) : J$.R(7803457, 'string', string, false, false));
                        } catch (J$e) {
                            J$.Ex(7803577, J$e);
                        } finally {
                            if (J$.Fr(7803585))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(7803529, 'escapeHtmlChar', escapeHtmlChar, false, false, false);
            J$.N(7803537, 'toString', toString, false, false, false);
            J$.N(7803545, 'reUnescapedHtml', reUnescapedHtml, false, false, false);
            J$.N(7803553, 'reHasUnescapedHtml', reHasUnescapedHtml, false, false, false);
            escape = J$.N(7803569, 'escape', J$.T(7803561, escape, 12, false), true, false, false);
            var escapeHtmlChar = J$.W(7803289, 'escapeHtmlChar', J$.F(7803257, J$.I(typeof require === 'undefined' ? require = J$.R(7803241, 'require', undefined, true, true) : require = J$.R(7803241, 'require', require, true, true)), false)(J$.T(7803249, './_escapeHtmlChar', 21, false)), escapeHtmlChar, false, true), toString = J$.W(7803297, 'toString', J$.F(7803281, J$.I(typeof require === 'undefined' ? require = J$.R(7803265, 'require', undefined, true, true) : require = J$.R(7803265, 'require', require, true, true)), false)(J$.T(7803273, './toString', 21, false)), toString, false, true);
            var reUnescapedHtml = J$.W(7803345, 'reUnescapedHtml', J$.T(7803305, /[&<>"']/g, 14, false), reUnescapedHtml, false, true), reHasUnescapedHtml = J$.W(7803353, 'reHasUnescapedHtml', J$.F(7803337, J$.I(typeof RegExp === 'undefined' ? RegExp = J$.R(7803313, 'RegExp', undefined, true, true) : RegExp = J$.R(7803313, 'RegExp', RegExp, true, true)), false)(J$.G(7803329, J$.R(7803321, 'reUnescapedHtml', reUnescapedHtml, false, true), 'source')), reHasUnescapedHtml, false, true);
            J$.P(7803513, J$.I(typeof module === 'undefined' ? module = J$.R(7803497, 'module', undefined, true, true) : module = J$.R(7803497, 'module', module, true, true)), 'exports', J$.R(7803505, 'escape', escape, false, true));
        } catch (J$e) {
            J$.Ex(7803593, J$e);
        } finally {
            if (J$.Sr(7803601))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

