J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(4441337, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestCouchNode/node_modules/lodash/trimStart.js');
            function trimStart(string, chars, guard) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(4441257, arguments.callee, this, arguments);
                            arguments = J$.N(4441265, 'arguments', arguments, true, false, false);
                            string = J$.N(4441273, 'string', string, true, false, false);
                            chars = J$.N(4441281, 'chars', chars, true, false, false);
                            guard = J$.N(4441289, 'guard', guard, true, false, false);
                            J$.N(4441297, 'strSymbols', strSymbols, false, false, false);
                            J$.N(4441305, 'start', start, false, false, false);
                            string = J$.W(4440977, 'string', J$.F(4440969, J$.R(4440953, 'toString', toString, false, true), false)(J$.R(4440961, 'string', string, false, false)), string, false, false);
                            if (J$.C(247344, J$.C(247336, J$.R(4440985, 'string', string, false, false)) ? J$.C(247328, J$.R(4440993, 'guard', guard, false, false)) ? J$._() : J$.B(550698, '===', J$.R(4441001, 'chars', chars, false, false), J$.T(4441009, undefined, 24, false)) : J$._())) {
                                return J$.Rt(4441049, J$.M(4441041, J$.R(4441017, 'string', string, false, false), 'replace', false)(J$.R(4441025, 'reTrimStart', reTrimStart, false, true), J$.T(4441033, '', 21, false)));
                            }
                            if (J$.C(247360, J$.C(247352, J$.U(550706, '!', J$.R(4441057, 'string', string, false, false))) ? J$._() : J$.U(550714, '!', chars = J$.W(4441089, 'chars', J$.F(4441081, J$.R(4441065, 'baseToString', baseToString, false, true), false)(J$.R(4441073, 'chars', chars, false, false)), chars, false, false)))) {
                                return J$.Rt(4441105, J$.R(4441097, 'string', string, false, false));
                            }
                            var strSymbols = J$.W(4441185, 'strSymbols', J$.F(4441129, J$.R(4441113, 'stringToArray', stringToArray, false, true), false)(J$.R(4441121, 'string', string, false, false)), strSymbols, false, false), start = J$.W(4441193, 'start', J$.F(4441177, J$.R(4441137, 'charsStartIndex', charsStartIndex, false, true), false)(J$.R(4441145, 'strSymbols', strSymbols, false, false), J$.F(4441169, J$.R(4441153, 'stringToArray', stringToArray, false, true), false)(J$.R(4441161, 'chars', chars, false, false))), start, false, false);
                            return J$.Rt(4441249, J$.M(4441241, J$.F(4441225, J$.R(4441201, 'castSlice', castSlice, false, true), false)(J$.R(4441209, 'strSymbols', strSymbols, false, false), J$.R(4441217, 'start', start, false, false)), 'join', false)(J$.T(4441233, '', 21, false)));
                        } catch (J$e) {
                            J$.Ex(4441409, J$e);
                        } finally {
                            if (J$.Fr(4441417))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(4441345, 'baseToString', baseToString, false, false, false);
            J$.N(4441353, 'castSlice', castSlice, false, false, false);
            J$.N(4441361, 'charsStartIndex', charsStartIndex, false, false, false);
            J$.N(4441369, 'stringToArray', stringToArray, false, false, false);
            J$.N(4441377, 'toString', toString, false, false, false);
            J$.N(4441385, 'reTrimStart', reTrimStart, false, false, false);
            trimStart = J$.N(4441401, 'trimStart', J$.T(4441393, trimStart, 12, false), true, false, false);
            var baseToString = J$.W(4440897, 'baseToString', J$.F(4440793, J$.I(typeof require === 'undefined' ? require = J$.R(4440777, 'require', undefined, true, true) : require = J$.R(4440777, 'require', require, true, true)), false)(J$.T(4440785, './_baseToString', 21, false)), baseToString, false, true), castSlice = J$.W(4440905, 'castSlice', J$.F(4440817, J$.I(typeof require === 'undefined' ? require = J$.R(4440801, 'require', undefined, true, true) : require = J$.R(4440801, 'require', require, true, true)), false)(J$.T(4440809, './_castSlice', 21, false)), castSlice, false, true), charsStartIndex = J$.W(4440913, 'charsStartIndex', J$.F(4440841, J$.I(typeof require === 'undefined' ? require = J$.R(4440825, 'require', undefined, true, true) : require = J$.R(4440825, 'require', require, true, true)), false)(J$.T(4440833, './_charsStartIndex', 21, false)), charsStartIndex, false, true), stringToArray = J$.W(4440921, 'stringToArray', J$.F(4440865, J$.I(typeof require === 'undefined' ? require = J$.R(4440849, 'require', undefined, true, true) : require = J$.R(4440849, 'require', require, true, true)), false)(J$.T(4440857, './_stringToArray', 21, false)), stringToArray, false, true), toString = J$.W(4440929, 'toString', J$.F(4440889, J$.I(typeof require === 'undefined' ? require = J$.R(4440873, 'require', undefined, true, true) : require = J$.R(4440873, 'require', require, true, true)), false)(J$.T(4440881, './toString', 21, false)), toString, false, true);
            var reTrimStart = J$.W(4440945, 'reTrimStart', J$.T(4440937, /^\s+/, 14, false), reTrimStart, false, true);
            J$.P(4441329, J$.I(typeof module === 'undefined' ? module = J$.R(4441313, 'module', undefined, true, true) : module = J$.R(4441313, 'module', module, true, true)), 'exports', J$.R(4441321, 'trimStart', trimStart, false, true));
        } catch (J$e) {
            J$.Ex(4441425, J$e);
        } finally {
            if (J$.Sr(4441433))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

