J$.noInstrEval = false;
jalangiLabel2:
    while (true) {
        try {
            J$.Se(7663201, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestCouchNode/node_modules/lodash/_createRound.js');
            function createRound(methodName) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(7663145, arguments.callee, this, arguments);
                            arguments = J$.N(7663153, 'arguments', arguments, true, false, false);
                            methodName = J$.N(7663161, 'methodName', methodName, true, false, false);
                            J$.N(7663169, 'func', func, false, false, false);
                            var func = J$.W(7662625, 'func', J$.G(7662617, J$.I(typeof Math === 'undefined' ? Math = J$.R(7662601, 'Math', undefined, true, true) : Math = J$.R(7662601, 'Math', Math, true, true)), J$.R(7662609, 'methodName', methodName, false, false)), func, false, false);
                            return J$.Rt(7663137, J$.T(7663129, function (number, precision) {
                                jalangiLabel0:
                                    while (true) {
                                        try {
                                            J$.Fe(7663081, arguments.callee, this, arguments);
                                            arguments = J$.N(7663089, 'arguments', arguments, true, false, false);
                                            number = J$.N(7663097, 'number', number, true, false, false);
                                            precision = J$.N(7663105, 'precision', precision, true, false, false);
                                            J$.N(7663113, 'pair', pair, false, false, false);
                                            J$.N(7663121, 'value', value, false, false, false);
                                            number = J$.W(7662657, 'number', J$.F(7662649, J$.R(7662633, 'toNumber', toNumber, false, true), false)(J$.R(7662641, 'number', number, false, false)), number, false, false);
                                            precision = J$.W(7662737, 'precision', J$.C(407584, J$.B(762026, '==', J$.R(7662665, 'precision', precision, false, false), J$.T(7662673, null, 25, false))) ? J$.T(7662681, 0, 22, false) : J$.F(7662729, J$.R(7662689, 'nativeMin', nativeMin, false, true), false)(J$.F(7662713, J$.R(7662697, 'toInteger', toInteger, false, true), false)(J$.R(7662705, 'precision', precision, false, false)), J$.T(7662721, 292, 22, false)), precision, false, false);
                                            if (J$.C(407600, J$.C(407592, J$.R(7662745, 'precision', precision, false, false)) ? J$.F(7662769, J$.R(7662753, 'nativeIsFinite', nativeIsFinite, false, true), false)(J$.R(7662761, 'number', number, false, false)) : J$._())) {
                                                var pair = J$.W(7662905, 'pair', J$.M(7662817, J$.B(762034, '+', J$.F(7662793, J$.R(7662777, 'toString', toString, false, true), false)(J$.R(7662785, 'number', number, false, false)), J$.T(7662801, 'e', 21, false)), 'split', false)(J$.T(7662809, 'e', 21, false)), pair, false, false), value = J$.W(7662913, 'value', J$.F(7662897, J$.R(7662825, 'func', func, false, false), false)(J$.B(762066, '+', J$.B(762042, '+', J$.G(7662849, J$.R(7662833, 'pair', pair, false, false), J$.T(7662841, 0, 22, false)), J$.T(7662857, 'e', 21, false)), J$.B(762058, '+', J$.U(762050, '+', J$.G(7662881, J$.R(7662865, 'pair', pair, false, false), J$.T(7662873, 1, 22, false))), J$.R(7662889, 'precision', precision, false, false)))), value, false, false);
                                                pair = J$.W(7662969, 'pair', J$.M(7662961, J$.B(762074, '+', J$.F(7662937, J$.R(7662921, 'toString', toString, false, true), false)(J$.R(7662929, 'value', value, false, false)), J$.T(7662945, 'e', 21, false)), 'split', false)(J$.T(7662953, 'e', 21, false)), pair, false, false);
                                                return J$.Rt(7663041, J$.U(762114, '+', J$.B(762106, '+', J$.B(762082, '+', J$.G(7662993, J$.R(7662977, 'pair', pair, false, false), J$.T(7662985, 0, 22, false)), J$.T(7663001, 'e', 21, false)), J$.B(762098, '-', J$.U(762090, '+', J$.G(7663025, J$.R(7663009, 'pair', pair, false, false), J$.T(7663017, 1, 22, false))), J$.R(7663033, 'precision', precision, false, false)))));
                                            }
                                            return J$.Rt(7663073, J$.F(7663065, J$.R(7663049, 'func', func, false, false), false)(J$.R(7663057, 'number', number, false, false)));
                                        } catch (J$e) {
                                            J$.Ex(7663273, J$e);
                                        } finally {
                                            if (J$.Fr(7663281))
                                                continue jalangiLabel0;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                        } catch (J$e) {
                            J$.Ex(7663289, J$e);
                        } finally {
                            if (J$.Fr(7663297))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(7663209, 'root', root, false, false, false);
            J$.N(7663217, 'toInteger', toInteger, false, false, false);
            J$.N(7663225, 'toNumber', toNumber, false, false, false);
            J$.N(7663233, 'toString', toString, false, false, false);
            J$.N(7663241, 'nativeIsFinite', nativeIsFinite, false, false, false);
            J$.N(7663249, 'nativeMin', nativeMin, false, false, false);
            createRound = J$.N(7663265, 'createRound', J$.T(7663257, createRound, 12, false), true, false, false);
            var root = J$.W(7662521, 'root', J$.F(7662441, J$.I(typeof require === 'undefined' ? require = J$.R(7662425, 'require', undefined, true, true) : require = J$.R(7662425, 'require', require, true, true)), false)(J$.T(7662433, './_root', 21, false)), root, false, true), toInteger = J$.W(7662529, 'toInteger', J$.F(7662465, J$.I(typeof require === 'undefined' ? require = J$.R(7662449, 'require', undefined, true, true) : require = J$.R(7662449, 'require', require, true, true)), false)(J$.T(7662457, './toInteger', 21, false)), toInteger, false, true), toNumber = J$.W(7662537, 'toNumber', J$.F(7662489, J$.I(typeof require === 'undefined' ? require = J$.R(7662473, 'require', undefined, true, true) : require = J$.R(7662473, 'require', require, true, true)), false)(J$.T(7662481, './toNumber', 21, false)), toNumber, false, true), toString = J$.W(7662545, 'toString', J$.F(7662513, J$.I(typeof require === 'undefined' ? require = J$.R(7662497, 'require', undefined, true, true) : require = J$.R(7662497, 'require', require, true, true)), false)(J$.T(7662505, './toString', 21, false)), toString, false, true);
            var nativeIsFinite = J$.W(7662585, 'nativeIsFinite', J$.G(7662561, J$.R(7662553, 'root', root, false, true), 'isFinite'), nativeIsFinite, false, true), nativeMin = J$.W(7662593, 'nativeMin', J$.G(7662577, J$.I(typeof Math === 'undefined' ? Math = J$.R(7662569, 'Math', undefined, true, true) : Math = J$.R(7662569, 'Math', Math, true, true)), 'min'), nativeMin, false, true);
            J$.P(7663193, J$.I(typeof module === 'undefined' ? module = J$.R(7663177, 'module', undefined, true, true) : module = J$.R(7663177, 'module', module, true, true)), 'exports', J$.R(7663185, 'createRound', createRound, false, true));
        } catch (J$e) {
            J$.Ex(7663305, J$e);
        } finally {
            if (J$.Sr(7663313))
                continue jalangiLabel2;
            else
                break jalangiLabel2;
        }
    }
// JALANGI DO NOT INSTRUMENT

