J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(4389529, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestCouchNode/node_modules/lodash/map.js');
            function map(collection, iteratee) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(4389465, arguments.callee, this, arguments);
                            arguments = J$.N(4389473, 'arguments', arguments, true, false, false);
                            collection = J$.N(4389481, 'collection', collection, true, false, false);
                            iteratee = J$.N(4389489, 'iteratee', iteratee, true, false, false);
                            J$.N(4389497, 'func', func, false, false, false);
                            var func = J$.W(4389393, 'func', J$.C(245216, J$.F(4389369, J$.R(4389353, 'isArray', isArray, false, true), false)(J$.R(4389361, 'collection', collection, false, false))) ? J$.R(4389377, 'arrayMap', arrayMap, false, true) : J$.R(4389385, 'baseMap', baseMap, false, true), func, false, false);
                            return J$.Rt(4389457, J$.F(4389449, J$.R(4389401, 'func', func, false, false), false)(J$.R(4389409, 'collection', collection, false, false), J$.F(4389441, J$.R(4389417, 'baseIteratee', baseIteratee, false, true), false)(J$.R(4389425, 'iteratee', iteratee, false, false), J$.T(4389433, 3, 22, false))));
                        } catch (J$e) {
                            J$.Ex(4389585, J$e);
                        } finally {
                            if (J$.Fr(4389593))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(4389537, 'arrayMap', arrayMap, false, false, false);
            J$.N(4389545, 'baseIteratee', baseIteratee, false, false, false);
            J$.N(4389553, 'baseMap', baseMap, false, false, false);
            J$.N(4389561, 'isArray', isArray, false, false, false);
            map = J$.N(4389577, 'map', J$.T(4389569, map, 12, false), true, false, false);
            var arrayMap = J$.W(4389321, 'arrayMap', J$.F(4389241, J$.I(typeof require === 'undefined' ? require = J$.R(4389225, 'require', undefined, true, true) : require = J$.R(4389225, 'require', require, true, true)), false)(J$.T(4389233, './_arrayMap', 21, false)), arrayMap, false, true), baseIteratee = J$.W(4389329, 'baseIteratee', J$.F(4389265, J$.I(typeof require === 'undefined' ? require = J$.R(4389249, 'require', undefined, true, true) : require = J$.R(4389249, 'require', require, true, true)), false)(J$.T(4389257, './_baseIteratee', 21, false)), baseIteratee, false, true), baseMap = J$.W(4389337, 'baseMap', J$.F(4389289, J$.I(typeof require === 'undefined' ? require = J$.R(4389273, 'require', undefined, true, true) : require = J$.R(4389273, 'require', require, true, true)), false)(J$.T(4389281, './_baseMap', 21, false)), baseMap, false, true), isArray = J$.W(4389345, 'isArray', J$.F(4389313, J$.I(typeof require === 'undefined' ? require = J$.R(4389297, 'require', undefined, true, true) : require = J$.R(4389297, 'require', require, true, true)), false)(J$.T(4389305, './isArray', 21, false)), isArray, false, true);
            J$.P(4389521, J$.I(typeof module === 'undefined' ? module = J$.R(4389505, 'module', undefined, true, true) : module = J$.R(4389505, 'module', module, true, true)), 'exports', J$.R(4389513, 'map', map, false, true));
        } catch (J$e) {
            J$.Ex(4389601, J$e);
        } finally {
            if (J$.Sr(4389609))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

