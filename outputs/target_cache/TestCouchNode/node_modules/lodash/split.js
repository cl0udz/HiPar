J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(4423529, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestCouchNode/node_modules/lodash/split.js');
            function split(string, separator, limit) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(4423465, arguments.callee, this, arguments);
                            arguments = J$.N(4423473, 'arguments', arguments, true, false, false);
                            string = J$.N(4423481, 'string', string, true, false, false);
                            separator = J$.N(4423489, 'separator', separator, true, false, false);
                            limit = J$.N(4423497, 'limit', limit, true, false, false);
                            if (J$.C(246424, J$.C(246416, J$.C(246408, J$.R(4423041, 'limit', limit, false, false)) ? J$.B(549762, '!=', J$.U(549754, 'typeof', J$.R(4423049, 'limit', limit, false, false)), J$.T(4423057, 'number', 21, false)) : J$._()) ? J$.F(4423097, J$.R(4423065, 'isIterateeCall', isIterateeCall, false, true), false)(J$.R(4423073, 'string', string, false, false), J$.R(4423081, 'separator', separator, false, false), J$.R(4423089, 'limit', limit, false, false)) : J$._())) {
                                separator = J$.W(4423121, 'separator', limit = J$.W(4423113, 'limit', J$.T(4423105, undefined, 24, false), limit, false, false), separator, false, false);
                            }
                            limit = J$.W(4423169, 'limit', J$.C(246432, J$.B(549770, '===', J$.R(4423129, 'limit', limit, false, false), J$.T(4423137, undefined, 24, false))) ? J$.R(4423145, 'MAX_ARRAY_LENGTH', MAX_ARRAY_LENGTH, false, true) : J$.B(549778, '>>>', J$.R(4423153, 'limit', limit, false, false), J$.T(4423161, 0, 22, false)), limit, false, false);
                            if (J$.C(246440, J$.U(549786, '!', J$.R(4423177, 'limit', limit, false, false)))) {
                                return J$.Rt(4423193, J$.T(4423185, [], 10, false));
                            }
                            string = J$.W(4423225, 'string', J$.F(4423217, J$.R(4423201, 'toString', toString, false, true), false)(J$.R(4423209, 'string', string, false, false)), string, false, false);
                            if (J$.C(246488, J$.C(246464, J$.R(4423233, 'string', string, false, false)) ? J$.C(246456, J$.B(549802, '==', J$.U(549794, 'typeof', J$.R(4423241, 'separator', separator, false, false)), J$.T(4423249, 'string', 21, false))) ? J$._() : J$.C(246448, J$.B(549810, '!=', J$.R(4423257, 'separator', separator, false, false), J$.T(4423265, null, 25, false))) ? J$.U(549818, '!', J$.F(4423289, J$.R(4423273, 'isRegExp', isRegExp, false, true), false)(J$.R(4423281, 'separator', separator, false, false))) : J$._() : J$._())) {
                                separator = J$.W(4423321, 'separator', J$.F(4423313, J$.R(4423297, 'baseToString', baseToString, false, true), false)(J$.R(4423305, 'separator', separator, false, false)), separator, false, false);
                                if (J$.C(246480, J$.C(246472, J$.U(549826, '!', J$.R(4423329, 'separator', separator, false, false))) ? J$.F(4423353, J$.R(4423337, 'hasUnicode', hasUnicode, false, true), false)(J$.R(4423345, 'string', string, false, false)) : J$._())) {
                                    return J$.Rt(4423417, J$.F(4423409, J$.R(4423361, 'castSlice', castSlice, false, true), false)(J$.F(4423385, J$.R(4423369, 'stringToArray', stringToArray, false, true), false)(J$.R(4423377, 'string', string, false, false)), J$.T(4423393, 0, 22, false), J$.R(4423401, 'limit', limit, false, false)));
                                }
                            }
                            return J$.Rt(4423457, J$.M(4423449, J$.R(4423425, 'string', string, false, false), 'split', false)(J$.R(4423433, 'separator', separator, false, false), J$.R(4423441, 'limit', limit, false, false)));
                        } catch (J$e) {
                            J$.Ex(4423617, J$e);
                        } finally {
                            if (J$.Fr(4423625))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(4423537, 'baseToString', baseToString, false, false, false);
            J$.N(4423545, 'castSlice', castSlice, false, false, false);
            J$.N(4423553, 'hasUnicode', hasUnicode, false, false, false);
            J$.N(4423561, 'isIterateeCall', isIterateeCall, false, false, false);
            J$.N(4423569, 'isRegExp', isRegExp, false, false, false);
            J$.N(4423577, 'stringToArray', stringToArray, false, false, false);
            J$.N(4423585, 'toString', toString, false, false, false);
            J$.N(4423593, 'MAX_ARRAY_LENGTH', MAX_ARRAY_LENGTH, false, false, false);
            split = J$.N(4423609, 'split', J$.T(4423601, split, 12, false), true, false, false);
            var baseToString = J$.W(4422969, 'baseToString', J$.F(4422817, J$.I(typeof require === 'undefined' ? require = J$.R(4422801, 'require', undefined, true, true) : require = J$.R(4422801, 'require', require, true, true)), false)(J$.T(4422809, './_baseToString', 21, false)), baseToString, false, true), castSlice = J$.W(4422977, 'castSlice', J$.F(4422841, J$.I(typeof require === 'undefined' ? require = J$.R(4422825, 'require', undefined, true, true) : require = J$.R(4422825, 'require', require, true, true)), false)(J$.T(4422833, './_castSlice', 21, false)), castSlice, false, true), hasUnicode = J$.W(4422985, 'hasUnicode', J$.F(4422865, J$.I(typeof require === 'undefined' ? require = J$.R(4422849, 'require', undefined, true, true) : require = J$.R(4422849, 'require', require, true, true)), false)(J$.T(4422857, './_hasUnicode', 21, false)), hasUnicode, false, true), isIterateeCall = J$.W(4422993, 'isIterateeCall', J$.F(4422889, J$.I(typeof require === 'undefined' ? require = J$.R(4422873, 'require', undefined, true, true) : require = J$.R(4422873, 'require', require, true, true)), false)(J$.T(4422881, './_isIterateeCall', 21, false)), isIterateeCall, false, true), isRegExp = J$.W(4423001, 'isRegExp', J$.F(4422913, J$.I(typeof require === 'undefined' ? require = J$.R(4422897, 'require', undefined, true, true) : require = J$.R(4422897, 'require', require, true, true)), false)(J$.T(4422905, './isRegExp', 21, false)), isRegExp, false, true), stringToArray = J$.W(4423009, 'stringToArray', J$.F(4422937, J$.I(typeof require === 'undefined' ? require = J$.R(4422921, 'require', undefined, true, true) : require = J$.R(4422921, 'require', require, true, true)), false)(J$.T(4422929, './_stringToArray', 21, false)), stringToArray, false, true), toString = J$.W(4423017, 'toString', J$.F(4422961, J$.I(typeof require === 'undefined' ? require = J$.R(4422945, 'require', undefined, true, true) : require = J$.R(4422945, 'require', require, true, true)), false)(J$.T(4422953, './toString', 21, false)), toString, false, true);
            var MAX_ARRAY_LENGTH = J$.W(4423033, 'MAX_ARRAY_LENGTH', J$.T(4423025, 4294967295, 22, false), MAX_ARRAY_LENGTH, false, true);
            J$.P(4423521, J$.I(typeof module === 'undefined' ? module = J$.R(4423505, 'module', undefined, true, true) : module = J$.R(4423505, 'module', module, true, true)), 'exports', J$.R(4423513, 'split', split, false, true));
        } catch (J$e) {
            J$.Ex(4423633, J$e);
        } finally {
            if (J$.Sr(4423641))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

