J$.noInstrEval = false;
jalangiLabel2:
    while (true) {
        try {
            J$.Se(4390465, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestCouchNode/node_modules/lodash/mapValues.js');
            function mapValues(object, iteratee) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(4390401, arguments.callee, this, arguments);
                            arguments = J$.N(4390409, 'arguments', arguments, true, false, false);
                            object = J$.N(4390417, 'object', object, true, false, false);
                            iteratee = J$.N(4390425, 'iteratee', iteratee, true, false, false);
                            J$.N(4390433, 'result', result, false, false, false);
                            var result = J$.W(4390193, 'result', J$.T(4390185, {}, 11, false), result, false, false);
                            iteratee = J$.W(4390233, 'iteratee', J$.F(4390225, J$.R(4390201, 'baseIteratee', baseIteratee, false, true), false)(J$.R(4390209, 'iteratee', iteratee, false, false), J$.T(4390217, 3, 22, false)), iteratee, false, false);
                            J$.F(4390377, J$.R(4390241, 'baseForOwn', baseForOwn, false, true), false)(J$.R(4390249, 'object', object, false, false), J$.T(4390369, function (value, key, object) {
                                jalangiLabel0:
                                    while (true) {
                                        try {
                                            J$.Fe(4390329, arguments.callee, this, arguments);
                                            arguments = J$.N(4390337, 'arguments', arguments, true, false, false);
                                            value = J$.N(4390345, 'value', value, true, false, false);
                                            key = J$.N(4390353, 'key', key, true, false, false);
                                            object = J$.N(4390361, 'object', object, true, false, false);
                                            J$.F(4390321, J$.R(4390257, 'baseAssignValue', baseAssignValue, false, true), false)(J$.R(4390265, 'result', result, false, false), J$.R(4390273, 'key', key, false, false), J$.F(4390313, J$.R(4390281, 'iteratee', iteratee, false, false), false)(J$.R(4390289, 'value', value, false, false), J$.R(4390297, 'key', key, false, false), J$.R(4390305, 'object', object, false, false)));
                                        } catch (J$e) {
                                            J$.Ex(4390513, J$e);
                                        } finally {
                                            if (J$.Fr(4390521))
                                                continue jalangiLabel0;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            return J$.Rt(4390393, J$.R(4390385, 'result', result, false, false));
                        } catch (J$e) {
                            J$.Ex(4390529, J$e);
                        } finally {
                            if (J$.Fr(4390537))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(4390473, 'baseAssignValue', baseAssignValue, false, false, false);
            J$.N(4390481, 'baseForOwn', baseForOwn, false, false, false);
            J$.N(4390489, 'baseIteratee', baseIteratee, false, false, false);
            mapValues = J$.N(4390505, 'mapValues', J$.T(4390497, mapValues, 12, false), true, false, false);
            var baseAssignValue = J$.W(4390161, 'baseAssignValue', J$.F(4390105, J$.I(typeof require === 'undefined' ? require = J$.R(4390089, 'require', undefined, true, true) : require = J$.R(4390089, 'require', require, true, true)), false)(J$.T(4390097, './_baseAssignValue', 21, false)), baseAssignValue, false, true), baseForOwn = J$.W(4390169, 'baseForOwn', J$.F(4390129, J$.I(typeof require === 'undefined' ? require = J$.R(4390113, 'require', undefined, true, true) : require = J$.R(4390113, 'require', require, true, true)), false)(J$.T(4390121, './_baseForOwn', 21, false)), baseForOwn, false, true), baseIteratee = J$.W(4390177, 'baseIteratee', J$.F(4390153, J$.I(typeof require === 'undefined' ? require = J$.R(4390137, 'require', undefined, true, true) : require = J$.R(4390137, 'require', require, true, true)), false)(J$.T(4390145, './_baseIteratee', 21, false)), baseIteratee, false, true);
            J$.P(4390457, J$.I(typeof module === 'undefined' ? module = J$.R(4390441, 'module', undefined, true, true) : module = J$.R(4390441, 'module', module, true, true)), 'exports', J$.R(4390449, 'mapValues', mapValues, false, true));
        } catch (J$e) {
            J$.Ex(4390545, J$e);
        } finally {
            if (J$.Sr(4390553))
                continue jalangiLabel2;
            else
                break jalangiLabel2;
        }
    }
// JALANGI DO NOT INSTRUMENT

