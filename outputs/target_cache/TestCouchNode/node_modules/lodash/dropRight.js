J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(7801561, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestCouchNode/node_modules/lodash/dropRight.js');
            function dropRight(array, n, guard) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(7801489, arguments.callee, this, arguments);
                            arguments = J$.N(7801497, 'arguments', arguments, true, false, false);
                            array = J$.N(7801505, 'array', array, true, false, false);
                            n = J$.N(7801513, 'n', n, true, false, false);
                            guard = J$.N(7801521, 'guard', guard, true, false, false);
                            J$.N(7801529, 'length', length, false, false, false);
                            var length = J$.W(7801297, 'length', J$.C(416000, J$.B(773378, '==', J$.R(7801257, 'array', array, false, false), J$.T(7801265, null, 25, false))) ? J$.T(7801273, 0, 22, false) : J$.G(7801289, J$.R(7801281, 'array', array, false, false), 'length'), length, false, false);
                            if (J$.C(416008, J$.U(773386, '!', J$.R(7801305, 'length', length, false, false)))) {
                                return J$.Rt(7801321, J$.T(7801313, [], 10, false));
                            }
                            n = J$.W(7801385, 'n', J$.C(416024, J$.C(416016, J$.R(7801329, 'guard', guard, false, false)) ? J$._() : J$.B(773394, '===', J$.R(7801337, 'n', n, false, false), J$.T(7801345, undefined, 24, false))) ? J$.T(7801353, 1, 22, false) : J$.F(7801377, J$.R(7801361, 'toInteger', toInteger, false, true), false)(J$.R(7801369, 'n', n, false, false)), n, false, false);
                            n = J$.W(7801409, 'n', J$.B(773402, '-', J$.R(7801393, 'length', length, false, false), J$.R(7801401, 'n', n, false, false)), n, false, false);
                            return J$.Rt(7801481, J$.F(7801473, J$.R(7801417, 'baseSlice', baseSlice, false, true), false)(J$.R(7801425, 'array', array, false, false), J$.T(7801433, 0, 22, false), J$.C(416032, J$.B(773410, '<', J$.R(7801441, 'n', n, false, false), J$.T(7801449, 0, 22, false))) ? J$.T(7801457, 0, 22, false) : J$.R(7801465, 'n', n, false, false)));
                        } catch (J$e) {
                            J$.Ex(7801601, J$e);
                        } finally {
                            if (J$.Fr(7801609))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(7801569, 'baseSlice', baseSlice, false, false, false);
            J$.N(7801577, 'toInteger', toInteger, false, false, false);
            dropRight = J$.N(7801593, 'dropRight', J$.T(7801585, dropRight, 12, false), true, false, false);
            var baseSlice = J$.W(7801241, 'baseSlice', J$.F(7801209, J$.I(typeof require === 'undefined' ? require = J$.R(7801193, 'require', undefined, true, true) : require = J$.R(7801193, 'require', require, true, true)), false)(J$.T(7801201, './_baseSlice', 21, false)), baseSlice, false, true), toInteger = J$.W(7801249, 'toInteger', J$.F(7801233, J$.I(typeof require === 'undefined' ? require = J$.R(7801217, 'require', undefined, true, true) : require = J$.R(7801217, 'require', require, true, true)), false)(J$.T(7801225, './toInteger', 21, false)), toInteger, false, true);
            J$.P(7801553, J$.I(typeof module === 'undefined' ? module = J$.R(7801537, 'module', undefined, true, true) : module = J$.R(7801537, 'module', module, true, true)), 'exports', J$.R(7801545, 'dropRight', dropRight, false, true));
        } catch (J$e) {
            J$.Ex(7801617, J$e);
        } finally {
            if (J$.Sr(7801625))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

