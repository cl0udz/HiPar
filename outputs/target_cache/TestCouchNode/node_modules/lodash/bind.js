J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(7720121, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestCouchNode/node_modules/lodash/bind.js');
            J$.N(7720129, 'baseRest', baseRest, false, false, false);
            J$.N(7720137, 'createWrap', createWrap, false, false, false);
            J$.N(7720145, 'getHolder', getHolder, false, false, false);
            J$.N(7720153, 'replaceHolders', replaceHolders, false, false, false);
            J$.N(7720161, 'WRAP_BIND_FLAG', WRAP_BIND_FLAG, false, false, false);
            J$.N(7720169, 'WRAP_PARTIAL_FLAG', WRAP_PARTIAL_FLAG, false, false, false);
            J$.N(7720177, 'bind', bind, false, false, false);
            var baseRest = J$.W(7719745, 'baseRest', J$.F(7719665, J$.I(typeof require === 'undefined' ? require = J$.R(7719649, 'require', undefined, true, true) : require = J$.R(7719649, 'require', require, true, true)), false)(J$.T(7719657, './_baseRest', 21, false)), baseRest, false, true), createWrap = J$.W(7719753, 'createWrap', J$.F(7719689, J$.I(typeof require === 'undefined' ? require = J$.R(7719673, 'require', undefined, true, true) : require = J$.R(7719673, 'require', require, true, true)), false)(J$.T(7719681, './_createWrap', 21, false)), createWrap, false, true), getHolder = J$.W(7719761, 'getHolder', J$.F(7719713, J$.I(typeof require === 'undefined' ? require = J$.R(7719697, 'require', undefined, true, true) : require = J$.R(7719697, 'require', require, true, true)), false)(J$.T(7719705, './_getHolder', 21, false)), getHolder, false, true), replaceHolders = J$.W(7719769, 'replaceHolders', J$.F(7719737, J$.I(typeof require === 'undefined' ? require = J$.R(7719721, 'require', undefined, true, true) : require = J$.R(7719721, 'require', require, true, true)), false)(J$.T(7719729, './_replaceHolders', 21, false)), replaceHolders, false, true);
            var WRAP_BIND_FLAG = J$.W(7719793, 'WRAP_BIND_FLAG', J$.T(7719777, 1, 22, false), WRAP_BIND_FLAG, false, true), WRAP_PARTIAL_FLAG = J$.W(7719801, 'WRAP_PARTIAL_FLAG', J$.T(7719785, 32, 22, false), WRAP_PARTIAL_FLAG, false, true);
            var bind = J$.W(7720065, 'bind', J$.F(7720057, J$.R(7719809, 'baseRest', baseRest, false, true), false)(J$.T(7720049, function (func, thisArg, partials) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(7719993, arguments.callee, this, arguments);
                            arguments = J$.N(7720001, 'arguments', arguments, true, false, false);
                            func = J$.N(7720009, 'func', func, true, false, false);
                            thisArg = J$.N(7720017, 'thisArg', thisArg, true, false, false);
                            partials = J$.N(7720025, 'partials', partials, true, false, false);
                            J$.N(7720033, 'bitmask', bitmask, false, false, false);
                            J$.N(7720041, 'holders', holders, false, false, false);
                            var bitmask = J$.W(7719825, 'bitmask', J$.R(7719817, 'WRAP_BIND_FLAG', WRAP_BIND_FLAG, false, true), bitmask, false, false);
                            if (J$.C(410432, J$.G(7719841, J$.R(7719833, 'partials', partials, false, false), 'length'))) {
                                var holders = J$.W(7719897, 'holders', J$.F(7719889, J$.R(7719849, 'replaceHolders', replaceHolders, false, true), false)(J$.R(7719857, 'partials', partials, false, false), J$.F(7719881, J$.R(7719865, 'getHolder', getHolder, false, true), false)(J$.R(7719873, 'bind', bind, false, true))), holders, false, false);
                                bitmask = J$.W(7719921, 'bitmask', J$.B(766322, '|', J$.R(7719913, 'bitmask', bitmask, false, false), J$.R(7719905, 'WRAP_PARTIAL_FLAG', WRAP_PARTIAL_FLAG, false, true)), bitmask, false, false);
                            }
                            return J$.Rt(7719985, J$.F(7719977, J$.R(7719929, 'createWrap', createWrap, false, true), false)(J$.R(7719937, 'func', func, false, false), J$.R(7719945, 'bitmask', bitmask, false, false), J$.R(7719953, 'thisArg', thisArg, false, false), J$.R(7719961, 'partials', partials, false, false), J$.R(7719969, 'holders', holders, false, false)));
                        } catch (J$e) {
                            J$.Ex(7720185, J$e);
                        } finally {
                            if (J$.Fr(7720193))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false)), bind, false, true);
            J$.P(7720089, J$.R(7720073, 'bind', bind, false, true), 'placeholder', J$.T(7720081, {}, 11, false));
            J$.P(7720113, J$.I(typeof module === 'undefined' ? module = J$.R(7720097, 'module', undefined, true, true) : module = J$.R(7720097, 'module', module, true, true)), 'exports', J$.R(7720105, 'bind', bind, false, true));
        } catch (J$e) {
            J$.Ex(7720201, J$e);
        } finally {
            if (J$.Sr(7720209))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

