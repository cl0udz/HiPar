J$.noInstrEval = false;
jalangiLabel2:
    while (true) {
        try {
            J$.Se(4439153, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestCouchNode/node_modules/lodash/transform.js');
            function transform(object, iteratee, accumulator) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(4439065, arguments.callee, this, arguments);
                            arguments = J$.N(4439073, 'arguments', arguments, true, false, false);
                            object = J$.N(4439081, 'object', object, true, false, false);
                            iteratee = J$.N(4439089, 'iteratee', iteratee, true, false, false);
                            accumulator = J$.N(4439097, 'accumulator', accumulator, true, false, false);
                            J$.N(4439105, 'isArr', isArr, false, false, false);
                            J$.N(4439113, 'isArrLike', isArrLike, false, false, false);
                            J$.N(4439121, 'Ctor', Ctor, false, false, false);
                            var isArr = J$.W(4438633, 'isArr', J$.F(4438569, J$.R(4438553, 'isArray', isArray, false, true), false)(J$.R(4438561, 'object', object, false, false)), isArr, false, false), isArrLike = J$.W(4438641, 'isArrLike', J$.C(247184, J$.C(247176, J$.R(4438577, 'isArr', isArr, false, false)) ? J$._() : J$.F(4438601, J$.R(4438585, 'isBuffer', isBuffer, false, true), false)(J$.R(4438593, 'object', object, false, false))) ? J$._() : J$.F(4438625, J$.R(4438609, 'isTypedArray', isTypedArray, false, true), false)(J$.R(4438617, 'object', object, false, false)), isArrLike, false, false);
                            iteratee = J$.W(4438681, 'iteratee', J$.F(4438673, J$.R(4438649, 'baseIteratee', baseIteratee, false, true), false)(J$.R(4438657, 'iteratee', iteratee, false, false), J$.T(4438665, 4, 22, false)), iteratee, false, false);
                            if (J$.C(247232, J$.B(550626, '==', J$.R(4438689, 'accumulator', accumulator, false, false), J$.T(4438697, null, 25, false)))) {
                                var Ctor = J$.W(4438729, 'Ctor', J$.C(247192, J$.R(4438705, 'object', object, false, false)) ? J$.G(4438721, J$.R(4438713, 'object', object, false, false), 'constructor') : J$._(), Ctor, false, false);
                                if (J$.C(247224, J$.R(4438737, 'isArrLike', isArrLike, false, false))) {
                                    accumulator = J$.W(4438777, 'accumulator', J$.C(247200, J$.R(4438745, 'isArr', isArr, false, false)) ? J$.F(4438761, J$.R(4438753, 'Ctor', Ctor, false, false), true)() : J$.T(4438769, [], 10, false), accumulator, false, false);
                                } else if (J$.C(247216, J$.F(4438801, J$.R(4438785, 'isObject', isObject, false, true), false)(J$.R(4438793, 'object', object, false, false)))) {
                                    accumulator = J$.W(4438881, 'accumulator', J$.C(247208, J$.F(4438825, J$.R(4438809, 'isFunction', isFunction, false, true), false)(J$.R(4438817, 'Ctor', Ctor, false, false))) ? J$.F(4438865, J$.R(4438833, 'baseCreate', baseCreate, false, true), false)(J$.F(4438857, J$.R(4438841, 'getPrototype', getPrototype, false, true), false)(J$.R(4438849, 'object', object, false, false))) : J$.T(4438873, {}, 11, false), accumulator, false, false);
                                } else {
                                    accumulator = J$.W(4438897, 'accumulator', J$.T(4438889, {}, 11, false), accumulator, false, false);
                                }
                            }
                            J$.F(4439041, J$.C(247240, J$.R(4438905, 'isArrLike', isArrLike, false, false)) ? J$.R(4438913, 'arrayEach', arrayEach, false, true) : J$.R(4438921, 'baseForOwn', baseForOwn, false, true), false)(J$.R(4438929, 'object', object, false, false), J$.T(4439033, function (value, index, object) {
                                jalangiLabel0:
                                    while (true) {
                                        try {
                                            J$.Fe(4438993, arguments.callee, this, arguments);
                                            arguments = J$.N(4439001, 'arguments', arguments, true, false, false);
                                            value = J$.N(4439009, 'value', value, true, false, false);
                                            index = J$.N(4439017, 'index', index, true, false, false);
                                            object = J$.N(4439025, 'object', object, true, false, false);
                                            return J$.Rt(4438985, J$.F(4438977, J$.R(4438937, 'iteratee', iteratee, false, false), false)(J$.R(4438945, 'accumulator', accumulator, false, false), J$.R(4438953, 'value', value, false, false), J$.R(4438961, 'index', index, false, false), J$.R(4438969, 'object', object, false, false)));
                                        } catch (J$e) {
                                            J$.Ex(4439257, J$e);
                                        } finally {
                                            if (J$.Fr(4439265))
                                                continue jalangiLabel0;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            return J$.Rt(4439057, J$.R(4439049, 'accumulator', accumulator, false, false));
                        } catch (J$e) {
                            J$.Ex(4439273, J$e);
                        } finally {
                            if (J$.Fr(4439281))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(4439161, 'arrayEach', arrayEach, false, false, false);
            J$.N(4439169, 'baseCreate', baseCreate, false, false, false);
            J$.N(4439177, 'baseForOwn', baseForOwn, false, false, false);
            J$.N(4439185, 'baseIteratee', baseIteratee, false, false, false);
            J$.N(4439193, 'getPrototype', getPrototype, false, false, false);
            J$.N(4439201, 'isArray', isArray, false, false, false);
            J$.N(4439209, 'isBuffer', isBuffer, false, false, false);
            J$.N(4439217, 'isFunction', isFunction, false, false, false);
            J$.N(4439225, 'isObject', isObject, false, false, false);
            J$.N(4439233, 'isTypedArray', isTypedArray, false, false, false);
            transform = J$.N(4439249, 'transform', J$.T(4439241, transform, 12, false), true, false, false);
            var arrayEach = J$.W(4438473, 'arrayEach', J$.F(4438249, J$.I(typeof require === 'undefined' ? require = J$.R(4438233, 'require', undefined, true, true) : require = J$.R(4438233, 'require', require, true, true)), false)(J$.T(4438241, './_arrayEach', 21, false)), arrayEach, false, true), baseCreate = J$.W(4438481, 'baseCreate', J$.F(4438273, J$.I(typeof require === 'undefined' ? require = J$.R(4438257, 'require', undefined, true, true) : require = J$.R(4438257, 'require', require, true, true)), false)(J$.T(4438265, './_baseCreate', 21, false)), baseCreate, false, true), baseForOwn = J$.W(4438489, 'baseForOwn', J$.F(4438297, J$.I(typeof require === 'undefined' ? require = J$.R(4438281, 'require', undefined, true, true) : require = J$.R(4438281, 'require', require, true, true)), false)(J$.T(4438289, './_baseForOwn', 21, false)), baseForOwn, false, true), baseIteratee = J$.W(4438497, 'baseIteratee', J$.F(4438321, J$.I(typeof require === 'undefined' ? require = J$.R(4438305, 'require', undefined, true, true) : require = J$.R(4438305, 'require', require, true, true)), false)(J$.T(4438313, './_baseIteratee', 21, false)), baseIteratee, false, true), getPrototype = J$.W(4438505, 'getPrototype', J$.F(4438345, J$.I(typeof require === 'undefined' ? require = J$.R(4438329, 'require', undefined, true, true) : require = J$.R(4438329, 'require', require, true, true)), false)(J$.T(4438337, './_getPrototype', 21, false)), getPrototype, false, true), isArray = J$.W(4438513, 'isArray', J$.F(4438369, J$.I(typeof require === 'undefined' ? require = J$.R(4438353, 'require', undefined, true, true) : require = J$.R(4438353, 'require', require, true, true)), false)(J$.T(4438361, './isArray', 21, false)), isArray, false, true), isBuffer = J$.W(4438521, 'isBuffer', J$.F(4438393, J$.I(typeof require === 'undefined' ? require = J$.R(4438377, 'require', undefined, true, true) : require = J$.R(4438377, 'require', require, true, true)), false)(J$.T(4438385, './isBuffer', 21, false)), isBuffer, false, true), isFunction = J$.W(4438529, 'isFunction', J$.F(4438417, J$.I(typeof require === 'undefined' ? require = J$.R(4438401, 'require', undefined, true, true) : require = J$.R(4438401, 'require', require, true, true)), false)(J$.T(4438409, './isFunction', 21, false)), isFunction, false, true), isObject = J$.W(4438537, 'isObject', J$.F(4438441, J$.I(typeof require === 'undefined' ? require = J$.R(4438425, 'require', undefined, true, true) : require = J$.R(4438425, 'require', require, true, true)), false)(J$.T(4438433, './isObject', 21, false)), isObject, false, true), isTypedArray = J$.W(4438545, 'isTypedArray', J$.F(4438465, J$.I(typeof require === 'undefined' ? require = J$.R(4438449, 'require', undefined, true, true) : require = J$.R(4438449, 'require', require, true, true)), false)(J$.T(4438457, './isTypedArray', 21, false)), isTypedArray, false, true);
            J$.P(4439145, J$.I(typeof module === 'undefined' ? module = J$.R(4439129, 'module', undefined, true, true) : module = J$.R(4439129, 'module', module, true, true)), 'exports', J$.R(4439137, 'transform', transform, false, true));
        } catch (J$e) {
            J$.Ex(4439289, J$e);
        } finally {
            if (J$.Sr(4439297))
                continue jalangiLabel2;
            else
                break jalangiLabel2;
        }
    }
// JALANGI DO NOT INSTRUMENT

