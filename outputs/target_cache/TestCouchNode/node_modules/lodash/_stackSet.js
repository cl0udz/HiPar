J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(7706665, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestCouchNode/node_modules/lodash/_stackSet.js');
            function stackSet(key, value) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(7706593, arguments.callee, this, arguments);
                            arguments = J$.N(7706601, 'arguments', arguments, true, false, false);
                            key = J$.N(7706609, 'key', key, true, false, false);
                            value = J$.N(7706617, 'value', value, true, false, false);
                            J$.N(7706625, 'data', data, false, false, false);
                            J$.N(7706633, 'pairs', pairs, false, false, false);
                            var data = J$.W(7706289, 'data', J$.G(7706281, J$.R(7706273, 'this', this, false, false), '__data__'), data, false, false);
                            if (J$.C(410168, J$.B(764842, 'instanceof', J$.R(7706297, 'data', data, false, false), J$.R(7706305, 'ListCache', ListCache, false, true)))) {
                                var pairs = J$.W(7706329, 'pairs', J$.G(7706321, J$.R(7706313, 'data', data, false, false), '__data__'), pairs, false, false);
                                if (J$.C(410160, J$.C(410152, J$.U(764850, '!', J$.R(7706337, 'Map', Map, false, true))) ? J$._() : J$.B(764866, '<', J$.G(7706353, J$.R(7706345, 'pairs', pairs, false, false), 'length'), J$.B(764858, '-', J$.R(7706361, 'LARGE_ARRAY_SIZE', LARGE_ARRAY_SIZE, false, true), J$.T(7706369, 1, 22, false))))) {
                                    J$.M(7706409, J$.R(7706377, 'pairs', pairs, false, false), 'push', false)(J$.T(7706401, [
                                        J$.R(7706385, 'key', key, false, false),
                                        J$.R(7706393, 'value', value, false, false)
                                    ], 10, false));
                                    J$.P(7706441, J$.R(7706417, 'this', this, false, false), 'size', J$.A(7706433, J$.R(7706425, 'data', data, false, false), 'size', '+')(1));
                                    return J$.Rt(7706457, J$.R(7706449, 'this', this, false, false));
                                }
                                data = J$.W(7706505, 'data', J$.P(7706497, J$.R(7706465, 'this', this, false, false), '__data__', J$.F(7706489, J$.R(7706473, 'MapCache', MapCache, false, true), true)(J$.R(7706481, 'pairs', pairs, false, false))), data, false, false);
                            }
                            J$.M(7706537, J$.R(7706513, 'data', data, false, false), 'set', false)(J$.R(7706521, 'key', key, false, false), J$.R(7706529, 'value', value, false, false));
                            J$.P(7706569, J$.R(7706545, 'this', this, false, false), 'size', J$.G(7706561, J$.R(7706553, 'data', data, false, false), 'size'));
                            return J$.Rt(7706585, J$.R(7706577, 'this', this, false, false));
                        } catch (J$e) {
                            J$.Ex(7706721, J$e);
                        } finally {
                            if (J$.Fr(7706729))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(7706673, 'ListCache', ListCache, false, false, false);
            J$.N(7706681, 'Map', Map, false, false, false);
            J$.N(7706689, 'MapCache', MapCache, false, false, false);
            J$.N(7706697, 'LARGE_ARRAY_SIZE', LARGE_ARRAY_SIZE, false, false, false);
            stackSet = J$.N(7706713, 'stackSet', J$.T(7706705, stackSet, 12, false), true, false, false);
            var ListCache = J$.W(7706233, 'ListCache', J$.F(7706177, J$.I(typeof require === 'undefined' ? require = J$.R(7706161, 'require', undefined, true, true) : require = J$.R(7706161, 'require', require, true, true)), false)(J$.T(7706169, './_ListCache', 21, false)), ListCache, false, true), Map = J$.W(7706241, 'Map', J$.F(7706201, J$.I(typeof require === 'undefined' ? require = J$.R(7706185, 'require', undefined, true, true) : require = J$.R(7706185, 'require', require, true, true)), false)(J$.T(7706193, './_Map', 21, false)), Map, false, true), MapCache = J$.W(7706249, 'MapCache', J$.F(7706225, J$.I(typeof require === 'undefined' ? require = J$.R(7706209, 'require', undefined, true, true) : require = J$.R(7706209, 'require', require, true, true)), false)(J$.T(7706217, './_MapCache', 21, false)), MapCache, false, true);
            var LARGE_ARRAY_SIZE = J$.W(7706265, 'LARGE_ARRAY_SIZE', J$.T(7706257, 200, 22, false), LARGE_ARRAY_SIZE, false, true);
            J$.P(7706657, J$.I(typeof module === 'undefined' ? module = J$.R(7706641, 'module', undefined, true, true) : module = J$.R(7706641, 'module', module, true, true)), 'exports', J$.R(7706649, 'stackSet', stackSet, false, true));
        } catch (J$e) {
            J$.Ex(7706737, J$e);
        } finally {
            if (J$.Sr(7706745))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

