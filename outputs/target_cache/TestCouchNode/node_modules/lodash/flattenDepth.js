J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(7809353, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestCouchNode/node_modules/lodash/flattenDepth.js');
            function flattenDepth(array, depth) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(7809289, arguments.callee, this, arguments);
                            arguments = J$.N(7809297, 'arguments', arguments, true, false, false);
                            array = J$.N(7809305, 'array', array, true, false, false);
                            depth = J$.N(7809313, 'depth', depth, true, false, false);
                            J$.N(7809321, 'length', length, false, false, false);
                            var length = J$.W(7809161, 'length', J$.C(416312, J$.B(773658, '==', J$.R(7809121, 'array', array, false, false), J$.T(7809129, null, 25, false))) ? J$.T(7809137, 0, 22, false) : J$.G(7809153, J$.R(7809145, 'array', array, false, false), 'length'), length, false, false);
                            if (J$.C(416320, J$.U(773666, '!', J$.R(7809169, 'length', length, false, false)))) {
                                return J$.Rt(7809185, J$.T(7809177, [], 10, false));
                            }
                            depth = J$.W(7809241, 'depth', J$.C(416328, J$.B(773674, '===', J$.R(7809193, 'depth', depth, false, false), J$.T(7809201, undefined, 24, false))) ? J$.T(7809209, 1, 22, false) : J$.F(7809233, J$.R(7809217, 'toInteger', toInteger, false, true), false)(J$.R(7809225, 'depth', depth, false, false)), depth, false, false);
                            return J$.Rt(7809281, J$.F(7809273, J$.R(7809249, 'baseFlatten', baseFlatten, false, true), false)(J$.R(7809257, 'array', array, false, false), J$.R(7809265, 'depth', depth, false, false)));
                        } catch (J$e) {
                            J$.Ex(7809393, J$e);
                        } finally {
                            if (J$.Fr(7809401))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(7809361, 'baseFlatten', baseFlatten, false, false, false);
            J$.N(7809369, 'toInteger', toInteger, false, false, false);
            flattenDepth = J$.N(7809385, 'flattenDepth', J$.T(7809377, flattenDepth, 12, false), true, false, false);
            var baseFlatten = J$.W(7809105, 'baseFlatten', J$.F(7809073, J$.I(typeof require === 'undefined' ? require = J$.R(7809057, 'require', undefined, true, true) : require = J$.R(7809057, 'require', require, true, true)), false)(J$.T(7809065, './_baseFlatten', 21, false)), baseFlatten, false, true), toInteger = J$.W(7809113, 'toInteger', J$.F(7809097, J$.I(typeof require === 'undefined' ? require = J$.R(7809081, 'require', undefined, true, true) : require = J$.R(7809081, 'require', require, true, true)), false)(J$.T(7809089, './toInteger', 21, false)), toInteger, false, true);
            J$.P(7809345, J$.I(typeof module === 'undefined' ? module = J$.R(7809329, 'module', undefined, true, true) : module = J$.R(7809329, 'module', module, true, true)), 'exports', J$.R(7809337, 'flattenDepth', flattenDepth, false, true));
        } catch (J$e) {
            J$.Ex(7809409, J$e);
        } finally {
            if (J$.Sr(7809417))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

