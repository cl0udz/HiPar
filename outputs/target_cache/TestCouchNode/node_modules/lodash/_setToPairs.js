J$.noInstrEval = false;
jalangiLabel2:
    while (true) {
        try {
            J$.Se(7703785, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestCouchNode/node_modules/lodash/_setToPairs.js');
            function setToPairs(set) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(7703721, arguments.callee, this, arguments);
                            arguments = J$.N(7703729, 'arguments', arguments, true, false, false);
                            set = J$.N(7703737, 'set', set, true, false, false);
                            J$.N(7703745, 'index', index, false, false, false);
                            J$.N(7703753, 'result', result, false, false, false);
                            var index = J$.W(7703585, 'index', J$.U(764714, '-', J$.T(7703545, 1, 22, false)), index, false, false), result = J$.W(7703593, 'result', J$.F(7703577, J$.I(typeof Array === 'undefined' ? Array = J$.R(7703553, 'Array', undefined, true, true) : Array = J$.R(7703553, 'Array', Array, true, true)), false)(J$.G(7703569, J$.R(7703561, 'set', set, false, false), 'size')), result, false, false);
                            J$.M(7703697, J$.R(7703601, 'set', set, false, false), 'forEach', false)(J$.T(7703689, function (value) {
                                jalangiLabel0:
                                    while (true) {
                                        try {
                                            J$.Fe(7703665, arguments.callee, this, arguments);
                                            arguments = J$.N(7703673, 'arguments', arguments, true, false, false);
                                            value = J$.N(7703681, 'value', value, true, false, false);
                                            J$.P(7703657, J$.R(7703609, 'result', result, false, false), index = J$.W(7703625, 'index', J$.B(764730, '+', J$.U(764722, '+', J$.R(7703617, 'index', index, false, false)), 1), index, false, false), J$.T(7703649, [
                                                J$.R(7703633, 'value', value, false, false),
                                                J$.R(7703641, 'value', value, false, false)
                                            ], 10, false));
                                        } catch (J$e) {
                                            J$.Ex(7703809, J$e);
                                        } finally {
                                            if (J$.Fr(7703817))
                                                continue jalangiLabel0;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            return J$.Rt(7703713, J$.R(7703705, 'result', result, false, false));
                        } catch (J$e) {
                            J$.Ex(7703825, J$e);
                        } finally {
                            if (J$.Fr(7703833))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            setToPairs = J$.N(7703801, 'setToPairs', J$.T(7703793, setToPairs, 12, false), true, false, false);
            J$.P(7703777, J$.I(typeof module === 'undefined' ? module = J$.R(7703761, 'module', undefined, true, true) : module = J$.R(7703761, 'module', module, true, true)), 'exports', J$.R(7703769, 'setToPairs', setToPairs, false, true));
        } catch (J$e) {
            J$.Ex(7703841, J$e);
        } finally {
            if (J$.Sr(7703849))
                continue jalangiLabel2;
            else
                break jalangiLabel2;
        }
    }
// JALANGI DO NOT INSTRUMENT

