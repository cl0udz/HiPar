J$.noInstrEval = false;
jalangiLabel2:
    while (true) {
        try {
            J$.Se(7598625, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestCouchNode/node_modules/lodash/_baseFindKey.js');
            function baseFindKey(collection, predicate, eachFunc) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(7598553, arguments.callee, this, arguments);
                            arguments = J$.N(7598561, 'arguments', arguments, true, false, false);
                            collection = J$.N(7598569, 'collection', collection, true, false, false);
                            predicate = J$.N(7598577, 'predicate', predicate, true, false, false);
                            eachFunc = J$.N(7598585, 'eachFunc', eachFunc, true, false, false);
                            J$.N(7598593, 'result', result, false, false, false);
                            var result;
                            J$.F(7598529, J$.R(7598393, 'eachFunc', eachFunc, false, false), false)(J$.R(7598401, 'collection', collection, false, false), J$.T(7598521, function (value, key, collection) {
                                jalangiLabel0:
                                    while (true) {
                                        try {
                                            J$.Fe(7598481, arguments.callee, this, arguments);
                                            arguments = J$.N(7598489, 'arguments', arguments, true, false, false);
                                            value = J$.N(7598497, 'value', value, true, false, false);
                                            key = J$.N(7598505, 'key', key, true, false, false);
                                            collection = J$.N(7598513, 'collection', collection, true, false, false);
                                            if (J$.C(403768, J$.F(7598441, J$.R(7598409, 'predicate', predicate, false, false), false)(J$.R(7598417, 'value', value, false, false), J$.R(7598425, 'key', key, false, false), J$.R(7598433, 'collection', collection, false, false)))) {
                                                result = J$.W(7598457, 'result', J$.R(7598449, 'key', key, false, false), result, false, false);
                                                return J$.Rt(7598473, J$.T(7598465, false, 23, false));
                                            }
                                        } catch (J$e) {
                                            J$.Ex(7598649, J$e);
                                        } finally {
                                            if (J$.Fr(7598657))
                                                continue jalangiLabel0;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            return J$.Rt(7598545, J$.R(7598537, 'result', result, false, false));
                        } catch (J$e) {
                            J$.Ex(7598665, J$e);
                        } finally {
                            if (J$.Fr(7598673))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            baseFindKey = J$.N(7598641, 'baseFindKey', J$.T(7598633, baseFindKey, 12, false), true, false, false);
            J$.P(7598617, J$.I(typeof module === 'undefined' ? module = J$.R(7598601, 'module', undefined, true, true) : module = J$.R(7598601, 'module', module, true, true)), 'exports', J$.R(7598609, 'baseFindKey', baseFindKey, false, true));
        } catch (J$e) {
            J$.Ex(7598681, J$e);
        } finally {
            if (J$.Sr(7598689))
                continue jalangiLabel2;
            else
                break jalangiLabel2;
        }
    }
// JALANGI DO NOT INSTRUMENT

