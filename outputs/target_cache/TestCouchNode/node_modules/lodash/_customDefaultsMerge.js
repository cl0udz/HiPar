J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(7667193, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestCouchNode/node_modules/lodash/_customDefaultsMerge.js');
            function customDefaultsMerge(objValue, srcValue, key, object, source, stack) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(7667105, arguments.callee, this, arguments);
                            arguments = J$.N(7667113, 'arguments', arguments, true, false, false);
                            objValue = J$.N(7667121, 'objValue', objValue, true, false, false);
                            srcValue = J$.N(7667129, 'srcValue', srcValue, true, false, false);
                            key = J$.N(7667137, 'key', key, true, false, false);
                            object = J$.N(7667145, 'object', object, true, false, false);
                            source = J$.N(7667153, 'source', source, true, false, false);
                            stack = J$.N(7667161, 'stack', stack, true, false, false);
                            if (J$.C(407848, J$.C(407840, J$.F(7666937, J$.R(7666921, 'isObject', isObject, false, true), false)(J$.R(7666929, 'objValue', objValue, false, false))) ? J$.F(7666961, J$.R(7666945, 'isObject', isObject, false, true), false)(J$.R(7666953, 'srcValue', srcValue, false, false)) : J$._())) {
                                J$.M(7666993, J$.R(7666969, 'stack', stack, false, false), 'set', false)(J$.R(7666977, 'srcValue', srcValue, false, false), J$.R(7666985, 'objValue', objValue, false, false));
                                J$.F(7667049, J$.R(7667001, 'baseMerge', baseMerge, false, true), false)(J$.R(7667009, 'objValue', objValue, false, false), J$.R(7667017, 'srcValue', srcValue, false, false), J$.T(7667025, undefined, 24, false), J$.R(7667033, 'customDefaultsMerge', customDefaultsMerge, false, true), J$.R(7667041, 'stack', stack, false, false));
                                J$.M(7667081, J$.R(7667057, 'stack', stack, false, false), J$.T(7667065, 'delete', 21, false), false)(J$.R(7667073, 'srcValue', srcValue, false, false));
                            }
                            return J$.Rt(7667097, J$.R(7667089, 'objValue', objValue, false, false));
                        } catch (J$e) {
                            J$.Ex(7667233, J$e);
                        } finally {
                            if (J$.Fr(7667241))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(7667201, 'baseMerge', baseMerge, false, false, false);
            J$.N(7667209, 'isObject', isObject, false, false, false);
            customDefaultsMerge = J$.N(7667225, 'customDefaultsMerge', J$.T(7667217, customDefaultsMerge, 12, false), true, false, false);
            var baseMerge = J$.W(7666905, 'baseMerge', J$.F(7666873, J$.I(typeof require === 'undefined' ? require = J$.R(7666857, 'require', undefined, true, true) : require = J$.R(7666857, 'require', require, true, true)), false)(J$.T(7666865, './_baseMerge', 21, false)), baseMerge, false, true), isObject = J$.W(7666913, 'isObject', J$.F(7666897, J$.I(typeof require === 'undefined' ? require = J$.R(7666881, 'require', undefined, true, true) : require = J$.R(7666881, 'require', require, true, true)), false)(J$.T(7666889, './isObject', 21, false)), isObject, false, true);
            J$.P(7667185, J$.I(typeof module === 'undefined' ? module = J$.R(7667169, 'module', undefined, true, true) : module = J$.R(7667169, 'module', module, true, true)), 'exports', J$.R(7667177, 'customDefaultsMerge', customDefaultsMerge, false, true));
        } catch (J$e) {
            J$.Ex(7667249, J$e);
        } finally {
            if (J$.Sr(7667257))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

