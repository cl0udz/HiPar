J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(4030361, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestCouchNode/node_modules/lodash/isFunction.js');
            function isFunction(value) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(4030305, arguments.callee, this, arguments);
                            arguments = J$.N(4030313, 'arguments', arguments, true, false, false);
                            value = J$.N(4030321, 'value', value, true, false, false);
                            J$.N(4030329, 'tag', tag, false, false, false);
                            if (J$.C(218520, J$.U(519650, '!', J$.F(4030177, J$.R(4030161, 'isObject', isObject, false, true), false)(J$.R(4030169, 'value', value, false, false))))) {
                                return J$.Rt(4030193, J$.T(4030185, false, 23, false));
                            }
                            var tag = J$.W(4030225, 'tag', J$.F(4030217, J$.R(4030201, 'baseGetTag', baseGetTag, false, true), false)(J$.R(4030209, 'value', value, false, false)), tag, false, false);
                            return J$.Rt(4030297, J$.C(218544, J$.C(218536, J$.C(218528, J$.B(519658, '==', J$.R(4030233, 'tag', tag, false, false), J$.R(4030241, 'funcTag', funcTag, false, true))) ? J$._() : J$.B(519666, '==', J$.R(4030249, 'tag', tag, false, false), J$.R(4030257, 'genTag', genTag, false, true))) ? J$._() : J$.B(519674, '==', J$.R(4030265, 'tag', tag, false, false), J$.R(4030273, 'asyncTag', asyncTag, false, true))) ? J$._() : J$.B(519682, '==', J$.R(4030281, 'tag', tag, false, false), J$.R(4030289, 'proxyTag', proxyTag, false, true)));
                        } catch (J$e) {
                            J$.Ex(4030433, J$e);
                        } finally {
                            if (J$.Fr(4030441))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(4030369, 'baseGetTag', baseGetTag, false, false, false);
            J$.N(4030377, 'isObject', isObject, false, false, false);
            J$.N(4030385, 'asyncTag', asyncTag, false, false, false);
            J$.N(4030393, 'funcTag', funcTag, false, false, false);
            J$.N(4030401, 'genTag', genTag, false, false, false);
            J$.N(4030409, 'proxyTag', proxyTag, false, false, false);
            isFunction = J$.N(4030425, 'isFunction', J$.T(4030417, isFunction, 12, false), true, false, false);
            var baseGetTag = J$.W(4030081, 'baseGetTag', J$.F(4030049, J$.I(typeof require === 'undefined' ? require = J$.R(4030033, 'require', undefined, true, true) : require = J$.R(4030033, 'require', require, true, true)), false)(J$.T(4030041, './_baseGetTag', 21, false)), baseGetTag, false, true), isObject = J$.W(4030089, 'isObject', J$.F(4030073, J$.I(typeof require === 'undefined' ? require = J$.R(4030057, 'require', undefined, true, true) : require = J$.R(4030057, 'require', require, true, true)), false)(J$.T(4030065, './isObject', 21, false)), isObject, false, true);
            var asyncTag = J$.W(4030129, 'asyncTag', J$.T(4030097, '[object AsyncFunction]', 21, false), asyncTag, false, true), funcTag = J$.W(4030137, 'funcTag', J$.T(4030105, '[object Function]', 21, false), funcTag, false, true), genTag = J$.W(4030145, 'genTag', J$.T(4030113, '[object GeneratorFunction]', 21, false), genTag, false, true), proxyTag = J$.W(4030153, 'proxyTag', J$.T(4030121, '[object Proxy]', 21, false), proxyTag, false, true);
            J$.P(4030353, J$.I(typeof module === 'undefined' ? module = J$.R(4030337, 'module', undefined, true, true) : module = J$.R(4030337, 'module', module, true, true)), 'exports', J$.R(4030345, 'isFunction', isFunction, false, true));
        } catch (J$e) {
            J$.Ex(4030449, J$e);
        } finally {
            if (J$.Sr(4030457))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

