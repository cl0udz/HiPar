J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(4414833, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestCouchNode/node_modules/lodash/rest.js');
            function rest(func, start) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(4414777, arguments.callee, this, arguments);
                            arguments = J$.N(4414785, 'arguments', arguments, true, false, false);
                            func = J$.N(4414793, 'func', func, true, false, false);
                            start = J$.N(4414801, 'start', start, true, false, false);
                            if (J$.C(246024, J$.B(549474, '!=', J$.U(549466, 'typeof', J$.R(4414641, 'func', func, false, false)), J$.T(4414649, 'function', 21, false)))) {
                                throw J$.F(4414673, J$.I(typeof TypeError === 'undefined' ? TypeError = J$.R(4414657, 'TypeError', undefined, true, true) : TypeError = J$.R(4414657, 'TypeError', TypeError, true, true)), true)(J$.R(4414665, 'FUNC_ERROR_TEXT', FUNC_ERROR_TEXT, false, true));
                            }
                            start = J$.W(4414729, 'start', J$.C(246032, J$.B(549482, '===', J$.R(4414681, 'start', start, false, false), J$.T(4414689, undefined, 24, false))) ? J$.R(4414697, 'start', start, false, false) : J$.F(4414721, J$.R(4414705, 'toInteger', toInteger, false, true), false)(J$.R(4414713, 'start', start, false, false)), start, false, false);
                            return J$.Rt(4414769, J$.F(4414761, J$.R(4414737, 'baseRest', baseRest, false, true), false)(J$.R(4414745, 'func', func, false, false), J$.R(4414753, 'start', start, false, false)));
                        } catch (J$e) {
                            J$.Ex(4414881, J$e);
                        } finally {
                            if (J$.Fr(4414889))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(4414841, 'baseRest', baseRest, false, false, false);
            J$.N(4414849, 'toInteger', toInteger, false, false, false);
            J$.N(4414857, 'FUNC_ERROR_TEXT', FUNC_ERROR_TEXT, false, false, false);
            rest = J$.N(4414873, 'rest', J$.T(4414865, rest, 12, false), true, false, false);
            var baseRest = J$.W(4414609, 'baseRest', J$.F(4414577, J$.I(typeof require === 'undefined' ? require = J$.R(4414561, 'require', undefined, true, true) : require = J$.R(4414561, 'require', require, true, true)), false)(J$.T(4414569, './_baseRest', 21, false)), baseRest, false, true), toInteger = J$.W(4414617, 'toInteger', J$.F(4414601, J$.I(typeof require === 'undefined' ? require = J$.R(4414585, 'require', undefined, true, true) : require = J$.R(4414585, 'require', require, true, true)), false)(J$.T(4414593, './toInteger', 21, false)), toInteger, false, true);
            var FUNC_ERROR_TEXT = J$.W(4414633, 'FUNC_ERROR_TEXT', J$.T(4414625, 'Expected a function', 21, false), FUNC_ERROR_TEXT, false, true);
            J$.P(4414825, J$.I(typeof module === 'undefined' ? module = J$.R(4414809, 'module', undefined, true, true) : module = J$.R(4414809, 'module', module, true, true)), 'exports', J$.R(4414817, 'rest', rest, false, true));
        } catch (J$e) {
            J$.Ex(4414897, J$e);
        } finally {
            if (J$.Sr(4414905))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

