J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(7577729, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestCouchNode/node_modules/lodash/_MapCache.js');
            function MapCache(entries) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(7577489, arguments.callee, this, arguments);
                            arguments = J$.N(7577497, 'arguments', arguments, true, false, false);
                            entries = J$.N(7577505, 'entries', entries, true, false, false);
                            J$.N(7577513, 'index', index, false, false, false);
                            J$.N(7577521, 'length', length, false, false, false);
                            J$.N(7577529, 'entry', entry, false, false, false);
                            var index = J$.W(7577337, 'index', J$.U(756026, '-', J$.T(7577289, 1, 22, false)), index, false, false), length = J$.W(7577345, 'length', J$.C(402544, J$.B(756034, '==', J$.R(7577297, 'entries', entries, false, false), J$.T(7577305, null, 25, false))) ? J$.T(7577313, 0, 22, false) : J$.G(7577329, J$.R(7577321, 'entries', entries, false, false), 'length'), length, false, false);
                            J$.M(7577361, J$.R(7577353, 'this', this, false, false), 'clear', false)();
                            while (J$.C(402552, J$.B(756058, '<', index = J$.W(7577377, 'index', J$.B(756050, '+', J$.U(756042, '+', J$.R(7577369, 'index', index, false, false)), 1), index, false, false), J$.R(7577385, 'length', length, false, false)))) {
                                var entry = J$.W(7577417, 'entry', J$.G(7577409, J$.R(7577393, 'entries', entries, false, false), J$.R(7577401, 'index', index, false, false)), entry, false, false);
                                J$.M(7577481, J$.R(7577425, 'this', this, false, false), 'set', false)(J$.G(7577449, J$.R(7577433, 'entry', entry, false, false), J$.T(7577441, 0, 22, false)), J$.G(7577473, J$.R(7577457, 'entry', entry, false, false), J$.T(7577465, 1, 22, false)));
                            }
                        } catch (J$e) {
                            J$.Ex(7577793, J$e);
                        } finally {
                            if (J$.Fr(7577801))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(7577737, 'mapCacheClear', mapCacheClear, false, false, false);
            J$.N(7577745, 'mapCacheDelete', mapCacheDelete, false, false, false);
            J$.N(7577753, 'mapCacheGet', mapCacheGet, false, false, false);
            J$.N(7577761, 'mapCacheHas', mapCacheHas, false, false, false);
            J$.N(7577769, 'mapCacheSet', mapCacheSet, false, false, false);
            MapCache = J$.N(7577785, 'MapCache', J$.T(7577777, MapCache, 12, false), true, false, false);
            var mapCacheClear = J$.W(7577249, 'mapCacheClear', J$.F(7577145, J$.I(typeof require === 'undefined' ? require = J$.R(7577129, 'require', undefined, true, true) : require = J$.R(7577129, 'require', require, true, true)), false)(J$.T(7577137, './_mapCacheClear', 21, false)), mapCacheClear, false, true), mapCacheDelete = J$.W(7577257, 'mapCacheDelete', J$.F(7577169, J$.I(typeof require === 'undefined' ? require = J$.R(7577153, 'require', undefined, true, true) : require = J$.R(7577153, 'require', require, true, true)), false)(J$.T(7577161, './_mapCacheDelete', 21, false)), mapCacheDelete, false, true), mapCacheGet = J$.W(7577265, 'mapCacheGet', J$.F(7577193, J$.I(typeof require === 'undefined' ? require = J$.R(7577177, 'require', undefined, true, true) : require = J$.R(7577177, 'require', require, true, true)), false)(J$.T(7577185, './_mapCacheGet', 21, false)), mapCacheGet, false, true), mapCacheHas = J$.W(7577273, 'mapCacheHas', J$.F(7577217, J$.I(typeof require === 'undefined' ? require = J$.R(7577201, 'require', undefined, true, true) : require = J$.R(7577201, 'require', require, true, true)), false)(J$.T(7577209, './_mapCacheHas', 21, false)), mapCacheHas, false, true), mapCacheSet = J$.W(7577281, 'mapCacheSet', J$.F(7577241, J$.I(typeof require === 'undefined' ? require = J$.R(7577225, 'require', undefined, true, true) : require = J$.R(7577225, 'require', require, true, true)), false)(J$.T(7577233, './_mapCacheSet', 21, false)), mapCacheSet, false, true);
            J$.P(7577561, J$.G(7577545, J$.R(7577537, 'MapCache', MapCache, false, true), 'prototype'), 'clear', J$.R(7577553, 'mapCacheClear', mapCacheClear, false, true));
            J$.P(7577601, J$.G(7577577, J$.R(7577569, 'MapCache', MapCache, false, true), 'prototype'), J$.T(7577585, 'delete', 21, false), J$.R(7577593, 'mapCacheDelete', mapCacheDelete, false, true));
            J$.P(7577633, J$.G(7577617, J$.R(7577609, 'MapCache', MapCache, false, true), 'prototype'), 'get', J$.R(7577625, 'mapCacheGet', mapCacheGet, false, true));
            J$.P(7577665, J$.G(7577649, J$.R(7577641, 'MapCache', MapCache, false, true), 'prototype'), 'has', J$.R(7577657, 'mapCacheHas', mapCacheHas, false, true));
            J$.P(7577697, J$.G(7577681, J$.R(7577673, 'MapCache', MapCache, false, true), 'prototype'), 'set', J$.R(7577689, 'mapCacheSet', mapCacheSet, false, true));
            J$.P(7577721, J$.I(typeof module === 'undefined' ? module = J$.R(7577705, 'module', undefined, true, true) : module = J$.R(7577705, 'module', module, true, true)), 'exports', J$.R(7577713, 'MapCache', MapCache, false, true));
        } catch (J$e) {
            J$.Ex(7577809, J$e);
        } finally {
            if (J$.Sr(7577817))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

