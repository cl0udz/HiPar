J$.noInstrEval = false;
jalangiLabel2:
    while (true) {
        try {
            J$.Se(4400593, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestCouchNode/node_modules/lodash/omit.js');
            J$.N(4400601, 'arrayMap', arrayMap, false, false, false);
            J$.N(4400609, 'baseClone', baseClone, false, false, false);
            J$.N(4400617, 'baseUnset', baseUnset, false, false, false);
            J$.N(4400625, 'castPath', castPath, false, false, false);
            J$.N(4400633, 'copyObject', copyObject, false, false, false);
            J$.N(4400641, 'customOmitClone', customOmitClone, false, false, false);
            J$.N(4400649, 'flatRest', flatRest, false, false, false);
            J$.N(4400657, 'getAllKeysIn', getAllKeysIn, false, false, false);
            J$.N(4400665, 'CLONE_DEEP_FLAG', CLONE_DEEP_FLAG, false, false, false);
            J$.N(4400673, 'CLONE_FLAT_FLAG', CLONE_FLAT_FLAG, false, false, false);
            J$.N(4400681, 'CLONE_SYMBOLS_FLAG', CLONE_SYMBOLS_FLAG, false, false, false);
            J$.N(4400689, 'omit', omit, false, false, false);
            var arrayMap = J$.W(4399913, 'arrayMap', J$.F(4399737, J$.I(typeof require === 'undefined' ? require = J$.R(4399721, 'require', undefined, true, true) : require = J$.R(4399721, 'require', require, true, true)), false)(J$.T(4399729, './_arrayMap', 21, false)), arrayMap, false, true), baseClone = J$.W(4399921, 'baseClone', J$.F(4399761, J$.I(typeof require === 'undefined' ? require = J$.R(4399745, 'require', undefined, true, true) : require = J$.R(4399745, 'require', require, true, true)), false)(J$.T(4399753, './_baseClone', 21, false)), baseClone, false, true), baseUnset = J$.W(4399929, 'baseUnset', J$.F(4399785, J$.I(typeof require === 'undefined' ? require = J$.R(4399769, 'require', undefined, true, true) : require = J$.R(4399769, 'require', require, true, true)), false)(J$.T(4399777, './_baseUnset', 21, false)), baseUnset, false, true), castPath = J$.W(4399937, 'castPath', J$.F(4399809, J$.I(typeof require === 'undefined' ? require = J$.R(4399793, 'require', undefined, true, true) : require = J$.R(4399793, 'require', require, true, true)), false)(J$.T(4399801, './_castPath', 21, false)), castPath, false, true), copyObject = J$.W(4399945, 'copyObject', J$.F(4399833, J$.I(typeof require === 'undefined' ? require = J$.R(4399817, 'require', undefined, true, true) : require = J$.R(4399817, 'require', require, true, true)), false)(J$.T(4399825, './_copyObject', 21, false)), copyObject, false, true), customOmitClone = J$.W(4399953, 'customOmitClone', J$.F(4399857, J$.I(typeof require === 'undefined' ? require = J$.R(4399841, 'require', undefined, true, true) : require = J$.R(4399841, 'require', require, true, true)), false)(J$.T(4399849, './_customOmitClone', 21, false)), customOmitClone, false, true), flatRest = J$.W(4399961, 'flatRest', J$.F(4399881, J$.I(typeof require === 'undefined' ? require = J$.R(4399865, 'require', undefined, true, true) : require = J$.R(4399865, 'require', require, true, true)), false)(J$.T(4399873, './_flatRest', 21, false)), flatRest, false, true), getAllKeysIn = J$.W(4399969, 'getAllKeysIn', J$.F(4399905, J$.I(typeof require === 'undefined' ? require = J$.R(4399889, 'require', undefined, true, true) : require = J$.R(4399889, 'require', require, true, true)), false)(J$.T(4399897, './_getAllKeysIn', 21, false)), getAllKeysIn, false, true);
            var CLONE_DEEP_FLAG = J$.W(4400001, 'CLONE_DEEP_FLAG', J$.T(4399977, 1, 22, false), CLONE_DEEP_FLAG, false, true), CLONE_FLAT_FLAG = J$.W(4400009, 'CLONE_FLAT_FLAG', J$.T(4399985, 2, 22, false), CLONE_FLAT_FLAG, false, true), CLONE_SYMBOLS_FLAG = J$.W(4400017, 'CLONE_SYMBOLS_FLAG', J$.T(4399993, 4, 22, false), CLONE_SYMBOLS_FLAG, false, true);
            var omit = J$.W(4400561, 'omit', J$.F(4400553, J$.R(4400025, 'flatRest', flatRest, false, true), false)(J$.T(4400545, function (object, paths) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(4400489, arguments.callee, this, arguments);
                            arguments = J$.N(4400497, 'arguments', arguments, true, false, false);
                            object = J$.N(4400505, 'object', object, true, false, false);
                            paths = J$.N(4400513, 'paths', paths, true, false, false);
                            J$.N(4400521, 'result', result, false, false, false);
                            J$.N(4400529, 'isDeep', isDeep, false, false, false);
                            J$.N(4400537, 'length', length, false, false, false);
                            var result = J$.W(4400041, 'result', J$.T(4400033, {}, 11, false), result, false, false);
                            if (J$.C(245464, J$.B(548938, '==', J$.R(4400049, 'object', object, false, false), J$.T(4400057, null, 25, false)))) {
                                return J$.Rt(4400073, J$.R(4400065, 'result', result, false, false));
                            }
                            var isDeep = J$.W(4400089, 'isDeep', J$.T(4400081, false, 23, false), isDeep, false, false);
                            paths = J$.W(4400249, 'paths', J$.F(4400241, J$.R(4400097, 'arrayMap', arrayMap, false, true), false)(J$.R(4400105, 'paths', paths, false, false), J$.T(4400233, function (path) {
                                jalangiLabel0:
                                    while (true) {
                                        try {
                                            J$.Fe(4400209, arguments.callee, this, arguments);
                                            arguments = J$.N(4400217, 'arguments', arguments, true, false, false);
                                            path = J$.N(4400225, 'path', path, true, false, false);
                                            path = J$.W(4400145, 'path', J$.F(4400137, J$.R(4400113, 'castPath', castPath, false, true), false)(J$.R(4400121, 'path', path, false, false), J$.R(4400129, 'object', object, false, false)), path, false, false);
                                            J$.C(245472, J$.R(4400153, 'isDeep', isDeep, false, false)) ? J$._() : isDeep = J$.W(4400185, 'isDeep', J$.B(548946, '>', J$.G(4400169, J$.R(4400161, 'path', path, false, false), 'length'), J$.T(4400177, 1, 22, false)), isDeep, false, false);
                                            return J$.Rt(4400201, J$.R(4400193, 'path', path, false, false));
                                        } catch (J$e) {
                                            J$.Ex(4400697, J$e);
                                        } finally {
                                            if (J$.Fr(4400705))
                                                continue jalangiLabel0;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false)), paths, false, false);
                            J$.F(4400305, J$.R(4400257, 'copyObject', copyObject, false, true), false)(J$.R(4400265, 'object', object, false, false), J$.F(4400289, J$.R(4400273, 'getAllKeysIn', getAllKeysIn, false, true), false)(J$.R(4400281, 'object', object, false, false)), J$.R(4400297, 'result', result, false, false));
                            if (J$.C(245480, J$.R(4400313, 'isDeep', isDeep, false, false))) {
                                result = J$.W(4400377, 'result', J$.F(4400369, J$.R(4400321, 'baseClone', baseClone, false, true), false)(J$.R(4400329, 'result', result, false, false), J$.B(548962, '|', J$.B(548954, '|', J$.R(4400337, 'CLONE_DEEP_FLAG', CLONE_DEEP_FLAG, false, true), J$.R(4400345, 'CLONE_FLAT_FLAG', CLONE_FLAT_FLAG, false, true)), J$.R(4400353, 'CLONE_SYMBOLS_FLAG', CLONE_SYMBOLS_FLAG, false, true)), J$.R(4400361, 'customOmitClone', customOmitClone, false, true)), result, false, false);
                            }
                            var length = J$.W(4400401, 'length', J$.G(4400393, J$.R(4400385, 'paths', paths, false, false), 'length'), length, false, false);
                            while (J$.C(245488, J$.B(548986, '+', length = J$.W(4400417, 'length', J$.B(548978, '-', J$.U(548970, '+', J$.R(4400409, 'length', length, false, false)), 1), length, false, false), 1))) {
                                J$.F(4400465, J$.R(4400425, 'baseUnset', baseUnset, false, true), false)(J$.R(4400433, 'result', result, false, false), J$.G(4400457, J$.R(4400441, 'paths', paths, false, false), J$.R(4400449, 'length', length, false, false)));
                            }
                            return J$.Rt(4400481, J$.R(4400473, 'result', result, false, false));
                        } catch (J$e) {
                            J$.Ex(4400713, J$e);
                        } finally {
                            if (J$.Fr(4400721))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false)), omit, false, true);
            J$.P(4400585, J$.I(typeof module === 'undefined' ? module = J$.R(4400569, 'module', undefined, true, true) : module = J$.R(4400569, 'module', module, true, true)), 'exports', J$.R(4400577, 'omit', omit, false, true));
        } catch (J$e) {
            J$.Ex(4400729, J$e);
        } finally {
            if (J$.Sr(4400737))
                continue jalangiLabel2;
            else
                break jalangiLabel2;
        }
    }
// JALANGI DO NOT INSTRUMENT

