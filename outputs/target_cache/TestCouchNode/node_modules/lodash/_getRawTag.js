J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(7678113, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestCouchNode/node_modules/lodash/_getRawTag.js');
            function getRawTag(value) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(7678033, arguments.callee, this, arguments);
                            arguments = J$.N(7678041, 'arguments', arguments, true, false, false);
                            value = J$.N(7678049, 'value', value, true, false, false);
                            J$.N(7678057, 'isOwn', isOwn, false, false, false);
                            J$.N(7678065, 'tag', tag, false, false, false);
                            J$.N(7678073, 'unmasked', unmasked, false, false, false);
                            J$.N(7678081, 'result', result, false, false, false);
                            var isOwn = J$.W(7677849, 'isOwn', J$.M(7677817, J$.R(7677793, 'hasOwnProperty', hasOwnProperty, false, true), 'call', false)(J$.R(7677801, 'value', value, false, false), J$.R(7677809, 'symToStringTag', symToStringTag, false, true)), isOwn, false, false), tag = J$.W(7677857, 'tag', J$.G(7677841, J$.R(7677825, 'value', value, false, false), J$.R(7677833, 'symToStringTag', symToStringTag, false, true)), tag, false, false);
                            try {
                                J$.P(7677889, J$.R(7677865, 'value', value, false, false), J$.R(7677873, 'symToStringTag', symToStringTag, false, true), J$.T(7677881, undefined, 24, false));
                                var unmasked = J$.W(7677905, 'unmasked', J$.T(7677897, true, 23, false), unmasked, false, false);
                            } catch (e) {
                                J$.N(7677913, 'e', e, false, false, true);
                            }
                            var result = J$.W(7677945, 'result', J$.M(7677937, J$.R(7677921, 'nativeObjectToString', nativeObjectToString, false, true), 'call', false)(J$.R(7677929, 'value', value, false, false)), result, false, false);
                            if (J$.C(408496, J$.R(7677953, 'unmasked', unmasked, false, false))) {
                                if (J$.C(408488, J$.R(7677961, 'isOwn', isOwn, false, false))) {
                                    J$.P(7677993, J$.R(7677969, 'value', value, false, false), J$.R(7677977, 'symToStringTag', symToStringTag, false, true), J$.R(7677985, 'tag', tag, false, false));
                                } else {
                                    J$.B(763026, 'delete', J$.R(7678001, 'value', value, false, false), J$.R(7678009, 'symToStringTag', symToStringTag, false, true));
                                }
                            }
                            return J$.Rt(7678025, J$.R(7678017, 'result', result, false, false));
                        } catch (J$e) {
                            J$.Ex(7678177, J$e);
                        } finally {
                            if (J$.Fr(7678185))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(7678121, 'Symbol', Symbol, false, false, false);
            J$.N(7678129, 'objectProto', objectProto, false, false, false);
            J$.N(7678137, 'hasOwnProperty', hasOwnProperty, false, false, false);
            J$.N(7678145, 'nativeObjectToString', nativeObjectToString, false, false, false);
            J$.N(7678153, 'symToStringTag', symToStringTag, false, false, false);
            getRawTag = J$.N(7678169, 'getRawTag', J$.T(7678161, getRawTag, 12, false), true, false, false);
            var Symbol = J$.W(7677673, 'Symbol', J$.F(7677665, J$.I(typeof require === 'undefined' ? require = J$.R(7677649, 'require', undefined, true, true) : require = J$.R(7677649, 'require', require, true, true)), false)(J$.T(7677657, './_Symbol', 21, false)), Symbol, false, true);
            var objectProto = J$.W(7677697, 'objectProto', J$.G(7677689, J$.I(typeof Object === 'undefined' ? Object = J$.R(7677681, 'Object', undefined, true, true) : Object = J$.R(7677681, 'Object', Object, true, true)), 'prototype'), objectProto, false, true);
            var hasOwnProperty = J$.W(7677721, 'hasOwnProperty', J$.G(7677713, J$.R(7677705, 'objectProto', objectProto, false, true), 'hasOwnProperty'), hasOwnProperty, false, true);
            var nativeObjectToString = J$.W(7677745, 'nativeObjectToString', J$.G(7677737, J$.R(7677729, 'objectProto', objectProto, false, true), 'toString'), nativeObjectToString, false, true);
            var symToStringTag = J$.W(7677785, 'symToStringTag', J$.C(408480, J$.R(7677753, 'Symbol', Symbol, false, true)) ? J$.G(7677769, J$.R(7677761, 'Symbol', Symbol, false, true), 'toStringTag') : J$.T(7677777, undefined, 24, false), symToStringTag, false, true);
            J$.P(7678105, J$.I(typeof module === 'undefined' ? module = J$.R(7678089, 'module', undefined, true, true) : module = J$.R(7678089, 'module', module, true, true)), 'exports', J$.R(7678097, 'getRawTag', getRawTag, false, true));
        } catch (J$e) {
            J$.Ex(7678193, J$e);
        } finally {
            if (J$.Sr(7678201))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

