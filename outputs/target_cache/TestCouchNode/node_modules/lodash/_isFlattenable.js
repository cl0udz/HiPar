J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(7687089, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestCouchNode/node_modules/lodash/_isFlattenable.js');
            function isFlattenable(value) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(7687041, arguments.callee, this, arguments);
                            arguments = J$.N(7687049, 'arguments', arguments, true, false, false);
                            value = J$.N(7687057, 'value', value, true, false, false);
                            return J$.Rt(7687033, J$.C(409168, J$.C(409144, J$.F(7686961, J$.R(7686945, 'isArray', isArray, false, true), false)(J$.R(7686953, 'value', value, false, false))) ? J$._() : J$.F(7686985, J$.R(7686969, 'isArguments', isArguments, false, true), false)(J$.R(7686977, 'value', value, false, false))) ? J$._() : J$.U(763474, '!', J$.U(763466, '!', J$.C(409160, J$.C(409152, J$.R(7686993, 'spreadableSymbol', spreadableSymbol, false, true)) ? J$.R(7687001, 'value', value, false, false) : J$._()) ? J$.G(7687025, J$.R(7687009, 'value', value, false, false), J$.R(7687017, 'spreadableSymbol', spreadableSymbol, false, true)) : J$._())));
                        } catch (J$e) {
                            J$.Ex(7687145, J$e);
                        } finally {
                            if (J$.Fr(7687153))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(7687097, 'Symbol', Symbol, false, false, false);
            J$.N(7687105, 'isArguments', isArguments, false, false, false);
            J$.N(7687113, 'isArray', isArray, false, false, false);
            J$.N(7687121, 'spreadableSymbol', spreadableSymbol, false, false, false);
            isFlattenable = J$.N(7687137, 'isFlattenable', J$.T(7687129, isFlattenable, 12, false), true, false, false);
            var Symbol = J$.W(7686881, 'Symbol', J$.F(7686825, J$.I(typeof require === 'undefined' ? require = J$.R(7686809, 'require', undefined, true, true) : require = J$.R(7686809, 'require', require, true, true)), false)(J$.T(7686817, './_Symbol', 21, false)), Symbol, false, true), isArguments = J$.W(7686889, 'isArguments', J$.F(7686849, J$.I(typeof require === 'undefined' ? require = J$.R(7686833, 'require', undefined, true, true) : require = J$.R(7686833, 'require', require, true, true)), false)(J$.T(7686841, './isArguments', 21, false)), isArguments, false, true), isArray = J$.W(7686897, 'isArray', J$.F(7686873, J$.I(typeof require === 'undefined' ? require = J$.R(7686857, 'require', undefined, true, true) : require = J$.R(7686857, 'require', require, true, true)), false)(J$.T(7686865, './isArray', 21, false)), isArray, false, true);
            var spreadableSymbol = J$.W(7686937, 'spreadableSymbol', J$.C(409136, J$.R(7686905, 'Symbol', Symbol, false, true)) ? J$.G(7686921, J$.R(7686913, 'Symbol', Symbol, false, true), 'isConcatSpreadable') : J$.T(7686929, undefined, 24, false), spreadableSymbol, false, true);
            J$.P(7687081, J$.I(typeof module === 'undefined' ? module = J$.R(7687065, 'module', undefined, true, true) : module = J$.R(7687065, 'module', module, true, true)), 'exports', J$.R(7687073, 'isFlattenable', isFlattenable, false, true));
        } catch (J$e) {
            J$.Ex(7687161, J$e);
        } finally {
            if (J$.Sr(7687169))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

