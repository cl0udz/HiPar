J$.noInstrEval = false;
jalangiLabel2:
    while (true) {
        try {
            J$.Se(7620905, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestCouchNode/node_modules/lodash/_basePick.js');
            function basePick(object, paths) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(7620849, arguments.callee, this, arguments);
                            arguments = J$.N(7620857, 'arguments', arguments, true, false, false);
                            object = J$.N(7620865, 'object', object, true, false, false);
                            paths = J$.N(7620873, 'paths', paths, true, false, false);
                            return J$.Rt(7620841, J$.F(7620833, J$.R(7620729, 'basePickBy', basePickBy, false, true), false)(J$.R(7620737, 'object', object, false, false), J$.R(7620745, 'paths', paths, false, false), J$.T(7620825, function (value, path) {
                                jalangiLabel0:
                                    while (true) {
                                        try {
                                            J$.Fe(7620793, arguments.callee, this, arguments);
                                            arguments = J$.N(7620801, 'arguments', arguments, true, false, false);
                                            value = J$.N(7620809, 'value', value, true, false, false);
                                            path = J$.N(7620817, 'path', path, true, false, false);
                                            return J$.Rt(7620785, J$.F(7620777, J$.R(7620753, 'hasIn', hasIn, false, true), false)(J$.R(7620761, 'object', object, false, false), J$.R(7620769, 'path', path, false, false)));
                                        } catch (J$e) {
                                            J$.Ex(7620945, J$e);
                                        } finally {
                                            if (J$.Fr(7620953))
                                                continue jalangiLabel0;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false)));
                        } catch (J$e) {
                            J$.Ex(7620961, J$e);
                        } finally {
                            if (J$.Fr(7620969))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(7620913, 'basePickBy', basePickBy, false, false, false);
            J$.N(7620921, 'hasIn', hasIn, false, false, false);
            basePick = J$.N(7620937, 'basePick', J$.T(7620929, basePick, 12, false), true, false, false);
            var basePickBy = J$.W(7620713, 'basePickBy', J$.F(7620681, J$.I(typeof require === 'undefined' ? require = J$.R(7620665, 'require', undefined, true, true) : require = J$.R(7620665, 'require', require, true, true)), false)(J$.T(7620673, './_basePickBy', 21, false)), basePickBy, false, true), hasIn = J$.W(7620721, 'hasIn', J$.F(7620705, J$.I(typeof require === 'undefined' ? require = J$.R(7620689, 'require', undefined, true, true) : require = J$.R(7620689, 'require', require, true, true)), false)(J$.T(7620697, './hasIn', 21, false)), hasIn, false, true);
            J$.P(7620897, J$.I(typeof module === 'undefined' ? module = J$.R(7620881, 'module', undefined, true, true) : module = J$.R(7620881, 'module', module, true, true)), 'exports', J$.R(7620889, 'basePick', basePick, false, true));
        } catch (J$e) {
            J$.Ex(7620977, J$e);
        } finally {
            if (J$.Sr(7620985))
                continue jalangiLabel2;
            else
                break jalangiLabel2;
        }
    }
// JALANGI DO NOT INSTRUMENT

