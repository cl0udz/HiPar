J$.noInstrEval = false;
jalangiLabel2:
    while (true) {
        try {
            J$.Se(7708257, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestCouchNode/node_modules/lodash/_stringToPath.js');
            J$.N(7708265, 'memoizeCapped', memoizeCapped, false, false, false);
            J$.N(7708273, 'rePropName', rePropName, false, false, false);
            J$.N(7708281, 'reEscapeChar', reEscapeChar, false, false, false);
            J$.N(7708289, 'stringToPath', stringToPath, false, false, false);
            var memoizeCapped = J$.W(7707889, 'memoizeCapped', J$.F(7707881, J$.I(typeof require === 'undefined' ? require = J$.R(7707865, 'require', undefined, true, true) : require = J$.R(7707865, 'require', require, true, true)), false)(J$.T(7707873, './_memoizeCapped', 21, false)), memoizeCapped, false, true);
            var rePropName = J$.W(7707905, 'rePropName', J$.T(7707897, /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g, 14, false), rePropName, false, true);
            var reEscapeChar = J$.W(7707921, 'reEscapeChar', J$.T(7707913, /\\(\\)?/g, 14, false), reEscapeChar, false, true);
            var stringToPath = J$.W(7708225, 'stringToPath', J$.F(7708217, J$.R(7707929, 'memoizeCapped', memoizeCapped, false, true), false)(J$.T(7708209, function (string) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(7708177, arguments.callee, this, arguments);
                            arguments = J$.N(7708185, 'arguments', arguments, true, false, false);
                            string = J$.N(7708193, 'string', string, true, false, false);
                            J$.N(7708201, 'result', result, false, false, false);
                            var result = J$.W(7707945, 'result', J$.T(7707937, [], 10, false), result, false, false);
                            if (J$.C(410224, J$.B(764962, '===', J$.M(7707969, J$.R(7707953, 'string', string, false, false), 'charCodeAt', false)(J$.T(7707961, 0, 22, false)), J$.T(7707977, 46, 22, false)))) {
                                J$.M(7708001, J$.R(7707985, 'result', result, false, false), 'push', false)(J$.T(7707993, '', 21, false));
                            }
                            J$.M(7708153, J$.R(7708009, 'string', string, false, false), 'replace', false)(J$.R(7708017, 'rePropName', rePropName, false, true), J$.T(7708145, function (match, number, quote, subString) {
                                jalangiLabel0:
                                    while (true) {
                                        try {
                                            J$.Fe(7708097, arguments.callee, this, arguments);
                                            arguments = J$.N(7708105, 'arguments', arguments, true, false, false);
                                            match = J$.N(7708113, 'match', match, true, false, false);
                                            number = J$.N(7708121, 'number', number, true, false, false);
                                            quote = J$.N(7708129, 'quote', quote, true, false, false);
                                            subString = J$.N(7708137, 'subString', subString, true, false, false);
                                            J$.M(7708089, J$.R(7708025, 'result', result, false, false), 'push', false)(J$.C(410240, J$.R(7708033, 'quote', quote, false, false)) ? J$.M(7708065, J$.R(7708041, 'subString', subString, false, false), 'replace', false)(J$.R(7708049, 'reEscapeChar', reEscapeChar, false, true), J$.T(7708057, '$1', 21, false)) : J$.C(410232, J$.R(7708073, 'number', number, false, false)) ? J$._() : J$.R(7708081, 'match', match, false, false));
                                        } catch (J$e) {
                                            J$.Ex(7708297, J$e);
                                        } finally {
                                            if (J$.Fr(7708305))
                                                continue jalangiLabel0;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            return J$.Rt(7708169, J$.R(7708161, 'result', result, false, false));
                        } catch (J$e) {
                            J$.Ex(7708313, J$e);
                        } finally {
                            if (J$.Fr(7708321))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false)), stringToPath, false, true);
            J$.P(7708249, J$.I(typeof module === 'undefined' ? module = J$.R(7708233, 'module', undefined, true, true) : module = J$.R(7708233, 'module', module, true, true)), 'exports', J$.R(7708241, 'stringToPath', stringToPath, false, true));
        } catch (J$e) {
            J$.Ex(7708329, J$e);
        } finally {
            if (J$.Sr(7708337))
                continue jalangiLabel2;
            else
                break jalangiLabel2;
        }
    }
// JALANGI DO NOT INSTRUMENT

