J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(7808433, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestCouchNode/node_modules/lodash/flatMapDepth.js');
            function flatMapDepth(collection, iteratee, depth) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(7808369, arguments.callee, this, arguments);
                            arguments = J$.N(7808377, 'arguments', arguments, true, false, false);
                            collection = J$.N(7808385, 'collection', collection, true, false, false);
                            iteratee = J$.N(7808393, 'iteratee', iteratee, true, false, false);
                            depth = J$.N(7808401, 'depth', depth, true, false, false);
                            depth = J$.W(7808297, 'depth', J$.C(416272, J$.B(773626, '===', J$.R(7808249, 'depth', depth, false, false), J$.T(7808257, undefined, 24, false))) ? J$.T(7808265, 1, 22, false) : J$.F(7808289, J$.R(7808273, 'toInteger', toInteger, false, true), false)(J$.R(7808281, 'depth', depth, false, false)), depth, false, false);
                            return J$.Rt(7808361, J$.F(7808353, J$.R(7808305, 'baseFlatten', baseFlatten, false, true), false)(J$.F(7808337, J$.R(7808313, 'map', map, false, true), false)(J$.R(7808321, 'collection', collection, false, false), J$.R(7808329, 'iteratee', iteratee, false, false)), J$.R(7808345, 'depth', depth, false, false)));
                        } catch (J$e) {
                            J$.Ex(7808481, J$e);
                        } finally {
                            if (J$.Fr(7808489))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(7808441, 'baseFlatten', baseFlatten, false, false, false);
            J$.N(7808449, 'map', map, false, false, false);
            J$.N(7808457, 'toInteger', toInteger, false, false, false);
            flatMapDepth = J$.N(7808473, 'flatMapDepth', J$.T(7808465, flatMapDepth, 12, false), true, false, false);
            var baseFlatten = J$.W(7808225, 'baseFlatten', J$.F(7808169, J$.I(typeof require === 'undefined' ? require = J$.R(7808153, 'require', undefined, true, true) : require = J$.R(7808153, 'require', require, true, true)), false)(J$.T(7808161, './_baseFlatten', 21, false)), baseFlatten, false, true), map = J$.W(7808233, 'map', J$.F(7808193, J$.I(typeof require === 'undefined' ? require = J$.R(7808177, 'require', undefined, true, true) : require = J$.R(7808177, 'require', require, true, true)), false)(J$.T(7808185, './map', 21, false)), map, false, true), toInteger = J$.W(7808241, 'toInteger', J$.F(7808217, J$.I(typeof require === 'undefined' ? require = J$.R(7808201, 'require', undefined, true, true) : require = J$.R(7808201, 'require', require, true, true)), false)(J$.T(7808209, './toInteger', 21, false)), toInteger, false, true);
            J$.P(7808425, J$.I(typeof module === 'undefined' ? module = J$.R(7808409, 'module', undefined, true, true) : module = J$.R(7808409, 'module', module, true, true)), 'exports', J$.R(7808417, 'flatMapDepth', flatMapDepth, false, true));
        } catch (J$e) {
            J$.Ex(7808497, J$e);
        } finally {
            if (J$.Sr(7808505))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

