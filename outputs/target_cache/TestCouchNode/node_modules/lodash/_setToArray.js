J$.noInstrEval = false;
jalangiLabel2:
    while (true) {
        try {
            J$.Se(7703473, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestCouchNode/node_modules/lodash/_setToArray.js');
            function setToArray(set) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(7703409, arguments.callee, this, arguments);
                            arguments = J$.N(7703417, 'arguments', arguments, true, false, false);
                            set = J$.N(7703425, 'set', set, true, false, false);
                            J$.N(7703433, 'index', index, false, false, false);
                            J$.N(7703441, 'result', result, false, false, false);
                            var index = J$.W(7703289, 'index', J$.U(764690, '-', J$.T(7703249, 1, 22, false)), index, false, false), result = J$.W(7703297, 'result', J$.F(7703281, J$.I(typeof Array === 'undefined' ? Array = J$.R(7703257, 'Array', undefined, true, true) : Array = J$.R(7703257, 'Array', Array, true, true)), false)(J$.G(7703273, J$.R(7703265, 'set', set, false, false), 'size')), result, false, false);
                            J$.M(7703385, J$.R(7703305, 'set', set, false, false), 'forEach', false)(J$.T(7703377, function (value) {
                                jalangiLabel0:
                                    while (true) {
                                        try {
                                            J$.Fe(7703353, arguments.callee, this, arguments);
                                            arguments = J$.N(7703361, 'arguments', arguments, true, false, false);
                                            value = J$.N(7703369, 'value', value, true, false, false);
                                            J$.P(7703345, J$.R(7703313, 'result', result, false, false), index = J$.W(7703329, 'index', J$.B(764706, '+', J$.U(764698, '+', J$.R(7703321, 'index', index, false, false)), 1), index, false, false), J$.R(7703337, 'value', value, false, false));
                                        } catch (J$e) {
                                            J$.Ex(7703497, J$e);
                                        } finally {
                                            if (J$.Fr(7703505))
                                                continue jalangiLabel0;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            return J$.Rt(7703401, J$.R(7703393, 'result', result, false, false));
                        } catch (J$e) {
                            J$.Ex(7703513, J$e);
                        } finally {
                            if (J$.Fr(7703521))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            setToArray = J$.N(7703489, 'setToArray', J$.T(7703481, setToArray, 12, false), true, false, false);
            J$.P(7703465, J$.I(typeof module === 'undefined' ? module = J$.R(7703449, 'module', undefined, true, true) : module = J$.R(7703449, 'module', module, true, true)), 'exports', J$.R(7703457, 'setToArray', setToArray, false, true));
        } catch (J$e) {
            J$.Ex(7703529, J$e);
        } finally {
            if (J$.Sr(7703537))
                continue jalangiLabel2;
            else
                break jalangiLabel2;
        }
    }
// JALANGI DO NOT INSTRUMENT

