J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(7575313, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestCouchNode/node_modules/lodash/_Hash.js');
            function Hash(entries) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(7575073, arguments.callee, this, arguments);
                            arguments = J$.N(7575081, 'arguments', arguments, true, false, false);
                            entries = J$.N(7575089, 'entries', entries, true, false, false);
                            J$.N(7575097, 'index', index, false, false, false);
                            J$.N(7575105, 'length', length, false, false, false);
                            J$.N(7575113, 'entry', entry, false, false, false);
                            var index = J$.W(7574921, 'index', J$.U(755930, '-', J$.T(7574873, 1, 22, false)), index, false, false), length = J$.W(7574929, 'length', J$.C(402512, J$.B(755938, '==', J$.R(7574881, 'entries', entries, false, false), J$.T(7574889, null, 25, false))) ? J$.T(7574897, 0, 22, false) : J$.G(7574913, J$.R(7574905, 'entries', entries, false, false), 'length'), length, false, false);
                            J$.M(7574945, J$.R(7574937, 'this', this, false, false), 'clear', false)();
                            while (J$.C(402520, J$.B(755962, '<', index = J$.W(7574961, 'index', J$.B(755954, '+', J$.U(755946, '+', J$.R(7574953, 'index', index, false, false)), 1), index, false, false), J$.R(7574969, 'length', length, false, false)))) {
                                var entry = J$.W(7575001, 'entry', J$.G(7574993, J$.R(7574977, 'entries', entries, false, false), J$.R(7574985, 'index', index, false, false)), entry, false, false);
                                J$.M(7575065, J$.R(7575009, 'this', this, false, false), 'set', false)(J$.G(7575033, J$.R(7575017, 'entry', entry, false, false), J$.T(7575025, 0, 22, false)), J$.G(7575057, J$.R(7575041, 'entry', entry, false, false), J$.T(7575049, 1, 22, false)));
                            }
                        } catch (J$e) {
                            J$.Ex(7575377, J$e);
                        } finally {
                            if (J$.Fr(7575385))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(7575321, 'hashClear', hashClear, false, false, false);
            J$.N(7575329, 'hashDelete', hashDelete, false, false, false);
            J$.N(7575337, 'hashGet', hashGet, false, false, false);
            J$.N(7575345, 'hashHas', hashHas, false, false, false);
            J$.N(7575353, 'hashSet', hashSet, false, false, false);
            Hash = J$.N(7575369, 'Hash', J$.T(7575361, Hash, 12, false), true, false, false);
            var hashClear = J$.W(7574833, 'hashClear', J$.F(7574729, J$.I(typeof require === 'undefined' ? require = J$.R(7574713, 'require', undefined, true, true) : require = J$.R(7574713, 'require', require, true, true)), false)(J$.T(7574721, './_hashClear', 21, false)), hashClear, false, true), hashDelete = J$.W(7574841, 'hashDelete', J$.F(7574753, J$.I(typeof require === 'undefined' ? require = J$.R(7574737, 'require', undefined, true, true) : require = J$.R(7574737, 'require', require, true, true)), false)(J$.T(7574745, './_hashDelete', 21, false)), hashDelete, false, true), hashGet = J$.W(7574849, 'hashGet', J$.F(7574777, J$.I(typeof require === 'undefined' ? require = J$.R(7574761, 'require', undefined, true, true) : require = J$.R(7574761, 'require', require, true, true)), false)(J$.T(7574769, './_hashGet', 21, false)), hashGet, false, true), hashHas = J$.W(7574857, 'hashHas', J$.F(7574801, J$.I(typeof require === 'undefined' ? require = J$.R(7574785, 'require', undefined, true, true) : require = J$.R(7574785, 'require', require, true, true)), false)(J$.T(7574793, './_hashHas', 21, false)), hashHas, false, true), hashSet = J$.W(7574865, 'hashSet', J$.F(7574825, J$.I(typeof require === 'undefined' ? require = J$.R(7574809, 'require', undefined, true, true) : require = J$.R(7574809, 'require', require, true, true)), false)(J$.T(7574817, './_hashSet', 21, false)), hashSet, false, true);
            J$.P(7575145, J$.G(7575129, J$.R(7575121, 'Hash', Hash, false, true), 'prototype'), 'clear', J$.R(7575137, 'hashClear', hashClear, false, true));
            J$.P(7575185, J$.G(7575161, J$.R(7575153, 'Hash', Hash, false, true), 'prototype'), J$.T(7575169, 'delete', 21, false), J$.R(7575177, 'hashDelete', hashDelete, false, true));
            J$.P(7575217, J$.G(7575201, J$.R(7575193, 'Hash', Hash, false, true), 'prototype'), 'get', J$.R(7575209, 'hashGet', hashGet, false, true));
            J$.P(7575249, J$.G(7575233, J$.R(7575225, 'Hash', Hash, false, true), 'prototype'), 'has', J$.R(7575241, 'hashHas', hashHas, false, true));
            J$.P(7575281, J$.G(7575265, J$.R(7575257, 'Hash', Hash, false, true), 'prototype'), 'set', J$.R(7575273, 'hashSet', hashSet, false, true));
            J$.P(7575305, J$.I(typeof module === 'undefined' ? module = J$.R(7575289, 'module', undefined, true, true) : module = J$.R(7575289, 'module', module, true, true)), 'exports', J$.R(7575297, 'Hash', Hash, false, true));
        } catch (J$e) {
            J$.Ex(7575393, J$e);
        } finally {
            if (J$.Sr(7575401))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

