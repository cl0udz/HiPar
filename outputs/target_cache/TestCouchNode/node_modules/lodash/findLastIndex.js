J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(7807145, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestCouchNode/node_modules/lodash/findLastIndex.js');
            function findLastIndex(array, predicate, fromIndex) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(7807065, arguments.callee, this, arguments);
                            arguments = J$.N(7807073, 'arguments', arguments, true, false, false);
                            array = J$.N(7807081, 'array', array, true, false, false);
                            predicate = J$.N(7807089, 'predicate', predicate, true, false, false);
                            fromIndex = J$.N(7807097, 'fromIndex', fromIndex, true, false, false);
                            J$.N(7807105, 'length', length, false, false, false);
                            J$.N(7807113, 'index', index, false, false, false);
                            var length = J$.W(7806777, 'length', J$.C(416240, J$.B(773554, '==', J$.R(7806737, 'array', array, false, false), J$.T(7806745, null, 25, false))) ? J$.T(7806753, 0, 22, false) : J$.G(7806769, J$.R(7806761, 'array', array, false, false), 'length'), length, false, false);
                            if (J$.C(416248, J$.U(773562, '!', J$.R(7806785, 'length', length, false, false)))) {
                                return J$.Rt(7806801, J$.U(773570, '-', J$.T(7806793, 1, 22, false)));
                            }
                            var index = J$.W(7806825, 'index', J$.B(773578, '-', J$.R(7806809, 'length', length, false, false), J$.T(7806817, 1, 22, false)), index, false, false);
                            if (J$.C(416264, J$.B(773586, '!==', J$.R(7806833, 'fromIndex', fromIndex, false, false), J$.T(7806841, undefined, 24, false)))) {
                                index = J$.W(7806873, 'index', J$.F(7806865, J$.R(7806849, 'toInteger', toInteger, false, true), false)(J$.R(7806857, 'fromIndex', fromIndex, false, false)), index, false, false);
                                index = J$.W(7806977, 'index', J$.C(416256, J$.B(773594, '<', J$.R(7806881, 'fromIndex', fromIndex, false, false), J$.T(7806889, 0, 22, false))) ? J$.F(7806929, J$.R(7806897, 'nativeMax', nativeMax, false, true), false)(J$.B(773602, '+', J$.R(7806905, 'length', length, false, false), J$.R(7806913, 'index', index, false, false)), J$.T(7806921, 0, 22, false)) : J$.F(7806969, J$.R(7806937, 'nativeMin', nativeMin, false, true), false)(J$.R(7806945, 'index', index, false, false), J$.B(773610, '-', J$.R(7806953, 'length', length, false, false), J$.T(7806961, 1, 22, false))), index, false, false);
                            }
                            return J$.Rt(7807057, J$.F(7807049, J$.R(7806985, 'baseFindIndex', baseFindIndex, false, true), false)(J$.R(7806993, 'array', array, false, false), J$.F(7807025, J$.R(7807001, 'baseIteratee', baseIteratee, false, true), false)(J$.R(7807009, 'predicate', predicate, false, false), J$.T(7807017, 3, 22, false)), J$.R(7807033, 'index', index, false, false), J$.T(7807041, true, 23, false)));
                        } catch (J$e) {
                            J$.Ex(7807209, J$e);
                        } finally {
                            if (J$.Fr(7807217))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(7807153, 'baseFindIndex', baseFindIndex, false, false, false);
            J$.N(7807161, 'baseIteratee', baseIteratee, false, false, false);
            J$.N(7807169, 'toInteger', toInteger, false, false, false);
            J$.N(7807177, 'nativeMax', nativeMax, false, false, false);
            J$.N(7807185, 'nativeMin', nativeMin, false, false, false);
            findLastIndex = J$.N(7807201, 'findLastIndex', J$.T(7807193, findLastIndex, 12, false), true, false, false);
            var baseFindIndex = J$.W(7806665, 'baseFindIndex', J$.F(7806609, J$.I(typeof require === 'undefined' ? require = J$.R(7806593, 'require', undefined, true, true) : require = J$.R(7806593, 'require', require, true, true)), false)(J$.T(7806601, './_baseFindIndex', 21, false)), baseFindIndex, false, true), baseIteratee = J$.W(7806673, 'baseIteratee', J$.F(7806633, J$.I(typeof require === 'undefined' ? require = J$.R(7806617, 'require', undefined, true, true) : require = J$.R(7806617, 'require', require, true, true)), false)(J$.T(7806625, './_baseIteratee', 21, false)), baseIteratee, false, true), toInteger = J$.W(7806681, 'toInteger', J$.F(7806657, J$.I(typeof require === 'undefined' ? require = J$.R(7806641, 'require', undefined, true, true) : require = J$.R(7806641, 'require', require, true, true)), false)(J$.T(7806649, './toInteger', 21, false)), toInteger, false, true);
            var nativeMax = J$.W(7806721, 'nativeMax', J$.G(7806697, J$.I(typeof Math === 'undefined' ? Math = J$.R(7806689, 'Math', undefined, true, true) : Math = J$.R(7806689, 'Math', Math, true, true)), 'max'), nativeMax, false, true), nativeMin = J$.W(7806729, 'nativeMin', J$.G(7806713, J$.I(typeof Math === 'undefined' ? Math = J$.R(7806705, 'Math', undefined, true, true) : Math = J$.R(7806705, 'Math', Math, true, true)), 'min'), nativeMin, false, true);
            J$.P(7807137, J$.I(typeof module === 'undefined' ? module = J$.R(7807121, 'module', undefined, true, true) : module = J$.R(7807121, 'module', module, true, true)), 'exports', J$.R(7807129, 'findLastIndex', findLastIndex, false, true));
        } catch (J$e) {
            J$.Ex(7807225, J$e);
        } finally {
            if (J$.Sr(7807233))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

