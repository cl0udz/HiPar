J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(7806033, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestCouchNode/node_modules/lodash/findIndex.js');
            function findIndex(array, predicate, fromIndex) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(7805953, arguments.callee, this, arguments);
                            arguments = J$.N(7805961, 'arguments', arguments, true, false, false);
                            array = J$.N(7805969, 'array', array, true, false, false);
                            predicate = J$.N(7805977, 'predicate', predicate, true, false, false);
                            fromIndex = J$.N(7805985, 'fromIndex', fromIndex, true, false, false);
                            J$.N(7805993, 'length', length, false, false, false);
                            J$.N(7806001, 'index', index, false, false, false);
                            var length = J$.W(7805729, 'length', J$.C(416208, J$.B(773506, '==', J$.R(7805689, 'array', array, false, false), J$.T(7805697, null, 25, false))) ? J$.T(7805705, 0, 22, false) : J$.G(7805721, J$.R(7805713, 'array', array, false, false), 'length'), length, false, false);
                            if (J$.C(416216, J$.U(773514, '!', J$.R(7805737, 'length', length, false, false)))) {
                                return J$.Rt(7805753, J$.U(773522, '-', J$.T(7805745, 1, 22, false)));
                            }
                            var index = J$.W(7805809, 'index', J$.C(416224, J$.B(773530, '==', J$.R(7805761, 'fromIndex', fromIndex, false, false), J$.T(7805769, null, 25, false))) ? J$.T(7805777, 0, 22, false) : J$.F(7805801, J$.R(7805785, 'toInteger', toInteger, false, true), false)(J$.R(7805793, 'fromIndex', fromIndex, false, false)), index, false, false);
                            if (J$.C(416232, J$.B(773538, '<', J$.R(7805817, 'index', index, false, false), J$.T(7805825, 0, 22, false)))) {
                                index = J$.W(7805873, 'index', J$.F(7805865, J$.R(7805833, 'nativeMax', nativeMax, false, true), false)(J$.B(773546, '+', J$.R(7805841, 'length', length, false, false), J$.R(7805849, 'index', index, false, false)), J$.T(7805857, 0, 22, false)), index, false, false);
                            }
                            return J$.Rt(7805945, J$.F(7805937, J$.R(7805881, 'baseFindIndex', baseFindIndex, false, true), false)(J$.R(7805889, 'array', array, false, false), J$.F(7805921, J$.R(7805897, 'baseIteratee', baseIteratee, false, true), false)(J$.R(7805905, 'predicate', predicate, false, false), J$.T(7805913, 3, 22, false)), J$.R(7805929, 'index', index, false, false)));
                        } catch (J$e) {
                            J$.Ex(7806089, J$e);
                        } finally {
                            if (J$.Fr(7806097))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(7806041, 'baseFindIndex', baseFindIndex, false, false, false);
            J$.N(7806049, 'baseIteratee', baseIteratee, false, false, false);
            J$.N(7806057, 'toInteger', toInteger, false, false, false);
            J$.N(7806065, 'nativeMax', nativeMax, false, false, false);
            findIndex = J$.N(7806081, 'findIndex', J$.T(7806073, findIndex, 12, false), true, false, false);
            var baseFindIndex = J$.W(7805641, 'baseFindIndex', J$.F(7805585, J$.I(typeof require === 'undefined' ? require = J$.R(7805569, 'require', undefined, true, true) : require = J$.R(7805569, 'require', require, true, true)), false)(J$.T(7805577, './_baseFindIndex', 21, false)), baseFindIndex, false, true), baseIteratee = J$.W(7805649, 'baseIteratee', J$.F(7805609, J$.I(typeof require === 'undefined' ? require = J$.R(7805593, 'require', undefined, true, true) : require = J$.R(7805593, 'require', require, true, true)), false)(J$.T(7805601, './_baseIteratee', 21, false)), baseIteratee, false, true), toInteger = J$.W(7805657, 'toInteger', J$.F(7805633, J$.I(typeof require === 'undefined' ? require = J$.R(7805617, 'require', undefined, true, true) : require = J$.R(7805617, 'require', require, true, true)), false)(J$.T(7805625, './toInteger', 21, false)), toInteger, false, true);
            var nativeMax = J$.W(7805681, 'nativeMax', J$.G(7805673, J$.I(typeof Math === 'undefined' ? Math = J$.R(7805665, 'Math', undefined, true, true) : Math = J$.R(7805665, 'Math', Math, true, true)), 'max'), nativeMax, false, true);
            J$.P(7806025, J$.I(typeof module === 'undefined' ? module = J$.R(7806009, 'module', undefined, true, true) : module = J$.R(7806009, 'module', module, true, true)), 'exports', J$.R(7806017, 'findIndex', findIndex, false, true));
        } catch (J$e) {
            J$.Ex(7806105, J$e);
        } finally {
            if (J$.Sr(7806113))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

