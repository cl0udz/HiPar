J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(7638529, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestCouchNode/node_modules/lodash/_castPath.js');
            function castPath(value, object) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(7638473, arguments.callee, this, arguments);
                            arguments = J$.N(7638481, 'arguments', arguments, true, false, false);
                            value = J$.N(7638489, 'value', value, true, false, false);
                            object = J$.N(7638497, 'object', object, true, false, false);
                            if (J$.C(405984, J$.F(7638353, J$.R(7638337, 'isArray', isArray, false, true), false)(J$.R(7638345, 'value', value, false, false)))) {
                                return J$.Rt(7638369, J$.R(7638361, 'value', value, false, false));
                            }
                            return J$.Rt(7638465, J$.C(405992, J$.F(7638401, J$.R(7638377, 'isKey', isKey, false, true), false)(J$.R(7638385, 'value', value, false, false), J$.R(7638393, 'object', object, false, false))) ? J$.T(7638417, [J$.R(7638409, 'value', value, false, false)], 10, false) : J$.F(7638457, J$.R(7638425, 'stringToPath', stringToPath, false, true), false)(J$.F(7638449, J$.R(7638433, 'toString', toString, false, true), false)(J$.R(7638441, 'value', value, false, false))));
                        } catch (J$e) {
                            J$.Ex(7638585, J$e);
                        } finally {
                            if (J$.Fr(7638593))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(7638537, 'isArray', isArray, false, false, false);
            J$.N(7638545, 'isKey', isKey, false, false, false);
            J$.N(7638553, 'stringToPath', stringToPath, false, false, false);
            J$.N(7638561, 'toString', toString, false, false, false);
            castPath = J$.N(7638577, 'castPath', J$.T(7638569, castPath, 12, false), true, false, false);
            var isArray = J$.W(7638305, 'isArray', J$.F(7638225, J$.I(typeof require === 'undefined' ? require = J$.R(7638209, 'require', undefined, true, true) : require = J$.R(7638209, 'require', require, true, true)), false)(J$.T(7638217, './isArray', 21, false)), isArray, false, true), isKey = J$.W(7638313, 'isKey', J$.F(7638249, J$.I(typeof require === 'undefined' ? require = J$.R(7638233, 'require', undefined, true, true) : require = J$.R(7638233, 'require', require, true, true)), false)(J$.T(7638241, './_isKey', 21, false)), isKey, false, true), stringToPath = J$.W(7638321, 'stringToPath', J$.F(7638273, J$.I(typeof require === 'undefined' ? require = J$.R(7638257, 'require', undefined, true, true) : require = J$.R(7638257, 'require', require, true, true)), false)(J$.T(7638265, './_stringToPath', 21, false)), stringToPath, false, true), toString = J$.W(7638329, 'toString', J$.F(7638297, J$.I(typeof require === 'undefined' ? require = J$.R(7638281, 'require', undefined, true, true) : require = J$.R(7638281, 'require', require, true, true)), false)(J$.T(7638289, './toString', 21, false)), toString, false, true);
            J$.P(7638521, J$.I(typeof module === 'undefined' ? module = J$.R(7638505, 'module', undefined, true, true) : module = J$.R(7638505, 'module', module, true, true)), 'exports', J$.R(7638513, 'castPath', castPath, false, true));
        } catch (J$e) {
            J$.Ex(7638601, J$e);
        } finally {
            if (J$.Sr(7638609))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

