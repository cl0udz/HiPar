J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(4428297, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestCouchNode/node_modules/lodash/takeRight.js');
            function takeRight(array, n, guard) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(4428225, arguments.callee, this, arguments);
                            arguments = J$.N(4428233, 'arguments', arguments, true, false, false);
                            array = J$.N(4428241, 'array', array, true, false, false);
                            n = J$.N(4428249, 'n', n, true, false, false);
                            guard = J$.N(4428257, 'guard', guard, true, false, false);
                            J$.N(4428265, 'length', length, false, false, false);
                            var length = J$.W(4428033, 'length', J$.C(246624, J$.B(549938, '==', J$.R(4427993, 'array', array, false, false), J$.T(4428001, null, 25, false))) ? J$.T(4428009, 0, 22, false) : J$.G(4428025, J$.R(4428017, 'array', array, false, false), 'length'), length, false, false);
                            if (J$.C(246632, J$.U(549946, '!', J$.R(4428041, 'length', length, false, false)))) {
                                return J$.Rt(4428057, J$.T(4428049, [], 10, false));
                            }
                            n = J$.W(4428121, 'n', J$.C(246648, J$.C(246640, J$.R(4428065, 'guard', guard, false, false)) ? J$._() : J$.B(549954, '===', J$.R(4428073, 'n', n, false, false), J$.T(4428081, undefined, 24, false))) ? J$.T(4428089, 1, 22, false) : J$.F(4428113, J$.R(4428097, 'toInteger', toInteger, false, true), false)(J$.R(4428105, 'n', n, false, false)), n, false, false);
                            n = J$.W(4428145, 'n', J$.B(549962, '-', J$.R(4428129, 'length', length, false, false), J$.R(4428137, 'n', n, false, false)), n, false, false);
                            return J$.Rt(4428217, J$.F(4428209, J$.R(4428153, 'baseSlice', baseSlice, false, true), false)(J$.R(4428161, 'array', array, false, false), J$.C(246656, J$.B(549970, '<', J$.R(4428169, 'n', n, false, false), J$.T(4428177, 0, 22, false))) ? J$.T(4428185, 0, 22, false) : J$.R(4428193, 'n', n, false, false), J$.R(4428201, 'length', length, false, false)));
                        } catch (J$e) {
                            J$.Ex(4428337, J$e);
                        } finally {
                            if (J$.Fr(4428345))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(4428305, 'baseSlice', baseSlice, false, false, false);
            J$.N(4428313, 'toInteger', toInteger, false, false, false);
            takeRight = J$.N(4428329, 'takeRight', J$.T(4428321, takeRight, 12, false), true, false, false);
            var baseSlice = J$.W(4427977, 'baseSlice', J$.F(4427945, J$.I(typeof require === 'undefined' ? require = J$.R(4427929, 'require', undefined, true, true) : require = J$.R(4427929, 'require', require, true, true)), false)(J$.T(4427937, './_baseSlice', 21, false)), baseSlice, false, true), toInteger = J$.W(4427985, 'toInteger', J$.F(4427969, J$.I(typeof require === 'undefined' ? require = J$.R(4427953, 'require', undefined, true, true) : require = J$.R(4427953, 'require', require, true, true)), false)(J$.T(4427961, './toInteger', 21, false)), toInteger, false, true);
            J$.P(4428289, J$.I(typeof module === 'undefined' ? module = J$.R(4428273, 'module', undefined, true, true) : module = J$.R(4428273, 'module', module, true, true)), 'exports', J$.R(4428281, 'takeRight', takeRight, false, true));
        } catch (J$e) {
            J$.Ex(4428353, J$e);
        } finally {
            if (J$.Sr(4428361))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

