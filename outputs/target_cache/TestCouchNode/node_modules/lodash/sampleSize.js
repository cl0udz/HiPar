J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(4416633, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestCouchNode/node_modules/lodash/sampleSize.js');
            function sampleSize(collection, n, guard) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(4416561, arguments.callee, this, arguments);
                            arguments = J$.N(4416569, 'arguments', arguments, true, false, false);
                            collection = J$.N(4416577, 'collection', collection, true, false, false);
                            n = J$.N(4416585, 'n', n, true, false, false);
                            guard = J$.N(4416593, 'guard', guard, true, false, false);
                            J$.N(4416601, 'func', func, false, false, false);
                            if (J$.C(246104, J$.C(246096, J$.R(4416361, 'guard', guard, false, false)) ? J$.F(4416401, J$.R(4416369, 'isIterateeCall', isIterateeCall, false, true), false)(J$.R(4416377, 'collection', collection, false, false), J$.R(4416385, 'n', n, false, false), J$.R(4416393, 'guard', guard, false, false)) : J$.B(549554, '===', J$.R(4416409, 'n', n, false, false), J$.T(4416417, undefined, 24, false)))) {
                                n = J$.W(4416433, 'n', J$.T(4416425, 1, 22, false), n, false, false);
                            } else {
                                n = J$.W(4416465, 'n', J$.F(4416457, J$.R(4416441, 'toInteger', toInteger, false, true), false)(J$.R(4416449, 'n', n, false, false)), n, false, false);
                            }
                            var func = J$.W(4416513, 'func', J$.C(246112, J$.F(4416489, J$.R(4416473, 'isArray', isArray, false, true), false)(J$.R(4416481, 'collection', collection, false, false))) ? J$.R(4416497, 'arraySampleSize', arraySampleSize, false, true) : J$.R(4416505, 'baseSampleSize', baseSampleSize, false, true), func, false, false);
                            return J$.Rt(4416553, J$.F(4416545, J$.R(4416521, 'func', func, false, false), false)(J$.R(4416529, 'collection', collection, false, false), J$.R(4416537, 'n', n, false, false)));
                        } catch (J$e) {
                            J$.Ex(4416697, J$e);
                        } finally {
                            if (J$.Fr(4416705))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(4416641, 'arraySampleSize', arraySampleSize, false, false, false);
            J$.N(4416649, 'baseSampleSize', baseSampleSize, false, false, false);
            J$.N(4416657, 'isArray', isArray, false, false, false);
            J$.N(4416665, 'isIterateeCall', isIterateeCall, false, false, false);
            J$.N(4416673, 'toInteger', toInteger, false, false, false);
            sampleSize = J$.N(4416689, 'sampleSize', J$.T(4416681, sampleSize, 12, false), true, false, false);
            var arraySampleSize = J$.W(4416321, 'arraySampleSize', J$.F(4416217, J$.I(typeof require === 'undefined' ? require = J$.R(4416201, 'require', undefined, true, true) : require = J$.R(4416201, 'require', require, true, true)), false)(J$.T(4416209, './_arraySampleSize', 21, false)), arraySampleSize, false, true), baseSampleSize = J$.W(4416329, 'baseSampleSize', J$.F(4416241, J$.I(typeof require === 'undefined' ? require = J$.R(4416225, 'require', undefined, true, true) : require = J$.R(4416225, 'require', require, true, true)), false)(J$.T(4416233, './_baseSampleSize', 21, false)), baseSampleSize, false, true), isArray = J$.W(4416337, 'isArray', J$.F(4416265, J$.I(typeof require === 'undefined' ? require = J$.R(4416249, 'require', undefined, true, true) : require = J$.R(4416249, 'require', require, true, true)), false)(J$.T(4416257, './isArray', 21, false)), isArray, false, true), isIterateeCall = J$.W(4416345, 'isIterateeCall', J$.F(4416289, J$.I(typeof require === 'undefined' ? require = J$.R(4416273, 'require', undefined, true, true) : require = J$.R(4416273, 'require', require, true, true)), false)(J$.T(4416281, './_isIterateeCall', 21, false)), isIterateeCall, false, true), toInteger = J$.W(4416353, 'toInteger', J$.F(4416313, J$.I(typeof require === 'undefined' ? require = J$.R(4416297, 'require', undefined, true, true) : require = J$.R(4416297, 'require', require, true, true)), false)(J$.T(4416305, './toInteger', 21, false)), toInteger, false, true);
            J$.P(4416625, J$.I(typeof module === 'undefined' ? module = J$.R(4416609, 'module', undefined, true, true) : module = J$.R(4416609, 'module', module, true, true)), 'exports', J$.R(4416617, 'sampleSize', sampleSize, false, true));
        } catch (J$e) {
            J$.Ex(4416713, J$e);
        } finally {
            if (J$.Sr(4416721))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

