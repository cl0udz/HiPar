J$.noInstrEval = false;
jalangiLabel2:
    while (true) {
        try {
            J$.Se(7649681, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestCouchNode/node_modules/lodash/_createCaseFirst.js');
            function createCaseFirst(methodName) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(7649633, arguments.callee, this, arguments);
                            arguments = J$.N(7649641, 'arguments', arguments, true, false, false);
                            methodName = J$.N(7649649, 'methodName', methodName, true, false, false);
                            return J$.Rt(7649625, J$.T(7649617, function (string) {
                                jalangiLabel0:
                                    while (true) {
                                        try {
                                            J$.Fe(7649569, arguments.callee, this, arguments);
                                            arguments = J$.N(7649577, 'arguments', arguments, true, false, false);
                                            string = J$.N(7649585, 'string', string, true, false, false);
                                            J$.N(7649593, 'strSymbols', strSymbols, false, false, false);
                                            J$.N(7649601, 'chr', chr, false, false, false);
                                            J$.N(7649609, 'trailing', trailing, false, false, false);
                                            string = J$.W(7649305, 'string', J$.F(7649297, J$.R(7649281, 'toString', toString, false, true), false)(J$.R(7649289, 'string', string, false, false)), string, false, false);
                                            var strSymbols = J$.W(7649369, 'strSymbols', J$.C(406816, J$.F(7649329, J$.R(7649313, 'hasUnicode', hasUnicode, false, true), false)(J$.R(7649321, 'string', string, false, false))) ? J$.F(7649353, J$.R(7649337, 'stringToArray', stringToArray, false, true), false)(J$.R(7649345, 'string', string, false, false)) : J$.T(7649361, undefined, 24, false), strSymbols, false, false);
                                            var chr = J$.W(7649433, 'chr', J$.C(406824, J$.R(7649377, 'strSymbols', strSymbols, false, false)) ? J$.G(7649401, J$.R(7649385, 'strSymbols', strSymbols, false, false), J$.T(7649393, 0, 22, false)) : J$.M(7649425, J$.R(7649409, 'string', string, false, false), 'charAt', false)(J$.T(7649417, 0, 22, false)), chr, false, false);
                                            var trailing = J$.W(7649521, 'trailing', J$.C(406832, J$.R(7649441, 'strSymbols', strSymbols, false, false)) ? J$.M(7649489, J$.F(7649473, J$.R(7649449, 'castSlice', castSlice, false, true), false)(J$.R(7649457, 'strSymbols', strSymbols, false, false), J$.T(7649465, 1, 22, false)), 'join', false)(J$.T(7649481, '', 21, false)) : J$.M(7649513, J$.R(7649497, 'string', string, false, false), 'slice', false)(J$.T(7649505, 1, 22, false)), trailing, false, false);
                                            return J$.Rt(7649561, J$.B(761202, '+', J$.M(7649545, J$.R(7649529, 'chr', chr, false, false), J$.R(7649537, 'methodName', methodName, false, false), false)(), J$.R(7649553, 'trailing', trailing, false, false)));
                                        } catch (J$e) {
                                            J$.Ex(7649737, J$e);
                                        } finally {
                                            if (J$.Fr(7649745))
                                                continue jalangiLabel0;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                        } catch (J$e) {
                            J$.Ex(7649753, J$e);
                        } finally {
                            if (J$.Fr(7649761))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(7649689, 'castSlice', castSlice, false, false, false);
            J$.N(7649697, 'hasUnicode', hasUnicode, false, false, false);
            J$.N(7649705, 'stringToArray', stringToArray, false, false, false);
            J$.N(7649713, 'toString', toString, false, false, false);
            createCaseFirst = J$.N(7649729, 'createCaseFirst', J$.T(7649721, createCaseFirst, 12, false), true, false, false);
            var castSlice = J$.W(7649249, 'castSlice', J$.F(7649169, J$.I(typeof require === 'undefined' ? require = J$.R(7649153, 'require', undefined, true, true) : require = J$.R(7649153, 'require', require, true, true)), false)(J$.T(7649161, './_castSlice', 21, false)), castSlice, false, true), hasUnicode = J$.W(7649257, 'hasUnicode', J$.F(7649193, J$.I(typeof require === 'undefined' ? require = J$.R(7649177, 'require', undefined, true, true) : require = J$.R(7649177, 'require', require, true, true)), false)(J$.T(7649185, './_hasUnicode', 21, false)), hasUnicode, false, true), stringToArray = J$.W(7649265, 'stringToArray', J$.F(7649217, J$.I(typeof require === 'undefined' ? require = J$.R(7649201, 'require', undefined, true, true) : require = J$.R(7649201, 'require', require, true, true)), false)(J$.T(7649209, './_stringToArray', 21, false)), stringToArray, false, true), toString = J$.W(7649273, 'toString', J$.F(7649241, J$.I(typeof require === 'undefined' ? require = J$.R(7649225, 'require', undefined, true, true) : require = J$.R(7649225, 'require', require, true, true)), false)(J$.T(7649233, './toString', 21, false)), toString, false, true);
            J$.P(7649673, J$.I(typeof module === 'undefined' ? module = J$.R(7649657, 'module', undefined, true, true) : module = J$.R(7649657, 'module', module, true, true)), 'exports', J$.R(7649665, 'createCaseFirst', createCaseFirst, false, true));
        } catch (J$e) {
            J$.Ex(7649769, J$e);
        } finally {
            if (J$.Sr(7649777))
                continue jalangiLabel2;
            else
                break jalangiLabel2;
        }
    }
// JALANGI DO NOT INSTRUMENT

