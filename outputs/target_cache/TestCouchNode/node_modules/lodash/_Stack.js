J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(7579161, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestCouchNode/node_modules/lodash/_Stack.js');
            function Stack(entries) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(7578937, arguments.callee, this, arguments);
                            arguments = J$.N(7578945, 'arguments', arguments, true, false, false);
                            entries = J$.N(7578953, 'entries', entries, true, false, false);
                            J$.N(7578961, 'data', data, false, false, false);
                            var data = J$.W(7578897, 'data', J$.P(7578889, J$.R(7578857, 'this', this, false, false), '__data__', J$.F(7578881, J$.R(7578865, 'ListCache', ListCache, false, true), true)(J$.R(7578873, 'entries', entries, false, false))), data, false, false);
                            J$.P(7578929, J$.R(7578905, 'this', this, false, false), 'size', J$.G(7578921, J$.R(7578913, 'data', data, false, false), 'size'));
                        } catch (J$e) {
                            J$.Ex(7579233, J$e);
                        } finally {
                            if (J$.Fr(7579241))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(7579169, 'ListCache', ListCache, false, false, false);
            J$.N(7579177, 'stackClear', stackClear, false, false, false);
            J$.N(7579185, 'stackDelete', stackDelete, false, false, false);
            J$.N(7579193, 'stackGet', stackGet, false, false, false);
            J$.N(7579201, 'stackHas', stackHas, false, false, false);
            J$.N(7579209, 'stackSet', stackSet, false, false, false);
            Stack = J$.N(7579225, 'Stack', J$.T(7579217, Stack, 12, false), true, false, false);
            var ListCache = J$.W(7578809, 'ListCache', J$.F(7578681, J$.I(typeof require === 'undefined' ? require = J$.R(7578665, 'require', undefined, true, true) : require = J$.R(7578665, 'require', require, true, true)), false)(J$.T(7578673, './_ListCache', 21, false)), ListCache, false, true), stackClear = J$.W(7578817, 'stackClear', J$.F(7578705, J$.I(typeof require === 'undefined' ? require = J$.R(7578689, 'require', undefined, true, true) : require = J$.R(7578689, 'require', require, true, true)), false)(J$.T(7578697, './_stackClear', 21, false)), stackClear, false, true), stackDelete = J$.W(7578825, 'stackDelete', J$.F(7578729, J$.I(typeof require === 'undefined' ? require = J$.R(7578713, 'require', undefined, true, true) : require = J$.R(7578713, 'require', require, true, true)), false)(J$.T(7578721, './_stackDelete', 21, false)), stackDelete, false, true), stackGet = J$.W(7578833, 'stackGet', J$.F(7578753, J$.I(typeof require === 'undefined' ? require = J$.R(7578737, 'require', undefined, true, true) : require = J$.R(7578737, 'require', require, true, true)), false)(J$.T(7578745, './_stackGet', 21, false)), stackGet, false, true), stackHas = J$.W(7578841, 'stackHas', J$.F(7578777, J$.I(typeof require === 'undefined' ? require = J$.R(7578761, 'require', undefined, true, true) : require = J$.R(7578761, 'require', require, true, true)), false)(J$.T(7578769, './_stackHas', 21, false)), stackHas, false, true), stackSet = J$.W(7578849, 'stackSet', J$.F(7578801, J$.I(typeof require === 'undefined' ? require = J$.R(7578785, 'require', undefined, true, true) : require = J$.R(7578785, 'require', require, true, true)), false)(J$.T(7578793, './_stackSet', 21, false)), stackSet, false, true);
            J$.P(7578993, J$.G(7578977, J$.R(7578969, 'Stack', Stack, false, true), 'prototype'), 'clear', J$.R(7578985, 'stackClear', stackClear, false, true));
            J$.P(7579033, J$.G(7579009, J$.R(7579001, 'Stack', Stack, false, true), 'prototype'), J$.T(7579017, 'delete', 21, false), J$.R(7579025, 'stackDelete', stackDelete, false, true));
            J$.P(7579065, J$.G(7579049, J$.R(7579041, 'Stack', Stack, false, true), 'prototype'), 'get', J$.R(7579057, 'stackGet', stackGet, false, true));
            J$.P(7579097, J$.G(7579081, J$.R(7579073, 'Stack', Stack, false, true), 'prototype'), 'has', J$.R(7579089, 'stackHas', stackHas, false, true));
            J$.P(7579129, J$.G(7579113, J$.R(7579105, 'Stack', Stack, false, true), 'prototype'), 'set', J$.R(7579121, 'stackSet', stackSet, false, true));
            J$.P(7579153, J$.I(typeof module === 'undefined' ? module = J$.R(7579137, 'module', undefined, true, true) : module = J$.R(7579137, 'module', module, true, true)), 'exports', J$.R(7579145, 'Stack', Stack, false, true));
        } catch (J$e) {
            J$.Ex(7579249, J$e);
        } finally {
            if (J$.Sr(7579257))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

