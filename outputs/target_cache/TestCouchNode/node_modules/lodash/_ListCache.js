J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(7576465, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestCouchNode/node_modules/lodash/_ListCache.js');
            function ListCache(entries) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(7576225, arguments.callee, this, arguments);
                            arguments = J$.N(7576233, 'arguments', arguments, true, false, false);
                            entries = J$.N(7576241, 'entries', entries, true, false, false);
                            J$.N(7576249, 'index', index, false, false, false);
                            J$.N(7576257, 'length', length, false, false, false);
                            J$.N(7576265, 'entry', entry, false, false, false);
                            var index = J$.W(7576073, 'index', J$.U(755970, '-', J$.T(7576025, 1, 22, false)), index, false, false), length = J$.W(7576081, 'length', J$.C(402528, J$.B(755978, '==', J$.R(7576033, 'entries', entries, false, false), J$.T(7576041, null, 25, false))) ? J$.T(7576049, 0, 22, false) : J$.G(7576065, J$.R(7576057, 'entries', entries, false, false), 'length'), length, false, false);
                            J$.M(7576097, J$.R(7576089, 'this', this, false, false), 'clear', false)();
                            while (J$.C(402536, J$.B(756002, '<', index = J$.W(7576113, 'index', J$.B(755994, '+', J$.U(755986, '+', J$.R(7576105, 'index', index, false, false)), 1), index, false, false), J$.R(7576121, 'length', length, false, false)))) {
                                var entry = J$.W(7576153, 'entry', J$.G(7576145, J$.R(7576129, 'entries', entries, false, false), J$.R(7576137, 'index', index, false, false)), entry, false, false);
                                J$.M(7576217, J$.R(7576161, 'this', this, false, false), 'set', false)(J$.G(7576185, J$.R(7576169, 'entry', entry, false, false), J$.T(7576177, 0, 22, false)), J$.G(7576209, J$.R(7576193, 'entry', entry, false, false), J$.T(7576201, 1, 22, false)));
                            }
                        } catch (J$e) {
                            J$.Ex(7576529, J$e);
                        } finally {
                            if (J$.Fr(7576537))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(7576473, 'listCacheClear', listCacheClear, false, false, false);
            J$.N(7576481, 'listCacheDelete', listCacheDelete, false, false, false);
            J$.N(7576489, 'listCacheGet', listCacheGet, false, false, false);
            J$.N(7576497, 'listCacheHas', listCacheHas, false, false, false);
            J$.N(7576505, 'listCacheSet', listCacheSet, false, false, false);
            ListCache = J$.N(7576521, 'ListCache', J$.T(7576513, ListCache, 12, false), true, false, false);
            var listCacheClear = J$.W(7575985, 'listCacheClear', J$.F(7575881, J$.I(typeof require === 'undefined' ? require = J$.R(7575865, 'require', undefined, true, true) : require = J$.R(7575865, 'require', require, true, true)), false)(J$.T(7575873, './_listCacheClear', 21, false)), listCacheClear, false, true), listCacheDelete = J$.W(7575993, 'listCacheDelete', J$.F(7575905, J$.I(typeof require === 'undefined' ? require = J$.R(7575889, 'require', undefined, true, true) : require = J$.R(7575889, 'require', require, true, true)), false)(J$.T(7575897, './_listCacheDelete', 21, false)), listCacheDelete, false, true), listCacheGet = J$.W(7576001, 'listCacheGet', J$.F(7575929, J$.I(typeof require === 'undefined' ? require = J$.R(7575913, 'require', undefined, true, true) : require = J$.R(7575913, 'require', require, true, true)), false)(J$.T(7575921, './_listCacheGet', 21, false)), listCacheGet, false, true), listCacheHas = J$.W(7576009, 'listCacheHas', J$.F(7575953, J$.I(typeof require === 'undefined' ? require = J$.R(7575937, 'require', undefined, true, true) : require = J$.R(7575937, 'require', require, true, true)), false)(J$.T(7575945, './_listCacheHas', 21, false)), listCacheHas, false, true), listCacheSet = J$.W(7576017, 'listCacheSet', J$.F(7575977, J$.I(typeof require === 'undefined' ? require = J$.R(7575961, 'require', undefined, true, true) : require = J$.R(7575961, 'require', require, true, true)), false)(J$.T(7575969, './_listCacheSet', 21, false)), listCacheSet, false, true);
            J$.P(7576297, J$.G(7576281, J$.R(7576273, 'ListCache', ListCache, false, true), 'prototype'), 'clear', J$.R(7576289, 'listCacheClear', listCacheClear, false, true));
            J$.P(7576337, J$.G(7576313, J$.R(7576305, 'ListCache', ListCache, false, true), 'prototype'), J$.T(7576321, 'delete', 21, false), J$.R(7576329, 'listCacheDelete', listCacheDelete, false, true));
            J$.P(7576369, J$.G(7576353, J$.R(7576345, 'ListCache', ListCache, false, true), 'prototype'), 'get', J$.R(7576361, 'listCacheGet', listCacheGet, false, true));
            J$.P(7576401, J$.G(7576385, J$.R(7576377, 'ListCache', ListCache, false, true), 'prototype'), 'has', J$.R(7576393, 'listCacheHas', listCacheHas, false, true));
            J$.P(7576433, J$.G(7576417, J$.R(7576409, 'ListCache', ListCache, false, true), 'prototype'), 'set', J$.R(7576425, 'listCacheSet', listCacheSet, false, true));
            J$.P(7576457, J$.I(typeof module === 'undefined' ? module = J$.R(7576441, 'module', undefined, true, true) : module = J$.R(7576441, 'module', module, true, true)), 'exports', J$.R(7576449, 'ListCache', ListCache, false, true));
        } catch (J$e) {
            J$.Ex(7576545, J$e);
        } finally {
            if (J$.Sr(7576553))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

