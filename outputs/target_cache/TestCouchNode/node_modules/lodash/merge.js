J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(4393537, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestCouchNode/node_modules/lodash/merge.js');
            J$.N(4393545, 'baseMerge', baseMerge, false, false, false);
            J$.N(4393553, 'createAssigner', createAssigner, false, false, false);
            J$.N(4393561, 'merge', merge, false, false, false);
            var baseMerge = J$.W(4393385, 'baseMerge', J$.F(4393353, J$.I(typeof require === 'undefined' ? require = J$.R(4393337, 'require', undefined, true, true) : require = J$.R(4393337, 'require', require, true, true)), false)(J$.T(4393345, './_baseMerge', 21, false)), baseMerge, false, true), createAssigner = J$.W(4393393, 'createAssigner', J$.F(4393377, J$.I(typeof require === 'undefined' ? require = J$.R(4393361, 'require', undefined, true, true) : require = J$.R(4393361, 'require', require, true, true)), false)(J$.T(4393369, './_createAssigner', 21, false)), createAssigner, false, true);
            var merge = J$.W(4393505, 'merge', J$.F(4393497, J$.R(4393401, 'createAssigner', createAssigner, false, true), false)(J$.T(4393489, function (object, source, srcIndex) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(4393449, arguments.callee, this, arguments);
                            arguments = J$.N(4393457, 'arguments', arguments, true, false, false);
                            object = J$.N(4393465, 'object', object, true, false, false);
                            source = J$.N(4393473, 'source', source, true, false, false);
                            srcIndex = J$.N(4393481, 'srcIndex', srcIndex, true, false, false);
                            J$.F(4393441, J$.R(4393409, 'baseMerge', baseMerge, false, true), false)(J$.R(4393417, 'object', object, false, false), J$.R(4393425, 'source', source, false, false), J$.R(4393433, 'srcIndex', srcIndex, false, false));
                        } catch (J$e) {
                            J$.Ex(4393569, J$e);
                        } finally {
                            if (J$.Fr(4393577))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false)), merge, false, true);
            J$.P(4393529, J$.I(typeof module === 'undefined' ? module = J$.R(4393513, 'module', undefined, true, true) : module = J$.R(4393513, 'module', module, true, true)), 'exports', J$.R(4393521, 'merge', merge, false, true));
        } catch (J$e) {
            J$.Ex(4393585, J$e);
        } finally {
            if (J$.Sr(4393593))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

