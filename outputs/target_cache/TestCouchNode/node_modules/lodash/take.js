J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(4427857, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestCouchNode/node_modules/lodash/take.js');
            function take(array, n, guard) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(4427793, arguments.callee, this, arguments);
                            arguments = J$.N(4427801, 'arguments', arguments, true, false, false);
                            array = J$.N(4427809, 'array', array, true, false, false);
                            n = J$.N(4427817, 'n', n, true, false, false);
                            guard = J$.N(4427825, 'guard', guard, true, false, false);
                            if (J$.C(246592, J$.U(549914, '!', J$.C(246584, J$.R(4427617, 'array', array, false, false)) ? J$.G(4427633, J$.R(4427625, 'array', array, false, false), 'length') : J$._()))) {
                                return J$.Rt(4427649, J$.T(4427641, [], 10, false));
                            }
                            n = J$.W(4427713, 'n', J$.C(246608, J$.C(246600, J$.R(4427657, 'guard', guard, false, false)) ? J$._() : J$.B(549922, '===', J$.R(4427665, 'n', n, false, false), J$.T(4427673, undefined, 24, false))) ? J$.T(4427681, 1, 22, false) : J$.F(4427705, J$.R(4427689, 'toInteger', toInteger, false, true), false)(J$.R(4427697, 'n', n, false, false)), n, false, false);
                            return J$.Rt(4427785, J$.F(4427777, J$.R(4427721, 'baseSlice', baseSlice, false, true), false)(J$.R(4427729, 'array', array, false, false), J$.T(4427737, 0, 22, false), J$.C(246616, J$.B(549930, '<', J$.R(4427745, 'n', n, false, false), J$.T(4427753, 0, 22, false))) ? J$.T(4427761, 0, 22, false) : J$.R(4427769, 'n', n, false, false)));
                        } catch (J$e) {
                            J$.Ex(4427897, J$e);
                        } finally {
                            if (J$.Fr(4427905))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(4427865, 'baseSlice', baseSlice, false, false, false);
            J$.N(4427873, 'toInteger', toInteger, false, false, false);
            take = J$.N(4427889, 'take', J$.T(4427881, take, 12, false), true, false, false);
            var baseSlice = J$.W(4427601, 'baseSlice', J$.F(4427569, J$.I(typeof require === 'undefined' ? require = J$.R(4427553, 'require', undefined, true, true) : require = J$.R(4427553, 'require', require, true, true)), false)(J$.T(4427561, './_baseSlice', 21, false)), baseSlice, false, true), toInteger = J$.W(4427609, 'toInteger', J$.F(4427593, J$.I(typeof require === 'undefined' ? require = J$.R(4427577, 'require', undefined, true, true) : require = J$.R(4427577, 'require', require, true, true)), false)(J$.T(4427585, './toInteger', 21, false)), toInteger, false, true);
            J$.P(4427849, J$.I(typeof module === 'undefined' ? module = J$.R(4427833, 'module', undefined, true, true) : module = J$.R(4427833, 'module', module, true, true)), 'exports', J$.R(4427841, 'take', take, false, true));
        } catch (J$e) {
            J$.Ex(4427913, J$e);
        } finally {
            if (J$.Sr(4427921))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

