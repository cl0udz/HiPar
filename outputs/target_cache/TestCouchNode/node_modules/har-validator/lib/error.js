J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(7448689, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestCouchNode/node_modules/har-validator/lib/error.js');
            function HARError(errors) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(7448601, arguments.callee, this, arguments);
                            arguments = J$.N(7448609, 'arguments', arguments, true, false, false);
                            errors = J$.N(7448617, 'errors', errors, true, false, false);
                            J$.N(7448625, 'message', message, false, false, false);
                            var message = J$.W(7448409, 'message', J$.T(7448401, 'validation failed', 21, false), message, false, false);
                            J$.P(7448433, J$.R(7448417, 'this', this, false, false), 'name', J$.T(7448425, 'HARError', 21, false));
                            J$.P(7448457, J$.R(7448441, 'this', this, false, false), 'message', J$.R(7448449, 'message', message, false, false));
                            J$.P(7448481, J$.R(7448465, 'this', this, false, false), 'errors', J$.R(7448473, 'errors', errors, false, false));
                            if (J$.C(396160, J$.B(741986, '===', J$.U(741978, 'typeof', J$.G(7448497, J$.I(typeof Error === 'undefined' ? Error = J$.R(7448489, 'Error', undefined, true, true) : Error = J$.R(7448489, 'Error', Error, true, true)), 'captureStackTrace')), J$.T(7448505, 'function', 21, false)))) {
                                J$.M(7448545, J$.I(typeof Error === 'undefined' ? Error = J$.R(7448513, 'Error', undefined, true, true) : Error = J$.R(7448513, 'Error', Error, true, true)), 'captureStackTrace', false)(J$.R(7448521, 'this', this, false, false), J$.G(7448537, J$.R(7448529, 'this', this, false, false), 'constructor'));
                            } else {
                                J$.P(7448593, J$.R(7448553, 'this', this, false, false), 'stack', J$.G(7448585, J$.F(7448577, J$.I(typeof Error === 'undefined' ? Error = J$.R(7448561, 'Error', undefined, true, true) : Error = J$.R(7448561, 'Error', Error, true, true)), true)(J$.R(7448569, 'message', message, false, false)), 'stack'));
                            }
                        } catch (J$e) {
                            J$.Ex(7448713, J$e);
                        } finally {
                            if (J$.Fr(7448721))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            HARError = J$.N(7448705, 'HARError', J$.T(7448697, HARError, 12, false), true, false, false);
            J$.P(7448657, J$.R(7448633, 'HARError', HARError, false, true), 'prototype', J$.G(7448649, J$.I(typeof Error === 'undefined' ? Error = J$.R(7448641, 'Error', undefined, true, true) : Error = J$.R(7448641, 'Error', Error, true, true)), 'prototype'));
            J$.P(7448681, J$.I(typeof module === 'undefined' ? module = J$.R(7448665, 'module', undefined, true, true) : module = J$.R(7448665, 'module', module, true, true)), 'exports', J$.R(7448673, 'HARError', HARError, false, true));
        } catch (J$e) {
            J$.Ex(7448729, J$e);
        } finally {
            if (J$.Sr(7448737))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

