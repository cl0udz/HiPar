J$.noInstrEval = false;
jalangiLabel2:
    while (true) {
        try {
            J$.Se(7420137, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestCouchNode/node_modules/gauge/has-color.js');
            function isWin32() {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(7420009, arguments.callee, this, arguments);
                            arguments = J$.N(7420017, 'arguments', arguments, true, false, false);
                            return J$.Rt(7420001, J$.B(740354, '===', J$.G(7419985, J$.I(typeof process === 'undefined' ? process = J$.R(7419977, 'process', undefined, true, true) : process = J$.R(7419977, 'process', process, true, true)), 'platform'), J$.T(7419993, 'win32', 21, false)));
                        } catch (J$e) {
                            J$.Ex(7420177, J$e);
                        } finally {
                            if (J$.Fr(7420185))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function isColorTerm() {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(7420113, arguments.callee, this, arguments);
                            arguments = J$.N(7420121, 'arguments', arguments, true, false, false);
                            J$.N(7420129, 'termHasColor', termHasColor, false, false, false);
                            var termHasColor = J$.W(7420033, 'termHasColor', J$.T(7420025, /^screen|^xterm|^vt100|color|ansi|cygwin|linux/i, 14, false), termHasColor, false, false);
                            return J$.Rt(7420105, J$.C(394552, J$.U(740370, '!', J$.U(740362, '!', J$.G(7420057, J$.G(7420049, J$.I(typeof process === 'undefined' ? process = J$.R(7420041, 'process', undefined, true, true) : process = J$.R(7420041, 'process', process, true, true)), 'env'), 'COLORTERM')))) ? J$._() : J$.M(7420097, J$.R(7420065, 'termHasColor', termHasColor, false, false), 'test', false)(J$.G(7420089, J$.G(7420081, J$.I(typeof process === 'undefined' ? process = J$.R(7420073, 'process', undefined, true, true) : process = J$.R(7420073, 'process', process, true, true)), 'env'), 'TERM')));
                        } catch (J$e) {
                            J$.Ex(7420193, J$e);
                        } finally {
                            if (J$.Fr(7420201))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            isWin32 = J$.N(7420153, 'isWin32', J$.T(7420145, isWin32, 12, false), true, false, false);
            isColorTerm = J$.N(7420169, 'isColorTerm', J$.T(7420161, isColorTerm, 12, false), true, false, false);
            J$.T(7419921, 'use strict', 21, false);
            J$.P(7419969, J$.I(typeof module === 'undefined' ? module = J$.R(7419929, 'module', undefined, true, true) : module = J$.R(7419929, 'module', module, true, true)), 'exports', J$.C(394544, J$.F(7419945, J$.R(7419937, 'isWin32', isWin32, false, true), false)()) ? J$._() : J$.F(7419961, J$.R(7419953, 'isColorTerm', isColorTerm, false, true), false)());
        } catch (J$e) {
            J$.Ex(7420209, J$e);
        } finally {
            if (J$.Sr(7420217))
                continue jalangiLabel2;
            else
                break jalangiLabel2;
        }
    }
// JALANGI DO NOT INSTRUMENT

