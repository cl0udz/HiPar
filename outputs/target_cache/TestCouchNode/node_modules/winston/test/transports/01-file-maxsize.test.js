J$.noInstrEval = false;
jalangiLabel7:
    while (true) {
        try {
            J$.Se(5920585, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestCouchNode/node_modules/winston/test/transports/01-file-maxsize.test.js');
            function removeFixtures(done) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(5919009, arguments.callee, this, arguments);
                            arguments = J$.N(5919017, 'arguments', arguments, true, false, false);
                            done = J$.N(5919025, 'done', done, true, false, false);
                            J$.F(5919001, J$.R(5918929, 'rimraf', rimraf, false, true), false)(J$.M(5918985, J$.R(5918937, 'path', path, false, true), 'join', false)(J$.I(typeof __dirname === 'undefined' ? __dirname = J$.R(5918945, '__dirname', undefined, true, true) : __dirname = J$.R(5918945, '__dirname', __dirname, true, true)), J$.T(5918953, '..', 21, false), J$.T(5918961, 'fixtures', 21, false), J$.T(5918969, 'logs', 21, false), J$.T(5918977, 'testmaxsize*', 21, false)), J$.R(5918993, 'done', done, false, false));
                        } catch (J$e) {
                            J$.Ex(5920657, J$e);
                        } finally {
                            if (J$.Fr(5920665))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(5920593, 'rimraf', rimraf, false, false, false);
            J$.N(5920601, 'fs', fs, false, false, false);
            J$.N(5920609, 'path', path, false, false, false);
            J$.N(5920617, 'assume', assume, false, false, false);
            J$.N(5920625, 'winston', winston, false, false, false);
            J$.N(5920633, 'MESSAGE', MESSAGE, false, false, false);
            removeFixtures = J$.N(5920649, 'removeFixtures', J$.T(5920641, removeFixtures, 12, false), true, false, false);
            const rimraf = J$.W(5918761, 'rimraf', J$.F(5918753, J$.I(typeof require === 'undefined' ? require = J$.R(5918737, 'require', undefined, true, true) : require = J$.R(5918737, 'require', require, true, true)), false)(J$.T(5918745, 'rimraf', 21, false)), rimraf, false, true);
            const fs = J$.W(5918793, 'fs', J$.F(5918785, J$.I(typeof require === 'undefined' ? require = J$.R(5918769, 'require', undefined, true, true) : require = J$.R(5918769, 'require', require, true, true)), false)(J$.T(5918777, 'fs', 21, false)), fs, false, true);
            const path = J$.W(5918825, 'path', J$.F(5918817, J$.I(typeof require === 'undefined' ? require = J$.R(5918801, 'require', undefined, true, true) : require = J$.R(5918801, 'require', require, true, true)), false)(J$.T(5918809, 'path', 21, false)), path, false, true);
            const assume = J$.W(5918857, 'assume', J$.F(5918849, J$.I(typeof require === 'undefined' ? require = J$.R(5918833, 'require', undefined, true, true) : require = J$.R(5918833, 'require', require, true, true)), false)(J$.T(5918841, 'assume', 21, false)), assume, false, true);
            const winston = J$.W(5918889, 'winston', J$.F(5918881, J$.I(typeof require === 'undefined' ? require = J$.R(5918865, 'require', undefined, true, true) : require = J$.R(5918865, 'require', require, true, true)), false)(J$.T(5918873, '../../', 21, false)), winston, false, true);
            const MESSAGE = J$.W(5918921, 'MESSAGE', J$.M(5918913, J$.I(typeof Symbol === 'undefined' ? Symbol = J$.R(5918897, 'Symbol', undefined, true, true) : Symbol = J$.R(5918897, 'Symbol', Symbol, true, true)), 'for', false)(J$.T(5918905, 'message', 21, false)), MESSAGE, false, true);
            J$.F(5920577, J$.I(typeof describe === 'undefined' ? describe = J$.R(5919033, 'describe', undefined, true, true) : describe = J$.R(5919033, 'describe', describe, true, true)), false)(J$.T(5919041, 'File (maxsize)', 21, false), J$.T(5920569, function () {
                jalangiLabel6:
                    while (true) {
                        try {
                            J$.Fe(5920545, arguments.callee, this, arguments);
                            arguments = J$.N(5920553, 'arguments', arguments, true, false, false);
                            J$.N(5920561, 'testDone', testDone, false, false, false);
                            J$.M(5919065, J$.R(5919049, 'this', this, false, false), 'timeout', false)(J$.T(5919057, 10000, 22, false));
                            let testDone = J$.W(5919081, 'testDone', J$.T(5919073, false, 23, false), testDone, false, false);
                            J$.F(5919105, J$.I(typeof before === 'undefined' ? before = J$.R(5919089, 'before', undefined, true, true) : before = J$.R(5919089, 'before', before, true, true)), false)(J$.R(5919097, 'removeFixtures', removeFixtures, false, true));
                            J$.F(5919169, J$.I(typeof after === 'undefined' ? after = J$.R(5919113, 'after', undefined, true, true) : after = J$.R(5919113, 'after', after, true, true)), false)((J$.I(typeof done === 'undefined' ? done = J$.R(5919121, 'done', undefined, true, true) : done = J$.R(5919121, 'done', done, true, true))) => {
                                testDone = J$.W(5919137, 'testDone', J$.T(5919129, true, 23, false), testDone, false, false);
                                J$.F(5919161, J$.R(5919145, 'removeFixtures', removeFixtures, false, true), false)(J$.I(typeof done === 'undefined' ? done = J$.R(5919153, 'done', undefined, true, true) : done = J$.R(5919153, 'done', done, true, true)));
                            });
                            J$.F(5920537, J$.I(typeof it === 'undefined' ? it = J$.R(5919177, 'it', undefined, true, true) : it = J$.R(5919177, 'it', it, true, true)), false)(J$.T(5919185, 'should create multiple files correctly when passed more than the maxsize', 21, false), J$.T(5920529, function (done) {
                                jalangiLabel5:
                                    while (true) {
                                        try {
                                            J$.Fe(5920449, arguments.callee, this, arguments);
                                            function assumeFilesCreated() {
                                                jalangiLabel2:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(5919905, arguments.callee, this, arguments);
                                                            arguments = J$.N(5919913, 'arguments', arguments, true, false, false);
                                                            J$.M(5919881, J$.R(5919473, 'files', files, false, false), 'map', false)(J$.T(5919873, function (file, i) {
                                                                jalangiLabel1:
                                                                    while (true) {
                                                                        try {
                                                                            J$.Fe(5919825, arguments.callee, this, arguments);
                                                                            arguments = J$.N(5919833, 'arguments', arguments, true, false, false);
                                                                            file = J$.N(5919841, 'file', file, true, false, false);
                                                                            i = J$.N(5919849, 'i', i, true, false, false);
                                                                            J$.N(5919857, 'stats', stats, false, false, false);
                                                                            J$.N(5919865, 'text', text, false, false, false);
                                                                            let stats;
                                                                            try {
                                                                                stats = J$.W(5919505, 'stats', J$.M(5919497, J$.R(5919481, 'fs', fs, false, true), 'statSync', false)(J$.R(5919489, 'file', file, false, false)), stats, false, false);
                                                                            } catch (ex) {
                                                                                J$.N(5919585, 'ex', ex, false, false, true);
                                                                                J$.M(5919577, J$.G(5919537, J$.F(5919529, J$.R(5919513, 'assume', assume, false, true), false)(J$.R(5919521, 'stats', stats, false, false)), 'is'), 'an', false)(J$.T(5919545, 'object', 21, false), `${ J$.R(5919553, 'file', file, false, false) } failed to open: ${ J$.G(5919569, J$.R(5919561, 'ex', ex, false, false), 'message') }`);
                                                                            }
                                                                            const text = J$.W(5919625, 'text', J$.M(5919617, J$.R(5919593, 'fs', fs, false, true), 'readFileSync', false)(J$.R(5919601, 'file', file, false, false), J$.T(5919609, 'utf8', 21, false)), text, false, false);
                                                                            J$.M(5919697, J$.F(5919665, J$.R(5919633, 'assume', assume, false, true), false)(J$.G(5919657, J$.R(5919641, 'text', text, false, false), J$.T(5919649, 0, 22, false))), 'equals', false)(J$.G(5919689, J$.R(5919673, 'fillWith', fillWith, false, false), J$.R(5919681, 'i', i, false, false)));
                                                                            if (J$.C(308408, J$.B(700146, '===', J$.G(5919713, J$.I(typeof process === 'undefined' ? process = J$.R(5919705, 'process', undefined, true, true) : process = J$.R(5919705, 'process', process, true, true)), 'platform'), J$.T(5919721, 'win32', 21, false)))) {
                                                                                J$.M(5919769, J$.F(5919753, J$.R(5919729, 'assume', assume, false, true), false)(J$.G(5919745, J$.R(5919737, 'stats', stats, false, false), 'size')), 'equals', false)(J$.T(5919761, 4100, 22, false));
                                                                            } else {
                                                                                J$.M(5919817, J$.F(5919801, J$.R(5919777, 'assume', assume, false, true), false)(J$.G(5919793, J$.R(5919785, 'stats', stats, false, false), 'size')), 'equals', false)(J$.T(5919809, 4096, 22, false));
                                                                            }
                                                                        } catch (J$e) {
                                                                            J$.Ex(5920673, J$e);
                                                                        } finally {
                                                                            if (J$.Fr(5920681))
                                                                                continue jalangiLabel1;
                                                                            else
                                                                                return J$.Ra();
                                                                        }
                                                                    }
                                                            }, 12, false));
                                                            J$.F(5919897, J$.R(5919889, 'done', done, false, false), false)();
                                                        } catch (J$e) {
                                                            J$.Ex(5920689, J$e);
                                                        } finally {
                                                            if (J$.Fr(5920697))
                                                                continue jalangiLabel2;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }
                                            function logKbytes(kbytes) {
                                                jalangiLabel3:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(5920121, arguments.callee, this, arguments);
                                                            arguments = J$.N(5920129, 'arguments', arguments, true, false, false);
                                                            kbytes = J$.N(5920137, 'kbytes', kbytes, true, false, false);
                                                            J$.N(5920145, 'filler', filler, false, false, false);
                                                            J$.N(5920153, 'kbStr', kbStr, false, false, false);
                                                            J$.N(5920161, 'i', i, false, false, false);
                                                            const filler = J$.W(5919937, 'filler', J$.M(5919929, J$.R(5919921, 'fillWith', fillWith, false, false), 'shift', false)(), filler, false, false);
                                                            J$.M(5919961, J$.R(5919945, 'fillWith', fillWith, false, false), 'push', false)(J$.R(5919953, 'filler', filler, false, false));
                                                            const kbStr = J$.W(5920025, 'kbStr', J$.M(5920017, J$.M(5920001, J$.F(5919985, J$.I(typeof Array === 'undefined' ? Array = J$.R(5919969, 'Array', undefined, true, true) : Array = J$.R(5919969, 'Array', Array, true, true)), false)(J$.T(5919977, 1023, 22, false)), 'fill', false)(J$.R(5919993, 'filler', filler, false, false)), 'join', false)(J$.T(5920009, '', 21, false)), kbStr, false, false);
                                                            for (var i = J$.W(5920041, 'i', J$.T(5920033, 0, 22, false), i, false, false); J$.C(308416, J$.B(700154, '<', J$.R(5920049, 'i', i, false, false), J$.R(5920057, 'kbytes', kbytes, false, false))); J$.B(700178, '-', i = J$.W(5920073, 'i', J$.B(700170, '+', J$.U(700162, '+', J$.R(5920065, 'i', i, false, false)), 1), i, false, false), 1)) {
                                                                J$.M(5920113, J$.R(5920081, 'maxsizeTransport', maxsizeTransport, false, false), 'log', false)(J$.T(5920105, {
                                                                    level: J$.T(5920089, 'info', 21, false),
                                                                    [MESSAGE]: J$.R(5920097, 'kbStr', kbStr, false, false)
                                                                }, 11, false));
                                                            }
                                                        } catch (J$e) {
                                                            J$.Ex(5920705, J$e);
                                                        } finally {
                                                            if (J$.Fr(5920713))
                                                                continue jalangiLabel3;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }
                                            arguments = J$.N(5920457, 'arguments', arguments, true, false, false);
                                            done = J$.N(5920465, 'done', done, true, false, false);
                                            J$.N(5920473, 'fillWith', fillWith, false, false, false);
                                            J$.N(5920481, 'maxsizeTransport', maxsizeTransport, false, false, false);
                                            J$.N(5920489, 'files', files, false, false, false);
                                            assumeFilesCreated = J$.N(5920505, 'assumeFilesCreated', J$.T(5920497, assumeFilesCreated, 12, false), true, false, false);
                                            logKbytes = J$.N(5920521, 'logKbytes', J$.T(5920513, logKbytes, 12, false), true, false, false);
                                            const fillWith = J$.W(5919241, 'fillWith', J$.T(5919233, [
                                                J$.T(5919193, 'a', 21, false),
                                                J$.T(5919201, 'b', 21, false),
                                                J$.T(5919209, 'c', 21, false),
                                                J$.T(5919217, 'd', 21, false),
                                                J$.T(5919225, 'e', 21, false)
                                            ], 10, false), fillWith, false, false);
                                            const maxsizeTransport = J$.W(5919401, 'maxsizeTransport', J$.M(5919393, J$.G(5919257, J$.R(5919249, 'winston', winston, false, true), 'transports'), 'File', true)(J$.T(5919385, {
                                                level: J$.T(5919265, 'info', 21, false),
                                                format: J$.M(5919313, J$.G(5919281, J$.R(5919273, 'winston', winston, false, true), 'format'), 'printf', false)((J$.I(typeof info === 'undefined' ? info = J$.R(5919289, 'info', undefined, true, true) : info = J$.R(5919289, 'info', info, true, true))) => J$.G(5919305, J$.I(typeof info === 'undefined' ? info = J$.R(5919297, 'info', undefined, true, true) : info = J$.R(5919297, 'info', info, true, true)), 'message')),
                                                filename: J$.M(5919369, J$.R(5919321, 'path', path, false, true), 'join', false)(J$.I(typeof __dirname === 'undefined' ? __dirname = J$.R(5919329, '__dirname', undefined, true, true) : __dirname = J$.R(5919329, '__dirname', __dirname, true, true)), J$.T(5919337, '..', 21, false), J$.T(5919345, 'fixtures', 21, false), J$.T(5919353, 'logs', 21, false), J$.T(5919361, 'testmaxsize.log', 21, false)),
                                                maxsize: J$.T(5919377, 4096, 22, false)
                                            }, 11, false)), maxsizeTransport, false, false);
                                            J$.F(5919449, J$.I(typeof setTimeout === 'undefined' ? setTimeout = J$.R(5919409, 'setTimeout', undefined, true, true) : setTimeout = J$.R(5919409, 'setTimeout', setTimeout, true, true)), false)(() => J$.F(5919433, J$.R(5919417, 'logKbytes', logKbytes, false, false), false)(J$.T(5919425, 4, 22, false)), J$.T(5919441, 100, 22, false));
                                            const files = J$.W(5919465, 'files', J$.T(5919457, [], 10, false), files, false, false);
                                            J$.M(5920441, J$.R(5920169, 'maxsizeTransport', maxsizeTransport, false, false), 'on', false)(J$.T(5920177, 'open', 21, false), J$.T(5920433, function (file) {
                                                jalangiLabel4:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(5920393, arguments.callee, this, arguments);
                                                            arguments = J$.N(5920401, 'arguments', arguments, true, false, false);
                                                            file = J$.N(5920409, 'file', file, true, false, false);
                                                            J$.N(5920417, 'match', match, false, false, false);
                                                            J$.N(5920425, 'count', count, false, false, false);
                                                            if (J$.C(308424, J$.R(5920185, 'testDone', testDone, false, false)))
                                                                return J$.Rt(5920193, undefined);
                                                            const match = J$.W(5920225, 'match', J$.M(5920217, J$.R(5920201, 'file', file, false, false), 'match', false)(J$.T(5920209, /(\d+)\.log$/, 14, false)), match, false, false);
                                                            const count = J$.W(5920273, 'count', J$.C(308432, J$.R(5920233, 'match', match, false, false)) ? J$.G(5920257, J$.R(5920241, 'match', match, false, false), J$.T(5920249, 1, 22, false)) : J$.T(5920265, 0, 22, false), count, false, false);
                                                            if (J$.C(308440, J$.B(700186, '===', J$.G(5920289, J$.R(5920281, 'files', files, false, false), 'length'), J$.T(5920297, 5, 22, false)))) {
                                                                return J$.Rt(5920321, J$.F(5920313, J$.R(5920305, 'assumeFilesCreated', assumeFilesCreated, false, false), false)());
                                                            }
                                                            J$.M(5920345, J$.R(5920329, 'files', files, false, false), 'push', false)(J$.R(5920337, 'file', file, false, false));
                                                            J$.F(5920385, J$.I(typeof setImmediate === 'undefined' ? setImmediate = J$.R(5920353, 'setImmediate', undefined, true, true) : setImmediate = J$.R(5920353, 'setImmediate', setImmediate, true, true)), false)(() => J$.F(5920377, J$.R(5920361, 'logKbytes', logKbytes, false, false), false)(J$.T(5920369, 4, 22, false)));
                                                        } catch (J$e) {
                                                            J$.Ex(5920721, J$e);
                                                        } finally {
                                                            if (J$.Fr(5920729))
                                                                continue jalangiLabel4;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false));
                                        } catch (J$e) {
                                            J$.Ex(5920737, J$e);
                                        } finally {
                                            if (J$.Fr(5920745))
                                                continue jalangiLabel5;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                        } catch (J$e) {
                            J$.Ex(5920753, J$e);
                        } finally {
                            if (J$.Fr(5920761))
                                continue jalangiLabel6;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
        } catch (J$e) {
            J$.Ex(5920769, J$e);
        } finally {
            if (J$.Sr(5920777))
                continue jalangiLabel7;
            else
                break jalangiLabel7;
        }
    }
// JALANGI DO NOT INSTRUMENT

