J$.noInstrEval = false;
jalangiLabel9:
    while (true) {
        try {
            J$.Se(5925289, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestCouchNode/node_modules/winston/test/transports/http.test.js');
            function mockHttpServer(opts, done) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(5924465, arguments.callee, this, arguments);
                            arguments = J$.N(5924473, 'arguments', arguments, true, false, false);
                            opts = J$.N(5924481, 'opts', opts, true, false, false);
                            done = J$.N(5924489, 'done', done, true, false, false);
                            J$.N(5924497, 'mock', mock, false, false, false);
                            J$.N(5924505, 'server', server, false, false, false);
                            if (J$.C(308504, J$.C(308496, J$.U(700362, '!', J$.R(5924065, 'done', done, false, false))) ? J$.B(700378, '===', J$.U(700370, 'typeof', J$.R(5924073, 'opts', opts, false, false)), J$.T(5924081, 'function', 21, false)) : J$._())) {
                                done = J$.W(5924097, 'done', J$.R(5924089, 'opts', opts, false, false), done, false, false);
                                opts = J$.W(5924113, 'opts', J$.T(5924105, {}, 11, false), opts, false, false);
                            }
                            var mock = J$.W(5924137, 'mock', J$.M(5924129, J$.R(5924121, 'hock', hock, false, true), 'createHock', false)(), mock, false, false);
                            J$.P(5924177, J$.R(5924145, 'opts', opts, false, false), 'path', J$.C(308512, J$.G(5924161, J$.R(5924153, 'opts', opts, false, false), 'path')) ? J$._() : J$.T(5924169, 'log', 21, false));
                            J$.P(5924241, J$.R(5924185, 'opts', opts, false, false), 'payload', J$.C(308520, J$.G(5924201, J$.R(5924193, 'opts', opts, false, false), 'payload')) ? J$._() : J$.T(5924233, {
                                level: J$.T(5924209, 'info', 21, false),
                                message: J$.T(5924217, 'hello', 21, false),
                                meta: J$.T(5924225, {}, 11, false)
                            }, 11, false));
                            J$.M(5924345, J$.M(5924329, J$.M(5924313, J$.M(5924297, J$.R(5924249, 'mock', mock, false, false), 'post', false)(J$.B(700386, '+', J$.T(5924257, '/', 21, false), J$.G(5924273, J$.R(5924265, 'opts', opts, false, false), 'path')), J$.G(5924289, J$.R(5924281, 'opts', opts, false, false), 'payload')), 'min', false)(J$.T(5924305, 1, 22, false)), 'max', false)(J$.T(5924321, 1, 22, false)), 'reply', false)(J$.T(5924337, 200, 22, false));
                            var server = J$.W(5924385, 'server', J$.M(5924377, J$.R(5924353, 'http', http, false, true), 'createServer', false)(J$.G(5924369, J$.R(5924361, 'mock', mock, false, false), 'handler')), server, false, false);
                            J$.M(5924425, J$.R(5924393, 'server', server, false, false), 'listen', false)(J$.T(5924401, 0, 22, false), J$.T(5924409, '0.0.0.0', 21, false), J$.R(5924417, 'done', done, false, false));
                            return J$.Rt(5924457, J$.T(5924449, {
                                server,
                                mock
                            }, 11, false));
                        } catch (J$e) {
                            J$.Ex(5925377, J$e);
                        } finally {
                            if (J$.Fr(5925385))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(5925297, 'path', path, false, false, false);
            J$.N(5925305, 'http', http, false, false, false);
            J$.N(5925313, 'fs', fs, false, false, false);
            J$.N(5925321, 'hock', hock, false, false, false);
            J$.N(5925329, 'assume', assume, false, false, false);
            J$.N(5925337, 'Http', Http, false, false, false);
            J$.N(5925345, 'helpers', helpers, false, false, false);
            J$.N(5925353, 'host', host, false, false, false);
            mockHttpServer = J$.N(5925369, 'mockHttpServer', J$.T(5925361, mockHttpServer, 12, false), true, false, false);
            var path = J$.W(5923993, 'path', J$.F(5923841, J$.I(typeof require === 'undefined' ? require = J$.R(5923825, 'require', undefined, true, true) : require = J$.R(5923825, 'require', require, true, true)), false)(J$.T(5923833, 'path', 21, false)), path, false, true), http = J$.W(5924001, 'http', J$.F(5923865, J$.I(typeof require === 'undefined' ? require = J$.R(5923849, 'require', undefined, true, true) : require = J$.R(5923849, 'require', require, true, true)), false)(J$.T(5923857, 'http', 21, false)), http, false, true), fs = J$.W(5924009, 'fs', J$.F(5923889, J$.I(typeof require === 'undefined' ? require = J$.R(5923873, 'require', undefined, true, true) : require = J$.R(5923873, 'require', require, true, true)), false)(J$.T(5923881, 'fs', 21, false)), fs, false, true), hock = J$.W(5924017, 'hock', J$.F(5923913, J$.I(typeof require === 'undefined' ? require = J$.R(5923897, 'require', undefined, true, true) : require = J$.R(5923897, 'require', require, true, true)), false)(J$.T(5923905, 'hock', 21, false)), hock, false, true), assume = J$.W(5924025, 'assume', J$.F(5923937, J$.I(typeof require === 'undefined' ? require = J$.R(5923921, 'require', undefined, true, true) : require = J$.R(5923921, 'require', require, true, true)), false)(J$.T(5923929, 'assume', 21, false)), assume, false, true), Http = J$.W(5924033, 'Http', J$.F(5923961, J$.I(typeof require === 'undefined' ? require = J$.R(5923945, 'require', undefined, true, true) : require = J$.R(5923945, 'require', require, true, true)), false)(J$.T(5923953, '../../lib/winston/transports/http', 21, false)), Http, false, true), helpers = J$.W(5924041, 'helpers', J$.F(5923985, J$.I(typeof require === 'undefined' ? require = J$.R(5923969, 'require', undefined, true, true) : require = J$.R(5923969, 'require', require, true, true)), false)(J$.T(5923977, '../helpers', 21, false)), helpers, false, true);
            var host = J$.W(5924057, 'host', J$.T(5924049, '127.0.0.1', 21, false), host, false, true);
            J$.F(5925281, J$.I(typeof describe === 'undefined' ? describe = J$.R(5924513, 'describe', undefined, true, true) : describe = J$.R(5924513, 'describe', describe, true, true)), false)(J$.T(5924521, 'Http({ host, port, path })', 21, false), J$.T(5925273, function () {
                jalangiLabel8:
                    while (true) {
                        try {
                            J$.Fe(5925241, arguments.callee, this, arguments);
                            arguments = J$.N(5925249, 'arguments', arguments, true, false, false);
                            J$.N(5925257, 'context', context, false, false, false);
                            J$.N(5925265, 'server', server, false, false, false);
                            var context;
                            var server;
                            J$.F(5924625, J$.I(typeof beforeEach === 'undefined' ? beforeEach = J$.R(5924529, 'beforeEach', undefined, true, true) : beforeEach = J$.R(5924529, 'beforeEach', beforeEach, true, true)), false)(J$.T(5924617, function (done) {
                                jalangiLabel1:
                                    while (true) {
                                        try {
                                            J$.Fe(5924593, arguments.callee, this, arguments);
                                            arguments = J$.N(5924601, 'arguments', arguments, true, false, false);
                                            done = J$.N(5924609, 'done', done, true, false, false);
                                            context = J$.W(5924561, 'context', J$.F(5924553, J$.R(5924537, 'mockHttpServer', mockHttpServer, false, true), false)(J$.R(5924545, 'done', done, false, false)), context, false, false);
                                            server = J$.W(5924585, 'server', J$.G(5924577, J$.R(5924569, 'context', context, false, false), 'server'), server, false, false);
                                        } catch (J$e) {
                                            J$.Ex(5925393, J$e);
                                        } finally {
                                            if (J$.Fr(5925401))
                                                continue jalangiLabel1;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            J$.F(5925137, J$.I(typeof it === 'undefined' ? it = J$.R(5924633, 'it', undefined, true, true) : it = J$.R(5924633, 'it', it, true, true)), false)(J$.T(5924641, 'should send logs over HTTP', 21, false), J$.T(5925129, function (done) {
                                jalangiLabel6:
                                    while (true) {
                                        try {
                                            J$.Fe(5925089, arguments.callee, this, arguments);
                                            arguments = J$.N(5925097, 'arguments', arguments, true, false, false);
                                            done = J$.N(5925105, 'done', done, true, false, false);
                                            J$.N(5925113, 'port', port, false, false, false);
                                            J$.N(5925121, 'httpTransport', httpTransport, false, false, false);
                                            var port = J$.W(5924673, 'port', J$.G(5924665, J$.M(5924657, J$.R(5924649, 'server', server, false, false), 'address', false)(), 'port'), port, false, false);
                                            var httpTransport = J$.W(5924961, 'httpTransport', J$.M(5924953, J$.M(5924801, J$.F(5924721, J$.R(5924681, 'Http', Http, false, true), true)(J$.T(5924713, {
                                                host: J$.R(5924689, 'host', host, false, true),
                                                port: J$.R(5924697, 'port', port, false, false),
                                                path: J$.T(5924705, 'log', 21, false)
                                            }, 11, false)), 'on', false)(J$.T(5924729, 'error', 21, false), J$.T(5924793, function (err) {
                                                jalangiLabel2:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(5924769, arguments.callee, this, arguments);
                                                            arguments = J$.N(5924777, 'arguments', arguments, true, false, false);
                                                            err = J$.N(5924785, 'err', err, true, false, false);
                                                            J$.M(5924761, J$.F(5924753, J$.R(5924737, 'assume', assume, false, true), false)(J$.R(5924745, 'err', err, false, false)), 'falsy', false)();
                                                        } catch (J$e) {
                                                            J$.Ex(5925409, J$e);
                                                        } finally {
                                                            if (J$.Fr(5925417))
                                                                continue jalangiLabel2;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false)), 'on', false)(J$.T(5924809, 'logged', 21, false), J$.T(5924945, function () {
                                                jalangiLabel4:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(5924929, arguments.callee, this, arguments);
                                                            arguments = J$.N(5924937, 'arguments', arguments, true, false, false);
                                                            J$.M(5924921, J$.G(5924825, J$.R(5924817, 'context', context, false, false), 'mock'), 'done', false)(J$.T(5924913, function (err) {
                                                                jalangiLabel3:
                                                                    while (true) {
                                                                        try {
                                                                            J$.Fe(5924889, arguments.callee, this, arguments);
                                                                            arguments = J$.N(5924897, 'arguments', arguments, true, false, false);
                                                                            err = J$.N(5924905, 'err', err, true, false, false);
                                                                            if (J$.C(308528, J$.R(5924833, 'err', err, false, false))) {
                                                                                J$.M(5924865, J$.F(5924857, J$.R(5924841, 'assume', assume, false, true), false)(J$.R(5924849, 'err', err, false, false)), 'falsy', false)();
                                                                            }
                                                                            J$.F(5924881, J$.R(5924873, 'done', done, false, false), false)();
                                                                        } catch (J$e) {
                                                                            J$.Ex(5925425, J$e);
                                                                        } finally {
                                                                            if (J$.Fr(5925433))
                                                                                continue jalangiLabel3;
                                                                            else
                                                                                return J$.Ra();
                                                                        }
                                                                    }
                                                            }, 12, false));
                                                        } catch (J$e) {
                                                            J$.Ex(5925441, J$e);
                                                        } finally {
                                                            if (J$.Fr(5925449))
                                                                continue jalangiLabel4;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false)), httpTransport, false, false);
                                            J$.M(5925081, J$.R(5924969, 'httpTransport', httpTransport, false, false), 'log', false)(J$.T(5925001, {
                                                level: J$.T(5924977, 'info', 21, false),
                                                message: J$.T(5924985, 'hello', 21, false),
                                                meta: J$.T(5924993, {}, 11, false)
                                            }, 11, false), J$.T(5925073, function (err) {
                                                jalangiLabel5:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(5925049, arguments.callee, this, arguments);
                                                            arguments = J$.N(5925057, 'arguments', arguments, true, false, false);
                                                            err = J$.N(5925065, 'err', err, true, false, false);
                                                            if (J$.C(308536, J$.R(5925009, 'err', err, false, false))) {
                                                                J$.M(5925041, J$.F(5925033, J$.R(5925017, 'assume', assume, false, true), false)(J$.R(5925025, 'err', err, false, false)), 'falsy', false)();
                                                            }
                                                        } catch (J$e) {
                                                            J$.Ex(5925457, J$e);
                                                        } finally {
                                                            if (J$.Fr(5925465))
                                                                continue jalangiLabel5;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false));
                                        } catch (J$e) {
                                            J$.Ex(5925473, J$e);
                                        } finally {
                                            if (J$.Fr(5925481))
                                                continue jalangiLabel6;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            J$.F(5925233, J$.I(typeof afterEach === 'undefined' ? afterEach = J$.R(5925145, 'afterEach', undefined, true, true) : afterEach = J$.R(5925145, 'afterEach', afterEach, true, true)), false)(J$.T(5925225, function (done) {
                                jalangiLabel7:
                                    while (true) {
                                        try {
                                            J$.Fe(5925201, arguments.callee, this, arguments);
                                            arguments = J$.N(5925209, 'arguments', arguments, true, false, false);
                                            done = J$.N(5925217, 'done', done, true, false, false);
                                            J$.M(5925193, J$.R(5925153, 'server', server, false, false), 'close', false)(J$.M(5925185, J$.R(5925161, 'done', done, false, false), 'bind', false)(J$.T(5925169, null, 25, false), J$.T(5925177, null, 25, false)));
                                        } catch (J$e) {
                                            J$.Ex(5925489, J$e);
                                        } finally {
                                            if (J$.Fr(5925497))
                                                continue jalangiLabel7;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                        } catch (J$e) {
                            J$.Ex(5925505, J$e);
                        } finally {
                            if (J$.Fr(5925513))
                                continue jalangiLabel8;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
        } catch (J$e) {
            J$.Ex(5925521, J$e);
        } finally {
            if (J$.Sr(5925529))
                continue jalangiLabel9;
            else
                break jalangiLabel9;
        }
    }
// JALANGI DO NOT INSTRUMENT

