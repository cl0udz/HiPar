J$.noInstrEval = false;
jalangiLabel15:
    while (true) {
        try {
            J$.Se(5859697, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestCouchNode/node_modules/winston/node_modules/readable-stream/errors-browser.js');
            function _inheritsLoose(subClass, superClass) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(5856769, arguments.callee, this, arguments);
                            arguments = J$.N(5856777, 'arguments', arguments, true, false, false);
                            subClass = J$.N(5856785, 'subClass', subClass, true, false, false);
                            superClass = J$.N(5856793, 'superClass', superClass, true, false, false);
                            J$.P(5856705, J$.R(5856665, 'subClass', subClass, false, false), 'prototype', J$.M(5856697, J$.I(typeof Object === 'undefined' ? Object = J$.R(5856673, 'Object', undefined, true, true) : Object = J$.R(5856673, 'Object', Object, true, true)), 'create', false)(J$.G(5856689, J$.R(5856681, 'superClass', superClass, false, false), 'prototype')));
                            J$.P(5856737, J$.G(5856721, J$.R(5856713, 'subClass', subClass, false, false), 'prototype'), 'constructor', J$.R(5856729, 'subClass', subClass, false, false));
                            J$.P(5856761, J$.R(5856745, 'subClass', subClass, false, false), '__proto__', J$.R(5856753, 'superClass', superClass, false, false));
                        } catch (J$e) {
                            J$.Ex(5859809, J$e);
                        } finally {
                            if (J$.Fr(5859817))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function createErrorType(code, message, Base) {
                jalangiLabel4:
                    while (true) {
                        try {
                            J$.Fe(5857305, arguments.callee, this, arguments);
                            function getMessage(arg1, arg2, arg3) {
                                jalangiLabel1:
                                    while (true) {
                                        try {
                                            J$.Fe(5856921, arguments.callee, this, arguments);
                                            arguments = J$.N(5856929, 'arguments', arguments, true, false, false);
                                            arg1 = J$.N(5856937, 'arg1', arg1, true, false, false);
                                            arg2 = J$.N(5856945, 'arg2', arg2, true, false, false);
                                            arg3 = J$.N(5856953, 'arg3', arg3, true, false, false);
                                            if (J$.C(304568, J$.B(696458, '===', J$.U(696450, 'typeof', J$.R(5856841, 'message', message, false, false)), J$.T(5856849, 'string', 21, false)))) {
                                                return J$.Rt(5856865, J$.R(5856857, 'message', message, false, false));
                                            } else {
                                                return J$.Rt(5856913, J$.F(5856905, J$.R(5856873, 'message', message, false, false), false)(J$.R(5856881, 'arg1', arg1, false, false), J$.R(5856889, 'arg2', arg2, false, false), J$.R(5856897, 'arg3', arg3, false, false)));
                                            }
                                        } catch (J$e) {
                                            J$.Ex(5859825, J$e);
                                        } finally {
                                            if (J$.Fr(5859833))
                                                continue jalangiLabel1;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }
                            arguments = J$.N(5857313, 'arguments', arguments, true, false, false);
                            code = J$.N(5857321, 'code', code, true, false, false);
                            message = J$.N(5857329, 'message', message, true, false, false);
                            Base = J$.N(5857337, 'Base', Base, true, false, false);
                            getMessage = J$.N(5857353, 'getMessage', J$.T(5857345, getMessage, 12, false), true, false, false);
                            J$.N(5857361, 'NodeError', NodeError, false, false, false);
                            if (J$.C(304560, J$.U(696442, '!', J$.R(5856817, 'Base', Base, false, false)))) {
                                Base = J$.W(5856833, 'Base', J$.I(typeof Error === 'undefined' ? Error = J$.R(5856825, 'Error', undefined, true, true) : Error = J$.R(5856825, 'Error', Error, true, true)), Base, false, false);
                            }
                            var NodeError = J$.W(5857193, 'NodeError', J$.F(5857185, J$.T(5857169, function (_Base) {
                                jalangiLabel3:
                                    while (true) {
                                        try {
                                            J$.Fe(5857129, arguments.callee, this, arguments);
                                            function NodeError(arg1, arg2, arg3) {
                                                jalangiLabel2:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(5857073, arguments.callee, this, arguments);
                                                            arguments = J$.N(5857081, 'arguments', arguments, true, false, false);
                                                            arg1 = J$.N(5857089, 'arg1', arg1, true, false, false);
                                                            arg2 = J$.N(5857097, 'arg2', arg2, true, false, false);
                                                            arg3 = J$.N(5857105, 'arg3', arg3, true, false, false);
                                                            return J$.Rt(5857065, J$.C(304576, J$.M(5857049, J$.R(5856993, '_Base', _Base, false, false), 'call', false)(J$.R(5857001, 'this', this, false, false), J$.F(5857041, J$.R(5857009, 'getMessage', getMessage, false, false), false)(J$.R(5857017, 'arg1', arg1, false, false), J$.R(5857025, 'arg2', arg2, false, false), J$.R(5857033, 'arg3', arg3, false, false)))) ? J$._() : J$.R(5857057, 'this', this, false, false));
                                                        } catch (J$e) {
                                                            J$.Ex(5859841, J$e);
                                                        } finally {
                                                            if (J$.Fr(5859849))
                                                                continue jalangiLabel2;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }
                                            arguments = J$.N(5857137, 'arguments', arguments, true, false, false);
                                            _Base = J$.N(5857145, '_Base', _Base, true, false, false);
                                            NodeError = J$.N(5857161, 'NodeError', J$.T(5857153, NodeError, 12, false), true, false, false);
                                            J$.F(5856985, J$.R(5856961, '_inheritsLoose', _inheritsLoose, false, true), false)(J$.R(5856969, 'NodeError', NodeError, false, false), J$.R(5856977, '_Base', _Base, false, false));
                                            return J$.Rt(5857121, J$.R(5857113, 'NodeError', NodeError, false, false));
                                        } catch (J$e) {
                                            J$.Ex(5859857, J$e);
                                        } finally {
                                            if (J$.Fr(5859865))
                                                continue jalangiLabel3;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false), false)(J$.R(5857177, 'Base', Base, false, false)), NodeError, false, false);
                            J$.P(5857233, J$.G(5857209, J$.R(5857201, 'NodeError', NodeError, false, false), 'prototype'), 'name', J$.G(5857225, J$.R(5857217, 'Base', Base, false, false), 'name'));
                            J$.P(5857265, J$.G(5857249, J$.R(5857241, 'NodeError', NodeError, false, false), 'prototype'), 'code', J$.R(5857257, 'code', code, false, false));
                            J$.P(5857297, J$.R(5857273, 'codes', codes, false, true), J$.R(5857281, 'code', code, false, false), J$.R(5857289, 'NodeError', NodeError, false, false));
                        } catch (J$e) {
                            J$.Ex(5859873, J$e);
                        } finally {
                            if (J$.Fr(5859881))
                                continue jalangiLabel4;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function oneOf(expected, thing) {
                jalangiLabel6:
                    while (true) {
                        try {
                            J$.Fe(5857937, arguments.callee, this, arguments);
                            arguments = J$.N(5857945, 'arguments', arguments, true, false, false);
                            expected = J$.N(5857953, 'expected', expected, true, false, false);
                            thing = J$.N(5857961, 'thing', thing, true, false, false);
                            J$.N(5857969, 'len', len, false, false, false);
                            if (J$.C(304600, J$.M(5857385, J$.I(typeof Array === 'undefined' ? Array = J$.R(5857369, 'Array', undefined, true, true) : Array = J$.R(5857369, 'Array', Array, true, true)), 'isArray', false)(J$.R(5857377, 'expected', expected, false, false)))) {
                                var len = J$.W(5857409, 'len', J$.G(5857401, J$.R(5857393, 'expected', expected, false, false), 'length'), len, false, false);
                                expected = J$.W(5857497, 'expected', J$.M(5857489, J$.R(5857417, 'expected', expected, false, false), 'map', false)(J$.T(5857481, function (i) {
                                    jalangiLabel5:
                                        while (true) {
                                            try {
                                                J$.Fe(5857457, arguments.callee, this, arguments);
                                                arguments = J$.N(5857465, 'arguments', arguments, true, false, false);
                                                i = J$.N(5857473, 'i', i, true, false, false);
                                                return J$.Rt(5857449, J$.F(5857441, J$.I(typeof String === 'undefined' ? String = J$.R(5857425, 'String', undefined, true, true) : String = J$.R(5857425, 'String', String, true, true)), false)(J$.R(5857433, 'i', i, false, false)));
                                            } catch (J$e) {
                                                J$.Ex(5859889, J$e);
                                            } finally {
                                                if (J$.Fr(5859897))
                                                    continue jalangiLabel5;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false)), expected, false, false);
                                if (J$.C(304592, J$.B(696466, '>', J$.R(5857505, 'len', len, false, false), J$.T(5857513, 2, 22, false)))) {
                                    return J$.Rt(5857657, J$.B(696490, '+', J$.M(5857617, J$.M(5857545, J$.T(5857521, 'one of ', 21, false), 'concat', false)(J$.R(5857529, 'thing', thing, false, false), J$.T(5857537, ' ', 21, false)), 'concat', false)(J$.M(5857601, J$.M(5857585, J$.R(5857553, 'expected', expected, false, false), 'slice', false)(J$.T(5857561, 0, 22, false), J$.B(696474, '-', J$.R(5857569, 'len', len, false, false), J$.T(5857577, 1, 22, false))), 'join', false)(J$.T(5857593, ', ', 21, false)), J$.T(5857609, ', or ', 21, false)), J$.G(5857649, J$.R(5857625, 'expected', expected, false, false), J$.B(696482, '-', J$.R(5857633, 'len', len, false, false), J$.T(5857641, 1, 22, false)))));
                                } else if (J$.C(304584, J$.B(696498, '===', J$.R(5857665, 'len', len, false, false), J$.T(5857673, 2, 22, false)))) {
                                    return J$.Rt(5857785, J$.M(5857777, J$.M(5857745, J$.M(5857705, J$.T(5857681, 'one of ', 21, false), 'concat', false)(J$.R(5857689, 'thing', thing, false, false), J$.T(5857697, ' ', 21, false)), 'concat', false)(J$.G(5857729, J$.R(5857713, 'expected', expected, false, false), J$.T(5857721, 0, 22, false)), J$.T(5857737, ' or ', 21, false)), 'concat', false)(J$.G(5857769, J$.R(5857753, 'expected', expected, false, false), J$.T(5857761, 1, 22, false))));
                                } else {
                                    return J$.Rt(5857857, J$.M(5857849, J$.M(5857817, J$.T(5857793, 'of ', 21, false), 'concat', false)(J$.R(5857801, 'thing', thing, false, false), J$.T(5857809, ' ', 21, false)), 'concat', false)(J$.G(5857841, J$.R(5857825, 'expected', expected, false, false), J$.T(5857833, 0, 22, false))));
                                }
                            } else {
                                return J$.Rt(5857929, J$.M(5857921, J$.M(5857889, J$.T(5857865, 'of ', 21, false), 'concat', false)(J$.R(5857873, 'thing', thing, false, false), J$.T(5857881, ' ', 21, false)), 'concat', false)(J$.F(5857913, J$.I(typeof String === 'undefined' ? String = J$.R(5857897, 'String', undefined, true, true) : String = J$.R(5857897, 'String', String, true, true)), false)(J$.R(5857905, 'expected', expected, false, false))));
                            }
                        } catch (J$e) {
                            J$.Ex(5859905, J$e);
                        } finally {
                            if (J$.Fr(5859913))
                                continue jalangiLabel6;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function startsWith(str, search, pos) {
                jalangiLabel7:
                    while (true) {
                        try {
                            J$.Fe(5858065, arguments.callee, this, arguments);
                            arguments = J$.N(5858073, 'arguments', arguments, true, false, false);
                            str = J$.N(5858081, 'str', str, true, false, false);
                            search = J$.N(5858089, 'search', search, true, false, false);
                            pos = J$.N(5858097, 'pos', pos, true, false, false);
                            return J$.Rt(5858057, J$.B(696530, '===', J$.M(5858041, J$.R(5857977, 'str', str, false, false), 'substr', false)(J$.C(304616, J$.C(304608, J$.U(696506, '!', J$.R(5857985, 'pos', pos, false, false))) ? J$._() : J$.B(696514, '<', J$.R(5857993, 'pos', pos, false, false), J$.T(5858001, 0, 22, false))) ? J$.T(5858009, 0, 22, false) : J$.U(696522, '+', J$.R(5858017, 'pos', pos, false, false)), J$.G(5858033, J$.R(5858025, 'search', search, false, false), 'length')), J$.R(5858049, 'search', search, false, false)));
                        } catch (J$e) {
                            J$.Ex(5859921, J$e);
                        } finally {
                            if (J$.Fr(5859929))
                                continue jalangiLabel7;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function endsWith(str, search, this_len) {
                jalangiLabel8:
                    while (true) {
                        try {
                            J$.Fe(5858233, arguments.callee, this, arguments);
                            arguments = J$.N(5858241, 'arguments', arguments, true, false, false);
                            str = J$.N(5858249, 'str', str, true, false, false);
                            search = J$.N(5858257, 'search', search, true, false, false);
                            this_len = J$.N(5858265, 'this_len', this_len, true, false, false);
                            if (J$.C(304632, J$.C(304624, J$.B(696538, '===', J$.R(5858105, 'this_len', this_len, false, false), J$.T(5858113, undefined, 24, false))) ? J$._() : J$.B(696546, '>', J$.R(5858121, 'this_len', this_len, false, false), J$.G(5858137, J$.R(5858129, 'str', str, false, false), 'length')))) {
                                this_len = J$.W(5858161, 'this_len', J$.G(5858153, J$.R(5858145, 'str', str, false, false), 'length'), this_len, false, false);
                            }
                            return J$.Rt(5858225, J$.B(696562, '===', J$.M(5858209, J$.R(5858169, 'str', str, false, false), 'substring', false)(J$.B(696554, '-', J$.R(5858177, 'this_len', this_len, false, false), J$.G(5858193, J$.R(5858185, 'search', search, false, false), 'length')), J$.R(5858201, 'this_len', this_len, false, false)), J$.R(5858217, 'search', search, false, false)));
                        } catch (J$e) {
                            J$.Ex(5859937, J$e);
                        } finally {
                            if (J$.Fr(5859945))
                                continue jalangiLabel8;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function includes(str, search, start) {
                jalangiLabel9:
                    while (true) {
                        try {
                            J$.Fe(5858409, arguments.callee, this, arguments);
                            arguments = J$.N(5858417, 'arguments', arguments, true, false, false);
                            str = J$.N(5858425, 'str', str, true, false, false);
                            search = J$.N(5858433, 'search', search, true, false, false);
                            start = J$.N(5858441, 'start', start, true, false, false);
                            if (J$.C(304640, J$.B(696578, '!==', J$.U(696570, 'typeof', J$.R(5858273, 'start', start, false, false)), J$.T(5858281, 'number', 21, false)))) {
                                start = J$.W(5858297, 'start', J$.T(5858289, 0, 22, false), start, false, false);
                            }
                            if (J$.C(304648, J$.B(696594, '>', J$.B(696586, '+', J$.R(5858305, 'start', start, false, false), J$.G(5858321, J$.R(5858313, 'search', search, false, false), 'length')), J$.G(5858337, J$.R(5858329, 'str', str, false, false), 'length')))) {
                                return J$.Rt(5858353, J$.T(5858345, false, 23, false));
                            } else {
                                return J$.Rt(5858401, J$.B(696610, '!==', J$.M(5858385, J$.R(5858361, 'str', str, false, false), 'indexOf', false)(J$.R(5858369, 'search', search, false, false), J$.R(5858377, 'start', start, false, false)), J$.U(696602, '-', J$.T(5858393, 1, 22, false))));
                            }
                        } catch (J$e) {
                            J$.Ex(5859953, J$e);
                        } finally {
                            if (J$.Fr(5859961))
                                continue jalangiLabel9;
                            else
                                return J$.Ra();
                        }
                    }
            }
            _inheritsLoose = J$.N(5859713, '_inheritsLoose', J$.T(5859705, _inheritsLoose, 12, false), true, false, false);
            J$.N(5859721, 'codes', codes, false, false, false);
            createErrorType = J$.N(5859737, 'createErrorType', J$.T(5859729, createErrorType, 12, false), true, false, false);
            oneOf = J$.N(5859753, 'oneOf', J$.T(5859745, oneOf, 12, false), true, false, false);
            startsWith = J$.N(5859769, 'startsWith', J$.T(5859761, startsWith, 12, false), true, false, false);
            endsWith = J$.N(5859785, 'endsWith', J$.T(5859777, endsWith, 12, false), true, false, false);
            includes = J$.N(5859801, 'includes', J$.T(5859793, includes, 12, false), true, false, false);
            J$.T(5856657, 'use strict', 21, false);
            var codes = J$.W(5856809, 'codes', J$.T(5856801, {}, 11, false), codes, false, true);
            J$.F(5858561, J$.R(5858449, 'createErrorType', createErrorType, false, true), false)(J$.T(5858457, 'ERR_INVALID_OPT_VALUE', 21, false), J$.T(5858545, function (name, value) {
                jalangiLabel10:
                    while (true) {
                        try {
                            J$.Fe(5858513, arguments.callee, this, arguments);
                            arguments = J$.N(5858521, 'arguments', arguments, true, false, false);
                            name = J$.N(5858529, 'name', name, true, false, false);
                            value = J$.N(5858537, 'value', value, true, false, false);
                            return J$.Rt(5858505, J$.B(696642, '+', J$.B(696634, '+', J$.B(696626, '+', J$.B(696618, '+', J$.T(5858465, 'The value "', 21, false), J$.R(5858473, 'value', value, false, false)), J$.T(5858481, '" is invalid for option "', 21, false)), J$.R(5858489, 'name', name, false, false)), J$.T(5858497, '"', 21, false)));
                        } catch (J$e) {
                            J$.Ex(5859969, J$e);
                        } finally {
                            if (J$.Fr(5859977))
                                continue jalangiLabel10;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false), J$.I(typeof TypeError === 'undefined' ? TypeError = J$.R(5858553, 'TypeError', undefined, true, true) : TypeError = J$.R(5858553, 'TypeError', TypeError, true, true)));
            J$.F(5859161, J$.R(5858569, 'createErrorType', createErrorType, false, true), false)(J$.T(5858577, 'ERR_INVALID_ARG_TYPE', 21, false), J$.T(5859145, function (name, expected, actual) {
                jalangiLabel11:
                    while (true) {
                        try {
                            J$.Fe(5859081, arguments.callee, this, arguments);
                            arguments = J$.N(5859089, 'arguments', arguments, true, false, false);
                            name = J$.N(5859097, 'name', name, true, false, false);
                            expected = J$.N(5859105, 'expected', expected, true, false, false);
                            actual = J$.N(5859113, 'actual', actual, true, false, false);
                            J$.N(5859121, 'determiner', determiner, false, false, false);
                            J$.N(5859129, 'msg', msg, false, false, false);
                            J$.N(5859137, 'type', type, false, false, false);
                            var determiner;
                            if (J$.C(304664, J$.C(304656, J$.B(696658, '===', J$.U(696650, 'typeof', J$.R(5858585, 'expected', expected, false, false)), J$.T(5858593, 'string', 21, false))) ? J$.F(5858625, J$.R(5858601, 'startsWith', startsWith, false, true), false)(J$.R(5858609, 'expected', expected, false, false), J$.T(5858617, 'not ', 21, false)) : J$._())) {
                                determiner = J$.W(5858641, 'determiner', J$.T(5858633, 'must not be', 21, false), determiner, false, false);
                                expected = J$.W(5858681, 'expected', J$.M(5858673, J$.R(5858649, 'expected', expected, false, false), 'replace', false)(J$.T(5858657, /^not /, 14, false), J$.T(5858665, '', 21, false)), expected, false, false);
                            } else {
                                determiner = J$.W(5858697, 'determiner', J$.T(5858689, 'must be', 21, false), determiner, false, false);
                            }
                            var msg;
                            if (J$.C(304680, J$.F(5858729, J$.R(5858705, 'endsWith', endsWith, false, true), false)(J$.R(5858713, 'name', name, false, false), J$.T(5858721, ' argument', 21, false)))) {
                                msg = J$.W(5858833, 'msg', J$.M(5858825, J$.M(5858785, J$.M(5858761, J$.T(5858737, 'The ', 21, false), 'concat', false)(J$.R(5858745, 'name', name, false, false), J$.T(5858753, ' ', 21, false)), 'concat', false)(J$.R(5858769, 'determiner', determiner, false, false), J$.T(5858777, ' ', 21, false)), 'concat', false)(J$.F(5858817, J$.R(5858793, 'oneOf', oneOf, false, true), false)(J$.R(5858801, 'expected', expected, false, false), J$.T(5858809, 'type', 21, false))), msg, false, false);
                            } else {
                                var type = J$.W(5858889, 'type', J$.C(304672, J$.F(5858865, J$.R(5858841, 'includes', includes, false, true), false)(J$.R(5858849, 'name', name, false, false), J$.T(5858857, '.', 21, false))) ? J$.T(5858873, 'property', 21, false) : J$.T(5858881, 'argument', 21, false), type, false, false);
                                msg = J$.W(5859017, 'msg', J$.M(5859009, J$.M(5858969, J$.M(5858945, J$.M(5858921, J$.T(5858897, 'The "', 21, false), 'concat', false)(J$.R(5858905, 'name', name, false, false), J$.T(5858913, '" ', 21, false)), 'concat', false)(J$.R(5858929, 'type', type, false, false), J$.T(5858937, ' ', 21, false)), 'concat', false)(J$.R(5858953, 'determiner', determiner, false, false), J$.T(5858961, ' ', 21, false)), 'concat', false)(J$.F(5859001, J$.R(5858977, 'oneOf', oneOf, false, true), false)(J$.R(5858985, 'expected', expected, false, false), J$.T(5858993, 'type', 21, false))), msg, false, false);
                            }
                            msg = J$.W(5859057, 'msg', J$.B(696674, '+', J$.R(5859049, 'msg', msg, false, false), J$.M(5859041, J$.T(5859025, '. Received type ', 21, false), 'concat', false)(J$.U(696666, 'typeof', J$.R(5859033, 'actual', actual, false, false)))), msg, false, false);
                            return J$.Rt(5859073, J$.R(5859065, 'msg', msg, false, false));
                        } catch (J$e) {
                            J$.Ex(5859985, J$e);
                        } finally {
                            if (J$.Fr(5859993))
                                continue jalangiLabel11;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false), J$.I(typeof TypeError === 'undefined' ? TypeError = J$.R(5859153, 'TypeError', undefined, true, true) : TypeError = J$.R(5859153, 'TypeError', TypeError, true, true)));
            J$.F(5859193, J$.R(5859169, 'createErrorType', createErrorType, false, true), false)(J$.T(5859177, 'ERR_STREAM_PUSH_AFTER_EOF', 21, false), J$.T(5859185, 'stream.push() after EOF', 21, false));
            J$.F(5859281, J$.R(5859201, 'createErrorType', createErrorType, false, true), false)(J$.T(5859209, 'ERR_METHOD_NOT_IMPLEMENTED', 21, false), J$.T(5859273, function (name) {
                jalangiLabel12:
                    while (true) {
                        try {
                            J$.Fe(5859249, arguments.callee, this, arguments);
                            arguments = J$.N(5859257, 'arguments', arguments, true, false, false);
                            name = J$.N(5859265, 'name', name, true, false, false);
                            return J$.Rt(5859241, J$.B(696690, '+', J$.B(696682, '+', J$.T(5859217, 'The ', 21, false), J$.R(5859225, 'name', name, false, false)), J$.T(5859233, ' method is not implemented', 21, false)));
                        } catch (J$e) {
                            J$.Ex(5860001, J$e);
                        } finally {
                            if (J$.Fr(5860009))
                                continue jalangiLabel12;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.F(5859313, J$.R(5859289, 'createErrorType', createErrorType, false, true), false)(J$.T(5859297, 'ERR_STREAM_PREMATURE_CLOSE', 21, false), J$.T(5859305, 'Premature close', 21, false));
            J$.F(5859401, J$.R(5859321, 'createErrorType', createErrorType, false, true), false)(J$.T(5859329, 'ERR_STREAM_DESTROYED', 21, false), J$.T(5859393, function (name) {
                jalangiLabel13:
                    while (true) {
                        try {
                            J$.Fe(5859369, arguments.callee, this, arguments);
                            arguments = J$.N(5859377, 'arguments', arguments, true, false, false);
                            name = J$.N(5859385, 'name', name, true, false, false);
                            return J$.Rt(5859361, J$.B(696706, '+', J$.B(696698, '+', J$.T(5859337, 'Cannot call ', 21, false), J$.R(5859345, 'name', name, false, false)), J$.T(5859353, ' after a stream was destroyed', 21, false)));
                        } catch (J$e) {
                            J$.Ex(5860017, J$e);
                        } finally {
                            if (J$.Fr(5860025))
                                continue jalangiLabel13;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.F(5859433, J$.R(5859409, 'createErrorType', createErrorType, false, true), false)(J$.T(5859417, 'ERR_MULTIPLE_CALLBACK', 21, false), J$.T(5859425, 'Callback called multiple times', 21, false));
            J$.F(5859465, J$.R(5859441, 'createErrorType', createErrorType, false, true), false)(J$.T(5859449, 'ERR_STREAM_CANNOT_PIPE', 21, false), J$.T(5859457, 'Cannot pipe, not readable', 21, false));
            J$.F(5859497, J$.R(5859473, 'createErrorType', createErrorType, false, true), false)(J$.T(5859481, 'ERR_STREAM_WRITE_AFTER_END', 21, false), J$.T(5859489, 'write after end', 21, false));
            J$.F(5859537, J$.R(5859505, 'createErrorType', createErrorType, false, true), false)(J$.T(5859513, 'ERR_STREAM_NULL_VALUES', 21, false), J$.T(5859521, 'May not write null values to stream', 21, false), J$.I(typeof TypeError === 'undefined' ? TypeError = J$.R(5859529, 'TypeError', undefined, true, true) : TypeError = J$.R(5859529, 'TypeError', TypeError, true, true)));
            J$.F(5859625, J$.R(5859545, 'createErrorType', createErrorType, false, true), false)(J$.T(5859553, 'ERR_UNKNOWN_ENCODING', 21, false), J$.T(5859609, function (arg) {
                jalangiLabel14:
                    while (true) {
                        try {
                            J$.Fe(5859585, arguments.callee, this, arguments);
                            arguments = J$.N(5859593, 'arguments', arguments, true, false, false);
                            arg = J$.N(5859601, 'arg', arg, true, false, false);
                            return J$.Rt(5859577, J$.B(696714, '+', J$.T(5859561, 'Unknown encoding: ', 21, false), J$.R(5859569, 'arg', arg, false, false)));
                        } catch (J$e) {
                            J$.Ex(5860033, J$e);
                        } finally {
                            if (J$.Fr(5860041))
                                continue jalangiLabel14;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false), J$.I(typeof TypeError === 'undefined' ? TypeError = J$.R(5859617, 'TypeError', undefined, true, true) : TypeError = J$.R(5859617, 'TypeError', TypeError, true, true)));
            J$.F(5859657, J$.R(5859633, 'createErrorType', createErrorType, false, true), false)(J$.T(5859641, 'ERR_STREAM_UNSHIFT_AFTER_END_EVENT', 21, false), J$.T(5859649, 'stream.unshift() after end event', 21, false));
            J$.P(5859689, J$.G(5859673, J$.I(typeof module === 'undefined' ? module = J$.R(5859665, 'module', undefined, true, true) : module = J$.R(5859665, 'module', module, true, true)), 'exports'), 'codes', J$.R(5859681, 'codes', codes, false, true));
        } catch (J$e) {
            J$.Ex(5860049, J$e);
        } finally {
            if (J$.Sr(5860057))
                continue jalangiLabel15;
            else
                break jalangiLabel15;
        }
    }
// JALANGI DO NOT INSTRUMENT

