J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(457673, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestMongoDb/node_modules/bson/lib/bson/max_key.js');
            function MaxKey() {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(457601, arguments.callee, this, arguments);
                            arguments = J$.N(457609, 'arguments', arguments, true, false, false);
                            if (J$.C(24952, J$.U(57314, '!', J$.B(57306, 'instanceof', J$.R(457537, 'this', this, false, false), J$.R(457545, 'MaxKey', MaxKey, false, true)))))
                                return J$.Rt(457569, J$.F(457561, J$.R(457553, 'MaxKey', MaxKey, false, true), true)());
                            J$.P(457593, J$.R(457577, 'this', this, false, false), '_bsontype', J$.T(457585, 'MaxKey', 21, false));
                        } catch (J$e) {
                            J$.Ex(457697, J$e);
                        } finally {
                            if (J$.Fr(457705))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            MaxKey = J$.N(457689, 'MaxKey', J$.T(457681, MaxKey, 12, false), true, false, false);
            J$.T(457529, 'use strict', 21, false);
            J$.P(457633, J$.I(typeof module === 'undefined' ? module = J$.R(457617, 'module', undefined, true, true) : module = J$.R(457617, 'module', module, true, true)), 'exports', J$.R(457625, 'MaxKey', MaxKey, false, true));
            J$.P(457665, J$.G(457649, J$.I(typeof module === 'undefined' ? module = J$.R(457641, 'module', undefined, true, true) : module = J$.R(457641, 'module', module, true, true)), 'exports'), 'MaxKey', J$.R(457657, 'MaxKey', MaxKey, false, true));
        } catch (J$e) {
            J$.Ex(457713, J$e);
        } finally {
            if (J$.Sr(457721))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

