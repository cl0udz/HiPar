J$.noInstrEval = false;
jalangiLabel2:
    while (true) {
        try {
            J$.Se(425105, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestMongoDb/node_modules/bson/lib/bson/db_ref.js');
            function DBRef(namespace, oid, db) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(424865, arguments.callee, this, arguments);
                            arguments = J$.N(424873, 'arguments', arguments, true, false, false);
                            namespace = J$.N(424881, 'namespace', namespace, true, false, false);
                            oid = J$.N(424889, 'oid', oid, true, false, false);
                            db = J$.N(424897, 'db', db, true, false, false);
                            if (J$.C(23088, J$.U(51178, '!', J$.B(51170, 'instanceof', J$.R(424705, 'this', this, false, false), J$.R(424713, 'DBRef', DBRef, false, true)))))
                                return J$.Rt(424761, J$.F(424753, J$.R(424721, 'DBRef', DBRef, false, true), true)(J$.R(424729, 'namespace', namespace, false, false), J$.R(424737, 'oid', oid, false, false), J$.R(424745, 'db', db, false, false)));
                            J$.P(424785, J$.R(424769, 'this', this, false, false), '_bsontype', J$.T(424777, 'DBRef', 21, false));
                            J$.P(424809, J$.R(424793, 'this', this, false, false), 'namespace', J$.R(424801, 'namespace', namespace, false, false));
                            J$.P(424833, J$.R(424817, 'this', this, false, false), 'oid', J$.R(424825, 'oid', oid, false, false));
                            J$.P(424857, J$.R(424841, 'this', this, false, false), 'db', J$.R(424849, 'db', db, false, false));
                        } catch (J$e) {
                            J$.Ex(425129, J$e);
                        } finally {
                            if (J$.Fr(425137))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            DBRef = J$.N(425121, 'DBRef', J$.T(425113, DBRef, 12, false), true, false, false);
            J$.T(424697, 'use strict', 21, false);
            J$.P(425041, J$.G(424913, J$.R(424905, 'DBRef', DBRef, false, true), 'prototype'), 'toJSON', J$.T(425033, function () {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(425017, arguments.callee, this, arguments);
                            arguments = J$.N(425025, 'arguments', arguments, true, false, false);
                            return J$.Rt(425009, J$.T(425001, {
                                $ref: J$.G(424929, J$.R(424921, 'this', this, false, false), 'namespace'),
                                $id: J$.G(424945, J$.R(424937, 'this', this, false, false), 'oid'),
                                $db: J$.C(23096, J$.B(51186, '==', J$.G(424961, J$.R(424953, 'this', this, false, false), 'db'), J$.T(424969, null, 25, false))) ? J$.T(424977, '', 21, false) : J$.G(424993, J$.R(424985, 'this', this, false, false), 'db')
                            }, 11, false));
                        } catch (J$e) {
                            J$.Ex(425145, J$e);
                        } finally {
                            if (J$.Fr(425153))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(425065, J$.I(typeof module === 'undefined' ? module = J$.R(425049, 'module', undefined, true, true) : module = J$.R(425049, 'module', module, true, true)), 'exports', J$.R(425057, 'DBRef', DBRef, false, true));
            J$.P(425097, J$.G(425081, J$.I(typeof module === 'undefined' ? module = J$.R(425073, 'module', undefined, true, true) : module = J$.R(425073, 'module', module, true, true)), 'exports'), 'DBRef', J$.R(425089, 'DBRef', DBRef, false, true));
        } catch (J$e) {
            J$.Ex(425161, J$e);
        } finally {
            if (J$.Sr(425169))
                continue jalangiLabel2;
            else
                break jalangiLabel2;
        }
    }
// JALANGI DO NOT INSTRUMENT

