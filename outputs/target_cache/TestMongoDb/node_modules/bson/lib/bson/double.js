J$.noInstrEval = false;
jalangiLabel3:
    while (true) {
        try {
            J$.Se(438921, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestMongoDb/node_modules/bson/lib/bson/double.js');
            function Double(value) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(438697, arguments.callee, this, arguments);
                            arguments = J$.N(438705, 'arguments', arguments, true, false, false);
                            value = J$.N(438713, 'value', value, true, false, false);
                            if (J$.C(23968, J$.U(54346, '!', J$.B(54338, 'instanceof', J$.R(438601, 'this', this, false, false), J$.R(438609, 'Double', Double, false, true)))))
                                return J$.Rt(438641, J$.F(438633, J$.R(438617, 'Double', Double, false, true), true)(J$.R(438625, 'value', value, false, false)));
                            J$.P(438665, J$.R(438649, 'this', this, false, false), '_bsontype', J$.T(438657, 'Double', 21, false));
                            J$.P(438689, J$.R(438673, 'this', this, false, false), 'value', J$.R(438681, 'value', value, false, false));
                        } catch (J$e) {
                            J$.Ex(438945, J$e);
                        } finally {
                            if (J$.Fr(438953))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            Double = J$.N(438937, 'Double', J$.T(438929, Double, 12, false), true, false, false);
            J$.T(438593, 'use strict', 21, false);
            J$.P(438785, J$.G(438729, J$.R(438721, 'Double', Double, false, true), 'prototype'), 'valueOf', J$.T(438777, function () {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(438761, arguments.callee, this, arguments);
                            arguments = J$.N(438769, 'arguments', arguments, true, false, false);
                            return J$.Rt(438753, J$.G(438745, J$.R(438737, 'this', this, false, false), 'value'));
                        } catch (J$e) {
                            J$.Ex(438961, J$e);
                        } finally {
                            if (J$.Fr(438969))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(438857, J$.G(438801, J$.R(438793, 'Double', Double, false, true), 'prototype'), 'toJSON', J$.T(438849, function () {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(438833, arguments.callee, this, arguments);
                            arguments = J$.N(438841, 'arguments', arguments, true, false, false);
                            return J$.Rt(438825, J$.G(438817, J$.R(438809, 'this', this, false, false), 'value'));
                        } catch (J$e) {
                            J$.Ex(438977, J$e);
                        } finally {
                            if (J$.Fr(438985))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(438881, J$.I(typeof module === 'undefined' ? module = J$.R(438865, 'module', undefined, true, true) : module = J$.R(438865, 'module', module, true, true)), 'exports', J$.R(438873, 'Double', Double, false, true));
            J$.P(438913, J$.G(438897, J$.I(typeof module === 'undefined' ? module = J$.R(438889, 'module', undefined, true, true) : module = J$.R(438889, 'module', module, true, true)), 'exports'), 'Double', J$.R(438905, 'Double', Double, false, true));
        } catch (J$e) {
            J$.Ex(438993, J$e);
        } finally {
            if (J$.Sr(439001))
                continue jalangiLabel3;
            else
                break jalangiLabel3;
        }
    }
// JALANGI DO NOT INSTRUMENT

