J$.noInstrEval = false;
jalangiLabel4:
    while (true) {
        try {
            J$.Se(511649, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestMongoDb/node_modules/bson/lib/bson/parser/utils.js');
            function normalizedFunctionString(fn) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(511313, arguments.callee, this, arguments);
                            arguments = J$.N(511321, 'arguments', arguments, true, false, false);
                            fn = J$.N(511329, 'fn', fn, true, false, false);
                            return J$.Rt(511305, J$.M(511297, J$.M(511273, J$.R(511265, 'fn', fn, false, false), 'toString', false)(), 'replace', false)(J$.T(511281, /function *\(/, 14, false), J$.T(511289, 'function (', 21, false)));
                        } catch (J$e) {
                            J$.Ex(511721, J$e);
                        } finally {
                            if (J$.Fr(511729))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function newBuffer(item, encoding) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(511377, arguments.callee, this, arguments);
                            arguments = J$.N(511385, 'arguments', arguments, true, false, false);
                            item = J$.N(511393, 'item', item, true, false, false);
                            encoding = J$.N(511401, 'encoding', encoding, true, false, false);
                            return J$.Rt(511369, J$.F(511361, J$.I(typeof Buffer === 'undefined' ? Buffer = J$.R(511337, 'Buffer', undefined, true, true) : Buffer = J$.R(511337, 'Buffer', Buffer, true, true)), true)(J$.R(511345, 'item', item, false, false), J$.R(511353, 'encoding', encoding, false, false)));
                        } catch (J$e) {
                            J$.Ex(511737, J$e);
                        } finally {
                            if (J$.Fr(511745))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function allocBuffer() {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(511457, arguments.callee, this, arguments);
                            arguments = J$.N(511465, 'arguments', arguments, true, false, false);
                            return J$.Rt(511449, J$.M(511441, J$.G(511417, J$.I(typeof Buffer === 'undefined' ? Buffer = J$.R(511409, 'Buffer', undefined, true, true) : Buffer = J$.R(511409, 'Buffer', Buffer, true, true)), 'alloc'), 'apply', false)(J$.I(typeof Buffer === 'undefined' ? Buffer = J$.R(511425, 'Buffer', undefined, true, true) : Buffer = J$.R(511425, 'Buffer', Buffer, true, true)), J$.I(typeof arguments === 'undefined' ? arguments = J$.R(511433, 'arguments', undefined, true, true) : arguments = J$.R(511433, 'arguments', arguments, true, true))));
                        } catch (J$e) {
                            J$.Ex(511753, J$e);
                        } finally {
                            if (J$.Fr(511761))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function toBuffer() {
                jalangiLabel3:
                    while (true) {
                        try {
                            J$.Fe(511521, arguments.callee, this, arguments);
                            arguments = J$.N(511529, 'arguments', arguments, true, false, false);
                            return J$.Rt(511513, J$.M(511505, J$.G(511481, J$.I(typeof Buffer === 'undefined' ? Buffer = J$.R(511473, 'Buffer', undefined, true, true) : Buffer = J$.R(511473, 'Buffer', Buffer, true, true)), 'from'), 'apply', false)(J$.I(typeof Buffer === 'undefined' ? Buffer = J$.R(511489, 'Buffer', undefined, true, true) : Buffer = J$.R(511489, 'Buffer', Buffer, true, true)), J$.I(typeof arguments === 'undefined' ? arguments = J$.R(511497, 'arguments', undefined, true, true) : arguments = J$.R(511497, 'arguments', arguments, true, true))));
                        } catch (J$e) {
                            J$.Ex(511769, J$e);
                        } finally {
                            if (J$.Fr(511777))
                                continue jalangiLabel3;
                            else
                                return J$.Ra();
                        }
                    }
            }
            normalizedFunctionString = J$.N(511665, 'normalizedFunctionString', J$.T(511657, normalizedFunctionString, 12, false), true, false, false);
            newBuffer = J$.N(511681, 'newBuffer', J$.T(511673, newBuffer, 12, false), true, false, false);
            allocBuffer = J$.N(511697, 'allocBuffer', J$.T(511689, allocBuffer, 12, false), true, false, false);
            toBuffer = J$.N(511713, 'toBuffer', J$.T(511705, toBuffer, 12, false), true, false, false);
            J$.T(511257, 'use strict', 21, false);
            J$.P(511641, J$.I(typeof module === 'undefined' ? module = J$.R(511537, 'module', undefined, true, true) : module = J$.R(511537, 'module', module, true, true)), 'exports', J$.T(511633, {
                normalizedFunctionString: J$.R(511545, 'normalizedFunctionString', normalizedFunctionString, false, true),
                allocBuffer: J$.C(28776, J$.B(71090, '===', J$.U(71082, 'typeof', J$.G(511561, J$.I(typeof Buffer === 'undefined' ? Buffer = J$.R(511553, 'Buffer', undefined, true, true) : Buffer = J$.R(511553, 'Buffer', Buffer, true, true)), 'alloc')), J$.T(511569, 'function', 21, false))) ? J$.R(511577, 'allocBuffer', allocBuffer, false, true) : J$.R(511585, 'newBuffer', newBuffer, false, true),
                toBuffer: J$.C(28784, J$.B(71106, '===', J$.U(71098, 'typeof', J$.G(511601, J$.I(typeof Buffer === 'undefined' ? Buffer = J$.R(511593, 'Buffer', undefined, true, true) : Buffer = J$.R(511593, 'Buffer', Buffer, true, true)), 'from')), J$.T(511609, 'function', 21, false))) ? J$.R(511617, 'toBuffer', toBuffer, false, true) : J$.R(511625, 'newBuffer', newBuffer, false, true)
            }, 11, false));
        } catch (J$e) {
            J$.Ex(511785, J$e);
        } finally {
            if (J$.Sr(511793))
                continue jalangiLabel4;
            else
                break jalangiLabel4;
        }
    }
// JALANGI DO NOT INSTRUMENT

