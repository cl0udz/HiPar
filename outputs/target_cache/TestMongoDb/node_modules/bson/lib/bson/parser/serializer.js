J$.noInstrEval = false;
jalangiLabel26:
    while (true) {
        try {
            J$.Se(510553, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestMongoDb/node_modules/bson/lib/bson/parser/serializer.js');
            function _typeof(obj) {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(485833, arguments.callee, this, arguments);
                            arguments = J$.N(485841, 'arguments', arguments, true, false, false);
                            obj = J$.N(485849, 'obj', obj, true, false, false);
                            if (J$.C(27392, J$.C(27352, J$.B(64842, '===', J$.U(64834, 'typeof', J$.I(typeof Symbol === 'undefined' ? Symbol = J$.R(485569, 'Symbol', undefined, true, true) : Symbol = J$.R(485569, 'Symbol', Symbol, true, true))), J$.T(485577, 'function', 21, false))) ? J$.B(64858, '===', J$.U(64850, 'typeof', J$.G(485593, J$.I(typeof Symbol === 'undefined' ? Symbol = J$.R(485585, 'Symbol', undefined, true, true) : Symbol = J$.R(485585, 'Symbol', Symbol, true, true)), 'iterator')), J$.T(485601, 'symbol', 21, false)) : J$._())) {
                                _typeof = J$.W(485657, '_typeof', J$.T(485649, function _typeof(obj) {
                                    jalangiLabel0:
                                        while (true) {
                                            try {
                                                J$.Fe(485625, arguments.callee, this, arguments);
                                                arguments = J$.N(485633, 'arguments', arguments, true, false, false);
                                                obj = J$.N(485641, 'obj', obj, true, false, false);
                                                return J$.Rt(485617, J$.U(64866, 'typeof', J$.R(485609, 'obj', obj, false, false)));
                                            } catch (J$e) {
                                                J$.Ex(510825, J$e);
                                            } finally {
                                                if (J$.Fr(510833))
                                                    continue jalangiLabel0;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false), _typeof, false, true);
                            } else {
                                _typeof = J$.W(485793, '_typeof', J$.T(485785, function _typeof(obj) {
                                    jalangiLabel1:
                                        while (true) {
                                            try {
                                                J$.Fe(485761, arguments.callee, this, arguments);
                                                arguments = J$.N(485769, 'arguments', arguments, true, false, false);
                                                obj = J$.N(485777, 'obj', obj, true, false, false);
                                                return J$.Rt(485753, J$.C(27384, J$.C(27376, J$.C(27368, J$.C(27360, J$.R(485665, 'obj', obj, false, false)) ? J$.B(64882, '===', J$.U(64874, 'typeof', J$.I(typeof Symbol === 'undefined' ? Symbol = J$.R(485673, 'Symbol', undefined, true, true) : Symbol = J$.R(485673, 'Symbol', Symbol, true, true))), J$.T(485681, 'function', 21, false)) : J$._()) ? J$.B(64890, '===', J$.G(485697, J$.R(485689, 'obj', obj, false, false), 'constructor'), J$.I(typeof Symbol === 'undefined' ? Symbol = J$.R(485705, 'Symbol', undefined, true, true) : Symbol = J$.R(485705, 'Symbol', Symbol, true, true))) : J$._()) ? J$.B(64898, '!==', J$.R(485713, 'obj', obj, false, false), J$.G(485729, J$.I(typeof Symbol === 'undefined' ? Symbol = J$.R(485721, 'Symbol', undefined, true, true) : Symbol = J$.R(485721, 'Symbol', Symbol, true, true)), 'prototype')) : J$._()) ? J$.T(485737, 'symbol', 21, false) : J$.U(64906, 'typeof', J$.R(485745, 'obj', obj, false, false)));
                                            } catch (J$e) {
                                                J$.Ex(510841, J$e);
                                            } finally {
                                                if (J$.Fr(510849))
                                                    continue jalangiLabel1;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false), _typeof, false, true);
                            }
                            return J$.Rt(485825, J$.F(485817, J$.R(485801, '_typeof', _typeof, false, true), false)(J$.R(485809, 'obj', obj, false, false)));
                        } catch (J$e) {
                            J$.Ex(510857, J$e);
                        } finally {
                            if (J$.Fr(510865))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }
            _typeof = J$.N(510569, '_typeof', J$.T(510561, _typeof, 12, false), true, false, false);
            J$.N(510577, 'writeIEEE754', writeIEEE754, false, false, false);
            J$.N(510585, 'Long', Long, false, false, false);
            J$.N(510593, 'Map', Map, false, false, false);
            J$.N(510601, 'Binary', Binary, false, false, false);
            J$.N(510609, 'normalizedFunctionString', normalizedFunctionString, false, false, false);
            J$.N(510617, 'regexp', regexp, false, false, false);
            J$.N(510625, 'ignoreKeys', ignoreKeys, false, false, false);
            J$.N(510633, 'isDate', isDate, false, false, false);
            J$.N(510641, 'isRegExp', isRegExp, false, false, false);
            J$.N(510649, 'serializeString', serializeString, false, false, false);
            J$.N(510657, 'serializeNumber', serializeNumber, false, false, false);
            J$.N(510665, 'serializeNull', serializeNull, false, false, false);
            J$.N(510673, 'serializeBoolean', serializeBoolean, false, false, false);
            J$.N(510681, 'serializeDate', serializeDate, false, false, false);
            J$.N(510689, 'serializeRegExp', serializeRegExp, false, false, false);
            J$.N(510697, 'serializeBSONRegExp', serializeBSONRegExp, false, false, false);
            J$.N(510705, 'serializeMinMax', serializeMinMax, false, false, false);
            J$.N(510713, 'serializeObjectId', serializeObjectId, false, false, false);
            J$.N(510721, 'serializeBuffer', serializeBuffer, false, false, false);
            J$.N(510729, 'serializeObject', serializeObject, false, false, false);
            J$.N(510737, 'serializeDecimal128', serializeDecimal128, false, false, false);
            J$.N(510745, 'serializeLong', serializeLong, false, false, false);
            J$.N(510753, 'serializeInt32', serializeInt32, false, false, false);
            J$.N(510761, 'serializeDouble', serializeDouble, false, false, false);
            J$.N(510769, 'serializeFunction', serializeFunction, false, false, false);
            J$.N(510777, 'serializeCode', serializeCode, false, false, false);
            J$.N(510785, 'serializeBinary', serializeBinary, false, false, false);
            J$.N(510793, 'serializeSymbol', serializeSymbol, false, false, false);
            J$.N(510801, 'serializeDBRef', serializeDBRef, false, false, false);
            J$.N(510809, 'serializeInto', serializeInto, false, false, false);
            J$.N(510817, 'BSON', BSON, false, false, false);
            J$.T(485561, 'use strict', 21, false);
            var writeIEEE754 = J$.W(485977, 'writeIEEE754', J$.G(485881, J$.F(485873, J$.I(typeof require === 'undefined' ? require = J$.R(485857, 'require', undefined, true, true) : require = J$.R(485857, 'require', require, true, true)), false)(J$.T(485865, '../float_parser', 21, false)), 'writeIEEE754'), writeIEEE754, false, true), Long = J$.W(485985, 'Long', J$.G(485913, J$.F(485905, J$.I(typeof require === 'undefined' ? require = J$.R(485889, 'require', undefined, true, true) : require = J$.R(485889, 'require', require, true, true)), false)(J$.T(485897, '../long', 21, false)), 'Long'), Long, false, true), Map = J$.W(485993, 'Map', J$.F(485937, J$.I(typeof require === 'undefined' ? require = J$.R(485921, 'require', undefined, true, true) : require = J$.R(485921, 'require', require, true, true)), false)(J$.T(485929, '../map', 21, false)), Map, false, true), Binary = J$.W(486001, 'Binary', J$.G(485969, J$.F(485961, J$.I(typeof require === 'undefined' ? require = J$.R(485945, 'require', undefined, true, true) : require = J$.R(485945, 'require', require, true, true)), false)(J$.T(485953, '../binary', 21, false)), 'Binary'), Binary, false, true);
            var normalizedFunctionString = J$.W(486041, 'normalizedFunctionString', J$.G(486033, J$.F(486025, J$.I(typeof require === 'undefined' ? require = J$.R(486009, 'require', undefined, true, true) : require = J$.R(486009, 'require', require, true, true)), false)(J$.T(486017, './utils', 21, false)), 'normalizedFunctionString'), normalizedFunctionString, false, true);
            var regexp = J$.W(486057, 'regexp', J$.T(486049, /\x00/, 14, false), regexp, false, true);
            var ignoreKeys = J$.W(486105, 'ignoreKeys', J$.T(486097, [
                J$.T(486065, '$db', 21, false),
                J$.T(486073, '$ref', 21, false),
                J$.T(486081, '$id', 21, false),
                J$.T(486089, '$clusterTime', 21, false)
            ], 10, false), ignoreKeys, false, true);
            var isDate = J$.W(486233, 'isDate', J$.T(486225, function isDate(d) {
                jalangiLabel3:
                    while (true) {
                        try {
                            J$.Fe(486201, arguments.callee, this, arguments);
                            arguments = J$.N(486209, 'arguments', arguments, true, false, false);
                            d = J$.N(486217, 'd', d, true, false, false);
                            return J$.Rt(486193, J$.C(27400, J$.B(64914, '===', J$.F(486129, J$.R(486113, '_typeof', _typeof, false, true), false)(J$.R(486121, 'd', d, false, false)), J$.T(486137, 'object', 21, false))) ? J$.B(64922, '===', J$.M(486177, J$.G(486161, J$.G(486153, J$.I(typeof Object === 'undefined' ? Object = J$.R(486145, 'Object', undefined, true, true) : Object = J$.R(486145, 'Object', Object, true, true)), 'prototype'), 'toString'), 'call', false)(J$.R(486169, 'd', d, false, false)), J$.T(486185, '[object Date]', 21, false)) : J$._());
                        } catch (J$e) {
                            J$.Ex(510873, J$e);
                        } finally {
                            if (J$.Fr(510881))
                                continue jalangiLabel3;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false), isDate, false, true);
            var isRegExp = J$.W(486329, 'isRegExp', J$.T(486321, function isRegExp(d) {
                jalangiLabel4:
                    while (true) {
                        try {
                            J$.Fe(486297, arguments.callee, this, arguments);
                            arguments = J$.N(486305, 'arguments', arguments, true, false, false);
                            d = J$.N(486313, 'd', d, true, false, false);
                            return J$.Rt(486289, J$.B(64930, '===', J$.M(486273, J$.G(486257, J$.G(486249, J$.I(typeof Object === 'undefined' ? Object = J$.R(486241, 'Object', undefined, true, true) : Object = J$.R(486241, 'Object', Object, true, true)), 'prototype'), 'toString'), 'call', false)(J$.R(486265, 'd', d, false, false)), J$.T(486281, '[object RegExp]', 21, false)));
                        } catch (J$e) {
                            J$.Ex(510889, J$e);
                        } finally {
                            if (J$.Fr(510897))
                                continue jalangiLabel4;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false), isRegExp, false, true);
            var serializeString = J$.W(487017, 'serializeString', J$.T(487009, function serializeString(buffer, key, value, index, isArray) {
                jalangiLabel5:
                    while (true) {
                        try {
                            J$.Fe(486937, arguments.callee, this, arguments);
                            arguments = J$.N(486945, 'arguments', arguments, true, false, false);
                            buffer = J$.N(486953, 'buffer', buffer, true, false, false);
                            key = J$.N(486961, 'key', key, true, false, false);
                            value = J$.N(486969, 'value', value, true, false, false);
                            index = J$.N(486977, 'index', index, true, false, false);
                            isArray = J$.N(486985, 'isArray', isArray, true, false, false);
                            J$.N(486993, 'numberOfWrittenBytes', numberOfWrittenBytes, false, false, false);
                            J$.N(487001, 'size', size, false, false, false);
                            J$.P(486377, J$.R(486337, 'buffer', buffer, false, false), J$.B(64954, '-', index = J$.W(486353, 'index', J$.B(64946, '+', J$.U(64938, '+', J$.R(486345, 'index', index, false, false)), 1), index, false, false), 1), J$.G(486369, J$.R(486361, 'BSON', BSON, false, true), 'BSON_DATA_STRING'));
                            var numberOfWrittenBytes = J$.W(486473, 'numberOfWrittenBytes', J$.C(27408, J$.U(64962, '!', J$.R(486385, 'isArray', isArray, false, false))) ? J$.M(486425, J$.R(486393, 'buffer', buffer, false, false), 'write', false)(J$.R(486401, 'key', key, false, false), J$.R(486409, 'index', index, false, false), J$.T(486417, 'utf8', 21, false)) : J$.M(486465, J$.R(486433, 'buffer', buffer, false, false), 'write', false)(J$.R(486441, 'key', key, false, false), J$.R(486449, 'index', index, false, false), J$.T(486457, 'ascii', 21, false)), numberOfWrittenBytes, false, false);
                            index = J$.W(486505, 'index', J$.B(64978, '+', J$.B(64970, '+', J$.R(486481, 'index', index, false, false), J$.R(486489, 'numberOfWrittenBytes', numberOfWrittenBytes, false, false)), J$.T(486497, 1, 22, false)), index, false, false);
                            J$.P(486545, J$.R(486513, 'buffer', buffer, false, false), J$.B(64986, '-', J$.R(486521, 'index', index, false, false), J$.T(486529, 1, 22, false)), J$.T(486537, 0, 22, false));
                            var size = J$.W(486601, 'size', J$.M(486593, J$.R(486553, 'buffer', buffer, false, false), 'write', false)(J$.R(486561, 'value', value, false, false), J$.B(64994, '+', J$.R(486569, 'index', index, false, false), J$.T(486577, 4, 22, false)), J$.T(486585, 'utf8', 21, false)), size, false, false);
                            J$.P(486665, J$.R(486609, 'buffer', buffer, false, false), J$.B(65002, '+', J$.R(486617, 'index', index, false, false), J$.T(486625, 3, 22, false)), J$.B(65026, '&', J$.B(65018, '>>', J$.B(65010, '+', J$.R(486633, 'size', size, false, false), J$.T(486641, 1, 22, false)), J$.T(486649, 24, 22, false)), J$.T(486657, 255, 22, false)));
                            J$.P(486729, J$.R(486673, 'buffer', buffer, false, false), J$.B(65034, '+', J$.R(486681, 'index', index, false, false), J$.T(486689, 2, 22, false)), J$.B(65058, '&', J$.B(65050, '>>', J$.B(65042, '+', J$.R(486697, 'size', size, false, false), J$.T(486705, 1, 22, false)), J$.T(486713, 16, 22, false)), J$.T(486721, 255, 22, false)));
                            J$.P(486793, J$.R(486737, 'buffer', buffer, false, false), J$.B(65066, '+', J$.R(486745, 'index', index, false, false), J$.T(486753, 1, 22, false)), J$.B(65090, '&', J$.B(65082, '>>', J$.B(65074, '+', J$.R(486761, 'size', size, false, false), J$.T(486769, 1, 22, false)), J$.T(486777, 8, 22, false)), J$.T(486785, 255, 22, false)));
                            J$.P(486841, J$.R(486801, 'buffer', buffer, false, false), J$.R(486809, 'index', index, false, false), J$.B(65106, '&', J$.B(65098, '+', J$.R(486817, 'size', size, false, false), J$.T(486825, 1, 22, false)), J$.T(486833, 255, 22, false)));
                            index = J$.W(486873, 'index', J$.B(65122, '+', J$.B(65114, '+', J$.R(486849, 'index', index, false, false), J$.T(486857, 4, 22, false)), J$.R(486865, 'size', size, false, false)), index, false, false);
                            J$.P(486913, J$.R(486881, 'buffer', buffer, false, false), J$.B(65146, '-', index = J$.W(486897, 'index', J$.B(65138, '+', J$.U(65130, '+', J$.R(486889, 'index', index, false, false)), 1), index, false, false), 1), J$.T(486905, 0, 22, false));
                            return J$.Rt(486929, J$.R(486921, 'index', index, false, false));
                        } catch (J$e) {
                            J$.Ex(510905, J$e);
                        } finally {
                            if (J$.Fr(510913))
                                continue jalangiLabel5;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false), serializeString, false, true);
            var serializeNumber = J$.W(489049, 'serializeNumber', J$.T(489041, function serializeNumber(buffer, key, value, index, isArray) {
                jalangiLabel6:
                    while (true) {
                        try {
                            J$.Fe(488953, arguments.callee, this, arguments);
                            arguments = J$.N(488961, 'arguments', arguments, true, false, false);
                            buffer = J$.N(488969, 'buffer', buffer, true, false, false);
                            key = J$.N(488977, 'key', key, true, false, false);
                            value = J$.N(488985, 'value', value, true, false, false);
                            index = J$.N(488993, 'index', index, true, false, false);
                            isArray = J$.N(489001, 'isArray', isArray, true, false, false);
                            J$.N(489009, 'numberOfWrittenBytes', numberOfWrittenBytes, false, false, false);
                            J$.N(489017, 'longVal', longVal, false, false, false);
                            J$.N(489025, 'lowBits', lowBits, false, false, false);
                            J$.N(489033, 'highBits', highBits, false, false, false);
                            if (J$.C(27496, J$.C(27424, J$.C(27416, J$.B(65154, '===', J$.M(487041, J$.I(typeof Math === 'undefined' ? Math = J$.R(487025, 'Math', undefined, true, true) : Math = J$.R(487025, 'Math', Math, true, true)), 'floor', false)(J$.R(487033, 'value', value, false, false)), J$.R(487049, 'value', value, false, false))) ? J$.B(65162, '>=', J$.R(487057, 'value', value, false, false), J$.G(487073, J$.R(487065, 'BSON', BSON, false, true), 'JS_INT_MIN')) : J$._()) ? J$.B(65170, '<=', J$.R(487081, 'value', value, false, false), J$.G(487097, J$.R(487089, 'BSON', BSON, false, true), 'JS_INT_MAX')) : J$._())) {
                                if (J$.C(27480, J$.C(27432, J$.B(65178, '>=', J$.R(487105, 'value', value, false, false), J$.G(487121, J$.R(487113, 'BSON', BSON, false, true), 'BSON_INT32_MIN'))) ? J$.B(65186, '<=', J$.R(487129, 'value', value, false, false), J$.G(487145, J$.R(487137, 'BSON', BSON, false, true), 'BSON_INT32_MAX')) : J$._())) {
                                    J$.P(487193, J$.R(487153, 'buffer', buffer, false, false), J$.B(65210, '-', index = J$.W(487169, 'index', J$.B(65202, '+', J$.U(65194, '+', J$.R(487161, 'index', index, false, false)), 1), index, false, false), 1), J$.G(487185, J$.R(487177, 'BSON', BSON, false, true), 'BSON_DATA_INT'));
                                    var numberOfWrittenBytes = J$.W(487289, 'numberOfWrittenBytes', J$.C(27440, J$.U(65218, '!', J$.R(487201, 'isArray', isArray, false, false))) ? J$.M(487241, J$.R(487209, 'buffer', buffer, false, false), 'write', false)(J$.R(487217, 'key', key, false, false), J$.R(487225, 'index', index, false, false), J$.T(487233, 'utf8', 21, false)) : J$.M(487281, J$.R(487249, 'buffer', buffer, false, false), 'write', false)(J$.R(487257, 'key', key, false, false), J$.R(487265, 'index', index, false, false), J$.T(487273, 'ascii', 21, false)), numberOfWrittenBytes, false, false);
                                    index = J$.W(487313, 'index', J$.B(65226, '+', J$.R(487297, 'index', index, false, false), J$.R(487305, 'numberOfWrittenBytes', numberOfWrittenBytes, false, false)), index, false, false);
                                    J$.P(487353, J$.R(487321, 'buffer', buffer, false, false), J$.B(65250, '-', index = J$.W(487337, 'index', J$.B(65242, '+', J$.U(65234, '+', J$.R(487329, 'index', index, false, false)), 1), index, false, false), 1), J$.T(487345, 0, 22, false));
                                    J$.P(487401, J$.R(487361, 'buffer', buffer, false, false), J$.B(65274, '-', index = J$.W(487377, 'index', J$.B(65266, '+', J$.U(65258, '+', J$.R(487369, 'index', index, false, false)), 1), index, false, false), 1), J$.B(65282, '&', J$.R(487385, 'value', value, false, false), J$.T(487393, 255, 22, false)));
                                    J$.P(487457, J$.R(487409, 'buffer', buffer, false, false), J$.B(65306, '-', index = J$.W(487425, 'index', J$.B(65298, '+', J$.U(65290, '+', J$.R(487417, 'index', index, false, false)), 1), index, false, false), 1), J$.B(65322, '&', J$.B(65314, '>>', J$.R(487433, 'value', value, false, false), J$.T(487441, 8, 22, false)), J$.T(487449, 255, 22, false)));
                                    J$.P(487513, J$.R(487465, 'buffer', buffer, false, false), J$.B(65346, '-', index = J$.W(487481, 'index', J$.B(65338, '+', J$.U(65330, '+', J$.R(487473, 'index', index, false, false)), 1), index, false, false), 1), J$.B(65362, '&', J$.B(65354, '>>', J$.R(487489, 'value', value, false, false), J$.T(487497, 16, 22, false)), J$.T(487505, 255, 22, false)));
                                    J$.P(487569, J$.R(487521, 'buffer', buffer, false, false), J$.B(65386, '-', index = J$.W(487537, 'index', J$.B(65378, '+', J$.U(65370, '+', J$.R(487529, 'index', index, false, false)), 1), index, false, false), 1), J$.B(65402, '&', J$.B(65394, '>>', J$.R(487545, 'value', value, false, false), J$.T(487553, 24, 22, false)), J$.T(487561, 255, 22, false)));
                                } else if (J$.C(27472, J$.C(27448, J$.B(65410, '>=', J$.R(487577, 'value', value, false, false), J$.G(487593, J$.R(487585, 'BSON', BSON, false, true), 'JS_INT_MIN'))) ? J$.B(65418, '<=', J$.R(487601, 'value', value, false, false), J$.G(487617, J$.R(487609, 'BSON', BSON, false, true), 'JS_INT_MAX')) : J$._())) {
                                    J$.P(487665, J$.R(487625, 'buffer', buffer, false, false), J$.B(65442, '-', index = J$.W(487641, 'index', J$.B(65434, '+', J$.U(65426, '+', J$.R(487633, 'index', index, false, false)), 1), index, false, false), 1), J$.G(487657, J$.R(487649, 'BSON', BSON, false, true), 'BSON_DATA_NUMBER'));
                                    numberOfWrittenBytes = J$.W(487761, 'numberOfWrittenBytes', J$.C(27456, J$.U(65450, '!', J$.R(487673, 'isArray', isArray, false, false))) ? J$.M(487713, J$.R(487681, 'buffer', buffer, false, false), 'write', false)(J$.R(487689, 'key', key, false, false), J$.R(487697, 'index', index, false, false), J$.T(487705, 'utf8', 21, false)) : J$.M(487753, J$.R(487721, 'buffer', buffer, false, false), 'write', false)(J$.R(487729, 'key', key, false, false), J$.R(487737, 'index', index, false, false), J$.T(487745, 'ascii', 21, false)), numberOfWrittenBytes, false, false);
                                    index = J$.W(487785, 'index', J$.B(65458, '+', J$.R(487769, 'index', index, false, false), J$.R(487777, 'numberOfWrittenBytes', numberOfWrittenBytes, false, false)), index, false, false);
                                    J$.P(487825, J$.R(487793, 'buffer', buffer, false, false), J$.B(65482, '-', index = J$.W(487809, 'index', J$.B(65474, '+', J$.U(65466, '+', J$.R(487801, 'index', index, false, false)), 1), index, false, false), 1), J$.T(487817, 0, 22, false));
                                    J$.F(487889, J$.R(487833, 'writeIEEE754', writeIEEE754, false, true), false)(J$.R(487841, 'buffer', buffer, false, false), J$.R(487849, 'value', value, false, false), J$.R(487857, 'index', index, false, false), J$.T(487865, 'little', 21, false), J$.T(487873, 52, 22, false), J$.T(487881, 8, 22, false));
                                    index = J$.W(487913, 'index', J$.B(65490, '+', J$.R(487897, 'index', index, false, false), J$.T(487905, 8, 22, false)), index, false, false);
                                } else {
                                    J$.P(487961, J$.R(487921, 'buffer', buffer, false, false), J$.B(65514, '-', index = J$.W(487937, 'index', J$.B(65506, '+', J$.U(65498, '+', J$.R(487929, 'index', index, false, false)), 1), index, false, false), 1), J$.G(487953, J$.R(487945, 'BSON', BSON, false, true), 'BSON_DATA_LONG'));
                                    numberOfWrittenBytes = J$.W(488057, 'numberOfWrittenBytes', J$.C(27464, J$.U(65522, '!', J$.R(487969, 'isArray', isArray, false, false))) ? J$.M(488009, J$.R(487977, 'buffer', buffer, false, false), 'write', false)(J$.R(487985, 'key', key, false, false), J$.R(487993, 'index', index, false, false), J$.T(488001, 'utf8', 21, false)) : J$.M(488049, J$.R(488017, 'buffer', buffer, false, false), 'write', false)(J$.R(488025, 'key', key, false, false), J$.R(488033, 'index', index, false, false), J$.T(488041, 'ascii', 21, false)), numberOfWrittenBytes, false, false);
                                    index = J$.W(488081, 'index', J$.B(65530, '+', J$.R(488065, 'index', index, false, false), J$.R(488073, 'numberOfWrittenBytes', numberOfWrittenBytes, false, false)), index, false, false);
                                    J$.P(488121, J$.R(488089, 'buffer', buffer, false, false), J$.B(65554, '-', index = J$.W(488105, 'index', J$.B(65546, '+', J$.U(65538, '+', J$.R(488097, 'index', index, false, false)), 1), index, false, false), 1), J$.T(488113, 0, 22, false));
                                    var longVal = J$.W(488153, 'longVal', J$.M(488145, J$.R(488129, 'Long', Long, false, true), 'fromNumber', false)(J$.R(488137, 'value', value, false, false)), longVal, false, false);
                                    var lowBits = J$.W(488177, 'lowBits', J$.M(488169, J$.R(488161, 'longVal', longVal, false, false), 'getLowBits', false)(), lowBits, false, false);
                                    var highBits = J$.W(488201, 'highBits', J$.M(488193, J$.R(488185, 'longVal', longVal, false, false), 'getHighBits', false)(), highBits, false, false);
                                    J$.P(488249, J$.R(488209, 'buffer', buffer, false, false), J$.B(65578, '-', index = J$.W(488225, 'index', J$.B(65570, '+', J$.U(65562, '+', J$.R(488217, 'index', index, false, false)), 1), index, false, false), 1), J$.B(65586, '&', J$.R(488233, 'lowBits', lowBits, false, false), J$.T(488241, 255, 22, false)));
                                    J$.P(488305, J$.R(488257, 'buffer', buffer, false, false), J$.B(65610, '-', index = J$.W(488273, 'index', J$.B(65602, '+', J$.U(65594, '+', J$.R(488265, 'index', index, false, false)), 1), index, false, false), 1), J$.B(65626, '&', J$.B(65618, '>>', J$.R(488281, 'lowBits', lowBits, false, false), J$.T(488289, 8, 22, false)), J$.T(488297, 255, 22, false)));
                                    J$.P(488361, J$.R(488313, 'buffer', buffer, false, false), J$.B(65650, '-', index = J$.W(488329, 'index', J$.B(65642, '+', J$.U(65634, '+', J$.R(488321, 'index', index, false, false)), 1), index, false, false), 1), J$.B(65666, '&', J$.B(65658, '>>', J$.R(488337, 'lowBits', lowBits, false, false), J$.T(488345, 16, 22, false)), J$.T(488353, 255, 22, false)));
                                    J$.P(488417, J$.R(488369, 'buffer', buffer, false, false), J$.B(65690, '-', index = J$.W(488385, 'index', J$.B(65682, '+', J$.U(65674, '+', J$.R(488377, 'index', index, false, false)), 1), index, false, false), 1), J$.B(65706, '&', J$.B(65698, '>>', J$.R(488393, 'lowBits', lowBits, false, false), J$.T(488401, 24, 22, false)), J$.T(488409, 255, 22, false)));
                                    J$.P(488465, J$.R(488425, 'buffer', buffer, false, false), J$.B(65730, '-', index = J$.W(488441, 'index', J$.B(65722, '+', J$.U(65714, '+', J$.R(488433, 'index', index, false, false)), 1), index, false, false), 1), J$.B(65738, '&', J$.R(488449, 'highBits', highBits, false, false), J$.T(488457, 255, 22, false)));
                                    J$.P(488521, J$.R(488473, 'buffer', buffer, false, false), J$.B(65762, '-', index = J$.W(488489, 'index', J$.B(65754, '+', J$.U(65746, '+', J$.R(488481, 'index', index, false, false)), 1), index, false, false), 1), J$.B(65778, '&', J$.B(65770, '>>', J$.R(488497, 'highBits', highBits, false, false), J$.T(488505, 8, 22, false)), J$.T(488513, 255, 22, false)));
                                    J$.P(488577, J$.R(488529, 'buffer', buffer, false, false), J$.B(65802, '-', index = J$.W(488545, 'index', J$.B(65794, '+', J$.U(65786, '+', J$.R(488537, 'index', index, false, false)), 1), index, false, false), 1), J$.B(65818, '&', J$.B(65810, '>>', J$.R(488553, 'highBits', highBits, false, false), J$.T(488561, 16, 22, false)), J$.T(488569, 255, 22, false)));
                                    J$.P(488633, J$.R(488585, 'buffer', buffer, false, false), J$.B(65842, '-', index = J$.W(488601, 'index', J$.B(65834, '+', J$.U(65826, '+', J$.R(488593, 'index', index, false, false)), 1), index, false, false), 1), J$.B(65858, '&', J$.B(65850, '>>', J$.R(488609, 'highBits', highBits, false, false), J$.T(488617, 24, 22, false)), J$.T(488625, 255, 22, false)));
                                }
                            } else {
                                J$.P(488681, J$.R(488641, 'buffer', buffer, false, false), J$.B(65882, '-', index = J$.W(488657, 'index', J$.B(65874, '+', J$.U(65866, '+', J$.R(488649, 'index', index, false, false)), 1), index, false, false), 1), J$.G(488673, J$.R(488665, 'BSON', BSON, false, true), 'BSON_DATA_NUMBER'));
                                numberOfWrittenBytes = J$.W(488777, 'numberOfWrittenBytes', J$.C(27488, J$.U(65890, '!', J$.R(488689, 'isArray', isArray, false, false))) ? J$.M(488729, J$.R(488697, 'buffer', buffer, false, false), 'write', false)(J$.R(488705, 'key', key, false, false), J$.R(488713, 'index', index, false, false), J$.T(488721, 'utf8', 21, false)) : J$.M(488769, J$.R(488737, 'buffer', buffer, false, false), 'write', false)(J$.R(488745, 'key', key, false, false), J$.R(488753, 'index', index, false, false), J$.T(488761, 'ascii', 21, false)), numberOfWrittenBytes, false, false);
                                index = J$.W(488801, 'index', J$.B(65898, '+', J$.R(488785, 'index', index, false, false), J$.R(488793, 'numberOfWrittenBytes', numberOfWrittenBytes, false, false)), index, false, false);
                                J$.P(488841, J$.R(488809, 'buffer', buffer, false, false), J$.B(65922, '-', index = J$.W(488825, 'index', J$.B(65914, '+', J$.U(65906, '+', J$.R(488817, 'index', index, false, false)), 1), index, false, false), 1), J$.T(488833, 0, 22, false));
                                J$.F(488905, J$.R(488849, 'writeIEEE754', writeIEEE754, false, true), false)(J$.R(488857, 'buffer', buffer, false, false), J$.R(488865, 'value', value, false, false), J$.R(488873, 'index', index, false, false), J$.T(488881, 'little', 21, false), J$.T(488889, 52, 22, false), J$.T(488897, 8, 22, false));
                                index = J$.W(488929, 'index', J$.B(65930, '+', J$.R(488913, 'index', index, false, false), J$.T(488921, 8, 22, false)), index, false, false);
                            }
                            return J$.Rt(488945, J$.R(488937, 'index', index, false, false));
                        } catch (J$e) {
                            J$.Ex(510921, J$e);
                        } finally {
                            if (J$.Fr(510929))
                                continue jalangiLabel6;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false), serializeNumber, false, true);
            var serializeNull = J$.W(489353, 'serializeNull', J$.T(489345, function serializeNull(buffer, key, value, index, isArray) {
                jalangiLabel7:
                    while (true) {
                        try {
                            J$.Fe(489281, arguments.callee, this, arguments);
                            arguments = J$.N(489289, 'arguments', arguments, true, false, false);
                            buffer = J$.N(489297, 'buffer', buffer, true, false, false);
                            key = J$.N(489305, 'key', key, true, false, false);
                            value = J$.N(489313, 'value', value, true, false, false);
                            index = J$.N(489321, 'index', index, true, false, false);
                            isArray = J$.N(489329, 'isArray', isArray, true, false, false);
                            J$.N(489337, 'numberOfWrittenBytes', numberOfWrittenBytes, false, false, false);
                            J$.P(489097, J$.R(489057, 'buffer', buffer, false, false), J$.B(65954, '-', index = J$.W(489073, 'index', J$.B(65946, '+', J$.U(65938, '+', J$.R(489065, 'index', index, false, false)), 1), index, false, false), 1), J$.G(489089, J$.R(489081, 'BSON', BSON, false, true), 'BSON_DATA_NULL'));
                            var numberOfWrittenBytes = J$.W(489193, 'numberOfWrittenBytes', J$.C(27504, J$.U(65962, '!', J$.R(489105, 'isArray', isArray, false, false))) ? J$.M(489145, J$.R(489113, 'buffer', buffer, false, false), 'write', false)(J$.R(489121, 'key', key, false, false), J$.R(489129, 'index', index, false, false), J$.T(489137, 'utf8', 21, false)) : J$.M(489185, J$.R(489153, 'buffer', buffer, false, false), 'write', false)(J$.R(489161, 'key', key, false, false), J$.R(489169, 'index', index, false, false), J$.T(489177, 'ascii', 21, false)), numberOfWrittenBytes, false, false);
                            index = J$.W(489217, 'index', J$.B(65970, '+', J$.R(489201, 'index', index, false, false), J$.R(489209, 'numberOfWrittenBytes', numberOfWrittenBytes, false, false)), index, false, false);
                            J$.P(489257, J$.R(489225, 'buffer', buffer, false, false), J$.B(65994, '-', index = J$.W(489241, 'index', J$.B(65986, '+', J$.U(65978, '+', J$.R(489233, 'index', index, false, false)), 1), index, false, false), 1), J$.T(489249, 0, 22, false));
                            return J$.Rt(489273, J$.R(489265, 'index', index, false, false));
                        } catch (J$e) {
                            J$.Ex(510937, J$e);
                        } finally {
                            if (J$.Fr(510945))
                                continue jalangiLabel7;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false), serializeNull, false, true);
            var serializeBoolean = J$.W(489713, 'serializeBoolean', J$.T(489705, function serializeBoolean(buffer, key, value, index, isArray) {
                jalangiLabel8:
                    while (true) {
                        try {
                            J$.Fe(489641, arguments.callee, this, arguments);
                            arguments = J$.N(489649, 'arguments', arguments, true, false, false);
                            buffer = J$.N(489657, 'buffer', buffer, true, false, false);
                            key = J$.N(489665, 'key', key, true, false, false);
                            value = J$.N(489673, 'value', value, true, false, false);
                            index = J$.N(489681, 'index', index, true, false, false);
                            isArray = J$.N(489689, 'isArray', isArray, true, false, false);
                            J$.N(489697, 'numberOfWrittenBytes', numberOfWrittenBytes, false, false, false);
                            J$.P(489401, J$.R(489361, 'buffer', buffer, false, false), J$.B(66018, '-', index = J$.W(489377, 'index', J$.B(66010, '+', J$.U(66002, '+', J$.R(489369, 'index', index, false, false)), 1), index, false, false), 1), J$.G(489393, J$.R(489385, 'BSON', BSON, false, true), 'BSON_DATA_BOOLEAN'));
                            var numberOfWrittenBytes = J$.W(489497, 'numberOfWrittenBytes', J$.C(27512, J$.U(66026, '!', J$.R(489409, 'isArray', isArray, false, false))) ? J$.M(489449, J$.R(489417, 'buffer', buffer, false, false), 'write', false)(J$.R(489425, 'key', key, false, false), J$.R(489433, 'index', index, false, false), J$.T(489441, 'utf8', 21, false)) : J$.M(489489, J$.R(489457, 'buffer', buffer, false, false), 'write', false)(J$.R(489465, 'key', key, false, false), J$.R(489473, 'index', index, false, false), J$.T(489481, 'ascii', 21, false)), numberOfWrittenBytes, false, false);
                            index = J$.W(489521, 'index', J$.B(66034, '+', J$.R(489505, 'index', index, false, false), J$.R(489513, 'numberOfWrittenBytes', numberOfWrittenBytes, false, false)), index, false, false);
                            J$.P(489561, J$.R(489529, 'buffer', buffer, false, false), J$.B(66058, '-', index = J$.W(489545, 'index', J$.B(66050, '+', J$.U(66042, '+', J$.R(489537, 'index', index, false, false)), 1), index, false, false), 1), J$.T(489553, 0, 22, false));
                            J$.P(489617, J$.R(489569, 'buffer', buffer, false, false), J$.B(66082, '-', index = J$.W(489585, 'index', J$.B(66074, '+', J$.U(66066, '+', J$.R(489577, 'index', index, false, false)), 1), index, false, false), 1), J$.C(27520, J$.R(489593, 'value', value, false, false)) ? J$.T(489601, 1, 22, false) : J$.T(489609, 0, 22, false));
                            return J$.Rt(489633, J$.R(489625, 'index', index, false, false));
                        } catch (J$e) {
                            J$.Ex(510953, J$e);
                        } finally {
                            if (J$.Fr(510961))
                                continue jalangiLabel8;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false), serializeBoolean, false, true);
            var serializeDate = J$.W(490561, 'serializeDate', J$.T(490553, function serializeDate(buffer, key, value, index, isArray) {
                jalangiLabel9:
                    while (true) {
                        try {
                            J$.Fe(490465, arguments.callee, this, arguments);
                            arguments = J$.N(490473, 'arguments', arguments, true, false, false);
                            buffer = J$.N(490481, 'buffer', buffer, true, false, false);
                            key = J$.N(490489, 'key', key, true, false, false);
                            value = J$.N(490497, 'value', value, true, false, false);
                            index = J$.N(490505, 'index', index, true, false, false);
                            isArray = J$.N(490513, 'isArray', isArray, true, false, false);
                            J$.N(490521, 'numberOfWrittenBytes', numberOfWrittenBytes, false, false, false);
                            J$.N(490529, 'dateInMilis', dateInMilis, false, false, false);
                            J$.N(490537, 'lowBits', lowBits, false, false, false);
                            J$.N(490545, 'highBits', highBits, false, false, false);
                            J$.P(489761, J$.R(489721, 'buffer', buffer, false, false), J$.B(66106, '-', index = J$.W(489737, 'index', J$.B(66098, '+', J$.U(66090, '+', J$.R(489729, 'index', index, false, false)), 1), index, false, false), 1), J$.G(489753, J$.R(489745, 'BSON', BSON, false, true), 'BSON_DATA_DATE'));
                            var numberOfWrittenBytes = J$.W(489857, 'numberOfWrittenBytes', J$.C(27528, J$.U(66114, '!', J$.R(489769, 'isArray', isArray, false, false))) ? J$.M(489809, J$.R(489777, 'buffer', buffer, false, false), 'write', false)(J$.R(489785, 'key', key, false, false), J$.R(489793, 'index', index, false, false), J$.T(489801, 'utf8', 21, false)) : J$.M(489849, J$.R(489817, 'buffer', buffer, false, false), 'write', false)(J$.R(489825, 'key', key, false, false), J$.R(489833, 'index', index, false, false), J$.T(489841, 'ascii', 21, false)), numberOfWrittenBytes, false, false);
                            index = J$.W(489881, 'index', J$.B(66122, '+', J$.R(489865, 'index', index, false, false), J$.R(489873, 'numberOfWrittenBytes', numberOfWrittenBytes, false, false)), index, false, false);
                            J$.P(489921, J$.R(489889, 'buffer', buffer, false, false), J$.B(66146, '-', index = J$.W(489905, 'index', J$.B(66138, '+', J$.U(66130, '+', J$.R(489897, 'index', index, false, false)), 1), index, false, false), 1), J$.T(489913, 0, 22, false));
                            var dateInMilis = J$.W(489961, 'dateInMilis', J$.M(489953, J$.R(489929, 'Long', Long, false, true), 'fromNumber', false)(J$.M(489945, J$.R(489937, 'value', value, false, false), 'getTime', false)()), dateInMilis, false, false);
                            var lowBits = J$.W(489985, 'lowBits', J$.M(489977, J$.R(489969, 'dateInMilis', dateInMilis, false, false), 'getLowBits', false)(), lowBits, false, false);
                            var highBits = J$.W(490009, 'highBits', J$.M(490001, J$.R(489993, 'dateInMilis', dateInMilis, false, false), 'getHighBits', false)(), highBits, false, false);
                            J$.P(490057, J$.R(490017, 'buffer', buffer, false, false), J$.B(66170, '-', index = J$.W(490033, 'index', J$.B(66162, '+', J$.U(66154, '+', J$.R(490025, 'index', index, false, false)), 1), index, false, false), 1), J$.B(66178, '&', J$.R(490041, 'lowBits', lowBits, false, false), J$.T(490049, 255, 22, false)));
                            J$.P(490113, J$.R(490065, 'buffer', buffer, false, false), J$.B(66202, '-', index = J$.W(490081, 'index', J$.B(66194, '+', J$.U(66186, '+', J$.R(490073, 'index', index, false, false)), 1), index, false, false), 1), J$.B(66218, '&', J$.B(66210, '>>', J$.R(490089, 'lowBits', lowBits, false, false), J$.T(490097, 8, 22, false)), J$.T(490105, 255, 22, false)));
                            J$.P(490169, J$.R(490121, 'buffer', buffer, false, false), J$.B(66242, '-', index = J$.W(490137, 'index', J$.B(66234, '+', J$.U(66226, '+', J$.R(490129, 'index', index, false, false)), 1), index, false, false), 1), J$.B(66258, '&', J$.B(66250, '>>', J$.R(490145, 'lowBits', lowBits, false, false), J$.T(490153, 16, 22, false)), J$.T(490161, 255, 22, false)));
                            J$.P(490225, J$.R(490177, 'buffer', buffer, false, false), J$.B(66282, '-', index = J$.W(490193, 'index', J$.B(66274, '+', J$.U(66266, '+', J$.R(490185, 'index', index, false, false)), 1), index, false, false), 1), J$.B(66298, '&', J$.B(66290, '>>', J$.R(490201, 'lowBits', lowBits, false, false), J$.T(490209, 24, 22, false)), J$.T(490217, 255, 22, false)));
                            J$.P(490273, J$.R(490233, 'buffer', buffer, false, false), J$.B(66322, '-', index = J$.W(490249, 'index', J$.B(66314, '+', J$.U(66306, '+', J$.R(490241, 'index', index, false, false)), 1), index, false, false), 1), J$.B(66330, '&', J$.R(490257, 'highBits', highBits, false, false), J$.T(490265, 255, 22, false)));
                            J$.P(490329, J$.R(490281, 'buffer', buffer, false, false), J$.B(66354, '-', index = J$.W(490297, 'index', J$.B(66346, '+', J$.U(66338, '+', J$.R(490289, 'index', index, false, false)), 1), index, false, false), 1), J$.B(66370, '&', J$.B(66362, '>>', J$.R(490305, 'highBits', highBits, false, false), J$.T(490313, 8, 22, false)), J$.T(490321, 255, 22, false)));
                            J$.P(490385, J$.R(490337, 'buffer', buffer, false, false), J$.B(66394, '-', index = J$.W(490353, 'index', J$.B(66386, '+', J$.U(66378, '+', J$.R(490345, 'index', index, false, false)), 1), index, false, false), 1), J$.B(66410, '&', J$.B(66402, '>>', J$.R(490361, 'highBits', highBits, false, false), J$.T(490369, 16, 22, false)), J$.T(490377, 255, 22, false)));
                            J$.P(490441, J$.R(490393, 'buffer', buffer, false, false), J$.B(66434, '-', index = J$.W(490409, 'index', J$.B(66426, '+', J$.U(66418, '+', J$.R(490401, 'index', index, false, false)), 1), index, false, false), 1), J$.B(66450, '&', J$.B(66442, '>>', J$.R(490417, 'highBits', highBits, false, false), J$.T(490425, 24, 22, false)), J$.T(490433, 255, 22, false)));
                            return J$.Rt(490457, J$.R(490449, 'index', index, false, false));
                        } catch (J$e) {
                            J$.Ex(510969, J$e);
                        } finally {
                            if (J$.Fr(510977))
                                continue jalangiLabel9;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false), serializeDate, false, true);
            var serializeRegExp = J$.W(491281, 'serializeRegExp', J$.T(491273, function serializeRegExp(buffer, key, value, index, isArray) {
                jalangiLabel10:
                    while (true) {
                        try {
                            J$.Fe(491209, arguments.callee, this, arguments);
                            arguments = J$.N(491217, 'arguments', arguments, true, false, false);
                            buffer = J$.N(491225, 'buffer', buffer, true, false, false);
                            key = J$.N(491233, 'key', key, true, false, false);
                            value = J$.N(491241, 'value', value, true, false, false);
                            index = J$.N(491249, 'index', index, true, false, false);
                            isArray = J$.N(491257, 'isArray', isArray, true, false, false);
                            J$.N(491265, 'numberOfWrittenBytes', numberOfWrittenBytes, false, false, false);
                            J$.P(490609, J$.R(490569, 'buffer', buffer, false, false), J$.B(66474, '-', index = J$.W(490585, 'index', J$.B(66466, '+', J$.U(66458, '+', J$.R(490577, 'index', index, false, false)), 1), index, false, false), 1), J$.G(490601, J$.R(490593, 'BSON', BSON, false, true), 'BSON_DATA_REGEXP'));
                            var numberOfWrittenBytes = J$.W(490705, 'numberOfWrittenBytes', J$.C(27536, J$.U(66482, '!', J$.R(490617, 'isArray', isArray, false, false))) ? J$.M(490657, J$.R(490625, 'buffer', buffer, false, false), 'write', false)(J$.R(490633, 'key', key, false, false), J$.R(490641, 'index', index, false, false), J$.T(490649, 'utf8', 21, false)) : J$.M(490697, J$.R(490665, 'buffer', buffer, false, false), 'write', false)(J$.R(490673, 'key', key, false, false), J$.R(490681, 'index', index, false, false), J$.T(490689, 'ascii', 21, false)), numberOfWrittenBytes, false, false);
                            index = J$.W(490729, 'index', J$.B(66490, '+', J$.R(490713, 'index', index, false, false), J$.R(490721, 'numberOfWrittenBytes', numberOfWrittenBytes, false, false)), index, false, false);
                            J$.P(490769, J$.R(490737, 'buffer', buffer, false, false), J$.B(66514, '-', index = J$.W(490753, 'index', J$.B(66506, '+', J$.U(66498, '+', J$.R(490745, 'index', index, false, false)), 1), index, false, false), 1), J$.T(490761, 0, 22, false));
                            if (J$.C(27552, J$.C(27544, J$.G(490785, J$.R(490777, 'value', value, false, false), 'source')) ? J$.B(66522, '!=', J$.M(490817, J$.G(490801, J$.R(490793, 'value', value, false, false), 'source'), 'match', false)(J$.R(490809, 'regexp', regexp, false, true)), J$.T(490825, null, 25, false)) : J$._())) {
                                throw J$.F(490873, J$.I(typeof Error === 'undefined' ? Error = J$.R(490833, 'Error', undefined, true, true) : Error = J$.R(490833, 'Error', Error, true, true)), false)(J$.B(66538, '+', J$.B(66530, '+', J$.T(490841, 'value ', 21, false), J$.G(490857, J$.R(490849, 'value', value, false, false), 'source')), J$.T(490865, ' must not contain null bytes', 21, false)));
                            }
                            index = J$.W(490937, 'index', J$.B(66546, '+', J$.R(490881, 'index', index, false, false), J$.M(490929, J$.R(490889, 'buffer', buffer, false, false), 'write', false)(J$.G(490905, J$.R(490897, 'value', value, false, false), 'source'), J$.R(490913, 'index', index, false, false), J$.T(490921, 'utf8', 21, false))), index, false, false);
                            J$.P(490977, J$.R(490945, 'buffer', buffer, false, false), J$.B(66570, '-', index = J$.W(490961, 'index', J$.B(66562, '+', J$.U(66554, '+', J$.R(490953, 'index', index, false, false)), 1), index, false, false), 1), J$.T(490969, 0, 22, false));
                            if (J$.C(27560, J$.G(490993, J$.R(490985, 'value', value, false, false), 'global')))
                                J$.P(491033, J$.R(491001, 'buffer', buffer, false, false), J$.B(66594, '-', index = J$.W(491017, 'index', J$.B(66586, '+', J$.U(66578, '+', J$.R(491009, 'index', index, false, false)), 1), index, false, false), 1), J$.T(491025, 115, 22, false));
                            if (J$.C(27568, J$.G(491049, J$.R(491041, 'value', value, false, false), 'ignoreCase')))
                                J$.P(491089, J$.R(491057, 'buffer', buffer, false, false), J$.B(66618, '-', index = J$.W(491073, 'index', J$.B(66610, '+', J$.U(66602, '+', J$.R(491065, 'index', index, false, false)), 1), index, false, false), 1), J$.T(491081, 105, 22, false));
                            if (J$.C(27576, J$.G(491105, J$.R(491097, 'value', value, false, false), 'multiline')))
                                J$.P(491145, J$.R(491113, 'buffer', buffer, false, false), J$.B(66642, '-', index = J$.W(491129, 'index', J$.B(66634, '+', J$.U(66626, '+', J$.R(491121, 'index', index, false, false)), 1), index, false, false), 1), J$.T(491137, 109, 22, false));
                            J$.P(491185, J$.R(491153, 'buffer', buffer, false, false), J$.B(66666, '-', index = J$.W(491169, 'index', J$.B(66658, '+', J$.U(66650, '+', J$.R(491161, 'index', index, false, false)), 1), index, false, false), 1), J$.T(491177, 0, 22, false));
                            return J$.Rt(491201, J$.R(491193, 'index', index, false, false));
                        } catch (J$e) {
                            J$.Ex(510985, J$e);
                        } finally {
                            if (J$.Fr(510993))
                                continue jalangiLabel10;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false), serializeRegExp, false, true);
            var serializeBSONRegExp = J$.W(491921, 'serializeBSONRegExp', J$.T(491913, function serializeBSONRegExp(buffer, key, value, index, isArray) {
                jalangiLabel11:
                    while (true) {
                        try {
                            J$.Fe(491849, arguments.callee, this, arguments);
                            arguments = J$.N(491857, 'arguments', arguments, true, false, false);
                            buffer = J$.N(491865, 'buffer', buffer, true, false, false);
                            key = J$.N(491873, 'key', key, true, false, false);
                            value = J$.N(491881, 'value', value, true, false, false);
                            index = J$.N(491889, 'index', index, true, false, false);
                            isArray = J$.N(491897, 'isArray', isArray, true, false, false);
                            J$.N(491905, 'numberOfWrittenBytes', numberOfWrittenBytes, false, false, false);
                            J$.P(491329, J$.R(491289, 'buffer', buffer, false, false), J$.B(66690, '-', index = J$.W(491305, 'index', J$.B(66682, '+', J$.U(66674, '+', J$.R(491297, 'index', index, false, false)), 1), index, false, false), 1), J$.G(491321, J$.R(491313, 'BSON', BSON, false, true), 'BSON_DATA_REGEXP'));
                            var numberOfWrittenBytes = J$.W(491425, 'numberOfWrittenBytes', J$.C(27584, J$.U(66698, '!', J$.R(491337, 'isArray', isArray, false, false))) ? J$.M(491377, J$.R(491345, 'buffer', buffer, false, false), 'write', false)(J$.R(491353, 'key', key, false, false), J$.R(491361, 'index', index, false, false), J$.T(491369, 'utf8', 21, false)) : J$.M(491417, J$.R(491385, 'buffer', buffer, false, false), 'write', false)(J$.R(491393, 'key', key, false, false), J$.R(491401, 'index', index, false, false), J$.T(491409, 'ascii', 21, false)), numberOfWrittenBytes, false, false);
                            index = J$.W(491449, 'index', J$.B(66706, '+', J$.R(491433, 'index', index, false, false), J$.R(491441, 'numberOfWrittenBytes', numberOfWrittenBytes, false, false)), index, false, false);
                            J$.P(491489, J$.R(491457, 'buffer', buffer, false, false), J$.B(66730, '-', index = J$.W(491473, 'index', J$.B(66722, '+', J$.U(66714, '+', J$.R(491465, 'index', index, false, false)), 1), index, false, false), 1), J$.T(491481, 0, 22, false));
                            if (J$.C(27592, J$.B(66738, '!=', J$.M(491521, J$.G(491505, J$.R(491497, 'value', value, false, false), 'pattern'), 'match', false)(J$.R(491513, 'regexp', regexp, false, true)), J$.T(491529, null, 25, false)))) {
                                throw J$.F(491577, J$.I(typeof Error === 'undefined' ? Error = J$.R(491537, 'Error', undefined, true, true) : Error = J$.R(491537, 'Error', Error, true, true)), false)(J$.B(66754, '+', J$.B(66746, '+', J$.T(491545, 'pattern ', 21, false), J$.G(491561, J$.R(491553, 'value', value, false, false), 'pattern')), J$.T(491569, ' must not contain null bytes', 21, false)));
                            }
                            index = J$.W(491641, 'index', J$.B(66762, '+', J$.R(491585, 'index', index, false, false), J$.M(491633, J$.R(491593, 'buffer', buffer, false, false), 'write', false)(J$.G(491609, J$.R(491601, 'value', value, false, false), 'pattern'), J$.R(491617, 'index', index, false, false), J$.T(491625, 'utf8', 21, false))), index, false, false);
                            J$.P(491681, J$.R(491649, 'buffer', buffer, false, false), J$.B(66786, '-', index = J$.W(491665, 'index', J$.B(66778, '+', J$.U(66770, '+', J$.R(491657, 'index', index, false, false)), 1), index, false, false), 1), J$.T(491673, 0, 22, false));
                            index = J$.W(491785, 'index', J$.B(66794, '+', J$.R(491689, 'index', index, false, false), J$.M(491777, J$.R(491697, 'buffer', buffer, false, false), 'write', false)(J$.M(491753, J$.M(491737, J$.M(491729, J$.G(491713, J$.R(491705, 'value', value, false, false), 'options'), 'split', false)(J$.T(491721, '', 21, false)), 'sort', false)(), 'join', false)(J$.T(491745, '', 21, false)), J$.R(491761, 'index', index, false, false), J$.T(491769, 'utf8', 21, false))), index, false, false);
                            J$.P(491825, J$.R(491793, 'buffer', buffer, false, false), J$.B(66818, '-', index = J$.W(491809, 'index', J$.B(66810, '+', J$.U(66802, '+', J$.R(491801, 'index', index, false, false)), 1), index, false, false), 1), J$.T(491817, 0, 22, false));
                            return J$.Rt(491841, J$.R(491833, 'index', index, false, false));
                        } catch (J$e) {
                            J$.Ex(511001, J$e);
                        } finally {
                            if (J$.Fr(511009))
                                continue jalangiLabel11;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false), serializeBSONRegExp, false, true);
            var serializeMinMax = J$.W(492361, 'serializeMinMax', J$.T(492353, function serializeMinMax(buffer, key, value, index, isArray) {
                jalangiLabel12:
                    while (true) {
                        try {
                            J$.Fe(492289, arguments.callee, this, arguments);
                            arguments = J$.N(492297, 'arguments', arguments, true, false, false);
                            buffer = J$.N(492305, 'buffer', buffer, true, false, false);
                            key = J$.N(492313, 'key', key, true, false, false);
                            value = J$.N(492321, 'value', value, true, false, false);
                            index = J$.N(492329, 'index', index, true, false, false);
                            isArray = J$.N(492337, 'isArray', isArray, true, false, false);
                            J$.N(492345, 'numberOfWrittenBytes', numberOfWrittenBytes, false, false, false);
                            if (J$.C(27608, J$.B(66826, '===', J$.R(491929, 'value', value, false, false), J$.T(491937, null, 25, false)))) {
                                J$.P(491985, J$.R(491945, 'buffer', buffer, false, false), J$.B(66850, '-', index = J$.W(491961, 'index', J$.B(66842, '+', J$.U(66834, '+', J$.R(491953, 'index', index, false, false)), 1), index, false, false), 1), J$.G(491977, J$.R(491969, 'BSON', BSON, false, true), 'BSON_DATA_NULL'));
                            } else if (J$.C(27600, J$.B(66858, '===', J$.G(492001, J$.R(491993, 'value', value, false, false), '_bsontype'), J$.T(492009, 'MinKey', 21, false)))) {
                                J$.P(492057, J$.R(492017, 'buffer', buffer, false, false), J$.B(66882, '-', index = J$.W(492033, 'index', J$.B(66874, '+', J$.U(66866, '+', J$.R(492025, 'index', index, false, false)), 1), index, false, false), 1), J$.G(492049, J$.R(492041, 'BSON', BSON, false, true), 'BSON_DATA_MIN_KEY'));
                            } else {
                                J$.P(492105, J$.R(492065, 'buffer', buffer, false, false), J$.B(66906, '-', index = J$.W(492081, 'index', J$.B(66898, '+', J$.U(66890, '+', J$.R(492073, 'index', index, false, false)), 1), index, false, false), 1), J$.G(492097, J$.R(492089, 'BSON', BSON, false, true), 'BSON_DATA_MAX_KEY'));
                            }
                            var numberOfWrittenBytes = J$.W(492201, 'numberOfWrittenBytes', J$.C(27616, J$.U(66914, '!', J$.R(492113, 'isArray', isArray, false, false))) ? J$.M(492153, J$.R(492121, 'buffer', buffer, false, false), 'write', false)(J$.R(492129, 'key', key, false, false), J$.R(492137, 'index', index, false, false), J$.T(492145, 'utf8', 21, false)) : J$.M(492193, J$.R(492161, 'buffer', buffer, false, false), 'write', false)(J$.R(492169, 'key', key, false, false), J$.R(492177, 'index', index, false, false), J$.T(492185, 'ascii', 21, false)), numberOfWrittenBytes, false, false);
                            index = J$.W(492225, 'index', J$.B(66922, '+', J$.R(492209, 'index', index, false, false), J$.R(492217, 'numberOfWrittenBytes', numberOfWrittenBytes, false, false)), index, false, false);
                            J$.P(492265, J$.R(492233, 'buffer', buffer, false, false), J$.B(66946, '-', index = J$.W(492249, 'index', J$.B(66938, '+', J$.U(66930, '+', J$.R(492241, 'index', index, false, false)), 1), index, false, false), 1), J$.T(492257, 0, 22, false));
                            return J$.Rt(492281, J$.R(492273, 'index', index, false, false));
                        } catch (J$e) {
                            J$.Ex(511017, J$e);
                        } finally {
                            if (J$.Fr(511025))
                                continue jalangiLabel12;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false), serializeMinMax, false, true);
            var serializeObjectId = J$.W(492897, 'serializeObjectId', J$.T(492889, function serializeObjectId(buffer, key, value, index, isArray) {
                jalangiLabel13:
                    while (true) {
                        try {
                            J$.Fe(492825, arguments.callee, this, arguments);
                            arguments = J$.N(492833, 'arguments', arguments, true, false, false);
                            buffer = J$.N(492841, 'buffer', buffer, true, false, false);
                            key = J$.N(492849, 'key', key, true, false, false);
                            value = J$.N(492857, 'value', value, true, false, false);
                            index = J$.N(492865, 'index', index, true, false, false);
                            isArray = J$.N(492873, 'isArray', isArray, true, false, false);
                            J$.N(492881, 'numberOfWrittenBytes', numberOfWrittenBytes, false, false, false);
                            J$.P(492409, J$.R(492369, 'buffer', buffer, false, false), J$.B(66970, '-', index = J$.W(492385, 'index', J$.B(66962, '+', J$.U(66954, '+', J$.R(492377, 'index', index, false, false)), 1), index, false, false), 1), J$.G(492401, J$.R(492393, 'BSON', BSON, false, true), 'BSON_DATA_OID'));
                            var numberOfWrittenBytes = J$.W(492505, 'numberOfWrittenBytes', J$.C(27624, J$.U(66978, '!', J$.R(492417, 'isArray', isArray, false, false))) ? J$.M(492457, J$.R(492425, 'buffer', buffer, false, false), 'write', false)(J$.R(492433, 'key', key, false, false), J$.R(492441, 'index', index, false, false), J$.T(492449, 'utf8', 21, false)) : J$.M(492497, J$.R(492465, 'buffer', buffer, false, false), 'write', false)(J$.R(492473, 'key', key, false, false), J$.R(492481, 'index', index, false, false), J$.T(492489, 'ascii', 21, false)), numberOfWrittenBytes, false, false);
                            index = J$.W(492529, 'index', J$.B(66986, '+', J$.R(492513, 'index', index, false, false), J$.R(492521, 'numberOfWrittenBytes', numberOfWrittenBytes, false, false)), index, false, false);
                            J$.P(492569, J$.R(492537, 'buffer', buffer, false, false), J$.B(67010, '-', index = J$.W(492553, 'index', J$.B(67002, '+', J$.U(66994, '+', J$.R(492545, 'index', index, false, false)), 1), index, false, false), 1), J$.T(492561, 0, 22, false));
                            if (J$.C(27648, J$.B(67026, '===', J$.U(67018, 'typeof', J$.G(492585, J$.R(492577, 'value', value, false, false), 'id')), J$.T(492593, 'string', 21, false)))) {
                                J$.M(492641, J$.R(492601, 'buffer', buffer, false, false), 'write', false)(J$.G(492617, J$.R(492609, 'value', value, false, false), 'id'), J$.R(492625, 'index', index, false, false), J$.T(492633, 'binary', 21, false));
                            } else if (J$.C(27640, J$.C(27632, J$.G(492657, J$.R(492649, 'value', value, false, false), 'id')) ? J$.G(492681, J$.G(492673, J$.R(492665, 'value', value, false, false), 'id'), 'copy') : J$._())) {
                                J$.M(492737, J$.G(492697, J$.R(492689, 'value', value, false, false), 'id'), 'copy', false)(J$.R(492705, 'buffer', buffer, false, false), J$.R(492713, 'index', index, false, false), J$.T(492721, 0, 22, false), J$.T(492729, 12, 22, false));
                            } else {
                                throw J$.F(492793, J$.I(typeof Error === 'undefined' ? Error = J$.R(492745, 'Error', undefined, true, true) : Error = J$.R(492745, 'Error', Error, true, true)), true)(J$.B(67042, '+', J$.B(67034, '+', J$.T(492753, 'object [', 21, false), J$.M(492777, J$.I(typeof JSON === 'undefined' ? JSON = J$.R(492761, 'JSON', undefined, true, true) : JSON = J$.R(492761, 'JSON', JSON, true, true)), 'stringify', false)(J$.R(492769, 'value', value, false, false))), J$.T(492785, '] is not a valid ObjectId', 21, false)));
                            }
                            return J$.Rt(492817, J$.B(67050, '+', J$.R(492801, 'index', index, false, false), J$.T(492809, 12, 22, false)));
                        } catch (J$e) {
                            J$.Ex(511033, J$e);
                        } finally {
                            if (J$.Fr(511041))
                                continue jalangiLabel13;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false), serializeObjectId, false, true);
            var serializeBuffer = J$.W(493569, 'serializeBuffer', J$.T(493561, function serializeBuffer(buffer, key, value, index, isArray) {
                jalangiLabel14:
                    while (true) {
                        try {
                            J$.Fe(493489, arguments.callee, this, arguments);
                            arguments = J$.N(493497, 'arguments', arguments, true, false, false);
                            buffer = J$.N(493505, 'buffer', buffer, true, false, false);
                            key = J$.N(493513, 'key', key, true, false, false);
                            value = J$.N(493521, 'value', value, true, false, false);
                            index = J$.N(493529, 'index', index, true, false, false);
                            isArray = J$.N(493537, 'isArray', isArray, true, false, false);
                            J$.N(493545, 'numberOfWrittenBytes', numberOfWrittenBytes, false, false, false);
                            J$.N(493553, 'size', size, false, false, false);
                            J$.P(492945, J$.R(492905, 'buffer', buffer, false, false), J$.B(67074, '-', index = J$.W(492921, 'index', J$.B(67066, '+', J$.U(67058, '+', J$.R(492913, 'index', index, false, false)), 1), index, false, false), 1), J$.G(492937, J$.R(492929, 'BSON', BSON, false, true), 'BSON_DATA_BINARY'));
                            var numberOfWrittenBytes = J$.W(493041, 'numberOfWrittenBytes', J$.C(27656, J$.U(67082, '!', J$.R(492953, 'isArray', isArray, false, false))) ? J$.M(492993, J$.R(492961, 'buffer', buffer, false, false), 'write', false)(J$.R(492969, 'key', key, false, false), J$.R(492977, 'index', index, false, false), J$.T(492985, 'utf8', 21, false)) : J$.M(493033, J$.R(493001, 'buffer', buffer, false, false), 'write', false)(J$.R(493009, 'key', key, false, false), J$.R(493017, 'index', index, false, false), J$.T(493025, 'ascii', 21, false)), numberOfWrittenBytes, false, false);
                            index = J$.W(493065, 'index', J$.B(67090, '+', J$.R(493049, 'index', index, false, false), J$.R(493057, 'numberOfWrittenBytes', numberOfWrittenBytes, false, false)), index, false, false);
                            J$.P(493105, J$.R(493073, 'buffer', buffer, false, false), J$.B(67114, '-', index = J$.W(493089, 'index', J$.B(67106, '+', J$.U(67098, '+', J$.R(493081, 'index', index, false, false)), 1), index, false, false), 1), J$.T(493097, 0, 22, false));
                            var size = J$.W(493129, 'size', J$.G(493121, J$.R(493113, 'value', value, false, false), 'length'), size, false, false);
                            J$.P(493177, J$.R(493137, 'buffer', buffer, false, false), J$.B(67138, '-', index = J$.W(493153, 'index', J$.B(67130, '+', J$.U(67122, '+', J$.R(493145, 'index', index, false, false)), 1), index, false, false), 1), J$.B(67146, '&', J$.R(493161, 'size', size, false, false), J$.T(493169, 255, 22, false)));
                            J$.P(493233, J$.R(493185, 'buffer', buffer, false, false), J$.B(67170, '-', index = J$.W(493201, 'index', J$.B(67162, '+', J$.U(67154, '+', J$.R(493193, 'index', index, false, false)), 1), index, false, false), 1), J$.B(67186, '&', J$.B(67178, '>>', J$.R(493209, 'size', size, false, false), J$.T(493217, 8, 22, false)), J$.T(493225, 255, 22, false)));
                            J$.P(493289, J$.R(493241, 'buffer', buffer, false, false), J$.B(67210, '-', index = J$.W(493257, 'index', J$.B(67202, '+', J$.U(67194, '+', J$.R(493249, 'index', index, false, false)), 1), index, false, false), 1), J$.B(67226, '&', J$.B(67218, '>>', J$.R(493265, 'size', size, false, false), J$.T(493273, 16, 22, false)), J$.T(493281, 255, 22, false)));
                            J$.P(493345, J$.R(493297, 'buffer', buffer, false, false), J$.B(67250, '-', index = J$.W(493313, 'index', J$.B(67242, '+', J$.U(67234, '+', J$.R(493305, 'index', index, false, false)), 1), index, false, false), 1), J$.B(67266, '&', J$.B(67258, '>>', J$.R(493321, 'size', size, false, false), J$.T(493329, 24, 22, false)), J$.T(493337, 255, 22, false)));
                            J$.P(493393, J$.R(493353, 'buffer', buffer, false, false), J$.B(67290, '-', index = J$.W(493369, 'index', J$.B(67282, '+', J$.U(67274, '+', J$.R(493361, 'index', index, false, false)), 1), index, false, false), 1), J$.G(493385, J$.R(493377, 'BSON', BSON, false, true), 'BSON_BINARY_SUBTYPE_DEFAULT'));
                            J$.M(493441, J$.R(493401, 'value', value, false, false), 'copy', false)(J$.R(493409, 'buffer', buffer, false, false), J$.R(493417, 'index', index, false, false), J$.T(493425, 0, 22, false), J$.R(493433, 'size', size, false, false));
                            index = J$.W(493465, 'index', J$.B(67298, '+', J$.R(493449, 'index', index, false, false), J$.R(493457, 'size', size, false, false)), index, false, false);
                            return J$.Rt(493481, J$.R(493473, 'index', index, false, false));
                        } catch (J$e) {
                            J$.Ex(511049, J$e);
                        } finally {
                            if (J$.Fr(511057))
                                continue jalangiLabel14;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false), serializeBuffer, false, true);
            var serializeObject = J$.W(494217, 'serializeObject', J$.T(494209, function serializeObject(buffer, key, value, index, checkKeys, depth, serializeFunctions, ignoreUndefined, isArray, path) {
                jalangiLabel15:
                    while (true) {
                        try {
                            J$.Fe(494089, arguments.callee, this, arguments);
                            arguments = J$.N(494097, 'arguments', arguments, true, false, false);
                            buffer = J$.N(494105, 'buffer', buffer, true, false, false);
                            key = J$.N(494113, 'key', key, true, false, false);
                            value = J$.N(494121, 'value', value, true, false, false);
                            index = J$.N(494129, 'index', index, true, false, false);
                            checkKeys = J$.N(494137, 'checkKeys', checkKeys, true, false, false);
                            depth = J$.N(494145, 'depth', depth, true, false, false);
                            serializeFunctions = J$.N(494153, 'serializeFunctions', serializeFunctions, true, false, false);
                            ignoreUndefined = J$.N(494161, 'ignoreUndefined', ignoreUndefined, true, false, false);
                            isArray = J$.N(494169, 'isArray', isArray, true, false, false);
                            path = J$.N(494177, 'path', path, true, false, false);
                            J$.N(494185, 'i', i, false, false, false);
                            J$.N(494193, 'numberOfWrittenBytes', numberOfWrittenBytes, false, false, false);
                            J$.N(494201, 'endIndex', endIndex, false, false, false);
                            for (var i = J$.W(493585, 'i', J$.T(493577, 0, 22, false), i, false, false); J$.C(27672, J$.B(67306, '<', J$.R(493593, 'i', i, false, false), J$.G(493609, J$.R(493601, 'path', path, false, false), 'length'))); J$.B(67330, '-', i = J$.W(493625, 'i', J$.B(67322, '+', J$.U(67314, '+', J$.R(493617, 'i', i, false, false)), 1), i, false, false), 1)) {
                                if (J$.C(27664, J$.B(67338, '===', J$.G(493649, J$.R(493633, 'path', path, false, false), J$.R(493641, 'i', i, false, false)), J$.R(493657, 'value', value, false, false))))
                                    throw J$.F(493681, J$.I(typeof Error === 'undefined' ? Error = J$.R(493665, 'Error', undefined, true, true) : Error = J$.R(493665, 'Error', Error, true, true)), true)(J$.T(493673, 'cyclic dependency detected', 21, false));
                            }
                            J$.M(493705, J$.R(493689, 'path', path, false, false), 'push', false)(J$.R(493697, 'value', value, false, false));
                            J$.P(493793, J$.R(493713, 'buffer', buffer, false, false), J$.B(67362, '-', index = J$.W(493729, 'index', J$.B(67354, '+', J$.U(67346, '+', J$.R(493721, 'index', index, false, false)), 1), index, false, false), 1), J$.C(27680, J$.M(493753, J$.I(typeof Array === 'undefined' ? Array = J$.R(493737, 'Array', undefined, true, true) : Array = J$.R(493737, 'Array', Array, true, true)), 'isArray', false)(J$.R(493745, 'value', value, false, false))) ? J$.G(493769, J$.R(493761, 'BSON', BSON, false, true), 'BSON_DATA_ARRAY') : J$.G(493785, J$.R(493777, 'BSON', BSON, false, true), 'BSON_DATA_OBJECT'));
                            var numberOfWrittenBytes = J$.W(493889, 'numberOfWrittenBytes', J$.C(27688, J$.U(67370, '!', J$.R(493801, 'isArray', isArray, false, false))) ? J$.M(493841, J$.R(493809, 'buffer', buffer, false, false), 'write', false)(J$.R(493817, 'key', key, false, false), J$.R(493825, 'index', index, false, false), J$.T(493833, 'utf8', 21, false)) : J$.M(493881, J$.R(493849, 'buffer', buffer, false, false), 'write', false)(J$.R(493857, 'key', key, false, false), J$.R(493865, 'index', index, false, false), J$.T(493873, 'ascii', 21, false)), numberOfWrittenBytes, false, false);
                            index = J$.W(493913, 'index', J$.B(67378, '+', J$.R(493897, 'index', index, false, false), J$.R(493905, 'numberOfWrittenBytes', numberOfWrittenBytes, false, false)), index, false, false);
                            J$.P(493953, J$.R(493921, 'buffer', buffer, false, false), J$.B(67402, '-', index = J$.W(493937, 'index', J$.B(67394, '+', J$.U(67386, '+', J$.R(493929, 'index', index, false, false)), 1), index, false, false), 1), J$.T(493945, 0, 22, false));
                            var endIndex = J$.W(494049, 'endIndex', J$.F(494041, J$.R(493961, 'serializeInto', serializeInto, false, true), false)(J$.R(493969, 'buffer', buffer, false, false), J$.R(493977, 'value', value, false, false), J$.R(493985, 'checkKeys', checkKeys, false, false), J$.R(493993, 'index', index, false, false), J$.B(67410, '+', J$.R(494001, 'depth', depth, false, false), J$.T(494009, 1, 22, false)), J$.R(494017, 'serializeFunctions', serializeFunctions, false, false), J$.R(494025, 'ignoreUndefined', ignoreUndefined, false, false), J$.R(494033, 'path', path, false, false)), endIndex, false, false);
                            J$.M(494065, J$.R(494057, 'path', path, false, false), 'pop', false)();
                            return J$.Rt(494081, J$.R(494073, 'endIndex', endIndex, false, false));
                        } catch (J$e) {
                            J$.Ex(511065, J$e);
                        } finally {
                            if (J$.Fr(511073))
                                continue jalangiLabel15;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false), serializeObject, false, true);
            var serializeDecimal128 = J$.W(494585, 'serializeDecimal128', J$.T(494577, function serializeDecimal128(buffer, key, value, index, isArray) {
                jalangiLabel16:
                    while (true) {
                        try {
                            J$.Fe(494513, arguments.callee, this, arguments);
                            arguments = J$.N(494521, 'arguments', arguments, true, false, false);
                            buffer = J$.N(494529, 'buffer', buffer, true, false, false);
                            key = J$.N(494537, 'key', key, true, false, false);
                            value = J$.N(494545, 'value', value, true, false, false);
                            index = J$.N(494553, 'index', index, true, false, false);
                            isArray = J$.N(494561, 'isArray', isArray, true, false, false);
                            J$.N(494569, 'numberOfWrittenBytes', numberOfWrittenBytes, false, false, false);
                            J$.P(494265, J$.R(494225, 'buffer', buffer, false, false), J$.B(67434, '-', index = J$.W(494241, 'index', J$.B(67426, '+', J$.U(67418, '+', J$.R(494233, 'index', index, false, false)), 1), index, false, false), 1), J$.G(494257, J$.R(494249, 'BSON', BSON, false, true), 'BSON_DATA_DECIMAL128'));
                            var numberOfWrittenBytes = J$.W(494361, 'numberOfWrittenBytes', J$.C(27696, J$.U(67442, '!', J$.R(494273, 'isArray', isArray, false, false))) ? J$.M(494313, J$.R(494281, 'buffer', buffer, false, false), 'write', false)(J$.R(494289, 'key', key, false, false), J$.R(494297, 'index', index, false, false), J$.T(494305, 'utf8', 21, false)) : J$.M(494353, J$.R(494321, 'buffer', buffer, false, false), 'write', false)(J$.R(494329, 'key', key, false, false), J$.R(494337, 'index', index, false, false), J$.T(494345, 'ascii', 21, false)), numberOfWrittenBytes, false, false);
                            index = J$.W(494385, 'index', J$.B(67450, '+', J$.R(494369, 'index', index, false, false), J$.R(494377, 'numberOfWrittenBytes', numberOfWrittenBytes, false, false)), index, false, false);
                            J$.P(494425, J$.R(494393, 'buffer', buffer, false, false), J$.B(67474, '-', index = J$.W(494409, 'index', J$.B(67466, '+', J$.U(67458, '+', J$.R(494401, 'index', index, false, false)), 1), index, false, false), 1), J$.T(494417, 0, 22, false));
                            J$.M(494481, J$.G(494441, J$.R(494433, 'value', value, false, false), 'bytes'), 'copy', false)(J$.R(494449, 'buffer', buffer, false, false), J$.R(494457, 'index', index, false, false), J$.T(494465, 0, 22, false), J$.T(494473, 16, 22, false));
                            return J$.Rt(494505, J$.B(67482, '+', J$.R(494489, 'index', index, false, false), J$.T(494497, 16, 22, false)));
                        } catch (J$e) {
                            J$.Ex(511081, J$e);
                        } finally {
                            if (J$.Fr(511089))
                                continue jalangiLabel16;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false), serializeDecimal128, false, true);
            var serializeLong = J$.W(495425, 'serializeLong', J$.T(495417, function serializeLong(buffer, key, value, index, isArray) {
                jalangiLabel17:
                    while (true) {
                        try {
                            J$.Fe(495337, arguments.callee, this, arguments);
                            arguments = J$.N(495345, 'arguments', arguments, true, false, false);
                            buffer = J$.N(495353, 'buffer', buffer, true, false, false);
                            key = J$.N(495361, 'key', key, true, false, false);
                            value = J$.N(495369, 'value', value, true, false, false);
                            index = J$.N(495377, 'index', index, true, false, false);
                            isArray = J$.N(495385, 'isArray', isArray, true, false, false);
                            J$.N(495393, 'numberOfWrittenBytes', numberOfWrittenBytes, false, false, false);
                            J$.N(495401, 'lowBits', lowBits, false, false, false);
                            J$.N(495409, 'highBits', highBits, false, false, false);
                            J$.P(494673, J$.R(494593, 'buffer', buffer, false, false), J$.B(67506, '-', index = J$.W(494609, 'index', J$.B(67498, '+', J$.U(67490, '+', J$.R(494601, 'index', index, false, false)), 1), index, false, false), 1), J$.C(27704, J$.B(67514, '===', J$.G(494625, J$.R(494617, 'value', value, false, false), '_bsontype'), J$.T(494633, 'Long', 21, false))) ? J$.G(494649, J$.R(494641, 'BSON', BSON, false, true), 'BSON_DATA_LONG') : J$.G(494665, J$.R(494657, 'BSON', BSON, false, true), 'BSON_DATA_TIMESTAMP'));
                            var numberOfWrittenBytes = J$.W(494769, 'numberOfWrittenBytes', J$.C(27712, J$.U(67522, '!', J$.R(494681, 'isArray', isArray, false, false))) ? J$.M(494721, J$.R(494689, 'buffer', buffer, false, false), 'write', false)(J$.R(494697, 'key', key, false, false), J$.R(494705, 'index', index, false, false), J$.T(494713, 'utf8', 21, false)) : J$.M(494761, J$.R(494729, 'buffer', buffer, false, false), 'write', false)(J$.R(494737, 'key', key, false, false), J$.R(494745, 'index', index, false, false), J$.T(494753, 'ascii', 21, false)), numberOfWrittenBytes, false, false);
                            index = J$.W(494793, 'index', J$.B(67530, '+', J$.R(494777, 'index', index, false, false), J$.R(494785, 'numberOfWrittenBytes', numberOfWrittenBytes, false, false)), index, false, false);
                            J$.P(494833, J$.R(494801, 'buffer', buffer, false, false), J$.B(67554, '-', index = J$.W(494817, 'index', J$.B(67546, '+', J$.U(67538, '+', J$.R(494809, 'index', index, false, false)), 1), index, false, false), 1), J$.T(494825, 0, 22, false));
                            var lowBits = J$.W(494857, 'lowBits', J$.M(494849, J$.R(494841, 'value', value, false, false), 'getLowBits', false)(), lowBits, false, false);
                            var highBits = J$.W(494881, 'highBits', J$.M(494873, J$.R(494865, 'value', value, false, false), 'getHighBits', false)(), highBits, false, false);
                            J$.P(494929, J$.R(494889, 'buffer', buffer, false, false), J$.B(67578, '-', index = J$.W(494905, 'index', J$.B(67570, '+', J$.U(67562, '+', J$.R(494897, 'index', index, false, false)), 1), index, false, false), 1), J$.B(67586, '&', J$.R(494913, 'lowBits', lowBits, false, false), J$.T(494921, 255, 22, false)));
                            J$.P(494985, J$.R(494937, 'buffer', buffer, false, false), J$.B(67610, '-', index = J$.W(494953, 'index', J$.B(67602, '+', J$.U(67594, '+', J$.R(494945, 'index', index, false, false)), 1), index, false, false), 1), J$.B(67626, '&', J$.B(67618, '>>', J$.R(494961, 'lowBits', lowBits, false, false), J$.T(494969, 8, 22, false)), J$.T(494977, 255, 22, false)));
                            J$.P(495041, J$.R(494993, 'buffer', buffer, false, false), J$.B(67650, '-', index = J$.W(495009, 'index', J$.B(67642, '+', J$.U(67634, '+', J$.R(495001, 'index', index, false, false)), 1), index, false, false), 1), J$.B(67666, '&', J$.B(67658, '>>', J$.R(495017, 'lowBits', lowBits, false, false), J$.T(495025, 16, 22, false)), J$.T(495033, 255, 22, false)));
                            J$.P(495097, J$.R(495049, 'buffer', buffer, false, false), J$.B(67690, '-', index = J$.W(495065, 'index', J$.B(67682, '+', J$.U(67674, '+', J$.R(495057, 'index', index, false, false)), 1), index, false, false), 1), J$.B(67706, '&', J$.B(67698, '>>', J$.R(495073, 'lowBits', lowBits, false, false), J$.T(495081, 24, 22, false)), J$.T(495089, 255, 22, false)));
                            J$.P(495145, J$.R(495105, 'buffer', buffer, false, false), J$.B(67730, '-', index = J$.W(495121, 'index', J$.B(67722, '+', J$.U(67714, '+', J$.R(495113, 'index', index, false, false)), 1), index, false, false), 1), J$.B(67738, '&', J$.R(495129, 'highBits', highBits, false, false), J$.T(495137, 255, 22, false)));
                            J$.P(495201, J$.R(495153, 'buffer', buffer, false, false), J$.B(67762, '-', index = J$.W(495169, 'index', J$.B(67754, '+', J$.U(67746, '+', J$.R(495161, 'index', index, false, false)), 1), index, false, false), 1), J$.B(67778, '&', J$.B(67770, '>>', J$.R(495177, 'highBits', highBits, false, false), J$.T(495185, 8, 22, false)), J$.T(495193, 255, 22, false)));
                            J$.P(495257, J$.R(495209, 'buffer', buffer, false, false), J$.B(67802, '-', index = J$.W(495225, 'index', J$.B(67794, '+', J$.U(67786, '+', J$.R(495217, 'index', index, false, false)), 1), index, false, false), 1), J$.B(67818, '&', J$.B(67810, '>>', J$.R(495233, 'highBits', highBits, false, false), J$.T(495241, 16, 22, false)), J$.T(495249, 255, 22, false)));
                            J$.P(495313, J$.R(495265, 'buffer', buffer, false, false), J$.B(67842, '-', index = J$.W(495281, 'index', J$.B(67834, '+', J$.U(67826, '+', J$.R(495273, 'index', index, false, false)), 1), index, false, false), 1), J$.B(67858, '&', J$.B(67850, '>>', J$.R(495289, 'highBits', highBits, false, false), J$.T(495297, 24, 22, false)), J$.T(495305, 255, 22, false)));
                            return J$.Rt(495329, J$.R(495321, 'index', index, false, false));
                        } catch (J$e) {
                            J$.Ex(511097, J$e);
                        } finally {
                            if (J$.Fr(511105))
                                continue jalangiLabel17;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false), serializeLong, false, true);
            var serializeInt32 = J$.W(495945, 'serializeInt32', J$.T(495937, function serializeInt32(buffer, key, value, index, isArray) {
                jalangiLabel18:
                    while (true) {
                        try {
                            J$.Fe(495873, arguments.callee, this, arguments);
                            arguments = J$.N(495881, 'arguments', arguments, true, false, false);
                            buffer = J$.N(495889, 'buffer', buffer, true, false, false);
                            key = J$.N(495897, 'key', key, true, false, false);
                            value = J$.N(495905, 'value', value, true, false, false);
                            index = J$.N(495913, 'index', index, true, false, false);
                            isArray = J$.N(495921, 'isArray', isArray, true, false, false);
                            J$.N(495929, 'numberOfWrittenBytes', numberOfWrittenBytes, false, false, false);
                            J$.P(495473, J$.R(495433, 'buffer', buffer, false, false), J$.B(67882, '-', index = J$.W(495449, 'index', J$.B(67874, '+', J$.U(67866, '+', J$.R(495441, 'index', index, false, false)), 1), index, false, false), 1), J$.G(495465, J$.R(495457, 'BSON', BSON, false, true), 'BSON_DATA_INT'));
                            var numberOfWrittenBytes = J$.W(495569, 'numberOfWrittenBytes', J$.C(27720, J$.U(67890, '!', J$.R(495481, 'isArray', isArray, false, false))) ? J$.M(495521, J$.R(495489, 'buffer', buffer, false, false), 'write', false)(J$.R(495497, 'key', key, false, false), J$.R(495505, 'index', index, false, false), J$.T(495513, 'utf8', 21, false)) : J$.M(495561, J$.R(495529, 'buffer', buffer, false, false), 'write', false)(J$.R(495537, 'key', key, false, false), J$.R(495545, 'index', index, false, false), J$.T(495553, 'ascii', 21, false)), numberOfWrittenBytes, false, false);
                            index = J$.W(495593, 'index', J$.B(67898, '+', J$.R(495577, 'index', index, false, false), J$.R(495585, 'numberOfWrittenBytes', numberOfWrittenBytes, false, false)), index, false, false);
                            J$.P(495633, J$.R(495601, 'buffer', buffer, false, false), J$.B(67922, '-', index = J$.W(495617, 'index', J$.B(67914, '+', J$.U(67906, '+', J$.R(495609, 'index', index, false, false)), 1), index, false, false), 1), J$.T(495625, 0, 22, false));
                            J$.P(495681, J$.R(495641, 'buffer', buffer, false, false), J$.B(67946, '-', index = J$.W(495657, 'index', J$.B(67938, '+', J$.U(67930, '+', J$.R(495649, 'index', index, false, false)), 1), index, false, false), 1), J$.B(67954, '&', J$.R(495665, 'value', value, false, false), J$.T(495673, 255, 22, false)));
                            J$.P(495737, J$.R(495689, 'buffer', buffer, false, false), J$.B(67978, '-', index = J$.W(495705, 'index', J$.B(67970, '+', J$.U(67962, '+', J$.R(495697, 'index', index, false, false)), 1), index, false, false), 1), J$.B(67994, '&', J$.B(67986, '>>', J$.R(495713, 'value', value, false, false), J$.T(495721, 8, 22, false)), J$.T(495729, 255, 22, false)));
                            J$.P(495793, J$.R(495745, 'buffer', buffer, false, false), J$.B(68018, '-', index = J$.W(495761, 'index', J$.B(68010, '+', J$.U(68002, '+', J$.R(495753, 'index', index, false, false)), 1), index, false, false), 1), J$.B(68034, '&', J$.B(68026, '>>', J$.R(495769, 'value', value, false, false), J$.T(495777, 16, 22, false)), J$.T(495785, 255, 22, false)));
                            J$.P(495849, J$.R(495801, 'buffer', buffer, false, false), J$.B(68058, '-', index = J$.W(495817, 'index', J$.B(68050, '+', J$.U(68042, '+', J$.R(495809, 'index', index, false, false)), 1), index, false, false), 1), J$.B(68074, '&', J$.B(68066, '>>', J$.R(495825, 'value', value, false, false), J$.T(495833, 24, 22, false)), J$.T(495841, 255, 22, false)));
                            return J$.Rt(495865, J$.R(495857, 'index', index, false, false));
                        } catch (J$e) {
                            J$.Ex(511113, J$e);
                        } finally {
                            if (J$.Fr(511121))
                                continue jalangiLabel18;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false), serializeInt32, false, true);
            var serializeDouble = J$.W(496337, 'serializeDouble', J$.T(496329, function serializeDouble(buffer, key, value, index, isArray) {
                jalangiLabel19:
                    while (true) {
                        try {
                            J$.Fe(496265, arguments.callee, this, arguments);
                            arguments = J$.N(496273, 'arguments', arguments, true, false, false);
                            buffer = J$.N(496281, 'buffer', buffer, true, false, false);
                            key = J$.N(496289, 'key', key, true, false, false);
                            value = J$.N(496297, 'value', value, true, false, false);
                            index = J$.N(496305, 'index', index, true, false, false);
                            isArray = J$.N(496313, 'isArray', isArray, true, false, false);
                            J$.N(496321, 'numberOfWrittenBytes', numberOfWrittenBytes, false, false, false);
                            J$.P(495993, J$.R(495953, 'buffer', buffer, false, false), J$.B(68098, '-', index = J$.W(495969, 'index', J$.B(68090, '+', J$.U(68082, '+', J$.R(495961, 'index', index, false, false)), 1), index, false, false), 1), J$.G(495985, J$.R(495977, 'BSON', BSON, false, true), 'BSON_DATA_NUMBER'));
                            var numberOfWrittenBytes = J$.W(496089, 'numberOfWrittenBytes', J$.C(27728, J$.U(68106, '!', J$.R(496001, 'isArray', isArray, false, false))) ? J$.M(496041, J$.R(496009, 'buffer', buffer, false, false), 'write', false)(J$.R(496017, 'key', key, false, false), J$.R(496025, 'index', index, false, false), J$.T(496033, 'utf8', 21, false)) : J$.M(496081, J$.R(496049, 'buffer', buffer, false, false), 'write', false)(J$.R(496057, 'key', key, false, false), J$.R(496065, 'index', index, false, false), J$.T(496073, 'ascii', 21, false)), numberOfWrittenBytes, false, false);
                            index = J$.W(496113, 'index', J$.B(68114, '+', J$.R(496097, 'index', index, false, false), J$.R(496105, 'numberOfWrittenBytes', numberOfWrittenBytes, false, false)), index, false, false);
                            J$.P(496153, J$.R(496121, 'buffer', buffer, false, false), J$.B(68138, '-', index = J$.W(496137, 'index', J$.B(68130, '+', J$.U(68122, '+', J$.R(496129, 'index', index, false, false)), 1), index, false, false), 1), J$.T(496145, 0, 22, false));
                            J$.F(496217, J$.R(496161, 'writeIEEE754', writeIEEE754, false, true), false)(J$.R(496169, 'buffer', buffer, false, false), J$.R(496177, 'value', value, false, false), J$.R(496185, 'index', index, false, false), J$.T(496193, 'little', 21, false), J$.T(496201, 52, 22, false), J$.T(496209, 8, 22, false));
                            index = J$.W(496241, 'index', J$.B(68146, '+', J$.R(496225, 'index', index, false, false), J$.T(496233, 8, 22, false)), index, false, false);
                            return J$.Rt(496257, J$.R(496249, 'index', index, false, false));
                        } catch (J$e) {
                            J$.Ex(511129, J$e);
                        } finally {
                            if (J$.Fr(511137))
                                continue jalangiLabel19;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false), serializeDouble, false, true);
            var serializeFunction = J$.W(497057, 'serializeFunction', J$.T(497049, function serializeFunction(buffer, key, value, index, checkKeys, depth, isArray) {
                jalangiLabel20:
                    while (true) {
                        try {
                            J$.Fe(496953, arguments.callee, this, arguments);
                            arguments = J$.N(496961, 'arguments', arguments, true, false, false);
                            buffer = J$.N(496969, 'buffer', buffer, true, false, false);
                            key = J$.N(496977, 'key', key, true, false, false);
                            value = J$.N(496985, 'value', value, true, false, false);
                            index = J$.N(496993, 'index', index, true, false, false);
                            checkKeys = J$.N(497001, 'checkKeys', checkKeys, true, false, false);
                            depth = J$.N(497009, 'depth', depth, true, false, false);
                            isArray = J$.N(497017, 'isArray', isArray, true, false, false);
                            J$.N(497025, 'numberOfWrittenBytes', numberOfWrittenBytes, false, false, false);
                            J$.N(497033, 'functionString', functionString, false, false, false);
                            J$.N(497041, 'size', size, false, false, false);
                            J$.P(496385, J$.R(496345, 'buffer', buffer, false, false), J$.B(68170, '-', index = J$.W(496361, 'index', J$.B(68162, '+', J$.U(68154, '+', J$.R(496353, 'index', index, false, false)), 1), index, false, false), 1), J$.G(496377, J$.R(496369, 'BSON', BSON, false, true), 'BSON_DATA_CODE'));
                            var numberOfWrittenBytes = J$.W(496481, 'numberOfWrittenBytes', J$.C(27736, J$.U(68178, '!', J$.R(496393, 'isArray', isArray, false, false))) ? J$.M(496433, J$.R(496401, 'buffer', buffer, false, false), 'write', false)(J$.R(496409, 'key', key, false, false), J$.R(496417, 'index', index, false, false), J$.T(496425, 'utf8', 21, false)) : J$.M(496473, J$.R(496441, 'buffer', buffer, false, false), 'write', false)(J$.R(496449, 'key', key, false, false), J$.R(496457, 'index', index, false, false), J$.T(496465, 'ascii', 21, false)), numberOfWrittenBytes, false, false);
                            index = J$.W(496505, 'index', J$.B(68186, '+', J$.R(496489, 'index', index, false, false), J$.R(496497, 'numberOfWrittenBytes', numberOfWrittenBytes, false, false)), index, false, false);
                            J$.P(496545, J$.R(496513, 'buffer', buffer, false, false), J$.B(68210, '-', index = J$.W(496529, 'index', J$.B(68202, '+', J$.U(68194, '+', J$.R(496521, 'index', index, false, false)), 1), index, false, false), 1), J$.T(496537, 0, 22, false));
                            var functionString = J$.W(496577, 'functionString', J$.F(496569, J$.R(496553, 'normalizedFunctionString', normalizedFunctionString, false, true), false)(J$.R(496561, 'value', value, false, false)), functionString, false, false);
                            var size = J$.W(496641, 'size', J$.B(68226, '+', J$.M(496625, J$.R(496585, 'buffer', buffer, false, false), 'write', false)(J$.R(496593, 'functionString', functionString, false, false), J$.B(68218, '+', J$.R(496601, 'index', index, false, false), J$.T(496609, 4, 22, false)), J$.T(496617, 'utf8', 21, false)), J$.T(496633, 1, 22, false)), size, false, false);
                            J$.P(496681, J$.R(496649, 'buffer', buffer, false, false), J$.R(496657, 'index', index, false, false), J$.B(68234, '&', J$.R(496665, 'size', size, false, false), J$.T(496673, 255, 22, false)));
                            J$.P(496737, J$.R(496689, 'buffer', buffer, false, false), J$.B(68242, '+', J$.R(496697, 'index', index, false, false), J$.T(496705, 1, 22, false)), J$.B(68258, '&', J$.B(68250, '>>', J$.R(496713, 'size', size, false, false), J$.T(496721, 8, 22, false)), J$.T(496729, 255, 22, false)));
                            J$.P(496793, J$.R(496745, 'buffer', buffer, false, false), J$.B(68266, '+', J$.R(496753, 'index', index, false, false), J$.T(496761, 2, 22, false)), J$.B(68282, '&', J$.B(68274, '>>', J$.R(496769, 'size', size, false, false), J$.T(496777, 16, 22, false)), J$.T(496785, 255, 22, false)));
                            J$.P(496849, J$.R(496801, 'buffer', buffer, false, false), J$.B(68290, '+', J$.R(496809, 'index', index, false, false), J$.T(496817, 3, 22, false)), J$.B(68306, '&', J$.B(68298, '>>', J$.R(496825, 'size', size, false, false), J$.T(496833, 24, 22, false)), J$.T(496841, 255, 22, false)));
                            index = J$.W(496889, 'index', J$.B(68330, '-', J$.B(68322, '+', J$.B(68314, '+', J$.R(496857, 'index', index, false, false), J$.T(496865, 4, 22, false)), J$.R(496873, 'size', size, false, false)), J$.T(496881, 1, 22, false)), index, false, false);
                            J$.P(496929, J$.R(496897, 'buffer', buffer, false, false), J$.B(68354, '-', index = J$.W(496913, 'index', J$.B(68346, '+', J$.U(68338, '+', J$.R(496905, 'index', index, false, false)), 1), index, false, false), 1), J$.T(496921, 0, 22, false));
                            return J$.Rt(496945, J$.R(496937, 'index', index, false, false));
                        } catch (J$e) {
                            J$.Ex(511145, J$e);
                        } finally {
                            if (J$.Fr(511153))
                                continue jalangiLabel20;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false), serializeFunction, false, true);
            var serializeCode = J$.W(498961, 'serializeCode', J$.T(498953, function serializeCode(buffer, key, value, index, checkKeys, depth, serializeFunctions, ignoreUndefined, isArray) {
                jalangiLabel21:
                    while (true) {
                        try {
                            J$.Fe(498809, arguments.callee, this, arguments);
                            arguments = J$.N(498817, 'arguments', arguments, true, false, false);
                            buffer = J$.N(498825, 'buffer', buffer, true, false, false);
                            key = J$.N(498833, 'key', key, true, false, false);
                            value = J$.N(498841, 'value', value, true, false, false);
                            index = J$.N(498849, 'index', index, true, false, false);
                            checkKeys = J$.N(498857, 'checkKeys', checkKeys, true, false, false);
                            depth = J$.N(498865, 'depth', depth, true, false, false);
                            serializeFunctions = J$.N(498873, 'serializeFunctions', serializeFunctions, true, false, false);
                            ignoreUndefined = J$.N(498881, 'ignoreUndefined', ignoreUndefined, true, false, false);
                            isArray = J$.N(498889, 'isArray', isArray, true, false, false);
                            J$.N(498897, 'numberOfWrittenBytes', numberOfWrittenBytes, false, false, false);
                            J$.N(498905, 'startIndex', startIndex, false, false, false);
                            J$.N(498913, 'functionString', functionString, false, false, false);
                            J$.N(498921, 'codeSize', codeSize, false, false, false);
                            J$.N(498929, 'endIndex', endIndex, false, false, false);
                            J$.N(498937, 'totalSize', totalSize, false, false, false);
                            J$.N(498945, 'size', size, false, false, false);
                            if (J$.C(27776, J$.C(27744, J$.G(497073, J$.R(497065, 'value', value, false, false), 'scope')) ? J$.B(68362, '===', J$.F(497105, J$.R(497081, '_typeof', _typeof, false, true), false)(J$.G(497097, J$.R(497089, 'value', value, false, false), 'scope')), J$.T(497113, 'object', 21, false)) : J$._())) {
                                J$.P(497161, J$.R(497121, 'buffer', buffer, false, false), J$.B(68386, '-', index = J$.W(497137, 'index', J$.B(68378, '+', J$.U(68370, '+', J$.R(497129, 'index', index, false, false)), 1), index, false, false), 1), J$.G(497153, J$.R(497145, 'BSON', BSON, false, true), 'BSON_DATA_CODE_W_SCOPE'));
                                var numberOfWrittenBytes = J$.W(497257, 'numberOfWrittenBytes', J$.C(27752, J$.U(68394, '!', J$.R(497169, 'isArray', isArray, false, false))) ? J$.M(497209, J$.R(497177, 'buffer', buffer, false, false), 'write', false)(J$.R(497185, 'key', key, false, false), J$.R(497193, 'index', index, false, false), J$.T(497201, 'utf8', 21, false)) : J$.M(497249, J$.R(497217, 'buffer', buffer, false, false), 'write', false)(J$.R(497225, 'key', key, false, false), J$.R(497233, 'index', index, false, false), J$.T(497241, 'ascii', 21, false)), numberOfWrittenBytes, false, false);
                                index = J$.W(497281, 'index', J$.B(68402, '+', J$.R(497265, 'index', index, false, false), J$.R(497273, 'numberOfWrittenBytes', numberOfWrittenBytes, false, false)), index, false, false);
                                J$.P(497321, J$.R(497289, 'buffer', buffer, false, false), J$.B(68426, '-', index = J$.W(497305, 'index', J$.B(68418, '+', J$.U(68410, '+', J$.R(497297, 'index', index, false, false)), 1), index, false, false), 1), J$.T(497313, 0, 22, false));
                                var startIndex = J$.W(497337, 'startIndex', J$.R(497329, 'index', index, false, false), startIndex, false, false);
                                var functionString = J$.W(497409, 'functionString', J$.C(27760, J$.B(68442, '===', J$.U(68434, 'typeof', J$.G(497353, J$.R(497345, 'value', value, false, false), 'code')), J$.T(497361, 'string', 21, false))) ? J$.G(497377, J$.R(497369, 'value', value, false, false), 'code') : J$.M(497401, J$.G(497393, J$.R(497385, 'value', value, false, false), 'code'), 'toString', false)(), functionString, false, false);
                                index = J$.W(497433, 'index', J$.B(68450, '+', J$.R(497417, 'index', index, false, false), J$.T(497425, 4, 22, false)), index, false, false);
                                var codeSize = J$.W(497497, 'codeSize', J$.B(68466, '+', J$.M(497481, J$.R(497441, 'buffer', buffer, false, false), 'write', false)(J$.R(497449, 'functionString', functionString, false, false), J$.B(68458, '+', J$.R(497457, 'index', index, false, false), J$.T(497465, 4, 22, false)), J$.T(497473, 'utf8', 21, false)), J$.T(497489, 1, 22, false)), codeSize, false, false);
                                J$.P(497537, J$.R(497505, 'buffer', buffer, false, false), J$.R(497513, 'index', index, false, false), J$.B(68474, '&', J$.R(497521, 'codeSize', codeSize, false, false), J$.T(497529, 255, 22, false)));
                                J$.P(497593, J$.R(497545, 'buffer', buffer, false, false), J$.B(68482, '+', J$.R(497553, 'index', index, false, false), J$.T(497561, 1, 22, false)), J$.B(68498, '&', J$.B(68490, '>>', J$.R(497569, 'codeSize', codeSize, false, false), J$.T(497577, 8, 22, false)), J$.T(497585, 255, 22, false)));
                                J$.P(497649, J$.R(497601, 'buffer', buffer, false, false), J$.B(68506, '+', J$.R(497609, 'index', index, false, false), J$.T(497617, 2, 22, false)), J$.B(68522, '&', J$.B(68514, '>>', J$.R(497625, 'codeSize', codeSize, false, false), J$.T(497633, 16, 22, false)), J$.T(497641, 255, 22, false)));
                                J$.P(497705, J$.R(497657, 'buffer', buffer, false, false), J$.B(68530, '+', J$.R(497665, 'index', index, false, false), J$.T(497673, 3, 22, false)), J$.B(68546, '&', J$.B(68538, '>>', J$.R(497681, 'codeSize', codeSize, false, false), J$.T(497689, 24, 22, false)), J$.T(497697, 255, 22, false)));
                                J$.P(497761, J$.R(497713, 'buffer', buffer, false, false), J$.B(68570, '-', J$.B(68562, '+', J$.B(68554, '+', J$.R(497721, 'index', index, false, false), J$.T(497729, 4, 22, false)), J$.R(497737, 'codeSize', codeSize, false, false)), J$.T(497745, 1, 22, false)), J$.T(497753, 0, 22, false));
                                index = J$.W(497793, 'index', J$.B(68586, '+', J$.B(68578, '+', J$.R(497769, 'index', index, false, false), J$.R(497777, 'codeSize', codeSize, false, false)), J$.T(497785, 4, 22, false)), index, false, false);
                                var endIndex = J$.W(497889, 'endIndex', J$.F(497881, J$.R(497801, 'serializeInto', serializeInto, false, true), false)(J$.R(497809, 'buffer', buffer, false, false), J$.G(497825, J$.R(497817, 'value', value, false, false), 'scope'), J$.R(497833, 'checkKeys', checkKeys, false, false), J$.R(497841, 'index', index, false, false), J$.B(68594, '+', J$.R(497849, 'depth', depth, false, false), J$.T(497857, 1, 22, false)), J$.R(497865, 'serializeFunctions', serializeFunctions, false, false), J$.R(497873, 'ignoreUndefined', ignoreUndefined, false, false)), endIndex, false, false);
                                index = J$.W(497913, 'index', J$.B(68602, '-', J$.R(497897, 'endIndex', endIndex, false, false), J$.T(497905, 1, 22, false)), index, false, false);
                                var totalSize = J$.W(497937, 'totalSize', J$.B(68610, '-', J$.R(497921, 'endIndex', endIndex, false, false), J$.R(497929, 'startIndex', startIndex, false, false)), totalSize, false, false);
                                J$.P(497985, J$.R(497945, 'buffer', buffer, false, false), J$.B(68634, '-', startIndex = J$.W(497961, 'startIndex', J$.B(68626, '+', J$.U(68618, '+', J$.R(497953, 'startIndex', startIndex, false, false)), 1), startIndex, false, false), 1), J$.B(68642, '&', J$.R(497969, 'totalSize', totalSize, false, false), J$.T(497977, 255, 22, false)));
                                J$.P(498041, J$.R(497993, 'buffer', buffer, false, false), J$.B(68666, '-', startIndex = J$.W(498009, 'startIndex', J$.B(68658, '+', J$.U(68650, '+', J$.R(498001, 'startIndex', startIndex, false, false)), 1), startIndex, false, false), 1), J$.B(68682, '&', J$.B(68674, '>>', J$.R(498017, 'totalSize', totalSize, false, false), J$.T(498025, 8, 22, false)), J$.T(498033, 255, 22, false)));
                                J$.P(498097, J$.R(498049, 'buffer', buffer, false, false), J$.B(68706, '-', startIndex = J$.W(498065, 'startIndex', J$.B(68698, '+', J$.U(68690, '+', J$.R(498057, 'startIndex', startIndex, false, false)), 1), startIndex, false, false), 1), J$.B(68722, '&', J$.B(68714, '>>', J$.R(498073, 'totalSize', totalSize, false, false), J$.T(498081, 16, 22, false)), J$.T(498089, 255, 22, false)));
                                J$.P(498153, J$.R(498105, 'buffer', buffer, false, false), J$.B(68746, '-', startIndex = J$.W(498121, 'startIndex', J$.B(68738, '+', J$.U(68730, '+', J$.R(498113, 'startIndex', startIndex, false, false)), 1), startIndex, false, false), 1), J$.B(68762, '&', J$.B(68754, '>>', J$.R(498129, 'totalSize', totalSize, false, false), J$.T(498137, 24, 22, false)), J$.T(498145, 255, 22, false)));
                                J$.P(498193, J$.R(498161, 'buffer', buffer, false, false), J$.B(68786, '-', index = J$.W(498177, 'index', J$.B(68778, '+', J$.U(68770, '+', J$.R(498169, 'index', index, false, false)), 1), index, false, false), 1), J$.T(498185, 0, 22, false));
                            } else {
                                J$.P(498241, J$.R(498201, 'buffer', buffer, false, false), J$.B(68810, '-', index = J$.W(498217, 'index', J$.B(68802, '+', J$.U(68794, '+', J$.R(498209, 'index', index, false, false)), 1), index, false, false), 1), J$.G(498233, J$.R(498225, 'BSON', BSON, false, true), 'BSON_DATA_CODE'));
                                numberOfWrittenBytes = J$.W(498337, 'numberOfWrittenBytes', J$.C(27768, J$.U(68818, '!', J$.R(498249, 'isArray', isArray, false, false))) ? J$.M(498289, J$.R(498257, 'buffer', buffer, false, false), 'write', false)(J$.R(498265, 'key', key, false, false), J$.R(498273, 'index', index, false, false), J$.T(498281, 'utf8', 21, false)) : J$.M(498329, J$.R(498297, 'buffer', buffer, false, false), 'write', false)(J$.R(498305, 'key', key, false, false), J$.R(498313, 'index', index, false, false), J$.T(498321, 'ascii', 21, false)), numberOfWrittenBytes, false, false);
                                index = J$.W(498361, 'index', J$.B(68826, '+', J$.R(498345, 'index', index, false, false), J$.R(498353, 'numberOfWrittenBytes', numberOfWrittenBytes, false, false)), index, false, false);
                                J$.P(498401, J$.R(498369, 'buffer', buffer, false, false), J$.B(68850, '-', index = J$.W(498385, 'index', J$.B(68842, '+', J$.U(68834, '+', J$.R(498377, 'index', index, false, false)), 1), index, false, false), 1), J$.T(498393, 0, 22, false));
                                functionString = J$.W(498433, 'functionString', J$.M(498425, J$.G(498417, J$.R(498409, 'value', value, false, false), 'code'), 'toString', false)(), functionString, false, false);
                                var size = J$.W(498497, 'size', J$.B(68866, '+', J$.M(498481, J$.R(498441, 'buffer', buffer, false, false), 'write', false)(J$.R(498449, 'functionString', functionString, false, false), J$.B(68858, '+', J$.R(498457, 'index', index, false, false), J$.T(498465, 4, 22, false)), J$.T(498473, 'utf8', 21, false)), J$.T(498489, 1, 22, false)), size, false, false);
                                J$.P(498537, J$.R(498505, 'buffer', buffer, false, false), J$.R(498513, 'index', index, false, false), J$.B(68874, '&', J$.R(498521, 'size', size, false, false), J$.T(498529, 255, 22, false)));
                                J$.P(498593, J$.R(498545, 'buffer', buffer, false, false), J$.B(68882, '+', J$.R(498553, 'index', index, false, false), J$.T(498561, 1, 22, false)), J$.B(68898, '&', J$.B(68890, '>>', J$.R(498569, 'size', size, false, false), J$.T(498577, 8, 22, false)), J$.T(498585, 255, 22, false)));
                                J$.P(498649, J$.R(498601, 'buffer', buffer, false, false), J$.B(68906, '+', J$.R(498609, 'index', index, false, false), J$.T(498617, 2, 22, false)), J$.B(68922, '&', J$.B(68914, '>>', J$.R(498625, 'size', size, false, false), J$.T(498633, 16, 22, false)), J$.T(498641, 255, 22, false)));
                                J$.P(498705, J$.R(498657, 'buffer', buffer, false, false), J$.B(68930, '+', J$.R(498665, 'index', index, false, false), J$.T(498673, 3, 22, false)), J$.B(68946, '&', J$.B(68938, '>>', J$.R(498681, 'size', size, false, false), J$.T(498689, 24, 22, false)), J$.T(498697, 255, 22, false)));
                                index = J$.W(498745, 'index', J$.B(68970, '-', J$.B(68962, '+', J$.B(68954, '+', J$.R(498713, 'index', index, false, false), J$.T(498721, 4, 22, false)), J$.R(498729, 'size', size, false, false)), J$.T(498737, 1, 22, false)), index, false, false);
                                J$.P(498785, J$.R(498753, 'buffer', buffer, false, false), J$.B(68994, '-', index = J$.W(498769, 'index', J$.B(68986, '+', J$.U(68978, '+', J$.R(498761, 'index', index, false, false)), 1), index, false, false), 1), J$.T(498777, 0, 22, false));
                            }
                            return J$.Rt(498801, J$.R(498793, 'index', index, false, false));
                        } catch (J$e) {
                            J$.Ex(511161, J$e);
                        } finally {
                            if (J$.Fr(511169))
                                continue jalangiLabel21;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false), serializeCode, false, true);
            var serializeBinary = J$.W(500017, 'serializeBinary', J$.T(500009, function serializeBinary(buffer, key, value, index, isArray) {
                jalangiLabel22:
                    while (true) {
                        try {
                            J$.Fe(499929, arguments.callee, this, arguments);
                            arguments = J$.N(499937, 'arguments', arguments, true, false, false);
                            buffer = J$.N(499945, 'buffer', buffer, true, false, false);
                            key = J$.N(499953, 'key', key, true, false, false);
                            value = J$.N(499961, 'value', value, true, false, false);
                            index = J$.N(499969, 'index', index, true, false, false);
                            isArray = J$.N(499977, 'isArray', isArray, true, false, false);
                            J$.N(499985, 'numberOfWrittenBytes', numberOfWrittenBytes, false, false, false);
                            J$.N(499993, 'data', data, false, false, false);
                            J$.N(500001, 'size', size, false, false, false);
                            J$.P(499009, J$.R(498969, 'buffer', buffer, false, false), J$.B(69018, '-', index = J$.W(498985, 'index', J$.B(69010, '+', J$.U(69002, '+', J$.R(498977, 'index', index, false, false)), 1), index, false, false), 1), J$.G(499001, J$.R(498993, 'BSON', BSON, false, true), 'BSON_DATA_BINARY'));
                            var numberOfWrittenBytes = J$.W(499105, 'numberOfWrittenBytes', J$.C(27784, J$.U(69026, '!', J$.R(499017, 'isArray', isArray, false, false))) ? J$.M(499057, J$.R(499025, 'buffer', buffer, false, false), 'write', false)(J$.R(499033, 'key', key, false, false), J$.R(499041, 'index', index, false, false), J$.T(499049, 'utf8', 21, false)) : J$.M(499097, J$.R(499065, 'buffer', buffer, false, false), 'write', false)(J$.R(499073, 'key', key, false, false), J$.R(499081, 'index', index, false, false), J$.T(499089, 'ascii', 21, false)), numberOfWrittenBytes, false, false);
                            index = J$.W(499129, 'index', J$.B(69034, '+', J$.R(499113, 'index', index, false, false), J$.R(499121, 'numberOfWrittenBytes', numberOfWrittenBytes, false, false)), index, false, false);
                            J$.P(499169, J$.R(499137, 'buffer', buffer, false, false), J$.B(69058, '-', index = J$.W(499153, 'index', J$.B(69050, '+', J$.U(69042, '+', J$.R(499145, 'index', index, false, false)), 1), index, false, false), 1), J$.T(499161, 0, 22, false));
                            var data = J$.W(499201, 'data', J$.M(499193, J$.R(499177, 'value', value, false, false), 'value', false)(J$.T(499185, true, 23, false)), data, false, false);
                            var size = J$.W(499225, 'size', J$.G(499217, J$.R(499209, 'value', value, false, false), 'position'), size, false, false);
                            if (J$.C(27792, J$.B(69066, '===', J$.G(499241, J$.R(499233, 'value', value, false, false), 'sub_type'), J$.G(499257, J$.R(499249, 'Binary', Binary, false, true), 'SUBTYPE_BYTE_ARRAY'))))
                                size = J$.W(499281, 'size', J$.B(69074, '+', J$.R(499265, 'size', size, false, false), J$.T(499273, 4, 22, false)), size, false, false);
                            J$.P(499329, J$.R(499289, 'buffer', buffer, false, false), J$.B(69098, '-', index = J$.W(499305, 'index', J$.B(69090, '+', J$.U(69082, '+', J$.R(499297, 'index', index, false, false)), 1), index, false, false), 1), J$.B(69106, '&', J$.R(499313, 'size', size, false, false), J$.T(499321, 255, 22, false)));
                            J$.P(499385, J$.R(499337, 'buffer', buffer, false, false), J$.B(69130, '-', index = J$.W(499353, 'index', J$.B(69122, '+', J$.U(69114, '+', J$.R(499345, 'index', index, false, false)), 1), index, false, false), 1), J$.B(69146, '&', J$.B(69138, '>>', J$.R(499361, 'size', size, false, false), J$.T(499369, 8, 22, false)), J$.T(499377, 255, 22, false)));
                            J$.P(499441, J$.R(499393, 'buffer', buffer, false, false), J$.B(69170, '-', index = J$.W(499409, 'index', J$.B(69162, '+', J$.U(69154, '+', J$.R(499401, 'index', index, false, false)), 1), index, false, false), 1), J$.B(69186, '&', J$.B(69178, '>>', J$.R(499417, 'size', size, false, false), J$.T(499425, 16, 22, false)), J$.T(499433, 255, 22, false)));
                            J$.P(499497, J$.R(499449, 'buffer', buffer, false, false), J$.B(69210, '-', index = J$.W(499465, 'index', J$.B(69202, '+', J$.U(69194, '+', J$.R(499457, 'index', index, false, false)), 1), index, false, false), 1), J$.B(69226, '&', J$.B(69218, '>>', J$.R(499473, 'size', size, false, false), J$.T(499481, 24, 22, false)), J$.T(499489, 255, 22, false)));
                            J$.P(499545, J$.R(499505, 'buffer', buffer, false, false), J$.B(69250, '-', index = J$.W(499521, 'index', J$.B(69242, '+', J$.U(69234, '+', J$.R(499513, 'index', index, false, false)), 1), index, false, false), 1), J$.G(499537, J$.R(499529, 'value', value, false, false), 'sub_type'));
                            if (J$.C(27800, J$.B(69258, '===', J$.G(499561, J$.R(499553, 'value', value, false, false), 'sub_type'), J$.G(499577, J$.R(499569, 'Binary', Binary, false, true), 'SUBTYPE_BYTE_ARRAY')))) {
                                size = J$.W(499601, 'size', J$.B(69266, '-', J$.R(499585, 'size', size, false, false), J$.T(499593, 4, 22, false)), size, false, false);
                                J$.P(499649, J$.R(499609, 'buffer', buffer, false, false), J$.B(69290, '-', index = J$.W(499625, 'index', J$.B(69282, '+', J$.U(69274, '+', J$.R(499617, 'index', index, false, false)), 1), index, false, false), 1), J$.B(69298, '&', J$.R(499633, 'size', size, false, false), J$.T(499641, 255, 22, false)));
                                J$.P(499705, J$.R(499657, 'buffer', buffer, false, false), J$.B(69322, '-', index = J$.W(499673, 'index', J$.B(69314, '+', J$.U(69306, '+', J$.R(499665, 'index', index, false, false)), 1), index, false, false), 1), J$.B(69338, '&', J$.B(69330, '>>', J$.R(499681, 'size', size, false, false), J$.T(499689, 8, 22, false)), J$.T(499697, 255, 22, false)));
                                J$.P(499761, J$.R(499713, 'buffer', buffer, false, false), J$.B(69362, '-', index = J$.W(499729, 'index', J$.B(69354, '+', J$.U(69346, '+', J$.R(499721, 'index', index, false, false)), 1), index, false, false), 1), J$.B(69378, '&', J$.B(69370, '>>', J$.R(499737, 'size', size, false, false), J$.T(499745, 16, 22, false)), J$.T(499753, 255, 22, false)));
                                J$.P(499817, J$.R(499769, 'buffer', buffer, false, false), J$.B(69402, '-', index = J$.W(499785, 'index', J$.B(69394, '+', J$.U(69386, '+', J$.R(499777, 'index', index, false, false)), 1), index, false, false), 1), J$.B(69418, '&', J$.B(69410, '>>', J$.R(499793, 'size', size, false, false), J$.T(499801, 24, 22, false)), J$.T(499809, 255, 22, false)));
                            }
                            J$.M(499873, J$.R(499825, 'data', data, false, false), 'copy', false)(J$.R(499833, 'buffer', buffer, false, false), J$.R(499841, 'index', index, false, false), J$.T(499849, 0, 22, false), J$.G(499865, J$.R(499857, 'value', value, false, false), 'position'));
                            index = J$.W(499905, 'index', J$.B(69426, '+', J$.R(499881, 'index', index, false, false), J$.G(499897, J$.R(499889, 'value', value, false, false), 'position')), index, false, false);
                            return J$.Rt(499921, J$.R(499913, 'index', index, false, false));
                        } catch (J$e) {
                            J$.Ex(511177, J$e);
                        } finally {
                            if (J$.Fr(511185))
                                continue jalangiLabel22;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false), serializeBinary, false, true);
            var serializeSymbol = J$.W(500689, 'serializeSymbol', J$.T(500681, function serializeSymbol(buffer, key, value, index, isArray) {
                jalangiLabel23:
                    while (true) {
                        try {
                            J$.Fe(500609, arguments.callee, this, arguments);
                            arguments = J$.N(500617, 'arguments', arguments, true, false, false);
                            buffer = J$.N(500625, 'buffer', buffer, true, false, false);
                            key = J$.N(500633, 'key', key, true, false, false);
                            value = J$.N(500641, 'value', value, true, false, false);
                            index = J$.N(500649, 'index', index, true, false, false);
                            isArray = J$.N(500657, 'isArray', isArray, true, false, false);
                            J$.N(500665, 'numberOfWrittenBytes', numberOfWrittenBytes, false, false, false);
                            J$.N(500673, 'size', size, false, false, false);
                            J$.P(500065, J$.R(500025, 'buffer', buffer, false, false), J$.B(69450, '-', index = J$.W(500041, 'index', J$.B(69442, '+', J$.U(69434, '+', J$.R(500033, 'index', index, false, false)), 1), index, false, false), 1), J$.G(500057, J$.R(500049, 'BSON', BSON, false, true), 'BSON_DATA_SYMBOL'));
                            var numberOfWrittenBytes = J$.W(500161, 'numberOfWrittenBytes', J$.C(27808, J$.U(69458, '!', J$.R(500073, 'isArray', isArray, false, false))) ? J$.M(500113, J$.R(500081, 'buffer', buffer, false, false), 'write', false)(J$.R(500089, 'key', key, false, false), J$.R(500097, 'index', index, false, false), J$.T(500105, 'utf8', 21, false)) : J$.M(500153, J$.R(500121, 'buffer', buffer, false, false), 'write', false)(J$.R(500129, 'key', key, false, false), J$.R(500137, 'index', index, false, false), J$.T(500145, 'ascii', 21, false)), numberOfWrittenBytes, false, false);
                            index = J$.W(500185, 'index', J$.B(69466, '+', J$.R(500169, 'index', index, false, false), J$.R(500177, 'numberOfWrittenBytes', numberOfWrittenBytes, false, false)), index, false, false);
                            J$.P(500225, J$.R(500193, 'buffer', buffer, false, false), J$.B(69490, '-', index = J$.W(500209, 'index', J$.B(69482, '+', J$.U(69474, '+', J$.R(500201, 'index', index, false, false)), 1), index, false, false), 1), J$.T(500217, 0, 22, false));
                            var size = J$.W(500297, 'size', J$.B(69506, '+', J$.M(500281, J$.R(500233, 'buffer', buffer, false, false), 'write', false)(J$.G(500249, J$.R(500241, 'value', value, false, false), 'value'), J$.B(69498, '+', J$.R(500257, 'index', index, false, false), J$.T(500265, 4, 22, false)), J$.T(500273, 'utf8', 21, false)), J$.T(500289, 1, 22, false)), size, false, false);
                            J$.P(500337, J$.R(500305, 'buffer', buffer, false, false), J$.R(500313, 'index', index, false, false), J$.B(69514, '&', J$.R(500321, 'size', size, false, false), J$.T(500329, 255, 22, false)));
                            J$.P(500393, J$.R(500345, 'buffer', buffer, false, false), J$.B(69522, '+', J$.R(500353, 'index', index, false, false), J$.T(500361, 1, 22, false)), J$.B(69538, '&', J$.B(69530, '>>', J$.R(500369, 'size', size, false, false), J$.T(500377, 8, 22, false)), J$.T(500385, 255, 22, false)));
                            J$.P(500449, J$.R(500401, 'buffer', buffer, false, false), J$.B(69546, '+', J$.R(500409, 'index', index, false, false), J$.T(500417, 2, 22, false)), J$.B(69562, '&', J$.B(69554, '>>', J$.R(500425, 'size', size, false, false), J$.T(500433, 16, 22, false)), J$.T(500441, 255, 22, false)));
                            J$.P(500505, J$.R(500457, 'buffer', buffer, false, false), J$.B(69570, '+', J$.R(500465, 'index', index, false, false), J$.T(500473, 3, 22, false)), J$.B(69586, '&', J$.B(69578, '>>', J$.R(500481, 'size', size, false, false), J$.T(500489, 24, 22, false)), J$.T(500497, 255, 22, false)));
                            index = J$.W(500545, 'index', J$.B(69610, '-', J$.B(69602, '+', J$.B(69594, '+', J$.R(500513, 'index', index, false, false), J$.T(500521, 4, 22, false)), J$.R(500529, 'size', size, false, false)), J$.T(500537, 1, 22, false)), index, false, false);
                            J$.P(500585, J$.R(500553, 'buffer', buffer, false, false), J$.B(69634, '-', index = J$.W(500569, 'index', J$.B(69626, '+', J$.U(69618, '+', J$.R(500561, 'index', index, false, false)), 1), index, false, false), 1), J$.T(500577, 0, 22, false));
                            return J$.Rt(500601, J$.R(500593, 'index', index, false, false));
                        } catch (J$e) {
                            J$.Ex(511193, J$e);
                        } finally {
                            if (J$.Fr(511201))
                                continue jalangiLabel23;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false), serializeSymbol, false, true);
            var serializeDBRef = J$.W(501553, 'serializeDBRef', J$.T(501545, function serializeDBRef(buffer, key, value, index, depth, serializeFunctions, isArray) {
                jalangiLabel24:
                    while (true) {
                        try {
                            J$.Fe(501441, arguments.callee, this, arguments);
                            arguments = J$.N(501449, 'arguments', arguments, true, false, false);
                            buffer = J$.N(501457, 'buffer', buffer, true, false, false);
                            key = J$.N(501465, 'key', key, true, false, false);
                            value = J$.N(501473, 'value', value, true, false, false);
                            index = J$.N(501481, 'index', index, true, false, false);
                            depth = J$.N(501489, 'depth', depth, true, false, false);
                            serializeFunctions = J$.N(501497, 'serializeFunctions', serializeFunctions, true, false, false);
                            isArray = J$.N(501505, 'isArray', isArray, true, false, false);
                            J$.N(501513, 'numberOfWrittenBytes', numberOfWrittenBytes, false, false, false);
                            J$.N(501521, 'startIndex', startIndex, false, false, false);
                            J$.N(501529, 'endIndex', endIndex, false, false, false);
                            J$.N(501537, 'size', size, false, false, false);
                            J$.P(500737, J$.R(500697, 'buffer', buffer, false, false), J$.B(69658, '-', index = J$.W(500713, 'index', J$.B(69650, '+', J$.U(69642, '+', J$.R(500705, 'index', index, false, false)), 1), index, false, false), 1), J$.G(500729, J$.R(500721, 'BSON', BSON, false, true), 'BSON_DATA_OBJECT'));
                            var numberOfWrittenBytes = J$.W(500833, 'numberOfWrittenBytes', J$.C(27816, J$.U(69666, '!', J$.R(500745, 'isArray', isArray, false, false))) ? J$.M(500785, J$.R(500753, 'buffer', buffer, false, false), 'write', false)(J$.R(500761, 'key', key, false, false), J$.R(500769, 'index', index, false, false), J$.T(500777, 'utf8', 21, false)) : J$.M(500825, J$.R(500793, 'buffer', buffer, false, false), 'write', false)(J$.R(500801, 'key', key, false, false), J$.R(500809, 'index', index, false, false), J$.T(500817, 'ascii', 21, false)), numberOfWrittenBytes, false, false);
                            index = J$.W(500857, 'index', J$.B(69674, '+', J$.R(500841, 'index', index, false, false), J$.R(500849, 'numberOfWrittenBytes', numberOfWrittenBytes, false, false)), index, false, false);
                            J$.P(500897, J$.R(500865, 'buffer', buffer, false, false), J$.B(69698, '-', index = J$.W(500881, 'index', J$.B(69690, '+', J$.U(69682, '+', J$.R(500873, 'index', index, false, false)), 1), index, false, false), 1), J$.T(500889, 0, 22, false));
                            var startIndex = J$.W(500913, 'startIndex', J$.R(500905, 'index', index, false, false), startIndex, false, false);
                            var endIndex;
                            if (J$.C(27824, J$.B(69706, '!=', J$.T(500921, null, 25, false), J$.G(500937, J$.R(500929, 'value', value, false, false), 'db')))) {
                                endIndex = J$.W(501065, 'endIndex', J$.F(501057, J$.R(500945, 'serializeInto', serializeInto, false, true), false)(J$.R(500953, 'buffer', buffer, false, false), J$.T(501009, {
                                    $ref: J$.G(500969, J$.R(500961, 'value', value, false, false), 'namespace'),
                                    $id: J$.G(500985, J$.R(500977, 'value', value, false, false), 'oid'),
                                    $db: J$.G(501001, J$.R(500993, 'value', value, false, false), 'db')
                                }, 11, false), J$.T(501017, false, 23, false), J$.R(501025, 'index', index, false, false), J$.B(69714, '+', J$.R(501033, 'depth', depth, false, false), J$.T(501041, 1, 22, false)), J$.R(501049, 'serializeFunctions', serializeFunctions, false, false)), endIndex, false, false);
                            } else {
                                endIndex = J$.W(501177, 'endIndex', J$.F(501169, J$.R(501073, 'serializeInto', serializeInto, false, true), false)(J$.R(501081, 'buffer', buffer, false, false), J$.T(501121, {
                                    $ref: J$.G(501097, J$.R(501089, 'value', value, false, false), 'namespace'),
                                    $id: J$.G(501113, J$.R(501105, 'value', value, false, false), 'oid')
                                }, 11, false), J$.T(501129, false, 23, false), J$.R(501137, 'index', index, false, false), J$.B(69722, '+', J$.R(501145, 'depth', depth, false, false), J$.T(501153, 1, 22, false)), J$.R(501161, 'serializeFunctions', serializeFunctions, false, false)), endIndex, false, false);
                            }
                            var size = J$.W(501201, 'size', J$.B(69730, '-', J$.R(501185, 'endIndex', endIndex, false, false), J$.R(501193, 'startIndex', startIndex, false, false)), size, false, false);
                            J$.P(501249, J$.R(501209, 'buffer', buffer, false, false), J$.B(69754, '-', startIndex = J$.W(501225, 'startIndex', J$.B(69746, '+', J$.U(69738, '+', J$.R(501217, 'startIndex', startIndex, false, false)), 1), startIndex, false, false), 1), J$.B(69762, '&', J$.R(501233, 'size', size, false, false), J$.T(501241, 255, 22, false)));
                            J$.P(501305, J$.R(501257, 'buffer', buffer, false, false), J$.B(69786, '-', startIndex = J$.W(501273, 'startIndex', J$.B(69778, '+', J$.U(69770, '+', J$.R(501265, 'startIndex', startIndex, false, false)), 1), startIndex, false, false), 1), J$.B(69802, '&', J$.B(69794, '>>', J$.R(501281, 'size', size, false, false), J$.T(501289, 8, 22, false)), J$.T(501297, 255, 22, false)));
                            J$.P(501361, J$.R(501313, 'buffer', buffer, false, false), J$.B(69826, '-', startIndex = J$.W(501329, 'startIndex', J$.B(69818, '+', J$.U(69810, '+', J$.R(501321, 'startIndex', startIndex, false, false)), 1), startIndex, false, false), 1), J$.B(69842, '&', J$.B(69834, '>>', J$.R(501337, 'size', size, false, false), J$.T(501345, 16, 22, false)), J$.T(501353, 255, 22, false)));
                            J$.P(501417, J$.R(501369, 'buffer', buffer, false, false), J$.B(69866, '-', startIndex = J$.W(501385, 'startIndex', J$.B(69858, '+', J$.U(69850, '+', J$.R(501377, 'startIndex', startIndex, false, false)), 1), startIndex, false, false), 1), J$.B(69882, '&', J$.B(69874, '>>', J$.R(501393, 'size', size, false, false), J$.T(501401, 24, 22, false)), J$.T(501409, 255, 22, false)));
                            return J$.Rt(501433, J$.R(501425, 'endIndex', endIndex, false, false));
                        } catch (J$e) {
                            J$.Ex(511209, J$e);
                        } finally {
                            if (J$.Fr(511217))
                                continue jalangiLabel24;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false), serializeDBRef, false, true);
            var serializeInto = J$.W(509681, 'serializeInto', J$.T(509673, function serializeInto(buffer, object, checkKeys, startingIndex, depth, serializeFunctions, ignoreUndefined, path) {
                jalangiLabel25:
                    while (true) {
                        try {
                            J$.Fe(509521, arguments.callee, this, arguments);
                            arguments = J$.N(509529, 'arguments', arguments, true, false, false);
                            buffer = J$.N(509537, 'buffer', buffer, true, false, false);
                            object = J$.N(509545, 'object', object, true, false, false);
                            checkKeys = J$.N(509553, 'checkKeys', checkKeys, true, false, false);
                            startingIndex = J$.N(509561, 'startingIndex', startingIndex, true, false, false);
                            depth = J$.N(509569, 'depth', depth, true, false, false);
                            serializeFunctions = J$.N(509577, 'serializeFunctions', serializeFunctions, true, false, false);
                            ignoreUndefined = J$.N(509585, 'ignoreUndefined', ignoreUndefined, true, false, false);
                            path = J$.N(509593, 'path', path, true, false, false);
                            J$.N(509601, 'index', index, false, false, false);
                            J$.N(509609, 'i', i, false, false, false);
                            J$.N(509617, 'key', key, false, false, false);
                            J$.N(509625, 'value', value, false, false, false);
                            J$.N(509633, 'type', type, false, false, false);
                            J$.N(509641, 'iterator', iterator, false, false, false);
                            J$.N(509649, 'done', done, false, false, false);
                            J$.N(509657, 'entry', entry, false, false, false);
                            J$.N(509665, 'size', size, false, false, false);
                            startingIndex = J$.W(501577, 'startingIndex', J$.C(27832, J$.R(501561, 'startingIndex', startingIndex, false, false)) ? J$._() : J$.T(501569, 0, 22, false), startingIndex, false, false);
                            path = J$.W(501601, 'path', J$.C(27840, J$.R(501585, 'path', path, false, false)) ? J$._() : J$.T(501593, [], 10, false), path, false, false);
                            J$.M(501625, J$.R(501609, 'path', path, false, false), 'push', false)(J$.R(501617, 'object', object, false, false));
                            var index = J$.W(501649, 'index', J$.B(69890, '+', J$.R(501633, 'startingIndex', startingIndex, false, false), J$.T(501641, 4, 22, false)), index, false, false);
                            if (J$.C(28768, J$.M(501673, J$.I(typeof Array === 'undefined' ? Array = J$.R(501657, 'Array', undefined, true, true) : Array = J$.R(501657, 'Array', Array, true, true)), 'isArray', false)(J$.R(501665, 'object', object, false, false)))) {
                                for (var i = J$.W(501689, 'i', J$.T(501681, 0, 22, false), i, false, false); J$.C(28104, J$.B(69898, '<', J$.R(501697, 'i', i, false, false), J$.G(501713, J$.R(501705, 'object', object, false, false), 'length'))); J$.B(69922, '-', i = J$.W(501729, 'i', J$.B(69914, '+', J$.U(69906, '+', J$.R(501721, 'i', i, false, false)), 1), i, false, false), 1)) {
                                    var key = J$.W(501753, 'key', J$.B(69930, '+', J$.T(501737, '', 21, false), J$.R(501745, 'i', i, false, false)), key, false, false);
                                    var value = J$.W(501785, 'value', J$.G(501777, J$.R(501761, 'object', object, false, false), J$.R(501769, 'i', i, false, false)), value, false, false);
                                    if (J$.C(27864, J$.C(27848, J$.R(501793, 'value', value, false, false)) ? J$.G(501809, J$.R(501801, 'value', value, false, false), 'toBSON') : J$._())) {
                                        if (J$.C(27856, J$.B(69946, '!==', J$.U(69938, 'typeof', J$.G(501825, J$.R(501817, 'value', value, false, false), 'toBSON')), J$.T(501833, 'function', 21, false))))
                                            throw J$.F(501857, J$.I(typeof Error === 'undefined' ? Error = J$.R(501841, 'Error', undefined, true, true) : Error = J$.R(501841, 'Error', Error, true, true)), true)(J$.T(501849, 'toBSON is not a function', 21, false));
                                        value = J$.W(501881, 'value', J$.M(501873, J$.R(501865, 'value', value, false, false), 'toBSON', false)(), value, false, false);
                                    }
                                    var type = J$.W(501913, 'type', J$.F(501905, J$.R(501889, '_typeof', _typeof, false, true), false)(J$.R(501897, 'value', value, false, false)), type, false, false);
                                    if (J$.C(28096, J$.B(69954, '===', J$.R(501921, 'type', type, false, false), J$.T(501929, 'string', 21, false)))) {
                                        index = J$.W(501993, 'index', J$.F(501985, J$.R(501937, 'serializeString', serializeString, false, true), false)(J$.R(501945, 'buffer', buffer, false, false), J$.R(501953, 'key', key, false, false), J$.R(501961, 'value', value, false, false), J$.R(501969, 'index', index, false, false), J$.T(501977, true, 23, false)), index, false, false);
                                    } else if (J$.C(28088, J$.B(69962, '===', J$.R(502001, 'type', type, false, false), J$.T(502009, 'number', 21, false)))) {
                                        index = J$.W(502073, 'index', J$.F(502065, J$.R(502017, 'serializeNumber', serializeNumber, false, true), false)(J$.R(502025, 'buffer', buffer, false, false), J$.R(502033, 'key', key, false, false), J$.R(502041, 'value', value, false, false), J$.R(502049, 'index', index, false, false), J$.T(502057, true, 23, false)), index, false, false);
                                    } else if (J$.C(28080, J$.B(69970, '===', J$.R(502081, 'type', type, false, false), J$.T(502089, 'boolean', 21, false)))) {
                                        index = J$.W(502153, 'index', J$.F(502145, J$.R(502097, 'serializeBoolean', serializeBoolean, false, true), false)(J$.R(502105, 'buffer', buffer, false, false), J$.R(502113, 'key', key, false, false), J$.R(502121, 'value', value, false, false), J$.R(502129, 'index', index, false, false), J$.T(502137, true, 23, false)), index, false, false);
                                    } else if (J$.C(28072, J$.C(27872, J$.B(69978, 'instanceof', J$.R(502161, 'value', value, false, false), J$.I(typeof Date === 'undefined' ? Date = J$.R(502169, 'Date', undefined, true, true) : Date = J$.R(502169, 'Date', Date, true, true)))) ? J$._() : J$.F(502193, J$.R(502177, 'isDate', isDate, false, true), false)(J$.R(502185, 'value', value, false, false)))) {
                                        index = J$.W(502257, 'index', J$.F(502249, J$.R(502201, 'serializeDate', serializeDate, false, true), false)(J$.R(502209, 'buffer', buffer, false, false), J$.R(502217, 'key', key, false, false), J$.R(502225, 'value', value, false, false), J$.R(502233, 'index', index, false, false), J$.T(502241, true, 23, false)), index, false, false);
                                    } else if (J$.C(28064, J$.B(69986, '===', J$.R(502265, 'value', value, false, false), J$.T(502273, undefined, 24, false)))) {
                                        index = J$.W(502337, 'index', J$.F(502329, J$.R(502281, 'serializeNull', serializeNull, false, true), false)(J$.R(502289, 'buffer', buffer, false, false), J$.R(502297, 'key', key, false, false), J$.R(502305, 'value', value, false, false), J$.R(502313, 'index', index, false, false), J$.T(502321, true, 23, false)), index, false, false);
                                    } else if (J$.C(28056, J$.B(69994, '===', J$.R(502345, 'value', value, false, false), J$.T(502353, null, 25, false)))) {
                                        index = J$.W(502417, 'index', J$.F(502409, J$.R(502361, 'serializeNull', serializeNull, false, true), false)(J$.R(502369, 'buffer', buffer, false, false), J$.R(502377, 'key', key, false, false), J$.R(502385, 'value', value, false, false), J$.R(502393, 'index', index, false, false), J$.T(502401, true, 23, false)), index, false, false);
                                    } else if (J$.C(28048, J$.C(27880, J$.B(70002, '===', J$.G(502441, J$.R(502425, 'value', value, false, false), J$.T(502433, '_bsontype', 21, false)), J$.T(502449, 'ObjectID', 21, false))) ? J$._() : J$.B(70010, '===', J$.G(502473, J$.R(502457, 'value', value, false, false), J$.T(502465, '_bsontype', 21, false)), J$.T(502481, 'ObjectId', 21, false)))) {
                                        index = J$.W(502545, 'index', J$.F(502537, J$.R(502489, 'serializeObjectId', serializeObjectId, false, true), false)(J$.R(502497, 'buffer', buffer, false, false), J$.R(502505, 'key', key, false, false), J$.R(502513, 'value', value, false, false), J$.R(502521, 'index', index, false, false), J$.T(502529, true, 23, false)), index, false, false);
                                    } else if (J$.C(28040, J$.M(502569, J$.I(typeof Buffer === 'undefined' ? Buffer = J$.R(502553, 'Buffer', undefined, true, true) : Buffer = J$.R(502553, 'Buffer', Buffer, true, true)), 'isBuffer', false)(J$.R(502561, 'value', value, false, false)))) {
                                        index = J$.W(502633, 'index', J$.F(502625, J$.R(502577, 'serializeBuffer', serializeBuffer, false, true), false)(J$.R(502585, 'buffer', buffer, false, false), J$.R(502593, 'key', key, false, false), J$.R(502601, 'value', value, false, false), J$.R(502609, 'index', index, false, false), J$.T(502617, true, 23, false)), index, false, false);
                                    } else if (J$.C(28032, J$.C(27888, J$.B(70018, 'instanceof', J$.R(502641, 'value', value, false, false), J$.I(typeof RegExp === 'undefined' ? RegExp = J$.R(502649, 'RegExp', undefined, true, true) : RegExp = J$.R(502649, 'RegExp', RegExp, true, true)))) ? J$._() : J$.F(502673, J$.R(502657, 'isRegExp', isRegExp, false, true), false)(J$.R(502665, 'value', value, false, false)))) {
                                        index = J$.W(502737, 'index', J$.F(502729, J$.R(502681, 'serializeRegExp', serializeRegExp, false, true), false)(J$.R(502689, 'buffer', buffer, false, false), J$.R(502697, 'key', key, false, false), J$.R(502705, 'value', value, false, false), J$.R(502713, 'index', index, false, false), J$.T(502721, true, 23, false)), index, false, false);
                                    } else if (J$.C(28024, J$.C(27896, J$.B(70026, '===', J$.R(502745, 'type', type, false, false), J$.T(502753, 'object', 21, false))) ? J$.B(70034, '==', J$.G(502777, J$.R(502761, 'value', value, false, false), J$.T(502769, '_bsontype', 21, false)), J$.T(502785, null, 25, false)) : J$._())) {
                                        index = J$.W(502889, 'index', J$.F(502881, J$.R(502793, 'serializeObject', serializeObject, false, true), false)(J$.R(502801, 'buffer', buffer, false, false), J$.R(502809, 'key', key, false, false), J$.R(502817, 'value', value, false, false), J$.R(502825, 'index', index, false, false), J$.R(502833, 'checkKeys', checkKeys, false, false), J$.R(502841, 'depth', depth, false, false), J$.R(502849, 'serializeFunctions', serializeFunctions, false, false), J$.R(502857, 'ignoreUndefined', ignoreUndefined, false, false), J$.T(502865, true, 23, false), J$.R(502873, 'path', path, false, false)), index, false, false);
                                    } else if (J$.C(28016, J$.C(27904, J$.B(70042, '===', J$.R(502897, 'type', type, false, false), J$.T(502905, 'object', 21, false))) ? J$.B(70050, '===', J$.G(502929, J$.R(502913, 'value', value, false, false), J$.T(502921, '_bsontype', 21, false)), J$.T(502937, 'Decimal128', 21, false)) : J$._())) {
                                        index = J$.W(503001, 'index', J$.F(502993, J$.R(502945, 'serializeDecimal128', serializeDecimal128, false, true), false)(J$.R(502953, 'buffer', buffer, false, false), J$.R(502961, 'key', key, false, false), J$.R(502969, 'value', value, false, false), J$.R(502977, 'index', index, false, false), J$.T(502985, true, 23, false)), index, false, false);
                                    } else if (J$.C(28008, J$.C(27912, J$.B(70058, '===', J$.G(503025, J$.R(503009, 'value', value, false, false), J$.T(503017, '_bsontype', 21, false)), J$.T(503033, 'Long', 21, false))) ? J$._() : J$.B(70066, '===', J$.G(503057, J$.R(503041, 'value', value, false, false), J$.T(503049, '_bsontype', 21, false)), J$.T(503065, 'Timestamp', 21, false)))) {
                                        index = J$.W(503129, 'index', J$.F(503121, J$.R(503073, 'serializeLong', serializeLong, false, true), false)(J$.R(503081, 'buffer', buffer, false, false), J$.R(503089, 'key', key, false, false), J$.R(503097, 'value', value, false, false), J$.R(503105, 'index', index, false, false), J$.T(503113, true, 23, false)), index, false, false);
                                    } else if (J$.C(28000, J$.B(70074, '===', J$.G(503153, J$.R(503137, 'value', value, false, false), J$.T(503145, '_bsontype', 21, false)), J$.T(503161, 'Double', 21, false)))) {
                                        index = J$.W(503225, 'index', J$.F(503217, J$.R(503169, 'serializeDouble', serializeDouble, false, true), false)(J$.R(503177, 'buffer', buffer, false, false), J$.R(503185, 'key', key, false, false), J$.R(503193, 'value', value, false, false), J$.R(503201, 'index', index, false, false), J$.T(503209, true, 23, false)), index, false, false);
                                    } else if (J$.C(27992, J$.C(27920, J$.B(70090, '===', J$.U(70082, 'typeof', J$.R(503233, 'value', value, false, false)), J$.T(503241, 'function', 21, false))) ? J$.R(503249, 'serializeFunctions', serializeFunctions, false, false) : J$._())) {
                                        index = J$.W(503337, 'index', J$.F(503329, J$.R(503257, 'serializeFunction', serializeFunction, false, true), false)(J$.R(503265, 'buffer', buffer, false, false), J$.R(503273, 'key', key, false, false), J$.R(503281, 'value', value, false, false), J$.R(503289, 'index', index, false, false), J$.R(503297, 'checkKeys', checkKeys, false, false), J$.R(503305, 'depth', depth, false, false), J$.R(503313, 'serializeFunctions', serializeFunctions, false, false), J$.T(503321, true, 23, false)), index, false, false);
                                    } else if (J$.C(27984, J$.B(70098, '===', J$.G(503361, J$.R(503345, 'value', value, false, false), J$.T(503353, '_bsontype', 21, false)), J$.T(503369, 'Code', 21, false)))) {
                                        index = J$.W(503465, 'index', J$.F(503457, J$.R(503377, 'serializeCode', serializeCode, false, true), false)(J$.R(503385, 'buffer', buffer, false, false), J$.R(503393, 'key', key, false, false), J$.R(503401, 'value', value, false, false), J$.R(503409, 'index', index, false, false), J$.R(503417, 'checkKeys', checkKeys, false, false), J$.R(503425, 'depth', depth, false, false), J$.R(503433, 'serializeFunctions', serializeFunctions, false, false), J$.R(503441, 'ignoreUndefined', ignoreUndefined, false, false), J$.T(503449, true, 23, false)), index, false, false);
                                    } else if (J$.C(27976, J$.B(70106, '===', J$.G(503489, J$.R(503473, 'value', value, false, false), J$.T(503481, '_bsontype', 21, false)), J$.T(503497, 'Binary', 21, false)))) {
                                        index = J$.W(503561, 'index', J$.F(503553, J$.R(503505, 'serializeBinary', serializeBinary, false, true), false)(J$.R(503513, 'buffer', buffer, false, false), J$.R(503521, 'key', key, false, false), J$.R(503529, 'value', value, false, false), J$.R(503537, 'index', index, false, false), J$.T(503545, true, 23, false)), index, false, false);
                                    } else if (J$.C(27968, J$.B(70114, '===', J$.G(503585, J$.R(503569, 'value', value, false, false), J$.T(503577, '_bsontype', 21, false)), J$.T(503593, 'Symbol', 21, false)))) {
                                        index = J$.W(503657, 'index', J$.F(503649, J$.R(503601, 'serializeSymbol', serializeSymbol, false, true), false)(J$.R(503609, 'buffer', buffer, false, false), J$.R(503617, 'key', key, false, false), J$.R(503625, 'value', value, false, false), J$.R(503633, 'index', index, false, false), J$.T(503641, true, 23, false)), index, false, false);
                                    } else if (J$.C(27960, J$.B(70122, '===', J$.G(503681, J$.R(503665, 'value', value, false, false), J$.T(503673, '_bsontype', 21, false)), J$.T(503689, 'DBRef', 21, false)))) {
                                        index = J$.W(503769, 'index', J$.F(503761, J$.R(503697, 'serializeDBRef', serializeDBRef, false, true), false)(J$.R(503705, 'buffer', buffer, false, false), J$.R(503713, 'key', key, false, false), J$.R(503721, 'value', value, false, false), J$.R(503729, 'index', index, false, false), J$.R(503737, 'depth', depth, false, false), J$.R(503745, 'serializeFunctions', serializeFunctions, false, false), J$.T(503753, true, 23, false)), index, false, false);
                                    } else if (J$.C(27952, J$.B(70130, '===', J$.G(503793, J$.R(503777, 'value', value, false, false), J$.T(503785, '_bsontype', 21, false)), J$.T(503801, 'BSONRegExp', 21, false)))) {
                                        index = J$.W(503865, 'index', J$.F(503857, J$.R(503809, 'serializeBSONRegExp', serializeBSONRegExp, false, true), false)(J$.R(503817, 'buffer', buffer, false, false), J$.R(503825, 'key', key, false, false), J$.R(503833, 'value', value, false, false), J$.R(503841, 'index', index, false, false), J$.T(503849, true, 23, false)), index, false, false);
                                    } else if (J$.C(27944, J$.B(70138, '===', J$.G(503889, J$.R(503873, 'value', value, false, false), J$.T(503881, '_bsontype', 21, false)), J$.T(503897, 'Int32', 21, false)))) {
                                        index = J$.W(503961, 'index', J$.F(503953, J$.R(503905, 'serializeInt32', serializeInt32, false, true), false)(J$.R(503913, 'buffer', buffer, false, false), J$.R(503921, 'key', key, false, false), J$.R(503929, 'value', value, false, false), J$.R(503937, 'index', index, false, false), J$.T(503945, true, 23, false)), index, false, false);
                                    } else if (J$.C(27936, J$.C(27928, J$.B(70146, '===', J$.G(503985, J$.R(503969, 'value', value, false, false), J$.T(503977, '_bsontype', 21, false)), J$.T(503993, 'MinKey', 21, false))) ? J$._() : J$.B(70154, '===', J$.G(504017, J$.R(504001, 'value', value, false, false), J$.T(504009, '_bsontype', 21, false)), J$.T(504025, 'MaxKey', 21, false)))) {
                                        index = J$.W(504089, 'index', J$.F(504081, J$.R(504033, 'serializeMinMax', serializeMinMax, false, true), false)(J$.R(504041, 'buffer', buffer, false, false), J$.R(504049, 'key', key, false, false), J$.R(504057, 'value', value, false, false), J$.R(504065, 'index', index, false, false), J$.T(504073, true, 23, false)), index, false, false);
                                    }
                                }
                            } else if (J$.C(28760, J$.B(70162, 'instanceof', J$.R(504097, 'object', object, false, false), J$.R(504105, 'Map', Map, false, true)))) {
                                var iterator = J$.W(504129, 'iterator', J$.M(504121, J$.R(504113, 'object', object, false, false), 'entries', false)(), iterator, false, false);
                                var done = J$.W(504145, 'done', J$.T(504137, false, 23, false), done, false, false);
                                while (J$.C(28408, J$.U(70170, '!', J$.R(504153, 'done', done, false, false)))) {
                                    var entry = J$.W(504177, 'entry', J$.M(504169, J$.R(504161, 'iterator', iterator, false, false), 'next', false)(), entry, false, false);
                                    done = J$.W(504201, 'done', J$.G(504193, J$.R(504185, 'entry', entry, false, false), 'done'), done, false, false);
                                    if (J$.C(28112, J$.R(504209, 'done', done, false, false)))
                                        continue;
                                    key = J$.W(504249, 'key', J$.G(504241, J$.G(504225, J$.R(504217, 'entry', entry, false, false), 'value'), J$.T(504233, 0, 22, false)), key, false, false);
                                    value = J$.W(504289, 'value', J$.G(504281, J$.G(504265, J$.R(504257, 'entry', entry, false, false), 'value'), J$.T(504273, 1, 22, false)), value, false, false);
                                    type = J$.W(504321, 'type', J$.F(504313, J$.R(504297, '_typeof', _typeof, false, true), false)(J$.R(504305, 'value', value, false, false)), type, false, false);
                                    if (J$.C(28160, J$.C(28120, J$.B(70186, '===', J$.U(70178, 'typeof', J$.R(504329, 'key', key, false, false)), J$.T(504337, 'string', 21, false))) ? J$.B(70202, '===', J$.M(504361, J$.R(504345, 'ignoreKeys', ignoreKeys, false, true), 'indexOf', false)(J$.R(504353, 'key', key, false, false)), J$.U(70194, '-', J$.T(504369, 1, 22, false))) : J$._())) {
                                        if (J$.C(28128, J$.B(70210, '!=', J$.M(504393, J$.R(504377, 'key', key, false, false), 'match', false)(J$.R(504385, 'regexp', regexp, false, true)), J$.T(504401, null, 25, false)))) {
                                            throw J$.F(504441, J$.I(typeof Error === 'undefined' ? Error = J$.R(504409, 'Error', undefined, true, true) : Error = J$.R(504409, 'Error', Error, true, true)), false)(J$.B(70226, '+', J$.B(70218, '+', J$.T(504417, 'key ', 21, false), J$.R(504425, 'key', key, false, false)), J$.T(504433, ' must not contain null bytes', 21, false)));
                                        }
                                        if (J$.C(28152, J$.R(504449, 'checkKeys', checkKeys, false, false))) {
                                            if (J$.C(28144, J$.B(70234, '===', J$.T(504457, '$', 21, false), J$.G(504481, J$.R(504465, 'key', key, false, false), J$.T(504473, 0, 22, false))))) {
                                                throw J$.F(504521, J$.I(typeof Error === 'undefined' ? Error = J$.R(504489, 'Error', undefined, true, true) : Error = J$.R(504489, 'Error', Error, true, true)), false)(J$.B(70250, '+', J$.B(70242, '+', J$.T(504497, 'key ', 21, false), J$.R(504505, 'key', key, false, false)), J$.T(504513, ' must not start with \'$\'', 21, false)));
                                            } else if (J$.C(28136, J$.U(70258, '~', J$.M(504545, J$.R(504529, 'key', key, false, false), 'indexOf', false)(J$.T(504537, '.', 21, false))))) {
                                                throw J$.F(504585, J$.I(typeof Error === 'undefined' ? Error = J$.R(504553, 'Error', undefined, true, true) : Error = J$.R(504553, 'Error', Error, true, true)), false)(J$.B(70274, '+', J$.B(70266, '+', J$.T(504561, 'key ', 21, false), J$.R(504569, 'key', key, false, false)), J$.T(504577, ' must not contain \'.\'', 21, false)));
                                            }
                                        }
                                    }
                                    if (J$.C(28400, J$.B(70282, '===', J$.R(504593, 'type', type, false, false), J$.T(504601, 'string', 21, false)))) {
                                        index = J$.W(504657, 'index', J$.F(504649, J$.R(504609, 'serializeString', serializeString, false, true), false)(J$.R(504617, 'buffer', buffer, false, false), J$.R(504625, 'key', key, false, false), J$.R(504633, 'value', value, false, false), J$.R(504641, 'index', index, false, false)), index, false, false);
                                    } else if (J$.C(28392, J$.B(70290, '===', J$.R(504665, 'type', type, false, false), J$.T(504673, 'number', 21, false)))) {
                                        index = J$.W(504729, 'index', J$.F(504721, J$.R(504681, 'serializeNumber', serializeNumber, false, true), false)(J$.R(504689, 'buffer', buffer, false, false), J$.R(504697, 'key', key, false, false), J$.R(504705, 'value', value, false, false), J$.R(504713, 'index', index, false, false)), index, false, false);
                                    } else if (J$.C(28384, J$.B(70298, '===', J$.R(504737, 'type', type, false, false), J$.T(504745, 'boolean', 21, false)))) {
                                        index = J$.W(504801, 'index', J$.F(504793, J$.R(504753, 'serializeBoolean', serializeBoolean, false, true), false)(J$.R(504761, 'buffer', buffer, false, false), J$.R(504769, 'key', key, false, false), J$.R(504777, 'value', value, false, false), J$.R(504785, 'index', index, false, false)), index, false, false);
                                    } else if (J$.C(28376, J$.C(28168, J$.B(70306, 'instanceof', J$.R(504809, 'value', value, false, false), J$.I(typeof Date === 'undefined' ? Date = J$.R(504817, 'Date', undefined, true, true) : Date = J$.R(504817, 'Date', Date, true, true)))) ? J$._() : J$.F(504841, J$.R(504825, 'isDate', isDate, false, true), false)(J$.R(504833, 'value', value, false, false)))) {
                                        index = J$.W(504897, 'index', J$.F(504889, J$.R(504849, 'serializeDate', serializeDate, false, true), false)(J$.R(504857, 'buffer', buffer, false, false), J$.R(504865, 'key', key, false, false), J$.R(504873, 'value', value, false, false), J$.R(504881, 'index', index, false, false)), index, false, false);
                                    } else if (J$.C(28368, J$.C(28184, J$.B(70314, '===', J$.R(504905, 'value', value, false, false), J$.T(504913, null, 25, false))) ? J$._() : J$.C(28176, J$.B(70322, '===', J$.R(504921, 'value', value, false, false), J$.T(504929, undefined, 24, false))) ? J$.B(70330, '===', J$.R(504937, 'ignoreUndefined', ignoreUndefined, false, false), J$.T(504945, false, 23, false)) : J$._())) {
                                        index = J$.W(505001, 'index', J$.F(504993, J$.R(504953, 'serializeNull', serializeNull, false, true), false)(J$.R(504961, 'buffer', buffer, false, false), J$.R(504969, 'key', key, false, false), J$.R(504977, 'value', value, false, false), J$.R(504985, 'index', index, false, false)), index, false, false);
                                    } else if (J$.C(28360, J$.C(28192, J$.B(70338, '===', J$.G(505025, J$.R(505009, 'value', value, false, false), J$.T(505017, '_bsontype', 21, false)), J$.T(505033, 'ObjectID', 21, false))) ? J$._() : J$.B(70346, '===', J$.G(505057, J$.R(505041, 'value', value, false, false), J$.T(505049, '_bsontype', 21, false)), J$.T(505065, 'ObjectId', 21, false)))) {
                                        index = J$.W(505121, 'index', J$.F(505113, J$.R(505073, 'serializeObjectId', serializeObjectId, false, true), false)(J$.R(505081, 'buffer', buffer, false, false), J$.R(505089, 'key', key, false, false), J$.R(505097, 'value', value, false, false), J$.R(505105, 'index', index, false, false)), index, false, false);
                                    } else if (J$.C(28352, J$.M(505145, J$.I(typeof Buffer === 'undefined' ? Buffer = J$.R(505129, 'Buffer', undefined, true, true) : Buffer = J$.R(505129, 'Buffer', Buffer, true, true)), 'isBuffer', false)(J$.R(505137, 'value', value, false, false)))) {
                                        index = J$.W(505201, 'index', J$.F(505193, J$.R(505153, 'serializeBuffer', serializeBuffer, false, true), false)(J$.R(505161, 'buffer', buffer, false, false), J$.R(505169, 'key', key, false, false), J$.R(505177, 'value', value, false, false), J$.R(505185, 'index', index, false, false)), index, false, false);
                                    } else if (J$.C(28344, J$.C(28200, J$.B(70354, 'instanceof', J$.R(505209, 'value', value, false, false), J$.I(typeof RegExp === 'undefined' ? RegExp = J$.R(505217, 'RegExp', undefined, true, true) : RegExp = J$.R(505217, 'RegExp', RegExp, true, true)))) ? J$._() : J$.F(505241, J$.R(505225, 'isRegExp', isRegExp, false, true), false)(J$.R(505233, 'value', value, false, false)))) {
                                        index = J$.W(505297, 'index', J$.F(505289, J$.R(505249, 'serializeRegExp', serializeRegExp, false, true), false)(J$.R(505257, 'buffer', buffer, false, false), J$.R(505265, 'key', key, false, false), J$.R(505273, 'value', value, false, false), J$.R(505281, 'index', index, false, false)), index, false, false);
                                    } else if (J$.C(28336, J$.C(28208, J$.B(70362, '===', J$.R(505305, 'type', type, false, false), J$.T(505313, 'object', 21, false))) ? J$.B(70370, '==', J$.G(505337, J$.R(505321, 'value', value, false, false), J$.T(505329, '_bsontype', 21, false)), J$.T(505345, null, 25, false)) : J$._())) {
                                        index = J$.W(505449, 'index', J$.F(505441, J$.R(505353, 'serializeObject', serializeObject, false, true), false)(J$.R(505361, 'buffer', buffer, false, false), J$.R(505369, 'key', key, false, false), J$.R(505377, 'value', value, false, false), J$.R(505385, 'index', index, false, false), J$.R(505393, 'checkKeys', checkKeys, false, false), J$.R(505401, 'depth', depth, false, false), J$.R(505409, 'serializeFunctions', serializeFunctions, false, false), J$.R(505417, 'ignoreUndefined', ignoreUndefined, false, false), J$.T(505425, false, 23, false), J$.R(505433, 'path', path, false, false)), index, false, false);
                                    } else if (J$.C(28328, J$.C(28216, J$.B(70378, '===', J$.R(505457, 'type', type, false, false), J$.T(505465, 'object', 21, false))) ? J$.B(70386, '===', J$.G(505489, J$.R(505473, 'value', value, false, false), J$.T(505481, '_bsontype', 21, false)), J$.T(505497, 'Decimal128', 21, false)) : J$._())) {
                                        index = J$.W(505553, 'index', J$.F(505545, J$.R(505505, 'serializeDecimal128', serializeDecimal128, false, true), false)(J$.R(505513, 'buffer', buffer, false, false), J$.R(505521, 'key', key, false, false), J$.R(505529, 'value', value, false, false), J$.R(505537, 'index', index, false, false)), index, false, false);
                                    } else if (J$.C(28320, J$.C(28224, J$.B(70394, '===', J$.G(505577, J$.R(505561, 'value', value, false, false), J$.T(505569, '_bsontype', 21, false)), J$.T(505585, 'Long', 21, false))) ? J$._() : J$.B(70402, '===', J$.G(505609, J$.R(505593, 'value', value, false, false), J$.T(505601, '_bsontype', 21, false)), J$.T(505617, 'Timestamp', 21, false)))) {
                                        index = J$.W(505673, 'index', J$.F(505665, J$.R(505625, 'serializeLong', serializeLong, false, true), false)(J$.R(505633, 'buffer', buffer, false, false), J$.R(505641, 'key', key, false, false), J$.R(505649, 'value', value, false, false), J$.R(505657, 'index', index, false, false)), index, false, false);
                                    } else if (J$.C(28312, J$.B(70410, '===', J$.G(505697, J$.R(505681, 'value', value, false, false), J$.T(505689, '_bsontype', 21, false)), J$.T(505705, 'Double', 21, false)))) {
                                        index = J$.W(505761, 'index', J$.F(505753, J$.R(505713, 'serializeDouble', serializeDouble, false, true), false)(J$.R(505721, 'buffer', buffer, false, false), J$.R(505729, 'key', key, false, false), J$.R(505737, 'value', value, false, false), J$.R(505745, 'index', index, false, false)), index, false, false);
                                    } else if (J$.C(28304, J$.B(70418, '===', J$.G(505785, J$.R(505769, 'value', value, false, false), J$.T(505777, '_bsontype', 21, false)), J$.T(505793, 'Code', 21, false)))) {
                                        index = J$.W(505881, 'index', J$.F(505873, J$.R(505801, 'serializeCode', serializeCode, false, true), false)(J$.R(505809, 'buffer', buffer, false, false), J$.R(505817, 'key', key, false, false), J$.R(505825, 'value', value, false, false), J$.R(505833, 'index', index, false, false), J$.R(505841, 'checkKeys', checkKeys, false, false), J$.R(505849, 'depth', depth, false, false), J$.R(505857, 'serializeFunctions', serializeFunctions, false, false), J$.R(505865, 'ignoreUndefined', ignoreUndefined, false, false)), index, false, false);
                                    } else if (J$.C(28296, J$.C(28232, J$.B(70434, '===', J$.U(70426, 'typeof', J$.R(505889, 'value', value, false, false)), J$.T(505897, 'function', 21, false))) ? J$.R(505905, 'serializeFunctions', serializeFunctions, false, false) : J$._())) {
                                        index = J$.W(505985, 'index', J$.F(505977, J$.R(505913, 'serializeFunction', serializeFunction, false, true), false)(J$.R(505921, 'buffer', buffer, false, false), J$.R(505929, 'key', key, false, false), J$.R(505937, 'value', value, false, false), J$.R(505945, 'index', index, false, false), J$.R(505953, 'checkKeys', checkKeys, false, false), J$.R(505961, 'depth', depth, false, false), J$.R(505969, 'serializeFunctions', serializeFunctions, false, false)), index, false, false);
                                    } else if (J$.C(28288, J$.B(70442, '===', J$.G(506009, J$.R(505993, 'value', value, false, false), J$.T(506001, '_bsontype', 21, false)), J$.T(506017, 'Binary', 21, false)))) {
                                        index = J$.W(506073, 'index', J$.F(506065, J$.R(506025, 'serializeBinary', serializeBinary, false, true), false)(J$.R(506033, 'buffer', buffer, false, false), J$.R(506041, 'key', key, false, false), J$.R(506049, 'value', value, false, false), J$.R(506057, 'index', index, false, false)), index, false, false);
                                    } else if (J$.C(28280, J$.B(70450, '===', J$.G(506097, J$.R(506081, 'value', value, false, false), J$.T(506089, '_bsontype', 21, false)), J$.T(506105, 'Symbol', 21, false)))) {
                                        index = J$.W(506161, 'index', J$.F(506153, J$.R(506113, 'serializeSymbol', serializeSymbol, false, true), false)(J$.R(506121, 'buffer', buffer, false, false), J$.R(506129, 'key', key, false, false), J$.R(506137, 'value', value, false, false), J$.R(506145, 'index', index, false, false)), index, false, false);
                                    } else if (J$.C(28272, J$.B(70458, '===', J$.G(506185, J$.R(506169, 'value', value, false, false), J$.T(506177, '_bsontype', 21, false)), J$.T(506193, 'DBRef', 21, false)))) {
                                        index = J$.W(506265, 'index', J$.F(506257, J$.R(506201, 'serializeDBRef', serializeDBRef, false, true), false)(J$.R(506209, 'buffer', buffer, false, false), J$.R(506217, 'key', key, false, false), J$.R(506225, 'value', value, false, false), J$.R(506233, 'index', index, false, false), J$.R(506241, 'depth', depth, false, false), J$.R(506249, 'serializeFunctions', serializeFunctions, false, false)), index, false, false);
                                    } else if (J$.C(28264, J$.B(70466, '===', J$.G(506289, J$.R(506273, 'value', value, false, false), J$.T(506281, '_bsontype', 21, false)), J$.T(506297, 'BSONRegExp', 21, false)))) {
                                        index = J$.W(506353, 'index', J$.F(506345, J$.R(506305, 'serializeBSONRegExp', serializeBSONRegExp, false, true), false)(J$.R(506313, 'buffer', buffer, false, false), J$.R(506321, 'key', key, false, false), J$.R(506329, 'value', value, false, false), J$.R(506337, 'index', index, false, false)), index, false, false);
                                    } else if (J$.C(28256, J$.B(70474, '===', J$.G(506377, J$.R(506361, 'value', value, false, false), J$.T(506369, '_bsontype', 21, false)), J$.T(506385, 'Int32', 21, false)))) {
                                        index = J$.W(506441, 'index', J$.F(506433, J$.R(506393, 'serializeInt32', serializeInt32, false, true), false)(J$.R(506401, 'buffer', buffer, false, false), J$.R(506409, 'key', key, false, false), J$.R(506417, 'value', value, false, false), J$.R(506425, 'index', index, false, false)), index, false, false);
                                    } else if (J$.C(28248, J$.C(28240, J$.B(70482, '===', J$.G(506465, J$.R(506449, 'value', value, false, false), J$.T(506457, '_bsontype', 21, false)), J$.T(506473, 'MinKey', 21, false))) ? J$._() : J$.B(70490, '===', J$.G(506497, J$.R(506481, 'value', value, false, false), J$.T(506489, '_bsontype', 21, false)), J$.T(506505, 'MaxKey', 21, false)))) {
                                        index = J$.W(506561, 'index', J$.F(506553, J$.R(506513, 'serializeMinMax', serializeMinMax, false, true), false)(J$.R(506521, 'buffer', buffer, false, false), J$.R(506529, 'key', key, false, false), J$.R(506537, 'value', value, false, false), J$.R(506545, 'index', index, false, false)), index, false, false);
                                    }
                                }
                            } else {
                                if (J$.C(28440, J$.G(506577, J$.R(506569, 'object', object, false, false), 'toBSON'))) {
                                    if (J$.C(28416, J$.B(70506, '!==', J$.U(70498, 'typeof', J$.G(506593, J$.R(506585, 'object', object, false, false), 'toBSON')), J$.T(506601, 'function', 21, false))))
                                        throw J$.F(506625, J$.I(typeof Error === 'undefined' ? Error = J$.R(506609, 'Error', undefined, true, true) : Error = J$.R(506609, 'Error', Error, true, true)), true)(J$.T(506617, 'toBSON is not a function', 21, false));
                                    object = J$.W(506649, 'object', J$.M(506641, J$.R(506633, 'object', object, false, false), 'toBSON', false)(), object, false, false);
                                    if (J$.C(28432, J$.C(28424, J$.B(70514, '!=', J$.R(506657, 'object', object, false, false), J$.T(506665, null, 25, false))) ? J$.B(70522, '!==', J$.F(506689, J$.R(506673, '_typeof', _typeof, false, true), false)(J$.R(506681, 'object', object, false, false)), J$.T(506697, 'object', 21, false)) : J$._()))
                                        throw J$.F(506721, J$.I(typeof Error === 'undefined' ? Error = J$.R(506705, 'Error', undefined, true, true) : Error = J$.R(506705, 'Error', Error, true, true)), true)(J$.T(506713, 'toBSON function did not return an object', 21, false));
                                }
                                for (key in J$.H(509193, J$.R(506729, 'object', object, false, false))) {
                                    J$.N(509201, 'key', key, false, true, false);
                                    {
                                        {
                                            value = J$.W(506761, 'value', J$.G(506753, J$.R(506737, 'object', object, false, false), J$.R(506745, 'key', key, false, false)), value, false, false);
                                            if (J$.C(28464, J$.C(28448, J$.R(506769, 'value', value, false, false)) ? J$.G(506785, J$.R(506777, 'value', value, false, false), 'toBSON') : J$._())) {
                                                if (J$.C(28456, J$.B(70538, '!==', J$.U(70530, 'typeof', J$.G(506801, J$.R(506793, 'value', value, false, false), 'toBSON')), J$.T(506809, 'function', 21, false))))
                                                    throw J$.F(506833, J$.I(typeof Error === 'undefined' ? Error = J$.R(506817, 'Error', undefined, true, true) : Error = J$.R(506817, 'Error', Error, true, true)), true)(J$.T(506825, 'toBSON is not a function', 21, false));
                                                value = J$.W(506857, 'value', J$.M(506849, J$.R(506841, 'value', value, false, false), 'toBSON', false)(), value, false, false);
                                            }
                                            type = J$.W(506889, 'type', J$.F(506881, J$.R(506865, '_typeof', _typeof, false, true), false)(J$.R(506873, 'value', value, false, false)), type, false, false);
                                            if (J$.C(28512, J$.C(28472, J$.B(70554, '===', J$.U(70546, 'typeof', J$.R(506897, 'key', key, false, false)), J$.T(506905, 'string', 21, false))) ? J$.B(70570, '===', J$.M(506929, J$.R(506913, 'ignoreKeys', ignoreKeys, false, true), 'indexOf', false)(J$.R(506921, 'key', key, false, false)), J$.U(70562, '-', J$.T(506937, 1, 22, false))) : J$._())) {
                                                if (J$.C(28480, J$.B(70578, '!=', J$.M(506961, J$.R(506945, 'key', key, false, false), 'match', false)(J$.R(506953, 'regexp', regexp, false, true)), J$.T(506969, null, 25, false)))) {
                                                    throw J$.F(507009, J$.I(typeof Error === 'undefined' ? Error = J$.R(506977, 'Error', undefined, true, true) : Error = J$.R(506977, 'Error', Error, true, true)), false)(J$.B(70594, '+', J$.B(70586, '+', J$.T(506985, 'key ', 21, false), J$.R(506993, 'key', key, false, false)), J$.T(507001, ' must not contain null bytes', 21, false)));
                                                }
                                                if (J$.C(28504, J$.R(507017, 'checkKeys', checkKeys, false, false))) {
                                                    if (J$.C(28496, J$.B(70602, '===', J$.T(507025, '$', 21, false), J$.G(507049, J$.R(507033, 'key', key, false, false), J$.T(507041, 0, 22, false))))) {
                                                        throw J$.F(507089, J$.I(typeof Error === 'undefined' ? Error = J$.R(507057, 'Error', undefined, true, true) : Error = J$.R(507057, 'Error', Error, true, true)), false)(J$.B(70618, '+', J$.B(70610, '+', J$.T(507065, 'key ', 21, false), J$.R(507073, 'key', key, false, false)), J$.T(507081, ' must not start with \'$\'', 21, false)));
                                                    } else if (J$.C(28488, J$.U(70626, '~', J$.M(507113, J$.R(507097, 'key', key, false, false), 'indexOf', false)(J$.T(507105, '.', 21, false))))) {
                                                        throw J$.F(507153, J$.I(typeof Error === 'undefined' ? Error = J$.R(507121, 'Error', undefined, true, true) : Error = J$.R(507121, 'Error', Error, true, true)), false)(J$.B(70642, '+', J$.B(70634, '+', J$.T(507129, 'key ', 21, false), J$.R(507137, 'key', key, false, false)), J$.T(507145, ' must not contain \'.\'', 21, false)));
                                                    }
                                                }
                                            }
                                            if (J$.C(28752, J$.B(70650, '===', J$.R(507161, 'type', type, false, false), J$.T(507169, 'string', 21, false)))) {
                                                index = J$.W(507225, 'index', J$.F(507217, J$.R(507177, 'serializeString', serializeString, false, true), false)(J$.R(507185, 'buffer', buffer, false, false), J$.R(507193, 'key', key, false, false), J$.R(507201, 'value', value, false, false), J$.R(507209, 'index', index, false, false)), index, false, false);
                                            } else if (J$.C(28744, J$.B(70658, '===', J$.R(507233, 'type', type, false, false), J$.T(507241, 'number', 21, false)))) {
                                                index = J$.W(507297, 'index', J$.F(507289, J$.R(507249, 'serializeNumber', serializeNumber, false, true), false)(J$.R(507257, 'buffer', buffer, false, false), J$.R(507265, 'key', key, false, false), J$.R(507273, 'value', value, false, false), J$.R(507281, 'index', index, false, false)), index, false, false);
                                            } else if (J$.C(28736, J$.B(70666, '===', J$.R(507305, 'type', type, false, false), J$.T(507313, 'boolean', 21, false)))) {
                                                index = J$.W(507369, 'index', J$.F(507361, J$.R(507321, 'serializeBoolean', serializeBoolean, false, true), false)(J$.R(507329, 'buffer', buffer, false, false), J$.R(507337, 'key', key, false, false), J$.R(507345, 'value', value, false, false), J$.R(507353, 'index', index, false, false)), index, false, false);
                                            } else if (J$.C(28728, J$.C(28520, J$.B(70674, 'instanceof', J$.R(507377, 'value', value, false, false), J$.I(typeof Date === 'undefined' ? Date = J$.R(507385, 'Date', undefined, true, true) : Date = J$.R(507385, 'Date', Date, true, true)))) ? J$._() : J$.F(507409, J$.R(507393, 'isDate', isDate, false, true), false)(J$.R(507401, 'value', value, false, false)))) {
                                                index = J$.W(507465, 'index', J$.F(507457, J$.R(507417, 'serializeDate', serializeDate, false, true), false)(J$.R(507425, 'buffer', buffer, false, false), J$.R(507433, 'key', key, false, false), J$.R(507441, 'value', value, false, false), J$.R(507449, 'index', index, false, false)), index, false, false);
                                            } else if (J$.C(28720, J$.B(70682, '===', J$.R(507473, 'value', value, false, false), J$.T(507481, undefined, 24, false)))) {
                                                if (J$.C(28528, J$.B(70690, '===', J$.R(507489, 'ignoreUndefined', ignoreUndefined, false, false), J$.T(507497, false, 23, false))))
                                                    index = J$.W(507553, 'index', J$.F(507545, J$.R(507505, 'serializeNull', serializeNull, false, true), false)(J$.R(507513, 'buffer', buffer, false, false), J$.R(507521, 'key', key, false, false), J$.R(507529, 'value', value, false, false), J$.R(507537, 'index', index, false, false)), index, false, false);
                                            } else if (J$.C(28712, J$.B(70698, '===', J$.R(507561, 'value', value, false, false), J$.T(507569, null, 25, false)))) {
                                                index = J$.W(507625, 'index', J$.F(507617, J$.R(507577, 'serializeNull', serializeNull, false, true), false)(J$.R(507585, 'buffer', buffer, false, false), J$.R(507593, 'key', key, false, false), J$.R(507601, 'value', value, false, false), J$.R(507609, 'index', index, false, false)), index, false, false);
                                            } else if (J$.C(28704, J$.C(28536, J$.B(70706, '===', J$.G(507649, J$.R(507633, 'value', value, false, false), J$.T(507641, '_bsontype', 21, false)), J$.T(507657, 'ObjectID', 21, false))) ? J$._() : J$.B(70714, '===', J$.G(507681, J$.R(507665, 'value', value, false, false), J$.T(507673, '_bsontype', 21, false)), J$.T(507689, 'ObjectId', 21, false)))) {
                                                index = J$.W(507745, 'index', J$.F(507737, J$.R(507697, 'serializeObjectId', serializeObjectId, false, true), false)(J$.R(507705, 'buffer', buffer, false, false), J$.R(507713, 'key', key, false, false), J$.R(507721, 'value', value, false, false), J$.R(507729, 'index', index, false, false)), index, false, false);
                                            } else if (J$.C(28696, J$.M(507769, J$.I(typeof Buffer === 'undefined' ? Buffer = J$.R(507753, 'Buffer', undefined, true, true) : Buffer = J$.R(507753, 'Buffer', Buffer, true, true)), 'isBuffer', false)(J$.R(507761, 'value', value, false, false)))) {
                                                index = J$.W(507825, 'index', J$.F(507817, J$.R(507777, 'serializeBuffer', serializeBuffer, false, true), false)(J$.R(507785, 'buffer', buffer, false, false), J$.R(507793, 'key', key, false, false), J$.R(507801, 'value', value, false, false), J$.R(507809, 'index', index, false, false)), index, false, false);
                                            } else if (J$.C(28688, J$.C(28544, J$.B(70722, 'instanceof', J$.R(507833, 'value', value, false, false), J$.I(typeof RegExp === 'undefined' ? RegExp = J$.R(507841, 'RegExp', undefined, true, true) : RegExp = J$.R(507841, 'RegExp', RegExp, true, true)))) ? J$._() : J$.F(507865, J$.R(507849, 'isRegExp', isRegExp, false, true), false)(J$.R(507857, 'value', value, false, false)))) {
                                                index = J$.W(507921, 'index', J$.F(507913, J$.R(507873, 'serializeRegExp', serializeRegExp, false, true), false)(J$.R(507881, 'buffer', buffer, false, false), J$.R(507889, 'key', key, false, false), J$.R(507897, 'value', value, false, false), J$.R(507905, 'index', index, false, false)), index, false, false);
                                            } else if (J$.C(28680, J$.C(28552, J$.B(70730, '===', J$.R(507929, 'type', type, false, false), J$.T(507937, 'object', 21, false))) ? J$.B(70738, '==', J$.G(507961, J$.R(507945, 'value', value, false, false), J$.T(507953, '_bsontype', 21, false)), J$.T(507969, null, 25, false)) : J$._())) {
                                                index = J$.W(508073, 'index', J$.F(508065, J$.R(507977, 'serializeObject', serializeObject, false, true), false)(J$.R(507985, 'buffer', buffer, false, false), J$.R(507993, 'key', key, false, false), J$.R(508001, 'value', value, false, false), J$.R(508009, 'index', index, false, false), J$.R(508017, 'checkKeys', checkKeys, false, false), J$.R(508025, 'depth', depth, false, false), J$.R(508033, 'serializeFunctions', serializeFunctions, false, false), J$.R(508041, 'ignoreUndefined', ignoreUndefined, false, false), J$.T(508049, false, 23, false), J$.R(508057, 'path', path, false, false)), index, false, false);
                                            } else if (J$.C(28672, J$.C(28560, J$.B(70746, '===', J$.R(508081, 'type', type, false, false), J$.T(508089, 'object', 21, false))) ? J$.B(70754, '===', J$.G(508113, J$.R(508097, 'value', value, false, false), J$.T(508105, '_bsontype', 21, false)), J$.T(508121, 'Decimal128', 21, false)) : J$._())) {
                                                index = J$.W(508177, 'index', J$.F(508169, J$.R(508129, 'serializeDecimal128', serializeDecimal128, false, true), false)(J$.R(508137, 'buffer', buffer, false, false), J$.R(508145, 'key', key, false, false), J$.R(508153, 'value', value, false, false), J$.R(508161, 'index', index, false, false)), index, false, false);
                                            } else if (J$.C(28664, J$.C(28568, J$.B(70762, '===', J$.G(508201, J$.R(508185, 'value', value, false, false), J$.T(508193, '_bsontype', 21, false)), J$.T(508209, 'Long', 21, false))) ? J$._() : J$.B(70770, '===', J$.G(508233, J$.R(508217, 'value', value, false, false), J$.T(508225, '_bsontype', 21, false)), J$.T(508241, 'Timestamp', 21, false)))) {
                                                index = J$.W(508297, 'index', J$.F(508289, J$.R(508249, 'serializeLong', serializeLong, false, true), false)(J$.R(508257, 'buffer', buffer, false, false), J$.R(508265, 'key', key, false, false), J$.R(508273, 'value', value, false, false), J$.R(508281, 'index', index, false, false)), index, false, false);
                                            } else if (J$.C(28656, J$.B(70778, '===', J$.G(508321, J$.R(508305, 'value', value, false, false), J$.T(508313, '_bsontype', 21, false)), J$.T(508329, 'Double', 21, false)))) {
                                                index = J$.W(508385, 'index', J$.F(508377, J$.R(508337, 'serializeDouble', serializeDouble, false, true), false)(J$.R(508345, 'buffer', buffer, false, false), J$.R(508353, 'key', key, false, false), J$.R(508361, 'value', value, false, false), J$.R(508369, 'index', index, false, false)), index, false, false);
                                            } else if (J$.C(28648, J$.B(70786, '===', J$.G(508409, J$.R(508393, 'value', value, false, false), J$.T(508401, '_bsontype', 21, false)), J$.T(508417, 'Code', 21, false)))) {
                                                index = J$.W(508505, 'index', J$.F(508497, J$.R(508425, 'serializeCode', serializeCode, false, true), false)(J$.R(508433, 'buffer', buffer, false, false), J$.R(508441, 'key', key, false, false), J$.R(508449, 'value', value, false, false), J$.R(508457, 'index', index, false, false), J$.R(508465, 'checkKeys', checkKeys, false, false), J$.R(508473, 'depth', depth, false, false), J$.R(508481, 'serializeFunctions', serializeFunctions, false, false), J$.R(508489, 'ignoreUndefined', ignoreUndefined, false, false)), index, false, false);
                                            } else if (J$.C(28640, J$.C(28576, J$.B(70802, '===', J$.U(70794, 'typeof', J$.R(508513, 'value', value, false, false)), J$.T(508521, 'function', 21, false))) ? J$.R(508529, 'serializeFunctions', serializeFunctions, false, false) : J$._())) {
                                                index = J$.W(508609, 'index', J$.F(508601, J$.R(508537, 'serializeFunction', serializeFunction, false, true), false)(J$.R(508545, 'buffer', buffer, false, false), J$.R(508553, 'key', key, false, false), J$.R(508561, 'value', value, false, false), J$.R(508569, 'index', index, false, false), J$.R(508577, 'checkKeys', checkKeys, false, false), J$.R(508585, 'depth', depth, false, false), J$.R(508593, 'serializeFunctions', serializeFunctions, false, false)), index, false, false);
                                            } else if (J$.C(28632, J$.B(70810, '===', J$.G(508633, J$.R(508617, 'value', value, false, false), J$.T(508625, '_bsontype', 21, false)), J$.T(508641, 'Binary', 21, false)))) {
                                                index = J$.W(508697, 'index', J$.F(508689, J$.R(508649, 'serializeBinary', serializeBinary, false, true), false)(J$.R(508657, 'buffer', buffer, false, false), J$.R(508665, 'key', key, false, false), J$.R(508673, 'value', value, false, false), J$.R(508681, 'index', index, false, false)), index, false, false);
                                            } else if (J$.C(28624, J$.B(70818, '===', J$.G(508721, J$.R(508705, 'value', value, false, false), J$.T(508713, '_bsontype', 21, false)), J$.T(508729, 'Symbol', 21, false)))) {
                                                index = J$.W(508785, 'index', J$.F(508777, J$.R(508737, 'serializeSymbol', serializeSymbol, false, true), false)(J$.R(508745, 'buffer', buffer, false, false), J$.R(508753, 'key', key, false, false), J$.R(508761, 'value', value, false, false), J$.R(508769, 'index', index, false, false)), index, false, false);
                                            } else if (J$.C(28616, J$.B(70826, '===', J$.G(508809, J$.R(508793, 'value', value, false, false), J$.T(508801, '_bsontype', 21, false)), J$.T(508817, 'DBRef', 21, false)))) {
                                                index = J$.W(508889, 'index', J$.F(508881, J$.R(508825, 'serializeDBRef', serializeDBRef, false, true), false)(J$.R(508833, 'buffer', buffer, false, false), J$.R(508841, 'key', key, false, false), J$.R(508849, 'value', value, false, false), J$.R(508857, 'index', index, false, false), J$.R(508865, 'depth', depth, false, false), J$.R(508873, 'serializeFunctions', serializeFunctions, false, false)), index, false, false);
                                            } else if (J$.C(28608, J$.B(70834, '===', J$.G(508913, J$.R(508897, 'value', value, false, false), J$.T(508905, '_bsontype', 21, false)), J$.T(508921, 'BSONRegExp', 21, false)))) {
                                                index = J$.W(508977, 'index', J$.F(508969, J$.R(508929, 'serializeBSONRegExp', serializeBSONRegExp, false, true), false)(J$.R(508937, 'buffer', buffer, false, false), J$.R(508945, 'key', key, false, false), J$.R(508953, 'value', value, false, false), J$.R(508961, 'index', index, false, false)), index, false, false);
                                            } else if (J$.C(28600, J$.B(70842, '===', J$.G(509001, J$.R(508985, 'value', value, false, false), J$.T(508993, '_bsontype', 21, false)), J$.T(509009, 'Int32', 21, false)))) {
                                                index = J$.W(509065, 'index', J$.F(509057, J$.R(509017, 'serializeInt32', serializeInt32, false, true), false)(J$.R(509025, 'buffer', buffer, false, false), J$.R(509033, 'key', key, false, false), J$.R(509041, 'value', value, false, false), J$.R(509049, 'index', index, false, false)), index, false, false);
                                            } else if (J$.C(28592, J$.C(28584, J$.B(70850, '===', J$.G(509089, J$.R(509073, 'value', value, false, false), J$.T(509081, '_bsontype', 21, false)), J$.T(509097, 'MinKey', 21, false))) ? J$._() : J$.B(70858, '===', J$.G(509121, J$.R(509105, 'value', value, false, false), J$.T(509113, '_bsontype', 21, false)), J$.T(509129, 'MaxKey', 21, false)))) {
                                                index = J$.W(509185, 'index', J$.F(509177, J$.R(509137, 'serializeMinMax', serializeMinMax, false, true), false)(J$.R(509145, 'buffer', buffer, false, false), J$.R(509153, 'key', key, false, false), J$.R(509161, 'value', value, false, false), J$.R(509169, 'index', index, false, false)), index, false, false);
                                            }
                                        }
                                    }
                                }
                            }
                            J$.M(509217, J$.R(509209, 'path', path, false, false), 'pop', false)();
                            J$.P(509257, J$.R(509225, 'buffer', buffer, false, false), J$.B(70882, '-', index = J$.W(509241, 'index', J$.B(70874, '+', J$.U(70866, '+', J$.R(509233, 'index', index, false, false)), 1), index, false, false), 1), J$.T(509249, 0, 22, false));
                            var size = J$.W(509281, 'size', J$.B(70890, '-', J$.R(509265, 'index', index, false, false), J$.R(509273, 'startingIndex', startingIndex, false, false)), size, false, false);
                            J$.P(509329, J$.R(509289, 'buffer', buffer, false, false), J$.B(70914, '-', startingIndex = J$.W(509305, 'startingIndex', J$.B(70906, '+', J$.U(70898, '+', J$.R(509297, 'startingIndex', startingIndex, false, false)), 1), startingIndex, false, false), 1), J$.B(70922, '&', J$.R(509313, 'size', size, false, false), J$.T(509321, 255, 22, false)));
                            J$.P(509385, J$.R(509337, 'buffer', buffer, false, false), J$.B(70946, '-', startingIndex = J$.W(509353, 'startingIndex', J$.B(70938, '+', J$.U(70930, '+', J$.R(509345, 'startingIndex', startingIndex, false, false)), 1), startingIndex, false, false), 1), J$.B(70962, '&', J$.B(70954, '>>', J$.R(509361, 'size', size, false, false), J$.T(509369, 8, 22, false)), J$.T(509377, 255, 22, false)));
                            J$.P(509441, J$.R(509393, 'buffer', buffer, false, false), J$.B(70986, '-', startingIndex = J$.W(509409, 'startingIndex', J$.B(70978, '+', J$.U(70970, '+', J$.R(509401, 'startingIndex', startingIndex, false, false)), 1), startingIndex, false, false), 1), J$.B(71002, '&', J$.B(70994, '>>', J$.R(509417, 'size', size, false, false), J$.T(509425, 16, 22, false)), J$.T(509433, 255, 22, false)));
                            J$.P(509497, J$.R(509449, 'buffer', buffer, false, false), J$.B(71026, '-', startingIndex = J$.W(509465, 'startingIndex', J$.B(71018, '+', J$.U(71010, '+', J$.R(509457, 'startingIndex', startingIndex, false, false)), 1), startingIndex, false, false), 1), J$.B(71042, '&', J$.B(71034, '>>', J$.R(509473, 'size', size, false, false), J$.T(509481, 24, 22, false)), J$.T(509489, 255, 22, false)));
                            return J$.Rt(509513, J$.R(509505, 'index', index, false, false));
                        } catch (J$e) {
                            J$.Ex(511225, J$e);
                        } finally {
                            if (J$.Fr(511233))
                                continue jalangiLabel25;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false), serializeInto, false, true);
            var BSON = J$.W(509697, 'BSON', J$.T(509689, {}, 11, false), BSON, false, true);
            J$.P(509721, J$.R(509705, 'BSON', BSON, false, true), 'BSON_DATA_NUMBER', J$.T(509713, 1, 22, false));
            J$.P(509745, J$.R(509729, 'BSON', BSON, false, true), 'BSON_DATA_STRING', J$.T(509737, 2, 22, false));
            J$.P(509769, J$.R(509753, 'BSON', BSON, false, true), 'BSON_DATA_OBJECT', J$.T(509761, 3, 22, false));
            J$.P(509793, J$.R(509777, 'BSON', BSON, false, true), 'BSON_DATA_ARRAY', J$.T(509785, 4, 22, false));
            J$.P(509817, J$.R(509801, 'BSON', BSON, false, true), 'BSON_DATA_BINARY', J$.T(509809, 5, 22, false));
            J$.P(509841, J$.R(509825, 'BSON', BSON, false, true), 'BSON_DATA_UNDEFINED', J$.T(509833, 6, 22, false));
            J$.P(509865, J$.R(509849, 'BSON', BSON, false, true), 'BSON_DATA_OID', J$.T(509857, 7, 22, false));
            J$.P(509889, J$.R(509873, 'BSON', BSON, false, true), 'BSON_DATA_BOOLEAN', J$.T(509881, 8, 22, false));
            J$.P(509913, J$.R(509897, 'BSON', BSON, false, true), 'BSON_DATA_DATE', J$.T(509905, 9, 22, false));
            J$.P(509937, J$.R(509921, 'BSON', BSON, false, true), 'BSON_DATA_NULL', J$.T(509929, 10, 22, false));
            J$.P(509961, J$.R(509945, 'BSON', BSON, false, true), 'BSON_DATA_REGEXP', J$.T(509953, 11, 22, false));
            J$.P(509985, J$.R(509969, 'BSON', BSON, false, true), 'BSON_DATA_CODE', J$.T(509977, 13, 22, false));
            J$.P(510009, J$.R(509993, 'BSON', BSON, false, true), 'BSON_DATA_SYMBOL', J$.T(510001, 14, 22, false));
            J$.P(510033, J$.R(510017, 'BSON', BSON, false, true), 'BSON_DATA_CODE_W_SCOPE', J$.T(510025, 15, 22, false));
            J$.P(510057, J$.R(510041, 'BSON', BSON, false, true), 'BSON_DATA_INT', J$.T(510049, 16, 22, false));
            J$.P(510081, J$.R(510065, 'BSON', BSON, false, true), 'BSON_DATA_TIMESTAMP', J$.T(510073, 17, 22, false));
            J$.P(510105, J$.R(510089, 'BSON', BSON, false, true), 'BSON_DATA_LONG', J$.T(510097, 18, 22, false));
            J$.P(510129, J$.R(510113, 'BSON', BSON, false, true), 'BSON_DATA_DECIMAL128', J$.T(510121, 19, 22, false));
            J$.P(510153, J$.R(510137, 'BSON', BSON, false, true), 'BSON_DATA_MIN_KEY', J$.T(510145, 255, 22, false));
            J$.P(510177, J$.R(510161, 'BSON', BSON, false, true), 'BSON_DATA_MAX_KEY', J$.T(510169, 127, 22, false));
            J$.P(510201, J$.R(510185, 'BSON', BSON, false, true), 'BSON_BINARY_SUBTYPE_DEFAULT', J$.T(510193, 0, 22, false));
            J$.P(510225, J$.R(510209, 'BSON', BSON, false, true), 'BSON_BINARY_SUBTYPE_FUNCTION', J$.T(510217, 1, 22, false));
            J$.P(510249, J$.R(510233, 'BSON', BSON, false, true), 'BSON_BINARY_SUBTYPE_BYTE_ARRAY', J$.T(510241, 2, 22, false));
            J$.P(510273, J$.R(510257, 'BSON', BSON, false, true), 'BSON_BINARY_SUBTYPE_UUID', J$.T(510265, 3, 22, false));
            J$.P(510297, J$.R(510281, 'BSON', BSON, false, true), 'BSON_BINARY_SUBTYPE_MD5', J$.T(510289, 4, 22, false));
            J$.P(510321, J$.R(510305, 'BSON', BSON, false, true), 'BSON_BINARY_SUBTYPE_USER_DEFINED', J$.T(510313, 128, 22, false));
            J$.P(510345, J$.R(510329, 'BSON', BSON, false, true), 'BSON_INT32_MAX', J$.T(510337, 2147483647, 22, false));
            J$.P(510369, J$.R(510353, 'BSON', BSON, false, true), 'BSON_INT32_MIN', J$.U(71050, '-', J$.T(510361, 2147483648, 22, false)));
            J$.P(510425, J$.R(510377, 'BSON', BSON, false, true), 'BSON_INT64_MAX', J$.B(71058, '-', J$.M(510409, J$.I(typeof Math === 'undefined' ? Math = J$.R(510385, 'Math', undefined, true, true) : Math = J$.R(510385, 'Math', Math, true, true)), 'pow', false)(J$.T(510393, 2, 22, false), J$.T(510401, 63, 22, false)), J$.T(510417, 1, 22, false)));
            J$.P(510473, J$.R(510433, 'BSON', BSON, false, true), 'BSON_INT64_MIN', J$.U(71066, '-', J$.M(510465, J$.I(typeof Math === 'undefined' ? Math = J$.R(510441, 'Math', undefined, true, true) : Math = J$.R(510441, 'Math', Math, true, true)), 'pow', false)(J$.T(510449, 2, 22, false), J$.T(510457, 63, 22, false))));
            J$.P(510497, J$.R(510481, 'BSON', BSON, false, true), 'JS_INT_MAX', J$.T(510489, 9007199254740992, 22, false));
            J$.P(510521, J$.R(510505, 'BSON', BSON, false, true), 'JS_INT_MIN', J$.U(71074, '-', J$.T(510513, 9007199254740992, 22, false)));
            J$.P(510545, J$.I(typeof module === 'undefined' ? module = J$.R(510529, 'module', undefined, true, true) : module = J$.R(510529, 'module', module, true, true)), 'exports', J$.R(510537, 'serializeInto', serializeInto, false, true));
        } catch (J$e) {
            J$.Ex(511241, J$e);
        } finally {
            if (J$.Sr(511249))
                continue jalangiLabel26;
            else
                break jalangiLabel26;
        }
    }
// JALANGI DO NOT INSTRUMENT

