J$.noInstrEval = false;
jalangiLabel4:
    while (true) {
        try {
            J$.Se(485297, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestMongoDb/node_modules/bson/lib/bson/parser/deserializer.js');
            J$.N(485305, 'Long', Long, false, false, false);
            J$.N(485313, 'Double', Double, false, false, false);
            J$.N(485321, 'Timestamp', Timestamp, false, false, false);
            J$.N(485329, 'ObjectID', ObjectID, false, false, false);
            J$.N(485337, '_Symbol', _Symbol, false, false, false);
            J$.N(485345, 'Code', Code, false, false, false);
            J$.N(485353, 'MinKey', MinKey, false, false, false);
            J$.N(485361, 'MaxKey', MaxKey, false, false, false);
            J$.N(485369, 'Decimal128', Decimal128, false, false, false);
            J$.N(485377, 'Int32', Int32, false, false, false);
            J$.N(485385, 'DBRef', DBRef, false, false, false);
            J$.N(485393, 'BSONRegExp', BSONRegExp, false, false, false);
            J$.N(485401, 'Binary', Binary, false, false, false);
            J$.N(485409, 'utils', utils, false, false, false);
            J$.N(485417, 'deserialize', deserialize, false, false, false);
            J$.N(485425, 'deserializeObject', deserializeObject, false, false, false);
            J$.N(485433, 'isolateEvalWithHash', isolateEvalWithHash, false, false, false);
            J$.N(485441, 'isolateEval', isolateEval, false, false, false);
            J$.N(485449, 'BSON', BSON, false, false, false);
            J$.N(485457, 'functionCache', functionCache, false, false, false);
            J$.N(485465, 'JS_INT_MAX_LONG', JS_INT_MAX_LONG, false, false, false);
            J$.N(485473, 'JS_INT_MIN_LONG', JS_INT_MIN_LONG, false, false, false);
            J$.T(470801, 'use strict', 21, false);
            var Long = J$.W(471209, 'Long', J$.G(470833, J$.F(470825, J$.I(typeof require === 'undefined' ? require = J$.R(470809, 'require', undefined, true, true) : require = J$.R(470809, 'require', require, true, true)), false)(J$.T(470817, '../long', 21, false)), 'Long'), Long, false, true), Double = J$.W(471217, 'Double', J$.G(470865, J$.F(470857, J$.I(typeof require === 'undefined' ? require = J$.R(470841, 'require', undefined, true, true) : require = J$.R(470841, 'require', require, true, true)), false)(J$.T(470849, '../double', 21, false)), 'Double'), Double, false, true), Timestamp = J$.W(471225, 'Timestamp', J$.G(470897, J$.F(470889, J$.I(typeof require === 'undefined' ? require = J$.R(470873, 'require', undefined, true, true) : require = J$.R(470873, 'require', require, true, true)), false)(J$.T(470881, '../timestamp', 21, false)), 'Timestamp'), Timestamp, false, true), ObjectID = J$.W(471233, 'ObjectID', J$.G(470929, J$.F(470921, J$.I(typeof require === 'undefined' ? require = J$.R(470905, 'require', undefined, true, true) : require = J$.R(470905, 'require', require, true, true)), false)(J$.T(470913, '../objectid', 21, false)), 'ObjectID'), ObjectID, false, true), _Symbol = J$.W(471241, '_Symbol', J$.G(470961, J$.F(470953, J$.I(typeof require === 'undefined' ? require = J$.R(470937, 'require', undefined, true, true) : require = J$.R(470937, 'require', require, true, true)), false)(J$.T(470945, '../symbol', 21, false)), 'Symbol'), _Symbol, false, true), Code = J$.W(471249, 'Code', J$.G(470993, J$.F(470985, J$.I(typeof require === 'undefined' ? require = J$.R(470969, 'require', undefined, true, true) : require = J$.R(470969, 'require', require, true, true)), false)(J$.T(470977, '../code', 21, false)), 'Code'), Code, false, true), MinKey = J$.W(471257, 'MinKey', J$.G(471025, J$.F(471017, J$.I(typeof require === 'undefined' ? require = J$.R(471001, 'require', undefined, true, true) : require = J$.R(471001, 'require', require, true, true)), false)(J$.T(471009, '../min_key', 21, false)), 'MinKey'), MinKey, false, true), MaxKey = J$.W(471265, 'MaxKey', J$.G(471057, J$.F(471049, J$.I(typeof require === 'undefined' ? require = J$.R(471033, 'require', undefined, true, true) : require = J$.R(471033, 'require', require, true, true)), false)(J$.T(471041, '../max_key', 21, false)), 'MaxKey'), MaxKey, false, true), Decimal128 = J$.W(471273, 'Decimal128', J$.F(471081, J$.I(typeof require === 'undefined' ? require = J$.R(471065, 'require', undefined, true, true) : require = J$.R(471065, 'require', require, true, true)), false)(J$.T(471073, '../decimal128', 21, false)), Decimal128, false, true), Int32 = J$.W(471281, 'Int32', J$.F(471105, J$.I(typeof require === 'undefined' ? require = J$.R(471089, 'require', undefined, true, true) : require = J$.R(471089, 'require', require, true, true)), false)(J$.T(471097, '../int_32', 21, false)), Int32, false, true), DBRef = J$.W(471289, 'DBRef', J$.G(471137, J$.F(471129, J$.I(typeof require === 'undefined' ? require = J$.R(471113, 'require', undefined, true, true) : require = J$.R(471113, 'require', require, true, true)), false)(J$.T(471121, '../db_ref', 21, false)), 'DBRef'), DBRef, false, true), BSONRegExp = J$.W(471297, 'BSONRegExp', J$.G(471169, J$.F(471161, J$.I(typeof require === 'undefined' ? require = J$.R(471145, 'require', undefined, true, true) : require = J$.R(471145, 'require', require, true, true)), false)(J$.T(471153, '../regexp', 21, false)), 'BSONRegExp'), BSONRegExp, false, true), Binary = J$.W(471305, 'Binary', J$.G(471201, J$.F(471193, J$.I(typeof require === 'undefined' ? require = J$.R(471177, 'require', undefined, true, true) : require = J$.R(471177, 'require', require, true, true)), false)(J$.T(471185, '../binary', 21, false)), 'Binary'), Binary, false, true);
            var utils = J$.W(471337, 'utils', J$.F(471329, J$.I(typeof require === 'undefined' ? require = J$.R(471313, 'require', undefined, true, true) : require = J$.R(471313, 'require', require, true, true)), false)(J$.T(471321, './utils', 21, false)), utils, false, true);
            var deserialize = J$.W(471881, 'deserialize', J$.T(471873, function deserialize(buffer, options, isArray) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(471817, arguments.callee, this, arguments);
                            arguments = J$.N(471825, 'arguments', arguments, true, false, false);
                            buffer = J$.N(471833, 'buffer', buffer, true, false, false);
                            options = J$.N(471841, 'options', options, true, false, false);
                            isArray = J$.N(471849, 'isArray', isArray, true, false, false);
                            J$.N(471857, 'index', index, false, false, false);
                            J$.N(471865, 'size', size, false, false, false);
                            options = J$.W(471377, 'options', J$.C(26304, J$.B(60154, '==', J$.R(471345, 'options', options, false, false), J$.T(471353, null, 25, false))) ? J$.T(471361, {}, 11, false) : J$.R(471369, 'options', options, false, false), options, false, false);
                            var index = J$.W(471433, 'index', J$.C(26320, J$.C(26312, J$.R(471385, 'options', options, false, false)) ? J$.G(471401, J$.R(471393, 'options', options, false, false), 'index') : J$._()) ? J$.G(471417, J$.R(471409, 'options', options, false, false), 'index') : J$.T(471425, 0, 22, false), index, false, false);
                            var size = J$.W(471585, 'size', J$.B(60226, '|', J$.B(60202, '|', J$.B(60178, '|', J$.G(471457, J$.R(471441, 'buffer', buffer, false, false), J$.R(471449, 'index', index, false, false)), J$.B(60170, '<<', J$.G(471489, J$.R(471465, 'buffer', buffer, false, false), J$.B(60162, '+', J$.R(471473, 'index', index, false, false), J$.T(471481, 1, 22, false))), J$.T(471497, 8, 22, false))), J$.B(60194, '<<', J$.G(471529, J$.R(471505, 'buffer', buffer, false, false), J$.B(60186, '+', J$.R(471513, 'index', index, false, false), J$.T(471521, 2, 22, false))), J$.T(471537, 16, 22, false))), J$.B(60218, '<<', J$.G(471569, J$.R(471545, 'buffer', buffer, false, false), J$.B(60210, '+', J$.R(471553, 'index', index, false, false), J$.T(471561, 3, 22, false))), J$.T(471577, 24, 22, false))), size, false, false);
                            if (J$.C(26344, J$.C(26336, J$.C(26328, J$.B(60234, '<', J$.R(471593, 'size', size, false, false), J$.T(471601, 5, 22, false))) ? J$._() : J$.B(60242, '<', J$.G(471617, J$.R(471609, 'buffer', buffer, false, false), 'length'), J$.R(471625, 'size', size, false, false))) ? J$._() : J$.B(60258, '>', J$.B(60250, '+', J$.R(471633, 'size', size, false, false), J$.R(471641, 'index', index, false, false)), J$.G(471657, J$.R(471649, 'buffer', buffer, false, false), 'length')))) {
                                throw J$.F(471681, J$.I(typeof Error === 'undefined' ? Error = J$.R(471665, 'Error', undefined, true, true) : Error = J$.R(471665, 'Error', Error, true, true)), true)(J$.T(471673, 'corrupt bson message', 21, false));
                            }
                            if (J$.C(26352, J$.B(60282, '!==', J$.G(471721, J$.R(471689, 'buffer', buffer, false, false), J$.B(60274, '-', J$.B(60266, '+', J$.R(471697, 'index', index, false, false), J$.R(471705, 'size', size, false, false)), J$.T(471713, 1, 22, false))), J$.T(471729, 0, 22, false)))) {
                                throw J$.F(471753, J$.I(typeof Error === 'undefined' ? Error = J$.R(471737, 'Error', undefined, true, true) : Error = J$.R(471737, 'Error', Error, true, true)), true)(J$.T(471745, 'One object, sized correctly, with a spot for an EOO, but the EOO isn\'t 0x00', 21, false));
                            }
                            return J$.Rt(471809, J$.F(471801, J$.R(471761, 'deserializeObject', deserializeObject, false, true), false)(J$.R(471769, 'buffer', buffer, false, false), J$.R(471777, 'index', index, false, false), J$.R(471785, 'options', options, false, false), J$.R(471793, 'isArray', isArray, false, false)));
                        } catch (J$e) {
                            J$.Ex(485481, J$e);
                        } finally {
                            if (J$.Fr(485489))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false), deserialize, false, true);
            var deserializeObject = J$.W(483977, 'deserializeObject', J$.T(483969, function deserializeObject(buffer, index, options, isArray) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(483553, arguments.callee, this, arguments);
                            arguments = J$.N(483561, 'arguments', arguments, true, false, false);
                            buffer = J$.N(483569, 'buffer', buffer, true, false, false);
                            index = J$.N(483577, 'index', index, true, false, false);
                            options = J$.N(483585, 'options', options, true, false, false);
                            isArray = J$.N(483593, 'isArray', isArray, true, false, false);
                            J$.N(483601, 'evalFunctions', evalFunctions, false, false, false);
                            J$.N(483609, 'cacheFunctions', cacheFunctions, false, false, false);
                            J$.N(483617, 'cacheFunctionsCrc32', cacheFunctionsCrc32, false, false, false);
                            J$.N(483625, 'crc32', crc32, false, false, false);
                            J$.N(483633, 'fieldsAsRaw', fieldsAsRaw, false, false, false);
                            J$.N(483641, 'raw', raw, false, false, false);
                            J$.N(483649, 'bsonRegExp', bsonRegExp, false, false, false);
                            J$.N(483657, 'promoteBuffers', promoteBuffers, false, false, false);
                            J$.N(483665, 'promoteLongs', promoteLongs, false, false, false);
                            J$.N(483673, 'promoteValues', promoteValues, false, false, false);
                            J$.N(483681, 'startIndex', startIndex, false, false, false);
                            J$.N(483689, 'size', size, false, false, false);
                            J$.N(483697, 'object', object, false, false, false);
                            J$.N(483705, 'arrayIndex', arrayIndex, false, false, false);
                            J$.N(483713, 'done', done, false, false, false);
                            J$.N(483721, 'elementType', elementType, false, false, false);
                            J$.N(483729, 'i', i, false, false, false);
                            J$.N(483737, 'name', name, false, false, false);
                            J$.N(483745, 'stringSize', stringSize, false, false, false);
                            J$.N(483753, 'oid', oid, false, false, false);
                            J$.N(483761, 'lowBits', lowBits, false, false, false);
                            J$.N(483769, 'highBits', highBits, false, false, false);
                            J$.N(483777, '_index', _index, false, false, false);
                            J$.N(483785, 'objectSize', objectSize, false, false, false);
                            J$.N(483793, 'arrayOptions', arrayOptions, false, false, false);
                            J$.N(483801, 'stopIndex', stopIndex, false, false, false);
                            J$.N(483809, 'n', n, false, false, false);
                            J$.N(483817, '_long', _long, false, false, false);
                            J$.N(483825, 'bytes', bytes, false, false, false);
                            J$.N(483833, 'decimal128', decimal128, false, false, false);
                            J$.N(483841, 'binarySize', binarySize, false, false, false);
                            J$.N(483849, 'totalBinarySize', totalBinarySize, false, false, false);
                            J$.N(483857, 'subType', subType, false, false, false);
                            J$.N(483865, '_buffer', _buffer, false, false, false);
                            J$.N(483873, 'source', source, false, false, false);
                            J$.N(483881, 'regExpOptions', regExpOptions, false, false, false);
                            J$.N(483889, 'optionsArray', optionsArray, false, false, false);
                            J$.N(483897, 'functionString', functionString, false, false, false);
                            J$.N(483905, 'hash', hash, false, false, false);
                            J$.N(483913, 'totalSize', totalSize, false, false, false);
                            J$.N(483921, 'scopeObject', scopeObject, false, false, false);
                            J$.N(483929, 'namespace', namespace, false, false, false);
                            J$.N(483937, 'oidBuffer', oidBuffer, false, false, false);
                            J$.N(483945, 'parts', parts, false, false, false);
                            J$.N(483953, 'db', db, false, false, false);
                            J$.N(483961, 'collection', collection, false, false, false);
                            var evalFunctions = J$.W(471953, 'evalFunctions', J$.C(26360, J$.B(60290, '==', J$.G(471905, J$.R(471889, 'options', options, false, false), J$.T(471897, 'evalFunctions', 21, false)), J$.T(471913, null, 25, false))) ? J$.T(471921, false, 23, false) : J$.G(471945, J$.R(471929, 'options', options, false, false), J$.T(471937, 'evalFunctions', 21, false)), evalFunctions, false, false);
                            var cacheFunctions = J$.W(472025, 'cacheFunctions', J$.C(26368, J$.B(60298, '==', J$.G(471977, J$.R(471961, 'options', options, false, false), J$.T(471969, 'cacheFunctions', 21, false)), J$.T(471985, null, 25, false))) ? J$.T(471993, false, 23, false) : J$.G(472017, J$.R(472001, 'options', options, false, false), J$.T(472009, 'cacheFunctions', 21, false)), cacheFunctions, false, false);
                            var cacheFunctionsCrc32 = J$.W(472097, 'cacheFunctionsCrc32', J$.C(26376, J$.B(60306, '==', J$.G(472049, J$.R(472033, 'options', options, false, false), J$.T(472041, 'cacheFunctionsCrc32', 21, false)), J$.T(472057, null, 25, false))) ? J$.T(472065, false, 23, false) : J$.G(472089, J$.R(472073, 'options', options, false, false), J$.T(472081, 'cacheFunctionsCrc32', 21, false)), cacheFunctionsCrc32, false, false);
                            if (J$.C(26384, J$.U(60314, '!', J$.R(472105, 'cacheFunctionsCrc32', cacheFunctionsCrc32, false, false))))
                                var crc32 = J$.W(472121, 'crc32', J$.T(472113, null, 25, false), crc32, false, false);
                            var fieldsAsRaw = J$.W(472193, 'fieldsAsRaw', J$.C(26392, J$.B(60322, '==', J$.G(472145, J$.R(472129, 'options', options, false, false), J$.T(472137, 'fieldsAsRaw', 21, false)), J$.T(472153, null, 25, false))) ? J$.T(472161, null, 25, false) : J$.G(472185, J$.R(472169, 'options', options, false, false), J$.T(472177, 'fieldsAsRaw', 21, false)), fieldsAsRaw, false, false);
                            var raw = J$.W(472265, 'raw', J$.C(26400, J$.B(60330, '==', J$.G(472217, J$.R(472201, 'options', options, false, false), J$.T(472209, 'raw', 21, false)), J$.T(472225, null, 25, false))) ? J$.T(472233, false, 23, false) : J$.G(472257, J$.R(472241, 'options', options, false, false), J$.T(472249, 'raw', 21, false)), raw, false, false);
                            var bsonRegExp = J$.W(472337, 'bsonRegExp', J$.C(26408, J$.B(60346, '===', J$.U(60338, 'typeof', J$.G(472289, J$.R(472273, 'options', options, false, false), J$.T(472281, 'bsonRegExp', 21, false))), J$.T(472297, 'boolean', 21, false))) ? J$.G(472321, J$.R(472305, 'options', options, false, false), J$.T(472313, 'bsonRegExp', 21, false)) : J$.T(472329, false, 23, false), bsonRegExp, false, false);
                            var promoteBuffers = J$.W(472409, 'promoteBuffers', J$.C(26416, J$.B(60354, '==', J$.G(472361, J$.R(472345, 'options', options, false, false), J$.T(472353, 'promoteBuffers', 21, false)), J$.T(472369, null, 25, false))) ? J$.T(472377, false, 23, false) : J$.G(472401, J$.R(472385, 'options', options, false, false), J$.T(472393, 'promoteBuffers', 21, false)), promoteBuffers, false, false);
                            var promoteLongs = J$.W(472481, 'promoteLongs', J$.C(26424, J$.B(60362, '==', J$.G(472433, J$.R(472417, 'options', options, false, false), J$.T(472425, 'promoteLongs', 21, false)), J$.T(472441, null, 25, false))) ? J$.T(472449, true, 23, false) : J$.G(472473, J$.R(472457, 'options', options, false, false), J$.T(472465, 'promoteLongs', 21, false)), promoteLongs, false, false);
                            var promoteValues = J$.W(472553, 'promoteValues', J$.C(26432, J$.B(60370, '==', J$.G(472505, J$.R(472489, 'options', options, false, false), J$.T(472497, 'promoteValues', 21, false)), J$.T(472513, null, 25, false))) ? J$.T(472521, true, 23, false) : J$.G(472545, J$.R(472529, 'options', options, false, false), J$.T(472537, 'promoteValues', 21, false)), promoteValues, false, false);
                            var startIndex = J$.W(472569, 'startIndex', J$.R(472561, 'index', index, false, false), startIndex, false, false);
                            if (J$.C(26440, J$.B(60378, '<', J$.G(472585, J$.R(472577, 'buffer', buffer, false, false), 'length'), J$.T(472593, 5, 22, false))))
                                throw J$.F(472617, J$.I(typeof Error === 'undefined' ? Error = J$.R(472601, 'Error', undefined, true, true) : Error = J$.R(472601, 'Error', Error, true, true)), true)(J$.T(472609, 'corrupt bson message < 5 bytes long', 21, false));
                            var size = J$.W(472777, 'size', J$.B(60522, '|', J$.B(60482, '|', J$.B(60442, '|', J$.G(472649, J$.R(472625, 'buffer', buffer, false, false), J$.B(60402, '-', index = J$.W(472641, 'index', J$.B(60394, '+', J$.U(60386, '+', J$.R(472633, 'index', index, false, false)), 1), index, false, false), 1)), J$.B(60434, '<<', J$.G(472681, J$.R(472657, 'buffer', buffer, false, false), J$.B(60426, '-', index = J$.W(472673, 'index', J$.B(60418, '+', J$.U(60410, '+', J$.R(472665, 'index', index, false, false)), 1), index, false, false), 1)), J$.T(472689, 8, 22, false))), J$.B(60474, '<<', J$.G(472721, J$.R(472697, 'buffer', buffer, false, false), J$.B(60466, '-', index = J$.W(472713, 'index', J$.B(60458, '+', J$.U(60450, '+', J$.R(472705, 'index', index, false, false)), 1), index, false, false), 1)), J$.T(472729, 16, 22, false))), J$.B(60514, '<<', J$.G(472761, J$.R(472737, 'buffer', buffer, false, false), J$.B(60506, '-', index = J$.W(472753, 'index', J$.B(60498, '+', J$.U(60490, '+', J$.R(472745, 'index', index, false, false)), 1), index, false, false), 1)), J$.T(472769, 24, 22, false))), size, false, false);
                            if (J$.C(26456, J$.C(26448, J$.B(60530, '<', J$.R(472785, 'size', size, false, false), J$.T(472793, 5, 22, false))) ? J$._() : J$.B(60538, '>', J$.R(472801, 'size', size, false, false), J$.G(472817, J$.R(472809, 'buffer', buffer, false, false), 'length'))))
                                throw J$.F(472841, J$.I(typeof Error === 'undefined' ? Error = J$.R(472825, 'Error', undefined, true, true) : Error = J$.R(472825, 'Error', Error, true, true)), true)(J$.T(472833, 'corrupt bson message', 21, false));
                            var object = J$.W(472873, 'object', J$.C(26464, J$.R(472849, 'isArray', isArray, false, false)) ? J$.T(472857, [], 10, false) : J$.T(472865, {}, 11, false), object, false, false);
                            var arrayIndex = J$.W(472889, 'arrayIndex', J$.T(472881, 0, 22, false), arrayIndex, false, false);
                            var done = J$.W(472905, 'done', J$.T(472897, false, 23, false), done, false, false);
                            while (J$.C(27312, J$.U(60546, '!', J$.R(472913, 'done', done, false, false)))) {
                                var elementType = J$.W(472953, 'elementType', J$.G(472945, J$.R(472921, 'buffer', buffer, false, false), J$.B(60570, '-', index = J$.W(472937, 'index', J$.B(60562, '+', J$.U(60554, '+', J$.R(472929, 'index', index, false, false)), 1), index, false, false), 1)), elementType, false, false);
                                if (J$.C(26472, J$.B(60578, '===', J$.R(472961, 'elementType', elementType, false, false), J$.T(472969, 0, 22, false))))
                                    break;
                                var i = J$.W(472985, 'i', J$.R(472977, 'index', index, false, false), i, false, false);
                                while (J$.C(26488, J$.C(26480, J$.B(60586, '!==', J$.G(473009, J$.R(472993, 'buffer', buffer, false, false), J$.R(473001, 'i', i, false, false)), J$.T(473017, 0, 22, false))) ? J$.B(60594, '<', J$.R(473025, 'i', i, false, false), J$.G(473041, J$.R(473033, 'buffer', buffer, false, false), 'length')) : J$._())) {
                                    J$.B(60618, '-', i = J$.W(473057, 'i', J$.B(60610, '+', J$.U(60602, '+', J$.R(473049, 'i', i, false, false)), 1), i, false, false), 1);
                                }
                                if (J$.C(26496, J$.B(60626, '>=', J$.R(473065, 'i', i, false, false), J$.G(473081, J$.R(473073, 'buffer', buffer, false, false), 'length'))))
                                    throw J$.F(473105, J$.I(typeof Error === 'undefined' ? Error = J$.R(473089, 'Error', undefined, true, true) : Error = J$.R(473089, 'Error', Error, true, true)), true)(J$.T(473097, 'Bad BSON Document: illegal CString', 21, false));
                                var name = J$.W(473177, 'name', J$.C(26504, J$.R(473113, 'isArray', isArray, false, false)) ? J$.B(60650, '-', arrayIndex = J$.W(473129, 'arrayIndex', J$.B(60642, '+', J$.U(60634, '+', J$.R(473121, 'arrayIndex', arrayIndex, false, false)), 1), arrayIndex, false, false), 1) : J$.M(473169, J$.R(473137, 'buffer', buffer, false, false), 'toString', false)(J$.T(473145, 'utf8', 21, false), J$.R(473153, 'index', index, false, false), J$.R(473161, 'i', i, false, false)), name, false, false);
                                index = J$.W(473201, 'index', J$.B(60658, '+', J$.R(473185, 'i', i, false, false), J$.T(473193, 1, 22, false)), index, false, false);
                                if (J$.C(27304, J$.B(60666, '===', J$.R(473209, 'elementType', elementType, false, false), J$.G(473225, J$.R(473217, 'BSON', BSON, false, true), 'BSON_DATA_STRING')))) {
                                    var stringSize = J$.W(473385, 'stringSize', J$.B(60810, '|', J$.B(60770, '|', J$.B(60730, '|', J$.G(473257, J$.R(473233, 'buffer', buffer, false, false), J$.B(60690, '-', index = J$.W(473249, 'index', J$.B(60682, '+', J$.U(60674, '+', J$.R(473241, 'index', index, false, false)), 1), index, false, false), 1)), J$.B(60722, '<<', J$.G(473289, J$.R(473265, 'buffer', buffer, false, false), J$.B(60714, '-', index = J$.W(473281, 'index', J$.B(60706, '+', J$.U(60698, '+', J$.R(473273, 'index', index, false, false)), 1), index, false, false), 1)), J$.T(473297, 8, 22, false))), J$.B(60762, '<<', J$.G(473329, J$.R(473305, 'buffer', buffer, false, false), J$.B(60754, '-', index = J$.W(473321, 'index', J$.B(60746, '+', J$.U(60738, '+', J$.R(473313, 'index', index, false, false)), 1), index, false, false), 1)), J$.T(473337, 16, 22, false))), J$.B(60802, '<<', J$.G(473369, J$.R(473345, 'buffer', buffer, false, false), J$.B(60794, '-', index = J$.W(473361, 'index', J$.B(60786, '+', J$.U(60778, '+', J$.R(473353, 'index', index, false, false)), 1), index, false, false), 1)), J$.T(473377, 24, 22, false))), stringSize, false, false);
                                    if (J$.C(26528, J$.C(26520, J$.C(26512, J$.B(60818, '<=', J$.R(473393, 'stringSize', stringSize, false, false), J$.T(473401, 0, 22, false))) ? J$._() : J$.B(60834, '>', J$.R(473409, 'stringSize', stringSize, false, false), J$.B(60826, '-', J$.G(473425, J$.R(473417, 'buffer', buffer, false, false), 'length'), J$.R(473433, 'index', index, false, false)))) ? J$._() : J$.B(60858, '!==', J$.G(473473, J$.R(473441, 'buffer', buffer, false, false), J$.B(60850, '-', J$.B(60842, '+', J$.R(473449, 'index', index, false, false), J$.R(473457, 'stringSize', stringSize, false, false)), J$.T(473465, 1, 22, false))), J$.T(473481, 0, 22, false))))
                                        throw J$.F(473505, J$.I(typeof Error === 'undefined' ? Error = J$.R(473489, 'Error', undefined, true, true) : Error = J$.R(473489, 'Error', Error, true, true)), true)(J$.T(473497, 'bad string length in bson', 21, false));
                                    J$.P(473585, J$.R(473513, 'object', object, false, false), J$.R(473521, 'name', name, false, false), J$.M(473577, J$.R(473529, 'buffer', buffer, false, false), 'toString', false)(J$.T(473537, 'utf8', 21, false), J$.R(473545, 'index', index, false, false), J$.B(60874, '-', J$.B(60866, '+', J$.R(473553, 'index', index, false, false), J$.R(473561, 'stringSize', stringSize, false, false)), J$.T(473569, 1, 22, false))));
                                    index = J$.W(473609, 'index', J$.B(60882, '+', J$.R(473593, 'index', index, false, false), J$.R(473601, 'stringSize', stringSize, false, false)), index, false, false);
                                } else if (J$.C(27296, J$.B(60890, '===', J$.R(473617, 'elementType', elementType, false, false), J$.G(473633, J$.R(473625, 'BSON', BSON, false, true), 'BSON_DATA_OID')))) {
                                    var oid = J$.W(473665, 'oid', J$.M(473657, J$.R(473641, 'utils', utils, false, true), 'allocBuffer', false)(J$.T(473649, 12, 22, false)), oid, false, false);
                                    J$.M(473721, J$.R(473673, 'buffer', buffer, false, false), 'copy', false)(J$.R(473681, 'oid', oid, false, false), J$.T(473689, 0, 22, false), J$.R(473697, 'index', index, false, false), J$.B(60898, '+', J$.R(473705, 'index', index, false, false), J$.T(473713, 12, 22, false)));
                                    J$.P(473769, J$.R(473729, 'object', object, false, false), J$.R(473737, 'name', name, false, false), J$.F(473761, J$.R(473745, 'ObjectID', ObjectID, false, true), true)(J$.R(473753, 'oid', oid, false, false)));
                                    index = J$.W(473793, 'index', J$.B(60906, '+', J$.R(473777, 'index', index, false, false), J$.T(473785, 12, 22, false)), index, false, false);
                                } else if (J$.C(27288, J$.C(26536, J$.B(60914, '===', J$.R(473801, 'elementType', elementType, false, false), J$.G(473817, J$.R(473809, 'BSON', BSON, false, true), 'BSON_DATA_INT'))) ? J$.B(60922, '===', J$.R(473825, 'promoteValues', promoteValues, false, false), J$.T(473833, false, 23, false)) : J$._())) {
                                    J$.P(474025, J$.R(473841, 'object', object, false, false), J$.R(473849, 'name', name, false, false), J$.F(474017, J$.R(473857, 'Int32', Int32, false, true), true)(J$.B(61066, '|', J$.B(61026, '|', J$.B(60986, '|', J$.G(473889, J$.R(473865, 'buffer', buffer, false, false), J$.B(60946, '-', index = J$.W(473881, 'index', J$.B(60938, '+', J$.U(60930, '+', J$.R(473873, 'index', index, false, false)), 1), index, false, false), 1)), J$.B(60978, '<<', J$.G(473921, J$.R(473897, 'buffer', buffer, false, false), J$.B(60970, '-', index = J$.W(473913, 'index', J$.B(60962, '+', J$.U(60954, '+', J$.R(473905, 'index', index, false, false)), 1), index, false, false), 1)), J$.T(473929, 8, 22, false))), J$.B(61018, '<<', J$.G(473961, J$.R(473937, 'buffer', buffer, false, false), J$.B(61010, '-', index = J$.W(473953, 'index', J$.B(61002, '+', J$.U(60994, '+', J$.R(473945, 'index', index, false, false)), 1), index, false, false), 1)), J$.T(473969, 16, 22, false))), J$.B(61058, '<<', J$.G(474001, J$.R(473977, 'buffer', buffer, false, false), J$.B(61050, '-', index = J$.W(473993, 'index', J$.B(61042, '+', J$.U(61034, '+', J$.R(473985, 'index', index, false, false)), 1), index, false, false), 1)), J$.T(474009, 24, 22, false)))));
                                } else if (J$.C(27280, J$.B(61074, '===', J$.R(474033, 'elementType', elementType, false, false), J$.G(474049, J$.R(474041, 'BSON', BSON, false, true), 'BSON_DATA_INT')))) {
                                    J$.P(474225, J$.R(474057, 'object', object, false, false), J$.R(474065, 'name', name, false, false), J$.B(61218, '|', J$.B(61178, '|', J$.B(61138, '|', J$.G(474097, J$.R(474073, 'buffer', buffer, false, false), J$.B(61098, '-', index = J$.W(474089, 'index', J$.B(61090, '+', J$.U(61082, '+', J$.R(474081, 'index', index, false, false)), 1), index, false, false), 1)), J$.B(61130, '<<', J$.G(474129, J$.R(474105, 'buffer', buffer, false, false), J$.B(61122, '-', index = J$.W(474121, 'index', J$.B(61114, '+', J$.U(61106, '+', J$.R(474113, 'index', index, false, false)), 1), index, false, false), 1)), J$.T(474137, 8, 22, false))), J$.B(61170, '<<', J$.G(474169, J$.R(474145, 'buffer', buffer, false, false), J$.B(61162, '-', index = J$.W(474161, 'index', J$.B(61154, '+', J$.U(61146, '+', J$.R(474153, 'index', index, false, false)), 1), index, false, false), 1)), J$.T(474177, 16, 22, false))), J$.B(61210, '<<', J$.G(474209, J$.R(474185, 'buffer', buffer, false, false), J$.B(61202, '-', index = J$.W(474201, 'index', J$.B(61194, '+', J$.U(61186, '+', J$.R(474193, 'index', index, false, false)), 1), index, false, false), 1)), J$.T(474217, 24, 22, false))));
                                } else if (J$.C(27272, J$.C(26544, J$.B(61226, '===', J$.R(474233, 'elementType', elementType, false, false), J$.G(474249, J$.R(474241, 'BSON', BSON, false, true), 'BSON_DATA_NUMBER'))) ? J$.B(61234, '===', J$.R(474257, 'promoteValues', promoteValues, false, false), J$.T(474265, false, 23, false)) : J$._())) {
                                    J$.P(474329, J$.R(474273, 'object', object, false, false), J$.R(474281, 'name', name, false, false), J$.F(474321, J$.R(474289, 'Double', Double, false, true), true)(J$.M(474313, J$.R(474297, 'buffer', buffer, false, false), 'readDoubleLE', false)(J$.R(474305, 'index', index, false, false))));
                                    index = J$.W(474353, 'index', J$.B(61242, '+', J$.R(474337, 'index', index, false, false), J$.T(474345, 8, 22, false)), index, false, false);
                                } else if (J$.C(27264, J$.B(61250, '===', J$.R(474361, 'elementType', elementType, false, false), J$.G(474377, J$.R(474369, 'BSON', BSON, false, true), 'BSON_DATA_NUMBER')))) {
                                    J$.P(474425, J$.R(474385, 'object', object, false, false), J$.R(474393, 'name', name, false, false), J$.M(474417, J$.R(474401, 'buffer', buffer, false, false), 'readDoubleLE', false)(J$.R(474409, 'index', index, false, false)));
                                    index = J$.W(474449, 'index', J$.B(61258, '+', J$.R(474433, 'index', index, false, false), J$.T(474441, 8, 22, false)), index, false, false);
                                } else if (J$.C(27256, J$.B(61266, '===', J$.R(474457, 'elementType', elementType, false, false), J$.G(474473, J$.R(474465, 'BSON', BSON, false, true), 'BSON_DATA_DATE')))) {
                                    var lowBits = J$.W(474633, 'lowBits', J$.B(61410, '|', J$.B(61370, '|', J$.B(61330, '|', J$.G(474505, J$.R(474481, 'buffer', buffer, false, false), J$.B(61290, '-', index = J$.W(474497, 'index', J$.B(61282, '+', J$.U(61274, '+', J$.R(474489, 'index', index, false, false)), 1), index, false, false), 1)), J$.B(61322, '<<', J$.G(474537, J$.R(474513, 'buffer', buffer, false, false), J$.B(61314, '-', index = J$.W(474529, 'index', J$.B(61306, '+', J$.U(61298, '+', J$.R(474521, 'index', index, false, false)), 1), index, false, false), 1)), J$.T(474545, 8, 22, false))), J$.B(61362, '<<', J$.G(474577, J$.R(474553, 'buffer', buffer, false, false), J$.B(61354, '-', index = J$.W(474569, 'index', J$.B(61346, '+', J$.U(61338, '+', J$.R(474561, 'index', index, false, false)), 1), index, false, false), 1)), J$.T(474585, 16, 22, false))), J$.B(61402, '<<', J$.G(474617, J$.R(474593, 'buffer', buffer, false, false), J$.B(61394, '-', index = J$.W(474609, 'index', J$.B(61386, '+', J$.U(61378, '+', J$.R(474601, 'index', index, false, false)), 1), index, false, false), 1)), J$.T(474625, 24, 22, false))), lowBits, false, false);
                                    var highBits = J$.W(474793, 'highBits', J$.B(61554, '|', J$.B(61514, '|', J$.B(61474, '|', J$.G(474665, J$.R(474641, 'buffer', buffer, false, false), J$.B(61434, '-', index = J$.W(474657, 'index', J$.B(61426, '+', J$.U(61418, '+', J$.R(474649, 'index', index, false, false)), 1), index, false, false), 1)), J$.B(61466, '<<', J$.G(474697, J$.R(474673, 'buffer', buffer, false, false), J$.B(61458, '-', index = J$.W(474689, 'index', J$.B(61450, '+', J$.U(61442, '+', J$.R(474681, 'index', index, false, false)), 1), index, false, false), 1)), J$.T(474705, 8, 22, false))), J$.B(61506, '<<', J$.G(474737, J$.R(474713, 'buffer', buffer, false, false), J$.B(61498, '-', index = J$.W(474729, 'index', J$.B(61490, '+', J$.U(61482, '+', J$.R(474721, 'index', index, false, false)), 1), index, false, false), 1)), J$.T(474745, 16, 22, false))), J$.B(61546, '<<', J$.G(474777, J$.R(474753, 'buffer', buffer, false, false), J$.B(61538, '-', index = J$.W(474769, 'index', J$.B(61530, '+', J$.U(61522, '+', J$.R(474761, 'index', index, false, false)), 1), index, false, false), 1)), J$.T(474785, 24, 22, false))), highBits, false, false);
                                    J$.P(474873, J$.R(474801, 'object', object, false, false), J$.R(474809, 'name', name, false, false), J$.F(474865, J$.I(typeof Date === 'undefined' ? Date = J$.R(474817, 'Date', undefined, true, true) : Date = J$.R(474817, 'Date', Date, true, true)), true)(J$.M(474857, J$.F(474849, J$.R(474825, 'Long', Long, false, true), true)(J$.R(474833, 'lowBits', lowBits, false, false), J$.R(474841, 'highBits', highBits, false, false)), 'toNumber', false)()));
                                } else if (J$.C(27248, J$.B(61562, '===', J$.R(474881, 'elementType', elementType, false, false), J$.G(474897, J$.R(474889, 'BSON', BSON, false, true), 'BSON_DATA_BOOLEAN')))) {
                                    if (J$.C(26560, J$.C(26552, J$.B(61570, '!==', J$.G(474921, J$.R(474905, 'buffer', buffer, false, false), J$.R(474913, 'index', index, false, false)), J$.T(474929, 0, 22, false))) ? J$.B(61578, '!==', J$.G(474953, J$.R(474937, 'buffer', buffer, false, false), J$.R(474945, 'index', index, false, false)), J$.T(474961, 1, 22, false)) : J$._()))
                                        throw J$.F(474985, J$.I(typeof Error === 'undefined' ? Error = J$.R(474969, 'Error', undefined, true, true) : Error = J$.R(474969, 'Error', Error, true, true)), true)(J$.T(474977, 'illegal boolean type value', 21, false));
                                    J$.P(475049, J$.R(474993, 'object', object, false, false), J$.R(475001, 'name', name, false, false), J$.B(61610, '===', J$.G(475033, J$.R(475009, 'buffer', buffer, false, false), J$.B(61602, '-', index = J$.W(475025, 'index', J$.B(61594, '+', J$.U(61586, '+', J$.R(475017, 'index', index, false, false)), 1), index, false, false), 1)), J$.T(475041, 1, 22, false)));
                                } else if (J$.C(27240, J$.B(61618, '===', J$.R(475057, 'elementType', elementType, false, false), J$.G(475073, J$.R(475065, 'BSON', BSON, false, true), 'BSON_DATA_OBJECT')))) {
                                    var _index = J$.W(475089, '_index', J$.R(475081, 'index', index, false, false), _index, false, false);
                                    var objectSize = J$.W(475241, 'objectSize', J$.B(61690, '|', J$.B(61666, '|', J$.B(61642, '|', J$.G(475113, J$.R(475097, 'buffer', buffer, false, false), J$.R(475105, 'index', index, false, false)), J$.B(61634, '<<', J$.G(475145, J$.R(475121, 'buffer', buffer, false, false), J$.B(61626, '+', J$.R(475129, 'index', index, false, false), J$.T(475137, 1, 22, false))), J$.T(475153, 8, 22, false))), J$.B(61658, '<<', J$.G(475185, J$.R(475161, 'buffer', buffer, false, false), J$.B(61650, '+', J$.R(475169, 'index', index, false, false), J$.T(475177, 2, 22, false))), J$.T(475193, 16, 22, false))), J$.B(61682, '<<', J$.G(475225, J$.R(475201, 'buffer', buffer, false, false), J$.B(61674, '+', J$.R(475209, 'index', index, false, false), J$.T(475217, 3, 22, false))), J$.T(475233, 24, 22, false))), objectSize, false, false);
                                    if (J$.C(26576, J$.C(26568, J$.B(61698, '<=', J$.R(475249, 'objectSize', objectSize, false, false), J$.T(475257, 0, 22, false))) ? J$._() : J$.B(61714, '>', J$.R(475265, 'objectSize', objectSize, false, false), J$.B(61706, '-', J$.G(475281, J$.R(475273, 'buffer', buffer, false, false), 'length'), J$.R(475289, 'index', index, false, false)))))
                                        throw J$.F(475313, J$.I(typeof Error === 'undefined' ? Error = J$.R(475297, 'Error', undefined, true, true) : Error = J$.R(475297, 'Error', Error, true, true)), true)(J$.T(475305, 'bad embedded document length in bson', 21, false));
                                    if (J$.C(26584, J$.R(475321, 'raw', raw, false, false))) {
                                        J$.P(475385, J$.R(475329, 'object', object, false, false), J$.R(475337, 'name', name, false, false), J$.M(475377, J$.R(475345, 'buffer', buffer, false, false), 'slice', false)(J$.R(475353, 'index', index, false, false), J$.B(61722, '+', J$.R(475361, 'index', index, false, false), J$.R(475369, 'objectSize', objectSize, false, false))));
                                    } else {
                                        J$.P(475457, J$.R(475393, 'object', object, false, false), J$.R(475401, 'name', name, false, false), J$.F(475449, J$.R(475409, 'deserializeObject', deserializeObject, false, false), false)(J$.R(475417, 'buffer', buffer, false, false), J$.R(475425, '_index', _index, false, false), J$.R(475433, 'options', options, false, false), J$.T(475441, false, 23, false)));
                                    }
                                    index = J$.W(475481, 'index', J$.B(61730, '+', J$.R(475465, 'index', index, false, false), J$.R(475473, 'objectSize', objectSize, false, false)), index, false, false);
                                } else if (J$.C(27232, J$.B(61738, '===', J$.R(475489, 'elementType', elementType, false, false), J$.G(475505, J$.R(475497, 'BSON', BSON, false, true), 'BSON_DATA_ARRAY')))) {
                                    _index = J$.W(475521, '_index', J$.R(475513, 'index', index, false, false), _index, false, false);
                                    objectSize = J$.W(475673, 'objectSize', J$.B(61810, '|', J$.B(61786, '|', J$.B(61762, '|', J$.G(475545, J$.R(475529, 'buffer', buffer, false, false), J$.R(475537, 'index', index, false, false)), J$.B(61754, '<<', J$.G(475577, J$.R(475553, 'buffer', buffer, false, false), J$.B(61746, '+', J$.R(475561, 'index', index, false, false), J$.T(475569, 1, 22, false))), J$.T(475585, 8, 22, false))), J$.B(61778, '<<', J$.G(475617, J$.R(475593, 'buffer', buffer, false, false), J$.B(61770, '+', J$.R(475601, 'index', index, false, false), J$.T(475609, 2, 22, false))), J$.T(475625, 16, 22, false))), J$.B(61802, '<<', J$.G(475657, J$.R(475633, 'buffer', buffer, false, false), J$.B(61794, '+', J$.R(475641, 'index', index, false, false), J$.T(475649, 3, 22, false))), J$.T(475665, 24, 22, false))), objectSize, false, false);
                                    var arrayOptions = J$.W(475689, 'arrayOptions', J$.R(475681, 'options', options, false, false), arrayOptions, false, false);
                                    var stopIndex = J$.W(475713, 'stopIndex', J$.B(61818, '+', J$.R(475697, 'index', index, false, false), J$.R(475705, 'objectSize', objectSize, false, false)), stopIndex, false, false);
                                    if (J$.C(26600, J$.C(26592, J$.R(475721, 'fieldsAsRaw', fieldsAsRaw, false, false)) ? J$.G(475745, J$.R(475729, 'fieldsAsRaw', fieldsAsRaw, false, false), J$.R(475737, 'name', name, false, false)) : J$._())) {
                                        arrayOptions = J$.W(475761, 'arrayOptions', J$.T(475753, {}, 11, false), arrayOptions, false, false);
                                        for (var n in J$.H(475825, J$.R(475769, 'options', options, false, false))) {
                                            J$.N(475833, 'n', n, false, true, false);
                                            {
                                                {
                                                    J$.P(475817, J$.R(475777, 'arrayOptions', arrayOptions, false, false), J$.R(475785, 'n', n, false, false), J$.G(475809, J$.R(475793, 'options', options, false, false), J$.R(475801, 'n', n, false, false)));
                                                }
                                            }
                                        }
                                        J$.P(475865, J$.R(475841, 'arrayOptions', arrayOptions, false, false), J$.T(475849, 'raw', 21, false), J$.T(475857, true, 23, false));
                                    }
                                    J$.P(475937, J$.R(475873, 'object', object, false, false), J$.R(475881, 'name', name, false, false), J$.F(475929, J$.R(475889, 'deserializeObject', deserializeObject, false, false), false)(J$.R(475897, 'buffer', buffer, false, false), J$.R(475905, '_index', _index, false, false), J$.R(475913, 'arrayOptions', arrayOptions, false, false), J$.T(475921, true, 23, false)));
                                    index = J$.W(475961, 'index', J$.B(61826, '+', J$.R(475945, 'index', index, false, false), J$.R(475953, 'objectSize', objectSize, false, false)), index, false, false);
                                    if (J$.C(26608, J$.B(61842, '!==', J$.G(475993, J$.R(475969, 'buffer', buffer, false, false), J$.B(61834, '-', J$.R(475977, 'index', index, false, false), J$.T(475985, 1, 22, false))), J$.T(476001, 0, 22, false))))
                                        throw J$.F(476025, J$.I(typeof Error === 'undefined' ? Error = J$.R(476009, 'Error', undefined, true, true) : Error = J$.R(476009, 'Error', Error, true, true)), true)(J$.T(476017, 'invalid array terminator byte', 21, false));
                                    if (J$.C(26616, J$.B(61850, '!==', J$.R(476033, 'index', index, false, false), J$.R(476041, 'stopIndex', stopIndex, false, false))))
                                        throw J$.F(476065, J$.I(typeof Error === 'undefined' ? Error = J$.R(476049, 'Error', undefined, true, true) : Error = J$.R(476049, 'Error', Error, true, true)), true)(J$.T(476057, 'corrupted array bson', 21, false));
                                } else if (J$.C(27224, J$.B(61858, '===', J$.R(476073, 'elementType', elementType, false, false), J$.G(476089, J$.R(476081, 'BSON', BSON, false, true), 'BSON_DATA_UNDEFINED')))) {
                                    J$.P(476121, J$.R(476097, 'object', object, false, false), J$.R(476105, 'name', name, false, false), J$.T(476113, undefined, 24, false));
                                } else if (J$.C(27216, J$.B(61866, '===', J$.R(476129, 'elementType', elementType, false, false), J$.G(476145, J$.R(476137, 'BSON', BSON, false, true), 'BSON_DATA_NULL')))) {
                                    J$.P(476177, J$.R(476153, 'object', object, false, false), J$.R(476161, 'name', name, false, false), J$.T(476169, null, 25, false));
                                } else if (J$.C(27208, J$.B(61874, '===', J$.R(476185, 'elementType', elementType, false, false), J$.G(476201, J$.R(476193, 'BSON', BSON, false, true), 'BSON_DATA_LONG')))) {
                                    lowBits = J$.W(476361, 'lowBits', J$.B(62018, '|', J$.B(61978, '|', J$.B(61938, '|', J$.G(476233, J$.R(476209, 'buffer', buffer, false, false), J$.B(61898, '-', index = J$.W(476225, 'index', J$.B(61890, '+', J$.U(61882, '+', J$.R(476217, 'index', index, false, false)), 1), index, false, false), 1)), J$.B(61930, '<<', J$.G(476265, J$.R(476241, 'buffer', buffer, false, false), J$.B(61922, '-', index = J$.W(476257, 'index', J$.B(61914, '+', J$.U(61906, '+', J$.R(476249, 'index', index, false, false)), 1), index, false, false), 1)), J$.T(476273, 8, 22, false))), J$.B(61970, '<<', J$.G(476305, J$.R(476281, 'buffer', buffer, false, false), J$.B(61962, '-', index = J$.W(476297, 'index', J$.B(61954, '+', J$.U(61946, '+', J$.R(476289, 'index', index, false, false)), 1), index, false, false), 1)), J$.T(476313, 16, 22, false))), J$.B(62010, '<<', J$.G(476345, J$.R(476321, 'buffer', buffer, false, false), J$.B(62002, '-', index = J$.W(476337, 'index', J$.B(61994, '+', J$.U(61986, '+', J$.R(476329, 'index', index, false, false)), 1), index, false, false), 1)), J$.T(476353, 24, 22, false))), lowBits, false, false);
                                    highBits = J$.W(476521, 'highBits', J$.B(62162, '|', J$.B(62122, '|', J$.B(62082, '|', J$.G(476393, J$.R(476369, 'buffer', buffer, false, false), J$.B(62042, '-', index = J$.W(476385, 'index', J$.B(62034, '+', J$.U(62026, '+', J$.R(476377, 'index', index, false, false)), 1), index, false, false), 1)), J$.B(62074, '<<', J$.G(476425, J$.R(476401, 'buffer', buffer, false, false), J$.B(62066, '-', index = J$.W(476417, 'index', J$.B(62058, '+', J$.U(62050, '+', J$.R(476409, 'index', index, false, false)), 1), index, false, false), 1)), J$.T(476433, 8, 22, false))), J$.B(62114, '<<', J$.G(476465, J$.R(476441, 'buffer', buffer, false, false), J$.B(62106, '-', index = J$.W(476457, 'index', J$.B(62098, '+', J$.U(62090, '+', J$.R(476449, 'index', index, false, false)), 1), index, false, false), 1)), J$.T(476473, 16, 22, false))), J$.B(62154, '<<', J$.G(476505, J$.R(476481, 'buffer', buffer, false, false), J$.B(62146, '-', index = J$.W(476497, 'index', J$.B(62138, '+', J$.U(62130, '+', J$.R(476489, 'index', index, false, false)), 1), index, false, false), 1)), J$.T(476513, 24, 22, false))), highBits, false, false);
                                    var _long = J$.W(476561, '_long', J$.F(476553, J$.R(476529, 'Long', Long, false, true), true)(J$.R(476537, 'lowBits', lowBits, false, false), J$.R(476545, 'highBits', highBits, false, false)), _long, false, false);
                                    if (J$.C(26648, J$.C(26624, J$.R(476569, 'promoteLongs', promoteLongs, false, false)) ? J$.B(62170, '===', J$.R(476577, 'promoteValues', promoteValues, false, false), J$.T(476585, true, 23, false)) : J$._())) {
                                        J$.P(476681, J$.R(476593, 'object', object, false, false), J$.R(476601, 'name', name, false, false), J$.C(26640, J$.C(26632, J$.M(476625, J$.R(476609, '_long', _long, false, false), 'lessThanOrEqual', false)(J$.R(476617, 'JS_INT_MAX_LONG', JS_INT_MAX_LONG, false, true))) ? J$.M(476649, J$.R(476633, '_long', _long, false, false), 'greaterThanOrEqual', false)(J$.R(476641, 'JS_INT_MIN_LONG', JS_INT_MIN_LONG, false, true)) : J$._()) ? J$.M(476665, J$.R(476657, '_long', _long, false, false), 'toNumber', false)() : J$.R(476673, '_long', _long, false, false));
                                    } else {
                                        J$.P(476713, J$.R(476689, 'object', object, false, false), J$.R(476697, 'name', name, false, false), J$.R(476705, '_long', _long, false, false));
                                    }
                                } else if (J$.C(27200, J$.B(62178, '===', J$.R(476721, 'elementType', elementType, false, false), J$.G(476737, J$.R(476729, 'BSON', BSON, false, true), 'BSON_DATA_DECIMAL128')))) {
                                    var bytes = J$.W(476769, 'bytes', J$.M(476761, J$.R(476745, 'utils', utils, false, true), 'allocBuffer', false)(J$.T(476753, 16, 22, false)), bytes, false, false);
                                    J$.M(476825, J$.R(476777, 'buffer', buffer, false, false), 'copy', false)(J$.R(476785, 'bytes', bytes, false, false), J$.T(476793, 0, 22, false), J$.R(476801, 'index', index, false, false), J$.B(62186, '+', J$.R(476809, 'index', index, false, false), J$.T(476817, 16, 22, false)));
                                    index = J$.W(476849, 'index', J$.B(62194, '+', J$.R(476833, 'index', index, false, false), J$.T(476841, 16, 22, false)), index, false, false);
                                    var decimal128 = J$.W(476881, 'decimal128', J$.F(476873, J$.R(476857, 'Decimal128', Decimal128, false, true), true)(J$.R(476865, 'bytes', bytes, false, false)), decimal128, false, false);
                                    J$.P(476945, J$.R(476889, 'object', object, false, false), J$.R(476897, 'name', name, false, false), J$.C(26656, J$.G(476913, J$.R(476905, 'decimal128', decimal128, false, false), 'toObject')) ? J$.M(476929, J$.R(476921, 'decimal128', decimal128, false, false), 'toObject', false)() : J$.R(476937, 'decimal128', decimal128, false, false));
                                } else if (J$.C(27192, J$.B(62202, '===', J$.R(476953, 'elementType', elementType, false, false), J$.G(476969, J$.R(476961, 'BSON', BSON, false, true), 'BSON_DATA_BINARY')))) {
                                    var binarySize = J$.W(477129, 'binarySize', J$.B(62346, '|', J$.B(62306, '|', J$.B(62266, '|', J$.G(477001, J$.R(476977, 'buffer', buffer, false, false), J$.B(62226, '-', index = J$.W(476993, 'index', J$.B(62218, '+', J$.U(62210, '+', J$.R(476985, 'index', index, false, false)), 1), index, false, false), 1)), J$.B(62258, '<<', J$.G(477033, J$.R(477009, 'buffer', buffer, false, false), J$.B(62250, '-', index = J$.W(477025, 'index', J$.B(62242, '+', J$.U(62234, '+', J$.R(477017, 'index', index, false, false)), 1), index, false, false), 1)), J$.T(477041, 8, 22, false))), J$.B(62298, '<<', J$.G(477073, J$.R(477049, 'buffer', buffer, false, false), J$.B(62290, '-', index = J$.W(477065, 'index', J$.B(62282, '+', J$.U(62274, '+', J$.R(477057, 'index', index, false, false)), 1), index, false, false), 1)), J$.T(477081, 16, 22, false))), J$.B(62338, '<<', J$.G(477113, J$.R(477089, 'buffer', buffer, false, false), J$.B(62330, '-', index = J$.W(477105, 'index', J$.B(62322, '+', J$.U(62314, '+', J$.R(477097, 'index', index, false, false)), 1), index, false, false), 1)), J$.T(477121, 24, 22, false))), binarySize, false, false);
                                    var totalBinarySize = J$.W(477145, 'totalBinarySize', J$.R(477137, 'binarySize', binarySize, false, false), totalBinarySize, false, false);
                                    var subType = J$.W(477185, 'subType', J$.G(477177, J$.R(477153, 'buffer', buffer, false, false), J$.B(62370, '-', index = J$.W(477169, 'index', J$.B(62362, '+', J$.U(62354, '+', J$.R(477161, 'index', index, false, false)), 1), index, false, false), 1)), subType, false, false);
                                    if (J$.C(26664, J$.B(62378, '<', J$.R(477193, 'binarySize', binarySize, false, false), J$.T(477201, 0, 22, false))))
                                        throw J$.F(477225, J$.I(typeof Error === 'undefined' ? Error = J$.R(477209, 'Error', undefined, true, true) : Error = J$.R(477209, 'Error', Error, true, true)), true)(J$.T(477217, 'Negative binary type element size found', 21, false));
                                    if (J$.C(26672, J$.B(62386, '>', J$.R(477233, 'binarySize', binarySize, false, false), J$.G(477249, J$.R(477241, 'buffer', buffer, false, false), 'length'))))
                                        throw J$.F(477273, J$.I(typeof Error === 'undefined' ? Error = J$.R(477257, 'Error', undefined, true, true) : Error = J$.R(477257, 'Error', Error, true, true)), true)(J$.T(477265, 'Binary type size larger than document size', 21, false));
                                    if (J$.C(26792, J$.B(62394, '!=', J$.G(477297, J$.R(477281, 'buffer', buffer, false, false), J$.T(477289, 'slice', 21, false)), J$.T(477305, null, 25, false)))) {
                                        if (J$.C(26704, J$.B(62402, '===', J$.R(477313, 'subType', subType, false, false), J$.G(477329, J$.R(477321, 'Binary', Binary, false, true), 'SUBTYPE_BYTE_ARRAY')))) {
                                            binarySize = J$.W(477489, 'binarySize', J$.B(62546, '|', J$.B(62506, '|', J$.B(62466, '|', J$.G(477361, J$.R(477337, 'buffer', buffer, false, false), J$.B(62426, '-', index = J$.W(477353, 'index', J$.B(62418, '+', J$.U(62410, '+', J$.R(477345, 'index', index, false, false)), 1), index, false, false), 1)), J$.B(62458, '<<', J$.G(477393, J$.R(477369, 'buffer', buffer, false, false), J$.B(62450, '-', index = J$.W(477385, 'index', J$.B(62442, '+', J$.U(62434, '+', J$.R(477377, 'index', index, false, false)), 1), index, false, false), 1)), J$.T(477401, 8, 22, false))), J$.B(62498, '<<', J$.G(477433, J$.R(477409, 'buffer', buffer, false, false), J$.B(62490, '-', index = J$.W(477425, 'index', J$.B(62482, '+', J$.U(62474, '+', J$.R(477417, 'index', index, false, false)), 1), index, false, false), 1)), J$.T(477441, 16, 22, false))), J$.B(62538, '<<', J$.G(477473, J$.R(477449, 'buffer', buffer, false, false), J$.B(62530, '-', index = J$.W(477465, 'index', J$.B(62522, '+', J$.U(62514, '+', J$.R(477457, 'index', index, false, false)), 1), index, false, false), 1)), J$.T(477481, 24, 22, false))), binarySize, false, false);
                                            if (J$.C(26680, J$.B(62554, '<', J$.R(477497, 'binarySize', binarySize, false, false), J$.T(477505, 0, 22, false))))
                                                throw J$.F(477529, J$.I(typeof Error === 'undefined' ? Error = J$.R(477513, 'Error', undefined, true, true) : Error = J$.R(477513, 'Error', Error, true, true)), true)(J$.T(477521, 'Negative binary type element size found for subtype 0x02', 21, false));
                                            if (J$.C(26688, J$.B(62570, '>', J$.R(477537, 'binarySize', binarySize, false, false), J$.B(62562, '-', J$.R(477545, 'totalBinarySize', totalBinarySize, false, false), J$.T(477553, 4, 22, false)))))
                                                throw J$.F(477577, J$.I(typeof Error === 'undefined' ? Error = J$.R(477561, 'Error', undefined, true, true) : Error = J$.R(477561, 'Error', Error, true, true)), true)(J$.T(477569, 'Binary type with subtype 0x02 contains to long binary size', 21, false));
                                            if (J$.C(26696, J$.B(62586, '<', J$.R(477585, 'binarySize', binarySize, false, false), J$.B(62578, '-', J$.R(477593, 'totalBinarySize', totalBinarySize, false, false), J$.T(477601, 4, 22, false)))))
                                                throw J$.F(477625, J$.I(typeof Error === 'undefined' ? Error = J$.R(477609, 'Error', undefined, true, true) : Error = J$.R(477609, 'Error', Error, true, true)), true)(J$.T(477617, 'Binary type with subtype 0x02 contains to short binary size', 21, false));
                                        }
                                        if (J$.C(26720, J$.C(26712, J$.R(477633, 'promoteBuffers', promoteBuffers, false, false)) ? J$.R(477641, 'promoteValues', promoteValues, false, false) : J$._())) {
                                            J$.P(477705, J$.R(477649, 'object', object, false, false), J$.R(477657, 'name', name, false, false), J$.M(477697, J$.R(477665, 'buffer', buffer, false, false), 'slice', false)(J$.R(477673, 'index', index, false, false), J$.B(62594, '+', J$.R(477681, 'index', index, false, false), J$.R(477689, 'binarySize', binarySize, false, false))));
                                        } else {
                                            J$.P(477793, J$.R(477713, 'object', object, false, false), J$.R(477721, 'name', name, false, false), J$.F(477785, J$.R(477729, 'Binary', Binary, false, true), true)(J$.M(477769, J$.R(477737, 'buffer', buffer, false, false), 'slice', false)(J$.R(477745, 'index', index, false, false), J$.B(62602, '+', J$.R(477753, 'index', index, false, false), J$.R(477761, 'binarySize', binarySize, false, false))), J$.R(477777, 'subType', subType, false, false)));
                                        }
                                    } else {
                                        var _buffer = J$.W(477881, '_buffer', J$.C(26728, J$.B(62618, '!==', J$.U(62610, 'typeof', J$.I(typeof Uint8Array === 'undefined' ? Uint8Array = J$.R(477801, 'Uint8Array', undefined, true, true) : Uint8Array = J$.R(477801, 'Uint8Array', Uint8Array, true, true))), J$.T(477809, 'undefined', 21, false))) ? J$.F(477849, J$.I(typeof Uint8Array === 'undefined' ? Uint8Array = J$.R(477817, 'Uint8Array', undefined, true, true) : Uint8Array = J$.R(477817, 'Uint8Array', Uint8Array, true, true)), true)(J$.F(477841, J$.I(typeof ArrayBuffer === 'undefined' ? ArrayBuffer = J$.R(477825, 'ArrayBuffer', undefined, true, true) : ArrayBuffer = J$.R(477825, 'ArrayBuffer', ArrayBuffer, true, true)), true)(J$.R(477833, 'binarySize', binarySize, false, false))) : J$.F(477873, J$.I(typeof Array === 'undefined' ? Array = J$.R(477857, 'Array', undefined, true, true) : Array = J$.R(477857, 'Array', Array, true, true)), true)(J$.R(477865, 'binarySize', binarySize, false, false)), _buffer, false, false);
                                        if (J$.C(26760, J$.B(62626, '===', J$.R(477889, 'subType', subType, false, false), J$.G(477905, J$.R(477897, 'Binary', Binary, false, true), 'SUBTYPE_BYTE_ARRAY')))) {
                                            binarySize = J$.W(478065, 'binarySize', J$.B(62770, '|', J$.B(62730, '|', J$.B(62690, '|', J$.G(477937, J$.R(477913, 'buffer', buffer, false, false), J$.B(62650, '-', index = J$.W(477929, 'index', J$.B(62642, '+', J$.U(62634, '+', J$.R(477921, 'index', index, false, false)), 1), index, false, false), 1)), J$.B(62682, '<<', J$.G(477969, J$.R(477945, 'buffer', buffer, false, false), J$.B(62674, '-', index = J$.W(477961, 'index', J$.B(62666, '+', J$.U(62658, '+', J$.R(477953, 'index', index, false, false)), 1), index, false, false), 1)), J$.T(477977, 8, 22, false))), J$.B(62722, '<<', J$.G(478009, J$.R(477985, 'buffer', buffer, false, false), J$.B(62714, '-', index = J$.W(478001, 'index', J$.B(62706, '+', J$.U(62698, '+', J$.R(477993, 'index', index, false, false)), 1), index, false, false), 1)), J$.T(478017, 16, 22, false))), J$.B(62762, '<<', J$.G(478049, J$.R(478025, 'buffer', buffer, false, false), J$.B(62754, '-', index = J$.W(478041, 'index', J$.B(62746, '+', J$.U(62738, '+', J$.R(478033, 'index', index, false, false)), 1), index, false, false), 1)), J$.T(478057, 24, 22, false))), binarySize, false, false);
                                            if (J$.C(26736, J$.B(62778, '<', J$.R(478073, 'binarySize', binarySize, false, false), J$.T(478081, 0, 22, false))))
                                                throw J$.F(478105, J$.I(typeof Error === 'undefined' ? Error = J$.R(478089, 'Error', undefined, true, true) : Error = J$.R(478089, 'Error', Error, true, true)), true)(J$.T(478097, 'Negative binary type element size found for subtype 0x02', 21, false));
                                            if (J$.C(26744, J$.B(62794, '>', J$.R(478113, 'binarySize', binarySize, false, false), J$.B(62786, '-', J$.R(478121, 'totalBinarySize', totalBinarySize, false, false), J$.T(478129, 4, 22, false)))))
                                                throw J$.F(478153, J$.I(typeof Error === 'undefined' ? Error = J$.R(478137, 'Error', undefined, true, true) : Error = J$.R(478137, 'Error', Error, true, true)), true)(J$.T(478145, 'Binary type with subtype 0x02 contains to long binary size', 21, false));
                                            if (J$.C(26752, J$.B(62810, '<', J$.R(478161, 'binarySize', binarySize, false, false), J$.B(62802, '-', J$.R(478169, 'totalBinarySize', totalBinarySize, false, false), J$.T(478177, 4, 22, false)))))
                                                throw J$.F(478201, J$.I(typeof Error === 'undefined' ? Error = J$.R(478185, 'Error', undefined, true, true) : Error = J$.R(478185, 'Error', Error, true, true)), true)(J$.T(478193, 'Binary type with subtype 0x02 contains to short binary size', 21, false));
                                        }
                                        for (i = J$.W(478217, 'i', J$.T(478209, 0, 22, false), i, false, false); J$.C(26768, J$.B(62818, '<', J$.R(478225, 'i', i, false, false), J$.R(478233, 'binarySize', binarySize, false, false))); J$.B(62842, '-', i = J$.W(478249, 'i', J$.B(62834, '+', J$.U(62826, '+', J$.R(478241, 'i', i, false, false)), 1), i, false, false), 1)) {
                                            J$.P(478305, J$.R(478257, '_buffer', _buffer, false, false), J$.R(478265, 'i', i, false, false), J$.G(478297, J$.R(478273, 'buffer', buffer, false, false), J$.B(62850, '+', J$.R(478281, 'index', index, false, false), J$.R(478289, 'i', i, false, false))));
                                        }
                                        if (J$.C(26784, J$.C(26776, J$.R(478313, 'promoteBuffers', promoteBuffers, false, false)) ? J$.R(478321, 'promoteValues', promoteValues, false, false) : J$._())) {
                                            J$.P(478353, J$.R(478329, 'object', object, false, false), J$.R(478337, 'name', name, false, false), J$.R(478345, '_buffer', _buffer, false, false));
                                        } else {
                                            J$.P(478409, J$.R(478361, 'object', object, false, false), J$.R(478369, 'name', name, false, false), J$.F(478401, J$.R(478377, 'Binary', Binary, false, true), true)(J$.R(478385, '_buffer', _buffer, false, false), J$.R(478393, 'subType', subType, false, false)));
                                        }
                                    }
                                    index = J$.W(478433, 'index', J$.B(62858, '+', J$.R(478417, 'index', index, false, false), J$.R(478425, 'binarySize', binarySize, false, false)), index, false, false);
                                } else if (J$.C(27184, J$.C(26800, J$.B(62866, '===', J$.R(478441, 'elementType', elementType, false, false), J$.G(478457, J$.R(478449, 'BSON', BSON, false, true), 'BSON_DATA_REGEXP'))) ? J$.B(62874, '===', J$.R(478465, 'bsonRegExp', bsonRegExp, false, false), J$.T(478473, false, 23, false)) : J$._())) {
                                    i = J$.W(478489, 'i', J$.R(478481, 'index', index, false, false), i, false, false);
                                    while (J$.C(26816, J$.C(26808, J$.B(62882, '!==', J$.G(478513, J$.R(478497, 'buffer', buffer, false, false), J$.R(478505, 'i', i, false, false)), J$.T(478521, 0, 22, false))) ? J$.B(62890, '<', J$.R(478529, 'i', i, false, false), J$.G(478545, J$.R(478537, 'buffer', buffer, false, false), 'length')) : J$._())) {
                                        J$.B(62914, '-', i = J$.W(478561, 'i', J$.B(62906, '+', J$.U(62898, '+', J$.R(478553, 'i', i, false, false)), 1), i, false, false), 1);
                                    }
                                    if (J$.C(26824, J$.B(62922, '>=', J$.R(478569, 'i', i, false, false), J$.G(478585, J$.R(478577, 'buffer', buffer, false, false), 'length'))))
                                        throw J$.F(478609, J$.I(typeof Error === 'undefined' ? Error = J$.R(478593, 'Error', undefined, true, true) : Error = J$.R(478593, 'Error', Error, true, true)), true)(J$.T(478601, 'Bad BSON Document: illegal CString', 21, false));
                                    var source = J$.W(478657, 'source', J$.M(478649, J$.R(478617, 'buffer', buffer, false, false), 'toString', false)(J$.T(478625, 'utf8', 21, false), J$.R(478633, 'index', index, false, false), J$.R(478641, 'i', i, false, false)), source, false, false);
                                    index = J$.W(478681, 'index', J$.B(62930, '+', J$.R(478665, 'i', i, false, false), J$.T(478673, 1, 22, false)), index, false, false);
                                    i = J$.W(478697, 'i', J$.R(478689, 'index', index, false, false), i, false, false);
                                    while (J$.C(26840, J$.C(26832, J$.B(62938, '!==', J$.G(478721, J$.R(478705, 'buffer', buffer, false, false), J$.R(478713, 'i', i, false, false)), J$.T(478729, 0, 22, false))) ? J$.B(62946, '<', J$.R(478737, 'i', i, false, false), J$.G(478753, J$.R(478745, 'buffer', buffer, false, false), 'length')) : J$._())) {
                                        J$.B(62970, '-', i = J$.W(478769, 'i', J$.B(62962, '+', J$.U(62954, '+', J$.R(478761, 'i', i, false, false)), 1), i, false, false), 1);
                                    }
                                    if (J$.C(26848, J$.B(62978, '>=', J$.R(478777, 'i', i, false, false), J$.G(478793, J$.R(478785, 'buffer', buffer, false, false), 'length'))))
                                        throw J$.F(478817, J$.I(typeof Error === 'undefined' ? Error = J$.R(478801, 'Error', undefined, true, true) : Error = J$.R(478801, 'Error', Error, true, true)), true)(J$.T(478809, 'Bad BSON Document: illegal CString', 21, false));
                                    var regExpOptions = J$.W(478865, 'regExpOptions', J$.M(478857, J$.R(478825, 'buffer', buffer, false, false), 'toString', false)(J$.T(478833, 'utf8', 21, false), J$.R(478841, 'index', index, false, false), J$.R(478849, 'i', i, false, false)), regExpOptions, false, false);
                                    index = J$.W(478889, 'index', J$.B(62986, '+', J$.R(478873, 'i', i, false, false), J$.T(478881, 1, 22, false)), index, false, false);
                                    var optionsArray = J$.W(478929, 'optionsArray', J$.F(478921, J$.I(typeof Array === 'undefined' ? Array = J$.R(478897, 'Array', undefined, true, true) : Array = J$.R(478897, 'Array', Array, true, true)), true)(J$.G(478913, J$.R(478905, 'regExpOptions', regExpOptions, false, false), 'length')), optionsArray, false, false);
                                    for (i = J$.W(478945, 'i', J$.T(478937, 0, 22, false), i, false, false); J$.C(26888, J$.B(62994, '<', J$.R(478953, 'i', i, false, false), J$.G(478969, J$.R(478961, 'regExpOptions', regExpOptions, false, false), 'length'))); J$.B(63018, '-', i = J$.W(478985, 'i', J$.B(63010, '+', J$.U(63002, '+', J$.R(478977, 'i', i, false, false)), 1), i, false, false), 1)) {
                                        switch (J$.C1(26856, J$.G(479009, J$.R(478993, 'regExpOptions', regExpOptions, false, false), J$.R(479001, 'i', i, false, false)))) {
                                        case J$.C2(26864, J$.T(479049, 'm', 21, false)):
                                            J$.P(479041, J$.R(479017, 'optionsArray', optionsArray, false, false), J$.R(479025, 'i', i, false, false), J$.T(479033, 'm', 21, false));
                                            break;
                                        case J$.C2(26872, J$.T(479089, 's', 21, false)):
                                            J$.P(479081, J$.R(479057, 'optionsArray', optionsArray, false, false), J$.R(479065, 'i', i, false, false), J$.T(479073, 'g', 21, false));
                                            break;
                                        case J$.C2(26880, J$.T(479129, 'i', 21, false)):
                                            J$.P(479121, J$.R(479097, 'optionsArray', optionsArray, false, false), J$.R(479105, 'i', i, false, false), J$.T(479113, 'i', 21, false));
                                            break;
                                        }
                                    }
                                    J$.P(479201, J$.R(479137, 'object', object, false, false), J$.R(479145, 'name', name, false, false), J$.F(479193, J$.I(typeof RegExp === 'undefined' ? RegExp = J$.R(479153, 'RegExp', undefined, true, true) : RegExp = J$.R(479153, 'RegExp', RegExp, true, true)), true)(J$.R(479161, 'source', source, false, false), J$.M(479185, J$.R(479169, 'optionsArray', optionsArray, false, false), 'join', false)(J$.T(479177, '', 21, false))));
                                } else if (J$.C(27176, J$.C(26896, J$.B(63026, '===', J$.R(479209, 'elementType', elementType, false, false), J$.G(479225, J$.R(479217, 'BSON', BSON, false, true), 'BSON_DATA_REGEXP'))) ? J$.B(63034, '===', J$.R(479233, 'bsonRegExp', bsonRegExp, false, false), J$.T(479241, true, 23, false)) : J$._())) {
                                    i = J$.W(479257, 'i', J$.R(479249, 'index', index, false, false), i, false, false);
                                    while (J$.C(26912, J$.C(26904, J$.B(63042, '!==', J$.G(479281, J$.R(479265, 'buffer', buffer, false, false), J$.R(479273, 'i', i, false, false)), J$.T(479289, 0, 22, false))) ? J$.B(63050, '<', J$.R(479297, 'i', i, false, false), J$.G(479313, J$.R(479305, 'buffer', buffer, false, false), 'length')) : J$._())) {
                                        J$.B(63074, '-', i = J$.W(479329, 'i', J$.B(63066, '+', J$.U(63058, '+', J$.R(479321, 'i', i, false, false)), 1), i, false, false), 1);
                                    }
                                    if (J$.C(26920, J$.B(63082, '>=', J$.R(479337, 'i', i, false, false), J$.G(479353, J$.R(479345, 'buffer', buffer, false, false), 'length'))))
                                        throw J$.F(479377, J$.I(typeof Error === 'undefined' ? Error = J$.R(479361, 'Error', undefined, true, true) : Error = J$.R(479361, 'Error', Error, true, true)), true)(J$.T(479369, 'Bad BSON Document: illegal CString', 21, false));
                                    source = J$.W(479425, 'source', J$.M(479417, J$.R(479385, 'buffer', buffer, false, false), 'toString', false)(J$.T(479393, 'utf8', 21, false), J$.R(479401, 'index', index, false, false), J$.R(479409, 'i', i, false, false)), source, false, false);
                                    index = J$.W(479449, 'index', J$.B(63090, '+', J$.R(479433, 'i', i, false, false), J$.T(479441, 1, 22, false)), index, false, false);
                                    i = J$.W(479465, 'i', J$.R(479457, 'index', index, false, false), i, false, false);
                                    while (J$.C(26936, J$.C(26928, J$.B(63098, '!==', J$.G(479489, J$.R(479473, 'buffer', buffer, false, false), J$.R(479481, 'i', i, false, false)), J$.T(479497, 0, 22, false))) ? J$.B(63106, '<', J$.R(479505, 'i', i, false, false), J$.G(479521, J$.R(479513, 'buffer', buffer, false, false), 'length')) : J$._())) {
                                        J$.B(63130, '-', i = J$.W(479537, 'i', J$.B(63122, '+', J$.U(63114, '+', J$.R(479529, 'i', i, false, false)), 1), i, false, false), 1);
                                    }
                                    if (J$.C(26944, J$.B(63138, '>=', J$.R(479545, 'i', i, false, false), J$.G(479561, J$.R(479553, 'buffer', buffer, false, false), 'length'))))
                                        throw J$.F(479585, J$.I(typeof Error === 'undefined' ? Error = J$.R(479569, 'Error', undefined, true, true) : Error = J$.R(479569, 'Error', Error, true, true)), true)(J$.T(479577, 'Bad BSON Document: illegal CString', 21, false));
                                    regExpOptions = J$.W(479633, 'regExpOptions', J$.M(479625, J$.R(479593, 'buffer', buffer, false, false), 'toString', false)(J$.T(479601, 'utf8', 21, false), J$.R(479609, 'index', index, false, false), J$.R(479617, 'i', i, false, false)), regExpOptions, false, false);
                                    index = J$.W(479657, 'index', J$.B(63146, '+', J$.R(479641, 'i', i, false, false), J$.T(479649, 1, 22, false)), index, false, false);
                                    J$.P(479713, J$.R(479665, 'object', object, false, false), J$.R(479673, 'name', name, false, false), J$.F(479705, J$.R(479681, 'BSONRegExp', BSONRegExp, false, true), true)(J$.R(479689, 'source', source, false, false), J$.R(479697, 'regExpOptions', regExpOptions, false, false)));
                                } else if (J$.C(27168, J$.B(63154, '===', J$.R(479721, 'elementType', elementType, false, false), J$.G(479737, J$.R(479729, 'BSON', BSON, false, true), 'BSON_DATA_SYMBOL')))) {
                                    stringSize = J$.W(479897, 'stringSize', J$.B(63298, '|', J$.B(63258, '|', J$.B(63218, '|', J$.G(479769, J$.R(479745, 'buffer', buffer, false, false), J$.B(63178, '-', index = J$.W(479761, 'index', J$.B(63170, '+', J$.U(63162, '+', J$.R(479753, 'index', index, false, false)), 1), index, false, false), 1)), J$.B(63210, '<<', J$.G(479801, J$.R(479777, 'buffer', buffer, false, false), J$.B(63202, '-', index = J$.W(479793, 'index', J$.B(63194, '+', J$.U(63186, '+', J$.R(479785, 'index', index, false, false)), 1), index, false, false), 1)), J$.T(479809, 8, 22, false))), J$.B(63250, '<<', J$.G(479841, J$.R(479817, 'buffer', buffer, false, false), J$.B(63242, '-', index = J$.W(479833, 'index', J$.B(63234, '+', J$.U(63226, '+', J$.R(479825, 'index', index, false, false)), 1), index, false, false), 1)), J$.T(479849, 16, 22, false))), J$.B(63290, '<<', J$.G(479881, J$.R(479857, 'buffer', buffer, false, false), J$.B(63282, '-', index = J$.W(479873, 'index', J$.B(63274, '+', J$.U(63266, '+', J$.R(479865, 'index', index, false, false)), 1), index, false, false), 1)), J$.T(479889, 24, 22, false))), stringSize, false, false);
                                    if (J$.C(26968, J$.C(26960, J$.C(26952, J$.B(63306, '<=', J$.R(479905, 'stringSize', stringSize, false, false), J$.T(479913, 0, 22, false))) ? J$._() : J$.B(63322, '>', J$.R(479921, 'stringSize', stringSize, false, false), J$.B(63314, '-', J$.G(479937, J$.R(479929, 'buffer', buffer, false, false), 'length'), J$.R(479945, 'index', index, false, false)))) ? J$._() : J$.B(63346, '!==', J$.G(479985, J$.R(479953, 'buffer', buffer, false, false), J$.B(63338, '-', J$.B(63330, '+', J$.R(479961, 'index', index, false, false), J$.R(479969, 'stringSize', stringSize, false, false)), J$.T(479977, 1, 22, false))), J$.T(479993, 0, 22, false))))
                                        throw J$.F(480017, J$.I(typeof Error === 'undefined' ? Error = J$.R(480001, 'Error', undefined, true, true) : Error = J$.R(480001, 'Error', Error, true, true)), true)(J$.T(480009, 'bad string length in bson', 21, false));
                                    J$.P(480113, J$.R(480025, 'object', object, false, false), J$.R(480033, 'name', name, false, false), J$.F(480105, J$.R(480041, '_Symbol', _Symbol, false, true), true)(J$.M(480097, J$.R(480049, 'buffer', buffer, false, false), 'toString', false)(J$.T(480057, 'utf8', 21, false), J$.R(480065, 'index', index, false, false), J$.B(63362, '-', J$.B(63354, '+', J$.R(480073, 'index', index, false, false), J$.R(480081, 'stringSize', stringSize, false, false)), J$.T(480089, 1, 22, false)))));
                                    index = J$.W(480137, 'index', J$.B(63370, '+', J$.R(480121, 'index', index, false, false), J$.R(480129, 'stringSize', stringSize, false, false)), index, false, false);
                                } else if (J$.C(27160, J$.B(63378, '===', J$.R(480145, 'elementType', elementType, false, false), J$.G(480161, J$.R(480153, 'BSON', BSON, false, true), 'BSON_DATA_TIMESTAMP')))) {
                                    lowBits = J$.W(480321, 'lowBits', J$.B(63522, '|', J$.B(63482, '|', J$.B(63442, '|', J$.G(480193, J$.R(480169, 'buffer', buffer, false, false), J$.B(63402, '-', index = J$.W(480185, 'index', J$.B(63394, '+', J$.U(63386, '+', J$.R(480177, 'index', index, false, false)), 1), index, false, false), 1)), J$.B(63434, '<<', J$.G(480225, J$.R(480201, 'buffer', buffer, false, false), J$.B(63426, '-', index = J$.W(480217, 'index', J$.B(63418, '+', J$.U(63410, '+', J$.R(480209, 'index', index, false, false)), 1), index, false, false), 1)), J$.T(480233, 8, 22, false))), J$.B(63474, '<<', J$.G(480265, J$.R(480241, 'buffer', buffer, false, false), J$.B(63466, '-', index = J$.W(480257, 'index', J$.B(63458, '+', J$.U(63450, '+', J$.R(480249, 'index', index, false, false)), 1), index, false, false), 1)), J$.T(480273, 16, 22, false))), J$.B(63514, '<<', J$.G(480305, J$.R(480281, 'buffer', buffer, false, false), J$.B(63506, '-', index = J$.W(480297, 'index', J$.B(63498, '+', J$.U(63490, '+', J$.R(480289, 'index', index, false, false)), 1), index, false, false), 1)), J$.T(480313, 24, 22, false))), lowBits, false, false);
                                    highBits = J$.W(480481, 'highBits', J$.B(63666, '|', J$.B(63626, '|', J$.B(63586, '|', J$.G(480353, J$.R(480329, 'buffer', buffer, false, false), J$.B(63546, '-', index = J$.W(480345, 'index', J$.B(63538, '+', J$.U(63530, '+', J$.R(480337, 'index', index, false, false)), 1), index, false, false), 1)), J$.B(63578, '<<', J$.G(480385, J$.R(480361, 'buffer', buffer, false, false), J$.B(63570, '-', index = J$.W(480377, 'index', J$.B(63562, '+', J$.U(63554, '+', J$.R(480369, 'index', index, false, false)), 1), index, false, false), 1)), J$.T(480393, 8, 22, false))), J$.B(63618, '<<', J$.G(480425, J$.R(480401, 'buffer', buffer, false, false), J$.B(63610, '-', index = J$.W(480417, 'index', J$.B(63602, '+', J$.U(63594, '+', J$.R(480409, 'index', index, false, false)), 1), index, false, false), 1)), J$.T(480433, 16, 22, false))), J$.B(63658, '<<', J$.G(480465, J$.R(480441, 'buffer', buffer, false, false), J$.B(63650, '-', index = J$.W(480457, 'index', J$.B(63642, '+', J$.U(63634, '+', J$.R(480449, 'index', index, false, false)), 1), index, false, false), 1)), J$.T(480473, 24, 22, false))), highBits, false, false);
                                    J$.P(480537, J$.R(480489, 'object', object, false, false), J$.R(480497, 'name', name, false, false), J$.F(480529, J$.R(480505, 'Timestamp', Timestamp, false, true), true)(J$.R(480513, 'lowBits', lowBits, false, false), J$.R(480521, 'highBits', highBits, false, false)));
                                } else if (J$.C(27152, J$.B(63674, '===', J$.R(480545, 'elementType', elementType, false, false), J$.G(480561, J$.R(480553, 'BSON', BSON, false, true), 'BSON_DATA_MIN_KEY')))) {
                                    J$.P(480601, J$.R(480569, 'object', object, false, false), J$.R(480577, 'name', name, false, false), J$.F(480593, J$.R(480585, 'MinKey', MinKey, false, true), true)());
                                } else if (J$.C(27144, J$.B(63682, '===', J$.R(480609, 'elementType', elementType, false, false), J$.G(480625, J$.R(480617, 'BSON', BSON, false, true), 'BSON_DATA_MAX_KEY')))) {
                                    J$.P(480665, J$.R(480633, 'object', object, false, false), J$.R(480641, 'name', name, false, false), J$.F(480657, J$.R(480649, 'MaxKey', MaxKey, false, true), true)());
                                } else if (J$.C(27136, J$.B(63690, '===', J$.R(480673, 'elementType', elementType, false, false), J$.G(480689, J$.R(480681, 'BSON', BSON, false, true), 'BSON_DATA_CODE')))) {
                                    stringSize = J$.W(480849, 'stringSize', J$.B(63834, '|', J$.B(63794, '|', J$.B(63754, '|', J$.G(480721, J$.R(480697, 'buffer', buffer, false, false), J$.B(63714, '-', index = J$.W(480713, 'index', J$.B(63706, '+', J$.U(63698, '+', J$.R(480705, 'index', index, false, false)), 1), index, false, false), 1)), J$.B(63746, '<<', J$.G(480753, J$.R(480729, 'buffer', buffer, false, false), J$.B(63738, '-', index = J$.W(480745, 'index', J$.B(63730, '+', J$.U(63722, '+', J$.R(480737, 'index', index, false, false)), 1), index, false, false), 1)), J$.T(480761, 8, 22, false))), J$.B(63786, '<<', J$.G(480793, J$.R(480769, 'buffer', buffer, false, false), J$.B(63778, '-', index = J$.W(480785, 'index', J$.B(63770, '+', J$.U(63762, '+', J$.R(480777, 'index', index, false, false)), 1), index, false, false), 1)), J$.T(480801, 16, 22, false))), J$.B(63826, '<<', J$.G(480833, J$.R(480809, 'buffer', buffer, false, false), J$.B(63818, '-', index = J$.W(480825, 'index', J$.B(63810, '+', J$.U(63802, '+', J$.R(480817, 'index', index, false, false)), 1), index, false, false), 1)), J$.T(480841, 24, 22, false))), stringSize, false, false);
                                    if (J$.C(26992, J$.C(26984, J$.C(26976, J$.B(63842, '<=', J$.R(480857, 'stringSize', stringSize, false, false), J$.T(480865, 0, 22, false))) ? J$._() : J$.B(63858, '>', J$.R(480873, 'stringSize', stringSize, false, false), J$.B(63850, '-', J$.G(480889, J$.R(480881, 'buffer', buffer, false, false), 'length'), J$.R(480897, 'index', index, false, false)))) ? J$._() : J$.B(63882, '!==', J$.G(480937, J$.R(480905, 'buffer', buffer, false, false), J$.B(63874, '-', J$.B(63866, '+', J$.R(480913, 'index', index, false, false), J$.R(480921, 'stringSize', stringSize, false, false)), J$.T(480929, 1, 22, false))), J$.T(480945, 0, 22, false))))
                                        throw J$.F(480969, J$.I(typeof Error === 'undefined' ? Error = J$.R(480953, 'Error', undefined, true, true) : Error = J$.R(480953, 'Error', Error, true, true)), true)(J$.T(480961, 'bad string length in bson', 21, false));
                                    var functionString = J$.W(481033, 'functionString', J$.M(481025, J$.R(480977, 'buffer', buffer, false, false), 'toString', false)(J$.T(480985, 'utf8', 21, false), J$.R(480993, 'index', index, false, false), J$.B(63898, '-', J$.B(63890, '+', J$.R(481001, 'index', index, false, false), J$.R(481009, 'stringSize', stringSize, false, false)), J$.T(481017, 1, 22, false))), functionString, false, false);
                                    if (J$.C(27016, J$.R(481041, 'evalFunctions', evalFunctions, false, false))) {
                                        if (J$.C(27008, J$.R(481049, 'cacheFunctions', cacheFunctions, false, false))) {
                                            var hash = J$.W(481097, 'hash', J$.C(27000, J$.R(481057, 'cacheFunctionsCrc32', cacheFunctionsCrc32, false, false)) ? J$.F(481081, J$.R(481065, 'crc32', crc32, false, false), false)(J$.R(481073, 'functionString', functionString, false, false)) : J$.R(481089, 'functionString', functionString, false, false), hash, false, false);
                                            J$.P(481169, J$.R(481105, 'object', object, false, false), J$.R(481113, 'name', name, false, false), J$.F(481161, J$.R(481121, 'isolateEvalWithHash', isolateEvalWithHash, false, true), false)(J$.R(481129, 'functionCache', functionCache, false, true), J$.R(481137, 'hash', hash, false, false), J$.R(481145, 'functionString', functionString, false, false), J$.R(481153, 'object', object, false, false)));
                                        } else {
                                            J$.P(481217, J$.R(481177, 'object', object, false, false), J$.R(481185, 'name', name, false, false), J$.F(481209, J$.R(481193, 'isolateEval', isolateEval, false, true), false)(J$.R(481201, 'functionString', functionString, false, false)));
                                        }
                                    } else {
                                        J$.P(481265, J$.R(481225, 'object', object, false, false), J$.R(481233, 'name', name, false, false), J$.F(481257, J$.R(481241, 'Code', Code, false, true), true)(J$.R(481249, 'functionString', functionString, false, false)));
                                    }
                                    index = J$.W(481289, 'index', J$.B(63906, '+', J$.R(481273, 'index', index, false, false), J$.R(481281, 'stringSize', stringSize, false, false)), index, false, false);
                                } else if (J$.C(27128, J$.B(63914, '===', J$.R(481297, 'elementType', elementType, false, false), J$.G(481313, J$.R(481305, 'BSON', BSON, false, true), 'BSON_DATA_CODE_W_SCOPE')))) {
                                    var totalSize = J$.W(481473, 'totalSize', J$.B(64058, '|', J$.B(64018, '|', J$.B(63978, '|', J$.G(481345, J$.R(481321, 'buffer', buffer, false, false), J$.B(63938, '-', index = J$.W(481337, 'index', J$.B(63930, '+', J$.U(63922, '+', J$.R(481329, 'index', index, false, false)), 1), index, false, false), 1)), J$.B(63970, '<<', J$.G(481377, J$.R(481353, 'buffer', buffer, false, false), J$.B(63962, '-', index = J$.W(481369, 'index', J$.B(63954, '+', J$.U(63946, '+', J$.R(481361, 'index', index, false, false)), 1), index, false, false), 1)), J$.T(481385, 8, 22, false))), J$.B(64010, '<<', J$.G(481417, J$.R(481393, 'buffer', buffer, false, false), J$.B(64002, '-', index = J$.W(481409, 'index', J$.B(63994, '+', J$.U(63986, '+', J$.R(481401, 'index', index, false, false)), 1), index, false, false), 1)), J$.T(481425, 16, 22, false))), J$.B(64050, '<<', J$.G(481457, J$.R(481433, 'buffer', buffer, false, false), J$.B(64042, '-', index = J$.W(481449, 'index', J$.B(64034, '+', J$.U(64026, '+', J$.R(481441, 'index', index, false, false)), 1), index, false, false), 1)), J$.T(481465, 24, 22, false))), totalSize, false, false);
                                    if (J$.C(27024, J$.B(64090, '<', J$.R(481481, 'totalSize', totalSize, false, false), J$.B(64082, '+', J$.B(64074, '+', J$.B(64066, '+', J$.T(481489, 4, 22, false), J$.T(481497, 4, 22, false)), J$.T(481505, 4, 22, false)), J$.T(481513, 1, 22, false))))) {
                                        throw J$.F(481537, J$.I(typeof Error === 'undefined' ? Error = J$.R(481521, 'Error', undefined, true, true) : Error = J$.R(481521, 'Error', Error, true, true)), true)(J$.T(481529, 'code_w_scope total size shorter minimum expected length', 21, false));
                                    }
                                    stringSize = J$.W(481697, 'stringSize', J$.B(64234, '|', J$.B(64194, '|', J$.B(64154, '|', J$.G(481569, J$.R(481545, 'buffer', buffer, false, false), J$.B(64114, '-', index = J$.W(481561, 'index', J$.B(64106, '+', J$.U(64098, '+', J$.R(481553, 'index', index, false, false)), 1), index, false, false), 1)), J$.B(64146, '<<', J$.G(481601, J$.R(481577, 'buffer', buffer, false, false), J$.B(64138, '-', index = J$.W(481593, 'index', J$.B(64130, '+', J$.U(64122, '+', J$.R(481585, 'index', index, false, false)), 1), index, false, false), 1)), J$.T(481609, 8, 22, false))), J$.B(64186, '<<', J$.G(481641, J$.R(481617, 'buffer', buffer, false, false), J$.B(64178, '-', index = J$.W(481633, 'index', J$.B(64170, '+', J$.U(64162, '+', J$.R(481625, 'index', index, false, false)), 1), index, false, false), 1)), J$.T(481649, 16, 22, false))), J$.B(64226, '<<', J$.G(481681, J$.R(481657, 'buffer', buffer, false, false), J$.B(64218, '-', index = J$.W(481673, 'index', J$.B(64210, '+', J$.U(64202, '+', J$.R(481665, 'index', index, false, false)), 1), index, false, false), 1)), J$.T(481689, 24, 22, false))), stringSize, false, false);
                                    if (J$.C(27048, J$.C(27040, J$.C(27032, J$.B(64242, '<=', J$.R(481705, 'stringSize', stringSize, false, false), J$.T(481713, 0, 22, false))) ? J$._() : J$.B(64258, '>', J$.R(481721, 'stringSize', stringSize, false, false), J$.B(64250, '-', J$.G(481737, J$.R(481729, 'buffer', buffer, false, false), 'length'), J$.R(481745, 'index', index, false, false)))) ? J$._() : J$.B(64282, '!==', J$.G(481785, J$.R(481753, 'buffer', buffer, false, false), J$.B(64274, '-', J$.B(64266, '+', J$.R(481761, 'index', index, false, false), J$.R(481769, 'stringSize', stringSize, false, false)), J$.T(481777, 1, 22, false))), J$.T(481793, 0, 22, false))))
                                        throw J$.F(481817, J$.I(typeof Error === 'undefined' ? Error = J$.R(481801, 'Error', undefined, true, true) : Error = J$.R(481801, 'Error', Error, true, true)), true)(J$.T(481809, 'bad string length in bson', 21, false));
                                    functionString = J$.W(481881, 'functionString', J$.M(481873, J$.R(481825, 'buffer', buffer, false, false), 'toString', false)(J$.T(481833, 'utf8', 21, false), J$.R(481841, 'index', index, false, false), J$.B(64298, '-', J$.B(64290, '+', J$.R(481849, 'index', index, false, false), J$.R(481857, 'stringSize', stringSize, false, false)), J$.T(481865, 1, 22, false))), functionString, false, false);
                                    index = J$.W(481905, 'index', J$.B(64306, '+', J$.R(481889, 'index', index, false, false), J$.R(481897, 'stringSize', stringSize, false, false)), index, false, false);
                                    _index = J$.W(481921, '_index', J$.R(481913, 'index', index, false, false), _index, false, false);
                                    objectSize = J$.W(482073, 'objectSize', J$.B(64378, '|', J$.B(64354, '|', J$.B(64330, '|', J$.G(481945, J$.R(481929, 'buffer', buffer, false, false), J$.R(481937, 'index', index, false, false)), J$.B(64322, '<<', J$.G(481977, J$.R(481953, 'buffer', buffer, false, false), J$.B(64314, '+', J$.R(481961, 'index', index, false, false), J$.T(481969, 1, 22, false))), J$.T(481985, 8, 22, false))), J$.B(64346, '<<', J$.G(482017, J$.R(481993, 'buffer', buffer, false, false), J$.B(64338, '+', J$.R(482001, 'index', index, false, false), J$.T(482009, 2, 22, false))), J$.T(482025, 16, 22, false))), J$.B(64370, '<<', J$.G(482057, J$.R(482033, 'buffer', buffer, false, false), J$.B(64362, '+', J$.R(482041, 'index', index, false, false), J$.T(482049, 3, 22, false))), J$.T(482065, 24, 22, false))), objectSize, false, false);
                                    var scopeObject = J$.W(482129, 'scopeObject', J$.F(482121, J$.R(482081, 'deserializeObject', deserializeObject, false, false), false)(J$.R(482089, 'buffer', buffer, false, false), J$.R(482097, '_index', _index, false, false), J$.R(482105, 'options', options, false, false), J$.T(482113, false, 23, false)), scopeObject, false, false);
                                    index = J$.W(482153, 'index', J$.B(64386, '+', J$.R(482137, 'index', index, false, false), J$.R(482145, 'objectSize', objectSize, false, false)), index, false, false);
                                    if (J$.C(27056, J$.B(64418, '<', J$.R(482161, 'totalSize', totalSize, false, false), J$.B(64410, '+', J$.B(64402, '+', J$.B(64394, '+', J$.T(482169, 4, 22, false), J$.T(482177, 4, 22, false)), J$.R(482185, 'objectSize', objectSize, false, false)), J$.R(482193, 'stringSize', stringSize, false, false))))) {
                                        throw J$.F(482217, J$.I(typeof Error === 'undefined' ? Error = J$.R(482201, 'Error', undefined, true, true) : Error = J$.R(482201, 'Error', Error, true, true)), true)(J$.T(482209, 'code_w_scope total size is to short, truncating scope', 21, false));
                                    }
                                    if (J$.C(27064, J$.B(64450, '>', J$.R(482225, 'totalSize', totalSize, false, false), J$.B(64442, '+', J$.B(64434, '+', J$.B(64426, '+', J$.T(482233, 4, 22, false), J$.T(482241, 4, 22, false)), J$.R(482249, 'objectSize', objectSize, false, false)), J$.R(482257, 'stringSize', stringSize, false, false))))) {
                                        throw J$.F(482281, J$.I(typeof Error === 'undefined' ? Error = J$.R(482265, 'Error', undefined, true, true) : Error = J$.R(482265, 'Error', Error, true, true)), true)(J$.T(482273, 'code_w_scope total size is to long, clips outer document', 21, false));
                                    }
                                    if (J$.C(27088, J$.R(482289, 'evalFunctions', evalFunctions, false, false))) {
                                        if (J$.C(27080, J$.R(482297, 'cacheFunctions', cacheFunctions, false, false))) {
                                            hash = J$.W(482345, 'hash', J$.C(27072, J$.R(482305, 'cacheFunctionsCrc32', cacheFunctionsCrc32, false, false)) ? J$.F(482329, J$.R(482313, 'crc32', crc32, false, false), false)(J$.R(482321, 'functionString', functionString, false, false)) : J$.R(482337, 'functionString', functionString, false, false), hash, false, false);
                                            J$.P(482417, J$.R(482353, 'object', object, false, false), J$.R(482361, 'name', name, false, false), J$.F(482409, J$.R(482369, 'isolateEvalWithHash', isolateEvalWithHash, false, true), false)(J$.R(482377, 'functionCache', functionCache, false, true), J$.R(482385, 'hash', hash, false, false), J$.R(482393, 'functionString', functionString, false, false), J$.R(482401, 'object', object, false, false)));
                                        } else {
                                            J$.P(482465, J$.R(482425, 'object', object, false, false), J$.R(482433, 'name', name, false, false), J$.F(482457, J$.R(482441, 'isolateEval', isolateEval, false, true), false)(J$.R(482449, 'functionString', functionString, false, false)));
                                        }
                                        J$.P(482505, J$.G(482489, J$.R(482473, 'object', object, false, false), J$.R(482481, 'name', name, false, false)), 'scope', J$.R(482497, 'scopeObject', scopeObject, false, false));
                                    } else {
                                        J$.P(482561, J$.R(482513, 'object', object, false, false), J$.R(482521, 'name', name, false, false), J$.F(482553, J$.R(482529, 'Code', Code, false, true), true)(J$.R(482537, 'functionString', functionString, false, false), J$.R(482545, 'scopeObject', scopeObject, false, false)));
                                    }
                                } else if (J$.C(27120, J$.B(64458, '===', J$.R(482569, 'elementType', elementType, false, false), J$.G(482585, J$.R(482577, 'BSON', BSON, false, true), 'BSON_DATA_DBPOINTER')))) {
                                    stringSize = J$.W(482745, 'stringSize', J$.B(64602, '|', J$.B(64562, '|', J$.B(64522, '|', J$.G(482617, J$.R(482593, 'buffer', buffer, false, false), J$.B(64482, '-', index = J$.W(482609, 'index', J$.B(64474, '+', J$.U(64466, '+', J$.R(482601, 'index', index, false, false)), 1), index, false, false), 1)), J$.B(64514, '<<', J$.G(482649, J$.R(482625, 'buffer', buffer, false, false), J$.B(64506, '-', index = J$.W(482641, 'index', J$.B(64498, '+', J$.U(64490, '+', J$.R(482633, 'index', index, false, false)), 1), index, false, false), 1)), J$.T(482657, 8, 22, false))), J$.B(64554, '<<', J$.G(482689, J$.R(482665, 'buffer', buffer, false, false), J$.B(64546, '-', index = J$.W(482681, 'index', J$.B(64538, '+', J$.U(64530, '+', J$.R(482673, 'index', index, false, false)), 1), index, false, false), 1)), J$.T(482697, 16, 22, false))), J$.B(64594, '<<', J$.G(482729, J$.R(482705, 'buffer', buffer, false, false), J$.B(64586, '-', index = J$.W(482721, 'index', J$.B(64578, '+', J$.U(64570, '+', J$.R(482713, 'index', index, false, false)), 1), index, false, false), 1)), J$.T(482737, 24, 22, false))), stringSize, false, false);
                                    if (J$.C(27112, J$.C(27104, J$.C(27096, J$.B(64610, '<=', J$.R(482753, 'stringSize', stringSize, false, false), J$.T(482761, 0, 22, false))) ? J$._() : J$.B(64626, '>', J$.R(482769, 'stringSize', stringSize, false, false), J$.B(64618, '-', J$.G(482785, J$.R(482777, 'buffer', buffer, false, false), 'length'), J$.R(482793, 'index', index, false, false)))) ? J$._() : J$.B(64650, '!==', J$.G(482833, J$.R(482801, 'buffer', buffer, false, false), J$.B(64642, '-', J$.B(64634, '+', J$.R(482809, 'index', index, false, false), J$.R(482817, 'stringSize', stringSize, false, false)), J$.T(482825, 1, 22, false))), J$.T(482841, 0, 22, false))))
                                        throw J$.F(482865, J$.I(typeof Error === 'undefined' ? Error = J$.R(482849, 'Error', undefined, true, true) : Error = J$.R(482849, 'Error', Error, true, true)), true)(J$.T(482857, 'bad string length in bson', 21, false));
                                    var namespace = J$.W(482929, 'namespace', J$.M(482921, J$.R(482873, 'buffer', buffer, false, false), 'toString', false)(J$.T(482881, 'utf8', 21, false), J$.R(482889, 'index', index, false, false), J$.B(64666, '-', J$.B(64658, '+', J$.R(482897, 'index', index, false, false), J$.R(482905, 'stringSize', stringSize, false, false)), J$.T(482913, 1, 22, false))), namespace, false, false);
                                    index = J$.W(482953, 'index', J$.B(64674, '+', J$.R(482937, 'index', index, false, false), J$.R(482945, 'stringSize', stringSize, false, false)), index, false, false);
                                    var oidBuffer = J$.W(482985, 'oidBuffer', J$.M(482977, J$.R(482961, 'utils', utils, false, true), 'allocBuffer', false)(J$.T(482969, 12, 22, false)), oidBuffer, false, false);
                                    J$.M(483041, J$.R(482993, 'buffer', buffer, false, false), 'copy', false)(J$.R(483001, 'oidBuffer', oidBuffer, false, false), J$.T(483009, 0, 22, false), J$.R(483017, 'index', index, false, false), J$.B(64682, '+', J$.R(483025, 'index', index, false, false), J$.T(483033, 12, 22, false)));
                                    oid = J$.W(483073, 'oid', J$.F(483065, J$.R(483049, 'ObjectID', ObjectID, false, true), true)(J$.R(483057, 'oidBuffer', oidBuffer, false, false)), oid, false, false);
                                    index = J$.W(483097, 'index', J$.B(64690, '+', J$.R(483081, 'index', index, false, false), J$.T(483089, 12, 22, false)), index, false, false);
                                    var parts = J$.W(483129, 'parts', J$.M(483121, J$.R(483105, 'namespace', namespace, false, false), 'split', false)(J$.T(483113, '.', 21, false)), parts, false, false);
                                    var db = J$.W(483153, 'db', J$.M(483145, J$.R(483137, 'parts', parts, false, false), 'shift', false)(), db, false, false);
                                    var collection = J$.W(483185, 'collection', J$.M(483177, J$.R(483161, 'parts', parts, false, false), 'join', false)(J$.T(483169, '.', 21, false)), collection, false, false);
                                    J$.P(483249, J$.R(483193, 'object', object, false, false), J$.R(483201, 'name', name, false, false), J$.F(483241, J$.R(483209, 'DBRef', DBRef, false, true), true)(J$.R(483217, 'collection', collection, false, false), J$.R(483225, 'oid', oid, false, false), J$.R(483233, 'db', db, false, false)));
                                } else {
                                    throw J$.F(483321, J$.I(typeof Error === 'undefined' ? Error = J$.R(483257, 'Error', undefined, true, true) : Error = J$.R(483257, 'Error', Error, true, true)), true)(J$.B(64722, '+', J$.B(64714, '+', J$.B(64706, '+', J$.B(64698, '+', J$.T(483265, 'Detected unknown BSON type ', 21, false), J$.M(483289, J$.R(483273, 'elementType', elementType, false, false), 'toString', false)(J$.T(483281, 16, 22, false))), J$.T(483297, ' for fieldname "', 21, false)), J$.R(483305, 'name', name, false, false)), J$.T(483313, '", are you using the latest BSON parser', 21, false)));
                                }
                            }
                            if (J$.C(27328, J$.B(64738, '!==', J$.R(483329, 'size', size, false, false), J$.B(64730, '-', J$.R(483337, 'index', index, false, false), J$.R(483345, 'startIndex', startIndex, false, false))))) {
                                if (J$.C(27320, J$.R(483353, 'isArray', isArray, false, false)))
                                    throw J$.F(483377, J$.I(typeof Error === 'undefined' ? Error = J$.R(483361, 'Error', undefined, true, true) : Error = J$.R(483361, 'Error', Error, true, true)), true)(J$.T(483369, 'corrupt array bson', 21, false));
                                throw J$.F(483401, J$.I(typeof Error === 'undefined' ? Error = J$.R(483385, 'Error', undefined, true, true) : Error = J$.R(483385, 'Error', Error, true, true)), true)(J$.T(483393, 'corrupt object bson', 21, false));
                            }
                            if (J$.C(27336, J$.B(64746, '!=', J$.G(483425, J$.R(483409, 'object', object, false, false), J$.T(483417, '$id', 21, false)), J$.T(483433, null, 25, false))))
                                object = J$.W(483529, 'object', J$.F(483521, J$.R(483441, 'DBRef', DBRef, false, true), true)(J$.G(483465, J$.R(483449, 'object', object, false, false), J$.T(483457, '$ref', 21, false)), J$.G(483489, J$.R(483473, 'object', object, false, false), J$.T(483481, '$id', 21, false)), J$.G(483513, J$.R(483497, 'object', object, false, false), J$.T(483505, '$db', 21, false))), object, false, false);
                            return J$.Rt(483545, J$.R(483537, 'object', object, false, false));
                        } catch (J$e) {
                            J$.Ex(485497, J$e);
                        } finally {
                            if (J$.Fr(485505))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false), deserializeObject, false, true);
            var isolateEvalWithHash = J$.W(484201, 'isolateEvalWithHash', J$.T(484193, function isolateEvalWithHash(functionCache, hash, functionString, object) {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(484137, arguments.callee, this, arguments);
                            arguments = J$.N(484145, 'arguments', arguments, true, false, false);
                            functionCache = J$.N(484153, 'functionCache', functionCache, true, false, false);
                            hash = J$.N(484161, 'hash', hash, true, false, false);
                            functionString = J$.N(484169, 'functionString', functionString, true, false, false);
                            object = J$.N(484177, 'object', object, true, false, false);
                            J$.N(484185, 'value', value, false, false, false);
                            var value = J$.W(483993, 'value', J$.T(483985, null, 25, false), value, false, false);
                            if (J$.C(27344, J$.B(64754, '==', J$.G(484017, J$.R(484001, 'functionCache', functionCache, false, false), J$.R(484009, 'hash', hash, false, false)), J$.T(484025, null, 25, false)))) {
                                eval(J$.instrumentCode(J$.getConcrete(J$.B(64762, '+', J$.T(484033, 'value = ', 21, false), J$.R(484041, 'functionString', functionString, false, false))), {
                                    wrapProgram: false,
                                    isEval: true
                                }, 484049, J$.evalInvoked(J$.B(64770, '+', J$.T(484033, 'value = ', 21, false), J$.R(484041, 'functionString', functionString, false, false)), 484049)).code);
                                J$.P(484081, J$.R(484057, 'functionCache', functionCache, false, false), J$.R(484065, 'hash', hash, false, false), J$.R(484073, 'value', value, false, false));
                            }
                            return J$.Rt(484129, J$.M(484121, J$.G(484105, J$.R(484089, 'functionCache', functionCache, false, false), J$.R(484097, 'hash', hash, false, false)), 'bind', false)(J$.R(484113, 'object', object, false, false)));
                        } catch (J$e) {
                            J$.Ex(485513, J$e);
                        } finally {
                            if (J$.Fr(485521))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false), isolateEvalWithHash, false, true);
            var isolateEval = J$.W(484305, 'isolateEval', J$.T(484297, function isolateEval(functionString) {
                jalangiLabel3:
                    while (true) {
                        try {
                            J$.Fe(484265, arguments.callee, this, arguments);
                            arguments = J$.N(484273, 'arguments', arguments, true, false, false);
                            functionString = J$.N(484281, 'functionString', functionString, true, false, false);
                            J$.N(484289, 'value', value, false, false, false);
                            var value = J$.W(484217, 'value', J$.T(484209, null, 25, false), value, false, false);
                            eval(J$.instrumentCode(J$.getConcrete(J$.B(64778, '+', J$.T(484225, 'value = ', 21, false), J$.R(484233, 'functionString', functionString, false, false))), {
                                wrapProgram: false,
                                isEval: true
                            }, 484241, J$.evalInvoked(J$.B(64786, '+', J$.T(484225, 'value = ', 21, false), J$.R(484233, 'functionString', functionString, false, false)), 484241)).code);
                            return J$.Rt(484257, J$.R(484249, 'value', value, false, false));
                        } catch (J$e) {
                            J$.Ex(485529, J$e);
                        } finally {
                            if (J$.Fr(485537))
                                continue jalangiLabel3;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false), isolateEval, false, true);
            var BSON = J$.W(484321, 'BSON', J$.T(484313, {}, 11, false), BSON, false, true);
            var functionCache = J$.W(484353, 'functionCache', J$.P(484345, J$.R(484329, 'BSON', BSON, false, true), 'functionCache', J$.T(484337, {}, 11, false)), functionCache, false, true);
            J$.P(484377, J$.R(484361, 'BSON', BSON, false, true), 'BSON_DATA_NUMBER', J$.T(484369, 1, 22, false));
            J$.P(484401, J$.R(484385, 'BSON', BSON, false, true), 'BSON_DATA_STRING', J$.T(484393, 2, 22, false));
            J$.P(484425, J$.R(484409, 'BSON', BSON, false, true), 'BSON_DATA_OBJECT', J$.T(484417, 3, 22, false));
            J$.P(484449, J$.R(484433, 'BSON', BSON, false, true), 'BSON_DATA_ARRAY', J$.T(484441, 4, 22, false));
            J$.P(484473, J$.R(484457, 'BSON', BSON, false, true), 'BSON_DATA_BINARY', J$.T(484465, 5, 22, false));
            J$.P(484497, J$.R(484481, 'BSON', BSON, false, true), 'BSON_DATA_UNDEFINED', J$.T(484489, 6, 22, false));
            J$.P(484521, J$.R(484505, 'BSON', BSON, false, true), 'BSON_DATA_OID', J$.T(484513, 7, 22, false));
            J$.P(484545, J$.R(484529, 'BSON', BSON, false, true), 'BSON_DATA_BOOLEAN', J$.T(484537, 8, 22, false));
            J$.P(484569, J$.R(484553, 'BSON', BSON, false, true), 'BSON_DATA_DATE', J$.T(484561, 9, 22, false));
            J$.P(484593, J$.R(484577, 'BSON', BSON, false, true), 'BSON_DATA_NULL', J$.T(484585, 10, 22, false));
            J$.P(484617, J$.R(484601, 'BSON', BSON, false, true), 'BSON_DATA_REGEXP', J$.T(484609, 11, 22, false));
            J$.P(484641, J$.R(484625, 'BSON', BSON, false, true), 'BSON_DATA_DBPOINTER', J$.T(484633, 12, 22, false));
            J$.P(484665, J$.R(484649, 'BSON', BSON, false, true), 'BSON_DATA_CODE', J$.T(484657, 13, 22, false));
            J$.P(484689, J$.R(484673, 'BSON', BSON, false, true), 'BSON_DATA_SYMBOL', J$.T(484681, 14, 22, false));
            J$.P(484713, J$.R(484697, 'BSON', BSON, false, true), 'BSON_DATA_CODE_W_SCOPE', J$.T(484705, 15, 22, false));
            J$.P(484737, J$.R(484721, 'BSON', BSON, false, true), 'BSON_DATA_INT', J$.T(484729, 16, 22, false));
            J$.P(484761, J$.R(484745, 'BSON', BSON, false, true), 'BSON_DATA_TIMESTAMP', J$.T(484753, 17, 22, false));
            J$.P(484785, J$.R(484769, 'BSON', BSON, false, true), 'BSON_DATA_LONG', J$.T(484777, 18, 22, false));
            J$.P(484809, J$.R(484793, 'BSON', BSON, false, true), 'BSON_DATA_DECIMAL128', J$.T(484801, 19, 22, false));
            J$.P(484833, J$.R(484817, 'BSON', BSON, false, true), 'BSON_DATA_MIN_KEY', J$.T(484825, 255, 22, false));
            J$.P(484857, J$.R(484841, 'BSON', BSON, false, true), 'BSON_DATA_MAX_KEY', J$.T(484849, 127, 22, false));
            J$.P(484881, J$.R(484865, 'BSON', BSON, false, true), 'BSON_BINARY_SUBTYPE_DEFAULT', J$.T(484873, 0, 22, false));
            J$.P(484905, J$.R(484889, 'BSON', BSON, false, true), 'BSON_BINARY_SUBTYPE_FUNCTION', J$.T(484897, 1, 22, false));
            J$.P(484929, J$.R(484913, 'BSON', BSON, false, true), 'BSON_BINARY_SUBTYPE_BYTE_ARRAY', J$.T(484921, 2, 22, false));
            J$.P(484953, J$.R(484937, 'BSON', BSON, false, true), 'BSON_BINARY_SUBTYPE_UUID', J$.T(484945, 3, 22, false));
            J$.P(484977, J$.R(484961, 'BSON', BSON, false, true), 'BSON_BINARY_SUBTYPE_MD5', J$.T(484969, 4, 22, false));
            J$.P(485001, J$.R(484985, 'BSON', BSON, false, true), 'BSON_BINARY_SUBTYPE_USER_DEFINED', J$.T(484993, 128, 22, false));
            J$.P(485025, J$.R(485009, 'BSON', BSON, false, true), 'BSON_INT32_MAX', J$.T(485017, 2147483647, 22, false));
            J$.P(485049, J$.R(485033, 'BSON', BSON, false, true), 'BSON_INT32_MIN', J$.U(64794, '-', J$.T(485041, 2147483648, 22, false)));
            J$.P(485105, J$.R(485057, 'BSON', BSON, false, true), 'BSON_INT64_MAX', J$.B(64802, '-', J$.M(485089, J$.I(typeof Math === 'undefined' ? Math = J$.R(485065, 'Math', undefined, true, true) : Math = J$.R(485065, 'Math', Math, true, true)), 'pow', false)(J$.T(485073, 2, 22, false), J$.T(485081, 63, 22, false)), J$.T(485097, 1, 22, false)));
            J$.P(485153, J$.R(485113, 'BSON', BSON, false, true), 'BSON_INT64_MIN', J$.U(64810, '-', J$.M(485145, J$.I(typeof Math === 'undefined' ? Math = J$.R(485121, 'Math', undefined, true, true) : Math = J$.R(485121, 'Math', Math, true, true)), 'pow', false)(J$.T(485129, 2, 22, false), J$.T(485137, 63, 22, false))));
            J$.P(485177, J$.R(485161, 'BSON', BSON, false, true), 'JS_INT_MAX', J$.T(485169, 9007199254740992, 22, false));
            J$.P(485201, J$.R(485185, 'BSON', BSON, false, true), 'JS_INT_MIN', J$.U(64818, '-', J$.T(485193, 9007199254740992, 22, false)));
            var JS_INT_MAX_LONG = J$.W(485233, 'JS_INT_MAX_LONG', J$.M(485225, J$.R(485209, 'Long', Long, false, true), 'fromNumber', false)(J$.T(485217, 9007199254740992, 22, false)), JS_INT_MAX_LONG, false, true);
            var JS_INT_MIN_LONG = J$.W(485265, 'JS_INT_MIN_LONG', J$.M(485257, J$.R(485241, 'Long', Long, false, true), 'fromNumber', false)(J$.U(64826, '-', J$.T(485249, 9007199254740992, 22, false))), JS_INT_MIN_LONG, false, true);
            J$.P(485289, J$.I(typeof module === 'undefined' ? module = J$.R(485273, 'module', undefined, true, true) : module = J$.R(485273, 'module', module, true, true)), 'exports', J$.R(485281, 'deserialize', deserialize, false, true));
        } catch (J$e) {
            J$.Ex(485545, J$e);
        } finally {
            if (J$.Sr(485553))
                continue jalangiLabel4;
            else
                break jalangiLabel4;
        }
    }
// JALANGI DO NOT INSTRUMENT

