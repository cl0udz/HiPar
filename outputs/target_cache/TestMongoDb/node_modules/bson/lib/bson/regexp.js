J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(512401, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestMongoDb/node_modules/bson/lib/bson/regexp.js');
            function BSONRegExp(pattern, options) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(512305, arguments.callee, this, arguments);
                            arguments = J$.N(512313, 'arguments', arguments, true, false, false);
                            pattern = J$.N(512321, 'pattern', pattern, true, false, false);
                            options = J$.N(512329, 'options', options, true, false, false);
                            J$.N(512337, 'i', i, false, false, false);
                            if (J$.C(28792, J$.U(71122, '!', J$.B(71114, 'instanceof', J$.R(511809, 'this', this, false, false), J$.R(511817, 'BSONRegExp', BSONRegExp, false, true)))))
                                return J$.Rt(511841, J$.F(511833, J$.R(511825, 'BSONRegExp', BSONRegExp, false, true), true)());
                            J$.P(511865, J$.R(511849, 'this', this, false, false), '_bsontype', J$.T(511857, 'BSONRegExp', 21, false));
                            J$.P(511897, J$.R(511873, 'this', this, false, false), 'pattern', J$.C(28800, J$.R(511881, 'pattern', pattern, false, false)) ? J$._() : J$.T(511889, '', 21, false));
                            J$.P(511929, J$.R(511905, 'this', this, false, false), 'options', J$.C(28808, J$.R(511913, 'options', options, false, false)) ? J$._() : J$.T(511921, '', 21, false));
                            for (var i = J$.W(511945, 'i', J$.T(511937, 0, 22, false), i, false, false); J$.C(28864, J$.B(71130, '<', J$.R(511953, 'i', i, false, false), J$.G(511977, J$.G(511969, J$.R(511961, 'this', this, false, false), 'options'), 'length'))); J$.B(71154, '-', i = J$.W(511993, 'i', J$.B(71146, '+', J$.U(71138, '+', J$.R(511985, 'i', i, false, false)), 1), i, false, false), 1)) {
                                if (J$.C(28856, J$.U(71210, '!', J$.C(28848, J$.C(28840, J$.C(28832, J$.C(28824, J$.C(28816, J$.B(71162, '===', J$.G(512025, J$.G(512009, J$.R(512001, 'this', this, false, false), 'options'), J$.R(512017, 'i', i, false, false)), J$.T(512033, 'i', 21, false))) ? J$._() : J$.B(71170, '===', J$.G(512065, J$.G(512049, J$.R(512041, 'this', this, false, false), 'options'), J$.R(512057, 'i', i, false, false)), J$.T(512073, 'm', 21, false))) ? J$._() : J$.B(71178, '===', J$.G(512105, J$.G(512089, J$.R(512081, 'this', this, false, false), 'options'), J$.R(512097, 'i', i, false, false)), J$.T(512113, 'x', 21, false))) ? J$._() : J$.B(71186, '===', J$.G(512145, J$.G(512129, J$.R(512121, 'this', this, false, false), 'options'), J$.R(512137, 'i', i, false, false)), J$.T(512153, 'l', 21, false))) ? J$._() : J$.B(71194, '===', J$.G(512185, J$.G(512169, J$.R(512161, 'this', this, false, false), 'options'), J$.R(512177, 'i', i, false, false)), J$.T(512193, 's', 21, false))) ? J$._() : J$.B(71202, '===', J$.G(512225, J$.G(512209, J$.R(512201, 'this', this, false, false), 'options'), J$.R(512217, 'i', i, false, false)), J$.T(512233, 'u', 21, false))))) {
                                    throw J$.F(512297, J$.I(typeof Error === 'undefined' ? Error = J$.R(512241, 'Error', undefined, true, true) : Error = J$.R(512241, 'Error', Error, true, true)), true)(J$.B(71226, '+', J$.B(71218, '+', J$.T(512249, 'the regular expression options [', 21, false), J$.G(512281, J$.G(512265, J$.R(512257, 'this', this, false, false), 'options'), J$.R(512273, 'i', i, false, false))), J$.T(512289, '] is not supported', 21, false)));
                                }
                            }
                        } catch (J$e) {
                            J$.Ex(512425, J$e);
                        } finally {
                            if (J$.Fr(512433))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            BSONRegExp = J$.N(512417, 'BSONRegExp', J$.T(512409, BSONRegExp, 12, false), true, false, false);
            J$.T(511801, 'use strict', 21, false);
            J$.P(512361, J$.I(typeof module === 'undefined' ? module = J$.R(512345, 'module', undefined, true, true) : module = J$.R(512345, 'module', module, true, true)), 'exports', J$.R(512353, 'BSONRegExp', BSONRegExp, false, true));
            J$.P(512393, J$.G(512377, J$.I(typeof module === 'undefined' ? module = J$.R(512369, 'module', undefined, true, true) : module = J$.R(512369, 'module', module, true, true)), 'exports'), 'BSONRegExp', J$.R(512385, 'BSONRegExp', BSONRegExp, false, true));
        } catch (J$e) {
            J$.Ex(512441, J$e);
        } finally {
            if (J$.Sr(512449))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

