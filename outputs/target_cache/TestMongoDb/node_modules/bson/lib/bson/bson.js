J$.noInstrEval = false;
jalangiLabel6:
    while (true) {
        try {
            J$.Se(424009, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestMongoDb/node_modules/bson/lib/bson/bson.js');
            J$.N(424017, 'Map', Map, false, false, false);
            J$.N(424025, 'Long', Long, false, false, false);
            J$.N(424033, 'Double', Double, false, false, false);
            J$.N(424041, 'Timestamp', Timestamp, false, false, false);
            J$.N(424049, 'ObjectID', ObjectID, false, false, false);
            J$.N(424057, 'BSONRegExp', BSONRegExp, false, false, false);
            J$.N(424065, '_Symbol', _Symbol, false, false, false);
            J$.N(424073, 'Int32', Int32, false, false, false);
            J$.N(424081, 'Code', Code, false, false, false);
            J$.N(424089, 'Decimal128', Decimal128, false, false, false);
            J$.N(424097, 'MinKey', MinKey, false, false, false);
            J$.N(424105, 'MaxKey', MaxKey, false, false, false);
            J$.N(424113, 'DBRef', DBRef, false, false, false);
            J$.N(424121, 'Binary', Binary, false, false, false);
            J$.N(424129, 'deserialize', deserialize, false, false, false);
            J$.N(424137, 'serializer', serializer, false, false, false);
            J$.N(424145, 'calculateObjectSize', calculateObjectSize, false, false, false);
            J$.N(424153, 'utils', utils, false, false, false);
            J$.N(424161, 'MAXSIZE', MAXSIZE, false, false, false);
            J$.N(424169, 'buffer', buffer, false, false, false);
            J$.N(424177, 'BSON', BSON, false, false, false);
            J$.T(420089, 'use strict', 21, false);
            var Map = J$.W(420433, 'Map', J$.F(420113, J$.I(typeof require === 'undefined' ? require = J$.R(420097, 'require', undefined, true, true) : require = J$.R(420097, 'require', require, true, true)), false)(J$.T(420105, './map', 21, false)), Map, false, true), Long = J$.W(420441, 'Long', J$.F(420137, J$.I(typeof require === 'undefined' ? require = J$.R(420121, 'require', undefined, true, true) : require = J$.R(420121, 'require', require, true, true)), false)(J$.T(420129, './long', 21, false)), Long, false, true), Double = J$.W(420449, 'Double', J$.F(420161, J$.I(typeof require === 'undefined' ? require = J$.R(420145, 'require', undefined, true, true) : require = J$.R(420145, 'require', require, true, true)), false)(J$.T(420153, './double', 21, false)), Double, false, true), Timestamp = J$.W(420457, 'Timestamp', J$.F(420185, J$.I(typeof require === 'undefined' ? require = J$.R(420169, 'require', undefined, true, true) : require = J$.R(420169, 'require', require, true, true)), false)(J$.T(420177, './timestamp', 21, false)), Timestamp, false, true), ObjectID = J$.W(420465, 'ObjectID', J$.F(420209, J$.I(typeof require === 'undefined' ? require = J$.R(420193, 'require', undefined, true, true) : require = J$.R(420193, 'require', require, true, true)), false)(J$.T(420201, './objectid', 21, false)), ObjectID, false, true), BSONRegExp = J$.W(420473, 'BSONRegExp', J$.F(420233, J$.I(typeof require === 'undefined' ? require = J$.R(420217, 'require', undefined, true, true) : require = J$.R(420217, 'require', require, true, true)), false)(J$.T(420225, './regexp', 21, false)), BSONRegExp, false, true), _Symbol = J$.W(420481, '_Symbol', J$.F(420257, J$.I(typeof require === 'undefined' ? require = J$.R(420241, 'require', undefined, true, true) : require = J$.R(420241, 'require', require, true, true)), false)(J$.T(420249, './symbol', 21, false)), _Symbol, false, true), Int32 = J$.W(420489, 'Int32', J$.F(420281, J$.I(typeof require === 'undefined' ? require = J$.R(420265, 'require', undefined, true, true) : require = J$.R(420265, 'require', require, true, true)), false)(J$.T(420273, './int_32', 21, false)), Int32, false, true), Code = J$.W(420497, 'Code', J$.F(420305, J$.I(typeof require === 'undefined' ? require = J$.R(420289, 'require', undefined, true, true) : require = J$.R(420289, 'require', require, true, true)), false)(J$.T(420297, './code', 21, false)), Code, false, true), Decimal128 = J$.W(420505, 'Decimal128', J$.F(420329, J$.I(typeof require === 'undefined' ? require = J$.R(420313, 'require', undefined, true, true) : require = J$.R(420313, 'require', require, true, true)), false)(J$.T(420321, './decimal128', 21, false)), Decimal128, false, true), MinKey = J$.W(420513, 'MinKey', J$.F(420353, J$.I(typeof require === 'undefined' ? require = J$.R(420337, 'require', undefined, true, true) : require = J$.R(420337, 'require', require, true, true)), false)(J$.T(420345, './min_key', 21, false)), MinKey, false, true), MaxKey = J$.W(420521, 'MaxKey', J$.F(420377, J$.I(typeof require === 'undefined' ? require = J$.R(420361, 'require', undefined, true, true) : require = J$.R(420361, 'require', require, true, true)), false)(J$.T(420369, './max_key', 21, false)), MaxKey, false, true), DBRef = J$.W(420529, 'DBRef', J$.F(420401, J$.I(typeof require === 'undefined' ? require = J$.R(420385, 'require', undefined, true, true) : require = J$.R(420385, 'require', require, true, true)), false)(J$.T(420393, './db_ref', 21, false)), DBRef, false, true), Binary = J$.W(420537, 'Binary', J$.F(420425, J$.I(typeof require === 'undefined' ? require = J$.R(420409, 'require', undefined, true, true) : require = J$.R(420409, 'require', require, true, true)), false)(J$.T(420417, './binary', 21, false)), Binary, false, true);
            var deserialize = J$.W(420641, 'deserialize', J$.F(420561, J$.I(typeof require === 'undefined' ? require = J$.R(420545, 'require', undefined, true, true) : require = J$.R(420545, 'require', require, true, true)), false)(J$.T(420553, './parser/deserializer', 21, false)), deserialize, false, true), serializer = J$.W(420649, 'serializer', J$.F(420585, J$.I(typeof require === 'undefined' ? require = J$.R(420569, 'require', undefined, true, true) : require = J$.R(420569, 'require', require, true, true)), false)(J$.T(420577, './parser/serializer', 21, false)), serializer, false, true), calculateObjectSize = J$.W(420657, 'calculateObjectSize', J$.F(420609, J$.I(typeof require === 'undefined' ? require = J$.R(420593, 'require', undefined, true, true) : require = J$.R(420593, 'require', require, true, true)), false)(J$.T(420601, './parser/calculate_size', 21, false)), calculateObjectSize, false, true), utils = J$.W(420665, 'utils', J$.F(420633, J$.I(typeof require === 'undefined' ? require = J$.R(420617, 'require', undefined, true, true) : require = J$.R(420617, 'require', require, true, true)), false)(J$.T(420625, './parser/utils', 21, false)), utils, false, true);
            var MAXSIZE = J$.W(420697, 'MAXSIZE', J$.B(50810, '*', J$.B(50802, '*', J$.T(420673, 1024, 22, false), J$.T(420681, 1024, 22, false)), J$.T(420689, 17, 22, false)), MAXSIZE, false, true);
            var buffer = J$.W(420729, 'buffer', J$.M(420721, J$.R(420705, 'utils', utils, false, true), 'allocBuffer', false)(J$.R(420713, 'MAXSIZE', MAXSIZE, false, true)), buffer, false, true);
            var BSON = J$.W(420761, 'BSON', J$.T(420753, function BSON() {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(420737, arguments.callee, this, arguments);
                            arguments = J$.N(420745, 'arguments', arguments, true, false, false);
                        } catch (J$e) {
                            J$.Ex(424185, J$e);
                        } finally {
                            if (J$.Fr(424193))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false), BSON, false, true);
            J$.P(421369, J$.G(420777, J$.R(420769, 'BSON', BSON, false, true), 'prototype'), 'serialize', J$.T(421361, function serialize(object, options) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(421281, arguments.callee, this, arguments);
                            arguments = J$.N(421289, 'arguments', arguments, true, false, false);
                            object = J$.N(421297, 'object', object, true, false, false);
                            options = J$.N(421305, 'options', options, true, false, false);
                            J$.N(421313, 'checkKeys', checkKeys, false, false, false);
                            J$.N(421321, 'serializeFunctions', serializeFunctions, false, false, false);
                            J$.N(421329, 'ignoreUndefined', ignoreUndefined, false, false, false);
                            J$.N(421337, 'minInternalBufferSize', minInternalBufferSize, false, false, false);
                            J$.N(421345, 'serializationIndex', serializationIndex, false, false, false);
                            J$.N(421353, 'finishedBuffer', finishedBuffer, false, false, false);
                            options = J$.W(420801, 'options', J$.C(22944, J$.R(420785, 'options', options, false, false)) ? J$._() : J$.T(420793, {}, 11, false), options, false, false);
                            var checkKeys = J$.W(420857, 'checkKeys', J$.C(22952, J$.B(50826, '===', J$.U(50818, 'typeof', J$.G(420817, J$.R(420809, 'options', options, false, false), 'checkKeys')), J$.T(420825, 'boolean', 21, false))) ? J$.G(420841, J$.R(420833, 'options', options, false, false), 'checkKeys') : J$.T(420849, false, 23, false), checkKeys, false, false);
                            var serializeFunctions = J$.W(420913, 'serializeFunctions', J$.C(22960, J$.B(50842, '===', J$.U(50834, 'typeof', J$.G(420873, J$.R(420865, 'options', options, false, false), 'serializeFunctions')), J$.T(420881, 'boolean', 21, false))) ? J$.G(420897, J$.R(420889, 'options', options, false, false), 'serializeFunctions') : J$.T(420905, false, 23, false), serializeFunctions, false, false);
                            var ignoreUndefined = J$.W(420969, 'ignoreUndefined', J$.C(22968, J$.B(50858, '===', J$.U(50850, 'typeof', J$.G(420929, J$.R(420921, 'options', options, false, false), 'ignoreUndefined')), J$.T(420937, 'boolean', 21, false))) ? J$.G(420953, J$.R(420945, 'options', options, false, false), 'ignoreUndefined') : J$.T(420961, true, 23, false), ignoreUndefined, false, false);
                            var minInternalBufferSize = J$.W(421025, 'minInternalBufferSize', J$.C(22976, J$.B(50874, '===', J$.U(50866, 'typeof', J$.G(420985, J$.R(420977, 'options', options, false, false), 'minInternalBufferSize')), J$.T(420993, 'number', 21, false))) ? J$.G(421009, J$.R(421001, 'options', options, false, false), 'minInternalBufferSize') : J$.R(421017, 'MAXSIZE', MAXSIZE, false, true), minInternalBufferSize, false, false);
                            if (J$.C(22984, J$.B(50882, '<', J$.G(421041, J$.R(421033, 'buffer', buffer, false, true), 'length'), J$.R(421049, 'minInternalBufferSize', minInternalBufferSize, false, false)))) {
                                buffer = J$.W(421081, 'buffer', J$.M(421073, J$.R(421057, 'utils', utils, false, true), 'allocBuffer', false)(J$.R(421065, 'minInternalBufferSize', minInternalBufferSize, false, false)), buffer, false, true);
                            }
                            var serializationIndex = J$.W(421169, 'serializationIndex', J$.F(421161, J$.R(421089, 'serializer', serializer, false, true), false)(J$.R(421097, 'buffer', buffer, false, true), J$.R(421105, 'object', object, false, false), J$.R(421113, 'checkKeys', checkKeys, false, false), J$.T(421121, 0, 22, false), J$.T(421129, 0, 22, false), J$.R(421137, 'serializeFunctions', serializeFunctions, false, false), J$.R(421145, 'ignoreUndefined', ignoreUndefined, false, false), J$.T(421153, [], 10, false)), serializationIndex, false, false);
                            var finishedBuffer = J$.W(421201, 'finishedBuffer', J$.M(421193, J$.R(421177, 'utils', utils, false, true), 'allocBuffer', false)(J$.R(421185, 'serializationIndex', serializationIndex, false, false)), finishedBuffer, false, false);
                            J$.M(421257, J$.R(421209, 'buffer', buffer, false, true), 'copy', false)(J$.R(421217, 'finishedBuffer', finishedBuffer, false, false), J$.T(421225, 0, 22, false), J$.T(421233, 0, 22, false), J$.G(421249, J$.R(421241, 'finishedBuffer', finishedBuffer, false, false), 'length'));
                            return J$.Rt(421273, J$.R(421265, 'finishedBuffer', finishedBuffer, false, false));
                        } catch (J$e) {
                            J$.Ex(424201, J$e);
                        } finally {
                            if (J$.Fr(424209))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(421841, J$.G(421385, J$.R(421377, 'BSON', BSON, false, true), 'prototype'), 'serializeWithBufferAndIndex', J$.T(421833, function (object, finalBuffer, options) {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(421753, arguments.callee, this, arguments);
                            arguments = J$.N(421761, 'arguments', arguments, true, false, false);
                            object = J$.N(421769, 'object', object, true, false, false);
                            finalBuffer = J$.N(421777, 'finalBuffer', finalBuffer, true, false, false);
                            options = J$.N(421785, 'options', options, true, false, false);
                            J$.N(421793, 'checkKeys', checkKeys, false, false, false);
                            J$.N(421801, 'serializeFunctions', serializeFunctions, false, false, false);
                            J$.N(421809, 'ignoreUndefined', ignoreUndefined, false, false, false);
                            J$.N(421817, 'startIndex', startIndex, false, false, false);
                            J$.N(421825, 'serializationIndex', serializationIndex, false, false, false);
                            options = J$.W(421409, 'options', J$.C(22992, J$.R(421393, 'options', options, false, false)) ? J$._() : J$.T(421401, {}, 11, false), options, false, false);
                            var checkKeys = J$.W(421465, 'checkKeys', J$.C(23000, J$.B(50898, '===', J$.U(50890, 'typeof', J$.G(421425, J$.R(421417, 'options', options, false, false), 'checkKeys')), J$.T(421433, 'boolean', 21, false))) ? J$.G(421449, J$.R(421441, 'options', options, false, false), 'checkKeys') : J$.T(421457, false, 23, false), checkKeys, false, false);
                            var serializeFunctions = J$.W(421521, 'serializeFunctions', J$.C(23008, J$.B(50914, '===', J$.U(50906, 'typeof', J$.G(421481, J$.R(421473, 'options', options, false, false), 'serializeFunctions')), J$.T(421489, 'boolean', 21, false))) ? J$.G(421505, J$.R(421497, 'options', options, false, false), 'serializeFunctions') : J$.T(421513, false, 23, false), serializeFunctions, false, false);
                            var ignoreUndefined = J$.W(421577, 'ignoreUndefined', J$.C(23016, J$.B(50930, '===', J$.U(50922, 'typeof', J$.G(421537, J$.R(421529, 'options', options, false, false), 'ignoreUndefined')), J$.T(421545, 'boolean', 21, false))) ? J$.G(421561, J$.R(421553, 'options', options, false, false), 'ignoreUndefined') : J$.T(421569, true, 23, false), ignoreUndefined, false, false);
                            var startIndex = J$.W(421633, 'startIndex', J$.C(23024, J$.B(50946, '===', J$.U(50938, 'typeof', J$.G(421593, J$.R(421585, 'options', options, false, false), 'index')), J$.T(421601, 'number', 21, false))) ? J$.G(421617, J$.R(421609, 'options', options, false, false), 'index') : J$.T(421625, 0, 22, false), startIndex, false, false);
                            var serializationIndex = J$.W(421721, 'serializationIndex', J$.F(421713, J$.R(421641, 'serializer', serializer, false, true), false)(J$.R(421649, 'finalBuffer', finalBuffer, false, false), J$.R(421657, 'object', object, false, false), J$.R(421665, 'checkKeys', checkKeys, false, false), J$.C(23032, J$.R(421673, 'startIndex', startIndex, false, false)) ? J$._() : J$.T(421681, 0, 22, false), J$.T(421689, 0, 22, false), J$.R(421697, 'serializeFunctions', serializeFunctions, false, false), J$.R(421705, 'ignoreUndefined', ignoreUndefined, false, false)), serializationIndex, false, false);
                            return J$.Rt(421745, J$.B(50954, '-', J$.R(421729, 'serializationIndex', serializationIndex, false, false), J$.T(421737, 1, 22, false)));
                        } catch (J$e) {
                            J$.Ex(424217, J$e);
                        } finally {
                            if (J$.Fr(424225))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(421945, J$.G(421857, J$.R(421849, 'BSON', BSON, false, true), 'prototype'), 'deserialize', J$.T(421937, function (buffer, options) {
                jalangiLabel3:
                    while (true) {
                        try {
                            J$.Fe(421905, arguments.callee, this, arguments);
                            arguments = J$.N(421913, 'arguments', arguments, true, false, false);
                            buffer = J$.N(421921, 'buffer', buffer, true, false, false);
                            options = J$.N(421929, 'options', options, true, false, false);
                            return J$.Rt(421897, J$.F(421889, J$.R(421865, 'deserialize', deserialize, false, true), false)(J$.R(421873, 'buffer', buffer, false, false), J$.R(421881, 'options', options, false, false)));
                        } catch (J$e) {
                            J$.Ex(424233, J$e);
                        } finally {
                            if (J$.Fr(424241))
                                continue jalangiLabel3;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(422209, J$.G(421961, J$.R(421953, 'BSON', BSON, false, true), 'prototype'), 'calculateObjectSize', J$.T(422201, function (object, options) {
                jalangiLabel4:
                    while (true) {
                        try {
                            J$.Fe(422153, arguments.callee, this, arguments);
                            arguments = J$.N(422161, 'arguments', arguments, true, false, false);
                            object = J$.N(422169, 'object', object, true, false, false);
                            options = J$.N(422177, 'options', options, true, false, false);
                            J$.N(422185, 'serializeFunctions', serializeFunctions, false, false, false);
                            J$.N(422193, 'ignoreUndefined', ignoreUndefined, false, false, false);
                            options = J$.W(421985, 'options', J$.C(23040, J$.R(421969, 'options', options, false, false)) ? J$._() : J$.T(421977, {}, 11, false), options, false, false);
                            var serializeFunctions = J$.W(422041, 'serializeFunctions', J$.C(23048, J$.B(50970, '===', J$.U(50962, 'typeof', J$.G(422001, J$.R(421993, 'options', options, false, false), 'serializeFunctions')), J$.T(422009, 'boolean', 21, false))) ? J$.G(422025, J$.R(422017, 'options', options, false, false), 'serializeFunctions') : J$.T(422033, false, 23, false), serializeFunctions, false, false);
                            var ignoreUndefined = J$.W(422097, 'ignoreUndefined', J$.C(23056, J$.B(50986, '===', J$.U(50978, 'typeof', J$.G(422057, J$.R(422049, 'options', options, false, false), 'ignoreUndefined')), J$.T(422065, 'boolean', 21, false))) ? J$.G(422081, J$.R(422073, 'options', options, false, false), 'ignoreUndefined') : J$.T(422089, true, 23, false), ignoreUndefined, false, false);
                            return J$.Rt(422145, J$.F(422137, J$.R(422105, 'calculateObjectSize', calculateObjectSize, false, true), false)(J$.R(422113, 'object', object, false, false), J$.R(422121, 'serializeFunctions', serializeFunctions, false, false), J$.R(422129, 'ignoreUndefined', ignoreUndefined, false, false)));
                        } catch (J$e) {
                            J$.Ex(424249, J$e);
                        } finally {
                            if (J$.Fr(424257))
                                continue jalangiLabel4;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(422721, J$.G(422225, J$.R(422217, 'BSON', BSON, false, true), 'prototype'), 'deserializeStream', J$.T(422713, function (data, startIndex, numberOfDocuments, documents, docStartIndex, options) {
                jalangiLabel5:
                    while (true) {
                        try {
                            J$.Fe(422625, arguments.callee, this, arguments);
                            arguments = J$.N(422633, 'arguments', arguments, true, false, false);
                            data = J$.N(422641, 'data', data, true, false, false);
                            startIndex = J$.N(422649, 'startIndex', startIndex, true, false, false);
                            numberOfDocuments = J$.N(422657, 'numberOfDocuments', numberOfDocuments, true, false, false);
                            documents = J$.N(422665, 'documents', documents, true, false, false);
                            docStartIndex = J$.N(422673, 'docStartIndex', docStartIndex, true, false, false);
                            options = J$.N(422681, 'options', options, true, false, false);
                            J$.N(422689, 'index', index, false, false, false);
                            J$.N(422697, 'i', i, false, false, false);
                            J$.N(422705, 'size', size, false, false, false);
                            options = J$.W(422265, 'options', J$.C(23064, J$.B(50994, '!=', J$.R(422233, 'options', options, false, false), J$.T(422241, null, 25, false))) ? J$.R(422249, 'options', options, false, false) : J$.T(422257, {}, 11, false), options, false, false);
                            var index = J$.W(422281, 'index', J$.R(422273, 'startIndex', startIndex, false, false), index, false, false);
                            for (var i = J$.W(422297, 'i', J$.T(422289, 0, 22, false), i, false, false); J$.C(23072, J$.B(51002, '<', J$.R(422305, 'i', i, false, false), J$.R(422313, 'numberOfDocuments', numberOfDocuments, false, false))); J$.B(51026, '-', i = J$.W(422329, 'i', J$.B(51018, '+', J$.U(51010, '+', J$.R(422321, 'i', i, false, false)), 1), i, false, false), 1)) {
                                var size = J$.W(422481, 'size', J$.B(51098, '|', J$.B(51074, '|', J$.B(51050, '|', J$.G(422353, J$.R(422337, 'data', data, false, false), J$.R(422345, 'index', index, false, false)), J$.B(51042, '<<', J$.G(422385, J$.R(422361, 'data', data, false, false), J$.B(51034, '+', J$.R(422369, 'index', index, false, false), J$.T(422377, 1, 22, false))), J$.T(422393, 8, 22, false))), J$.B(51066, '<<', J$.G(422425, J$.R(422401, 'data', data, false, false), J$.B(51058, '+', J$.R(422409, 'index', index, false, false), J$.T(422417, 2, 22, false))), J$.T(422433, 16, 22, false))), J$.B(51090, '<<', J$.G(422465, J$.R(422441, 'data', data, false, false), J$.B(51082, '+', J$.R(422449, 'index', index, false, false), J$.T(422457, 3, 22, false))), J$.T(422473, 24, 22, false))), size, false, false);
                                J$.P(422513, J$.R(422489, 'options', options, false, false), J$.T(422497, 'index', 21, false), J$.R(422505, 'index', index, false, false));
                                J$.P(422577, J$.R(422521, 'documents', documents, false, false), J$.B(51106, '+', J$.R(422529, 'docStartIndex', docStartIndex, false, false), J$.R(422537, 'i', i, false, false)), J$.M(422569, J$.R(422545, 'this', this, false, false), 'deserialize', false)(J$.R(422553, 'data', data, false, false), J$.R(422561, 'options', options, false, false)));
                                index = J$.W(422601, 'index', J$.B(51114, '+', J$.R(422585, 'index', index, false, false), J$.R(422593, 'size', size, false, false)), index, false, false);
                            }
                            return J$.Rt(422617, J$.R(422609, 'index', index, false, false));
                        } catch (J$e) {
                            J$.Ex(424265, J$e);
                        } finally {
                            if (J$.Fr(424273))
                                continue jalangiLabel5;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(422745, J$.R(422729, 'BSON', BSON, false, true), 'BSON_INT32_MAX', J$.T(422737, 2147483647, 22, false));
            J$.P(422769, J$.R(422753, 'BSON', BSON, false, true), 'BSON_INT32_MIN', J$.U(51122, '-', J$.T(422761, 2147483648, 22, false)));
            J$.P(422825, J$.R(422777, 'BSON', BSON, false, true), 'BSON_INT64_MAX', J$.B(51130, '-', J$.M(422809, J$.I(typeof Math === 'undefined' ? Math = J$.R(422785, 'Math', undefined, true, true) : Math = J$.R(422785, 'Math', Math, true, true)), 'pow', false)(J$.T(422793, 2, 22, false), J$.T(422801, 63, 22, false)), J$.T(422817, 1, 22, false)));
            J$.P(422873, J$.R(422833, 'BSON', BSON, false, true), 'BSON_INT64_MIN', J$.U(51138, '-', J$.M(422865, J$.I(typeof Math === 'undefined' ? Math = J$.R(422841, 'Math', undefined, true, true) : Math = J$.R(422841, 'Math', Math, true, true)), 'pow', false)(J$.T(422849, 2, 22, false), J$.T(422857, 63, 22, false))));
            J$.P(422897, J$.R(422881, 'BSON', BSON, false, true), 'JS_INT_MAX', J$.T(422889, 9007199254740992, 22, false));
            J$.P(422921, J$.R(422905, 'BSON', BSON, false, true), 'JS_INT_MIN', J$.U(51146, '-', J$.T(422913, 9007199254740992, 22, false)));
            J$.P(422945, J$.R(422929, 'BSON', BSON, false, true), 'BSON_DATA_NUMBER', J$.T(422937, 1, 22, false));
            J$.P(422969, J$.R(422953, 'BSON', BSON, false, true), 'BSON_DATA_STRING', J$.T(422961, 2, 22, false));
            J$.P(422993, J$.R(422977, 'BSON', BSON, false, true), 'BSON_DATA_OBJECT', J$.T(422985, 3, 22, false));
            J$.P(423017, J$.R(423001, 'BSON', BSON, false, true), 'BSON_DATA_ARRAY', J$.T(423009, 4, 22, false));
            J$.P(423041, J$.R(423025, 'BSON', BSON, false, true), 'BSON_DATA_BINARY', J$.T(423033, 5, 22, false));
            J$.P(423065, J$.R(423049, 'BSON', BSON, false, true), 'BSON_DATA_OID', J$.T(423057, 7, 22, false));
            J$.P(423089, J$.R(423073, 'BSON', BSON, false, true), 'BSON_DATA_BOOLEAN', J$.T(423081, 8, 22, false));
            J$.P(423113, J$.R(423097, 'BSON', BSON, false, true), 'BSON_DATA_DATE', J$.T(423105, 9, 22, false));
            J$.P(423137, J$.R(423121, 'BSON', BSON, false, true), 'BSON_DATA_NULL', J$.T(423129, 10, 22, false));
            J$.P(423161, J$.R(423145, 'BSON', BSON, false, true), 'BSON_DATA_REGEXP', J$.T(423153, 11, 22, false));
            J$.P(423185, J$.R(423169, 'BSON', BSON, false, true), 'BSON_DATA_CODE', J$.T(423177, 13, 22, false));
            J$.P(423209, J$.R(423193, 'BSON', BSON, false, true), 'BSON_DATA_SYMBOL', J$.T(423201, 14, 22, false));
            J$.P(423233, J$.R(423217, 'BSON', BSON, false, true), 'BSON_DATA_CODE_W_SCOPE', J$.T(423225, 15, 22, false));
            J$.P(423257, J$.R(423241, 'BSON', BSON, false, true), 'BSON_DATA_INT', J$.T(423249, 16, 22, false));
            J$.P(423281, J$.R(423265, 'BSON', BSON, false, true), 'BSON_DATA_TIMESTAMP', J$.T(423273, 17, 22, false));
            J$.P(423305, J$.R(423289, 'BSON', BSON, false, true), 'BSON_DATA_LONG', J$.T(423297, 18, 22, false));
            J$.P(423329, J$.R(423313, 'BSON', BSON, false, true), 'BSON_DATA_MIN_KEY', J$.T(423321, 255, 22, false));
            J$.P(423353, J$.R(423337, 'BSON', BSON, false, true), 'BSON_DATA_MAX_KEY', J$.T(423345, 127, 22, false));
            J$.P(423377, J$.R(423361, 'BSON', BSON, false, true), 'BSON_BINARY_SUBTYPE_DEFAULT', J$.T(423369, 0, 22, false));
            J$.P(423401, J$.R(423385, 'BSON', BSON, false, true), 'BSON_BINARY_SUBTYPE_FUNCTION', J$.T(423393, 1, 22, false));
            J$.P(423425, J$.R(423409, 'BSON', BSON, false, true), 'BSON_BINARY_SUBTYPE_BYTE_ARRAY', J$.T(423417, 2, 22, false));
            J$.P(423449, J$.R(423433, 'BSON', BSON, false, true), 'BSON_BINARY_SUBTYPE_UUID', J$.T(423441, 3, 22, false));
            J$.P(423473, J$.R(423457, 'BSON', BSON, false, true), 'BSON_BINARY_SUBTYPE_MD5', J$.T(423465, 4, 22, false));
            J$.P(423497, J$.R(423481, 'BSON', BSON, false, true), 'BSON_BINARY_SUBTYPE_USER_DEFINED', J$.T(423489, 128, 22, false));
            J$.P(423521, J$.I(typeof module === 'undefined' ? module = J$.R(423505, 'module', undefined, true, true) : module = J$.R(423505, 'module', module, true, true)), 'exports', J$.R(423513, 'BSON', BSON, false, true));
            J$.P(423553, J$.G(423537, J$.I(typeof module === 'undefined' ? module = J$.R(423529, 'module', undefined, true, true) : module = J$.R(423529, 'module', module, true, true)), 'exports'), 'Code', J$.R(423545, 'Code', Code, false, true));
            J$.P(423585, J$.G(423569, J$.I(typeof module === 'undefined' ? module = J$.R(423561, 'module', undefined, true, true) : module = J$.R(423561, 'module', module, true, true)), 'exports'), 'Map', J$.R(423577, 'Map', Map, false, true));
            J$.P(423617, J$.G(423601, J$.I(typeof module === 'undefined' ? module = J$.R(423593, 'module', undefined, true, true) : module = J$.R(423593, 'module', module, true, true)), 'exports'), 'Symbol', J$.R(423609, '_Symbol', _Symbol, false, true));
            J$.P(423649, J$.G(423633, J$.I(typeof module === 'undefined' ? module = J$.R(423625, 'module', undefined, true, true) : module = J$.R(423625, 'module', module, true, true)), 'exports'), 'BSON', J$.R(423641, 'BSON', BSON, false, true));
            J$.P(423681, J$.G(423665, J$.I(typeof module === 'undefined' ? module = J$.R(423657, 'module', undefined, true, true) : module = J$.R(423657, 'module', module, true, true)), 'exports'), 'DBRef', J$.R(423673, 'DBRef', DBRef, false, true));
            J$.P(423713, J$.G(423697, J$.I(typeof module === 'undefined' ? module = J$.R(423689, 'module', undefined, true, true) : module = J$.R(423689, 'module', module, true, true)), 'exports'), 'Binary', J$.R(423705, 'Binary', Binary, false, true));
            J$.P(423745, J$.G(423729, J$.I(typeof module === 'undefined' ? module = J$.R(423721, 'module', undefined, true, true) : module = J$.R(423721, 'module', module, true, true)), 'exports'), 'ObjectID', J$.R(423737, 'ObjectID', ObjectID, false, true));
            J$.P(423777, J$.G(423761, J$.I(typeof module === 'undefined' ? module = J$.R(423753, 'module', undefined, true, true) : module = J$.R(423753, 'module', module, true, true)), 'exports'), 'Long', J$.R(423769, 'Long', Long, false, true));
            J$.P(423809, J$.G(423793, J$.I(typeof module === 'undefined' ? module = J$.R(423785, 'module', undefined, true, true) : module = J$.R(423785, 'module', module, true, true)), 'exports'), 'Timestamp', J$.R(423801, 'Timestamp', Timestamp, false, true));
            J$.P(423841, J$.G(423825, J$.I(typeof module === 'undefined' ? module = J$.R(423817, 'module', undefined, true, true) : module = J$.R(423817, 'module', module, true, true)), 'exports'), 'Double', J$.R(423833, 'Double', Double, false, true));
            J$.P(423873, J$.G(423857, J$.I(typeof module === 'undefined' ? module = J$.R(423849, 'module', undefined, true, true) : module = J$.R(423849, 'module', module, true, true)), 'exports'), 'Int32', J$.R(423865, 'Int32', Int32, false, true));
            J$.P(423905, J$.G(423889, J$.I(typeof module === 'undefined' ? module = J$.R(423881, 'module', undefined, true, true) : module = J$.R(423881, 'module', module, true, true)), 'exports'), 'MinKey', J$.R(423897, 'MinKey', MinKey, false, true));
            J$.P(423937, J$.G(423921, J$.I(typeof module === 'undefined' ? module = J$.R(423913, 'module', undefined, true, true) : module = J$.R(423913, 'module', module, true, true)), 'exports'), 'MaxKey', J$.R(423929, 'MaxKey', MaxKey, false, true));
            J$.P(423969, J$.G(423953, J$.I(typeof module === 'undefined' ? module = J$.R(423945, 'module', undefined, true, true) : module = J$.R(423945, 'module', module, true, true)), 'exports'), 'BSONRegExp', J$.R(423961, 'BSONRegExp', BSONRegExp, false, true));
            J$.P(424001, J$.G(423985, J$.I(typeof module === 'undefined' ? module = J$.R(423977, 'module', undefined, true, true) : module = J$.R(423977, 'module', module, true, true)), 'exports'), 'Decimal128', J$.R(423993, 'Decimal128', Decimal128, false, true));
        } catch (J$e) {
            J$.Ex(424281, J$e);
        } finally {
            if (J$.Sr(424289))
                continue jalangiLabel6;
            else
                break jalangiLabel6;
        }
    }
// JALANGI DO NOT INSTRUMENT

