J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(457873, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestMongoDb/node_modules/bson/lib/bson/min_key.js');
            function MinKey() {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(457801, arguments.callee, this, arguments);
                            arguments = J$.N(457809, 'arguments', arguments, true, false, false);
                            if (J$.C(24960, J$.U(57330, '!', J$.B(57322, 'instanceof', J$.R(457737, 'this', this, false, false), J$.R(457745, 'MinKey', MinKey, false, true)))))
                                return J$.Rt(457769, J$.F(457761, J$.R(457753, 'MinKey', MinKey, false, true), true)());
                            J$.P(457793, J$.R(457777, 'this', this, false, false), '_bsontype', J$.T(457785, 'MinKey', 21, false));
                        } catch (J$e) {
                            J$.Ex(457897, J$e);
                        } finally {
                            if (J$.Fr(457905))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            MinKey = J$.N(457889, 'MinKey', J$.T(457881, MinKey, 12, false), true, false, false);
            J$.T(457729, 'use strict', 21, false);
            J$.P(457833, J$.I(typeof module === 'undefined' ? module = J$.R(457817, 'module', undefined, true, true) : module = J$.R(457817, 'module', module, true, true)), 'exports', J$.R(457825, 'MinKey', MinKey, false, true));
            J$.P(457865, J$.G(457849, J$.I(typeof module === 'undefined' ? module = J$.R(457841, 'module', undefined, true, true) : module = J$.R(457841, 'module', module, true, true)), 'exports'), 'MinKey', J$.R(457857, 'MinKey', MinKey, false, true));
        } catch (J$e) {
            J$.Ex(457913, J$e);
        } finally {
            if (J$.Sr(457921))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

