J$.noInstrEval = false;
jalangiLabel8:
    while (true) {
        try {
            J$.Se(438265, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestMongoDb/node_modules/bson/lib/bson/decimal128.js');
            J$.N(438273, 'Long', Long, false, false, false);
            J$.N(438281, 'PARSE_STRING_REGEXP', PARSE_STRING_REGEXP, false, false, false);
            J$.N(438289, 'PARSE_INF_REGEXP', PARSE_INF_REGEXP, false, false, false);
            J$.N(438297, 'PARSE_NAN_REGEXP', PARSE_NAN_REGEXP, false, false, false);
            J$.N(438305, 'EXPONENT_MAX', EXPONENT_MAX, false, false, false);
            J$.N(438313, 'EXPONENT_MIN', EXPONENT_MIN, false, false, false);
            J$.N(438321, 'EXPONENT_BIAS', EXPONENT_BIAS, false, false, false);
            J$.N(438329, 'MAX_DIGITS', MAX_DIGITS, false, false, false);
            J$.N(438337, 'NAN_BUFFER', NAN_BUFFER, false, false, false);
            J$.N(438345, 'INF_NEGATIVE_BUFFER', INF_NEGATIVE_BUFFER, false, false, false);
            J$.N(438353, 'INF_POSITIVE_BUFFER', INF_POSITIVE_BUFFER, false, false, false);
            J$.N(438361, 'EXPONENT_REGEX', EXPONENT_REGEX, false, false, false);
            J$.N(438369, 'utils', utils, false, false, false);
            J$.N(438377, 'isDigit', isDigit, false, false, false);
            J$.N(438385, 'divideu128', divideu128, false, false, false);
            J$.N(438393, 'multiply64x2', multiply64x2, false, false, false);
            J$.N(438401, 'lessThan', lessThan, false, false, false);
            J$.N(438409, 'Decimal128', Decimal128, false, false, false);
            J$.N(438417, 'COMBINATION_MASK', COMBINATION_MASK, false, false, false);
            J$.N(438425, 'EXPONENT_MASK', EXPONENT_MASK, false, false, false);
            J$.N(438433, 'COMBINATION_INFINITY', COMBINATION_INFINITY, false, false, false);
            J$.N(438441, 'COMBINATION_NAN', COMBINATION_NAN, false, false, false);
            J$.T(425177, 'use strict', 21, false);
            var Long = J$.W(425209, 'Long', J$.F(425201, J$.I(typeof require === 'undefined' ? require = J$.R(425185, 'require', undefined, true, true) : require = J$.R(425185, 'require', require, true, true)), false)(J$.T(425193, './long', 21, false)), Long, false, true);
            var PARSE_STRING_REGEXP = J$.W(425225, 'PARSE_STRING_REGEXP', J$.T(425217, /^(\+|-)?(\d+|(\d*\.\d*))?(E|e)?([-+])?(\d+)?$/, 14, false), PARSE_STRING_REGEXP, false, true);
            var PARSE_INF_REGEXP = J$.W(425241, 'PARSE_INF_REGEXP', J$.T(425233, /^(\+|-)?(Infinity|inf)$/i, 14, false), PARSE_INF_REGEXP, false, true);
            var PARSE_NAN_REGEXP = J$.W(425257, 'PARSE_NAN_REGEXP', J$.T(425249, /^(\+|-)?NaN$/i, 14, false), PARSE_NAN_REGEXP, false, true);
            var EXPONENT_MAX = J$.W(425273, 'EXPONENT_MAX', J$.T(425265, 6111, 22, false), EXPONENT_MAX, false, true);
            var EXPONENT_MIN = J$.W(425289, 'EXPONENT_MIN', J$.U(51194, '-', J$.T(425281, 6176, 22, false)), EXPONENT_MIN, false, true);
            var EXPONENT_BIAS = J$.W(425305, 'EXPONENT_BIAS', J$.T(425297, 6176, 22, false), EXPONENT_BIAS, false, true);
            var MAX_DIGITS = J$.W(425321, 'MAX_DIGITS', J$.T(425313, 34, 22, false), MAX_DIGITS, false, true);
            var NAN_BUFFER = J$.W(425473, 'NAN_BUFFER', J$.M(425465, J$.T(425457, [
                J$.T(425329, 124, 22, false),
                J$.T(425337, 0, 22, false),
                J$.T(425345, 0, 22, false),
                J$.T(425353, 0, 22, false),
                J$.T(425361, 0, 22, false),
                J$.T(425369, 0, 22, false),
                J$.T(425377, 0, 22, false),
                J$.T(425385, 0, 22, false),
                J$.T(425393, 0, 22, false),
                J$.T(425401, 0, 22, false),
                J$.T(425409, 0, 22, false),
                J$.T(425417, 0, 22, false),
                J$.T(425425, 0, 22, false),
                J$.T(425433, 0, 22, false),
                J$.T(425441, 0, 22, false),
                J$.T(425449, 0, 22, false)
            ], 10, false), 'reverse', false)(), NAN_BUFFER, false, true);
            var INF_NEGATIVE_BUFFER = J$.W(425625, 'INF_NEGATIVE_BUFFER', J$.M(425617, J$.T(425609, [
                J$.T(425481, 248, 22, false),
                J$.T(425489, 0, 22, false),
                J$.T(425497, 0, 22, false),
                J$.T(425505, 0, 22, false),
                J$.T(425513, 0, 22, false),
                J$.T(425521, 0, 22, false),
                J$.T(425529, 0, 22, false),
                J$.T(425537, 0, 22, false),
                J$.T(425545, 0, 22, false),
                J$.T(425553, 0, 22, false),
                J$.T(425561, 0, 22, false),
                J$.T(425569, 0, 22, false),
                J$.T(425577, 0, 22, false),
                J$.T(425585, 0, 22, false),
                J$.T(425593, 0, 22, false),
                J$.T(425601, 0, 22, false)
            ], 10, false), 'reverse', false)(), INF_NEGATIVE_BUFFER, false, true);
            var INF_POSITIVE_BUFFER = J$.W(425777, 'INF_POSITIVE_BUFFER', J$.M(425769, J$.T(425761, [
                J$.T(425633, 120, 22, false),
                J$.T(425641, 0, 22, false),
                J$.T(425649, 0, 22, false),
                J$.T(425657, 0, 22, false),
                J$.T(425665, 0, 22, false),
                J$.T(425673, 0, 22, false),
                J$.T(425681, 0, 22, false),
                J$.T(425689, 0, 22, false),
                J$.T(425697, 0, 22, false),
                J$.T(425705, 0, 22, false),
                J$.T(425713, 0, 22, false),
                J$.T(425721, 0, 22, false),
                J$.T(425729, 0, 22, false),
                J$.T(425737, 0, 22, false),
                J$.T(425745, 0, 22, false),
                J$.T(425753, 0, 22, false)
            ], 10, false), 'reverse', false)(), INF_POSITIVE_BUFFER, false, true);
            var EXPONENT_REGEX = J$.W(425793, 'EXPONENT_REGEX', J$.T(425785, /^([-+])?(\d+)?$/, 14, false), EXPONENT_REGEX, false, true);
            var utils = J$.W(425825, 'utils', J$.F(425817, J$.I(typeof require === 'undefined' ? require = J$.R(425801, 'require', undefined, true, true) : require = J$.R(425801, 'require', require, true, true)), false)(J$.T(425809, './parser/utils', 21, false)), utils, false, true);
            var isDigit = J$.W(425921, 'isDigit', J$.T(425913, function isDigit(value) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(425889, arguments.callee, this, arguments);
                            arguments = J$.N(425897, 'arguments', arguments, true, false, false);
                            value = J$.N(425905, 'value', value, true, false, false);
                            return J$.Rt(425881, J$.U(51202, '!', J$.F(425873, J$.I(typeof isNaN === 'undefined' ? isNaN = J$.R(425833, 'isNaN', undefined, true, true) : isNaN = J$.R(425833, 'isNaN', isNaN, true, true)), false)(J$.F(425865, J$.I(typeof parseInt === 'undefined' ? parseInt = J$.R(425841, 'parseInt', undefined, true, true) : parseInt = J$.R(425841, 'parseInt', parseInt, true, true)), false)(J$.R(425849, 'value', value, false, false), J$.T(425857, 10, 22, false)))));
                        } catch (J$e) {
                            J$.Ex(438449, J$e);
                        } finally {
                            if (J$.Fr(438457))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false), isDigit, false, true);
            var divideu128 = J$.W(426529, 'divideu128', J$.T(426521, function divideu128(value) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(426473, arguments.callee, this, arguments);
                            arguments = J$.N(426481, 'arguments', arguments, true, false, false);
                            value = J$.N(426489, 'value', value, true, false, false);
                            J$.N(426497, 'DIVISOR', DIVISOR, false, false, false);
                            J$.N(426505, '_rem', _rem, false, false, false);
                            J$.N(426513, 'i', i, false, false, false);
                            var DIVISOR = J$.W(425969, 'DIVISOR', J$.M(425961, J$.R(425929, 'Long', Long, false, true), 'fromNumber', false)(J$.B(51218, '*', J$.B(51210, '*', J$.T(425937, 1000, 22, false), J$.T(425945, 1000, 22, false)), J$.T(425953, 1000, 22, false))), DIVISOR, false, false);
                            var _rem = J$.W(426001, '_rem', J$.M(425993, J$.R(425977, 'Long', Long, false, true), 'fromNumber', false)(J$.T(425985, 0, 22, false)), _rem, false, false);
                            var i = J$.W(426017, 'i', J$.T(426009, 0, 22, false), i, false, false);
                            if (J$.C(23128, J$.C(23120, J$.C(23112, J$.C(23104, J$.U(51226, '!', J$.G(426049, J$.G(426033, J$.R(426025, 'value', value, false, false), 'parts'), J$.T(426041, 0, 22, false)))) ? J$.U(51234, '!', J$.G(426081, J$.G(426065, J$.R(426057, 'value', value, false, false), 'parts'), J$.T(426073, 1, 22, false))) : J$._()) ? J$.U(51242, '!', J$.G(426113, J$.G(426097, J$.R(426089, 'value', value, false, false), 'parts'), J$.T(426105, 2, 22, false))) : J$._()) ? J$.U(51250, '!', J$.G(426145, J$.G(426129, J$.R(426121, 'value', value, false, false), 'parts'), J$.T(426137, 3, 22, false))) : J$._())) {
                                return J$.Rt(426177, J$.T(426169, {
                                    quotient: J$.R(426153, 'value', value, false, false),
                                    rem: J$.R(426161, '_rem', _rem, false, false)
                                }, 11, false));
                            }
                            for (i = J$.W(426193, 'i', J$.T(426185, 0, 22, false), i, false, false); J$.C(23136, J$.B(51258, '<=', J$.R(426201, 'i', i, false, false), J$.T(426209, 3, 22, false))); J$.B(51282, '-', i = J$.W(426225, 'i', J$.B(51274, '+', J$.U(51266, '+', J$.R(426217, 'i', i, false, false)), 1), i, false, false), 1)) {
                                _rem = J$.W(426257, '_rem', J$.M(426249, J$.R(426233, '_rem', _rem, false, false), 'shiftLeft', false)(J$.T(426241, 32, 22, false)), _rem, false, false);
                                _rem = J$.W(426337, '_rem', J$.M(426329, J$.R(426265, '_rem', _rem, false, false), 'add', false)(J$.F(426321, J$.R(426273, 'Long', Long, false, true), true)(J$.G(426305, J$.G(426289, J$.R(426281, 'value', value, false, false), 'parts'), J$.R(426297, 'i', i, false, false)), J$.T(426313, 0, 22, false))), _rem, false, false);
                                J$.P(426401, J$.G(426353, J$.R(426345, 'value', value, false, false), 'parts'), J$.R(426361, 'i', i, false, false), J$.G(426393, J$.M(426385, J$.R(426369, '_rem', _rem, false, false), 'div', false)(J$.R(426377, 'DIVISOR', DIVISOR, false, false)), 'low_'));
                                _rem = J$.W(426433, '_rem', J$.M(426425, J$.R(426409, '_rem', _rem, false, false), 'modulo', false)(J$.R(426417, 'DIVISOR', DIVISOR, false, false)), _rem, false, false);
                            }
                            return J$.Rt(426465, J$.T(426457, {
                                quotient: J$.R(426441, 'value', value, false, false),
                                rem: J$.R(426449, '_rem', _rem, false, false)
                            }, 11, false));
                        } catch (J$e) {
                            J$.Ex(438465, J$e);
                        } finally {
                            if (J$.Fr(438473))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false), divideu128, false, true);
            var multiply64x2 = J$.W(427313, 'multiply64x2', J$.T(427305, function multiply64x2(left, right) {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(427209, arguments.callee, this, arguments);
                            arguments = J$.N(427217, 'arguments', arguments, true, false, false);
                            left = J$.N(427225, 'left', left, true, false, false);
                            right = J$.N(427233, 'right', right, true, false, false);
                            J$.N(427241, 'leftHigh', leftHigh, false, false, false);
                            J$.N(427249, 'leftLow', leftLow, false, false, false);
                            J$.N(427257, 'rightHigh', rightHigh, false, false, false);
                            J$.N(427265, 'rightLow', rightLow, false, false, false);
                            J$.N(427273, 'productHigh', productHigh, false, false, false);
                            J$.N(427281, 'productMid', productMid, false, false, false);
                            J$.N(427289, 'productMid2', productMid2, false, false, false);
                            J$.N(427297, 'productLow', productLow, false, false, false);
                            if (J$.C(23152, J$.C(23144, J$.U(51290, '!', J$.R(426537, 'left', left, false, false))) ? J$.U(51298, '!', J$.R(426545, 'right', right, false, false)) : J$._())) {
                                return J$.Rt(426609, J$.T(426601, {
                                    high: J$.M(426569, J$.R(426553, 'Long', Long, false, true), 'fromNumber', false)(J$.T(426561, 0, 22, false)),
                                    low: J$.M(426593, J$.R(426577, 'Long', Long, false, true), 'fromNumber', false)(J$.T(426585, 0, 22, false))
                                }, 11, false));
                            }
                            var leftHigh = J$.W(426641, 'leftHigh', J$.M(426633, J$.R(426617, 'left', left, false, false), 'shiftRightUnsigned', false)(J$.T(426625, 32, 22, false)), leftHigh, false, false);
                            var leftLow = J$.W(426689, 'leftLow', J$.F(426681, J$.R(426649, 'Long', Long, false, true), true)(J$.M(426665, J$.R(426657, 'left', left, false, false), 'getLowBits', false)(), J$.T(426673, 0, 22, false)), leftLow, false, false);
                            var rightHigh = J$.W(426721, 'rightHigh', J$.M(426713, J$.R(426697, 'right', right, false, false), 'shiftRightUnsigned', false)(J$.T(426705, 32, 22, false)), rightHigh, false, false);
                            var rightLow = J$.W(426769, 'rightLow', J$.F(426761, J$.R(426729, 'Long', Long, false, true), true)(J$.M(426745, J$.R(426737, 'right', right, false, false), 'getLowBits', false)(), J$.T(426753, 0, 22, false)), rightLow, false, false);
                            var productHigh = J$.W(426801, 'productHigh', J$.M(426793, J$.R(426777, 'leftHigh', leftHigh, false, false), 'multiply', false)(J$.R(426785, 'rightHigh', rightHigh, false, false)), productHigh, false, false);
                            var productMid = J$.W(426833, 'productMid', J$.M(426825, J$.R(426809, 'leftHigh', leftHigh, false, false), 'multiply', false)(J$.R(426817, 'rightLow', rightLow, false, false)), productMid, false, false);
                            var productMid2 = J$.W(426865, 'productMid2', J$.M(426857, J$.R(426841, 'leftLow', leftLow, false, false), 'multiply', false)(J$.R(426849, 'rightHigh', rightHigh, false, false)), productMid2, false, false);
                            var productLow = J$.W(426897, 'productLow', J$.M(426889, J$.R(426873, 'leftLow', leftLow, false, false), 'multiply', false)(J$.R(426881, 'rightLow', rightLow, false, false)), productLow, false, false);
                            productHigh = J$.W(426945, 'productHigh', J$.M(426937, J$.R(426905, 'productHigh', productHigh, false, false), 'add', false)(J$.M(426929, J$.R(426913, 'productMid', productMid, false, false), 'shiftRightUnsigned', false)(J$.T(426921, 32, 22, false))), productHigh, false, false);
                            productMid = J$.W(427041, 'productMid', J$.M(427033, J$.M(427001, J$.F(426985, J$.R(426953, 'Long', Long, false, true), true)(J$.M(426969, J$.R(426961, 'productMid', productMid, false, false), 'getLowBits', false)(), J$.T(426977, 0, 22, false)), 'add', false)(J$.R(426993, 'productMid2', productMid2, false, false)), 'add', false)(J$.M(427025, J$.R(427009, 'productLow', productLow, false, false), 'shiftRightUnsigned', false)(J$.T(427017, 32, 22, false))), productMid, false, false);
                            productHigh = J$.W(427089, 'productHigh', J$.M(427081, J$.R(427049, 'productHigh', productHigh, false, false), 'add', false)(J$.M(427073, J$.R(427057, 'productMid', productMid, false, false), 'shiftRightUnsigned', false)(J$.T(427065, 32, 22, false))), productHigh, false, false);
                            productLow = J$.W(427169, 'productLow', J$.M(427161, J$.M(427113, J$.R(427097, 'productMid', productMid, false, false), 'shiftLeft', false)(J$.T(427105, 32, 22, false)), 'add', false)(J$.F(427153, J$.R(427121, 'Long', Long, false, true), true)(J$.M(427137, J$.R(427129, 'productLow', productLow, false, false), 'getLowBits', false)(), J$.T(427145, 0, 22, false))), productLow, false, false);
                            return J$.Rt(427201, J$.T(427193, {
                                high: J$.R(427177, 'productHigh', productHigh, false, false),
                                low: J$.R(427185, 'productLow', productLow, false, false)
                            }, 11, false));
                        } catch (J$e) {
                            J$.Ex(438481, J$e);
                        } finally {
                            if (J$.Fr(438489))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false), multiply64x2, false, true);
            var lessThan = J$.W(427617, 'lessThan', J$.T(427609, function lessThan(left, right) {
                jalangiLabel3:
                    while (true) {
                        try {
                            J$.Fe(427545, arguments.callee, this, arguments);
                            arguments = J$.N(427553, 'arguments', arguments, true, false, false);
                            left = J$.N(427561, 'left', left, true, false, false);
                            right = J$.N(427569, 'right', right, true, false, false);
                            J$.N(427577, 'uhleft', uhleft, false, false, false);
                            J$.N(427585, 'uhright', uhright, false, false, false);
                            J$.N(427593, 'ulleft', ulleft, false, false, false);
                            J$.N(427601, 'ulright', ulright, false, false, false);
                            var uhleft = J$.W(427345, 'uhleft', J$.B(51306, '>>>', J$.G(427329, J$.R(427321, 'left', left, false, false), 'high_'), J$.T(427337, 0, 22, false)), uhleft, false, false);
                            var uhright = J$.W(427377, 'uhright', J$.B(51314, '>>>', J$.G(427361, J$.R(427353, 'right', right, false, false), 'high_'), J$.T(427369, 0, 22, false)), uhright, false, false);
                            if (J$.C(23176, J$.B(51322, '<', J$.R(427385, 'uhleft', uhleft, false, false), J$.R(427393, 'uhright', uhright, false, false)))) {
                                return J$.Rt(427409, J$.T(427401, true, 23, false));
                            } else if (J$.C(23168, J$.B(51330, '===', J$.R(427417, 'uhleft', uhleft, false, false), J$.R(427425, 'uhright', uhright, false, false)))) {
                                var ulleft = J$.W(427457, 'ulleft', J$.B(51338, '>>>', J$.G(427441, J$.R(427433, 'left', left, false, false), 'low_'), J$.T(427449, 0, 22, false)), ulleft, false, false);
                                var ulright = J$.W(427489, 'ulright', J$.B(51346, '>>>', J$.G(427473, J$.R(427465, 'right', right, false, false), 'low_'), J$.T(427481, 0, 22, false)), ulright, false, false);
                                if (J$.C(23160, J$.B(51354, '<', J$.R(427497, 'ulleft', ulleft, false, false), J$.R(427505, 'ulright', ulright, false, false))))
                                    return J$.Rt(427521, J$.T(427513, true, 23, false));
                            }
                            return J$.Rt(427537, J$.T(427529, false, 23, false));
                        } catch (J$e) {
                            J$.Ex(438497, J$e);
                        } finally {
                            if (J$.Fr(438505))
                                continue jalangiLabel3;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false), lessThan, false, true);
            var Decimal128 = J$.W(427705, 'Decimal128', J$.T(427697, function Decimal128(bytes) {
                jalangiLabel4:
                    while (true) {
                        try {
                            J$.Fe(427673, arguments.callee, this, arguments);
                            arguments = J$.N(427681, 'arguments', arguments, true, false, false);
                            bytes = J$.N(427689, 'bytes', bytes, true, false, false);
                            J$.P(427641, J$.R(427625, 'this', this, false, false), '_bsontype', J$.T(427633, 'Decimal128', 21, false));
                            J$.P(427665, J$.R(427649, 'this', this, false, false), 'bytes', J$.R(427657, 'bytes', bytes, false, false));
                        } catch (J$e) {
                            J$.Ex(438513, J$e);
                        } finally {
                            if (J$.Fr(438521))
                                continue jalangiLabel4;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false), Decimal128, false, true);
            J$.P(434697, J$.R(427713, 'Decimal128', Decimal128, false, true), 'fromString', J$.T(434689, function (string) {
                jalangiLabel5:
                    while (true) {
                        try {
                            J$.Fe(434417, arguments.callee, this, arguments);
                            arguments = J$.N(434425, 'arguments', arguments, true, false, false);
                            string = J$.N(434433, 'string', string, true, false, false);
                            J$.N(434441, 'isNegative', isNegative, false, false, false);
                            J$.N(434449, 'sawRadix', sawRadix, false, false, false);
                            J$.N(434457, 'foundNonZero', foundNonZero, false, false, false);
                            J$.N(434465, 'significantDigits', significantDigits, false, false, false);
                            J$.N(434473, 'nDigitsRead', nDigitsRead, false, false, false);
                            J$.N(434481, 'nDigits', nDigits, false, false, false);
                            J$.N(434489, 'radixPosition', radixPosition, false, false, false);
                            J$.N(434497, 'firstNonZero', firstNonZero, false, false, false);
                            J$.N(434505, 'digits', digits, false, false, false);
                            J$.N(434513, 'nDigitsStored', nDigitsStored, false, false, false);
                            J$.N(434521, 'digitsInsert', digitsInsert, false, false, false);
                            J$.N(434529, 'firstDigit', firstDigit, false, false, false);
                            J$.N(434537, 'lastDigit', lastDigit, false, false, false);
                            J$.N(434545, 'exponent', exponent, false, false, false);
                            J$.N(434553, 'i', i, false, false, false);
                            J$.N(434561, 'significandHigh', significandHigh, false, false, false);
                            J$.N(434569, 'significandLow', significandLow, false, false, false);
                            J$.N(434577, 'biasedExponent', biasedExponent, false, false, false);
                            J$.N(434585, 'index', index, false, false, false);
                            J$.N(434593, 'stringMatch', stringMatch, false, false, false);
                            J$.N(434601, 'infMatch', infMatch, false, false, false);
                            J$.N(434609, 'nanMatch', nanMatch, false, false, false);
                            J$.N(434617, 'match', match, false, false, false);
                            J$.N(434625, 'digitsString', digitsString, false, false, false);
                            J$.N(434633, 'endOfString', endOfString, false, false, false);
                            J$.N(434641, 'roundDigit', roundDigit, false, false, false);
                            J$.N(434649, 'roundBit', roundBit, false, false, false);
                            J$.N(434657, 'dIdx', dIdx, false, false, false);
                            J$.N(434665, 'significand', significand, false, false, false);
                            J$.N(434673, 'dec', dec, false, false, false);
                            J$.N(434681, 'buffer', buffer, false, false, false);
                            var isNegative = J$.W(427729, 'isNegative', J$.T(427721, false, 23, false), isNegative, false, false);
                            var sawRadix = J$.W(427745, 'sawRadix', J$.T(427737, false, 23, false), sawRadix, false, false);
                            var foundNonZero = J$.W(427761, 'foundNonZero', J$.T(427753, false, 23, false), foundNonZero, false, false);
                            var significantDigits = J$.W(427777, 'significantDigits', J$.T(427769, 0, 22, false), significantDigits, false, false);
                            var nDigitsRead = J$.W(427793, 'nDigitsRead', J$.T(427785, 0, 22, false), nDigitsRead, false, false);
                            var nDigits = J$.W(427809, 'nDigits', J$.T(427801, 0, 22, false), nDigits, false, false);
                            var radixPosition = J$.W(427825, 'radixPosition', J$.T(427817, 0, 22, false), radixPosition, false, false);
                            var firstNonZero = J$.W(427841, 'firstNonZero', J$.T(427833, 0, 22, false), firstNonZero, false, false);
                            var digits = J$.W(427865, 'digits', J$.T(427857, [J$.T(427849, 0, 22, false)], 10, false), digits, false, false);
                            var nDigitsStored = J$.W(427881, 'nDigitsStored', J$.T(427873, 0, 22, false), nDigitsStored, false, false);
                            var digitsInsert = J$.W(427897, 'digitsInsert', J$.T(427889, 0, 22, false), digitsInsert, false, false);
                            var firstDigit = J$.W(427913, 'firstDigit', J$.T(427905, 0, 22, false), firstDigit, false, false);
                            var lastDigit = J$.W(427929, 'lastDigit', J$.T(427921, 0, 22, false), lastDigit, false, false);
                            var exponent = J$.W(427945, 'exponent', J$.T(427937, 0, 22, false), exponent, false, false);
                            var i = J$.W(427961, 'i', J$.T(427953, 0, 22, false), i, false, false);
                            var significandHigh = J$.W(427993, 'significandHigh', J$.T(427985, [
                                J$.T(427969, 0, 22, false),
                                J$.T(427977, 0, 22, false)
                            ], 10, false), significandHigh, false, false);
                            var significandLow = J$.W(428025, 'significandLow', J$.T(428017, [
                                J$.T(428001, 0, 22, false),
                                J$.T(428009, 0, 22, false)
                            ], 10, false), significandLow, false, false);
                            var biasedExponent = J$.W(428041, 'biasedExponent', J$.T(428033, 0, 22, false), biasedExponent, false, false);
                            var index = J$.W(428057, 'index', J$.T(428049, 0, 22, false), index, false, false);
                            string = J$.W(428081, 'string', J$.M(428073, J$.R(428065, 'string', string, false, false), 'trim', false)(), string, false, false);
                            if (J$.C(23184, J$.B(51362, '>=', J$.G(428097, J$.R(428089, 'string', string, false, false), 'length'), J$.T(428105, 7000, 22, false)))) {
                                throw J$.F(428145, J$.I(typeof Error === 'undefined' ? Error = J$.R(428113, 'Error', undefined, true, true) : Error = J$.R(428113, 'Error', Error, true, true)), true)(J$.B(51378, '+', J$.B(51370, '+', J$.T(428121, '', 21, false), J$.R(428129, 'string', string, false, false)), J$.T(428137, ' not a valid Decimal128 string', 21, false)));
                            }
                            var stringMatch = J$.W(428177, 'stringMatch', J$.M(428169, J$.R(428153, 'string', string, false, false), 'match', false)(J$.R(428161, 'PARSE_STRING_REGEXP', PARSE_STRING_REGEXP, false, true)), stringMatch, false, false);
                            var infMatch = J$.W(428209, 'infMatch', J$.M(428201, J$.R(428185, 'string', string, false, false), 'match', false)(J$.R(428193, 'PARSE_INF_REGEXP', PARSE_INF_REGEXP, false, true)), infMatch, false, false);
                            var nanMatch = J$.W(428241, 'nanMatch', J$.M(428233, J$.R(428217, 'string', string, false, false), 'match', false)(J$.R(428225, 'PARSE_NAN_REGEXP', PARSE_NAN_REGEXP, false, true)), nanMatch, false, false);
                            if (J$.C(23216, J$.C(23208, J$.C(23200, J$.C(23192, J$.U(51386, '!', J$.R(428249, 'stringMatch', stringMatch, false, false))) ? J$.U(51394, '!', J$.R(428257, 'infMatch', infMatch, false, false)) : J$._()) ? J$.U(51402, '!', J$.R(428265, 'nanMatch', nanMatch, false, false)) : J$._()) ? J$._() : J$.B(51410, '===', J$.G(428281, J$.R(428273, 'string', string, false, false), 'length'), J$.T(428289, 0, 22, false)))) {
                                throw J$.F(428329, J$.I(typeof Error === 'undefined' ? Error = J$.R(428297, 'Error', undefined, true, true) : Error = J$.R(428297, 'Error', Error, true, true)), true)(J$.B(51426, '+', J$.B(51418, '+', J$.T(428305, '', 21, false), J$.R(428313, 'string', string, false, false)), J$.T(428321, ' not a valid Decimal128 string', 21, false)));
                            }
                            if (J$.C(23240, J$.C(23232, J$.C(23224, J$.R(428337, 'stringMatch', stringMatch, false, false)) ? J$.G(428361, J$.R(428345, 'stringMatch', stringMatch, false, false), J$.T(428353, 4, 22, false)) : J$._()) ? J$.B(51434, '===', J$.G(428385, J$.R(428369, 'stringMatch', stringMatch, false, false), J$.T(428377, 2, 22, false)), J$.T(428393, undefined, 24, false)) : J$._())) {
                                throw J$.F(428433, J$.I(typeof Error === 'undefined' ? Error = J$.R(428401, 'Error', undefined, true, true) : Error = J$.R(428401, 'Error', Error, true, true)), true)(J$.B(51450, '+', J$.B(51442, '+', J$.T(428409, '', 21, false), J$.R(428417, 'string', string, false, false)), J$.T(428425, ' not a valid Decimal128 string', 21, false)));
                            }
                            if (J$.C(23256, J$.C(23248, J$.B(51458, '===', J$.G(428457, J$.R(428441, 'string', string, false, false), J$.R(428449, 'index', index, false, false)), J$.T(428465, '+', 21, false))) ? J$._() : J$.B(51466, '===', J$.G(428489, J$.R(428473, 'string', string, false, false), J$.R(428481, 'index', index, false, false)), J$.T(428497, '-', 21, false)))) {
                                isNegative = J$.W(428545, 'isNegative', J$.B(51498, '===', J$.G(428529, J$.R(428505, 'string', string, false, false), J$.B(51490, '-', index = J$.W(428521, 'index', J$.B(51482, '+', J$.U(51474, '+', J$.R(428513, 'index', index, false, false)), 1), index, false, false), 1)), J$.T(428537, '-', 21, false)), isNegative, false, false);
                            }
                            if (J$.C(23304, J$.C(23264, J$.U(51506, '!', J$.F(428585, J$.R(428553, 'isDigit', isDigit, false, true), false)(J$.G(428577, J$.R(428561, 'string', string, false, false), J$.R(428569, 'index', index, false, false))))) ? J$.B(51514, '!==', J$.G(428609, J$.R(428593, 'string', string, false, false), J$.R(428601, 'index', index, false, false)), J$.T(428617, '.', 21, false)) : J$._())) {
                                if (J$.C(23296, J$.C(23272, J$.B(51522, '===', J$.G(428641, J$.R(428625, 'string', string, false, false), J$.R(428633, 'index', index, false, false)), J$.T(428649, 'i', 21, false))) ? J$._() : J$.B(51530, '===', J$.G(428673, J$.R(428657, 'string', string, false, false), J$.R(428665, 'index', index, false, false)), J$.T(428681, 'I', 21, false)))) {
                                    return J$.Rt(428745, J$.F(428737, J$.R(428689, 'Decimal128', Decimal128, false, true), true)(J$.M(428729, J$.R(428697, 'utils', utils, false, true), 'toBuffer', false)(J$.C(23280, J$.R(428705, 'isNegative', isNegative, false, false)) ? J$.R(428713, 'INF_NEGATIVE_BUFFER', INF_NEGATIVE_BUFFER, false, true) : J$.R(428721, 'INF_POSITIVE_BUFFER', INF_POSITIVE_BUFFER, false, true))));
                                } else if (J$.C(23288, J$.B(51538, '===', J$.G(428769, J$.R(428753, 'string', string, false, false), J$.R(428761, 'index', index, false, false)), J$.T(428777, 'N', 21, false)))) {
                                    return J$.Rt(428825, J$.F(428817, J$.R(428785, 'Decimal128', Decimal128, false, true), true)(J$.M(428809, J$.R(428793, 'utils', utils, false, true), 'toBuffer', false)(J$.R(428801, 'NAN_BUFFER', NAN_BUFFER, false, true))));
                                }
                            }
                            while (J$.C(23384, J$.C(23312, J$.F(428865, J$.R(428833, 'isDigit', isDigit, false, true), false)(J$.G(428857, J$.R(428841, 'string', string, false, false), J$.R(428849, 'index', index, false, false)))) ? J$._() : J$.B(51546, '===', J$.G(428889, J$.R(428873, 'string', string, false, false), J$.R(428881, 'index', index, false, false)), J$.T(428897, '.', 21, false)))) {
                                if (J$.C(23328, J$.B(51554, '===', J$.G(428921, J$.R(428905, 'string', string, false, false), J$.R(428913, 'index', index, false, false)), J$.T(428929, '.', 21, false)))) {
                                    if (J$.C(23320, J$.R(428937, 'sawRadix', sawRadix, false, false))) {
                                        return J$.Rt(428985, J$.F(428977, J$.R(428945, 'Decimal128', Decimal128, false, true), true)(J$.M(428969, J$.R(428953, 'utils', utils, false, true), 'toBuffer', false)(J$.R(428961, 'NAN_BUFFER', NAN_BUFFER, false, true))));
                                    }
                                    sawRadix = J$.W(429001, 'sawRadix', J$.T(428993, true, 23, false), sawRadix, false, false);
                                    index = J$.W(429025, 'index', J$.B(51562, '+', J$.R(429009, 'index', index, false, false), J$.T(429017, 1, 22, false)), index, false, false);
                                    continue;
                                }
                                if (J$.C(23360, J$.B(51570, '<', J$.R(429033, 'nDigitsStored', nDigitsStored, false, false), J$.T(429041, 34, 22, false)))) {
                                    if (J$.C(23352, J$.C(23336, J$.B(51578, '!==', J$.G(429065, J$.R(429049, 'string', string, false, false), J$.R(429057, 'index', index, false, false)), J$.T(429073, '0', 21, false))) ? J$._() : J$.R(429081, 'foundNonZero', foundNonZero, false, false))) {
                                        if (J$.C(23344, J$.U(51586, '!', J$.R(429089, 'foundNonZero', foundNonZero, false, false)))) {
                                            firstNonZero = J$.W(429105, 'firstNonZero', J$.R(429097, 'nDigitsRead', nDigitsRead, false, false), firstNonZero, false, false);
                                        }
                                        foundNonZero = J$.W(429121, 'foundNonZero', J$.T(429113, true, 23, false), foundNonZero, false, false);
                                        J$.P(429201, J$.R(429129, 'digits', digits, false, false), J$.B(51610, '-', digitsInsert = J$.W(429145, 'digitsInsert', J$.B(51602, '+', J$.U(51594, '+', J$.R(429137, 'digitsInsert', digitsInsert, false, false)), 1), digitsInsert, false, false), 1), J$.F(429193, J$.I(typeof parseInt === 'undefined' ? parseInt = J$.R(429153, 'parseInt', undefined, true, true) : parseInt = J$.R(429153, 'parseInt', parseInt, true, true)), false)(J$.G(429177, J$.R(429161, 'string', string, false, false), J$.R(429169, 'index', index, false, false)), J$.T(429185, 10, 22, false)));
                                        nDigitsStored = J$.W(429225, 'nDigitsStored', J$.B(51618, '+', J$.R(429209, 'nDigitsStored', nDigitsStored, false, false), J$.T(429217, 1, 22, false)), nDigitsStored, false, false);
                                    }
                                }
                                if (J$.C(23368, J$.R(429233, 'foundNonZero', foundNonZero, false, false))) {
                                    nDigits = J$.W(429257, 'nDigits', J$.B(51626, '+', J$.R(429241, 'nDigits', nDigits, false, false), J$.T(429249, 1, 22, false)), nDigits, false, false);
                                }
                                if (J$.C(23376, J$.R(429265, 'sawRadix', sawRadix, false, false))) {
                                    radixPosition = J$.W(429289, 'radixPosition', J$.B(51634, '+', J$.R(429273, 'radixPosition', radixPosition, false, false), J$.T(429281, 1, 22, false)), radixPosition, false, false);
                                }
                                nDigitsRead = J$.W(429313, 'nDigitsRead', J$.B(51642, '+', J$.R(429297, 'nDigitsRead', nDigitsRead, false, false), J$.T(429305, 1, 22, false)), nDigitsRead, false, false);
                                index = J$.W(429337, 'index', J$.B(51650, '+', J$.R(429321, 'index', index, false, false), J$.T(429329, 1, 22, false)), index, false, false);
                            }
                            if (J$.C(23400, J$.C(23392, J$.R(429345, 'sawRadix', sawRadix, false, false)) ? J$.U(51658, '!', J$.R(429353, 'nDigitsRead', nDigitsRead, false, false)) : J$._())) {
                                throw J$.F(429393, J$.I(typeof Error === 'undefined' ? Error = J$.R(429361, 'Error', undefined, true, true) : Error = J$.R(429361, 'Error', Error, true, true)), true)(J$.B(51674, '+', J$.B(51666, '+', J$.T(429369, '', 21, false), J$.R(429377, 'string', string, false, false)), J$.T(429385, ' not a valid Decimal128 string', 21, false)));
                            }
                            if (J$.C(23432, J$.C(23408, J$.B(51682, '===', J$.G(429417, J$.R(429401, 'string', string, false, false), J$.R(429409, 'index', index, false, false)), J$.T(429425, 'e', 21, false))) ? J$._() : J$.B(51690, '===', J$.G(429449, J$.R(429433, 'string', string, false, false), J$.R(429441, 'index', index, false, false)), J$.T(429457, 'E', 21, false)))) {
                                var match = J$.W(429513, 'match', J$.M(429505, J$.M(429489, J$.R(429465, 'string', string, false, false), 'substr', false)(index = J$.W(429481, 'index', J$.B(51706, '+', J$.U(51698, '+', J$.R(429473, 'index', index, false, false)), 1), index, false, false)), 'match', false)(J$.R(429497, 'EXPONENT_REGEX', EXPONENT_REGEX, false, true)), match, false, false);
                                if (J$.C(23424, J$.C(23416, J$.U(51714, '!', J$.R(429521, 'match', match, false, false))) ? J$._() : J$.U(51722, '!', J$.G(429545, J$.R(429529, 'match', match, false, false), J$.T(429537, 2, 22, false))))) {
                                    return J$.Rt(429593, J$.F(429585, J$.R(429553, 'Decimal128', Decimal128, false, true), true)(J$.M(429577, J$.R(429561, 'utils', utils, false, true), 'toBuffer', false)(J$.R(429569, 'NAN_BUFFER', NAN_BUFFER, false, true))));
                                }
                                exponent = J$.W(429649, 'exponent', J$.F(429641, J$.I(typeof parseInt === 'undefined' ? parseInt = J$.R(429601, 'parseInt', undefined, true, true) : parseInt = J$.R(429601, 'parseInt', parseInt, true, true)), false)(J$.G(429625, J$.R(429609, 'match', match, false, false), J$.T(429617, 0, 22, false)), J$.T(429633, 10, 22, false)), exponent, false, false);
                                index = J$.W(429697, 'index', J$.B(51730, '+', J$.R(429657, 'index', index, false, false), J$.G(429689, J$.G(429681, J$.R(429665, 'match', match, false, false), J$.T(429673, 0, 22, false)), 'length')), index, false, false);
                            }
                            if (J$.C(23440, J$.G(429721, J$.R(429705, 'string', string, false, false), J$.R(429713, 'index', index, false, false)))) {
                                return J$.Rt(429769, J$.F(429761, J$.R(429729, 'Decimal128', Decimal128, false, true), true)(J$.M(429753, J$.R(429737, 'utils', utils, false, true), 'toBuffer', false)(J$.R(429745, 'NAN_BUFFER', NAN_BUFFER, false, true))));
                            }
                            firstDigit = J$.W(429785, 'firstDigit', J$.T(429777, 0, 22, false), firstDigit, false, false);
                            if (J$.C(23472, J$.U(51738, '!', J$.R(429793, 'nDigitsStored', nDigitsStored, false, false)))) {
                                firstDigit = J$.W(429809, 'firstDigit', J$.T(429801, 0, 22, false), firstDigit, false, false);
                                lastDigit = J$.W(429825, 'lastDigit', J$.T(429817, 0, 22, false), lastDigit, false, false);
                                J$.P(429857, J$.R(429833, 'digits', digits, false, false), J$.T(429841, 0, 22, false), J$.T(429849, 0, 22, false));
                                nDigits = J$.W(429873, 'nDigits', J$.T(429865, 1, 22, false), nDigits, false, false);
                                nDigitsStored = J$.W(429889, 'nDigitsStored', J$.T(429881, 1, 22, false), nDigitsStored, false, false);
                                significantDigits = J$.W(429905, 'significantDigits', J$.T(429897, 0, 22, false), significantDigits, false, false);
                            } else {
                                lastDigit = J$.W(429929, 'lastDigit', J$.B(51746, '-', J$.R(429913, 'nDigitsStored', nDigitsStored, false, false), J$.T(429921, 1, 22, false)), lastDigit, false, false);
                                significantDigits = J$.W(429945, 'significantDigits', J$.R(429937, 'nDigits', nDigits, false, false), significantDigits, false, false);
                                if (J$.C(23464, J$.C(23448, J$.B(51754, '!==', J$.R(429953, 'exponent', exponent, false, false), J$.T(429961, 0, 22, false))) ? J$.B(51762, '!==', J$.R(429969, 'significantDigits', significantDigits, false, false), J$.T(429977, 1, 22, false)) : J$._())) {
                                    while (J$.C(23456, J$.B(51786, '===', J$.G(430017, J$.R(429985, 'string', string, false, false), J$.B(51778, '-', J$.B(51770, '+', J$.R(429993, 'firstNonZero', firstNonZero, false, false), J$.R(430001, 'significantDigits', significantDigits, false, false)), J$.T(430009, 1, 22, false))), J$.T(430025, '0', 21, false)))) {
                                        significantDigits = J$.W(430049, 'significantDigits', J$.B(51794, '-', J$.R(430033, 'significantDigits', significantDigits, false, false), J$.T(430041, 1, 22, false)), significantDigits, false, false);
                                    }
                                }
                            }
                            if (J$.C(23488, J$.C(23480, J$.B(51802, '<=', J$.R(430057, 'exponent', exponent, false, false), J$.R(430065, 'radixPosition', radixPosition, false, false))) ? J$.B(51826, '>', J$.B(51810, '-', J$.R(430073, 'radixPosition', radixPosition, false, false), J$.R(430081, 'exponent', exponent, false, false)), J$.B(51818, '<<', J$.T(430089, 1, 22, false), J$.T(430097, 14, 22, false))) : J$._())) {
                                exponent = J$.W(430113, 'exponent', J$.R(430105, 'EXPONENT_MIN', EXPONENT_MIN, false, true), exponent, false, false);
                            } else {
                                exponent = J$.W(430137, 'exponent', J$.B(51834, '-', J$.R(430121, 'exponent', exponent, false, false), J$.R(430129, 'radixPosition', radixPosition, false, false)), exponent, false, false);
                            }
                            while (J$.C(23520, J$.B(51842, '>', J$.R(430145, 'exponent', exponent, false, false), J$.R(430153, 'EXPONENT_MAX', EXPONENT_MAX, false, true)))) {
                                lastDigit = J$.W(430177, 'lastDigit', J$.B(51850, '+', J$.R(430161, 'lastDigit', lastDigit, false, false), J$.T(430169, 1, 22, false)), lastDigit, false, false);
                                if (J$.C(23512, J$.B(51866, '>', J$.B(51858, '-', J$.R(430185, 'lastDigit', lastDigit, false, false), J$.R(430193, 'firstDigit', firstDigit, false, false)), J$.R(430201, 'MAX_DIGITS', MAX_DIGITS, false, true)))) {
                                    var digitsString = J$.W(430233, 'digitsString', J$.M(430225, J$.R(430209, 'digits', digits, false, false), 'join', false)(J$.T(430217, '', 21, false)), digitsString, false, false);
                                    if (J$.C(23504, J$.M(430257, J$.R(430241, 'digitsString', digitsString, false, false), 'match', false)(J$.T(430249, /^0+$/, 14, false)))) {
                                        exponent = J$.W(430273, 'exponent', J$.R(430265, 'EXPONENT_MAX', EXPONENT_MAX, false, true), exponent, false, false);
                                        break;
                                    } else {
                                        return J$.Rt(430337, J$.F(430329, J$.R(430281, 'Decimal128', Decimal128, false, true), true)(J$.M(430321, J$.R(430289, 'utils', utils, false, true), 'toBuffer', false)(J$.C(23496, J$.R(430297, 'isNegative', isNegative, false, false)) ? J$.R(430305, 'INF_NEGATIVE_BUFFER', INF_NEGATIVE_BUFFER, false, true) : J$.R(430313, 'INF_POSITIVE_BUFFER', INF_POSITIVE_BUFFER, false, true))));
                                    }
                                }
                                exponent = J$.W(430361, 'exponent', J$.B(51874, '-', J$.R(430345, 'exponent', exponent, false, false), J$.T(430353, 1, 22, false)), exponent, false, false);
                            }
                            while (J$.C(23576, J$.C(23528, J$.B(51882, '<', J$.R(430369, 'exponent', exponent, false, false), J$.R(430377, 'EXPONENT_MIN', EXPONENT_MIN, false, true))) ? J$._() : J$.B(51890, '<', J$.R(430385, 'nDigitsStored', nDigitsStored, false, false), J$.R(430393, 'nDigits', nDigits, false, false)))) {
                                if (J$.C(23536, J$.B(51898, '===', J$.R(430401, 'lastDigit', lastDigit, false, false), J$.T(430409, 0, 22, false)))) {
                                    exponent = J$.W(430425, 'exponent', J$.R(430417, 'EXPONENT_MIN', EXPONENT_MIN, false, true), exponent, false, false);
                                    significantDigits = J$.W(430441, 'significantDigits', J$.T(430433, 0, 22, false), significantDigits, false, false);
                                    break;
                                }
                                if (J$.C(23544, J$.B(51906, '<', J$.R(430449, 'nDigitsStored', nDigitsStored, false, false), J$.R(430457, 'nDigits', nDigits, false, false)))) {
                                    nDigits = J$.W(430481, 'nDigits', J$.B(51914, '-', J$.R(430465, 'nDigits', nDigits, false, false), J$.T(430473, 1, 22, false)), nDigits, false, false);
                                } else {
                                    lastDigit = J$.W(430505, 'lastDigit', J$.B(51922, '-', J$.R(430489, 'lastDigit', lastDigit, false, false), J$.T(430497, 1, 22, false)), lastDigit, false, false);
                                }
                                if (J$.C(23568, J$.B(51930, '<', J$.R(430513, 'exponent', exponent, false, false), J$.R(430521, 'EXPONENT_MAX', EXPONENT_MAX, false, true)))) {
                                    exponent = J$.W(430545, 'exponent', J$.B(51938, '+', J$.R(430529, 'exponent', exponent, false, false), J$.T(430537, 1, 22, false)), exponent, false, false);
                                } else {
                                    digitsString = J$.W(430577, 'digitsString', J$.M(430569, J$.R(430553, 'digits', digits, false, false), 'join', false)(J$.T(430561, '', 21, false)), digitsString, false, false);
                                    if (J$.C(23560, J$.M(430601, J$.R(430585, 'digitsString', digitsString, false, false), 'match', false)(J$.T(430593, /^0+$/, 14, false)))) {
                                        exponent = J$.W(430617, 'exponent', J$.R(430609, 'EXPONENT_MAX', EXPONENT_MAX, false, true), exponent, false, false);
                                        break;
                                    } else {
                                        return J$.Rt(430681, J$.F(430673, J$.R(430625, 'Decimal128', Decimal128, false, true), true)(J$.M(430665, J$.R(430633, 'utils', utils, false, true), 'toBuffer', false)(J$.C(23552, J$.R(430641, 'isNegative', isNegative, false, false)) ? J$.R(430649, 'INF_NEGATIVE_BUFFER', INF_NEGATIVE_BUFFER, false, true) : J$.R(430657, 'INF_POSITIVE_BUFFER', INF_POSITIVE_BUFFER, false, true))));
                                    }
                                }
                            }
                            if (J$.C(23688, J$.C(23584, J$.B(51962, '<', J$.B(51954, '+', J$.B(51946, '-', J$.R(430689, 'lastDigit', lastDigit, false, false), J$.R(430697, 'firstDigit', firstDigit, false, false)), J$.T(430705, 1, 22, false)), J$.R(430713, 'significantDigits', significantDigits, false, false))) ? J$.B(51970, '!==', J$.G(430737, J$.R(430721, 'string', string, false, false), J$.R(430729, 'significantDigits', significantDigits, false, false)), J$.T(430745, '0', 21, false)) : J$._())) {
                                var endOfString = J$.W(430761, 'endOfString', J$.R(430753, 'nDigitsRead', nDigitsRead, false, false), endOfString, false, false);
                                if (J$.C(23600, J$.C(23592, J$.R(430769, 'sawRadix', sawRadix, false, false)) ? J$.B(51978, '===', J$.R(430777, 'exponent', exponent, false, false), J$.R(430785, 'EXPONENT_MIN', EXPONENT_MIN, false, true)) : J$._())) {
                                    firstNonZero = J$.W(430809, 'firstNonZero', J$.B(51986, '+', J$.R(430793, 'firstNonZero', firstNonZero, false, false), J$.T(430801, 1, 22, false)), firstNonZero, false, false);
                                    endOfString = J$.W(430833, 'endOfString', J$.B(51994, '+', J$.R(430817, 'endOfString', endOfString, false, false), J$.T(430825, 1, 22, false)), endOfString, false, false);
                                }
                                var roundDigit = J$.W(430905, 'roundDigit', J$.F(430897, J$.I(typeof parseInt === 'undefined' ? parseInt = J$.R(430841, 'parseInt', undefined, true, true) : parseInt = J$.R(430841, 'parseInt', parseInt, true, true)), false)(J$.G(430881, J$.R(430849, 'string', string, false, false), J$.B(52010, '+', J$.B(52002, '+', J$.R(430857, 'firstNonZero', firstNonZero, false, false), J$.R(430865, 'lastDigit', lastDigit, false, false)), J$.T(430873, 1, 22, false))), J$.T(430889, 10, 22, false)), roundDigit, false, false);
                                var roundBit = J$.W(430921, 'roundBit', J$.T(430913, 0, 22, false), roundBit, false, false);
                                if (J$.C(23632, J$.B(52018, '>=', J$.R(430929, 'roundDigit', roundDigit, false, false), J$.T(430937, 5, 22, false)))) {
                                    roundBit = J$.W(430953, 'roundBit', J$.T(430945, 1, 22, false), roundBit, false, false);
                                    if (J$.C(23624, J$.B(52026, '===', J$.R(430961, 'roundDigit', roundDigit, false, false), J$.T(430969, 5, 22, false)))) {
                                        roundBit = J$.W(431017, 'roundBit', J$.B(52042, '===', J$.B(52034, '%', J$.G(430993, J$.R(430977, 'digits', digits, false, false), J$.R(430985, 'lastDigit', lastDigit, false, false)), J$.T(431001, 2, 22, false)), J$.T(431009, 1, 22, false)), roundBit, false, false);
                                        for (i = J$.W(431049, 'i', J$.B(52058, '+', J$.B(52050, '+', J$.R(431025, 'firstNonZero', firstNonZero, false, false), J$.R(431033, 'lastDigit', lastDigit, false, false)), J$.T(431041, 2, 22, false)), i, false, false); J$.C(23616, J$.B(52066, '<', J$.R(431057, 'i', i, false, false), J$.R(431065, 'endOfString', endOfString, false, false))); J$.B(52090, '-', i = J$.W(431081, 'i', J$.B(52082, '+', J$.U(52074, '+', J$.R(431073, 'i', i, false, false)), 1), i, false, false), 1)) {
                                            if (J$.C(23608, J$.F(431129, J$.I(typeof parseInt === 'undefined' ? parseInt = J$.R(431089, 'parseInt', undefined, true, true) : parseInt = J$.R(431089, 'parseInt', parseInt, true, true)), false)(J$.G(431113, J$.R(431097, 'string', string, false, false), J$.R(431105, 'i', i, false, false)), J$.T(431121, 10, 22, false)))) {
                                                roundBit = J$.W(431145, 'roundBit', J$.T(431137, 1, 22, false), roundBit, false, false);
                                                break;
                                            }
                                        }
                                    }
                                }
                                if (J$.C(23680, J$.R(431153, 'roundBit', roundBit, false, false))) {
                                    var dIdx = J$.W(431169, 'dIdx', J$.R(431161, 'lastDigit', lastDigit, false, false), dIdx, false, false);
                                    for (; J$.C(23672, J$.B(52098, '>=', J$.R(431177, 'dIdx', dIdx, false, false), J$.T(431185, 0, 22, false))); J$.B(52122, '+', dIdx = J$.W(431201, 'dIdx', J$.B(52114, '-', J$.U(52106, '+', J$.R(431193, 'dIdx', dIdx, false, false)), 1), dIdx, false, false), 1)) {
                                        if (J$.C(23664, J$.B(52130, '>', J$.A(431225, J$.R(431209, 'digits', digits, false, false), J$.R(431217, 'dIdx', dIdx, false, false), '+')(1), J$.T(431233, 9, 22, false)))) {
                                            J$.P(431265, J$.R(431241, 'digits', digits, false, false), J$.R(431249, 'dIdx', dIdx, false, false), J$.T(431257, 0, 22, false));
                                            if (J$.C(23656, J$.B(52138, '===', J$.R(431273, 'dIdx', dIdx, false, false), J$.T(431281, 0, 22, false)))) {
                                                if (J$.C(23648, J$.B(52146, '<', J$.R(431289, 'exponent', exponent, false, false), J$.R(431297, 'EXPONENT_MAX', EXPONENT_MAX, false, true)))) {
                                                    exponent = J$.W(431321, 'exponent', J$.B(52154, '+', J$.R(431305, 'exponent', exponent, false, false), J$.T(431313, 1, 22, false)), exponent, false, false);
                                                    J$.P(431353, J$.R(431329, 'digits', digits, false, false), J$.R(431337, 'dIdx', dIdx, false, false), J$.T(431345, 1, 22, false));
                                                } else {
                                                    return J$.Rt(431417, J$.F(431409, J$.R(431361, 'Decimal128', Decimal128, false, true), true)(J$.M(431401, J$.R(431369, 'utils', utils, false, true), 'toBuffer', false)(J$.C(23640, J$.R(431377, 'isNegative', isNegative, false, false)) ? J$.R(431385, 'INF_NEGATIVE_BUFFER', INF_NEGATIVE_BUFFER, false, true) : J$.R(431393, 'INF_POSITIVE_BUFFER', INF_POSITIVE_BUFFER, false, true))));
                                                }
                                            }
                                        } else {
                                            break;
                                        }
                                    }
                                }
                            }
                            significandHigh = J$.W(431449, 'significandHigh', J$.M(431441, J$.R(431425, 'Long', Long, false, true), 'fromNumber', false)(J$.T(431433, 0, 22, false)), significandHigh, false, false);
                            significandLow = J$.W(431481, 'significandLow', J$.M(431473, J$.R(431457, 'Long', Long, false, true), 'fromNumber', false)(J$.T(431465, 0, 22, false)), significandLow, false, false);
                            if (J$.C(23728, J$.B(52162, '===', J$.R(431489, 'significantDigits', significantDigits, false, false), J$.T(431497, 0, 22, false)))) {
                                significandHigh = J$.W(431529, 'significandHigh', J$.M(431521, J$.R(431505, 'Long', Long, false, true), 'fromNumber', false)(J$.T(431513, 0, 22, false)), significandHigh, false, false);
                                significandLow = J$.W(431561, 'significandLow', J$.M(431553, J$.R(431537, 'Long', Long, false, true), 'fromNumber', false)(J$.T(431545, 0, 22, false)), significandLow, false, false);
                            } else if (J$.C(23720, J$.B(52178, '<', J$.B(52170, '-', J$.R(431569, 'lastDigit', lastDigit, false, false), J$.R(431577, 'firstDigit', firstDigit, false, false)), J$.T(431585, 17, 22, false)))) {
                                dIdx = J$.W(431601, 'dIdx', J$.R(431593, 'firstDigit', firstDigit, false, false), dIdx, false, false);
                                significandLow = J$.W(431657, 'significandLow', J$.M(431649, J$.R(431609, 'Long', Long, false, true), 'fromNumber', false)(J$.G(431641, J$.R(431617, 'digits', digits, false, false), J$.B(52202, '-', dIdx = J$.W(431633, 'dIdx', J$.B(52194, '+', J$.U(52186, '+', J$.R(431625, 'dIdx', dIdx, false, false)), 1), dIdx, false, false), 1))), significandLow, false, false);
                                significandHigh = J$.W(431697, 'significandHigh', J$.F(431689, J$.R(431665, 'Long', Long, false, true), true)(J$.T(431673, 0, 22, false), J$.T(431681, 0, 22, false)), significandHigh, false, false);
                                for (; J$.C(23696, J$.B(52210, '<=', J$.R(431705, 'dIdx', dIdx, false, false), J$.R(431713, 'lastDigit', lastDigit, false, false))); J$.B(52234, '-', dIdx = J$.W(431729, 'dIdx', J$.B(52226, '+', J$.U(52218, '+', J$.R(431721, 'dIdx', dIdx, false, false)), 1), dIdx, false, false), 1)) {
                                    significandLow = J$.W(431777, 'significandLow', J$.M(431769, J$.R(431737, 'significandLow', significandLow, false, false), 'multiply', false)(J$.M(431761, J$.R(431745, 'Long', Long, false, true), 'fromNumber', false)(J$.T(431753, 10, 22, false))), significandLow, false, false);
                                    significandLow = J$.W(431841, 'significandLow', J$.M(431833, J$.R(431785, 'significandLow', significandLow, false, false), 'add', false)(J$.M(431825, J$.R(431793, 'Long', Long, false, true), 'fromNumber', false)(J$.G(431817, J$.R(431801, 'digits', digits, false, false), J$.R(431809, 'dIdx', dIdx, false, false)))), significandLow, false, false);
                                }
                            } else {
                                dIdx = J$.W(431857, 'dIdx', J$.R(431849, 'firstDigit', firstDigit, false, false), dIdx, false, false);
                                significandHigh = J$.W(431913, 'significandHigh', J$.M(431905, J$.R(431865, 'Long', Long, false, true), 'fromNumber', false)(J$.G(431897, J$.R(431873, 'digits', digits, false, false), J$.B(52258, '-', dIdx = J$.W(431889, 'dIdx', J$.B(52250, '+', J$.U(52242, '+', J$.R(431881, 'dIdx', dIdx, false, false)), 1), dIdx, false, false), 1))), significandHigh, false, false);
                                for (; J$.C(23704, J$.B(52274, '<=', J$.R(431921, 'dIdx', dIdx, false, false), J$.B(52266, '-', J$.R(431929, 'lastDigit', lastDigit, false, false), J$.T(431937, 17, 22, false)))); J$.B(52298, '-', dIdx = J$.W(431953, 'dIdx', J$.B(52290, '+', J$.U(52282, '+', J$.R(431945, 'dIdx', dIdx, false, false)), 1), dIdx, false, false), 1)) {
                                    significandHigh = J$.W(432001, 'significandHigh', J$.M(431993, J$.R(431961, 'significandHigh', significandHigh, false, false), 'multiply', false)(J$.M(431985, J$.R(431969, 'Long', Long, false, true), 'fromNumber', false)(J$.T(431977, 10, 22, false))), significandHigh, false, false);
                                    significandHigh = J$.W(432065, 'significandHigh', J$.M(432057, J$.R(432009, 'significandHigh', significandHigh, false, false), 'add', false)(J$.M(432049, J$.R(432017, 'Long', Long, false, true), 'fromNumber', false)(J$.G(432041, J$.R(432025, 'digits', digits, false, false), J$.R(432033, 'dIdx', dIdx, false, false)))), significandHigh, false, false);
                                }
                                significandLow = J$.W(432121, 'significandLow', J$.M(432113, J$.R(432073, 'Long', Long, false, true), 'fromNumber', false)(J$.G(432105, J$.R(432081, 'digits', digits, false, false), J$.B(52322, '-', dIdx = J$.W(432097, 'dIdx', J$.B(52314, '+', J$.U(52306, '+', J$.R(432089, 'dIdx', dIdx, false, false)), 1), dIdx, false, false), 1))), significandLow, false, false);
                                for (; J$.C(23712, J$.B(52330, '<=', J$.R(432129, 'dIdx', dIdx, false, false), J$.R(432137, 'lastDigit', lastDigit, false, false))); J$.B(52354, '-', dIdx = J$.W(432153, 'dIdx', J$.B(52346, '+', J$.U(52338, '+', J$.R(432145, 'dIdx', dIdx, false, false)), 1), dIdx, false, false), 1)) {
                                    significandLow = J$.W(432201, 'significandLow', J$.M(432193, J$.R(432161, 'significandLow', significandLow, false, false), 'multiply', false)(J$.M(432185, J$.R(432169, 'Long', Long, false, true), 'fromNumber', false)(J$.T(432177, 10, 22, false))), significandLow, false, false);
                                    significandLow = J$.W(432265, 'significandLow', J$.M(432257, J$.R(432209, 'significandLow', significandLow, false, false), 'add', false)(J$.M(432249, J$.R(432217, 'Long', Long, false, true), 'fromNumber', false)(J$.G(432241, J$.R(432225, 'digits', digits, false, false), J$.R(432233, 'dIdx', dIdx, false, false)))), significandLow, false, false);
                                }
                            }
                            var significand = J$.W(432321, 'significand', J$.F(432313, J$.R(432273, 'multiply64x2', multiply64x2, false, true), false)(J$.R(432281, 'significandHigh', significandHigh, false, false), J$.M(432305, J$.R(432289, 'Long', Long, false, true), 'fromString', false)(J$.T(432297, '100000000000000000', 21, false))), significand, false, false);
                            J$.P(432369, J$.R(432329, 'significand', significand, false, false), 'low', J$.M(432361, J$.G(432345, J$.R(432337, 'significand', significand, false, false), 'low'), 'add', false)(J$.R(432353, 'significandLow', significandLow, false, false)));
                            if (J$.C(23736, J$.F(432409, J$.R(432377, 'lessThan', lessThan, false, true), false)(J$.G(432393, J$.R(432385, 'significand', significand, false, false), 'low'), J$.R(432401, 'significandLow', significandLow, false, false)))) {
                                J$.P(432473, J$.R(432417, 'significand', significand, false, false), 'high', J$.M(432465, J$.G(432433, J$.R(432425, 'significand', significand, false, false), 'high'), 'add', false)(J$.M(432457, J$.R(432441, 'Long', Long, false, true), 'fromNumber', false)(J$.T(432449, 1, 22, false))));
                            }
                            biasedExponent = J$.W(432497, 'biasedExponent', J$.B(52362, '+', J$.R(432481, 'exponent', exponent, false, false), J$.R(432489, 'EXPONENT_BIAS', EXPONENT_BIAS, false, true)), biasedExponent, false, false);
                            var dec = J$.W(432561, 'dec', J$.T(432553, {
                                low: J$.M(432521, J$.R(432505, 'Long', Long, false, true), 'fromNumber', false)(J$.T(432513, 0, 22, false)),
                                high: J$.M(432545, J$.R(432529, 'Long', Long, false, true), 'fromNumber', false)(J$.T(432537, 0, 22, false))
                            }, 11, false), dec, false, false);
                            if (J$.C(23744, J$.M(432649, J$.M(432625, J$.M(432593, J$.G(432577, J$.R(432569, 'significand', significand, false, false), 'high'), 'shiftRightUnsigned', false)(J$.T(432585, 49, 22, false)), 'and', false)(J$.M(432617, J$.R(432601, 'Long', Long, false, true), 'fromNumber', false)(J$.T(432609, 1, 22, false))), 'equals', false)(J$.G(432641, J$.R(432633, 'Long', Long, false, true), 'fromNumber')))) {
                                J$.P(432729, J$.R(432657, 'dec', dec, false, false), 'high', J$.M(432721, J$.G(432673, J$.R(432665, 'dec', dec, false, false), 'high'), 'or', false)(J$.M(432713, J$.M(432697, J$.R(432681, 'Long', Long, false, true), 'fromNumber', false)(J$.T(432689, 3, 22, false)), 'shiftLeft', false)(J$.T(432705, 61, 22, false))));
                                J$.P(432841, J$.R(432737, 'dec', dec, false, false), 'high', J$.M(432833, J$.G(432753, J$.R(432745, 'dec', dec, false, false), 'high'), 'or', false)(J$.M(432825, J$.M(432777, J$.R(432761, 'Long', Long, false, true), 'fromNumber', false)(J$.R(432769, 'biasedExponent', biasedExponent, false, false)), 'and', false)(J$.M(432817, J$.M(432801, J$.R(432785, 'Long', Long, false, true), 'fromNumber', false)(J$.T(432793, 16383, 22, false)), 'shiftLeft', false)(J$.T(432809, 47, 22, false)))));
                                J$.P(432929, J$.R(432849, 'dec', dec, false, false), 'high', J$.M(432921, J$.G(432865, J$.R(432857, 'dec', dec, false, false), 'high'), 'or', false)(J$.M(432913, J$.G(432881, J$.R(432873, 'significand', significand, false, false), 'high'), 'and', false)(J$.M(432905, J$.R(432889, 'Long', Long, false, true), 'fromNumber', false)(J$.T(432897, 140737488355327, 22, false)))));
                            } else {
                                J$.P(433017, J$.R(432937, 'dec', dec, false, false), 'high', J$.M(433009, J$.G(432953, J$.R(432945, 'dec', dec, false, false), 'high'), 'or', false)(J$.M(433001, J$.M(432985, J$.R(432961, 'Long', Long, false, true), 'fromNumber', false)(J$.B(52370, '&', J$.R(432969, 'biasedExponent', biasedExponent, false, false), J$.T(432977, 16383, 22, false))), 'shiftLeft', false)(J$.T(432993, 49, 22, false))));
                                J$.P(433105, J$.R(433025, 'dec', dec, false, false), 'high', J$.M(433097, J$.G(433041, J$.R(433033, 'dec', dec, false, false), 'high'), 'or', false)(J$.M(433089, J$.G(433057, J$.R(433049, 'significand', significand, false, false), 'high'), 'and', false)(J$.M(433081, J$.R(433065, 'Long', Long, false, true), 'fromNumber', false)(J$.T(433073, 562949953421311, 22, false)))));
                            }
                            J$.P(433137, J$.R(433113, 'dec', dec, false, false), 'low', J$.G(433129, J$.R(433121, 'significand', significand, false, false), 'low'));
                            if (J$.C(23752, J$.R(433145, 'isNegative', isNegative, false, false))) {
                                J$.P(433209, J$.R(433153, 'dec', dec, false, false), 'high', J$.M(433201, J$.G(433169, J$.R(433161, 'dec', dec, false, false), 'high'), 'or', false)(J$.M(433193, J$.R(433177, 'Long', Long, false, true), 'fromString', false)(J$.T(433185, '9223372036854775808', 21, false))));
                            }
                            var buffer = J$.W(433241, 'buffer', J$.M(433233, J$.R(433217, 'utils', utils, false, true), 'allocBuffer', false)(J$.T(433225, 16, 22, false)), buffer, false, false);
                            index = J$.W(433257, 'index', J$.T(433249, 0, 22, false), index, false, false);
                            J$.P(433321, J$.R(433265, 'buffer', buffer, false, false), J$.B(52394, '-', index = J$.W(433281, 'index', J$.B(52386, '+', J$.U(52378, '+', J$.R(433273, 'index', index, false, false)), 1), index, false, false), 1), J$.B(52402, '&', J$.G(433305, J$.G(433297, J$.R(433289, 'dec', dec, false, false), 'low'), 'low_'), J$.T(433313, 255, 22, false)));
                            J$.P(433393, J$.R(433329, 'buffer', buffer, false, false), J$.B(52426, '-', index = J$.W(433345, 'index', J$.B(52418, '+', J$.U(52410, '+', J$.R(433337, 'index', index, false, false)), 1), index, false, false), 1), J$.B(52442, '&', J$.B(52434, '>>', J$.G(433369, J$.G(433361, J$.R(433353, 'dec', dec, false, false), 'low'), 'low_'), J$.T(433377, 8, 22, false)), J$.T(433385, 255, 22, false)));
                            J$.P(433465, J$.R(433401, 'buffer', buffer, false, false), J$.B(52466, '-', index = J$.W(433417, 'index', J$.B(52458, '+', J$.U(52450, '+', J$.R(433409, 'index', index, false, false)), 1), index, false, false), 1), J$.B(52482, '&', J$.B(52474, '>>', J$.G(433441, J$.G(433433, J$.R(433425, 'dec', dec, false, false), 'low'), 'low_'), J$.T(433449, 16, 22, false)), J$.T(433457, 255, 22, false)));
                            J$.P(433537, J$.R(433473, 'buffer', buffer, false, false), J$.B(52506, '-', index = J$.W(433489, 'index', J$.B(52498, '+', J$.U(52490, '+', J$.R(433481, 'index', index, false, false)), 1), index, false, false), 1), J$.B(52522, '&', J$.B(52514, '>>', J$.G(433513, J$.G(433505, J$.R(433497, 'dec', dec, false, false), 'low'), 'low_'), J$.T(433521, 24, 22, false)), J$.T(433529, 255, 22, false)));
                            J$.P(433601, J$.R(433545, 'buffer', buffer, false, false), J$.B(52546, '-', index = J$.W(433561, 'index', J$.B(52538, '+', J$.U(52530, '+', J$.R(433553, 'index', index, false, false)), 1), index, false, false), 1), J$.B(52554, '&', J$.G(433585, J$.G(433577, J$.R(433569, 'dec', dec, false, false), 'low'), 'high_'), J$.T(433593, 255, 22, false)));
                            J$.P(433673, J$.R(433609, 'buffer', buffer, false, false), J$.B(52578, '-', index = J$.W(433625, 'index', J$.B(52570, '+', J$.U(52562, '+', J$.R(433617, 'index', index, false, false)), 1), index, false, false), 1), J$.B(52594, '&', J$.B(52586, '>>', J$.G(433649, J$.G(433641, J$.R(433633, 'dec', dec, false, false), 'low'), 'high_'), J$.T(433657, 8, 22, false)), J$.T(433665, 255, 22, false)));
                            J$.P(433745, J$.R(433681, 'buffer', buffer, false, false), J$.B(52618, '-', index = J$.W(433697, 'index', J$.B(52610, '+', J$.U(52602, '+', J$.R(433689, 'index', index, false, false)), 1), index, false, false), 1), J$.B(52634, '&', J$.B(52626, '>>', J$.G(433721, J$.G(433713, J$.R(433705, 'dec', dec, false, false), 'low'), 'high_'), J$.T(433729, 16, 22, false)), J$.T(433737, 255, 22, false)));
                            J$.P(433817, J$.R(433753, 'buffer', buffer, false, false), J$.B(52658, '-', index = J$.W(433769, 'index', J$.B(52650, '+', J$.U(52642, '+', J$.R(433761, 'index', index, false, false)), 1), index, false, false), 1), J$.B(52674, '&', J$.B(52666, '>>', J$.G(433793, J$.G(433785, J$.R(433777, 'dec', dec, false, false), 'low'), 'high_'), J$.T(433801, 24, 22, false)), J$.T(433809, 255, 22, false)));
                            J$.P(433881, J$.R(433825, 'buffer', buffer, false, false), J$.B(52698, '-', index = J$.W(433841, 'index', J$.B(52690, '+', J$.U(52682, '+', J$.R(433833, 'index', index, false, false)), 1), index, false, false), 1), J$.B(52706, '&', J$.G(433865, J$.G(433857, J$.R(433849, 'dec', dec, false, false), 'high'), 'low_'), J$.T(433873, 255, 22, false)));
                            J$.P(433953, J$.R(433889, 'buffer', buffer, false, false), J$.B(52730, '-', index = J$.W(433905, 'index', J$.B(52722, '+', J$.U(52714, '+', J$.R(433897, 'index', index, false, false)), 1), index, false, false), 1), J$.B(52746, '&', J$.B(52738, '>>', J$.G(433929, J$.G(433921, J$.R(433913, 'dec', dec, false, false), 'high'), 'low_'), J$.T(433937, 8, 22, false)), J$.T(433945, 255, 22, false)));
                            J$.P(434025, J$.R(433961, 'buffer', buffer, false, false), J$.B(52770, '-', index = J$.W(433977, 'index', J$.B(52762, '+', J$.U(52754, '+', J$.R(433969, 'index', index, false, false)), 1), index, false, false), 1), J$.B(52786, '&', J$.B(52778, '>>', J$.G(434001, J$.G(433993, J$.R(433985, 'dec', dec, false, false), 'high'), 'low_'), J$.T(434009, 16, 22, false)), J$.T(434017, 255, 22, false)));
                            J$.P(434097, J$.R(434033, 'buffer', buffer, false, false), J$.B(52810, '-', index = J$.W(434049, 'index', J$.B(52802, '+', J$.U(52794, '+', J$.R(434041, 'index', index, false, false)), 1), index, false, false), 1), J$.B(52826, '&', J$.B(52818, '>>', J$.G(434073, J$.G(434065, J$.R(434057, 'dec', dec, false, false), 'high'), 'low_'), J$.T(434081, 24, 22, false)), J$.T(434089, 255, 22, false)));
                            J$.P(434161, J$.R(434105, 'buffer', buffer, false, false), J$.B(52850, '-', index = J$.W(434121, 'index', J$.B(52842, '+', J$.U(52834, '+', J$.R(434113, 'index', index, false, false)), 1), index, false, false), 1), J$.B(52858, '&', J$.G(434145, J$.G(434137, J$.R(434129, 'dec', dec, false, false), 'high'), 'high_'), J$.T(434153, 255, 22, false)));
                            J$.P(434233, J$.R(434169, 'buffer', buffer, false, false), J$.B(52882, '-', index = J$.W(434185, 'index', J$.B(52874, '+', J$.U(52866, '+', J$.R(434177, 'index', index, false, false)), 1), index, false, false), 1), J$.B(52898, '&', J$.B(52890, '>>', J$.G(434209, J$.G(434201, J$.R(434193, 'dec', dec, false, false), 'high'), 'high_'), J$.T(434217, 8, 22, false)), J$.T(434225, 255, 22, false)));
                            J$.P(434305, J$.R(434241, 'buffer', buffer, false, false), J$.B(52922, '-', index = J$.W(434257, 'index', J$.B(52914, '+', J$.U(52906, '+', J$.R(434249, 'index', index, false, false)), 1), index, false, false), 1), J$.B(52938, '&', J$.B(52930, '>>', J$.G(434281, J$.G(434273, J$.R(434265, 'dec', dec, false, false), 'high'), 'high_'), J$.T(434289, 16, 22, false)), J$.T(434297, 255, 22, false)));
                            J$.P(434377, J$.R(434313, 'buffer', buffer, false, false), J$.B(52962, '-', index = J$.W(434329, 'index', J$.B(52954, '+', J$.U(52946, '+', J$.R(434321, 'index', index, false, false)), 1), index, false, false), 1), J$.B(52978, '&', J$.B(52970, '>>', J$.G(434353, J$.G(434345, J$.R(434337, 'dec', dec, false, false), 'high'), 'high_'), J$.T(434361, 24, 22, false)), J$.T(434369, 255, 22, false)));
                            return J$.Rt(434409, J$.F(434401, J$.R(434385, 'Decimal128', Decimal128, false, true), true)(J$.R(434393, 'buffer', buffer, false, false)));
                        } catch (J$e) {
                            J$.Ex(438529, J$e);
                        } finally {
                            if (J$.Fr(438537))
                                continue jalangiLabel5;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            var COMBINATION_MASK = J$.W(434713, 'COMBINATION_MASK', J$.T(434705, 31, 22, false), COMBINATION_MASK, false, true);
            var EXPONENT_MASK = J$.W(434729, 'EXPONENT_MASK', J$.T(434721, 16383, 22, false), EXPONENT_MASK, false, true);
            var COMBINATION_INFINITY = J$.W(434745, 'COMBINATION_INFINITY', J$.T(434737, 30, 22, false), COMBINATION_INFINITY, false, true);
            var COMBINATION_NAN = J$.W(434761, 'COMBINATION_NAN', J$.T(434753, 31, 22, false), COMBINATION_NAN, false, true);
            EXPONENT_BIAS = J$.W(434777, 'EXPONENT_BIAS', J$.T(434769, 6176, 22, false), EXPONENT_BIAS, false, true);
            J$.P(438121, J$.G(434793, J$.R(434785, 'Decimal128', Decimal128, false, true), 'prototype'), 'toString', J$.T(438113, function () {
                jalangiLabel6:
                    while (true) {
                        try {
                            J$.Fe(437913, arguments.callee, this, arguments);
                            arguments = J$.N(437921, 'arguments', arguments, true, false, false);
                            J$.N(437929, 'high', high, false, false, false);
                            J$.N(437937, 'midh', midh, false, false, false);
                            J$.N(437945, 'midl', midl, false, false, false);
                            J$.N(437953, 'low', low, false, false, false);
                            J$.N(437961, 'combination', combination, false, false, false);
                            J$.N(437969, 'biased_exponent', biased_exponent, false, false, false);
                            J$.N(437977, 'significand_digits', significand_digits, false, false, false);
                            J$.N(437985, 'significand', significand, false, false, false);
                            J$.N(437993, 'i', i, false, false, false);
                            J$.N(438001, 'index', index, false, false, false);
                            J$.N(438009, 'exponent', exponent, false, false, false);
                            J$.N(438017, 'scientific_exponent', scientific_exponent, false, false, false);
                            J$.N(438025, 'is_zero', is_zero, false, false, false);
                            J$.N(438033, 'significand_msb', significand_msb, false, false, false);
                            J$.N(438041, 'significand128', significand128, false, false, false);
                            J$.N(438049, 'j', j, false, false, false);
                            J$.N(438057, 'k', k, false, false, false);
                            J$.N(438065, 'string', string, false, false, false);
                            J$.N(438073, 'buffer', buffer, false, false, false);
                            J$.N(438081, 'dec', dec, false, false, false);
                            J$.N(438089, 'least_digits', least_digits, false, false, false);
                            J$.N(438097, 'result', result, false, false, false);
                            J$.N(438105, 'radix_position', radix_position, false, false, false);
                            var high;
                            var midh;
                            var midl;
                            var low;
                            var combination;
                            var biased_exponent;
                            var significand_digits = J$.W(434809, 'significand_digits', J$.T(434801, 0, 22, false), significand_digits, false, false);
                            var significand = J$.W(434841, 'significand', J$.F(434833, J$.I(typeof Array === 'undefined' ? Array = J$.R(434817, 'Array', undefined, true, true) : Array = J$.R(434817, 'Array', Array, true, true)), true)(J$.T(434825, 36, 22, false)), significand, false, false);
                            for (var i = J$.W(434857, 'i', J$.T(434849, 0, 22, false), i, false, false); J$.C(23760, J$.B(52986, '<', J$.R(434865, 'i', i, false, false), J$.G(434881, J$.R(434873, 'significand', significand, false, false), 'length'))); J$.B(53010, '-', i = J$.W(434897, 'i', J$.B(53002, '+', J$.U(52994, '+', J$.R(434889, 'i', i, false, false)), 1), i, false, false), 1)) {
                                J$.P(434929, J$.R(434905, 'significand', significand, false, false), J$.R(434913, 'i', i, false, false), J$.T(434921, 0, 22, false));
                            }
                            var index = J$.W(434945, 'index', J$.T(434937, 0, 22, false), index, false, false);
                            var exponent;
                            var scientific_exponent;
                            var is_zero = J$.W(434961, 'is_zero', J$.T(434953, false, 23, false), is_zero, false, false);
                            var significand_msb;
                            var significand128 = J$.W(435001, 'significand128', J$.T(434993, { parts: J$.F(434985, J$.I(typeof Array === 'undefined' ? Array = J$.R(434969, 'Array', undefined, true, true) : Array = J$.R(434969, 'Array', Array, true, true)), true)(J$.T(434977, 4, 22, false)) }, 11, false), significand128, false, false);
                            J$.R(435009, 'i', i, false, false);
                            var j, k;
                            var string = J$.W(435025, 'string', J$.T(435017, [], 10, false), string, false, false);
                            index = J$.W(435041, 'index', J$.T(435033, 0, 22, false), index, false, false);
                            var buffer = J$.W(435065, 'buffer', J$.G(435057, J$.R(435049, 'this', this, false, false), 'bytes'), buffer, false, false);
                            low = J$.W(435225, 'low', J$.B(53154, '|', J$.B(53114, '|', J$.B(53074, '|', J$.G(435097, J$.R(435073, 'buffer', buffer, false, false), J$.B(53034, '-', index = J$.W(435089, 'index', J$.B(53026, '+', J$.U(53018, '+', J$.R(435081, 'index', index, false, false)), 1), index, false, false), 1)), J$.B(53066, '<<', J$.G(435129, J$.R(435105, 'buffer', buffer, false, false), J$.B(53058, '-', index = J$.W(435121, 'index', J$.B(53050, '+', J$.U(53042, '+', J$.R(435113, 'index', index, false, false)), 1), index, false, false), 1)), J$.T(435137, 8, 22, false))), J$.B(53106, '<<', J$.G(435169, J$.R(435145, 'buffer', buffer, false, false), J$.B(53098, '-', index = J$.W(435161, 'index', J$.B(53090, '+', J$.U(53082, '+', J$.R(435153, 'index', index, false, false)), 1), index, false, false), 1)), J$.T(435177, 16, 22, false))), J$.B(53146, '<<', J$.G(435209, J$.R(435185, 'buffer', buffer, false, false), J$.B(53138, '-', index = J$.W(435201, 'index', J$.B(53130, '+', J$.U(53122, '+', J$.R(435193, 'index', index, false, false)), 1), index, false, false), 1)), J$.T(435217, 24, 22, false))), low, false, false);
                            midl = J$.W(435385, 'midl', J$.B(53298, '|', J$.B(53258, '|', J$.B(53218, '|', J$.G(435257, J$.R(435233, 'buffer', buffer, false, false), J$.B(53178, '-', index = J$.W(435249, 'index', J$.B(53170, '+', J$.U(53162, '+', J$.R(435241, 'index', index, false, false)), 1), index, false, false), 1)), J$.B(53210, '<<', J$.G(435289, J$.R(435265, 'buffer', buffer, false, false), J$.B(53202, '-', index = J$.W(435281, 'index', J$.B(53194, '+', J$.U(53186, '+', J$.R(435273, 'index', index, false, false)), 1), index, false, false), 1)), J$.T(435297, 8, 22, false))), J$.B(53250, '<<', J$.G(435329, J$.R(435305, 'buffer', buffer, false, false), J$.B(53242, '-', index = J$.W(435321, 'index', J$.B(53234, '+', J$.U(53226, '+', J$.R(435313, 'index', index, false, false)), 1), index, false, false), 1)), J$.T(435337, 16, 22, false))), J$.B(53290, '<<', J$.G(435369, J$.R(435345, 'buffer', buffer, false, false), J$.B(53282, '-', index = J$.W(435361, 'index', J$.B(53274, '+', J$.U(53266, '+', J$.R(435353, 'index', index, false, false)), 1), index, false, false), 1)), J$.T(435377, 24, 22, false))), midl, false, false);
                            midh = J$.W(435545, 'midh', J$.B(53442, '|', J$.B(53402, '|', J$.B(53362, '|', J$.G(435417, J$.R(435393, 'buffer', buffer, false, false), J$.B(53322, '-', index = J$.W(435409, 'index', J$.B(53314, '+', J$.U(53306, '+', J$.R(435401, 'index', index, false, false)), 1), index, false, false), 1)), J$.B(53354, '<<', J$.G(435449, J$.R(435425, 'buffer', buffer, false, false), J$.B(53346, '-', index = J$.W(435441, 'index', J$.B(53338, '+', J$.U(53330, '+', J$.R(435433, 'index', index, false, false)), 1), index, false, false), 1)), J$.T(435457, 8, 22, false))), J$.B(53394, '<<', J$.G(435489, J$.R(435465, 'buffer', buffer, false, false), J$.B(53386, '-', index = J$.W(435481, 'index', J$.B(53378, '+', J$.U(53370, '+', J$.R(435473, 'index', index, false, false)), 1), index, false, false), 1)), J$.T(435497, 16, 22, false))), J$.B(53434, '<<', J$.G(435529, J$.R(435505, 'buffer', buffer, false, false), J$.B(53426, '-', index = J$.W(435521, 'index', J$.B(53418, '+', J$.U(53410, '+', J$.R(435513, 'index', index, false, false)), 1), index, false, false), 1)), J$.T(435537, 24, 22, false))), midh, false, false);
                            high = J$.W(435705, 'high', J$.B(53586, '|', J$.B(53546, '|', J$.B(53506, '|', J$.G(435577, J$.R(435553, 'buffer', buffer, false, false), J$.B(53466, '-', index = J$.W(435569, 'index', J$.B(53458, '+', J$.U(53450, '+', J$.R(435561, 'index', index, false, false)), 1), index, false, false), 1)), J$.B(53498, '<<', J$.G(435609, J$.R(435585, 'buffer', buffer, false, false), J$.B(53490, '-', index = J$.W(435601, 'index', J$.B(53482, '+', J$.U(53474, '+', J$.R(435593, 'index', index, false, false)), 1), index, false, false), 1)), J$.T(435617, 8, 22, false))), J$.B(53538, '<<', J$.G(435649, J$.R(435625, 'buffer', buffer, false, false), J$.B(53530, '-', index = J$.W(435641, 'index', J$.B(53522, '+', J$.U(53514, '+', J$.R(435633, 'index', index, false, false)), 1), index, false, false), 1)), J$.T(435657, 16, 22, false))), J$.B(53578, '<<', J$.G(435689, J$.R(435665, 'buffer', buffer, false, false), J$.B(53570, '-', index = J$.W(435681, 'index', J$.B(53562, '+', J$.U(53554, '+', J$.R(435673, 'index', index, false, false)), 1), index, false, false), 1)), J$.T(435697, 24, 22, false))), high, false, false);
                            index = J$.W(435721, 'index', J$.T(435713, 0, 22, false), index, false, false);
                            var dec = J$.W(435801, 'dec', J$.T(435793, {
                                low: J$.F(435753, J$.R(435729, 'Long', Long, false, true), true)(J$.R(435737, 'low', low, false, false), J$.R(435745, 'midl', midl, false, false)),
                                high: J$.F(435785, J$.R(435761, 'Long', Long, false, true), true)(J$.R(435769, 'midh', midh, false, false), J$.R(435777, 'high', high, false, false))
                            }, 11, false), dec, false, false);
                            if (J$.C(23768, J$.M(435841, J$.G(435817, J$.R(435809, 'dec', dec, false, false), 'high'), 'lessThan', false)(J$.G(435833, J$.R(435825, 'Long', Long, false, true), 'ZERO')))) {
                                J$.M(435865, J$.R(435849, 'string', string, false, false), 'push', false)(J$.T(435857, '-', 21, false));
                            }
                            combination = J$.W(435897, 'combination', J$.B(53602, '&', J$.B(53594, '>>', J$.R(435873, 'high', high, false, false), J$.T(435881, 26, 22, false)), J$.R(435889, 'COMBINATION_MASK', COMBINATION_MASK, false, true)), combination, false, false);
                            if (J$.C(23792, J$.B(53618, '===', J$.B(53610, '>>', J$.R(435905, 'combination', combination, false, false), J$.T(435913, 3, 22, false)), J$.T(435921, 3, 22, false)))) {
                                if (J$.C(23784, J$.B(53626, '===', J$.R(435929, 'combination', combination, false, false), J$.R(435937, 'COMBINATION_INFINITY', COMBINATION_INFINITY, false, true)))) {
                                    return J$.Rt(435977, J$.B(53634, '+', J$.M(435961, J$.R(435945, 'string', string, false, false), 'join', false)(J$.T(435953, '', 21, false)), J$.T(435969, 'Infinity', 21, false)));
                                } else if (J$.C(23776, J$.B(53642, '===', J$.R(435985, 'combination', combination, false, false), J$.R(435993, 'COMBINATION_NAN', COMBINATION_NAN, false, true)))) {
                                    return J$.Rt(436009, J$.T(436001, 'NaN', 21, false));
                                } else {
                                    biased_exponent = J$.W(436041, 'biased_exponent', J$.B(53658, '&', J$.B(53650, '>>', J$.R(436017, 'high', high, false, false), J$.T(436025, 15, 22, false)), J$.R(436033, 'EXPONENT_MASK', EXPONENT_MASK, false, true)), biased_exponent, false, false);
                                    significand_msb = J$.W(436081, 'significand_msb', J$.B(53682, '+', J$.T(436049, 8, 22, false), J$.B(53674, '&', J$.B(53666, '>>', J$.R(436057, 'high', high, false, false), J$.T(436065, 14, 22, false)), J$.T(436073, 1, 22, false))), significand_msb, false, false);
                                }
                            } else {
                                significand_msb = J$.W(436113, 'significand_msb', J$.B(53698, '&', J$.B(53690, '>>', J$.R(436089, 'high', high, false, false), J$.T(436097, 14, 22, false)), J$.T(436105, 7, 22, false)), significand_msb, false, false);
                                biased_exponent = J$.W(436145, 'biased_exponent', J$.B(53714, '&', J$.B(53706, '>>', J$.R(436121, 'high', high, false, false), J$.T(436129, 17, 22, false)), J$.R(436137, 'EXPONENT_MASK', EXPONENT_MASK, false, true)), biased_exponent, false, false);
                            }
                            exponent = J$.W(436169, 'exponent', J$.B(53722, '-', J$.R(436153, 'biased_exponent', biased_exponent, false, false), J$.R(436161, 'EXPONENT_BIAS', EXPONENT_BIAS, false, true)), exponent, false, false);
                            J$.P(436241, J$.G(436185, J$.R(436177, 'significand128', significand128, false, false), 'parts'), J$.T(436193, 0, 22, false), J$.B(53754, '+', J$.B(53730, '&', J$.R(436201, 'high', high, false, false), J$.T(436209, 16383, 22, false)), J$.B(53746, '<<', J$.B(53738, '&', J$.R(436217, 'significand_msb', significand_msb, false, false), J$.T(436225, 15, 22, false)), J$.T(436233, 14, 22, false))));
                            J$.P(436281, J$.G(436257, J$.R(436249, 'significand128', significand128, false, false), 'parts'), J$.T(436265, 1, 22, false), J$.R(436273, 'midh', midh, false, false));
                            J$.P(436321, J$.G(436297, J$.R(436289, 'significand128', significand128, false, false), 'parts'), J$.T(436305, 2, 22, false), J$.R(436313, 'midl', midl, false, false));
                            J$.P(436361, J$.G(436337, J$.R(436329, 'significand128', significand128, false, false), 'parts'), J$.T(436345, 3, 22, false), J$.R(436353, 'low', low, false, false));
                            if (J$.C(23848, J$.C(23816, J$.C(23808, J$.C(23800, J$.B(53762, '===', J$.G(436393, J$.G(436377, J$.R(436369, 'significand128', significand128, false, false), 'parts'), J$.T(436385, 0, 22, false)), J$.T(436401, 0, 22, false))) ? J$.B(53770, '===', J$.G(436433, J$.G(436417, J$.R(436409, 'significand128', significand128, false, false), 'parts'), J$.T(436425, 1, 22, false)), J$.T(436441, 0, 22, false)) : J$._()) ? J$.B(53778, '===', J$.G(436473, J$.G(436457, J$.R(436449, 'significand128', significand128, false, false), 'parts'), J$.T(436465, 2, 22, false)), J$.T(436481, 0, 22, false)) : J$._()) ? J$.B(53786, '===', J$.G(436513, J$.G(436497, J$.R(436489, 'significand128', significand128, false, false), 'parts'), J$.T(436505, 3, 22, false)), J$.T(436521, 0, 22, false)) : J$._())) {
                                is_zero = J$.W(436537, 'is_zero', J$.T(436529, true, 23, false), is_zero, false, false);
                            } else {
                                for (k = J$.W(436553, 'k', J$.T(436545, 3, 22, false), k, false, false); J$.C(23840, J$.B(53794, '>=', J$.R(436561, 'k', k, false, false), J$.T(436569, 0, 22, false))); J$.B(53818, '+', k = J$.W(436585, 'k', J$.B(53810, '-', J$.U(53802, '+', J$.R(436577, 'k', k, false, false)), 1), k, false, false), 1)) {
                                    var least_digits = J$.W(436601, 'least_digits', J$.T(436593, 0, 22, false), least_digits, false, false);
                                    var result = J$.W(436633, 'result', J$.F(436625, J$.R(436609, 'divideu128', divideu128, false, true), false)(J$.R(436617, 'significand128', significand128, false, false)), result, false, false);
                                    significand128 = J$.W(436657, 'significand128', J$.G(436649, J$.R(436641, 'result', result, false, false), 'quotient'), significand128, false, false);
                                    least_digits = J$.W(436689, 'least_digits', J$.G(436681, J$.G(436673, J$.R(436665, 'result', result, false, false), 'rem'), 'low_'), least_digits, false, false);
                                    if (J$.C(23824, J$.U(53826, '!', J$.R(436697, 'least_digits', least_digits, false, false))))
                                        continue;
                                    for (j = J$.W(436713, 'j', J$.T(436705, 8, 22, false), j, false, false); J$.C(23832, J$.B(53834, '>=', J$.R(436721, 'j', j, false, false), J$.T(436729, 0, 22, false))); J$.B(53858, '+', j = J$.W(436745, 'j', J$.B(53850, '-', J$.U(53842, '+', J$.R(436737, 'j', j, false, false)), 1), j, false, false), 1)) {
                                        J$.P(436801, J$.R(436753, 'significand', significand, false, false), J$.B(53874, '+', J$.B(53866, '*', J$.R(436761, 'k', k, false, false), J$.T(436769, 9, 22, false)), J$.R(436777, 'j', j, false, false)), J$.B(53882, '%', J$.R(436785, 'least_digits', least_digits, false, false), J$.T(436793, 10, 22, false)));
                                        least_digits = J$.W(436841, 'least_digits', J$.M(436833, J$.I(typeof Math === 'undefined' ? Math = J$.R(436809, 'Math', undefined, true, true) : Math = J$.R(436809, 'Math', Math, true, true)), 'floor', false)(J$.B(53890, '/', J$.R(436817, 'least_digits', least_digits, false, false), J$.T(436825, 10, 22, false))), least_digits, false, false);
                                    }
                                }
                            }
                            if (J$.C(23864, J$.R(436849, 'is_zero', is_zero, false, false))) {
                                significand_digits = J$.W(436865, 'significand_digits', J$.T(436857, 1, 22, false), significand_digits, false, false);
                                J$.P(436897, J$.R(436873, 'significand', significand, false, false), J$.R(436881, 'index', index, false, false), J$.T(436889, 0, 22, false));
                            } else {
                                significand_digits = J$.W(436913, 'significand_digits', J$.T(436905, 36, 22, false), significand_digits, false, false);
                                i = J$.W(436929, 'i', J$.T(436921, 0, 22, false), i, false, false);
                                while (J$.C(23856, J$.U(53898, '!', J$.G(436953, J$.R(436937, 'significand', significand, false, false), J$.R(436945, 'index', index, false, false))))) {
                                    J$.B(53922, '-', i = J$.W(436969, 'i', J$.B(53914, '+', J$.U(53906, '+', J$.R(436961, 'i', i, false, false)), 1), i, false, false), 1);
                                    significand_digits = J$.W(436993, 'significand_digits', J$.B(53930, '-', J$.R(436977, 'significand_digits', significand_digits, false, false), J$.T(436985, 1, 22, false)), significand_digits, false, false);
                                    index = J$.W(437017, 'index', J$.B(53938, '+', J$.R(437001, 'index', index, false, false), J$.T(437009, 1, 22, false)), index, false, false);
                                }
                            }
                            scientific_exponent = J$.W(437049, 'scientific_exponent', J$.B(53954, '+', J$.B(53946, '-', J$.R(437025, 'significand_digits', significand_digits, false, false), J$.T(437033, 1, 22, false)), J$.R(437041, 'exponent', exponent, false, false)), scientific_exponent, false, false);
                            if (J$.C(23960, J$.C(23880, J$.C(23872, J$.B(53962, '>=', J$.R(437057, 'scientific_exponent', scientific_exponent, false, false), J$.T(437065, 34, 22, false))) ? J$._() : J$.B(53978, '<=', J$.R(437073, 'scientific_exponent', scientific_exponent, false, false), J$.U(53970, '-', J$.T(437081, 7, 22, false)))) ? J$._() : J$.B(53986, '>', J$.R(437089, 'exponent', exponent, false, false), J$.T(437097, 0, 22, false)))) {
                                J$.M(437145, J$.R(437105, 'string', string, false, false), 'push', false)(J$.G(437137, J$.R(437113, 'significand', significand, false, false), J$.B(54010, '-', index = J$.W(437129, 'index', J$.B(54002, '+', J$.U(53994, '+', J$.R(437121, 'index', index, false, false)), 1), index, false, false), 1)));
                                significand_digits = J$.W(437169, 'significand_digits', J$.B(54018, '-', J$.R(437153, 'significand_digits', significand_digits, false, false), J$.T(437161, 1, 22, false)), significand_digits, false, false);
                                if (J$.C(23888, J$.R(437177, 'significand_digits', significand_digits, false, false))) {
                                    J$.M(437201, J$.R(437185, 'string', string, false, false), 'push', false)(J$.T(437193, '.', 21, false));
                                }
                                for (i = J$.W(437217, 'i', J$.T(437209, 0, 22, false), i, false, false); J$.C(23896, J$.B(54026, '<', J$.R(437225, 'i', i, false, false), J$.R(437233, 'significand_digits', significand_digits, false, false))); J$.B(54050, '-', i = J$.W(437249, 'i', J$.B(54042, '+', J$.U(54034, '+', J$.R(437241, 'i', i, false, false)), 1), i, false, false), 1)) {
                                    J$.M(437297, J$.R(437257, 'string', string, false, false), 'push', false)(J$.G(437289, J$.R(437265, 'significand', significand, false, false), J$.B(54074, '-', index = J$.W(437281, 'index', J$.B(54066, '+', J$.U(54058, '+', J$.R(437273, 'index', index, false, false)), 1), index, false, false), 1)));
                                }
                                J$.M(437321, J$.R(437305, 'string', string, false, false), 'push', false)(J$.T(437313, 'E', 21, false));
                                if (J$.C(23904, J$.B(54082, '>', J$.R(437329, 'scientific_exponent', scientific_exponent, false, false), J$.T(437337, 0, 22, false)))) {
                                    J$.M(437369, J$.R(437345, 'string', string, false, false), 'push', false)(J$.B(54090, '+', J$.T(437353, '+', 21, false), J$.R(437361, 'scientific_exponent', scientific_exponent, false, false)));
                                } else {
                                    J$.M(437393, J$.R(437377, 'string', string, false, false), 'push', false)(J$.R(437385, 'scientific_exponent', scientific_exponent, false, false));
                                }
                            } else {
                                if (J$.C(23952, J$.B(54098, '>=', J$.R(437401, 'exponent', exponent, false, false), J$.T(437409, 0, 22, false)))) {
                                    for (i = J$.W(437425, 'i', J$.T(437417, 0, 22, false), i, false, false); J$.C(23912, J$.B(54106, '<', J$.R(437433, 'i', i, false, false), J$.R(437441, 'significand_digits', significand_digits, false, false))); J$.B(54130, '-', i = J$.W(437457, 'i', J$.B(54122, '+', J$.U(54114, '+', J$.R(437449, 'i', i, false, false)), 1), i, false, false), 1)) {
                                        J$.M(437505, J$.R(437465, 'string', string, false, false), 'push', false)(J$.G(437497, J$.R(437473, 'significand', significand, false, false), J$.B(54154, '-', index = J$.W(437489, 'index', J$.B(54146, '+', J$.U(54138, '+', J$.R(437481, 'index', index, false, false)), 1), index, false, false), 1)));
                                    }
                                } else {
                                    var radix_position = J$.W(437529, 'radix_position', J$.B(54162, '+', J$.R(437513, 'significand_digits', significand_digits, false, false), J$.R(437521, 'exponent', exponent, false, false)), radix_position, false, false);
                                    if (J$.C(23928, J$.B(54170, '>', J$.R(437537, 'radix_position', radix_position, false, false), J$.T(437545, 0, 22, false)))) {
                                        for (i = J$.W(437561, 'i', J$.T(437553, 0, 22, false), i, false, false); J$.C(23920, J$.B(54178, '<', J$.R(437569, 'i', i, false, false), J$.R(437577, 'radix_position', radix_position, false, false))); J$.B(54202, '-', i = J$.W(437593, 'i', J$.B(54194, '+', J$.U(54186, '+', J$.R(437585, 'i', i, false, false)), 1), i, false, false), 1)) {
                                            J$.M(437641, J$.R(437601, 'string', string, false, false), 'push', false)(J$.G(437633, J$.R(437609, 'significand', significand, false, false), J$.B(54226, '-', index = J$.W(437625, 'index', J$.B(54218, '+', J$.U(54210, '+', J$.R(437617, 'index', index, false, false)), 1), index, false, false), 1)));
                                        }
                                    } else {
                                        J$.M(437665, J$.R(437649, 'string', string, false, false), 'push', false)(J$.T(437657, '0', 21, false));
                                    }
                                    J$.M(437689, J$.R(437673, 'string', string, false, false), 'push', false)(J$.T(437681, '.', 21, false));
                                    while (J$.C(23936, J$.B(54258, '<', J$.B(54250, '-', radix_position = J$.W(437705, 'radix_position', J$.B(54242, '+', J$.U(54234, '+', J$.R(437697, 'radix_position', radix_position, false, false)), 1), radix_position, false, false), 1), J$.T(437713, 0, 22, false)))) {
                                        J$.M(437737, J$.R(437721, 'string', string, false, false), 'push', false)(J$.T(437729, '0', 21, false));
                                    }
                                    for (i = J$.W(437753, 'i', J$.T(437745, 0, 22, false), i, false, false); J$.C(23944, J$.B(54282, '<', J$.R(437761, 'i', i, false, false), J$.B(54274, '-', J$.R(437769, 'significand_digits', significand_digits, false, false), J$.M(437809, J$.I(typeof Math === 'undefined' ? Math = J$.R(437777, 'Math', undefined, true, true) : Math = J$.R(437777, 'Math', Math, true, true)), 'max', false)(J$.B(54266, '-', J$.R(437785, 'radix_position', radix_position, false, false), J$.T(437793, 1, 22, false)), J$.T(437801, 0, 22, false))))); J$.B(54306, '-', i = J$.W(437825, 'i', J$.B(54298, '+', J$.U(54290, '+', J$.R(437817, 'i', i, false, false)), 1), i, false, false), 1)) {
                                        J$.M(437873, J$.R(437833, 'string', string, false, false), 'push', false)(J$.G(437865, J$.R(437841, 'significand', significand, false, false), J$.B(54330, '-', index = J$.W(437857, 'index', J$.B(54322, '+', J$.U(54314, '+', J$.R(437849, 'index', index, false, false)), 1), index, false, false), 1)));
                                    }
                                }
                            }
                            return J$.Rt(437905, J$.M(437897, J$.R(437881, 'string', string, false, false), 'join', false)(J$.T(437889, '', 21, false)));
                        } catch (J$e) {
                            J$.Ex(438545, J$e);
                        } finally {
                            if (J$.Fr(438553))
                                continue jalangiLabel6;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(438201, J$.G(438137, J$.R(438129, 'Decimal128', Decimal128, false, true), 'prototype'), 'toJSON', J$.T(438193, function () {
                jalangiLabel7:
                    while (true) {
                        try {
                            J$.Fe(438177, arguments.callee, this, arguments);
                            arguments = J$.N(438185, 'arguments', arguments, true, false, false);
                            return J$.Rt(438169, J$.T(438161, { $numberDecimal: J$.M(438153, J$.R(438145, 'this', this, false, false), 'toString', false)() }, 11, false));
                        } catch (J$e) {
                            J$.Ex(438561, J$e);
                        } finally {
                            if (J$.Fr(438569))
                                continue jalangiLabel7;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(438225, J$.I(typeof module === 'undefined' ? module = J$.R(438209, 'module', undefined, true, true) : module = J$.R(438209, 'module', module, true, true)), 'exports', J$.R(438217, 'Decimal128', Decimal128, false, true));
            J$.P(438257, J$.G(438241, J$.I(typeof module === 'undefined' ? module = J$.R(438233, 'module', undefined, true, true) : module = J$.R(438233, 'module', module, true, true)), 'exports'), 'Decimal128', J$.R(438249, 'Decimal128', Decimal128, false, true));
        } catch (J$e) {
            J$.Ex(438577, J$e);
        } finally {
            if (J$.Sr(438585))
                continue jalangiLabel8;
            else
                break jalangiLabel8;
        }
    }
// JALANGI DO NOT INSTRUMENT

