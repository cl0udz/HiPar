J$.noInstrEval = false;
jalangiLabel6:
    while (true) {
        try {
            J$.Se(1408897, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestMongoDb/node_modules/safe-buffer/index.js');
            function copyProps(src, dst) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(1407929, arguments.callee, this, arguments);
                            arguments = J$.N(1407937, 'arguments', arguments, true, false, false);
                            src = J$.N(1407945, 'src', src, true, false, false);
                            dst = J$.N(1407953, 'dst', dst, true, false, false);
                            J$.N(1407961, 'key', key, false, false, false);
                            for (var key in J$.H(1407913, J$.R(1407857, 'src', src, false, false))) {
                                J$.N(1407921, 'key', key, false, true, false);
                                {
                                    {
                                        J$.P(1407905, J$.R(1407865, 'dst', dst, false, false), J$.R(1407873, 'key', key, false, false), J$.G(1407897, J$.R(1407881, 'src', src, false, false), J$.R(1407889, 'key', key, false, false)));
                                    }
                                }
                            }
                        } catch (J$e) {
                            J$.Ex(1408953, J$e);
                        } finally {
                            if (J$.Fr(1408961))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function SafeBuffer(arg, encodingOrOffset, length) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(1408161, arguments.callee, this, arguments);
                            arguments = J$.N(1408169, 'arguments', arguments, true, false, false);
                            arg = J$.N(1408177, 'arg', arg, true, false, false);
                            encodingOrOffset = J$.N(1408185, 'encodingOrOffset', encodingOrOffset, true, false, false);
                            length = J$.N(1408193, 'length', length, true, false, false);
                            return J$.Rt(1408153, J$.F(1408145, J$.R(1408113, 'Buffer', Buffer, false, true), false)(J$.R(1408121, 'arg', arg, false, false), J$.R(1408129, 'encodingOrOffset', encodingOrOffset, false, false), J$.R(1408137, 'length', length, false, false)));
                        } catch (J$e) {
                            J$.Ex(1408969, J$e);
                        } finally {
                            if (J$.Fr(1408977))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(1408905, 'buffer', buffer, false, false, false);
            J$.N(1408913, 'Buffer', Buffer, false, false, false);
            copyProps = J$.N(1408929, 'copyProps', J$.T(1408921, copyProps, 12, false), true, false, false);
            SafeBuffer = J$.N(1408945, 'SafeBuffer', J$.T(1408937, SafeBuffer, 12, false), true, false, false);
            J$.T(1407793, 'use strict', 21, false);
            var buffer = J$.W(1407825, 'buffer', J$.F(1407817, J$.I(typeof require === 'undefined' ? require = J$.R(1407801, 'require', undefined, true, true) : require = J$.R(1407801, 'require', require, true, true)), false)(J$.T(1407809, 'buffer', 21, false)), buffer, false, true);
            var Buffer = J$.W(1407849, 'Buffer', J$.G(1407841, J$.R(1407833, 'buffer', buffer, false, true), 'Buffer'), Buffer, false, true);
            if (J$.C(89136, J$.C(89128, J$.C(89120, J$.C(89112, J$.G(1407977, J$.R(1407969, 'Buffer', Buffer, false, true), 'from')) ? J$.G(1407993, J$.R(1407985, 'Buffer', Buffer, false, true), 'alloc') : J$._()) ? J$.G(1408009, J$.R(1408001, 'Buffer', Buffer, false, true), 'allocUnsafe') : J$._()) ? J$.G(1408025, J$.R(1408017, 'Buffer', Buffer, false, true), 'allocUnsafeSlow') : J$._())) {
                J$.P(1408049, J$.I(typeof module === 'undefined' ? module = J$.R(1408033, 'module', undefined, true, true) : module = J$.R(1408033, 'module', module, true, true)), 'exports', J$.R(1408041, 'buffer', buffer, false, true));
            } else {
                J$.F(1408081, J$.R(1408057, 'copyProps', copyProps, false, true), false)(J$.R(1408065, 'buffer', buffer, false, true), J$.I(typeof exports === 'undefined' ? exports = J$.R(1408073, 'exports', undefined, true, true) : exports = J$.R(1408073, 'exports', exports, true, true)));
                J$.P(1408105, J$.I(typeof exports === 'undefined' ? exports = J$.R(1408089, 'exports', undefined, true, true) : exports = J$.R(1408089, 'exports', exports, true, true)), 'Buffer', J$.R(1408097, 'SafeBuffer', SafeBuffer, false, true));
            }
            J$.F(1408225, J$.R(1408201, 'copyProps', copyProps, false, true), false)(J$.R(1408209, 'Buffer', Buffer, false, true), J$.R(1408217, 'SafeBuffer', SafeBuffer, false, true));
            J$.P(1408377, J$.R(1408233, 'SafeBuffer', SafeBuffer, false, true), 'from', J$.T(1408369, function (arg, encodingOrOffset, length) {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(1408329, arguments.callee, this, arguments);
                            arguments = J$.N(1408337, 'arguments', arguments, true, false, false);
                            arg = J$.N(1408345, 'arg', arg, true, false, false);
                            encodingOrOffset = J$.N(1408353, 'encodingOrOffset', encodingOrOffset, true, false, false);
                            length = J$.N(1408361, 'length', length, true, false, false);
                            if (J$.C(89144, J$.B(131690, '===', J$.U(131682, 'typeof', J$.R(1408241, 'arg', arg, false, false)), J$.T(1408249, 'number', 21, false)))) {
                                throw J$.F(1408273, J$.I(typeof TypeError === 'undefined' ? TypeError = J$.R(1408257, 'TypeError', undefined, true, true) : TypeError = J$.R(1408257, 'TypeError', TypeError, true, true)), true)(J$.T(1408265, 'Argument must not be a number', 21, false));
                            }
                            return J$.Rt(1408321, J$.F(1408313, J$.R(1408281, 'Buffer', Buffer, false, true), false)(J$.R(1408289, 'arg', arg, false, false), J$.R(1408297, 'encodingOrOffset', encodingOrOffset, false, false), J$.R(1408305, 'length', length, false, false)));
                        } catch (J$e) {
                            J$.Ex(1408985, J$e);
                        } finally {
                            if (J$.Fr(1408993))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(1408649, J$.R(1408385, 'SafeBuffer', SafeBuffer, false, true), 'alloc', J$.T(1408641, function (size, fill, encoding) {
                jalangiLabel3:
                    while (true) {
                        try {
                            J$.Fe(1408593, arguments.callee, this, arguments);
                            arguments = J$.N(1408601, 'arguments', arguments, true, false, false);
                            size = J$.N(1408609, 'size', size, true, false, false);
                            fill = J$.N(1408617, 'fill', fill, true, false, false);
                            encoding = J$.N(1408625, 'encoding', encoding, true, false, false);
                            J$.N(1408633, 'buf', buf, false, false, false);
                            if (J$.C(89152, J$.B(131706, '!==', J$.U(131698, 'typeof', J$.R(1408393, 'size', size, false, false)), J$.T(1408401, 'number', 21, false)))) {
                                throw J$.F(1408425, J$.I(typeof TypeError === 'undefined' ? TypeError = J$.R(1408409, 'TypeError', undefined, true, true) : TypeError = J$.R(1408409, 'TypeError', TypeError, true, true)), true)(J$.T(1408417, 'Argument must be a number', 21, false));
                            }
                            var buf = J$.W(1408457, 'buf', J$.F(1408449, J$.R(1408433, 'Buffer', Buffer, false, true), false)(J$.R(1408441, 'size', size, false, false)), buf, false, false);
                            if (J$.C(89168, J$.B(131714, '!==', J$.R(1408465, 'fill', fill, false, false), J$.T(1408473, undefined, 24, false)))) {
                                if (J$.C(89160, J$.B(131730, '===', J$.U(131722, 'typeof', J$.R(1408481, 'encoding', encoding, false, false)), J$.T(1408489, 'string', 21, false)))) {
                                    J$.M(1408521, J$.R(1408497, 'buf', buf, false, false), 'fill', false)(J$.R(1408505, 'fill', fill, false, false), J$.R(1408513, 'encoding', encoding, false, false));
                                } else {
                                    J$.M(1408545, J$.R(1408529, 'buf', buf, false, false), 'fill', false)(J$.R(1408537, 'fill', fill, false, false));
                                }
                            } else {
                                J$.M(1408569, J$.R(1408553, 'buf', buf, false, false), 'fill', false)(J$.T(1408561, 0, 22, false));
                            }
                            return J$.Rt(1408585, J$.R(1408577, 'buf', buf, false, false));
                        } catch (J$e) {
                            J$.Ex(1409001, J$e);
                        } finally {
                            if (J$.Fr(1409009))
                                continue jalangiLabel3;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(1408769, J$.R(1408657, 'SafeBuffer', SafeBuffer, false, true), 'allocUnsafe', J$.T(1408761, function (size) {
                jalangiLabel4:
                    while (true) {
                        try {
                            J$.Fe(1408737, arguments.callee, this, arguments);
                            arguments = J$.N(1408745, 'arguments', arguments, true, false, false);
                            size = J$.N(1408753, 'size', size, true, false, false);
                            if (J$.C(89176, J$.B(131746, '!==', J$.U(131738, 'typeof', J$.R(1408665, 'size', size, false, false)), J$.T(1408673, 'number', 21, false)))) {
                                throw J$.F(1408697, J$.I(typeof TypeError === 'undefined' ? TypeError = J$.R(1408681, 'TypeError', undefined, true, true) : TypeError = J$.R(1408681, 'TypeError', TypeError, true, true)), true)(J$.T(1408689, 'Argument must be a number', 21, false));
                            }
                            return J$.Rt(1408729, J$.F(1408721, J$.R(1408705, 'Buffer', Buffer, false, true), false)(J$.R(1408713, 'size', size, false, false)));
                        } catch (J$e) {
                            J$.Ex(1409017, J$e);
                        } finally {
                            if (J$.Fr(1409025))
                                continue jalangiLabel4;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(1408889, J$.R(1408777, 'SafeBuffer', SafeBuffer, false, true), 'allocUnsafeSlow', J$.T(1408881, function (size) {
                jalangiLabel5:
                    while (true) {
                        try {
                            J$.Fe(1408857, arguments.callee, this, arguments);
                            arguments = J$.N(1408865, 'arguments', arguments, true, false, false);
                            size = J$.N(1408873, 'size', size, true, false, false);
                            if (J$.C(89184, J$.B(131762, '!==', J$.U(131754, 'typeof', J$.R(1408785, 'size', size, false, false)), J$.T(1408793, 'number', 21, false)))) {
                                throw J$.F(1408817, J$.I(typeof TypeError === 'undefined' ? TypeError = J$.R(1408801, 'TypeError', undefined, true, true) : TypeError = J$.R(1408801, 'TypeError', TypeError, true, true)), true)(J$.T(1408809, 'Argument must be a number', 21, false));
                            }
                            return J$.Rt(1408849, J$.M(1408841, J$.R(1408825, 'buffer', buffer, false, true), 'SlowBuffer', false)(J$.R(1408833, 'size', size, false, false)));
                        } catch (J$e) {
                            J$.Ex(1409033, J$e);
                        } finally {
                            if (J$.Fr(1409041))
                                continue jalangiLabel5;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
        } catch (J$e) {
            J$.Ex(1409049, J$e);
        } finally {
            if (J$.Sr(1409057))
                continue jalangiLabel6;
            else
                break jalangiLabel6;
        }
    }
// JALANGI DO NOT INSTRUMENT

