J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(533745, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestMongoDb/node_modules/mongodb/index.js');
            J$.N(533753, 'core', core, false, false, false);
            J$.N(533761, 'Instrumentation', Instrumentation, false, false, false);
            J$.N(533769, 'connect', connect, false, false, false);
            J$.T(532049, 'use strict', 21, false);
            var core = J$.W(532081, 'core', J$.F(532073, J$.I(typeof require === 'undefined' ? require = J$.R(532057, 'require', undefined, true, true) : require = J$.R(532057, 'require', require, true, true)), false)(J$.T(532065, './lib/core', 21, false)), core, false, true);
            var Instrumentation = J$.W(532113, 'Instrumentation', J$.F(532105, J$.I(typeof require === 'undefined' ? require = J$.R(532089, 'require', undefined, true, true) : require = J$.R(532089, 'require', require, true, true)), false)(J$.T(532097, './lib/apm', 21, false)), Instrumentation, false, true);
            var connect = J$.W(532153, 'connect', J$.G(532145, J$.F(532137, J$.I(typeof require === 'undefined' ? require = J$.R(532121, 'require', undefined, true, true) : require = J$.R(532121, 'require', require, true, true)), false)(J$.T(532129, './lib/mongo_client', 21, false)), 'connect'), connect, false, true);
            J$.P(532185, J$.R(532161, 'connect', connect, false, true), 'MongoError', J$.G(532177, J$.R(532169, 'core', core, false, true), 'MongoError'));
            J$.P(532217, J$.R(532193, 'connect', connect, false, true), 'MongoNetworkError', J$.G(532209, J$.R(532201, 'core', core, false, true), 'MongoNetworkError'));
            J$.P(532249, J$.R(532225, 'connect', connect, false, true), 'MongoTimeoutError', J$.G(532241, J$.R(532233, 'core', core, false, true), 'MongoTimeoutError'));
            J$.P(532289, J$.R(532257, 'connect', connect, false, true), 'Admin', J$.F(532281, J$.I(typeof require === 'undefined' ? require = J$.R(532265, 'require', undefined, true, true) : require = J$.R(532265, 'require', require, true, true)), false)(J$.T(532273, './lib/admin', 21, false)));
            J$.P(532329, J$.R(532297, 'connect', connect, false, true), 'MongoClient', J$.F(532321, J$.I(typeof require === 'undefined' ? require = J$.R(532305, 'require', undefined, true, true) : require = J$.R(532305, 'require', require, true, true)), false)(J$.T(532313, './lib/mongo_client', 21, false)));
            J$.P(532369, J$.R(532337, 'connect', connect, false, true), 'Db', J$.F(532361, J$.I(typeof require === 'undefined' ? require = J$.R(532345, 'require', undefined, true, true) : require = J$.R(532345, 'require', require, true, true)), false)(J$.T(532353, './lib/db', 21, false)));
            J$.P(532409, J$.R(532377, 'connect', connect, false, true), 'Collection', J$.F(532401, J$.I(typeof require === 'undefined' ? require = J$.R(532385, 'require', undefined, true, true) : require = J$.R(532385, 'require', require, true, true)), false)(J$.T(532393, './lib/collection', 21, false)));
            J$.P(532449, J$.R(532417, 'connect', connect, false, true), 'Server', J$.F(532441, J$.I(typeof require === 'undefined' ? require = J$.R(532425, 'require', undefined, true, true) : require = J$.R(532425, 'require', require, true, true)), false)(J$.T(532433, './lib/topologies/server', 21, false)));
            J$.P(532489, J$.R(532457, 'connect', connect, false, true), 'ReplSet', J$.F(532481, J$.I(typeof require === 'undefined' ? require = J$.R(532465, 'require', undefined, true, true) : require = J$.R(532465, 'require', require, true, true)), false)(J$.T(532473, './lib/topologies/replset', 21, false)));
            J$.P(532529, J$.R(532497, 'connect', connect, false, true), 'Mongos', J$.F(532521, J$.I(typeof require === 'undefined' ? require = J$.R(532505, 'require', undefined, true, true) : require = J$.R(532505, 'require', require, true, true)), false)(J$.T(532513, './lib/topologies/mongos', 21, false)));
            J$.P(532561, J$.R(532537, 'connect', connect, false, true), 'ReadPreference', J$.G(532553, J$.R(532545, 'core', core, false, true), 'ReadPreference'));
            J$.P(532601, J$.R(532569, 'connect', connect, false, true), 'GridStore', J$.F(532593, J$.I(typeof require === 'undefined' ? require = J$.R(532577, 'require', undefined, true, true) : require = J$.R(532577, 'require', require, true, true)), false)(J$.T(532585, './lib/gridfs/grid_store', 21, false)));
            J$.P(532641, J$.R(532609, 'connect', connect, false, true), 'Chunk', J$.F(532633, J$.I(typeof require === 'undefined' ? require = J$.R(532617, 'require', undefined, true, true) : require = J$.R(532617, 'require', require, true, true)), false)(J$.T(532625, './lib/gridfs/chunk', 21, false)));
            J$.P(532673, J$.R(532649, 'connect', connect, false, true), 'Logger', J$.G(532665, J$.R(532657, 'core', core, false, true), 'Logger'));
            J$.P(532713, J$.R(532681, 'connect', connect, false, true), 'AggregationCursor', J$.F(532705, J$.I(typeof require === 'undefined' ? require = J$.R(532689, 'require', undefined, true, true) : require = J$.R(532689, 'require', require, true, true)), false)(J$.T(532697, './lib/aggregation_cursor', 21, false)));
            J$.P(532753, J$.R(532721, 'connect', connect, false, true), 'CommandCursor', J$.F(532745, J$.I(typeof require === 'undefined' ? require = J$.R(532729, 'require', undefined, true, true) : require = J$.R(532729, 'require', require, true, true)), false)(J$.T(532737, './lib/command_cursor', 21, false)));
            J$.P(532793, J$.R(532761, 'connect', connect, false, true), 'Cursor', J$.F(532785, J$.I(typeof require === 'undefined' ? require = J$.R(532769, 'require', undefined, true, true) : require = J$.R(532769, 'require', require, true, true)), false)(J$.T(532777, './lib/cursor', 21, false)));
            J$.P(532833, J$.R(532801, 'connect', connect, false, true), 'GridFSBucket', J$.F(532825, J$.I(typeof require === 'undefined' ? require = J$.R(532809, 'require', undefined, true, true) : require = J$.R(532809, 'require', require, true, true)), false)(J$.T(532817, './lib/gridfs-stream', 21, false)));
            J$.P(532865, J$.R(532841, 'connect', connect, false, true), 'CoreServer', J$.G(532857, J$.R(532849, 'core', core, false, true), 'Server'));
            J$.P(532897, J$.R(532873, 'connect', connect, false, true), 'CoreConnection', J$.G(532889, J$.R(532881, 'core', core, false, true), 'Connection'));
            J$.P(532937, J$.R(532905, 'connect', connect, false, true), 'Binary', J$.G(532929, J$.G(532921, J$.R(532913, 'core', core, false, true), 'BSON'), 'Binary'));
            J$.P(532977, J$.R(532945, 'connect', connect, false, true), 'Code', J$.G(532969, J$.G(532961, J$.R(532953, 'core', core, false, true), 'BSON'), 'Code'));
            J$.P(533017, J$.R(532985, 'connect', connect, false, true), 'Map', J$.G(533009, J$.G(533001, J$.R(532993, 'core', core, false, true), 'BSON'), 'Map'));
            J$.P(533057, J$.R(533025, 'connect', connect, false, true), 'DBRef', J$.G(533049, J$.G(533041, J$.R(533033, 'core', core, false, true), 'BSON'), 'DBRef'));
            J$.P(533097, J$.R(533065, 'connect', connect, false, true), 'Double', J$.G(533089, J$.G(533081, J$.R(533073, 'core', core, false, true), 'BSON'), 'Double'));
            J$.P(533137, J$.R(533105, 'connect', connect, false, true), 'Int32', J$.G(533129, J$.G(533121, J$.R(533113, 'core', core, false, true), 'BSON'), 'Int32'));
            J$.P(533177, J$.R(533145, 'connect', connect, false, true), 'Long', J$.G(533169, J$.G(533161, J$.R(533153, 'core', core, false, true), 'BSON'), 'Long'));
            J$.P(533217, J$.R(533185, 'connect', connect, false, true), 'MinKey', J$.G(533209, J$.G(533201, J$.R(533193, 'core', core, false, true), 'BSON'), 'MinKey'));
            J$.P(533257, J$.R(533225, 'connect', connect, false, true), 'MaxKey', J$.G(533249, J$.G(533241, J$.R(533233, 'core', core, false, true), 'BSON'), 'MaxKey'));
            J$.P(533297, J$.R(533265, 'connect', connect, false, true), 'ObjectID', J$.G(533289, J$.G(533281, J$.R(533273, 'core', core, false, true), 'BSON'), 'ObjectID'));
            J$.P(533337, J$.R(533305, 'connect', connect, false, true), 'ObjectId', J$.G(533329, J$.G(533321, J$.R(533313, 'core', core, false, true), 'BSON'), 'ObjectID'));
            J$.P(533377, J$.R(533345, 'connect', connect, false, true), 'Symbol', J$.G(533369, J$.G(533361, J$.R(533353, 'core', core, false, true), 'BSON'), 'Symbol'));
            J$.P(533417, J$.R(533385, 'connect', connect, false, true), 'Timestamp', J$.G(533409, J$.G(533401, J$.R(533393, 'core', core, false, true), 'BSON'), 'Timestamp'));
            J$.P(533457, J$.R(533425, 'connect', connect, false, true), 'BSONRegExp', J$.G(533449, J$.G(533441, J$.R(533433, 'core', core, false, true), 'BSON'), 'BSONRegExp'));
            J$.P(533497, J$.R(533465, 'connect', connect, false, true), 'Decimal128', J$.G(533489, J$.G(533481, J$.R(533473, 'core', core, false, true), 'BSON'), 'Decimal128'));
            J$.P(533521, J$.R(533505, 'connect', connect, false, true), 'connect', J$.R(533513, 'connect', connect, false, true));
            J$.P(533713, J$.R(533529, 'connect', connect, false, true), 'instrument', J$.T(533705, function (options, callback) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(533665, arguments.callee, this, arguments);
                            arguments = J$.N(533673, 'arguments', arguments, true, false, false);
                            options = J$.N(533681, 'options', options, true, false, false);
                            callback = J$.N(533689, 'callback', callback, true, false, false);
                            J$.N(533697, 'instrumentation', instrumentation, false, false, false);
                            if (J$.C(29912, J$.B(73426, '===', J$.U(73418, 'typeof', J$.R(533537, 'options', options, false, false)), J$.T(533545, 'function', 21, false)))) {
                                callback = J$.W(533561, 'callback', J$.R(533553, 'options', options, false, false), callback, false, false);
                                options = J$.W(533577, 'options', J$.T(533569, {}, 11, false), options, false, false);
                            }
                            var instrumentation = J$.W(533601, 'instrumentation', J$.F(533593, J$.R(533585, 'Instrumentation', Instrumentation, false, true), true)(), instrumentation, false, false);
                            J$.M(533641, J$.R(533609, 'instrumentation', instrumentation, false, false), 'instrument', false)(J$.G(533625, J$.R(533617, 'connect', connect, false, true), 'MongoClient'), J$.R(533633, 'callback', callback, false, false));
                            return J$.Rt(533657, J$.R(533649, 'instrumentation', instrumentation, false, false));
                        } catch (J$e) {
                            J$.Ex(533777, J$e);
                        } finally {
                            if (J$.Fr(533785))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(533737, J$.I(typeof module === 'undefined' ? module = J$.R(533721, 'module', undefined, true, true) : module = J$.R(533721, 'module', module, true, true)), 'exports', J$.R(533729, 'connect', connect, false, true));
        } catch (J$e) {
            J$.Ex(533793, J$e);
        } finally {
            if (J$.Sr(533801))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

