J$.noInstrEval = false;
jalangiLabel2:
    while (true) {
        try {
            J$.Se(994505, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestMongoDb/node_modules/mongodb/lib/error.js');
            function isGetMoreError(error) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(994281, arguments.callee, this, arguments);
                            arguments = J$.N(994289, 'arguments', arguments, true, false, false);
                            error = J$.N(994297, 'error', error, true, false, false);
                            if (J$.C(60240, J$.G(994233, J$.R(994217, 'error', error, false, false), J$.R(994225, 'mongoErrorContextSymbol', mongoErrorContextSymbol, false, true)))) {
                                return J$.Rt(994273, J$.G(994265, J$.G(994257, J$.R(994241, 'error', error, false, false), J$.R(994249, 'mongoErrorContextSymbol', mongoErrorContextSymbol, false, true)), 'isGetMore'));
                            }
                        } catch (J$e) {
                            J$.Ex(994569, J$e);
                        } finally {
                            if (J$.Fr(994577))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function isResumableError(error) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(994441, arguments.callee, this, arguments);
                            arguments = J$.N(994449, 'arguments', arguments, true, false, false);
                            error = J$.N(994457, 'error', error, true, false, false);
                            if (J$.C(60248, J$.U(103394, '!', J$.F(994321, J$.R(994305, 'isGetMoreError', isGetMoreError, false, true), false)(J$.R(994313, 'error', error, false, false))))) {
                                return J$.Rt(994337, J$.T(994329, false, 23, false));
                            }
                            if (J$.C(60256, J$.B(103402, 'instanceof', J$.R(994345, 'error', error, false, false), J$.R(994353, 'MongoNetworkError', MongoNetworkError, false, true)))) {
                                return J$.Rt(994369, J$.T(994361, true, 23, false));
                            }
                            return J$.Rt(994433, J$.U(103410, '!', J$.C(60264, J$.M(994401, J$.R(994377, 'GET_MORE_NON_RESUMABLE_CODES', GET_MORE_NON_RESUMABLE_CODES, false, true), 'has', false)(J$.G(994393, J$.R(994385, 'error', error, false, false), 'code'))) ? J$._() : J$.M(994425, J$.R(994409, 'error', error, false, false), 'hasErrorLabel', false)(J$.T(994417, 'NonRetryableChangeStreamError', 21, false))));
                        } catch (J$e) {
                            J$.Ex(994585, J$e);
                        } finally {
                            if (J$.Fr(994593))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(994513, 'MongoNetworkError', MongoNetworkError, false, false, false);
            J$.N(994521, 'mongoErrorContextSymbol', mongoErrorContextSymbol, false, false, false);
            J$.N(994529, 'GET_MORE_NON_RESUMABLE_CODES', GET_MORE_NON_RESUMABLE_CODES, false, false, false);
            isGetMoreError = J$.N(994545, 'isGetMoreError', J$.T(994537, isGetMoreError, 12, false), true, false, false);
            isResumableError = J$.N(994561, 'isResumableError', J$.T(994553, isResumableError, 12, false), true, false, false);
            J$.T(994073, 'use strict', 21, false);
            var MongoNetworkError = J$.W(994113, 'MongoNetworkError', J$.G(994105, J$.F(994097, J$.I(typeof require === 'undefined' ? require = J$.R(994081, 'require', undefined, true, true) : require = J$.R(994081, 'require', require, true, true)), false)(J$.T(994089, './core', 21, false)), 'MongoNetworkError'), MongoNetworkError, false, true);
            var mongoErrorContextSymbol = J$.W(994153, 'mongoErrorContextSymbol', J$.G(994145, J$.F(994137, J$.I(typeof require === 'undefined' ? require = J$.R(994121, 'require', undefined, true, true) : require = J$.R(994121, 'require', require, true, true)), false)(J$.T(994129, './core', 21, false)), 'mongoErrorContextSymbol'), mongoErrorContextSymbol, false, true);
            var GET_MORE_NON_RESUMABLE_CODES = J$.W(994209, 'GET_MORE_NON_RESUMABLE_CODES', J$.F(994201, J$.I(typeof Set === 'undefined' ? Set = J$.R(994161, 'Set', undefined, true, true) : Set = J$.R(994161, 'Set', Set, true, true)), true)(J$.T(994193, [
                J$.T(994169, 136, 22, false),
                J$.T(994177, 237, 22, false),
                J$.T(994185, 11601, 22, false)
            ], 10, false)), GET_MORE_NON_RESUMABLE_CODES, false, true);
            J$.P(994497, J$.I(typeof module === 'undefined' ? module = J$.R(994465, 'module', undefined, true, true) : module = J$.R(994465, 'module', module, true, true)), 'exports', J$.T(994489, {
                GET_MORE_NON_RESUMABLE_CODES: J$.R(994473, 'GET_MORE_NON_RESUMABLE_CODES', GET_MORE_NON_RESUMABLE_CODES, false, true),
                isResumableError: J$.R(994481, 'isResumableError', isResumableError, false, true)
            }, 11, false));
        } catch (J$e) {
            J$.Ex(994601, J$e);
        } finally {
            if (J$.Sr(994609))
                continue jalangiLabel2;
            else
                break jalangiLabel2;
        }
    }
// JALANGI DO NOT INSTRUMENT

