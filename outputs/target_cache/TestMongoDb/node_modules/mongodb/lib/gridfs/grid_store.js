J$.noInstrEval = false;
jalangiLabel133:
    while (true) {
        try {
            J$.Se(1032057, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestMongoDb/node_modules/mongodb/lib/gridfs/grid_store.js');
            function _typeof2(obj) {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(998865, arguments.callee, this, arguments);
                            arguments = J$.N(998873, 'arguments', arguments, true, false, false);
                            obj = J$.N(998881, 'obj', obj, true, false, false);
                            if (J$.C(60488, J$.C(60448, J$.B(103658, '===', J$.U(103650, 'typeof', J$.I(typeof Symbol === 'undefined' ? Symbol = J$.R(998601, 'Symbol', undefined, true, true) : Symbol = J$.R(998601, 'Symbol', Symbol, true, true))), J$.T(998609, 'function', 21, false))) ? J$.B(103674, '===', J$.U(103666, 'typeof', J$.G(998625, J$.I(typeof Symbol === 'undefined' ? Symbol = J$.R(998617, 'Symbol', undefined, true, true) : Symbol = J$.R(998617, 'Symbol', Symbol, true, true)), 'iterator')), J$.T(998633, 'symbol', 21, false)) : J$._())) {
                                _typeof2 = J$.W(998689, '_typeof2', J$.T(998681, function _typeof2(obj) {
                                    jalangiLabel0:
                                        while (true) {
                                            try {
                                                J$.Fe(998657, arguments.callee, this, arguments);
                                                arguments = J$.N(998665, 'arguments', arguments, true, false, false);
                                                obj = J$.N(998673, 'obj', obj, true, false, false);
                                                return J$.Rt(998649, J$.U(103682, 'typeof', J$.R(998641, 'obj', obj, false, false)));
                                            } catch (J$e) {
                                                J$.Ex(1032425, J$e);
                                            } finally {
                                                if (J$.Fr(1032433))
                                                    continue jalangiLabel0;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false), _typeof2, false, true);
                            } else {
                                _typeof2 = J$.W(998825, '_typeof2', J$.T(998817, function _typeof2(obj) {
                                    jalangiLabel1:
                                        while (true) {
                                            try {
                                                J$.Fe(998793, arguments.callee, this, arguments);
                                                arguments = J$.N(998801, 'arguments', arguments, true, false, false);
                                                obj = J$.N(998809, 'obj', obj, true, false, false);
                                                return J$.Rt(998785, J$.C(60480, J$.C(60472, J$.C(60464, J$.C(60456, J$.R(998697, 'obj', obj, false, false)) ? J$.B(103698, '===', J$.U(103690, 'typeof', J$.I(typeof Symbol === 'undefined' ? Symbol = J$.R(998705, 'Symbol', undefined, true, true) : Symbol = J$.R(998705, 'Symbol', Symbol, true, true))), J$.T(998713, 'function', 21, false)) : J$._()) ? J$.B(103706, '===', J$.G(998729, J$.R(998721, 'obj', obj, false, false), 'constructor'), J$.I(typeof Symbol === 'undefined' ? Symbol = J$.R(998737, 'Symbol', undefined, true, true) : Symbol = J$.R(998737, 'Symbol', Symbol, true, true))) : J$._()) ? J$.B(103714, '!==', J$.R(998745, 'obj', obj, false, false), J$.G(998761, J$.I(typeof Symbol === 'undefined' ? Symbol = J$.R(998753, 'Symbol', undefined, true, true) : Symbol = J$.R(998753, 'Symbol', Symbol, true, true)), 'prototype')) : J$._()) ? J$.T(998769, 'symbol', 21, false) : J$.U(103722, 'typeof', J$.R(998777, 'obj', obj, false, false)));
                                            } catch (J$e) {
                                                J$.Ex(1032441, J$e);
                                            } finally {
                                                if (J$.Fr(1032449))
                                                    continue jalangiLabel1;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false), _typeof2, false, true);
                            }
                            return J$.Rt(998857, J$.F(998849, J$.R(998833, '_typeof2', _typeof2, false, true), false)(J$.R(998841, 'obj', obj, false, false)));
                        } catch (J$e) {
                            J$.Ex(1032457, J$e);
                        } finally {
                            if (J$.Fr(1032465))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function _typeof(obj) {
                jalangiLabel5:
                    while (true) {
                        try {
                            J$.Fe(999201, arguments.callee, this, arguments);
                            arguments = J$.N(999209, 'arguments', arguments, true, false, false);
                            obj = J$.N(999217, 'obj', obj, true, false, false);
                            if (J$.C(60536, J$.C(60496, J$.B(103738, '===', J$.U(103730, 'typeof', J$.I(typeof Symbol === 'undefined' ? Symbol = J$.R(998889, 'Symbol', undefined, true, true) : Symbol = J$.R(998889, 'Symbol', Symbol, true, true))), J$.T(998897, 'function', 21, false))) ? J$.B(103746, '===', J$.F(998929, J$.R(998905, '_typeof2', _typeof2, false, true), false)(J$.G(998921, J$.I(typeof Symbol === 'undefined' ? Symbol = J$.R(998913, 'Symbol', undefined, true, true) : Symbol = J$.R(998913, 'Symbol', Symbol, true, true)), 'iterator')), J$.T(998937, 'symbol', 21, false)) : J$._())) {
                                _typeof = J$.W(999009, '_typeof', J$.T(999001, function _typeof(obj) {
                                    jalangiLabel3:
                                        while (true) {
                                            try {
                                                J$.Fe(998977, arguments.callee, this, arguments);
                                                arguments = J$.N(998985, 'arguments', arguments, true, false, false);
                                                obj = J$.N(998993, 'obj', obj, true, false, false);
                                                return J$.Rt(998969, J$.F(998961, J$.R(998945, '_typeof2', _typeof2, false, true), false)(J$.R(998953, 'obj', obj, false, false)));
                                            } catch (J$e) {
                                                J$.Ex(1032473, J$e);
                                            } finally {
                                                if (J$.Fr(1032481))
                                                    continue jalangiLabel3;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false), _typeof, false, true);
                            } else {
                                _typeof = J$.W(999161, '_typeof', J$.T(999153, function _typeof(obj) {
                                    jalangiLabel4:
                                        while (true) {
                                            try {
                                                J$.Fe(999129, arguments.callee, this, arguments);
                                                arguments = J$.N(999137, 'arguments', arguments, true, false, false);
                                                obj = J$.N(999145, 'obj', obj, true, false, false);
                                                return J$.Rt(999121, J$.C(60528, J$.C(60520, J$.C(60512, J$.C(60504, J$.R(999017, 'obj', obj, false, false)) ? J$.B(103762, '===', J$.U(103754, 'typeof', J$.I(typeof Symbol === 'undefined' ? Symbol = J$.R(999025, 'Symbol', undefined, true, true) : Symbol = J$.R(999025, 'Symbol', Symbol, true, true))), J$.T(999033, 'function', 21, false)) : J$._()) ? J$.B(103770, '===', J$.G(999049, J$.R(999041, 'obj', obj, false, false), 'constructor'), J$.I(typeof Symbol === 'undefined' ? Symbol = J$.R(999057, 'Symbol', undefined, true, true) : Symbol = J$.R(999057, 'Symbol', Symbol, true, true))) : J$._()) ? J$.B(103778, '!==', J$.R(999065, 'obj', obj, false, false), J$.G(999081, J$.I(typeof Symbol === 'undefined' ? Symbol = J$.R(999073, 'Symbol', undefined, true, true) : Symbol = J$.R(999073, 'Symbol', Symbol, true, true)), 'prototype')) : J$._()) ? J$.T(999089, 'symbol', 21, false) : J$.F(999113, J$.R(999097, '_typeof2', _typeof2, false, true), false)(J$.R(999105, 'obj', obj, false, false)));
                                            } catch (J$e) {
                                                J$.Ex(1032489, J$e);
                                            } finally {
                                                if (J$.Fr(1032497))
                                                    continue jalangiLabel4;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false), _typeof, false, true);
                            }
                            return J$.Rt(999193, J$.F(999185, J$.R(999169, '_typeof', _typeof, false, true), false)(J$.R(999177, 'obj', obj, false, false)));
                        } catch (J$e) {
                            J$.Ex(1032505, J$e);
                        } finally {
                            if (J$.Fr(1032513))
                                continue jalangiLabel5;
                            else
                                return J$.Ra();
                        }
                    }
            }
            _typeof2 = J$.N(1032073, '_typeof2', J$.T(1032065, _typeof2, 12, false), true, false, false);
            _typeof = J$.N(1032089, '_typeof', J$.T(1032081, _typeof, 12, false), true, false, false);
            J$.N(1032097, 'Chunk', Chunk, false, false, false);
            J$.N(1032105, 'ObjectID', ObjectID, false, false, false);
            J$.N(1032113, 'ReadPreference', ReadPreference, false, false, false);
            J$.N(1032121, 'Buffer', Buffer, false, false, false);
            J$.N(1032129, 'fs', fs, false, false, false);
            J$.N(1032137, 'f', f, false, false, false);
            J$.N(1032145, 'util', util, false, false, false);
            J$.N(1032153, 'MongoError', MongoError, false, false, false);
            J$.N(1032161, 'inherits', inherits, false, false, false);
            J$.N(1032169, 'Duplex', Duplex, false, false, false);
            J$.N(1032177, 'shallowClone', shallowClone, false, false, false);
            J$.N(1032185, 'executeLegacyOperation', executeLegacyOperation, false, false, false);
            J$.N(1032193, 'deprecate', deprecate, false, false, false);
            J$.N(1032201, 'REFERENCE_BY_FILENAME', REFERENCE_BY_FILENAME, false, false, false);
            J$.N(1032209, 'REFERENCE_BY_ID', REFERENCE_BY_ID, false, false, false);
            J$.N(1032217, 'deprecationFn', deprecationFn, false, false, false);
            J$.N(1032225, 'GridStore', GridStore, false, false, false);
            J$.N(1032233, 'open', open, false, false, false);
            J$.N(1032241, 'getc', getc, false, false, false);
            J$.N(1032249, 'writeFile', writeFile, false, false, false);
            J$.N(1032257, 'close', close, false, false, false);
            J$.N(1032265, 'unlink', unlink, false, false, false);
            J$.N(1032273, 'readlines', readlines, false, false, false);
            J$.N(1032281, 'rewind', rewind, false, false, false);
            J$.N(1032289, 'read', read, false, false, false);
            J$.N(1032297, 'seek', seek, false, false, false);
            J$.N(1032305, '_open', _open, false, false, false);
            J$.N(1032313, 'writeBuffer', writeBuffer, false, false, false);
            J$.N(1032321, 'buildMongoObject', buildMongoObject, false, false, false);
            J$.N(1032329, 'nthChunk', nthChunk, false, false, false);
            J$.N(1032337, 'lastChunkNumber', lastChunkNumber, false, false, false);
            J$.N(1032345, 'deleteChunks', deleteChunks, false, false, false);
            J$.N(1032353, 'exists', exists, false, false, false);
            J$.N(1032361, 'list', list, false, false, false);
            J$.N(1032369, 'readStatic', readStatic, false, false, false);
            J$.N(1032377, 'readlinesStatic', readlinesStatic, false, false, false);
            J$.N(1032385, 'unlinkStatic', unlinkStatic, false, false, false);
            J$.N(1032393, '_writeNormal', _writeNormal, false, false, false);
            J$.N(1032401, '_setWriteConcernHash', _setWriteConcernHash, false, false, false);
            J$.N(1032409, '_getWriteConcern', _getWriteConcern, false, false, false);
            J$.N(1032417, 'GridStoreStream', GridStoreStream, false, false, false);
            J$.T(998593, 'use strict', 21, false);
            var Chunk = J$.W(999249, 'Chunk', J$.F(999241, J$.I(typeof require === 'undefined' ? require = J$.R(999225, 'require', undefined, true, true) : require = J$.R(999225, 'require', require, true, true)), false)(J$.T(999233, './chunk', 21, false)), Chunk, false, true);
            var ObjectID = J$.W(999297, 'ObjectID', J$.G(999289, J$.G(999281, J$.F(999273, J$.I(typeof require === 'undefined' ? require = J$.R(999257, 'require', undefined, true, true) : require = J$.R(999257, 'require', require, true, true)), false)(J$.T(999265, '../core', 21, false)), 'BSON'), 'ObjectID'), ObjectID, false, true);
            var ReadPreference = J$.W(999337, 'ReadPreference', J$.G(999329, J$.F(999321, J$.I(typeof require === 'undefined' ? require = J$.R(999305, 'require', undefined, true, true) : require = J$.R(999305, 'require', require, true, true)), false)(J$.T(999313, '../core', 21, false)), 'ReadPreference'), ReadPreference, false, true);
            var Buffer = J$.W(999377, 'Buffer', J$.G(999369, J$.F(999361, J$.I(typeof require === 'undefined' ? require = J$.R(999345, 'require', undefined, true, true) : require = J$.R(999345, 'require', require, true, true)), false)(J$.T(999353, 'safe-buffer', 21, false)), 'Buffer'), Buffer, false, true);
            var fs = J$.W(999409, 'fs', J$.F(999401, J$.I(typeof require === 'undefined' ? require = J$.R(999385, 'require', undefined, true, true) : require = J$.R(999385, 'require', require, true, true)), false)(J$.T(999393, 'fs', 21, false)), fs, false, true);
            var f = J$.W(999449, 'f', J$.G(999441, J$.F(999433, J$.I(typeof require === 'undefined' ? require = J$.R(999417, 'require', undefined, true, true) : require = J$.R(999417, 'require', require, true, true)), false)(J$.T(999425, 'util', 21, false)), 'format'), f, false, true);
            var util = J$.W(999481, 'util', J$.F(999473, J$.I(typeof require === 'undefined' ? require = J$.R(999457, 'require', undefined, true, true) : require = J$.R(999457, 'require', require, true, true)), false)(J$.T(999465, 'util', 21, false)), util, false, true);
            var MongoError = J$.W(999521, 'MongoError', J$.G(999513, J$.F(999505, J$.I(typeof require === 'undefined' ? require = J$.R(999489, 'require', undefined, true, true) : require = J$.R(999489, 'require', require, true, true)), false)(J$.T(999497, '../core', 21, false)), 'MongoError'), MongoError, false, true);
            var inherits = J$.W(999545, 'inherits', J$.G(999537, J$.R(999529, 'util', util, false, true), 'inherits'), inherits, false, true);
            var Duplex = J$.W(999585, 'Duplex', J$.G(999577, J$.F(999569, J$.I(typeof require === 'undefined' ? require = J$.R(999553, 'require', undefined, true, true) : require = J$.R(999553, 'require', require, true, true)), false)(J$.T(999561, 'stream', 21, false)), 'Duplex'), Duplex, false, true);
            var shallowClone = J$.W(999625, 'shallowClone', J$.G(999617, J$.F(999609, J$.I(typeof require === 'undefined' ? require = J$.R(999593, 'require', undefined, true, true) : require = J$.R(999593, 'require', require, true, true)), false)(J$.T(999601, '../utils', 21, false)), 'shallowClone'), shallowClone, false, true);
            var executeLegacyOperation = J$.W(999665, 'executeLegacyOperation', J$.G(999657, J$.F(999649, J$.I(typeof require === 'undefined' ? require = J$.R(999633, 'require', undefined, true, true) : require = J$.R(999633, 'require', require, true, true)), false)(J$.T(999641, '../utils', 21, false)), 'executeLegacyOperation'), executeLegacyOperation, false, true);
            var deprecate = J$.W(999705, 'deprecate', J$.G(999697, J$.F(999689, J$.I(typeof require === 'undefined' ? require = J$.R(999673, 'require', undefined, true, true) : require = J$.R(999673, 'require', require, true, true)), false)(J$.T(999681, 'util', 21, false)), 'deprecate'), deprecate, false, true);
            var REFERENCE_BY_FILENAME = J$.W(999729, 'REFERENCE_BY_FILENAME', J$.T(999713, 0, 22, false), REFERENCE_BY_FILENAME, false, true), REFERENCE_BY_ID = J$.W(999737, 'REFERENCE_BY_ID', J$.T(999721, 1, 22, false), REFERENCE_BY_ID, false, true);
            var deprecationFn = J$.W(999793, 'deprecationFn', J$.F(999785, J$.R(999745, 'deprecate', deprecate, false, true), false)(J$.T(999769, function () {
                jalangiLabel6:
                    while (true) {
                        try {
                            J$.Fe(999753, arguments.callee, this, arguments);
                            arguments = J$.N(999761, 'arguments', arguments, true, false, false);
                        } catch (J$e) {
                            J$.Ex(1032521, J$e);
                        } finally {
                            if (J$.Fr(1032529))
                                continue jalangiLabel6;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false), J$.T(999777, 'GridStore is deprecated, and will be removed in a future version. Please use GridFSBucket instead', 21, false)), deprecationFn, false, true);
            var GridStore = J$.W(1001513, 'GridStore', J$.T(1001505, function GridStore(db, id, filename, mode, options) {
                jalangiLabel11:
                    while (true) {
                        try {
                            J$.Fe(1001441, arguments.callee, this, arguments);
                            arguments = J$.N(1001449, 'arguments', arguments, true, false, false);
                            db = J$.N(1001457, 'db', db, true, false, false);
                            id = J$.N(1001465, 'id', id, true, false, false);
                            filename = J$.N(1001473, 'filename', filename, true, false, false);
                            mode = J$.N(1001481, 'mode', mode, true, false, false);
                            options = J$.N(1001489, 'options', options, true, false, false);
                            J$.N(1001497, 'promiseLibrary', promiseLibrary, false, false, false);
                            J$.F(999809, J$.R(999801, 'deprecationFn', deprecationFn, false, true), false)();
                            if (J$.C(60544, J$.U(103794, '!', J$.B(103786, 'instanceof', J$.R(999817, 'this', this, false, false), J$.R(999825, 'GridStore', GridStore, false, false)))))
                                return J$.Rt(999889, J$.F(999881, J$.R(999833, 'GridStore', GridStore, false, false), true)(J$.R(999841, 'db', db, false, false), J$.R(999849, 'id', id, false, false), J$.R(999857, 'filename', filename, false, false), J$.R(999865, 'mode', mode, false, false), J$.R(999873, 'options', options, false, false)));
                            J$.P(999913, J$.R(999897, 'this', this, false, false), 'db', J$.R(999905, 'db', db, false, false));
                            if (J$.C(60552, J$.B(103810, '===', J$.U(103802, 'typeof', J$.R(999921, 'options', options, false, false)), J$.T(999929, 'undefined', 21, false))))
                                options = J$.W(999945, 'options', J$.T(999937, {}, 11, false), options, false, false);
                            if (J$.C(60568, J$.B(103826, '===', J$.U(103818, 'typeof', J$.R(999953, 'mode', mode, false, false)), J$.T(999961, 'undefined', 21, false)))) {
                                mode = J$.W(999977, 'mode', J$.R(999969, 'filename', filename, false, false), mode, false, false);
                                filename = J$.W(999993, 'filename', J$.T(999985, undefined, 24, false), filename, false, false);
                            } else if (J$.C(60560, J$.B(103834, '===', J$.F(1000017, J$.R(1000001, '_typeof', _typeof, false, true), false)(J$.R(1000009, 'mode', mode, false, false)), J$.T(1000025, 'object', 21, false)))) {
                                options = J$.W(1000041, 'options', J$.R(1000033, 'mode', mode, false, false), options, false, false);
                                mode = J$.W(1000057, 'mode', J$.R(1000049, 'filename', filename, false, false), mode, false, false);
                                filename = J$.W(1000073, 'filename', J$.T(1000065, undefined, 24, false), filename, false, false);
                            }
                            if (J$.C(60600, J$.C(60576, J$.R(1000081, 'id', id, false, false)) ? J$.B(103842, '===', J$.G(1000097, J$.R(1000089, 'id', id, false, false), '_bsontype'), J$.T(1000105, 'ObjectID', 21, false)) : J$._())) {
                                J$.P(1000129, J$.R(1000113, 'this', this, false, false), 'referenceBy', J$.R(1000121, 'REFERENCE_BY_ID', REFERENCE_BY_ID, false, true));
                                J$.P(1000153, J$.R(1000137, 'this', this, false, false), 'fileId', J$.R(1000145, 'id', id, false, false));
                                J$.P(1000177, J$.R(1000161, 'this', this, false, false), 'filename', J$.R(1000169, 'filename', filename, false, false));
                            } else if (J$.C(60592, J$.B(103858, '===', J$.U(103850, 'typeof', J$.R(1000185, 'filename', filename, false, false)), J$.T(1000193, 'undefined', 21, false)))) {
                                J$.P(1000217, J$.R(1000201, 'this', this, false, false), 'referenceBy', J$.R(1000209, 'REFERENCE_BY_FILENAME', REFERENCE_BY_FILENAME, false, true));
                                J$.P(1000241, J$.R(1000225, 'this', this, false, false), 'filename', J$.R(1000233, 'id', id, false, false));
                                if (J$.C(60584, J$.B(103866, '!=', J$.M(1000265, J$.R(1000249, 'mode', mode, false, false), 'indexOf', false)(J$.T(1000257, 'w', 21, false)), J$.T(1000273, null, 25, false)))) {
                                    J$.P(1000305, J$.R(1000281, 'this', this, false, false), 'fileId', J$.F(1000297, J$.R(1000289, 'ObjectID', ObjectID, false, true), true)());
                                }
                            } else {
                                J$.P(1000329, J$.R(1000313, 'this', this, false, false), 'referenceBy', J$.R(1000321, 'REFERENCE_BY_ID', REFERENCE_BY_ID, false, true));
                                J$.P(1000353, J$.R(1000337, 'this', this, false, false), 'fileId', J$.R(1000345, 'id', id, false, false));
                                J$.P(1000377, J$.R(1000361, 'this', this, false, false), 'filename', J$.R(1000369, 'filename', filename, false, false));
                            }
                            J$.P(1000425, J$.R(1000385, 'this', this, false, false), 'mode', J$.C(60608, J$.B(103874, '==', J$.R(1000393, 'mode', mode, false, false), J$.T(1000401, null, 25, false))) ? J$.T(1000409, 'r', 21, false) : J$.R(1000417, 'mode', mode, false, false));
                            J$.P(1000457, J$.R(1000433, 'this', this, false, false), 'options', J$.C(60616, J$.R(1000441, 'options', options, false, false)) ? J$._() : J$.T(1000449, {}, 11, false));
                            J$.P(1000481, J$.R(1000465, 'this', this, false, false), 'isOpen', J$.T(1000473, false, 23, false));
                            J$.P(1000585, J$.R(1000489, 'this', this, false, false), 'root', J$.C(60624, J$.B(103882, '==', J$.G(1000521, J$.G(1000505, J$.R(1000497, 'this', this, false, false), 'options'), J$.T(1000513, 'root', 21, false)), J$.T(1000529, null, 25, false))) ? J$.G(1000545, J$.R(1000537, 'GridStore', GridStore, false, false), 'DEFAULT_ROOT_COLLECTION') : J$.G(1000577, J$.G(1000561, J$.R(1000553, 'this', this, false, false), 'options'), J$.T(1000569, 'root', 21, false)));
                            J$.P(1000609, J$.R(1000593, 'this', this, false, false), 'position', J$.T(1000601, 0, 22, false));
                            J$.P(1000689, J$.R(1000617, 'this', this, false, false), 'readPreference', J$.C(60640, J$.C(60632, J$.G(1000641, J$.G(1000633, J$.R(1000625, 'this', this, false, false), 'options'), 'readPreference')) ? J$._() : J$.G(1000665, J$.G(1000657, J$.R(1000649, 'db', db, false, false), 'options'), 'readPreference')) ? J$._() : J$.G(1000681, J$.R(1000673, 'ReadPreference', ReadPreference, false, true), 'primary'));
                            J$.P(1000745, J$.R(1000697, 'this', this, false, false), 'writeConcern', J$.F(1000737, J$.R(1000705, '_getWriteConcern', _getWriteConcern, false, true), false)(J$.R(1000713, 'db', db, false, false), J$.G(1000729, J$.R(1000721, 'this', this, false, false), 'options')));
                            J$.P(1000849, J$.R(1000753, 'this', this, false, false), 'internalChunkSize', J$.C(60648, J$.B(103890, '==', J$.G(1000785, J$.G(1000769, J$.R(1000761, 'this', this, false, false), 'options'), J$.T(1000777, 'chunkSize', 21, false)), J$.T(1000793, null, 25, false))) ? J$.G(1000809, J$.R(1000801, 'Chunk', Chunk, false, true), 'DEFAULT_CHUNK_SIZE') : J$.G(1000841, J$.G(1000825, J$.R(1000817, 'this', this, false, false), 'options'), J$.T(1000833, 'chunkSize', 21, false)));
                            var promiseLibrary = J$.W(1000889, 'promiseLibrary', J$.C(60656, J$.G(1000873, J$.G(1000865, J$.R(1000857, 'this', this, false, false), 'options'), 'promiseLibrary')) ? J$._() : J$.I(typeof Promise === 'undefined' ? Promise = J$.R(1000881, 'Promise', undefined, true, true) : Promise = J$.R(1000881, 'Promise', Promise, true, true)), promiseLibrary, false, false);
                            J$.P(1000913, J$.R(1000897, 'this', this, false, false), 'promiseLibrary', J$.R(1000905, 'promiseLibrary', promiseLibrary, false, false));
                            J$.M(1001185, J$.I(typeof Object === 'undefined' ? Object = J$.R(1000921, 'Object', undefined, true, true) : Object = J$.R(1000921, 'Object', Object, true, true)), 'defineProperty', false)(J$.R(1000929, 'this', this, false, false), J$.T(1000937, 'chunkSize', 21, false), J$.T(1001177, {
                                enumerable: J$.T(1000945, true, 23, false),
                                get: J$.T(1000993, function get() {
                                    jalangiLabel7:
                                        while (true) {
                                            try {
                                                J$.Fe(1000977, arguments.callee, this, arguments);
                                                arguments = J$.N(1000985, 'arguments', arguments, true, false, false);
                                                return J$.Rt(1000969, J$.G(1000961, J$.R(1000953, 'this', this, false, false), 'internalChunkSize'));
                                            } catch (J$e) {
                                                J$.Ex(1032537, J$e);
                                            } finally {
                                                if (J$.Fr(1032545))
                                                    continue jalangiLabel7;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false),
                                set: J$.T(1001169, function set(value) {
                                    jalangiLabel8:
                                        while (true) {
                                            try {
                                                J$.Fe(1001145, arguments.callee, this, arguments);
                                                arguments = J$.N(1001153, 'arguments', arguments, true, false, false);
                                                value = J$.N(1001161, 'value', value, true, false, false);
                                                if (J$.C(60680, J$.U(103922, '!', J$.C(60672, J$.C(60664, J$.B(103898, '===', J$.G(1001025, J$.G(1001009, J$.R(1001001, 'this', this, false, false), 'mode'), J$.T(1001017, 0, 22, false)), J$.T(1001033, 'w', 21, false))) ? J$.B(103906, '===', J$.G(1001049, J$.R(1001041, 'this', this, false, false), 'position'), J$.T(1001057, 0, 22, false)) : J$._()) ? J$.B(103914, '==', J$.G(1001073, J$.R(1001065, 'this', this, false, false), 'uploadDate'), J$.T(1001081, null, 25, false)) : J$._()))) {
                                                    J$.P(1001113, J$.R(1001089, 'this', this, false, false), 'internalChunkSize', J$.G(1001105, J$.R(1001097, 'this', this, false, false), 'internalChunkSize'));
                                                } else {
                                                    J$.P(1001137, J$.R(1001121, 'this', this, false, false), 'internalChunkSize', J$.R(1001129, 'value', value, false, false));
                                                }
                                            } catch (J$e) {
                                                J$.Ex(1032553, J$e);
                                            } finally {
                                                if (J$.Fr(1032561))
                                                    continue jalangiLabel8;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false)
                            }, 11, false));
                            J$.M(1001281, J$.I(typeof Object === 'undefined' ? Object = J$.R(1001193, 'Object', undefined, true, true) : Object = J$.R(1001193, 'Object', Object, true, true)), 'defineProperty', false)(J$.R(1001201, 'this', this, false, false), J$.T(1001209, 'md5', 21, false), J$.T(1001273, {
                                enumerable: J$.T(1001217, true, 23, false),
                                get: J$.T(1001265, function get() {
                                    jalangiLabel9:
                                        while (true) {
                                            try {
                                                J$.Fe(1001249, arguments.callee, this, arguments);
                                                arguments = J$.N(1001257, 'arguments', arguments, true, false, false);
                                                return J$.Rt(1001241, J$.G(1001233, J$.R(1001225, 'this', this, false, false), 'internalMd5'));
                                            } catch (J$e) {
                                                J$.Ex(1032569, J$e);
                                            } finally {
                                                if (J$.Fr(1032577))
                                                    continue jalangiLabel9;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false)
                            }, 11, false));
                            J$.M(1001433, J$.I(typeof Object === 'undefined' ? Object = J$.R(1001289, 'Object', undefined, true, true) : Object = J$.R(1001289, 'Object', Object, true, true)), 'defineProperty', false)(J$.R(1001297, 'this', this, false, false), J$.T(1001305, 'chunkNumber', 21, false), J$.T(1001425, {
                                enumerable: J$.T(1001313, true, 23, false),
                                get: J$.T(1001417, function get() {
                                    jalangiLabel10:
                                        while (true) {
                                            try {
                                                J$.Fe(1001401, arguments.callee, this, arguments);
                                                arguments = J$.N(1001409, 'arguments', arguments, true, false, false);
                                                return J$.Rt(1001393, J$.C(60696, J$.C(60688, J$.G(1001329, J$.R(1001321, 'this', this, false, false), 'currentChunk')) ? J$.G(1001353, J$.G(1001345, J$.R(1001337, 'this', this, false, false), 'currentChunk'), 'chunkNumber') : J$._()) ? J$.G(1001377, J$.G(1001369, J$.R(1001361, 'this', this, false, false), 'currentChunk'), 'chunkNumber') : J$.T(1001385, null, 25, false));
                                            } catch (J$e) {
                                                J$.Ex(1032585, J$e);
                                            } finally {
                                                if (J$.Fr(1032593))
                                                    continue jalangiLabel10;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false)
                            }, 11, false));
                        } catch (J$e) {
                            J$.Ex(1032601, J$e);
                        } finally {
                            if (J$.Fr(1032609))
                                continue jalangiLabel11;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false), GridStore, false, true);
            J$.P(1001889, J$.G(1001529, J$.R(1001521, 'GridStore', GridStore, false, true), 'prototype'), 'open', J$.T(1001881, function (options, callback) {
                jalangiLabel12:
                    while (true) {
                        try {
                            J$.Fe(1001849, arguments.callee, this, arguments);
                            arguments = J$.N(1001857, 'arguments', arguments, true, false, false);
                            options = J$.N(1001865, 'options', options, true, false, false);
                            callback = J$.N(1001873, 'callback', callback, true, false, false);
                            if (J$.C(60704, J$.B(103938, '===', J$.U(103930, 'typeof', J$.R(1001537, 'options', options, false, false)), J$.T(1001545, 'function', 21, false))))
                                callback = J$.W(1001561, 'callback', J$.R(1001553, 'options', options, false, false), callback, false, false), options = J$.W(1001577, 'options', J$.T(1001569, {}, 11, false), options, false, false);
                            options = J$.W(1001601, 'options', J$.C(60712, J$.R(1001585, 'options', options, false, false)) ? J$._() : J$.T(1001593, {}, 11, false), options, false, false);
                            if (J$.C(60736, J$.C(60728, J$.C(60720, J$.B(103946, '!==', J$.G(1001617, J$.R(1001609, 'this', this, false, false), 'mode'), J$.T(1001625, 'w', 21, false))) ? J$.B(103954, '!==', J$.G(1001641, J$.R(1001633, 'this', this, false, false), 'mode'), J$.T(1001649, 'w+', 21, false)) : J$._()) ? J$.B(103962, '!==', J$.G(1001665, J$.R(1001657, 'this', this, false, false), 'mode'), J$.T(1001673, 'r', 21, false)) : J$._())) {
                                throw J$.M(1001729, J$.R(1001681, 'MongoError', MongoError, false, true), 'create', false)(J$.T(1001721, {
                                    message: J$.B(103970, '+', J$.T(1001689, 'Illegal mode ', 21, false), J$.G(1001705, J$.R(1001697, 'this', this, false, false), 'mode')),
                                    driver: J$.T(1001713, true, 23, false)
                                }, 11, false));
                            }
                            return J$.Rt(1001841, J$.F(1001833, J$.R(1001737, 'executeLegacyOperation', executeLegacyOperation, false, true), false)(J$.G(1001769, J$.G(1001761, J$.G(1001753, J$.R(1001745, 'this', this, false, false), 'db'), 's'), 'topology'), J$.R(1001777, 'open', open, false, true), J$.T(1001809, [
                                J$.R(1001785, 'this', this, false, false),
                                J$.R(1001793, 'options', options, false, false),
                                J$.R(1001801, 'callback', callback, false, false)
                            ], 10, false), J$.T(1001825, { skipSessions: J$.T(1001817, true, 23, false) }, 11, false)));
                        } catch (J$e) {
                            J$.Ex(1032617, J$e);
                        } finally {
                            if (J$.Fr(1032625))
                                continue jalangiLabel12;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            var open = J$.W(1002705, 'open', J$.T(1002697, function open(self, options, callback) {
                jalangiLabel17:
                    while (true) {
                        try {
                            J$.Fe(1002641, arguments.callee, this, arguments);
                            arguments = J$.N(1002649, 'arguments', arguments, true, false, false);
                            self = J$.N(1002657, 'self', self, true, false, false);
                            options = J$.N(1002665, 'options', options, true, false, false);
                            callback = J$.N(1002673, 'callback', callback, true, false, false);
                            J$.N(1002681, 'writeConcern', writeConcern, false, false, false);
                            J$.N(1002689, 'collection', collection, false, false, false);
                            var writeConcern = J$.W(1001945, 'writeConcern', J$.F(1001937, J$.R(1001897, '_getWriteConcern', _getWriteConcern, false, true), false)(J$.G(1001913, J$.R(1001905, 'self', self, false, false), 'db'), J$.G(1001929, J$.R(1001921, 'self', self, false, false), 'options')), writeConcern, false, false);
                            if (J$.C(60768, J$.C(60744, J$.B(103978, '===', J$.G(1001961, J$.R(1001953, 'self', self, false, false), 'mode'), J$.T(1001969, 'w', 21, false))) ? J$._() : J$.B(103986, '===', J$.G(1001985, J$.R(1001977, 'self', self, false, false), 'mode'), J$.T(1001993, 'w+', 21, false)))) {
                                var collection = J$.W(1002017, 'collection', J$.M(1002009, J$.R(1002001, 'self', self, false, false), 'collection', false)(), collection, false, false);
                                J$.M(1002465, J$.R(1002025, 'collection', collection, false, false), 'ensureIndex', false)(J$.T(1002057, [J$.T(1002049, [
                                        J$.T(1002033, 'filename', 21, false),
                                        J$.T(1002041, 1, 22, false)
                                    ], 10, false)], 10, false), J$.R(1002065, 'writeConcern', writeConcern, false, false), J$.T(1002457, function () {
                                    jalangiLabel15:
                                        while (true) {
                                            try {
                                                J$.Fe(1002425, arguments.callee, this, arguments);
                                                arguments = J$.N(1002433, 'arguments', arguments, true, false, false);
                                                J$.N(1002441, 'chunkCollection', chunkCollection, false, false, false);
                                                J$.N(1002449, 'chunkIndexOptions', chunkIndexOptions, false, false, false);
                                                var chunkCollection = J$.W(1002089, 'chunkCollection', J$.M(1002081, J$.R(1002073, 'self', self, false, false), 'chunkCollection', false)(), chunkCollection, false, false);
                                                var chunkIndexOptions = J$.W(1002121, 'chunkIndexOptions', J$.F(1002113, J$.R(1002097, 'shallowClone', shallowClone, false, true), false)(J$.R(1002105, 'writeConcern', writeConcern, false, false)), chunkIndexOptions, false, false);
                                                J$.P(1002145, J$.R(1002129, 'chunkIndexOptions', chunkIndexOptions, false, false), 'unique', J$.T(1002137, true, 23, false));
                                                J$.M(1002417, J$.R(1002153, 'chunkCollection', chunkCollection, false, false), 'ensureIndex', false)(J$.T(1002209, [
                                                    J$.T(1002177, [
                                                        J$.T(1002161, 'files_id', 21, false),
                                                        J$.T(1002169, 1, 22, false)
                                                    ], 10, false),
                                                    J$.T(1002201, [
                                                        J$.T(1002185, 'n', 21, false),
                                                        J$.T(1002193, 1, 22, false)
                                                    ], 10, false)
                                                ], 10, false), J$.R(1002217, 'chunkIndexOptions', chunkIndexOptions, false, false), J$.T(1002409, function () {
                                                    jalangiLabel14:
                                                        while (true) {
                                                            try {
                                                                J$.Fe(1002393, arguments.callee, this, arguments);
                                                                arguments = J$.N(1002401, 'arguments', arguments, true, false, false);
                                                                J$.F(1002385, J$.R(1002225, '_open', _open, false, true), false)(J$.R(1002233, 'self', self, false, false), J$.R(1002241, 'writeConcern', writeConcern, false, false), J$.T(1002377, function (err, r) {
                                                                    jalangiLabel13:
                                                                        while (true) {
                                                                            try {
                                                                                J$.Fe(1002345, arguments.callee, this, arguments);
                                                                                arguments = J$.N(1002353, 'arguments', arguments, true, false, false);
                                                                                err = J$.N(1002361, 'err', err, true, false, false);
                                                                                r = J$.N(1002369, 'r', r, true, false, false);
                                                                                if (J$.C(60752, J$.R(1002249, 'err', err, false, false)))
                                                                                    return J$.Rt(1002281, J$.F(1002273, J$.R(1002257, 'callback', callback, false, false), false)(J$.R(1002265, 'err', err, false, false)));
                                                                                J$.P(1002305, J$.R(1002289, 'self', self, false, false), 'isOpen', J$.T(1002297, true, 23, false));
                                                                                J$.F(1002337, J$.R(1002313, 'callback', callback, false, false), false)(J$.R(1002321, 'err', err, false, false), J$.R(1002329, 'r', r, false, false));
                                                                            } catch (J$e) {
                                                                                J$.Ex(1032633, J$e);
                                                                            } finally {
                                                                                if (J$.Fr(1032641))
                                                                                    continue jalangiLabel13;
                                                                                else
                                                                                    return J$.Ra();
                                                                            }
                                                                        }
                                                                }, 12, false));
                                                            } catch (J$e) {
                                                                J$.Ex(1032649, J$e);
                                                            } finally {
                                                                if (J$.Fr(1032657))
                                                                    continue jalangiLabel14;
                                                                else
                                                                    return J$.Ra();
                                                            }
                                                        }
                                                }, 12, false));
                                            } catch (J$e) {
                                                J$.Ex(1032665, J$e);
                                            } finally {
                                                if (J$.Fr(1032673))
                                                    continue jalangiLabel15;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false));
                            } else {
                                J$.F(1002633, J$.R(1002473, '_open', _open, false, true), false)(J$.R(1002481, 'self', self, false, false), J$.R(1002489, 'writeConcern', writeConcern, false, false), J$.T(1002625, function (err, r) {
                                    jalangiLabel16:
                                        while (true) {
                                            try {
                                                J$.Fe(1002593, arguments.callee, this, arguments);
                                                arguments = J$.N(1002601, 'arguments', arguments, true, false, false);
                                                err = J$.N(1002609, 'err', err, true, false, false);
                                                r = J$.N(1002617, 'r', r, true, false, false);
                                                if (J$.C(60760, J$.R(1002497, 'err', err, false, false)))
                                                    return J$.Rt(1002529, J$.F(1002521, J$.R(1002505, 'callback', callback, false, false), false)(J$.R(1002513, 'err', err, false, false)));
                                                J$.P(1002553, J$.R(1002537, 'self', self, false, false), 'isOpen', J$.T(1002545, true, 23, false));
                                                J$.F(1002585, J$.R(1002561, 'callback', callback, false, false), false)(J$.R(1002569, 'err', err, false, false), J$.R(1002577, 'r', r, false, false));
                                            } catch (J$e) {
                                                J$.Ex(1032681, J$e);
                                            } finally {
                                                if (J$.Fr(1032689))
                                                    continue jalangiLabel16;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false));
                            }
                        } catch (J$e) {
                            J$.Ex(1032697, J$e);
                        } finally {
                            if (J$.Fr(1032705))
                                continue jalangiLabel17;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false), open, false, true);
            J$.P(1002809, J$.G(1002721, J$.R(1002713, 'GridStore', GridStore, false, true), 'prototype'), 'eof', J$.T(1002801, function () {
                jalangiLabel18:
                    while (true) {
                        try {
                            J$.Fe(1002785, arguments.callee, this, arguments);
                            arguments = J$.N(1002793, 'arguments', arguments, true, false, false);
                            return J$.Rt(1002777, J$.C(60776, J$.B(103994, '===', J$.G(1002737, J$.R(1002729, 'this', this, false, false), 'position'), J$.G(1002753, J$.R(1002745, 'this', this, false, false), 'length'))) ? J$.T(1002761, true, 23, false) : J$.T(1002769, false, 23, false));
                        } catch (J$e) {
                            J$.Ex(1032713, J$e);
                        } finally {
                            if (J$.Fr(1032721))
                                continue jalangiLabel18;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(1003057, J$.G(1002825, J$.R(1002817, 'GridStore', GridStore, false, true), 'prototype'), 'getc', J$.T(1003049, function (options, callback) {
                jalangiLabel19:
                    while (true) {
                        try {
                            J$.Fe(1003017, arguments.callee, this, arguments);
                            arguments = J$.N(1003025, 'arguments', arguments, true, false, false);
                            options = J$.N(1003033, 'options', options, true, false, false);
                            callback = J$.N(1003041, 'callback', callback, true, false, false);
                            if (J$.C(60784, J$.B(104010, '===', J$.U(104002, 'typeof', J$.R(1002833, 'options', options, false, false)), J$.T(1002841, 'function', 21, false))))
                                callback = J$.W(1002857, 'callback', J$.R(1002849, 'options', options, false, false), callback, false, false), options = J$.W(1002873, 'options', J$.T(1002865, {}, 11, false), options, false, false);
                            options = J$.W(1002897, 'options', J$.C(60792, J$.R(1002881, 'options', options, false, false)) ? J$._() : J$.T(1002889, {}, 11, false), options, false, false);
                            return J$.Rt(1003009, J$.F(1003001, J$.R(1002905, 'executeLegacyOperation', executeLegacyOperation, false, true), false)(J$.G(1002937, J$.G(1002929, J$.G(1002921, J$.R(1002913, 'this', this, false, false), 'db'), 's'), 'topology'), J$.R(1002945, 'getc', getc, false, true), J$.T(1002977, [
                                J$.R(1002953, 'this', this, false, false),
                                J$.R(1002961, 'options', options, false, false),
                                J$.R(1002969, 'callback', callback, false, false)
                            ], 10, false), J$.T(1002993, { skipSessions: J$.T(1002985, true, 23, false) }, 11, false)));
                        } catch (J$e) {
                            J$.Ex(1032729, J$e);
                        } finally {
                            if (J$.Fr(1032737))
                                continue jalangiLabel19;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            var getc = J$.W(1003481, 'getc', J$.T(1003473, function getc(self, options, callback) {
                jalangiLabel21:
                    while (true) {
                        try {
                            J$.Fe(1003433, arguments.callee, this, arguments);
                            arguments = J$.N(1003441, 'arguments', arguments, true, false, false);
                            self = J$.N(1003449, 'self', self, true, false, false);
                            options = J$.N(1003457, 'options', options, true, false, false);
                            callback = J$.N(1003465, 'callback', callback, true, false, false);
                            if (J$.C(60808, J$.M(1003073, J$.R(1003065, 'self', self, false, false), 'eof', false)())) {
                                J$.F(1003105, J$.R(1003081, 'callback', callback, false, false), false)(J$.T(1003089, null, 25, false), J$.T(1003097, null, 25, false));
                            } else if (J$.C(60800, J$.M(1003129, J$.G(1003121, J$.R(1003113, 'self', self, false, false), 'currentChunk'), 'eof', false)())) {
                                J$.F(1003337, J$.R(1003137, 'nthChunk', nthChunk, false, true), false)(J$.R(1003145, 'self', self, false, false), J$.B(104018, '+', J$.G(1003169, J$.G(1003161, J$.R(1003153, 'self', self, false, false), 'currentChunk'), 'chunkNumber'), J$.T(1003177, 1, 22, false)), J$.T(1003329, function (err, chunk) {
                                    jalangiLabel20:
                                        while (true) {
                                            try {
                                                J$.Fe(1003297, arguments.callee, this, arguments);
                                                arguments = J$.N(1003305, 'arguments', arguments, true, false, false);
                                                err = J$.N(1003313, 'err', err, true, false, false);
                                                chunk = J$.N(1003321, 'chunk', chunk, true, false, false);
                                                J$.P(1003201, J$.R(1003185, 'self', self, false, false), 'currentChunk', J$.R(1003193, 'chunk', chunk, false, false));
                                                J$.P(1003241, J$.R(1003209, 'self', self, false, false), 'position', J$.B(104026, '+', J$.G(1003225, J$.R(1003217, 'self', self, false, false), 'position'), J$.T(1003233, 1, 22, false)));
                                                J$.F(1003289, J$.R(1003249, 'callback', callback, false, false), false)(J$.R(1003257, 'err', err, false, false), J$.M(1003281, J$.G(1003273, J$.R(1003265, 'self', self, false, false), 'currentChunk'), 'getc', false)());
                                            } catch (J$e) {
                                                J$.Ex(1032745, J$e);
                                            } finally {
                                                if (J$.Fr(1032753))
                                                    continue jalangiLabel20;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false));
                            } else {
                                J$.P(1003377, J$.R(1003345, 'self', self, false, false), 'position', J$.B(104034, '+', J$.G(1003361, J$.R(1003353, 'self', self, false, false), 'position'), J$.T(1003369, 1, 22, false)));
                                J$.F(1003425, J$.R(1003385, 'callback', callback, false, false), false)(J$.T(1003393, null, 25, false), J$.M(1003417, J$.G(1003409, J$.R(1003401, 'self', self, false, false), 'currentChunk'), 'getc', false)());
                            }
                        } catch (J$e) {
                            J$.Ex(1032761, J$e);
                        } finally {
                            if (J$.Fr(1032769))
                                continue jalangiLabel21;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false), getc, false, true);
            J$.P(1003833, J$.G(1003497, J$.R(1003489, 'GridStore', GridStore, false, true), 'prototype'), 'puts', J$.T(1003825, function (string, options, callback) {
                jalangiLabel22:
                    while (true) {
                        try {
                            J$.Fe(1003777, arguments.callee, this, arguments);
                            arguments = J$.N(1003785, 'arguments', arguments, true, false, false);
                            string = J$.N(1003793, 'string', string, true, false, false);
                            options = J$.N(1003801, 'options', options, true, false, false);
                            callback = J$.N(1003809, 'callback', callback, true, false, false);
                            J$.N(1003817, 'finalString', finalString, false, false, false);
                            if (J$.C(60816, J$.B(104050, '===', J$.U(104042, 'typeof', J$.R(1003505, 'options', options, false, false)), J$.T(1003513, 'function', 21, false))))
                                callback = J$.W(1003529, 'callback', J$.R(1003521, 'options', options, false, false), callback, false, false), options = J$.W(1003545, 'options', J$.T(1003537, {}, 11, false), options, false, false);
                            options = J$.W(1003569, 'options', J$.C(60824, J$.R(1003553, 'options', options, false, false)) ? J$._() : J$.T(1003561, {}, 11, false), options, false, false);
                            var finalString = J$.W(1003633, 'finalString', J$.C(60832, J$.B(104058, '==', J$.M(1003593, J$.R(1003577, 'string', string, false, false), 'match', false)(J$.T(1003585, /\n$/, 14, false)), J$.T(1003601, null, 25, false))) ? J$.B(104066, '+', J$.R(1003609, 'string', string, false, false), J$.T(1003617, '\n', 21, false)) : J$.R(1003625, 'string', string, false, false), finalString, false, false);
                            return J$.Rt(1003769, J$.F(1003761, J$.R(1003641, 'executeLegacyOperation', executeLegacyOperation, false, true), false)(J$.G(1003673, J$.G(1003665, J$.G(1003657, J$.R(1003649, 'this', this, false, false), 'db'), 's'), 'topology'), J$.M(1003705, J$.G(1003689, J$.R(1003681, 'this', this, false, false), 'write'), 'bind', false)(J$.R(1003697, 'this', this, false, false)), J$.T(1003737, [
                                J$.R(1003713, 'finalString', finalString, false, false),
                                J$.R(1003721, 'options', options, false, false),
                                J$.R(1003729, 'callback', callback, false, false)
                            ], 10, false), J$.T(1003753, { skipSessions: J$.T(1003745, true, 23, false) }, 11, false)));
                        } catch (J$e) {
                            J$.Ex(1032777, J$e);
                        } finally {
                            if (J$.Fr(1032785))
                                continue jalangiLabel22;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(1003913, J$.G(1003849, J$.R(1003841, 'GridStore', GridStore, false, true), 'prototype'), 'stream', J$.T(1003905, function () {
                jalangiLabel23:
                    while (true) {
                        try {
                            J$.Fe(1003889, arguments.callee, this, arguments);
                            arguments = J$.N(1003897, 'arguments', arguments, true, false, false);
                            return J$.Rt(1003881, J$.F(1003873, J$.R(1003857, 'GridStoreStream', GridStoreStream, false, true), true)(J$.R(1003865, 'this', this, false, false)));
                        } catch (J$e) {
                            J$.Ex(1032793, J$e);
                        } finally {
                            if (J$.Fr(1032801))
                                continue jalangiLabel23;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(1004193, J$.G(1003929, J$.R(1003921, 'GridStore', GridStore, false, true), 'prototype'), 'write', J$.T(1004185, function write(data, close, options, callback) {
                jalangiLabel24:
                    while (true) {
                        try {
                            J$.Fe(1004137, arguments.callee, this, arguments);
                            arguments = J$.N(1004145, 'arguments', arguments, true, false, false);
                            data = J$.N(1004153, 'data', data, true, false, false);
                            close = J$.N(1004161, 'close', close, true, false, false);
                            options = J$.N(1004169, 'options', options, true, false, false);
                            callback = J$.N(1004177, 'callback', callback, true, false, false);
                            if (J$.C(60840, J$.B(104082, '===', J$.U(104074, 'typeof', J$.R(1003937, 'options', options, false, false)), J$.T(1003945, 'function', 21, false))))
                                callback = J$.W(1003961, 'callback', J$.R(1003953, 'options', options, false, false), callback, false, false), options = J$.W(1003977, 'options', J$.T(1003969, {}, 11, false), options, false, false);
                            options = J$.W(1004001, 'options', J$.C(60848, J$.R(1003985, 'options', options, false, false)) ? J$._() : J$.T(1003993, {}, 11, false), options, false, false);
                            return J$.Rt(1004129, J$.F(1004121, J$.R(1004009, 'executeLegacyOperation', executeLegacyOperation, false, true), false)(J$.G(1004041, J$.G(1004033, J$.G(1004025, J$.R(1004017, 'this', this, false, false), 'db'), 's'), 'topology'), J$.R(1004049, '_writeNormal', _writeNormal, false, true), J$.T(1004097, [
                                J$.R(1004057, 'this', this, false, false),
                                J$.R(1004065, 'data', data, false, false),
                                J$.R(1004073, 'close', close, false, false),
                                J$.R(1004081, 'options', options, false, false),
                                J$.R(1004089, 'callback', callback, false, false)
                            ], 10, false), J$.T(1004113, { skipSessions: J$.T(1004105, true, 23, false) }, 11, false)));
                        } catch (J$e) {
                            J$.Ex(1032809, J$e);
                        } finally {
                            if (J$.Fr(1032817))
                                continue jalangiLabel24;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(1004385, J$.G(1004209, J$.R(1004201, 'GridStore', GridStore, false, true), 'prototype'), 'destroy', J$.T(1004377, function destroy() {
                jalangiLabel25:
                    while (true) {
                        try {
                            J$.Fe(1004361, arguments.callee, this, arguments);
                            arguments = J$.N(1004369, 'arguments', arguments, true, false, false);
                            if (J$.C(60856, J$.U(104090, '!', J$.G(1004225, J$.R(1004217, 'this', this, false, false), 'writable'))))
                                return J$.Rt(1004233, undefined);
                            J$.P(1004257, J$.R(1004241, 'this', this, false, false), 'readable', J$.T(1004249, false, 23, false));
                            if (J$.C(60864, J$.G(1004273, J$.R(1004265, 'this', this, false, false), 'writable'))) {
                                J$.P(1004297, J$.R(1004281, 'this', this, false, false), 'writable', J$.T(1004289, false, 23, false));
                                J$.P(1004329, J$.G(1004313, J$.R(1004305, 'this', this, false, false), '_q'), 'length', J$.T(1004321, 0, 22, false));
                                J$.M(1004353, J$.R(1004337, 'this', this, false, false), 'emit', false)(J$.T(1004345, 'close', 21, false));
                            }
                        } catch (J$e) {
                            J$.Ex(1032825, J$e);
                        } finally {
                            if (J$.Fr(1032833))
                                continue jalangiLabel25;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(1004649, J$.G(1004401, J$.R(1004393, 'GridStore', GridStore, false, true), 'prototype'), 'writeFile', J$.T(1004641, function (file, options, callback) {
                jalangiLabel26:
                    while (true) {
                        try {
                            J$.Fe(1004601, arguments.callee, this, arguments);
                            arguments = J$.N(1004609, 'arguments', arguments, true, false, false);
                            file = J$.N(1004617, 'file', file, true, false, false);
                            options = J$.N(1004625, 'options', options, true, false, false);
                            callback = J$.N(1004633, 'callback', callback, true, false, false);
                            if (J$.C(60872, J$.B(104106, '===', J$.U(104098, 'typeof', J$.R(1004409, 'options', options, false, false)), J$.T(1004417, 'function', 21, false))))
                                callback = J$.W(1004433, 'callback', J$.R(1004425, 'options', options, false, false), callback, false, false), options = J$.W(1004449, 'options', J$.T(1004441, {}, 11, false), options, false, false);
                            options = J$.W(1004473, 'options', J$.C(60880, J$.R(1004457, 'options', options, false, false)) ? J$._() : J$.T(1004465, {}, 11, false), options, false, false);
                            return J$.Rt(1004593, J$.F(1004585, J$.R(1004481, 'executeLegacyOperation', executeLegacyOperation, false, true), false)(J$.G(1004513, J$.G(1004505, J$.G(1004497, J$.R(1004489, 'this', this, false, false), 'db'), 's'), 'topology'), J$.R(1004521, 'writeFile', writeFile, false, true), J$.T(1004561, [
                                J$.R(1004529, 'this', this, false, false),
                                J$.R(1004537, 'file', file, false, false),
                                J$.R(1004545, 'options', options, false, false),
                                J$.R(1004553, 'callback', callback, false, false)
                            ], 10, false), J$.T(1004577, { skipSessions: J$.T(1004569, true, 23, false) }, 11, false)));
                        } catch (J$e) {
                            J$.Ex(1032841, J$e);
                        } finally {
                            if (J$.Fr(1032849))
                                continue jalangiLabel26;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            var writeFile = J$.W(1006113, 'writeFile', J$.T(1006105, function writeFile(self, file, options, callback) {
                jalangiLabel36:
                    while (true) {
                        try {
                            J$.Fe(1006057, arguments.callee, this, arguments);
                            arguments = J$.N(1006065, 'arguments', arguments, true, false, false);
                            self = J$.N(1006073, 'self', self, true, false, false);
                            file = J$.N(1006081, 'file', file, true, false, false);
                            options = J$.N(1006089, 'options', options, true, false, false);
                            callback = J$.N(1006097, 'callback', callback, true, false, false);
                            if (J$.C(60896, J$.B(104122, '===', J$.U(104114, 'typeof', J$.R(1004657, 'file', file, false, false)), J$.T(1004665, 'string', 21, false)))) {
                                J$.M(1004809, J$.R(1004673, 'fs', fs, false, true), 'open', false)(J$.R(1004681, 'file', file, false, false), J$.T(1004689, 'r', 21, false), J$.T(1004801, function (err, fd) {
                                    jalangiLabel27:
                                        while (true) {
                                            try {
                                                J$.Fe(1004769, arguments.callee, this, arguments);
                                                arguments = J$.N(1004777, 'arguments', arguments, true, false, false);
                                                err = J$.N(1004785, 'err', err, true, false, false);
                                                fd = J$.N(1004793, 'fd', fd, true, false, false);
                                                if (J$.C(60888, J$.R(1004697, 'err', err, false, false)))
                                                    return J$.Rt(1004729, J$.F(1004721, J$.R(1004705, 'callback', callback, false, false), false)(J$.R(1004713, 'err', err, false, false)));
                                                J$.M(1004761, J$.R(1004737, 'self', self, false, false), 'writeFile', false)(J$.R(1004745, 'fd', fd, false, false), J$.R(1004753, 'callback', callback, false, false));
                                            } catch (J$e) {
                                                J$.Ex(1032857, J$e);
                                            } finally {
                                                if (J$.Fr(1032865))
                                                    continue jalangiLabel27;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false));
                                return J$.Rt(1004817, undefined);
                            }
                            J$.M(1006049, J$.R(1004825, 'self', self, false, false), 'open', false)(J$.T(1006041, function (err, self) {
                                jalangiLabel35:
                                    while (true) {
                                        try {
                                            J$.Fe(1006009, arguments.callee, this, arguments);
                                            arguments = J$.N(1006017, 'arguments', arguments, true, false, false);
                                            err = J$.N(1006025, 'err', err, true, false, false);
                                            self = J$.N(1006033, 'self', self, true, false, false);
                                            if (J$.C(60904, J$.R(1004833, 'err', err, false, false)))
                                                return J$.Rt(1004873, J$.F(1004865, J$.R(1004841, 'callback', callback, false, false), false)(J$.R(1004849, 'err', err, false, false), J$.R(1004857, 'self', self, false, false)));
                                            J$.M(1006001, J$.R(1004881, 'fs', fs, false, true), 'fstat', false)(J$.R(1004889, 'file', file, false, false), J$.T(1005993, function (err, stats) {
                                                jalangiLabel34:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(1005937, arguments.callee, this, arguments);
                                                            arguments = J$.N(1005945, 'arguments', arguments, true, false, false);
                                                            err = J$.N(1005953, 'err', err, true, false, false);
                                                            stats = J$.N(1005961, 'stats', stats, true, false, false);
                                                            J$.N(1005969, 'offset', offset, false, false, false);
                                                            J$.N(1005977, 'index', index, false, false, false);
                                                            J$.N(1005985, 'writeChunk', writeChunk, false, false, false);
                                                            if (J$.C(60912, J$.R(1004897, 'err', err, false, false)))
                                                                return J$.Rt(1004937, J$.F(1004929, J$.R(1004905, 'callback', callback, false, false), false)(J$.R(1004913, 'err', err, false, false), J$.R(1004921, 'self', self, false, false)));
                                                            var offset = J$.W(1004953, 'offset', J$.T(1004945, 0, 22, false), offset, false, false);
                                                            var index = J$.W(1004969, 'index', J$.T(1004961, 0, 22, false), index, false, false);
                                                            var writeChunk = J$.W(1005905, 'writeChunk', J$.T(1005897, function writeChunk() {
                                                                jalangiLabel33:
                                                                    while (true) {
                                                                        try {
                                                                            J$.Fe(1005873, arguments.callee, this, arguments);
                                                                            arguments = J$.N(1005881, 'arguments', arguments, true, false, false);
                                                                            J$.N(1005889, '_buffer', _buffer, false, false, false);
                                                                            var _buffer = J$.W(1005009, '_buffer', J$.M(1005001, J$.R(1004977, 'Buffer', Buffer, false, true), 'alloc', false)(J$.G(1004993, J$.R(1004985, 'self', self, false, false), 'chunkSize')), _buffer, false, false);
                                                                            J$.M(1005865, J$.R(1005017, 'fs', fs, false, true), 'read', false)(J$.R(1005025, 'file', file, false, false), J$.R(1005033, '_buffer', _buffer, false, false), J$.T(1005041, 0, 22, false), J$.G(1005057, J$.R(1005049, '_buffer', _buffer, false, false), 'length'), J$.R(1005065, 'offset', offset, false, false), J$.T(1005857, function (err, bytesRead, data) {
                                                                                jalangiLabel32:
                                                                                    while (true) {
                                                                                        try {
                                                                                            J$.Fe(1005809, arguments.callee, this, arguments);
                                                                                            arguments = J$.N(1005817, 'arguments', arguments, true, false, false);
                                                                                            err = J$.N(1005825, 'err', err, true, false, false);
                                                                                            bytesRead = J$.N(1005833, 'bytesRead', bytesRead, true, false, false);
                                                                                            data = J$.N(1005841, 'data', data, true, false, false);
                                                                                            J$.N(1005849, 'chunk', chunk, false, false, false);
                                                                                            if (J$.C(60920, J$.R(1005073, 'err', err, false, false)))
                                                                                                return J$.Rt(1005113, J$.F(1005105, J$.R(1005081, 'callback', callback, false, false), false)(J$.R(1005089, 'err', err, false, false), J$.R(1005097, 'self', self, false, false)));
                                                                                            offset = J$.W(1005137, 'offset', J$.B(104130, '+', J$.R(1005121, 'offset', offset, false, false), J$.R(1005129, 'bytesRead', bytesRead, false, false)), offset, false, false);
                                                                                            var chunk = J$.W(1005209, 'chunk', J$.F(1005201, J$.R(1005145, 'Chunk', Chunk, false, true), true)(J$.R(1005153, 'self', self, false, false), J$.T(1005177, { n: J$.B(104154, '-', index = J$.W(1005169, 'index', J$.B(104146, '+', J$.U(104138, '+', J$.R(1005161, 'index', index, false, false)), 1), index, false, false), 1) }, 11, false), J$.G(1005193, J$.R(1005185, 'self', self, false, false), 'writeConcern')), chunk, false, false);
                                                                                            J$.M(1005801, J$.R(1005217, 'chunk', chunk, false, false), 'write', false)(J$.M(1005249, J$.R(1005225, 'data', data, false, false), 'slice', false)(J$.T(1005233, 0, 22, false), J$.R(1005241, 'bytesRead', bytesRead, false, false)), J$.T(1005793, function (err, chunk) {
                                                                                                jalangiLabel31:
                                                                                                    while (true) {
                                                                                                        try {
                                                                                                            J$.Fe(1005761, arguments.callee, this, arguments);
                                                                                                            arguments = J$.N(1005769, 'arguments', arguments, true, false, false);
                                                                                                            err = J$.N(1005777, 'err', err, true, false, false);
                                                                                                            chunk = J$.N(1005785, 'chunk', chunk, true, false, false);
                                                                                                            if (J$.C(60928, J$.R(1005257, 'err', err, false, false)))
                                                                                                                return J$.Rt(1005297, J$.F(1005289, J$.R(1005265, 'callback', callback, false, false), false)(J$.R(1005273, 'err', err, false, false), J$.R(1005281, 'self', self, false, false)));
                                                                                                            J$.M(1005753, J$.R(1005305, 'chunk', chunk, false, false), 'save', false)(J$.T(1005313, {}, 11, false), J$.T(1005745, function (err) {
                                                                                                                jalangiLabel30:
                                                                                                                    while (true) {
                                                                                                                        try {
                                                                                                                            J$.Fe(1005721, arguments.callee, this, arguments);
                                                                                                                            arguments = J$.N(1005729, 'arguments', arguments, true, false, false);
                                                                                                                            err = J$.N(1005737, 'err', err, true, false, false);
                                                                                                                            if (J$.C(60936, J$.R(1005321, 'err', err, false, false)))
                                                                                                                                return J$.Rt(1005361, J$.F(1005353, J$.R(1005329, 'callback', callback, false, false), false)(J$.R(1005337, 'err', err, false, false), J$.R(1005345, 'self', self, false, false)));
                                                                                                                            J$.P(1005401, J$.R(1005369, 'self', self, false, false), 'position', J$.B(104162, '+', J$.G(1005385, J$.R(1005377, 'self', self, false, false), 'position'), J$.R(1005393, 'bytesRead', bytesRead, false, false)));
                                                                                                                            J$.P(1005425, J$.R(1005409, 'self', self, false, false), 'currentChunk', J$.R(1005417, 'chunk', chunk, false, false));
                                                                                                                            if (J$.C(60960, J$.B(104170, '>=', J$.R(1005433, 'offset', offset, false, false), J$.G(1005449, J$.R(1005441, 'stats', stats, false, false), 'size')))) {
                                                                                                                                J$.M(1005681, J$.R(1005457, 'fs', fs, false, true), 'close', false)(J$.R(1005465, 'file', file, false, false), J$.T(1005673, function (err) {
                                                                                                                                    jalangiLabel29:
                                                                                                                                        while (true) {
                                                                                                                                            try {
                                                                                                                                                J$.Fe(1005649, arguments.callee, this, arguments);
                                                                                                                                                arguments = J$.N(1005657, 'arguments', arguments, true, false, false);
                                                                                                                                                err = J$.N(1005665, 'err', err, true, false, false);
                                                                                                                                                if (J$.C(60944, J$.R(1005473, 'err', err, false, false)))
                                                                                                                                                    return J$.Rt(1005505, J$.F(1005497, J$.R(1005481, 'callback', callback, false, false), false)(J$.R(1005489, 'err', err, false, false)));
                                                                                                                                                J$.M(1005641, J$.R(1005513, 'self', self, false, false), 'close', false)(J$.T(1005633, function (err) {
                                                                                                                                                    jalangiLabel28:
                                                                                                                                                        while (true) {
                                                                                                                                                            try {
                                                                                                                                                                J$.Fe(1005609, arguments.callee, this, arguments);
                                                                                                                                                                arguments = J$.N(1005617, 'arguments', arguments, true, false, false);
                                                                                                                                                                err = J$.N(1005625, 'err', err, true, false, false);
                                                                                                                                                                if (J$.C(60952, J$.R(1005521, 'err', err, false, false)))
                                                                                                                                                                    return J$.Rt(1005561, J$.F(1005553, J$.R(1005529, 'callback', callback, false, false), false)(J$.R(1005537, 'err', err, false, false), J$.R(1005545, 'self', self, false, false)));
                                                                                                                                                                return J$.Rt(1005601, J$.F(1005593, J$.R(1005569, 'callback', callback, false, false), false)(J$.T(1005577, null, 25, false), J$.R(1005585, 'self', self, false, false)));
                                                                                                                                                            } catch (J$e) {
                                                                                                                                                                J$.Ex(1032873, J$e);
                                                                                                                                                            } finally {
                                                                                                                                                                if (J$.Fr(1032881))
                                                                                                                                                                    continue jalangiLabel28;
                                                                                                                                                                else
                                                                                                                                                                    return J$.Ra();
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                }, 12, false));
                                                                                                                                            } catch (J$e) {
                                                                                                                                                J$.Ex(1032889, J$e);
                                                                                                                                            } finally {
                                                                                                                                                if (J$.Fr(1032897))
                                                                                                                                                    continue jalangiLabel29;
                                                                                                                                                else
                                                                                                                                                    return J$.Ra();
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                }, 12, false));
                                                                                                                            } else {
                                                                                                                                return J$.Rt(1005713, J$.M(1005705, J$.I(typeof process === 'undefined' ? process = J$.R(1005689, 'process', undefined, true, true) : process = J$.R(1005689, 'process', process, true, true)), 'nextTick', false)(J$.R(1005697, 'writeChunk', writeChunk, false, false)));
                                                                                                                            }
                                                                                                                        } catch (J$e) {
                                                                                                                            J$.Ex(1032905, J$e);
                                                                                                                        } finally {
                                                                                                                            if (J$.Fr(1032913))
                                                                                                                                continue jalangiLabel30;
                                                                                                                            else
                                                                                                                                return J$.Ra();
                                                                                                                        }
                                                                                                                    }
                                                                                                            }, 12, false));
                                                                                                        } catch (J$e) {
                                                                                                            J$.Ex(1032921, J$e);
                                                                                                        } finally {
                                                                                                            if (J$.Fr(1032929))
                                                                                                                continue jalangiLabel31;
                                                                                                            else
                                                                                                                return J$.Ra();
                                                                                                        }
                                                                                                    }
                                                                                            }, 12, false));
                                                                                        } catch (J$e) {
                                                                                            J$.Ex(1032937, J$e);
                                                                                        } finally {
                                                                                            if (J$.Fr(1032945))
                                                                                                continue jalangiLabel32;
                                                                                            else
                                                                                                return J$.Ra();
                                                                                        }
                                                                                    }
                                                                            }, 12, false));
                                                                        } catch (J$e) {
                                                                            J$.Ex(1032953, J$e);
                                                                        } finally {
                                                                            if (J$.Fr(1032961))
                                                                                continue jalangiLabel33;
                                                                            else
                                                                                return J$.Ra();
                                                                        }
                                                                    }
                                                            }, 12, false), writeChunk, false, false);
                                                            J$.M(1005929, J$.I(typeof process === 'undefined' ? process = J$.R(1005913, 'process', undefined, true, true) : process = J$.R(1005913, 'process', process, true, true)), 'nextTick', false)(J$.R(1005921, 'writeChunk', writeChunk, false, false));
                                                        } catch (J$e) {
                                                            J$.Ex(1032969, J$e);
                                                        } finally {
                                                            if (J$.Fr(1032977))
                                                                continue jalangiLabel34;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false));
                                        } catch (J$e) {
                                            J$.Ex(1032985, J$e);
                                        } finally {
                                            if (J$.Fr(1032993))
                                                continue jalangiLabel35;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                        } catch (J$e) {
                            J$.Ex(1033001, J$e);
                        } finally {
                            if (J$.Fr(1033009))
                                continue jalangiLabel36;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false), writeFile, false, true);
            J$.P(1006361, J$.G(1006129, J$.R(1006121, 'GridStore', GridStore, false, true), 'prototype'), 'close', J$.T(1006353, function (options, callback) {
                jalangiLabel37:
                    while (true) {
                        try {
                            J$.Fe(1006321, arguments.callee, this, arguments);
                            arguments = J$.N(1006329, 'arguments', arguments, true, false, false);
                            options = J$.N(1006337, 'options', options, true, false, false);
                            callback = J$.N(1006345, 'callback', callback, true, false, false);
                            if (J$.C(60968, J$.B(104186, '===', J$.U(104178, 'typeof', J$.R(1006137, 'options', options, false, false)), J$.T(1006145, 'function', 21, false))))
                                callback = J$.W(1006161, 'callback', J$.R(1006153, 'options', options, false, false), callback, false, false), options = J$.W(1006177, 'options', J$.T(1006169, {}, 11, false), options, false, false);
                            options = J$.W(1006201, 'options', J$.C(60976, J$.R(1006185, 'options', options, false, false)) ? J$._() : J$.T(1006193, {}, 11, false), options, false, false);
                            return J$.Rt(1006313, J$.F(1006305, J$.R(1006209, 'executeLegacyOperation', executeLegacyOperation, false, true), false)(J$.G(1006241, J$.G(1006233, J$.G(1006225, J$.R(1006217, 'this', this, false, false), 'db'), 's'), 'topology'), J$.R(1006249, 'close', close, false, true), J$.T(1006281, [
                                J$.R(1006257, 'this', this, false, false),
                                J$.R(1006265, 'options', options, false, false),
                                J$.R(1006273, 'callback', callback, false, false)
                            ], 10, false), J$.T(1006297, { skipSessions: J$.T(1006289, true, 23, false) }, 11, false)));
                        } catch (J$e) {
                            J$.Ex(1033017, J$e);
                        } finally {
                            if (J$.Fr(1033025))
                                continue jalangiLabel37;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            var close = J$.W(1007913, 'close', J$.T(1007905, function close(self, options, callback) {
                jalangiLabel47:
                    while (true) {
                        try {
                            J$.Fe(1007865, arguments.callee, this, arguments);
                            arguments = J$.N(1007873, 'arguments', arguments, true, false, false);
                            self = J$.N(1007881, 'self', self, true, false, false);
                            options = J$.N(1007889, 'options', options, true, false, false);
                            callback = J$.N(1007897, 'callback', callback, true, false, false);
                            if (J$.C(61152, J$.B(104194, '===', J$.G(1006393, J$.G(1006377, J$.R(1006369, 'self', self, false, false), 'mode'), J$.T(1006385, 0, 22, false)), J$.T(1006401, 'w', 21, false)))) {
                                options = J$.W(1006457, 'options', J$.M(1006449, J$.I(typeof Object === 'undefined' ? Object = J$.R(1006409, 'Object', undefined, true, true) : Object = J$.R(1006409, 'Object', Object, true, true)), 'assign', false)(J$.T(1006417, {}, 11, false), J$.G(1006433, J$.R(1006425, 'self', self, false, false), 'writeConcern'), J$.R(1006441, 'options', options, false, false)), options, false, false);
                                if (J$.C(61120, J$.C(60984, J$.B(104202, '!=', J$.G(1006473, J$.R(1006465, 'self', self, false, false), 'currentChunk'), J$.T(1006481, null, 25, false))) ? J$.B(104210, '>', J$.G(1006505, J$.G(1006497, J$.R(1006489, 'self', self, false, false), 'currentChunk'), 'position'), J$.T(1006513, 0, 22, false)) : J$._())) {
                                    J$.M(1007281, J$.G(1006529, J$.R(1006521, 'self', self, false, false), 'currentChunk'), 'save', false)(J$.T(1006537, {}, 11, false), J$.T(1007273, function (err) {
                                        jalangiLabel43:
                                            while (true) {
                                                try {
                                                    J$.Fe(1007249, arguments.callee, this, arguments);
                                                    arguments = J$.N(1007257, 'arguments', arguments, true, false, false);
                                                    err = J$.N(1007265, 'err', err, true, false, false);
                                                    if (J$.C(61000, J$.C(60992, J$.R(1006545, 'err', err, false, false)) ? J$.B(104226, '===', J$.U(104218, 'typeof', J$.R(1006553, 'callback', callback, false, false)), J$.T(1006561, 'function', 21, false)) : J$._()))
                                                        return J$.Rt(1006593, J$.F(1006585, J$.R(1006569, 'callback', callback, false, false), false)(J$.R(1006577, 'err', err, false, false)));
                                                    J$.M(1007241, J$.R(1006601, 'self', self, false, false), 'collection', false)(J$.T(1007233, function (err, files) {
                                                        jalangiLabel42:
                                                            while (true) {
                                                                try {
                                                                    J$.Fe(1007201, arguments.callee, this, arguments);
                                                                    arguments = J$.N(1007209, 'arguments', arguments, true, false, false);
                                                                    err = J$.N(1007217, 'err', err, true, false, false);
                                                                    files = J$.N(1007225, 'files', files, true, false, false);
                                                                    if (J$.C(61016, J$.C(61008, J$.R(1006609, 'err', err, false, false)) ? J$.B(104242, '===', J$.U(104234, 'typeof', J$.R(1006617, 'callback', callback, false, false)), J$.T(1006625, 'function', 21, false)) : J$._()))
                                                                        return J$.Rt(1006657, J$.F(1006649, J$.R(1006633, 'callback', callback, false, false), false)(J$.R(1006641, 'err', err, false, false)));
                                                                    if (J$.C(61072, J$.B(104250, '!=', J$.G(1006673, J$.R(1006665, 'self', self, false, false), 'uploadDate'), J$.T(1006681, null, 25, false)))) {
                                                                        J$.F(1006921, J$.R(1006689, 'buildMongoObject', buildMongoObject, false, true), false)(J$.R(1006697, 'self', self, false, false), J$.T(1006913, function (err, mongoObject) {
                                                                            jalangiLabel39:
                                                                                while (true) {
                                                                                    try {
                                                                                        J$.Fe(1006881, arguments.callee, this, arguments);
                                                                                        arguments = J$.N(1006889, 'arguments', arguments, true, false, false);
                                                                                        err = J$.N(1006897, 'err', err, true, false, false);
                                                                                        mongoObject = J$.N(1006905, 'mongoObject', mongoObject, true, false, false);
                                                                                        if (J$.C(61032, J$.R(1006705, 'err', err, false, false))) {
                                                                                            if (J$.C(61024, J$.B(104266, '===', J$.U(104258, 'typeof', J$.R(1006713, 'callback', callback, false, false)), J$.T(1006721, 'function', 21, false))))
                                                                                                return J$.Rt(1006753, J$.F(1006745, J$.R(1006729, 'callback', callback, false, false), false)(J$.R(1006737, 'err', err, false, false)));
                                                                                            else
                                                                                                throw J$.R(1006761, 'err', err, false, false);
                                                                                        }
                                                                                        J$.M(1006873, J$.R(1006769, 'files', files, false, false), 'save', false)(J$.R(1006777, 'mongoObject', mongoObject, false, false), J$.R(1006785, 'options', options, false, false), J$.T(1006865, function (err) {
                                                                                            jalangiLabel38:
                                                                                                while (true) {
                                                                                                    try {
                                                                                                        J$.Fe(1006841, arguments.callee, this, arguments);
                                                                                                        arguments = J$.N(1006849, 'arguments', arguments, true, false, false);
                                                                                                        err = J$.N(1006857, 'err', err, true, false, false);
                                                                                                        if (J$.C(61040, J$.B(104282, '===', J$.U(104274, 'typeof', J$.R(1006793, 'callback', callback, false, false)), J$.T(1006801, 'function', 21, false))))
                                                                                                            J$.F(1006833, J$.R(1006809, 'callback', callback, false, false), false)(J$.R(1006817, 'err', err, false, false), J$.R(1006825, 'mongoObject', mongoObject, false, false));
                                                                                                    } catch (J$e) {
                                                                                                        J$.Ex(1033033, J$e);
                                                                                                    } finally {
                                                                                                        if (J$.Fr(1033041))
                                                                                                            continue jalangiLabel38;
                                                                                                        else
                                                                                                            return J$.Ra();
                                                                                                    }
                                                                                                }
                                                                                        }, 12, false));
                                                                                    } catch (J$e) {
                                                                                        J$.Ex(1033049, J$e);
                                                                                    } finally {
                                                                                        if (J$.Fr(1033057))
                                                                                            continue jalangiLabel39;
                                                                                        else
                                                                                            return J$.Ra();
                                                                                    }
                                                                                }
                                                                        }, 12, false));
                                                                    } else {
                                                                        J$.P(1006953, J$.R(1006929, 'self', self, false, false), 'uploadDate', J$.F(1006945, J$.I(typeof Date === 'undefined' ? Date = J$.R(1006937, 'Date', undefined, true, true) : Date = J$.R(1006937, 'Date', Date, true, true)), true)());
                                                                        J$.F(1007193, J$.R(1006961, 'buildMongoObject', buildMongoObject, false, true), false)(J$.R(1006969, 'self', self, false, false), J$.T(1007185, function (err, mongoObject) {
                                                                            jalangiLabel41:
                                                                                while (true) {
                                                                                    try {
                                                                                        J$.Fe(1007153, arguments.callee, this, arguments);
                                                                                        arguments = J$.N(1007161, 'arguments', arguments, true, false, false);
                                                                                        err = J$.N(1007169, 'err', err, true, false, false);
                                                                                        mongoObject = J$.N(1007177, 'mongoObject', mongoObject, true, false, false);
                                                                                        if (J$.C(61056, J$.R(1006977, 'err', err, false, false))) {
                                                                                            if (J$.C(61048, J$.B(104298, '===', J$.U(104290, 'typeof', J$.R(1006985, 'callback', callback, false, false)), J$.T(1006993, 'function', 21, false))))
                                                                                                return J$.Rt(1007025, J$.F(1007017, J$.R(1007001, 'callback', callback, false, false), false)(J$.R(1007009, 'err', err, false, false)));
                                                                                            else
                                                                                                throw J$.R(1007033, 'err', err, false, false);
                                                                                        }
                                                                                        J$.M(1007145, J$.R(1007041, 'files', files, false, false), 'save', false)(J$.R(1007049, 'mongoObject', mongoObject, false, false), J$.R(1007057, 'options', options, false, false), J$.T(1007137, function (err) {
                                                                                            jalangiLabel40:
                                                                                                while (true) {
                                                                                                    try {
                                                                                                        J$.Fe(1007113, arguments.callee, this, arguments);
                                                                                                        arguments = J$.N(1007121, 'arguments', arguments, true, false, false);
                                                                                                        err = J$.N(1007129, 'err', err, true, false, false);
                                                                                                        if (J$.C(61064, J$.B(104314, '===', J$.U(104306, 'typeof', J$.R(1007065, 'callback', callback, false, false)), J$.T(1007073, 'function', 21, false))))
                                                                                                            J$.F(1007105, J$.R(1007081, 'callback', callback, false, false), false)(J$.R(1007089, 'err', err, false, false), J$.R(1007097, 'mongoObject', mongoObject, false, false));
                                                                                                    } catch (J$e) {
                                                                                                        J$.Ex(1033065, J$e);
                                                                                                    } finally {
                                                                                                        if (J$.Fr(1033073))
                                                                                                            continue jalangiLabel40;
                                                                                                        else
                                                                                                            return J$.Ra();
                                                                                                    }
                                                                                                }
                                                                                        }, 12, false));
                                                                                    } catch (J$e) {
                                                                                        J$.Ex(1033081, J$e);
                                                                                    } finally {
                                                                                        if (J$.Fr(1033089))
                                                                                            continue jalangiLabel41;
                                                                                        else
                                                                                            return J$.Ra();
                                                                                    }
                                                                                }
                                                                        }, 12, false));
                                                                    }
                                                                } catch (J$e) {
                                                                    J$.Ex(1033097, J$e);
                                                                } finally {
                                                                    if (J$.Fr(1033105))
                                                                        continue jalangiLabel42;
                                                                    else
                                                                        return J$.Ra();
                                                                }
                                                            }
                                                    }, 12, false));
                                                } catch (J$e) {
                                                    J$.Ex(1033113, J$e);
                                                } finally {
                                                    if (J$.Fr(1033121))
                                                        continue jalangiLabel43;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false));
                                } else {
                                    J$.M(1007665, J$.R(1007289, 'self', self, false, false), 'collection', false)(J$.T(1007657, function (err, files) {
                                        jalangiLabel46:
                                            while (true) {
                                                try {
                                                    J$.Fe(1007625, arguments.callee, this, arguments);
                                                    arguments = J$.N(1007633, 'arguments', arguments, true, false, false);
                                                    err = J$.N(1007641, 'err', err, true, false, false);
                                                    files = J$.N(1007649, 'files', files, true, false, false);
                                                    if (J$.C(61088, J$.C(61080, J$.R(1007297, 'err', err, false, false)) ? J$.B(104330, '===', J$.U(104322, 'typeof', J$.R(1007305, 'callback', callback, false, false)), J$.T(1007313, 'function', 21, false)) : J$._()))
                                                        return J$.Rt(1007345, J$.F(1007337, J$.R(1007321, 'callback', callback, false, false), false)(J$.R(1007329, 'err', err, false, false)));
                                                    J$.P(1007377, J$.R(1007353, 'self', self, false, false), 'uploadDate', J$.F(1007369, J$.I(typeof Date === 'undefined' ? Date = J$.R(1007361, 'Date', undefined, true, true) : Date = J$.R(1007361, 'Date', Date, true, true)), true)());
                                                    J$.F(1007617, J$.R(1007385, 'buildMongoObject', buildMongoObject, false, true), false)(J$.R(1007393, 'self', self, false, false), J$.T(1007609, function (err, mongoObject) {
                                                        jalangiLabel45:
                                                            while (true) {
                                                                try {
                                                                    J$.Fe(1007577, arguments.callee, this, arguments);
                                                                    arguments = J$.N(1007585, 'arguments', arguments, true, false, false);
                                                                    err = J$.N(1007593, 'err', err, true, false, false);
                                                                    mongoObject = J$.N(1007601, 'mongoObject', mongoObject, true, false, false);
                                                                    if (J$.C(61104, J$.R(1007401, 'err', err, false, false))) {
                                                                        if (J$.C(61096, J$.B(104346, '===', J$.U(104338, 'typeof', J$.R(1007409, 'callback', callback, false, false)), J$.T(1007417, 'function', 21, false))))
                                                                            return J$.Rt(1007449, J$.F(1007441, J$.R(1007425, 'callback', callback, false, false), false)(J$.R(1007433, 'err', err, false, false)));
                                                                        else
                                                                            throw J$.R(1007457, 'err', err, false, false);
                                                                    }
                                                                    J$.M(1007569, J$.R(1007465, 'files', files, false, false), 'save', false)(J$.R(1007473, 'mongoObject', mongoObject, false, false), J$.R(1007481, 'options', options, false, false), J$.T(1007561, function (err) {
                                                                        jalangiLabel44:
                                                                            while (true) {
                                                                                try {
                                                                                    J$.Fe(1007537, arguments.callee, this, arguments);
                                                                                    arguments = J$.N(1007545, 'arguments', arguments, true, false, false);
                                                                                    err = J$.N(1007553, 'err', err, true, false, false);
                                                                                    if (J$.C(61112, J$.B(104362, '===', J$.U(104354, 'typeof', J$.R(1007489, 'callback', callback, false, false)), J$.T(1007497, 'function', 21, false))))
                                                                                        J$.F(1007529, J$.R(1007505, 'callback', callback, false, false), false)(J$.R(1007513, 'err', err, false, false), J$.R(1007521, 'mongoObject', mongoObject, false, false));
                                                                                } catch (J$e) {
                                                                                    J$.Ex(1033129, J$e);
                                                                                } finally {
                                                                                    if (J$.Fr(1033137))
                                                                                        continue jalangiLabel44;
                                                                                    else
                                                                                        return J$.Ra();
                                                                                }
                                                                            }
                                                                    }, 12, false));
                                                                } catch (J$e) {
                                                                    J$.Ex(1033145, J$e);
                                                                } finally {
                                                                    if (J$.Fr(1033153))
                                                                        continue jalangiLabel45;
                                                                    else
                                                                        return J$.Ra();
                                                                }
                                                            }
                                                    }, 12, false));
                                                } catch (J$e) {
                                                    J$.Ex(1033161, J$e);
                                                } finally {
                                                    if (J$.Fr(1033169))
                                                        continue jalangiLabel46;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false));
                                }
                            } else if (J$.C(61144, J$.B(104370, '===', J$.G(1007697, J$.G(1007681, J$.R(1007673, 'self', self, false, false), 'mode'), J$.T(1007689, 0, 22, false)), J$.T(1007705, 'r', 21, false)))) {
                                if (J$.C(61128, J$.B(104386, '===', J$.U(104378, 'typeof', J$.R(1007713, 'callback', callback, false, false)), J$.T(1007721, 'function', 21, false))))
                                    J$.F(1007753, J$.R(1007729, 'callback', callback, false, false), false)(J$.T(1007737, null, 25, false), J$.T(1007745, null, 25, false));
                            } else {
                                if (J$.C(61136, J$.B(104402, '===', J$.U(104394, 'typeof', J$.R(1007761, 'callback', callback, false, false)), J$.T(1007769, 'function', 21, false))))
                                    J$.F(1007857, J$.R(1007777, 'callback', callback, false, false), false)(J$.M(1007849, J$.R(1007785, 'MongoError', MongoError, false, true), 'create', false)(J$.T(1007841, {
                                        message: J$.F(1007825, J$.R(1007793, 'f', f, false, true), false)(J$.T(1007801, 'Illegal mode %s', 21, false), J$.G(1007817, J$.R(1007809, 'self', self, false, false), 'mode')),
                                        driver: J$.T(1007833, true, 23, false)
                                    }, 11, false)));
                            }
                        } catch (J$e) {
                            J$.Ex(1033177, J$e);
                        } finally {
                            if (J$.Fr(1033185))
                                continue jalangiLabel47;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false), close, false, true);
            J$.P(1008105, J$.G(1007929, J$.R(1007921, 'GridStore', GridStore, false, true), 'prototype'), 'chunkCollection', J$.T(1008097, function (callback) {
                jalangiLabel48:
                    while (true) {
                        try {
                            J$.Fe(1008073, arguments.callee, this, arguments);
                            arguments = J$.N(1008081, 'arguments', arguments, true, false, false);
                            callback = J$.N(1008089, 'callback', callback, true, false, false);
                            if (J$.C(61160, J$.B(104418, '===', J$.U(104410, 'typeof', J$.R(1007937, 'callback', callback, false, false)), J$.T(1007945, 'function', 21, false))))
                                return J$.Rt(1008009, J$.M(1008001, J$.G(1007961, J$.R(1007953, 'this', this, false, false), 'db'), 'collection', false)(J$.B(104426, '+', J$.G(1007977, J$.R(1007969, 'this', this, false, false), 'root'), J$.T(1007985, '.chunks', 21, false)), J$.R(1007993, 'callback', callback, false, false)));
                            return J$.Rt(1008065, J$.M(1008057, J$.G(1008025, J$.R(1008017, 'this', this, false, false), 'db'), 'collection', false)(J$.B(104434, '+', J$.G(1008041, J$.R(1008033, 'this', this, false, false), 'root'), J$.T(1008049, '.chunks', 21, false))));
                        } catch (J$e) {
                            J$.Ex(1033193, J$e);
                        } finally {
                            if (J$.Fr(1033201))
                                continue jalangiLabel48;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(1008353, J$.G(1008121, J$.R(1008113, 'GridStore', GridStore, false, true), 'prototype'), 'unlink', J$.T(1008345, function (options, callback) {
                jalangiLabel49:
                    while (true) {
                        try {
                            J$.Fe(1008313, arguments.callee, this, arguments);
                            arguments = J$.N(1008321, 'arguments', arguments, true, false, false);
                            options = J$.N(1008329, 'options', options, true, false, false);
                            callback = J$.N(1008337, 'callback', callback, true, false, false);
                            if (J$.C(61168, J$.B(104450, '===', J$.U(104442, 'typeof', J$.R(1008129, 'options', options, false, false)), J$.T(1008137, 'function', 21, false))))
                                callback = J$.W(1008153, 'callback', J$.R(1008145, 'options', options, false, false), callback, false, false), options = J$.W(1008169, 'options', J$.T(1008161, {}, 11, false), options, false, false);
                            options = J$.W(1008193, 'options', J$.C(61176, J$.R(1008177, 'options', options, false, false)) ? J$._() : J$.T(1008185, {}, 11, false), options, false, false);
                            return J$.Rt(1008305, J$.F(1008297, J$.R(1008201, 'executeLegacyOperation', executeLegacyOperation, false, true), false)(J$.G(1008233, J$.G(1008225, J$.G(1008217, J$.R(1008209, 'this', this, false, false), 'db'), 's'), 'topology'), J$.R(1008241, 'unlink', unlink, false, true), J$.T(1008273, [
                                J$.R(1008249, 'this', this, false, false),
                                J$.R(1008257, 'options', options, false, false),
                                J$.R(1008265, 'callback', callback, false, false)
                            ], 10, false), J$.T(1008289, { skipSessions: J$.T(1008281, true, 23, false) }, 11, false)));
                        } catch (J$e) {
                            J$.Ex(1033209, J$e);
                        } finally {
                            if (J$.Fr(1033217))
                                continue jalangiLabel49;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            var unlink = J$.W(1008817, 'unlink', J$.T(1008809, function unlink(self, options, callback) {
                jalangiLabel53:
                    while (true) {
                        try {
                            J$.Fe(1008769, arguments.callee, this, arguments);
                            arguments = J$.N(1008777, 'arguments', arguments, true, false, false);
                            self = J$.N(1008785, 'self', self, true, false, false);
                            options = J$.N(1008793, 'options', options, true, false, false);
                            callback = J$.N(1008801, 'callback', callback, true, false, false);
                            J$.F(1008761, J$.R(1008361, 'deleteChunks', deleteChunks, false, true), false)(J$.R(1008369, 'self', self, false, false), J$.T(1008753, function (err) {
                                jalangiLabel52:
                                    while (true) {
                                        try {
                                            J$.Fe(1008729, arguments.callee, this, arguments);
                                            arguments = J$.N(1008737, 'arguments', arguments, true, false, false);
                                            err = J$.N(1008745, 'err', err, true, false, false);
                                            if (J$.C(61184, J$.B(104458, '!==', J$.R(1008377, 'err', err, false, false), J$.T(1008385, null, 25, false)))) {
                                                J$.P(1008425, J$.R(1008393, 'err', err, false, false), 'message', J$.B(104466, '+', J$.T(1008401, 'at deleteChunks: ', 21, false), J$.G(1008417, J$.R(1008409, 'err', err, false, false), 'message')));
                                                return J$.Rt(1008457, J$.F(1008449, J$.R(1008433, 'callback', callback, false, false), false)(J$.R(1008441, 'err', err, false, false)));
                                            }
                                            J$.M(1008721, J$.R(1008465, 'self', self, false, false), 'collection', false)(J$.T(1008713, function (err, collection) {
                                                jalangiLabel51:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(1008681, arguments.callee, this, arguments);
                                                            arguments = J$.N(1008689, 'arguments', arguments, true, false, false);
                                                            err = J$.N(1008697, 'err', err, true, false, false);
                                                            collection = J$.N(1008705, 'collection', collection, true, false, false);
                                                            if (J$.C(61192, J$.B(104474, '!==', J$.R(1008473, 'err', err, false, false), J$.T(1008481, null, 25, false)))) {
                                                                J$.P(1008521, J$.R(1008489, 'err', err, false, false), 'message', J$.B(104482, '+', J$.T(1008497, 'at collection: ', 21, false), J$.G(1008513, J$.R(1008505, 'err', err, false, false), 'message')));
                                                                return J$.Rt(1008553, J$.F(1008545, J$.R(1008529, 'callback', callback, false, false), false)(J$.R(1008537, 'err', err, false, false)));
                                                            }
                                                            J$.M(1008673, J$.R(1008561, 'collection', collection, false, false), 'remove', false)(J$.T(1008585, { _id: J$.G(1008577, J$.R(1008569, 'self', self, false, false), 'fileId') }, 11, false), J$.G(1008601, J$.R(1008593, 'self', self, false, false), 'writeConcern'), J$.T(1008665, function (err) {
                                                                jalangiLabel50:
                                                                    while (true) {
                                                                        try {
                                                                            J$.Fe(1008641, arguments.callee, this, arguments);
                                                                            arguments = J$.N(1008649, 'arguments', arguments, true, false, false);
                                                                            err = J$.N(1008657, 'err', err, true, false, false);
                                                                            J$.F(1008633, J$.R(1008609, 'callback', callback, false, false), false)(J$.R(1008617, 'err', err, false, false), J$.R(1008625, 'self', self, false, false));
                                                                        } catch (J$e) {
                                                                            J$.Ex(1033225, J$e);
                                                                        } finally {
                                                                            if (J$.Fr(1033233))
                                                                                continue jalangiLabel50;
                                                                            else
                                                                                return J$.Ra();
                                                                        }
                                                                    }
                                                            }, 12, false));
                                                        } catch (J$e) {
                                                            J$.Ex(1033241, J$e);
                                                        } finally {
                                                            if (J$.Fr(1033249))
                                                                continue jalangiLabel51;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false));
                                        } catch (J$e) {
                                            J$.Ex(1033257, J$e);
                                        } finally {
                                            if (J$.Fr(1033265))
                                                continue jalangiLabel52;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                        } catch (J$e) {
                            J$.Ex(1033273, J$e);
                        } finally {
                            if (J$.Fr(1033281))
                                continue jalangiLabel53;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false), unlink, false, true);
            J$.P(1009001, J$.G(1008833, J$.R(1008825, 'GridStore', GridStore, false, true), 'prototype'), 'collection', J$.T(1008993, function (callback) {
                jalangiLabel54:
                    while (true) {
                        try {
                            J$.Fe(1008969, arguments.callee, this, arguments);
                            arguments = J$.N(1008977, 'arguments', arguments, true, false, false);
                            callback = J$.N(1008985, 'callback', callback, true, false, false);
                            if (J$.C(61200, J$.B(104498, '===', J$.U(104490, 'typeof', J$.R(1008841, 'callback', callback, false, false)), J$.T(1008849, 'function', 21, false))))
                                J$.M(1008905, J$.G(1008865, J$.R(1008857, 'this', this, false, false), 'db'), 'collection', false)(J$.B(104506, '+', J$.G(1008881, J$.R(1008873, 'this', this, false, false), 'root'), J$.T(1008889, '.files', 21, false)), J$.R(1008897, 'callback', callback, false, false));
                            return J$.Rt(1008961, J$.M(1008953, J$.G(1008921, J$.R(1008913, 'this', this, false, false), 'db'), 'collection', false)(J$.B(104514, '+', J$.G(1008937, J$.R(1008929, 'this', this, false, false), 'root'), J$.T(1008945, '.files', 21, false))));
                        } catch (J$e) {
                            J$.Ex(1033289, J$e);
                        } finally {
                            if (J$.Fr(1033297))
                                continue jalangiLabel54;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(1009457, J$.G(1009017, J$.R(1009009, 'GridStore', GridStore, false, true), 'prototype'), 'readlines', J$.T(1009449, function (separator, options, callback) {
                jalangiLabel55:
                    while (true) {
                        try {
                            J$.Fe(1009401, arguments.callee, this, arguments);
                            arguments = J$.N(1009409, 'arguments', arguments, true, false, false);
                            separator = J$.N(1009417, 'separator', separator, true, false, false);
                            options = J$.N(1009425, 'options', options, true, false, false);
                            callback = J$.N(1009433, 'callback', callback, true, false, false);
                            J$.N(1009441, 'args', args, false, false, false);
                            var args = J$.W(1009073, 'args', J$.M(1009065, J$.G(1009041, J$.G(1009033, J$.I(typeof Array === 'undefined' ? Array = J$.R(1009025, 'Array', undefined, true, true) : Array = J$.R(1009025, 'Array', Array, true, true)), 'prototype'), 'slice'), 'call', false)(J$.I(typeof arguments === 'undefined' ? arguments = J$.R(1009049, 'arguments', undefined, true, true) : arguments = J$.R(1009049, 'arguments', arguments, true, true)), J$.T(1009057, 0, 22, false)), args, false, false);
                            callback = J$.W(1009153, 'callback', J$.C(61208, J$.B(104538, '===', J$.U(104530, 'typeof', J$.G(1009113, J$.R(1009081, 'args', args, false, false), J$.B(104522, '-', J$.G(1009097, J$.R(1009089, 'args', args, false, false), 'length'), J$.T(1009105, 1, 22, false)))), J$.T(1009121, 'function', 21, false))) ? J$.M(1009137, J$.R(1009129, 'args', args, false, false), 'pop', false)() : J$.T(1009145, undefined, 24, false), callback, false, false);
                            separator = J$.W(1009201, 'separator', J$.C(61216, J$.G(1009169, J$.R(1009161, 'args', args, false, false), 'length')) ? J$.M(1009185, J$.R(1009177, 'args', args, false, false), 'shift', false)() : J$.T(1009193, '\n', 21, false), separator, false, false);
                            separator = J$.W(1009225, 'separator', J$.C(61224, J$.R(1009209, 'separator', separator, false, false)) ? J$._() : J$.T(1009217, '\n', 21, false), separator, false, false);
                            options = J$.W(1009273, 'options', J$.C(61232, J$.G(1009241, J$.R(1009233, 'args', args, false, false), 'length')) ? J$.M(1009257, J$.R(1009249, 'args', args, false, false), 'shift', false)() : J$.T(1009265, {}, 11, false), options, false, false);
                            return J$.Rt(1009393, J$.F(1009385, J$.R(1009281, 'executeLegacyOperation', executeLegacyOperation, false, true), false)(J$.G(1009313, J$.G(1009305, J$.G(1009297, J$.R(1009289, 'this', this, false, false), 'db'), 's'), 'topology'), J$.R(1009321, 'readlines', readlines, false, true), J$.T(1009361, [
                                J$.R(1009329, 'this', this, false, false),
                                J$.R(1009337, 'separator', separator, false, false),
                                J$.R(1009345, 'options', options, false, false),
                                J$.R(1009353, 'callback', callback, false, false)
                            ], 10, false), J$.T(1009377, { skipSessions: J$.T(1009369, true, 23, false) }, 11, false)));
                        } catch (J$e) {
                            J$.Ex(1033305, J$e);
                        } finally {
                            if (J$.Fr(1033313))
                                continue jalangiLabel55;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            var readlines = J$.W(1009905, 'readlines', J$.T(1009897, function readlines(self, separator, options, callback) {
                jalangiLabel57:
                    while (true) {
                        try {
                            J$.Fe(1009849, arguments.callee, this, arguments);
                            arguments = J$.N(1009857, 'arguments', arguments, true, false, false);
                            self = J$.N(1009865, 'self', self, true, false, false);
                            separator = J$.N(1009873, 'separator', separator, true, false, false);
                            options = J$.N(1009881, 'options', options, true, false, false);
                            callback = J$.N(1009889, 'callback', callback, true, false, false);
                            J$.M(1009841, J$.R(1009465, 'self', self, false, false), 'read', false)(J$.T(1009833, function (err, data) {
                                jalangiLabel56:
                                    while (true) {
                                        try {
                                            J$.Fe(1009785, arguments.callee, this, arguments);
                                            arguments = J$.N(1009793, 'arguments', arguments, true, false, false);
                                            err = J$.N(1009801, 'err', err, true, false, false);
                                            data = J$.N(1009809, 'data', data, true, false, false);
                                            J$.N(1009817, 'items', items, false, false, false);
                                            J$.N(1009825, 'i', i, false, false, false);
                                            if (J$.C(61240, J$.R(1009473, 'err', err, false, false)))
                                                return J$.Rt(1009505, J$.F(1009497, J$.R(1009481, 'callback', callback, false, false), false)(J$.R(1009489, 'err', err, false, false)));
                                            var items = J$.W(1009545, 'items', J$.M(1009537, J$.M(1009521, J$.R(1009513, 'data', data, false, false), 'toString', false)(), 'split', false)(J$.R(1009529, 'separator', separator, false, false)), items, false, false);
                                            items = J$.W(1009633, 'items', J$.C(61248, J$.B(104546, '>', J$.G(1009561, J$.R(1009553, 'items', items, false, false), 'length'), J$.T(1009569, 0, 22, false))) ? J$.M(1009617, J$.R(1009577, 'items', items, false, false), 'splice', false)(J$.T(1009585, 0, 22, false), J$.B(104554, '-', J$.G(1009601, J$.R(1009593, 'items', items, false, false), 'length'), J$.T(1009609, 1, 22, false))) : J$.T(1009625, [], 10, false), items, false, false);
                                            for (var i = J$.W(1009649, 'i', J$.T(1009641, 0, 22, false), i, false, false); J$.C(61256, J$.B(104562, '<', J$.R(1009657, 'i', i, false, false), J$.G(1009673, J$.R(1009665, 'items', items, false, false), 'length'))); J$.B(104586, '-', i = J$.W(1009689, 'i', J$.B(104578, '+', J$.U(104570, '+', J$.R(1009681, 'i', i, false, false)), 1), i, false, false), 1)) {
                                                J$.P(1009745, J$.R(1009697, 'items', items, false, false), J$.R(1009705, 'i', i, false, false), J$.B(104594, '+', J$.G(1009729, J$.R(1009713, 'items', items, false, false), J$.R(1009721, 'i', i, false, false)), J$.R(1009737, 'separator', separator, false, false)));
                                            }
                                            J$.F(1009777, J$.R(1009753, 'callback', callback, false, false), false)(J$.T(1009761, null, 25, false), J$.R(1009769, 'items', items, false, false));
                                        } catch (J$e) {
                                            J$.Ex(1033321, J$e);
                                        } finally {
                                            if (J$.Fr(1033329))
                                                continue jalangiLabel56;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                        } catch (J$e) {
                            J$.Ex(1033337, J$e);
                        } finally {
                            if (J$.Fr(1033345))
                                continue jalangiLabel57;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false), readlines, false, true);
            J$.P(1010153, J$.G(1009921, J$.R(1009913, 'GridStore', GridStore, false, true), 'prototype'), 'rewind', J$.T(1010145, function (options, callback) {
                jalangiLabel58:
                    while (true) {
                        try {
                            J$.Fe(1010113, arguments.callee, this, arguments);
                            arguments = J$.N(1010121, 'arguments', arguments, true, false, false);
                            options = J$.N(1010129, 'options', options, true, false, false);
                            callback = J$.N(1010137, 'callback', callback, true, false, false);
                            if (J$.C(61264, J$.B(104610, '===', J$.U(104602, 'typeof', J$.R(1009929, 'options', options, false, false)), J$.T(1009937, 'function', 21, false))))
                                callback = J$.W(1009953, 'callback', J$.R(1009945, 'options', options, false, false), callback, false, false), options = J$.W(1009969, 'options', J$.T(1009961, {}, 11, false), options, false, false);
                            options = J$.W(1009993, 'options', J$.C(61272, J$.R(1009977, 'options', options, false, false)) ? J$._() : J$.T(1009985, {}, 11, false), options, false, false);
                            return J$.Rt(1010105, J$.F(1010097, J$.R(1010001, 'executeLegacyOperation', executeLegacyOperation, false, true), false)(J$.G(1010033, J$.G(1010025, J$.G(1010017, J$.R(1010009, 'this', this, false, false), 'db'), 's'), 'topology'), J$.R(1010041, 'rewind', rewind, false, true), J$.T(1010073, [
                                J$.R(1010049, 'this', this, false, false),
                                J$.R(1010057, 'options', options, false, false),
                                J$.R(1010065, 'callback', callback, false, false)
                            ], 10, false), J$.T(1010089, { skipSessions: J$.T(1010081, true, 23, false) }, 11, false)));
                        } catch (J$e) {
                            J$.Ex(1033353, J$e);
                        } finally {
                            if (J$.Fr(1033361))
                                continue jalangiLabel58;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            var rewind = J$.W(1010793, 'rewind', J$.T(1010785, function rewind(self, options, callback) {
                jalangiLabel61:
                    while (true) {
                        try {
                            J$.Fe(1010745, arguments.callee, this, arguments);
                            arguments = J$.N(1010753, 'arguments', arguments, true, false, false);
                            self = J$.N(1010761, 'self', self, true, false, false);
                            options = J$.N(1010769, 'options', options, true, false, false);
                            callback = J$.N(1010777, 'callback', callback, true, false, false);
                            if (J$.C(61304, J$.B(104618, '!==', J$.G(1010177, J$.G(1010169, J$.R(1010161, 'self', self, false, false), 'currentChunk'), 'chunkNumber'), J$.T(1010185, 0, 22, false)))) {
                                if (J$.C(61296, J$.B(104626, '===', J$.G(1010217, J$.G(1010201, J$.R(1010193, 'self', self, false, false), 'mode'), J$.T(1010209, 0, 22, false)), J$.T(1010225, 'w', 21, false)))) {
                                    J$.F(1010449, J$.R(1010233, 'deleteChunks', deleteChunks, false, true), false)(J$.R(1010241, 'self', self, false, false), J$.T(1010441, function (err) {
                                        jalangiLabel59:
                                            while (true) {
                                                try {
                                                    J$.Fe(1010417, arguments.callee, this, arguments);
                                                    arguments = J$.N(1010425, 'arguments', arguments, true, false, false);
                                                    err = J$.N(1010433, 'err', err, true, false, false);
                                                    if (J$.C(61280, J$.R(1010249, 'err', err, false, false)))
                                                        return J$.Rt(1010281, J$.F(1010273, J$.R(1010257, 'callback', callback, false, false), false)(J$.R(1010265, 'err', err, false, false)));
                                                    J$.P(1010353, J$.R(1010289, 'self', self, false, false), 'currentChunk', J$.F(1010345, J$.R(1010297, 'Chunk', Chunk, false, true), true)(J$.R(1010305, 'self', self, false, false), J$.T(1010321, { n: J$.T(1010313, 0, 22, false) }, 11, false), J$.G(1010337, J$.R(1010329, 'self', self, false, false), 'writeConcern')));
                                                    J$.P(1010377, J$.R(1010361, 'self', self, false, false), 'position', J$.T(1010369, 0, 22, false));
                                                    J$.F(1010409, J$.R(1010385, 'callback', callback, false, false), false)(J$.T(1010393, null, 25, false), J$.R(1010401, 'self', self, false, false));
                                                } catch (J$e) {
                                                    J$.Ex(1033369, J$e);
                                                } finally {
                                                    if (J$.Fr(1033377))
                                                        continue jalangiLabel59;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false));
                                } else {
                                    J$.M(1010657, J$.R(1010457, 'self', self, false, false), 'currentChunk', false)(J$.T(1010465, 0, 22, false), J$.T(1010649, function (err, chunk) {
                                        jalangiLabel60:
                                            while (true) {
                                                try {
                                                    J$.Fe(1010617, arguments.callee, this, arguments);
                                                    arguments = J$.N(1010625, 'arguments', arguments, true, false, false);
                                                    err = J$.N(1010633, 'err', err, true, false, false);
                                                    chunk = J$.N(1010641, 'chunk', chunk, true, false, false);
                                                    if (J$.C(61288, J$.R(1010473, 'err', err, false, false)))
                                                        return J$.Rt(1010505, J$.F(1010497, J$.R(1010481, 'callback', callback, false, false), false)(J$.R(1010489, 'err', err, false, false)));
                                                    J$.P(1010529, J$.R(1010513, 'self', self, false, false), 'currentChunk', J$.R(1010521, 'chunk', chunk, false, false));
                                                    J$.M(1010553, J$.G(1010545, J$.R(1010537, 'self', self, false, false), 'currentChunk'), 'rewind', false)();
                                                    J$.P(1010577, J$.R(1010561, 'self', self, false, false), 'position', J$.T(1010569, 0, 22, false));
                                                    J$.F(1010609, J$.R(1010585, 'callback', callback, false, false), false)(J$.T(1010593, null, 25, false), J$.R(1010601, 'self', self, false, false));
                                                } catch (J$e) {
                                                    J$.Ex(1033385, J$e);
                                                } finally {
                                                    if (J$.Fr(1033393))
                                                        continue jalangiLabel60;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false));
                                }
                            } else {
                                J$.M(1010681, J$.G(1010673, J$.R(1010665, 'self', self, false, false), 'currentChunk'), 'rewind', false)();
                                J$.P(1010705, J$.R(1010689, 'self', self, false, false), 'position', J$.T(1010697, 0, 22, false));
                                J$.F(1010737, J$.R(1010713, 'callback', callback, false, false), false)(J$.T(1010721, null, 25, false), J$.R(1010729, 'self', self, false, false));
                            }
                        } catch (J$e) {
                            J$.Ex(1033401, J$e);
                        } finally {
                            if (J$.Fr(1033409))
                                continue jalangiLabel61;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false), rewind, false, true);
            J$.P(1011289, J$.G(1010809, J$.R(1010801, 'GridStore', GridStore, false, true), 'prototype'), 'read', J$.T(1011281, function (length, buffer, options, callback) {
                jalangiLabel62:
                    while (true) {
                        try {
                            J$.Fe(1011225, arguments.callee, this, arguments);
                            arguments = J$.N(1011233, 'arguments', arguments, true, false, false);
                            length = J$.N(1011241, 'length', length, true, false, false);
                            buffer = J$.N(1011249, 'buffer', buffer, true, false, false);
                            options = J$.N(1011257, 'options', options, true, false, false);
                            callback = J$.N(1011265, 'callback', callback, true, false, false);
                            J$.N(1011273, 'args', args, false, false, false);
                            var args = J$.W(1010865, 'args', J$.M(1010857, J$.G(1010833, J$.G(1010825, J$.I(typeof Array === 'undefined' ? Array = J$.R(1010817, 'Array', undefined, true, true) : Array = J$.R(1010817, 'Array', Array, true, true)), 'prototype'), 'slice'), 'call', false)(J$.I(typeof arguments === 'undefined' ? arguments = J$.R(1010841, 'arguments', undefined, true, true) : arguments = J$.R(1010841, 'arguments', arguments, true, true)), J$.T(1010849, 0, 22, false)), args, false, false);
                            callback = J$.W(1010945, 'callback', J$.C(61312, J$.B(104650, '===', J$.U(104642, 'typeof', J$.G(1010905, J$.R(1010873, 'args', args, false, false), J$.B(104634, '-', J$.G(1010889, J$.R(1010881, 'args', args, false, false), 'length'), J$.T(1010897, 1, 22, false)))), J$.T(1010913, 'function', 21, false))) ? J$.M(1010929, J$.R(1010921, 'args', args, false, false), 'pop', false)() : J$.T(1010937, undefined, 24, false), callback, false, false);
                            length = J$.W(1010993, 'length', J$.C(61320, J$.G(1010961, J$.R(1010953, 'args', args, false, false), 'length')) ? J$.M(1010977, J$.R(1010969, 'args', args, false, false), 'shift', false)() : J$.T(1010985, null, 25, false), length, false, false);
                            buffer = J$.W(1011041, 'buffer', J$.C(61328, J$.G(1011009, J$.R(1011001, 'args', args, false, false), 'length')) ? J$.M(1011025, J$.R(1011017, 'args', args, false, false), 'shift', false)() : J$.T(1011033, null, 25, false), buffer, false, false);
                            options = J$.W(1011089, 'options', J$.C(61336, J$.G(1011057, J$.R(1011049, 'args', args, false, false), 'length')) ? J$.M(1011073, J$.R(1011065, 'args', args, false, false), 'shift', false)() : J$.T(1011081, {}, 11, false), options, false, false);
                            return J$.Rt(1011217, J$.F(1011209, J$.R(1011097, 'executeLegacyOperation', executeLegacyOperation, false, true), false)(J$.G(1011129, J$.G(1011121, J$.G(1011113, J$.R(1011105, 'this', this, false, false), 'db'), 's'), 'topology'), J$.R(1011137, 'read', read, false, true), J$.T(1011185, [
                                J$.R(1011145, 'this', this, false, false),
                                J$.R(1011153, 'length', length, false, false),
                                J$.R(1011161, 'buffer', buffer, false, false),
                                J$.R(1011169, 'options', options, false, false),
                                J$.R(1011177, 'callback', callback, false, false)
                            ], 10, false), J$.T(1011201, { skipSessions: J$.T(1011193, true, 23, false) }, 11, false)));
                        } catch (J$e) {
                            J$.Ex(1033417, J$e);
                        } finally {
                            if (J$.Fr(1033425))
                                continue jalangiLabel62;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            var read = J$.W(1012449, 'read', J$.T(1012441, function read(self, length, buffer, options, callback) {
                jalangiLabel64:
                    while (true) {
                        try {
                            J$.Fe(1012361, arguments.callee, this, arguments);
                            arguments = J$.N(1012369, 'arguments', arguments, true, false, false);
                            self = J$.N(1012377, 'self', self, true, false, false);
                            length = J$.N(1012385, 'length', length, true, false, false);
                            buffer = J$.N(1012393, 'buffer', buffer, true, false, false);
                            options = J$.N(1012401, 'options', options, true, false, false);
                            callback = J$.N(1012409, 'callback', callback, true, false, false);
                            J$.N(1012417, 'finalLength', finalLength, false, false, false);
                            J$.N(1012425, 'finalBuffer', finalBuffer, false, false, false);
                            J$.N(1012433, 'slice', slice, false, false, false);
                            var finalLength = J$.W(1011353, 'finalLength', J$.C(61344, J$.B(104658, '==', J$.R(1011297, 'length', length, false, false), J$.T(1011305, null, 25, false))) ? J$.B(104666, '-', J$.G(1011321, J$.R(1011313, 'self', self, false, false), 'length'), J$.G(1011337, J$.R(1011329, 'self', self, false, false), 'position')) : J$.R(1011345, 'length', length, false, false), finalLength, false, false);
                            var finalBuffer = J$.W(1011409, 'finalBuffer', J$.C(61352, J$.B(104674, '==', J$.R(1011361, 'buffer', buffer, false, false), J$.T(1011369, null, 25, false))) ? J$.M(1011393, J$.R(1011377, 'Buffer', Buffer, false, true), 'alloc', false)(J$.R(1011385, 'finalLength', finalLength, false, false)) : J$.R(1011401, 'buffer', buffer, false, false), finalBuffer, false, false);
                            J$.P(1011489, J$.R(1011417, 'finalBuffer', finalBuffer, false, false), '_index', J$.C(61368, J$.C(61360, J$.B(104682, '!=', J$.R(1011425, 'buffer', buffer, false, false), J$.T(1011433, null, 25, false))) ? J$.B(104690, '!=', J$.G(1011449, J$.R(1011441, 'buffer', buffer, false, false), '_index'), J$.T(1011457, null, 25, false)) : J$._()) ? J$.G(1011473, J$.R(1011465, 'buffer', buffer, false, false), '_index') : J$.T(1011481, 0, 22, false));
                            if (J$.C(61392, J$.B(104714, '>=', J$.B(104706, '+', J$.B(104698, '-', J$.M(1011513, J$.G(1011505, J$.R(1011497, 'self', self, false, false), 'currentChunk'), 'length', false)(), J$.G(1011537, J$.G(1011529, J$.R(1011521, 'self', self, false, false), 'currentChunk'), 'position')), J$.G(1011553, J$.R(1011545, 'finalBuffer', finalBuffer, false, false), '_index')), J$.R(1011561, 'finalLength', finalLength, false, false)))) {
                                var slice = J$.W(1011617, 'slice', J$.M(1011609, J$.G(1011577, J$.R(1011569, 'self', self, false, false), 'currentChunk'), 'readSlice', false)(J$.B(104722, '-', J$.R(1011585, 'finalLength', finalLength, false, false), J$.G(1011601, J$.R(1011593, 'finalBuffer', finalBuffer, false, false), '_index'))), slice, false, false);
                                J$.M(1011657, J$.R(1011625, 'slice', slice, false, false), 'copy', false)(J$.R(1011633, 'finalBuffer', finalBuffer, false, false), J$.G(1011649, J$.R(1011641, 'finalBuffer', finalBuffer, false, false), '_index'));
                                J$.P(1011705, J$.R(1011665, 'self', self, false, false), 'position', J$.B(104730, '+', J$.G(1011681, J$.R(1011673, 'self', self, false, false), 'position'), J$.G(1011697, J$.R(1011689, 'finalBuffer', finalBuffer, false, false), 'length')));
                                if (J$.C(61384, J$.C(61376, J$.B(104738, '===', J$.R(1011713, 'finalLength', finalLength, false, false), J$.T(1011721, 0, 22, false))) ? J$.B(104746, '===', J$.G(1011737, J$.R(1011729, 'finalBuffer', finalBuffer, false, false), 'length'), J$.T(1011745, 0, 22, false)) : J$._()))
                                    return J$.Rt(1011817, J$.F(1011809, J$.R(1011753, 'callback', callback, false, false), false)(J$.M(1011793, J$.R(1011761, 'MongoError', MongoError, false, true), 'create', false)(J$.T(1011785, {
                                        message: J$.T(1011769, 'File does not exist', 21, false),
                                        driver: J$.T(1011777, true, 23, false)
                                    }, 11, false)), J$.T(1011801, null, 25, false)));
                                return J$.Rt(1011857, J$.F(1011849, J$.R(1011825, 'callback', callback, false, false), false)(J$.T(1011833, null, 25, false), J$.R(1011841, 'finalBuffer', finalBuffer, false, false)));
                            }
                            slice = J$.W(1011937, 'slice', J$.M(1011929, J$.G(1011873, J$.R(1011865, 'self', self, false, false), 'currentChunk'), 'readSlice', false)(J$.B(104754, '-', J$.M(1011897, J$.G(1011889, J$.R(1011881, 'self', self, false, false), 'currentChunk'), 'length', false)(), J$.G(1011921, J$.G(1011913, J$.R(1011905, 'self', self, false, false), 'currentChunk'), 'position'))), slice, false, false);
                            J$.M(1011977, J$.R(1011945, 'slice', slice, false, false), 'copy', false)(J$.R(1011953, 'finalBuffer', finalBuffer, false, false), J$.G(1011969, J$.R(1011961, 'finalBuffer', finalBuffer, false, false), '_index'));
                            J$.A(1012009, J$.R(1011985, 'finalBuffer', finalBuffer, false, false), '_index', '+')(J$.G(1012001, J$.R(1011993, 'slice', slice, false, false), 'length'));
                            J$.F(1012353, J$.R(1012017, 'nthChunk', nthChunk, false, true), false)(J$.R(1012025, 'self', self, false, false), J$.B(104762, '+', J$.G(1012049, J$.G(1012041, J$.R(1012033, 'self', self, false, false), 'currentChunk'), 'chunkNumber'), J$.T(1012057, 1, 22, false)), J$.T(1012345, function (err, chunk) {
                                jalangiLabel63:
                                    while (true) {
                                        try {
                                            J$.Fe(1012313, arguments.callee, this, arguments);
                                            arguments = J$.N(1012321, 'arguments', arguments, true, false, false);
                                            err = J$.N(1012329, 'err', err, true, false, false);
                                            chunk = J$.N(1012337, 'chunk', chunk, true, false, false);
                                            if (J$.C(61400, J$.R(1012065, 'err', err, false, false)))
                                                return J$.Rt(1012097, J$.F(1012089, J$.R(1012073, 'callback', callback, false, false), false)(J$.R(1012081, 'err', err, false, false)));
                                            if (J$.C(61416, J$.B(104770, '>', J$.M(1012113, J$.R(1012105, 'chunk', chunk, false, false), 'length', false)(), J$.T(1012121, 0, 22, false)))) {
                                                J$.P(1012145, J$.R(1012129, 'self', self, false, false), 'currentChunk', J$.R(1012137, 'chunk', chunk, false, false));
                                                J$.M(1012185, J$.R(1012153, 'self', self, false, false), 'read', false)(J$.R(1012161, 'length', length, false, false), J$.R(1012169, 'finalBuffer', finalBuffer, false, false), J$.R(1012177, 'callback', callback, false, false));
                                            } else {
                                                if (J$.C(61408, J$.B(104778, '>', J$.G(1012201, J$.R(1012193, 'finalBuffer', finalBuffer, false, false), '_index'), J$.T(1012209, 0, 22, false)))) {
                                                    J$.F(1012241, J$.R(1012217, 'callback', callback, false, false), false)(J$.T(1012225, null, 25, false), J$.R(1012233, 'finalBuffer', finalBuffer, false, false));
                                                } else {
                                                    J$.F(1012305, J$.R(1012249, 'callback', callback, false, false), false)(J$.M(1012289, J$.R(1012257, 'MongoError', MongoError, false, true), 'create', false)(J$.T(1012281, {
                                                        message: J$.T(1012265, 'no chunks found for file, possibly corrupt', 21, false),
                                                        driver: J$.T(1012273, true, 23, false)
                                                    }, 11, false)), J$.T(1012297, null, 25, false));
                                                }
                                            }
                                        } catch (J$e) {
                                            J$.Ex(1033433, J$e);
                                        } finally {
                                            if (J$.Fr(1033441))
                                                continue jalangiLabel63;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                        } catch (J$e) {
                            J$.Ex(1033449, J$e);
                        } finally {
                            if (J$.Fr(1033457))
                                continue jalangiLabel64;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false), read, false, true);
            J$.P(1012681, J$.G(1012465, J$.R(1012457, 'GridStore', GridStore, false, true), 'prototype'), 'tell', J$.T(1012673, function (callback) {
                jalangiLabel66:
                    while (true) {
                        try {
                            J$.Fe(1012641, arguments.callee, this, arguments);
                            arguments = J$.N(1012649, 'arguments', arguments, true, false, false);
                            callback = J$.N(1012657, 'callback', callback, true, false, false);
                            J$.N(1012665, 'self', self, false, false, false);
                            var self = J$.W(1012481, 'self', J$.R(1012473, 'this', this, false, false), self, false, false);
                            if (J$.C(61424, J$.B(104794, '===', J$.U(104786, 'typeof', J$.R(1012489, 'callback', callback, false, false)), J$.T(1012497, 'function', 21, false))))
                                return J$.Rt(1012545, J$.F(1012537, J$.R(1012505, 'callback', callback, false, false), false)(J$.T(1012513, null, 25, false), J$.G(1012529, J$.R(1012521, 'this', this, false, false), 'position')));
                            return J$.Rt(1012633, J$.M(1012625, J$.R(1012553, 'self', self, false, false), 'promiseLibrary', true)(J$.T(1012617, function (resolve) {
                                jalangiLabel65:
                                    while (true) {
                                        try {
                                            J$.Fe(1012593, arguments.callee, this, arguments);
                                            arguments = J$.N(1012601, 'arguments', arguments, true, false, false);
                                            resolve = J$.N(1012609, 'resolve', resolve, true, false, false);
                                            J$.F(1012585, J$.R(1012561, 'resolve', resolve, false, false), false)(J$.G(1012577, J$.R(1012569, 'self', self, false, false), 'position'));
                                        } catch (J$e) {
                                            J$.Ex(1033465, J$e);
                                        } finally {
                                            if (J$.Fr(1033473))
                                                continue jalangiLabel65;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false)));
                        } catch (J$e) {
                            J$.Ex(1033481, J$e);
                        } finally {
                            if (J$.Fr(1033489))
                                continue jalangiLabel66;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(1013129, J$.G(1012697, J$.R(1012689, 'GridStore', GridStore, false, true), 'prototype'), 'seek', J$.T(1013121, function (position, seekLocation, options, callback) {
                jalangiLabel67:
                    while (true) {
                        try {
                            J$.Fe(1013065, arguments.callee, this, arguments);
                            arguments = J$.N(1013073, 'arguments', arguments, true, false, false);
                            position = J$.N(1013081, 'position', position, true, false, false);
                            seekLocation = J$.N(1013089, 'seekLocation', seekLocation, true, false, false);
                            options = J$.N(1013097, 'options', options, true, false, false);
                            callback = J$.N(1013105, 'callback', callback, true, false, false);
                            J$.N(1013113, 'args', args, false, false, false);
                            var args = J$.W(1012753, 'args', J$.M(1012745, J$.G(1012721, J$.G(1012713, J$.I(typeof Array === 'undefined' ? Array = J$.R(1012705, 'Array', undefined, true, true) : Array = J$.R(1012705, 'Array', Array, true, true)), 'prototype'), 'slice'), 'call', false)(J$.I(typeof arguments === 'undefined' ? arguments = J$.R(1012729, 'arguments', undefined, true, true) : arguments = J$.R(1012729, 'arguments', arguments, true, true)), J$.T(1012737, 1, 22, false)), args, false, false);
                            callback = J$.W(1012833, 'callback', J$.C(61432, J$.B(104818, '===', J$.U(104810, 'typeof', J$.G(1012793, J$.R(1012761, 'args', args, false, false), J$.B(104802, '-', J$.G(1012777, J$.R(1012769, 'args', args, false, false), 'length'), J$.T(1012785, 1, 22, false)))), J$.T(1012801, 'function', 21, false))) ? J$.M(1012817, J$.R(1012809, 'args', args, false, false), 'pop', false)() : J$.T(1012825, undefined, 24, false), callback, false, false);
                            seekLocation = J$.W(1012881, 'seekLocation', J$.C(61440, J$.G(1012849, J$.R(1012841, 'args', args, false, false), 'length')) ? J$.M(1012865, J$.R(1012857, 'args', args, false, false), 'shift', false)() : J$.T(1012873, null, 25, false), seekLocation, false, false);
                            options = J$.W(1012929, 'options', J$.C(61448, J$.G(1012897, J$.R(1012889, 'args', args, false, false), 'length')) ? J$.M(1012913, J$.R(1012905, 'args', args, false, false), 'shift', false)() : J$.T(1012921, {}, 11, false), options, false, false);
                            return J$.Rt(1013057, J$.F(1013049, J$.R(1012937, 'executeLegacyOperation', executeLegacyOperation, false, true), false)(J$.G(1012969, J$.G(1012961, J$.G(1012953, J$.R(1012945, 'this', this, false, false), 'db'), 's'), 'topology'), J$.R(1012977, 'seek', seek, false, true), J$.T(1013025, [
                                J$.R(1012985, 'this', this, false, false),
                                J$.R(1012993, 'position', position, false, false),
                                J$.R(1013001, 'seekLocation', seekLocation, false, false),
                                J$.R(1013009, 'options', options, false, false),
                                J$.R(1013017, 'callback', callback, false, false)
                            ], 10, false), J$.T(1013041, { skipSessions: J$.T(1013033, true, 23, false) }, 11, false)));
                        } catch (J$e) {
                            J$.Ex(1033497, J$e);
                        } finally {
                            if (J$.Fr(1033505))
                                continue jalangiLabel67;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            var seek = J$.W(1013953, 'seek', J$.T(1013945, function seek(self, position, seekLocation, options, callback) {
                jalangiLabel70:
                    while (true) {
                        try {
                            J$.Fe(1013849, arguments.callee, this, arguments);
                            arguments = J$.N(1013857, 'arguments', arguments, true, false, false);
                            self = J$.N(1013865, 'self', self, true, false, false);
                            position = J$.N(1013873, 'position', position, true, false, false);
                            seekLocation = J$.N(1013881, 'seekLocation', seekLocation, true, false, false);
                            options = J$.N(1013889, 'options', options, true, false, false);
                            callback = J$.N(1013897, 'callback', callback, true, false, false);
                            J$.N(1013905, 'seekLocationFinal', seekLocationFinal, false, false, false);
                            J$.N(1013913, 'finalPosition', finalPosition, false, false, false);
                            J$.N(1013921, 'targetPosition', targetPosition, false, false, false);
                            J$.N(1013929, 'newChunkNumber', newChunkNumber, false, false, false);
                            J$.N(1013937, 'seekChunk', seekChunk, false, false, false);
                            if (J$.C(61456, J$.B(104826, '!==', J$.G(1013145, J$.R(1013137, 'self', self, false, false), 'mode'), J$.T(1013153, 'r', 21, false)))) {
                                return J$.Rt(1013217, J$.F(1013209, J$.R(1013161, 'callback', callback, false, false), false)(J$.M(1013201, J$.R(1013169, 'MongoError', MongoError, false, true), 'create', false)(J$.T(1013193, {
                                    message: J$.T(1013177, 'seek is only supported for mode r', 21, false),
                                    driver: J$.T(1013185, true, 23, false)
                                }, 11, false))));
                            }
                            var seekLocationFinal = J$.W(1013265, 'seekLocationFinal', J$.C(61464, J$.B(104834, '==', J$.R(1013225, 'seekLocation', seekLocation, false, false), J$.T(1013233, null, 25, false))) ? J$.G(1013249, J$.R(1013241, 'GridStore', GridStore, false, true), 'IO_SEEK_SET') : J$.R(1013257, 'seekLocation', seekLocation, false, false), seekLocationFinal, false, false);
                            var finalPosition = J$.W(1013281, 'finalPosition', J$.R(1013273, 'position', position, false, false), finalPosition, false, false);
                            var targetPosition = J$.W(1013297, 'targetPosition', J$.T(1013289, 0, 22, false), targetPosition, false, false);
                            if (J$.C(61480, J$.B(104842, '===', J$.R(1013305, 'seekLocationFinal', seekLocationFinal, false, false), J$.G(1013321, J$.R(1013313, 'GridStore', GridStore, false, true), 'IO_SEEK_CUR')))) {
                                targetPosition = J$.W(1013353, 'targetPosition', J$.B(104850, '+', J$.G(1013337, J$.R(1013329, 'self', self, false, false), 'position'), J$.R(1013345, 'finalPosition', finalPosition, false, false)), targetPosition, false, false);
                            } else if (J$.C(61472, J$.B(104858, '===', J$.R(1013361, 'seekLocationFinal', seekLocationFinal, false, false), J$.G(1013377, J$.R(1013369, 'GridStore', GridStore, false, true), 'IO_SEEK_END')))) {
                                targetPosition = J$.W(1013409, 'targetPosition', J$.B(104866, '+', J$.G(1013393, J$.R(1013385, 'self', self, false, false), 'length'), J$.R(1013401, 'finalPosition', finalPosition, false, false)), targetPosition, false, false);
                            } else {
                                targetPosition = J$.W(1013425, 'targetPosition', J$.R(1013417, 'finalPosition', finalPosition, false, false), targetPosition, false, false);
                            }
                            var newChunkNumber = J$.W(1013473, 'newChunkNumber', J$.M(1013465, J$.I(typeof Math === 'undefined' ? Math = J$.R(1013433, 'Math', undefined, true, true) : Math = J$.R(1013433, 'Math', Math, true, true)), 'floor', false)(J$.B(104874, '/', J$.R(1013441, 'targetPosition', targetPosition, false, false), J$.G(1013457, J$.R(1013449, 'self', self, false, false), 'chunkSize'))), newChunkNumber, false, false);
                            var seekChunk = J$.W(1013825, 'seekChunk', J$.T(1013817, function seekChunk() {
                                jalangiLabel69:
                                    while (true) {
                                        try {
                                            J$.Fe(1013801, arguments.callee, this, arguments);
                                            arguments = J$.N(1013809, 'arguments', arguments, true, false, false);
                                            J$.F(1013793, J$.R(1013481, 'nthChunk', nthChunk, false, true), false)(J$.R(1013489, 'self', self, false, false), J$.R(1013497, 'newChunkNumber', newChunkNumber, false, false), J$.T(1013785, function (err, chunk) {
                                                jalangiLabel68:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(1013753, arguments.callee, this, arguments);
                                                            arguments = J$.N(1013761, 'arguments', arguments, true, false, false);
                                                            err = J$.N(1013769, 'err', err, true, false, false);
                                                            chunk = J$.N(1013777, 'chunk', chunk, true, false, false);
                                                            if (J$.C(61488, J$.R(1013505, 'err', err, false, false)))
                                                                return J$.Rt(1013545, J$.F(1013537, J$.R(1013513, 'callback', callback, false, false), false)(J$.R(1013521, 'err', err, false, false), J$.T(1013529, null, 25, false)));
                                                            if (J$.C(61496, J$.B(104882, '==', J$.R(1013553, 'chunk', chunk, false, false), J$.T(1013561, null, 25, false))))
                                                                return J$.Rt(1013609, J$.F(1013601, J$.R(1013569, 'callback', callback, false, false), false)(J$.F(1013593, J$.I(typeof Error === 'undefined' ? Error = J$.R(1013577, 'Error', undefined, true, true) : Error = J$.R(1013577, 'Error', Error, true, true)), true)(J$.T(1013585, 'no chunk found', 21, false))));
                                                            J$.P(1013633, J$.R(1013617, 'self', self, false, false), 'currentChunk', J$.R(1013625, 'chunk', chunk, false, false));
                                                            J$.P(1013657, J$.R(1013641, 'self', self, false, false), 'position', J$.R(1013649, 'targetPosition', targetPosition, false, false));
                                                            J$.P(1013713, J$.G(1013673, J$.R(1013665, 'self', self, false, false), 'currentChunk'), 'position', J$.B(104890, '%', J$.G(1013689, J$.R(1013681, 'self', self, false, false), 'position'), J$.G(1013705, J$.R(1013697, 'self', self, false, false), 'chunkSize')));
                                                            J$.F(1013745, J$.R(1013721, 'callback', callback, false, false), false)(J$.R(1013729, 'err', err, false, false), J$.R(1013737, 'self', self, false, false));
                                                        } catch (J$e) {
                                                            J$.Ex(1033513, J$e);
                                                        } finally {
                                                            if (J$.Fr(1033521))
                                                                continue jalangiLabel68;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false));
                                        } catch (J$e) {
                                            J$.Ex(1033529, J$e);
                                        } finally {
                                            if (J$.Fr(1033537))
                                                continue jalangiLabel69;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false), seekChunk, false, false);
                            J$.F(1013841, J$.R(1013833, 'seekChunk', seekChunk, false, false), false)();
                        } catch (J$e) {
                            J$.Ex(1033545, J$e);
                        } finally {
                            if (J$.Fr(1033553))
                                continue jalangiLabel70;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false), seek, false, true);
            var _open = J$.W(1018817, '_open', J$.T(1018809, function _open(self, options, callback) {
                jalangiLabel78:
                    while (true) {
                        try {
                            J$.Fe(1018737, arguments.callee, this, arguments);
                            function error(err) {
                                jalangiLabel77:
                                    while (true) {
                                        try {
                                            J$.Fe(1018713, arguments.callee, this, arguments);
                                            arguments = J$.N(1018721, 'arguments', arguments, true, false, false);
                                            err = J$.N(1018729, 'err', err, true, false, false);
                                            if (J$.C(61864, J$.G(1018657, J$.R(1018649, 'error', error, false, false), 'err')))
                                                return J$.Rt(1018665, undefined);
                                            J$.F(1018705, J$.R(1018673, 'callback', callback, false, false), false)(J$.P(1018697, J$.R(1018681, 'error', error, false, false), 'err', J$.R(1018689, 'err', err, false, false)));
                                        } catch (J$e) {
                                            J$.Ex(1033657, J$e);
                                        } finally {
                                            if (J$.Fr(1033665))
                                                continue jalangiLabel77;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }
                            arguments = J$.N(1018745, 'arguments', arguments, true, false, false);
                            self = J$.N(1018753, 'self', self, true, false, false);
                            options = J$.N(1018761, 'options', options, true, false, false);
                            callback = J$.N(1018769, 'callback', callback, true, false, false);
                            J$.N(1018777, 'collection', collection, false, false, false);
                            J$.N(1018785, 'query', query, false, false, false);
                            error = J$.N(1018801, 'error', J$.T(1018793, error, 12, false), true, false, false);
                            var collection = J$.W(1013977, 'collection', J$.M(1013969, J$.R(1013961, 'self', self, false, false), 'collection', false)(), collection, false, false);
                            var query = J$.W(1014057, 'query', J$.C(61504, J$.B(104898, '===', J$.G(1013993, J$.R(1013985, 'self', self, false, false), 'referenceBy'), J$.R(1014001, 'REFERENCE_BY_ID', REFERENCE_BY_ID, false, true))) ? J$.T(1014025, { _id: J$.G(1014017, J$.R(1014009, 'self', self, false, false), 'fileId') }, 11, false) : J$.T(1014049, { filename: J$.G(1014041, J$.R(1014033, 'self', self, false, false), 'filename') }, 11, false), query, false, false);
                            query = J$.W(1014129, 'query', J$.C(61520, J$.C(61512, J$.B(104906, '==', J$.T(1014065, null, 25, false), J$.G(1014081, J$.R(1014073, 'self', self, false, false), 'fileId'))) ? J$.B(104914, '==', J$.G(1014097, J$.R(1014089, 'self', self, false, false), 'filename'), J$.T(1014105, null, 25, false)) : J$._()) ? J$.T(1014113, null, 25, false) : J$.R(1014121, 'query', query, false, false), query, false, false);
                            J$.P(1014161, J$.R(1014137, 'options', options, false, false), 'readPreference', J$.G(1014153, J$.R(1014145, 'self', self, false, false), 'readPreference'));
                            if (J$.C(61856, J$.B(104922, '!=', J$.R(1014169, 'query', query, false, false), J$.T(1014177, null, 25, false)))) {
                                J$.M(1017185, J$.R(1014185, 'collection', collection, false, false), 'findOne', false)(J$.R(1014193, 'query', query, false, false), J$.R(1014201, 'options', options, false, false), J$.T(1017177, function (err, doc) {
                                    jalangiLabel74:
                                        while (true) {
                                            try {
                                                J$.Fe(1017137, arguments.callee, this, arguments);
                                                arguments = J$.N(1017145, 'arguments', arguments, true, false, false);
                                                err = J$.N(1017153, 'err', err, true, false, false);
                                                doc = J$.N(1017161, 'doc', doc, true, false, false);
                                                J$.N(1017169, 'txtId', txtId, false, false, false);
                                                if (J$.C(61528, J$.R(1014209, 'err', err, false, false))) {
                                                    return J$.Rt(1014241, J$.F(1014233, J$.R(1014217, 'error', error, false, false), false)(J$.R(1014225, 'err', err, false, false)));
                                                }
                                                if (J$.C(61592, J$.B(104930, '!=', J$.R(1014249, 'doc', doc, false, false), J$.T(1014257, null, 25, false)))) {
                                                    J$.P(1014289, J$.R(1014265, 'self', self, false, false), 'fileId', J$.G(1014281, J$.R(1014273, 'doc', doc, false, false), '_id'));
                                                    J$.P(1014385, J$.R(1014297, 'self', self, false, false), 'filename', J$.C(61544, J$.C(61536, J$.B(104938, '===', J$.G(1014313, J$.R(1014305, 'self', self, false, false), 'mode'), J$.T(1014321, 'r', 21, false))) ? J$._() : J$.B(104946, '===', J$.G(1014337, J$.R(1014329, 'self', self, false, false), 'filename'), J$.T(1014345, undefined, 24, false))) ? J$.G(1014361, J$.R(1014353, 'doc', doc, false, false), 'filename') : J$.G(1014377, J$.R(1014369, 'self', self, false, false), 'filename'));
                                                    J$.P(1014417, J$.R(1014393, 'self', self, false, false), 'contentType', J$.G(1014409, J$.R(1014401, 'doc', doc, false, false), 'contentType'));
                                                    J$.P(1014449, J$.R(1014425, 'self', self, false, false), 'internalChunkSize', J$.G(1014441, J$.R(1014433, 'doc', doc, false, false), 'chunkSize'));
                                                    J$.P(1014481, J$.R(1014457, 'self', self, false, false), 'uploadDate', J$.G(1014473, J$.R(1014465, 'doc', doc, false, false), 'uploadDate'));
                                                    J$.P(1014513, J$.R(1014489, 'self', self, false, false), 'aliases', J$.G(1014505, J$.R(1014497, 'doc', doc, false, false), 'aliases'));
                                                    J$.P(1014545, J$.R(1014521, 'self', self, false, false), 'length', J$.G(1014537, J$.R(1014529, 'doc', doc, false, false), 'length'));
                                                    J$.P(1014577, J$.R(1014553, 'self', self, false, false), 'metadata', J$.G(1014569, J$.R(1014561, 'doc', doc, false, false), 'metadata'));
                                                    J$.P(1014609, J$.R(1014585, 'self', self, false, false), 'internalMd5', J$.G(1014601, J$.R(1014593, 'doc', doc, false, false), 'md5'));
                                                } else if (J$.C(61584, J$.B(104954, '!==', J$.G(1014625, J$.R(1014617, 'self', self, false, false), 'mode'), J$.T(1014633, 'r', 21, false)))) {
                                                    J$.P(1014705, J$.R(1014641, 'self', self, false, false), 'fileId', J$.C(61552, J$.B(104962, '==', J$.G(1014657, J$.R(1014649, 'self', self, false, false), 'fileId'), J$.T(1014665, null, 25, false))) ? J$.F(1014681, J$.R(1014673, 'ObjectID', ObjectID, false, true), true)() : J$.G(1014697, J$.R(1014689, 'self', self, false, false), 'fileId'));
                                                    J$.P(1014737, J$.R(1014713, 'self', self, false, false), 'contentType', J$.G(1014729, J$.R(1014721, 'GridStore', GridStore, false, true), 'DEFAULT_CONTENT_TYPE'));
                                                    J$.P(1014809, J$.R(1014745, 'self', self, false, false), 'internalChunkSize', J$.C(61560, J$.B(104970, '==', J$.G(1014761, J$.R(1014753, 'self', self, false, false), 'internalChunkSize'), J$.T(1014769, null, 25, false))) ? J$.G(1014785, J$.R(1014777, 'Chunk', Chunk, false, true), 'DEFAULT_CHUNK_SIZE') : J$.G(1014801, J$.R(1014793, 'self', self, false, false), 'internalChunkSize'));
                                                    J$.P(1014833, J$.R(1014817, 'self', self, false, false), 'length', J$.T(1014825, 0, 22, false));
                                                } else {
                                                    J$.P(1014857, J$.R(1014841, 'self', self, false, false), 'length', J$.T(1014849, 0, 22, false));
                                                    var txtId = J$.W(1014937, 'txtId', J$.C(61568, J$.B(104978, '===', J$.G(1014881, J$.G(1014873, J$.R(1014865, 'self', self, false, false), 'fileId'), '_bsontype'), J$.T(1014889, 'ObjectID', 21, false))) ? J$.M(1014913, J$.G(1014905, J$.R(1014897, 'self', self, false, false), 'fileId'), 'toHexString', false)() : J$.G(1014929, J$.R(1014921, 'self', self, false, false), 'fileId'), txtId, false, false);
                                                    return J$.Rt(1015073, J$.F(1015065, J$.R(1014945, 'error', error, false, false), false)(J$.M(1015049, J$.R(1014953, 'MongoError', MongoError, false, true), 'create', false)(J$.T(1015041, {
                                                        message: J$.F(1015025, J$.R(1014961, 'f', f, false, true), false)(J$.T(1014969, 'file with id %s not opened for writing', 21, false), J$.C(61576, J$.B(104986, '===', J$.G(1014985, J$.R(1014977, 'self', self, false, false), 'referenceBy'), J$.R(1014993, 'REFERENCE_BY_ID', REFERENCE_BY_ID, false, true))) ? J$.R(1015001, 'txtId', txtId, false, false) : J$.G(1015017, J$.R(1015009, 'self', self, false, false), 'filename')),
                                                        driver: J$.T(1015033, true, 23, false)
                                                    }, 11, false)), J$.R(1015057, 'self', self, false, false)));
                                                }
                                                if (J$.C(61744, J$.B(104994, '===', J$.G(1015089, J$.R(1015081, 'self', self, false, false), 'mode'), J$.T(1015097, 'r', 21, false)))) {
                                                    J$.F(1015297, J$.R(1015105, 'nthChunk', nthChunk, false, true), false)(J$.R(1015113, 'self', self, false, false), J$.T(1015121, 0, 22, false), J$.R(1015129, 'options', options, false, false), J$.T(1015289, function (err, chunk) {
                                                        jalangiLabel71:
                                                            while (true) {
                                                                try {
                                                                    J$.Fe(1015257, arguments.callee, this, arguments);
                                                                    arguments = J$.N(1015265, 'arguments', arguments, true, false, false);
                                                                    err = J$.N(1015273, 'err', err, true, false, false);
                                                                    chunk = J$.N(1015281, 'chunk', chunk, true, false, false);
                                                                    if (J$.C(61600, J$.R(1015137, 'err', err, false, false)))
                                                                        return J$.Rt(1015169, J$.F(1015161, J$.R(1015145, 'error', error, false, false), false)(J$.R(1015153, 'err', err, false, false)));
                                                                    J$.P(1015193, J$.R(1015177, 'self', self, false, false), 'currentChunk', J$.R(1015185, 'chunk', chunk, false, false));
                                                                    J$.P(1015217, J$.R(1015201, 'self', self, false, false), 'position', J$.T(1015209, 0, 22, false));
                                                                    J$.F(1015249, J$.R(1015225, 'callback', callback, false, false), false)(J$.T(1015233, null, 25, false), J$.R(1015241, 'self', self, false, false));
                                                                } catch (J$e) {
                                                                    J$.Ex(1033561, J$e);
                                                                } finally {
                                                                    if (J$.Fr(1033569))
                                                                        continue jalangiLabel71;
                                                                    else
                                                                        return J$.Ra();
                                                                }
                                                            }
                                                    }, 12, false));
                                                } else if (J$.C(61736, J$.C(61608, J$.B(105002, '===', J$.G(1015313, J$.R(1015305, 'self', self, false, false), 'mode'), J$.T(1015321, 'w', 21, false))) ? J$.R(1015329, 'doc', doc, false, false) : J$._())) {
                                                    J$.F(1015977, J$.R(1015337, 'deleteChunks', deleteChunks, false, true), false)(J$.R(1015345, 'self', self, false, false), J$.R(1015353, 'options', options, false, false), J$.T(1015969, function (err) {
                                                        jalangiLabel72:
                                                            while (true) {
                                                                try {
                                                                    J$.Fe(1015945, arguments.callee, this, arguments);
                                                                    arguments = J$.N(1015953, 'arguments', arguments, true, false, false);
                                                                    err = J$.N(1015961, 'err', err, true, false, false);
                                                                    if (J$.C(61616, J$.R(1015361, 'err', err, false, false)))
                                                                        return J$.Rt(1015393, J$.F(1015385, J$.R(1015369, 'error', error, false, false), false)(J$.R(1015377, 'err', err, false, false)));
                                                                    J$.P(1015465, J$.R(1015401, 'self', self, false, false), 'currentChunk', J$.F(1015457, J$.R(1015409, 'Chunk', Chunk, false, true), true)(J$.R(1015417, 'self', self, false, false), J$.T(1015433, { n: J$.T(1015425, 0, 22, false) }, 11, false), J$.G(1015449, J$.R(1015441, 'self', self, false, false), 'writeConcern')));
                                                                    J$.P(1015569, J$.R(1015473, 'self', self, false, false), 'contentType', J$.C(61624, J$.B(105010, '==', J$.G(1015505, J$.G(1015489, J$.R(1015481, 'self', self, false, false), 'options'), J$.T(1015497, 'content_type', 21, false)), J$.T(1015513, null, 25, false))) ? J$.G(1015529, J$.R(1015521, 'self', self, false, false), 'contentType') : J$.G(1015561, J$.G(1015545, J$.R(1015537, 'self', self, false, false), 'options'), J$.T(1015553, 'content_type', 21, false)));
                                                                    J$.P(1015673, J$.R(1015577, 'self', self, false, false), 'internalChunkSize', J$.C(61632, J$.B(105018, '==', J$.G(1015609, J$.G(1015593, J$.R(1015585, 'self', self, false, false), 'options'), J$.T(1015601, 'chunk_size', 21, false)), J$.T(1015617, null, 25, false))) ? J$.G(1015633, J$.R(1015625, 'self', self, false, false), 'internalChunkSize') : J$.G(1015665, J$.G(1015649, J$.R(1015641, 'self', self, false, false), 'options'), J$.T(1015657, 'chunk_size', 21, false)));
                                                                    J$.P(1015777, J$.R(1015681, 'self', self, false, false), 'metadata', J$.C(61640, J$.B(105026, '==', J$.G(1015713, J$.G(1015697, J$.R(1015689, 'self', self, false, false), 'options'), J$.T(1015705, 'metadata', 21, false)), J$.T(1015721, null, 25, false))) ? J$.G(1015737, J$.R(1015729, 'self', self, false, false), 'metadata') : J$.G(1015769, J$.G(1015753, J$.R(1015745, 'self', self, false, false), 'options'), J$.T(1015761, 'metadata', 21, false)));
                                                                    J$.P(1015881, J$.R(1015785, 'self', self, false, false), 'aliases', J$.C(61648, J$.B(105034, '==', J$.G(1015817, J$.G(1015801, J$.R(1015793, 'self', self, false, false), 'options'), J$.T(1015809, 'aliases', 21, false)), J$.T(1015825, null, 25, false))) ? J$.G(1015841, J$.R(1015833, 'self', self, false, false), 'aliases') : J$.G(1015873, J$.G(1015857, J$.R(1015849, 'self', self, false, false), 'options'), J$.T(1015865, 'aliases', 21, false)));
                                                                    J$.P(1015905, J$.R(1015889, 'self', self, false, false), 'position', J$.T(1015897, 0, 22, false));
                                                                    J$.F(1015937, J$.R(1015913, 'callback', callback, false, false), false)(J$.T(1015921, null, 25, false), J$.R(1015929, 'self', self, false, false));
                                                                } catch (J$e) {
                                                                    J$.Ex(1033577, J$e);
                                                                } finally {
                                                                    if (J$.Fr(1033585))
                                                                        continue jalangiLabel72;
                                                                    else
                                                                        return J$.Ra();
                                                                }
                                                            }
                                                    }, 12, false));
                                                } else if (J$.C(61728, J$.B(105042, '===', J$.G(1015993, J$.R(1015985, 'self', self, false, false), 'mode'), J$.T(1016001, 'w', 21, false)))) {
                                                    J$.P(1016073, J$.R(1016009, 'self', self, false, false), 'currentChunk', J$.F(1016065, J$.R(1016017, 'Chunk', Chunk, false, true), true)(J$.R(1016025, 'self', self, false, false), J$.T(1016041, { n: J$.T(1016033, 0, 22, false) }, 11, false), J$.G(1016057, J$.R(1016049, 'self', self, false, false), 'writeConcern')));
                                                    J$.P(1016177, J$.R(1016081, 'self', self, false, false), 'contentType', J$.C(61656, J$.B(105050, '==', J$.G(1016113, J$.G(1016097, J$.R(1016089, 'self', self, false, false), 'options'), J$.T(1016105, 'content_type', 21, false)), J$.T(1016121, null, 25, false))) ? J$.G(1016137, J$.R(1016129, 'self', self, false, false), 'contentType') : J$.G(1016169, J$.G(1016153, J$.R(1016145, 'self', self, false, false), 'options'), J$.T(1016161, 'content_type', 21, false)));
                                                    J$.P(1016281, J$.R(1016185, 'self', self, false, false), 'internalChunkSize', J$.C(61664, J$.B(105058, '==', J$.G(1016217, J$.G(1016201, J$.R(1016193, 'self', self, false, false), 'options'), J$.T(1016209, 'chunk_size', 21, false)), J$.T(1016225, null, 25, false))) ? J$.G(1016241, J$.R(1016233, 'self', self, false, false), 'internalChunkSize') : J$.G(1016273, J$.G(1016257, J$.R(1016249, 'self', self, false, false), 'options'), J$.T(1016265, 'chunk_size', 21, false)));
                                                    J$.P(1016385, J$.R(1016289, 'self', self, false, false), 'metadata', J$.C(61672, J$.B(105066, '==', J$.G(1016321, J$.G(1016305, J$.R(1016297, 'self', self, false, false), 'options'), J$.T(1016313, 'metadata', 21, false)), J$.T(1016329, null, 25, false))) ? J$.G(1016345, J$.R(1016337, 'self', self, false, false), 'metadata') : J$.G(1016377, J$.G(1016361, J$.R(1016353, 'self', self, false, false), 'options'), J$.T(1016369, 'metadata', 21, false)));
                                                    J$.P(1016489, J$.R(1016393, 'self', self, false, false), 'aliases', J$.C(61680, J$.B(105074, '==', J$.G(1016425, J$.G(1016409, J$.R(1016401, 'self', self, false, false), 'options'), J$.T(1016417, 'aliases', 21, false)), J$.T(1016433, null, 25, false))) ? J$.G(1016449, J$.R(1016441, 'self', self, false, false), 'aliases') : J$.G(1016481, J$.G(1016465, J$.R(1016457, 'self', self, false, false), 'options'), J$.T(1016473, 'aliases', 21, false)));
                                                    J$.P(1016513, J$.R(1016497, 'self', self, false, false), 'position', J$.T(1016505, 0, 22, false));
                                                    J$.F(1016545, J$.R(1016521, 'callback', callback, false, false), false)(J$.T(1016529, null, 25, false), J$.R(1016537, 'self', self, false, false));
                                                } else if (J$.C(61720, J$.B(105082, '===', J$.G(1016561, J$.R(1016553, 'self', self, false, false), 'mode'), J$.T(1016569, 'w+', 21, false)))) {
                                                    J$.F(1017129, J$.R(1016577, 'nthChunk', nthChunk, false, true), false)(J$.R(1016585, 'self', self, false, false), J$.F(1016609, J$.R(1016593, 'lastChunkNumber', lastChunkNumber, false, true), false)(J$.R(1016601, 'self', self, false, false)), J$.R(1016617, 'options', options, false, false), J$.T(1017121, function (err, chunk) {
                                                        jalangiLabel73:
                                                            while (true) {
                                                                try {
                                                                    J$.Fe(1017089, arguments.callee, this, arguments);
                                                                    arguments = J$.N(1017097, 'arguments', arguments, true, false, false);
                                                                    err = J$.N(1017105, 'err', err, true, false, false);
                                                                    chunk = J$.N(1017113, 'chunk', chunk, true, false, false);
                                                                    if (J$.C(61688, J$.R(1016625, 'err', err, false, false)))
                                                                        return J$.Rt(1016657, J$.F(1016649, J$.R(1016633, 'error', error, false, false), false)(J$.R(1016641, 'err', err, false, false)));
                                                                    J$.P(1016753, J$.R(1016665, 'self', self, false, false), 'currentChunk', J$.C(61696, J$.B(105090, '==', J$.R(1016673, 'chunk', chunk, false, false), J$.T(1016681, null, 25, false))) ? J$.F(1016737, J$.R(1016689, 'Chunk', Chunk, false, true), true)(J$.R(1016697, 'self', self, false, false), J$.T(1016713, { n: J$.T(1016705, 0, 22, false) }, 11, false), J$.G(1016729, J$.R(1016721, 'self', self, false, false), 'writeConcern')) : J$.R(1016745, 'chunk', chunk, false, false));
                                                                    J$.P(1016809, J$.G(1016769, J$.R(1016761, 'self', self, false, false), 'currentChunk'), 'position', J$.M(1016801, J$.G(1016793, J$.G(1016785, J$.R(1016777, 'self', self, false, false), 'currentChunk'), 'data'), 'length', false)());
                                                                    J$.P(1016913, J$.R(1016817, 'self', self, false, false), 'metadata', J$.C(61704, J$.B(105098, '==', J$.G(1016849, J$.G(1016833, J$.R(1016825, 'self', self, false, false), 'options'), J$.T(1016841, 'metadata', 21, false)), J$.T(1016857, null, 25, false))) ? J$.G(1016873, J$.R(1016865, 'self', self, false, false), 'metadata') : J$.G(1016905, J$.G(1016889, J$.R(1016881, 'self', self, false, false), 'options'), J$.T(1016897, 'metadata', 21, false)));
                                                                    J$.P(1017017, J$.R(1016921, 'self', self, false, false), 'aliases', J$.C(61712, J$.B(105106, '==', J$.G(1016953, J$.G(1016937, J$.R(1016929, 'self', self, false, false), 'options'), J$.T(1016945, 'aliases', 21, false)), J$.T(1016961, null, 25, false))) ? J$.G(1016977, J$.R(1016969, 'self', self, false, false), 'aliases') : J$.G(1017009, J$.G(1016993, J$.R(1016985, 'self', self, false, false), 'options'), J$.T(1017001, 'aliases', 21, false)));
                                                                    J$.P(1017049, J$.R(1017025, 'self', self, false, false), 'position', J$.G(1017041, J$.R(1017033, 'self', self, false, false), 'length'));
                                                                    J$.F(1017081, J$.R(1017057, 'callback', callback, false, false), false)(J$.T(1017065, null, 25, false), J$.R(1017073, 'self', self, false, false));
                                                                } catch (J$e) {
                                                                    J$.Ex(1033593, J$e);
                                                                } finally {
                                                                    if (J$.Fr(1033601))
                                                                        continue jalangiLabel73;
                                                                    else
                                                                        return J$.Ra();
                                                                }
                                                            }
                                                    }, 12, false));
                                                }
                                            } catch (J$e) {
                                                J$.Ex(1033609, J$e);
                                            } finally {
                                                if (J$.Fr(1033617))
                                                    continue jalangiLabel74;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false));
                            } else {
                                J$.P(1017257, J$.R(1017193, 'self', self, false, false), 'fileId', J$.C(61752, J$.B(105114, '==', J$.T(1017201, null, 25, false), J$.G(1017217, J$.R(1017209, 'self', self, false, false), 'fileId'))) ? J$.F(1017233, J$.R(1017225, 'ObjectID', ObjectID, false, true), true)() : J$.G(1017249, J$.R(1017241, 'self', self, false, false), 'fileId'));
                                J$.P(1017289, J$.R(1017265, 'self', self, false, false), 'contentType', J$.G(1017281, J$.R(1017273, 'GridStore', GridStore, false, true), 'DEFAULT_CONTENT_TYPE'));
                                J$.P(1017361, J$.R(1017297, 'self', self, false, false), 'internalChunkSize', J$.C(61760, J$.B(105122, '==', J$.G(1017313, J$.R(1017305, 'self', self, false, false), 'internalChunkSize'), J$.T(1017321, null, 25, false))) ? J$.G(1017337, J$.R(1017329, 'Chunk', Chunk, false, true), 'DEFAULT_CHUNK_SIZE') : J$.G(1017353, J$.R(1017345, 'self', self, false, false), 'internalChunkSize'));
                                J$.P(1017385, J$.R(1017369, 'self', self, false, false), 'length', J$.T(1017377, 0, 22, false));
                                if (J$.C(61848, J$.B(105130, '===', J$.G(1017401, J$.R(1017393, 'self', self, false, false), 'mode'), J$.T(1017409, 'w', 21, false)))) {
                                    J$.F(1018057, J$.R(1017417, 'deleteChunks', deleteChunks, false, true), false)(J$.R(1017425, 'self', self, false, false), J$.R(1017433, 'options', options, false, false), J$.T(1018049, function (err) {
                                        jalangiLabel75:
                                            while (true) {
                                                try {
                                                    J$.Fe(1018025, arguments.callee, this, arguments);
                                                    arguments = J$.N(1018033, 'arguments', arguments, true, false, false);
                                                    err = J$.N(1018041, 'err', err, true, false, false);
                                                    if (J$.C(61768, J$.R(1017441, 'err', err, false, false)))
                                                        return J$.Rt(1017473, J$.F(1017465, J$.R(1017449, 'error', error, false, false), false)(J$.R(1017457, 'err', err, false, false)));
                                                    J$.P(1017545, J$.R(1017481, 'self', self, false, false), 'currentChunk', J$.F(1017537, J$.R(1017489, 'Chunk', Chunk, false, true), true)(J$.R(1017497, 'self', self, false, false), J$.T(1017513, { n: J$.T(1017505, 0, 22, false) }, 11, false), J$.G(1017529, J$.R(1017521, 'self', self, false, false), 'writeConcern')));
                                                    J$.P(1017649, J$.R(1017553, 'self', self, false, false), 'contentType', J$.C(61776, J$.B(105138, '==', J$.G(1017585, J$.G(1017569, J$.R(1017561, 'self', self, false, false), 'options'), J$.T(1017577, 'content_type', 21, false)), J$.T(1017593, null, 25, false))) ? J$.G(1017609, J$.R(1017601, 'self', self, false, false), 'contentType') : J$.G(1017641, J$.G(1017625, J$.R(1017617, 'self', self, false, false), 'options'), J$.T(1017633, 'content_type', 21, false)));
                                                    J$.P(1017753, J$.R(1017657, 'self', self, false, false), 'internalChunkSize', J$.C(61784, J$.B(105146, '==', J$.G(1017689, J$.G(1017673, J$.R(1017665, 'self', self, false, false), 'options'), J$.T(1017681, 'chunk_size', 21, false)), J$.T(1017697, null, 25, false))) ? J$.G(1017713, J$.R(1017705, 'self', self, false, false), 'internalChunkSize') : J$.G(1017745, J$.G(1017729, J$.R(1017721, 'self', self, false, false), 'options'), J$.T(1017737, 'chunk_size', 21, false)));
                                                    J$.P(1017857, J$.R(1017761, 'self', self, false, false), 'metadata', J$.C(61792, J$.B(105154, '==', J$.G(1017793, J$.G(1017777, J$.R(1017769, 'self', self, false, false), 'options'), J$.T(1017785, 'metadata', 21, false)), J$.T(1017801, null, 25, false))) ? J$.G(1017817, J$.R(1017809, 'self', self, false, false), 'metadata') : J$.G(1017849, J$.G(1017833, J$.R(1017825, 'self', self, false, false), 'options'), J$.T(1017841, 'metadata', 21, false)));
                                                    J$.P(1017961, J$.R(1017865, 'self', self, false, false), 'aliases', J$.C(61800, J$.B(105162, '==', J$.G(1017897, J$.G(1017881, J$.R(1017873, 'self', self, false, false), 'options'), J$.T(1017889, 'aliases', 21, false)), J$.T(1017905, null, 25, false))) ? J$.G(1017921, J$.R(1017913, 'self', self, false, false), 'aliases') : J$.G(1017953, J$.G(1017937, J$.R(1017929, 'self', self, false, false), 'options'), J$.T(1017945, 'aliases', 21, false)));
                                                    J$.P(1017985, J$.R(1017969, 'self', self, false, false), 'position', J$.T(1017977, 0, 22, false));
                                                    J$.F(1018017, J$.R(1017993, 'callback', callback, false, false), false)(J$.T(1018001, null, 25, false), J$.R(1018009, 'self', self, false, false));
                                                } catch (J$e) {
                                                    J$.Ex(1033625, J$e);
                                                } finally {
                                                    if (J$.Fr(1033633))
                                                        continue jalangiLabel75;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false));
                                } else if (J$.C(61840, J$.B(105170, '===', J$.G(1018073, J$.R(1018065, 'self', self, false, false), 'mode'), J$.T(1018081, 'w+', 21, false)))) {
                                    J$.F(1018641, J$.R(1018089, 'nthChunk', nthChunk, false, true), false)(J$.R(1018097, 'self', self, false, false), J$.F(1018121, J$.R(1018105, 'lastChunkNumber', lastChunkNumber, false, true), false)(J$.R(1018113, 'self', self, false, false)), J$.R(1018129, 'options', options, false, false), J$.T(1018633, function (err, chunk) {
                                        jalangiLabel76:
                                            while (true) {
                                                try {
                                                    J$.Fe(1018601, arguments.callee, this, arguments);
                                                    arguments = J$.N(1018609, 'arguments', arguments, true, false, false);
                                                    err = J$.N(1018617, 'err', err, true, false, false);
                                                    chunk = J$.N(1018625, 'chunk', chunk, true, false, false);
                                                    if (J$.C(61808, J$.R(1018137, 'err', err, false, false)))
                                                        return J$.Rt(1018169, J$.F(1018161, J$.R(1018145, 'error', error, false, false), false)(J$.R(1018153, 'err', err, false, false)));
                                                    J$.P(1018265, J$.R(1018177, 'self', self, false, false), 'currentChunk', J$.C(61816, J$.B(105178, '==', J$.R(1018185, 'chunk', chunk, false, false), J$.T(1018193, null, 25, false))) ? J$.F(1018249, J$.R(1018201, 'Chunk', Chunk, false, true), true)(J$.R(1018209, 'self', self, false, false), J$.T(1018225, { n: J$.T(1018217, 0, 22, false) }, 11, false), J$.G(1018241, J$.R(1018233, 'self', self, false, false), 'writeConcern')) : J$.R(1018257, 'chunk', chunk, false, false));
                                                    J$.P(1018321, J$.G(1018281, J$.R(1018273, 'self', self, false, false), 'currentChunk'), 'position', J$.M(1018313, J$.G(1018305, J$.G(1018297, J$.R(1018289, 'self', self, false, false), 'currentChunk'), 'data'), 'length', false)());
                                                    J$.P(1018425, J$.R(1018329, 'self', self, false, false), 'metadata', J$.C(61824, J$.B(105186, '==', J$.G(1018361, J$.G(1018345, J$.R(1018337, 'self', self, false, false), 'options'), J$.T(1018353, 'metadata', 21, false)), J$.T(1018369, null, 25, false))) ? J$.G(1018385, J$.R(1018377, 'self', self, false, false), 'metadata') : J$.G(1018417, J$.G(1018401, J$.R(1018393, 'self', self, false, false), 'options'), J$.T(1018409, 'metadata', 21, false)));
                                                    J$.P(1018529, J$.R(1018433, 'self', self, false, false), 'aliases', J$.C(61832, J$.B(105194, '==', J$.G(1018465, J$.G(1018449, J$.R(1018441, 'self', self, false, false), 'options'), J$.T(1018457, 'aliases', 21, false)), J$.T(1018473, null, 25, false))) ? J$.G(1018489, J$.R(1018481, 'self', self, false, false), 'aliases') : J$.G(1018521, J$.G(1018505, J$.R(1018497, 'self', self, false, false), 'options'), J$.T(1018513, 'aliases', 21, false)));
                                                    J$.P(1018561, J$.R(1018537, 'self', self, false, false), 'position', J$.G(1018553, J$.R(1018545, 'self', self, false, false), 'length'));
                                                    J$.F(1018593, J$.R(1018569, 'callback', callback, false, false), false)(J$.T(1018577, null, 25, false), J$.R(1018585, 'self', self, false, false));
                                                } catch (J$e) {
                                                    J$.Ex(1033641, J$e);
                                                } finally {
                                                    if (J$.Fr(1033649))
                                                        continue jalangiLabel76;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false));
                                }
                            }
                        } catch (J$e) {
                            J$.Ex(1033673, J$e);
                        } finally {
                            if (J$.Fr(1033681))
                                continue jalangiLabel78;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false), _open, false, true);
            var writeBuffer = J$.W(1020489, 'writeBuffer', J$.T(1020481, function writeBuffer(self, buffer, close, callback) {
                jalangiLabel82:
                    while (true) {
                        try {
                            J$.Fe(1020361, arguments.callee, this, arguments);
                            arguments = J$.N(1020369, 'arguments', arguments, true, false, false);
                            self = J$.N(1020377, 'self', self, true, false, false);
                            buffer = J$.N(1020385, 'buffer', buffer, true, false, false);
                            close = J$.N(1020393, 'close', close, true, false, false);
                            callback = J$.N(1020401, 'callback', callback, true, false, false);
                            J$.N(1020409, 'finalClose', finalClose, false, false, false);
                            J$.N(1020417, 'previousChunkNumber', previousChunkNumber, false, false, false);
                            J$.N(1020425, 'leftOverDataSize', leftOverDataSize, false, false, false);
                            J$.N(1020433, 'firstChunkData', firstChunkData, false, false, false);
                            J$.N(1020441, 'leftOverData', leftOverData, false, false, false);
                            J$.N(1020449, 'chunksToWrite', chunksToWrite, false, false, false);
                            J$.N(1020457, 'newChunk', newChunk, false, false, false);
                            J$.N(1020465, 'numberOfChunksToWrite', numberOfChunksToWrite, false, false, false);
                            J$.N(1020473, 'i', i, false, false, false);
                            if (J$.C(61872, J$.B(105210, '===', J$.U(105202, 'typeof', J$.R(1018825, 'close', close, false, false)), J$.T(1018833, 'function', 21, false)))) {
                                callback = J$.W(1018849, 'callback', J$.R(1018841, 'close', close, false, false), callback, false, false);
                                close = J$.W(1018865, 'close', J$.T(1018857, null, 25, false), close, false, false);
                            }
                            var finalClose = J$.W(1018905, 'finalClose', J$.C(61880, J$.B(105226, '===', J$.U(105218, 'typeof', J$.R(1018873, 'close', close, false, false)), J$.T(1018881, 'boolean', 21, false))) ? J$.R(1018889, 'close', close, false, false) : J$.T(1018897, false, 23, false), finalClose, false, false);
                            if (J$.C(61960, J$.B(105234, '!==', J$.G(1018921, J$.R(1018913, 'self', self, false, false), 'mode'), J$.T(1018929, 'w', 21, false)))) {
                                J$.F(1019065, J$.R(1018937, 'callback', callback, false, false), false)(J$.M(1019049, J$.R(1018945, 'MongoError', MongoError, false, true), 'create', false)(J$.T(1019041, {
                                    message: J$.F(1019025, J$.R(1018953, 'f', f, false, true), false)(J$.T(1018961, 'file with id %s not opened for writing', 21, false), J$.C(61888, J$.B(105242, '===', J$.G(1018977, J$.R(1018969, 'self', self, false, false), 'referenceBy'), J$.R(1018985, 'REFERENCE_BY_ID', REFERENCE_BY_ID, false, true))) ? J$.G(1019001, J$.R(1018993, 'self', self, false, false), 'referenceBy') : J$.G(1019017, J$.R(1019009, 'self', self, false, false), 'filename')),
                                    driver: J$.T(1019033, true, 23, false)
                                }, 11, false)), J$.T(1019057, null, 25, false));
                            } else {
                                if (J$.C(61952, J$.B(105258, '>=', J$.B(105250, '+', J$.G(1019089, J$.G(1019081, J$.R(1019073, 'self', self, false, false), 'currentChunk'), 'position'), J$.G(1019105, J$.R(1019097, 'buffer', buffer, false, false), 'length')), J$.G(1019121, J$.R(1019113, 'self', self, false, false), 'chunkSize')))) {
                                    var previousChunkNumber = J$.W(1019153, 'previousChunkNumber', J$.G(1019145, J$.G(1019137, J$.R(1019129, 'self', self, false, false), 'currentChunk'), 'chunkNumber'), previousChunkNumber, false, false);
                                    var leftOverDataSize = J$.W(1019201, 'leftOverDataSize', J$.B(105266, '-', J$.G(1019169, J$.R(1019161, 'self', self, false, false), 'chunkSize'), J$.G(1019193, J$.G(1019185, J$.R(1019177, 'self', self, false, false), 'currentChunk'), 'position')), leftOverDataSize, false, false);
                                    var firstChunkData = J$.W(1019241, 'firstChunkData', J$.M(1019233, J$.R(1019209, 'buffer', buffer, false, false), 'slice', false)(J$.T(1019217, 0, 22, false), J$.R(1019225, 'leftOverDataSize', leftOverDataSize, false, false)), firstChunkData, false, false);
                                    var leftOverData = J$.W(1019273, 'leftOverData', J$.M(1019265, J$.R(1019249, 'buffer', buffer, false, false), 'slice', false)(J$.R(1019257, 'leftOverDataSize', leftOverDataSize, false, false)), leftOverData, false, false);
                                    var chunksToWrite = J$.W(1019321, 'chunksToWrite', J$.T(1019313, [J$.M(1019305, J$.G(1019289, J$.R(1019281, 'self', self, false, false), 'currentChunk'), 'write', false)(J$.R(1019297, 'firstChunkData', firstChunkData, false, false))], 10, false), chunksToWrite, false, false);
                                    while (J$.C(61896, J$.B(105274, '>=', J$.G(1019337, J$.R(1019329, 'leftOverData', leftOverData, false, false), 'length'), J$.G(1019353, J$.R(1019345, 'self', self, false, false), 'chunkSize')))) {
                                        var newChunk = J$.W(1019425, 'newChunk', J$.F(1019417, J$.R(1019361, 'Chunk', Chunk, false, true), true)(J$.R(1019369, 'self', self, false, false), J$.T(1019393, { n: J$.B(105282, '+', J$.R(1019377, 'previousChunkNumber', previousChunkNumber, false, false), J$.T(1019385, 1, 22, false)) }, 11, false), J$.G(1019409, J$.R(1019401, 'self', self, false, false), 'writeConcern')), newChunk, false, false);
                                        firstChunkData = J$.W(1019473, 'firstChunkData', J$.M(1019465, J$.R(1019433, 'leftOverData', leftOverData, false, false), 'slice', false)(J$.T(1019441, 0, 22, false), J$.G(1019457, J$.R(1019449, 'self', self, false, false), 'chunkSize')), firstChunkData, false, false);
                                        leftOverData = J$.W(1019513, 'leftOverData', J$.M(1019505, J$.R(1019481, 'leftOverData', leftOverData, false, false), 'slice', false)(J$.G(1019497, J$.R(1019489, 'self', self, false, false), 'chunkSize')), leftOverData, false, false);
                                        previousChunkNumber = J$.W(1019537, 'previousChunkNumber', J$.B(105290, '+', J$.R(1019521, 'previousChunkNumber', previousChunkNumber, false, false), J$.T(1019529, 1, 22, false)), previousChunkNumber, false, false);
                                        J$.M(1019561, J$.R(1019545, 'newChunk', newChunk, false, false), 'write', false)(J$.R(1019553, 'firstChunkData', firstChunkData, false, false));
                                        J$.M(1019585, J$.R(1019569, 'chunksToWrite', chunksToWrite, false, false), 'push', false)(J$.R(1019577, 'newChunk', newChunk, false, false));
                                    }
                                    J$.P(1019665, J$.R(1019593, 'self', self, false, false), 'currentChunk', J$.F(1019657, J$.R(1019601, 'Chunk', Chunk, false, true), true)(J$.R(1019609, 'self', self, false, false), J$.T(1019633, { n: J$.B(105298, '+', J$.R(1019617, 'previousChunkNumber', previousChunkNumber, false, false), J$.T(1019625, 1, 22, false)) }, 11, false), J$.G(1019649, J$.R(1019641, 'self', self, false, false), 'writeConcern')));
                                    if (J$.C(61904, J$.B(105306, '>', J$.G(1019681, J$.R(1019673, 'leftOverData', leftOverData, false, false), 'length'), J$.T(1019689, 0, 22, false))))
                                        J$.M(1019721, J$.G(1019705, J$.R(1019697, 'self', self, false, false), 'currentChunk'), 'write', false)(J$.R(1019713, 'leftOverData', leftOverData, false, false));
                                    J$.P(1019769, J$.R(1019729, 'self', self, false, false), 'position', J$.B(105314, '+', J$.G(1019745, J$.R(1019737, 'self', self, false, false), 'position'), J$.G(1019761, J$.R(1019753, 'buffer', buffer, false, false), 'length')));
                                    var numberOfChunksToWrite = J$.W(1019793, 'numberOfChunksToWrite', J$.G(1019785, J$.R(1019777, 'chunksToWrite', chunksToWrite, false, false), 'length'), numberOfChunksToWrite, false, false);
                                    for (var i = J$.W(1019809, 'i', J$.T(1019801, 0, 22, false), i, false, false); J$.C(61936, J$.B(105322, '<', J$.R(1019817, 'i', i, false, false), J$.G(1019833, J$.R(1019825, 'chunksToWrite', chunksToWrite, false, false), 'length'))); J$.B(105346, '-', i = J$.W(1019849, 'i', J$.B(105338, '+', J$.U(105330, '+', J$.R(1019841, 'i', i, false, false)), 1), i, false, false), 1)) {
                                        J$.M(1020137, J$.G(1019873, J$.R(1019857, 'chunksToWrite', chunksToWrite, false, false), J$.R(1019865, 'i', i, false, false)), 'save', false)(J$.T(1019881, {}, 11, false), J$.T(1020129, function (err) {
                                            jalangiLabel80:
                                                while (true) {
                                                    try {
                                                        J$.Fe(1020105, arguments.callee, this, arguments);
                                                        arguments = J$.N(1020113, 'arguments', arguments, true, false, false);
                                                        err = J$.N(1020121, 'err', err, true, false, false);
                                                        if (J$.C(61912, J$.R(1019889, 'err', err, false, false)))
                                                            return J$.Rt(1019921, J$.F(1019913, J$.R(1019897, 'callback', callback, false, false), false)(J$.R(1019905, 'err', err, false, false)));
                                                        numberOfChunksToWrite = J$.W(1019945, 'numberOfChunksToWrite', J$.B(105354, '-', J$.R(1019929, 'numberOfChunksToWrite', numberOfChunksToWrite, false, false), J$.T(1019937, 1, 22, false)), numberOfChunksToWrite, false, false);
                                                        if (J$.C(61928, J$.B(105362, '<=', J$.R(1019953, 'numberOfChunksToWrite', numberOfChunksToWrite, false, false), J$.T(1019961, 0, 22, false)))) {
                                                            if (J$.C(61920, J$.R(1019969, 'finalClose', finalClose, false, false))) {
                                                                return J$.Rt(1020057, J$.M(1020049, J$.R(1019977, 'self', self, false, false), 'close', false)(J$.T(1020041, function (err) {
                                                                    jalangiLabel79:
                                                                        while (true) {
                                                                            try {
                                                                                J$.Fe(1020017, arguments.callee, this, arguments);
                                                                                arguments = J$.N(1020025, 'arguments', arguments, true, false, false);
                                                                                err = J$.N(1020033, 'err', err, true, false, false);
                                                                                J$.F(1020009, J$.R(1019985, 'callback', callback, false, false), false)(J$.R(1019993, 'err', err, false, false), J$.R(1020001, 'self', self, false, false));
                                                                            } catch (J$e) {
                                                                                J$.Ex(1033689, J$e);
                                                                            } finally {
                                                                                if (J$.Fr(1033697))
                                                                                    continue jalangiLabel79;
                                                                                else
                                                                                    return J$.Ra();
                                                                            }
                                                                        }
                                                                }, 12, false)));
                                                            }
                                                            return J$.Rt(1020097, J$.F(1020089, J$.R(1020065, 'callback', callback, false, false), false)(J$.T(1020073, null, 25, false), J$.R(1020081, 'self', self, false, false)));
                                                        }
                                                    } catch (J$e) {
                                                        J$.Ex(1033705, J$e);
                                                    } finally {
                                                        if (J$.Fr(1033713))
                                                            continue jalangiLabel80;
                                                        else
                                                            return J$.Ra();
                                                    }
                                                }
                                        }, 12, false));
                                    }
                                } else {
                                    J$.P(1020185, J$.R(1020145, 'self', self, false, false), 'position', J$.B(105370, '+', J$.G(1020161, J$.R(1020153, 'self', self, false, false), 'position'), J$.G(1020177, J$.R(1020169, 'buffer', buffer, false, false), 'length')));
                                    J$.M(1020217, J$.G(1020201, J$.R(1020193, 'self', self, false, false), 'currentChunk'), 'write', false)(J$.R(1020209, 'buffer', buffer, false, false));
                                    if (J$.C(61944, J$.R(1020225, 'finalClose', finalClose, false, false))) {
                                        return J$.Rt(1020313, J$.M(1020305, J$.R(1020233, 'self', self, false, false), 'close', false)(J$.T(1020297, function (err) {
                                            jalangiLabel81:
                                                while (true) {
                                                    try {
                                                        J$.Fe(1020273, arguments.callee, this, arguments);
                                                        arguments = J$.N(1020281, 'arguments', arguments, true, false, false);
                                                        err = J$.N(1020289, 'err', err, true, false, false);
                                                        J$.F(1020265, J$.R(1020241, 'callback', callback, false, false), false)(J$.R(1020249, 'err', err, false, false), J$.R(1020257, 'self', self, false, false));
                                                    } catch (J$e) {
                                                        J$.Ex(1033721, J$e);
                                                    } finally {
                                                        if (J$.Fr(1033729))
                                                            continue jalangiLabel81;
                                                        else
                                                            return J$.Ra();
                                                    }
                                                }
                                        }, 12, false)));
                                    }
                                    return J$.Rt(1020353, J$.F(1020345, J$.R(1020321, 'callback', callback, false, false), false)(J$.T(1020329, null, 25, false), J$.R(1020337, 'self', self, false, false)));
                                }
                            }
                        } catch (J$e) {
                            J$.Ex(1033737, J$e);
                        } finally {
                            if (J$.Fr(1033745))
                                continue jalangiLabel82;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false), writeBuffer, false, true);
            var buildMongoObject = J$.W(1020945, 'buildMongoObject', J$.T(1020937, function buildMongoObject(self, callback) {
                jalangiLabel84:
                    while (true) {
                        try {
                            J$.Fe(1020889, arguments.callee, this, arguments);
                            arguments = J$.N(1020897, 'arguments', arguments, true, false, false);
                            self = J$.N(1020905, 'self', self, true, false, false);
                            callback = J$.N(1020913, 'callback', callback, true, false, false);
                            J$.N(1020921, 'mongoObject', mongoObject, false, false, false);
                            J$.N(1020929, 'md5Command', md5Command, false, false, false);
                            var mongoObject = J$.W(1020657, 'mongoObject', J$.T(1020649, {
                                _id: J$.G(1020505, J$.R(1020497, 'self', self, false, false), 'fileId'),
                                filename: J$.G(1020521, J$.R(1020513, 'self', self, false, false), 'filename'),
                                contentType: J$.G(1020537, J$.R(1020529, 'self', self, false, false), 'contentType'),
                                length: J$.C(61968, J$.G(1020553, J$.R(1020545, 'self', self, false, false), 'position')) ? J$.G(1020569, J$.R(1020561, 'self', self, false, false), 'position') : J$.T(1020577, 0, 22, false),
                                chunkSize: J$.G(1020593, J$.R(1020585, 'self', self, false, false), 'chunkSize'),
                                uploadDate: J$.G(1020609, J$.R(1020601, 'self', self, false, false), 'uploadDate'),
                                aliases: J$.G(1020625, J$.R(1020617, 'self', self, false, false), 'aliases'),
                                metadata: J$.G(1020641, J$.R(1020633, 'self', self, false, false), 'metadata')
                            }, 11, false), mongoObject, false, false);
                            var md5Command = J$.W(1020705, 'md5Command', J$.T(1020697, {
                                filemd5: J$.G(1020673, J$.R(1020665, 'self', self, false, false), 'fileId'),
                                root: J$.G(1020689, J$.R(1020681, 'self', self, false, false), 'root')
                            }, 11, false), md5Command, false, false);
                            J$.M(1020881, J$.G(1020721, J$.R(1020713, 'self', self, false, false), 'db'), 'command', false)(J$.R(1020729, 'md5Command', md5Command, false, false), J$.T(1020873, function (err, results) {
                                jalangiLabel83:
                                    while (true) {
                                        try {
                                            J$.Fe(1020841, arguments.callee, this, arguments);
                                            arguments = J$.N(1020849, 'arguments', arguments, true, false, false);
                                            err = J$.N(1020857, 'err', err, true, false, false);
                                            results = J$.N(1020865, 'results', results, true, false, false);
                                            if (J$.C(61976, J$.R(1020737, 'err', err, false, false)))
                                                return J$.Rt(1020769, J$.F(1020761, J$.R(1020745, 'callback', callback, false, false), false)(J$.R(1020753, 'err', err, false, false)));
                                            J$.P(1020801, J$.R(1020777, 'mongoObject', mongoObject, false, false), 'md5', J$.G(1020793, J$.R(1020785, 'results', results, false, false), 'md5'));
                                            J$.F(1020833, J$.R(1020809, 'callback', callback, false, false), false)(J$.T(1020817, null, 25, false), J$.R(1020825, 'mongoObject', mongoObject, false, false));
                                        } catch (J$e) {
                                            J$.Ex(1033753, J$e);
                                        } finally {
                                            if (J$.Fr(1033761))
                                                continue jalangiLabel83;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                        } catch (J$e) {
                            J$.Ex(1033769, J$e);
                        } finally {
                            if (J$.Fr(1033777))
                                continue jalangiLabel84;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false), buildMongoObject, false, true);
            var nthChunk = J$.W(1021385, 'nthChunk', J$.T(1021377, function nthChunk(self, chunkNumber, options, callback) {
                jalangiLabel86:
                    while (true) {
                        try {
                            J$.Fe(1021329, arguments.callee, this, arguments);
                            arguments = J$.N(1021337, 'arguments', arguments, true, false, false);
                            self = J$.N(1021345, 'self', self, true, false, false);
                            chunkNumber = J$.N(1021353, 'chunkNumber', chunkNumber, true, false, false);
                            options = J$.N(1021361, 'options', options, true, false, false);
                            callback = J$.N(1021369, 'callback', callback, true, false, false);
                            if (J$.C(61984, J$.B(105386, '===', J$.U(105378, 'typeof', J$.R(1020953, 'options', options, false, false)), J$.T(1020961, 'function', 21, false)))) {
                                callback = J$.W(1020977, 'callback', J$.R(1020969, 'options', options, false, false), callback, false, false);
                                options = J$.W(1020993, 'options', J$.T(1020985, {}, 11, false), options, false, false);
                            }
                            options = J$.W(1021025, 'options', J$.C(61992, J$.R(1021001, 'options', options, false, false)) ? J$._() : J$.G(1021017, J$.R(1021009, 'self', self, false, false), 'writeConcern'), options, false, false);
                            J$.P(1021057, J$.R(1021033, 'options', options, false, false), 'readPreference', J$.G(1021049, J$.R(1021041, 'self', self, false, false), 'readPreference'));
                            J$.M(1021321, J$.M(1021073, J$.R(1021065, 'self', self, false, false), 'chunkCollection', false)(), 'findOne', false)(J$.T(1021105, {
                                files_id: J$.G(1021089, J$.R(1021081, 'self', self, false, false), 'fileId'),
                                n: J$.R(1021097, 'chunkNumber', chunkNumber, false, false)
                            }, 11, false), J$.R(1021113, 'options', options, false, false), J$.T(1021313, function (err, chunk) {
                                jalangiLabel85:
                                    while (true) {
                                        try {
                                            J$.Fe(1021273, arguments.callee, this, arguments);
                                            arguments = J$.N(1021281, 'arguments', arguments, true, false, false);
                                            err = J$.N(1021289, 'err', err, true, false, false);
                                            chunk = J$.N(1021297, 'chunk', chunk, true, false, false);
                                            J$.N(1021305, 'finalChunk', finalChunk, false, false, false);
                                            if (J$.C(62000, J$.R(1021121, 'err', err, false, false)))
                                                return J$.Rt(1021153, J$.F(1021145, J$.R(1021129, 'callback', callback, false, false), false)(J$.R(1021137, 'err', err, false, false)));
                                            var finalChunk = J$.W(1021193, 'finalChunk', J$.C(62008, J$.B(105394, '==', J$.R(1021161, 'chunk', chunk, false, false), J$.T(1021169, null, 25, false))) ? J$.T(1021177, {}, 11, false) : J$.R(1021185, 'chunk', chunk, false, false), finalChunk, false, false);
                                            J$.F(1021265, J$.R(1021201, 'callback', callback, false, false), false)(J$.T(1021209, null, 25, false), J$.F(1021257, J$.R(1021217, 'Chunk', Chunk, false, true), true)(J$.R(1021225, 'self', self, false, false), J$.R(1021233, 'finalChunk', finalChunk, false, false), J$.G(1021249, J$.R(1021241, 'self', self, false, false), 'writeConcern')));
                                        } catch (J$e) {
                                            J$.Ex(1033785, J$e);
                                        } finally {
                                            if (J$.Fr(1033793))
                                                continue jalangiLabel85;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                        } catch (J$e) {
                            J$.Ex(1033801, J$e);
                        } finally {
                            if (J$.Fr(1033809))
                                continue jalangiLabel86;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false), nthChunk, false, true);
            var lastChunkNumber = J$.W(1021513, 'lastChunkNumber', J$.T(1021505, function lastChunkNumber(self) {
                jalangiLabel87:
                    while (true) {
                        try {
                            J$.Fe(1021481, arguments.callee, this, arguments);
                            arguments = J$.N(1021489, 'arguments', arguments, true, false, false);
                            self = J$.N(1021497, 'self', self, true, false, false);
                            return J$.Rt(1021473, J$.M(1021465, J$.I(typeof Math === 'undefined' ? Math = J$.R(1021393, 'Math', undefined, true, true) : Math = J$.R(1021393, 'Math', Math, true, true)), 'floor', false)(J$.B(105410, '/', J$.C(62016, J$.G(1021409, J$.R(1021401, 'self', self, false, false), 'length')) ? J$.B(105402, '-', J$.G(1021425, J$.R(1021417, 'self', self, false, false), 'length'), J$.T(1021433, 1, 22, false)) : J$.T(1021441, 0, 22, false), J$.G(1021457, J$.R(1021449, 'self', self, false, false), 'chunkSize'))));
                        } catch (J$e) {
                            J$.Ex(1033817, J$e);
                        } finally {
                            if (J$.Fr(1033825))
                                continue jalangiLabel87;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false), lastChunkNumber, false, true);
            var deleteChunks = J$.W(1021873, 'deleteChunks', J$.T(1021865, function deleteChunks(self, options, callback) {
                jalangiLabel89:
                    while (true) {
                        try {
                            J$.Fe(1021825, arguments.callee, this, arguments);
                            arguments = J$.N(1021833, 'arguments', arguments, true, false, false);
                            self = J$.N(1021841, 'self', self, true, false, false);
                            options = J$.N(1021849, 'options', options, true, false, false);
                            callback = J$.N(1021857, 'callback', callback, true, false, false);
                            if (J$.C(62024, J$.B(105426, '===', J$.U(105418, 'typeof', J$.R(1021521, 'options', options, false, false)), J$.T(1021529, 'function', 21, false)))) {
                                callback = J$.W(1021545, 'callback', J$.R(1021537, 'options', options, false, false), callback, false, false);
                                options = J$.W(1021561, 'options', J$.T(1021553, {}, 11, false), options, false, false);
                            }
                            options = J$.W(1021593, 'options', J$.C(62032, J$.R(1021569, 'options', options, false, false)) ? J$._() : J$.G(1021585, J$.R(1021577, 'self', self, false, false), 'writeConcern'), options, false, false);
                            if (J$.C(62048, J$.B(105434, '!=', J$.G(1021609, J$.R(1021601, 'self', self, false, false), 'fileId'), J$.T(1021617, null, 25, false)))) {
                                J$.M(1021785, J$.M(1021633, J$.R(1021625, 'self', self, false, false), 'chunkCollection', false)(), 'remove', false)(J$.T(1021657, { files_id: J$.G(1021649, J$.R(1021641, 'self', self, false, false), 'fileId') }, 11, false), J$.R(1021665, 'options', options, false, false), J$.T(1021777, function (err) {
                                    jalangiLabel88:
                                        while (true) {
                                            try {
                                                J$.Fe(1021753, arguments.callee, this, arguments);
                                                arguments = J$.N(1021761, 'arguments', arguments, true, false, false);
                                                err = J$.N(1021769, 'err', err, true, false, false);
                                                if (J$.C(62040, J$.R(1021673, 'err', err, false, false)))
                                                    return J$.Rt(1021713, J$.F(1021705, J$.R(1021681, 'callback', callback, false, false), false)(J$.R(1021689, 'err', err, false, false), J$.T(1021697, false, 23, false)));
                                                J$.F(1021745, J$.R(1021721, 'callback', callback, false, false), false)(J$.T(1021729, null, 25, false), J$.T(1021737, true, 23, false));
                                            } catch (J$e) {
                                                J$.Ex(1033833, J$e);
                                            } finally {
                                                if (J$.Fr(1033841))
                                                    continue jalangiLabel88;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false));
                            } else {
                                J$.F(1021817, J$.R(1021793, 'callback', callback, false, false), false)(J$.T(1021801, null, 25, false), J$.T(1021809, true, 23, false));
                            }
                        } catch (J$e) {
                            J$.Ex(1033849, J$e);
                        } finally {
                            if (J$.Fr(1033857))
                                continue jalangiLabel89;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false), deleteChunks, false, true);
            J$.P(1021897, J$.R(1021881, 'GridStore', GridStore, false, true), 'DEFAULT_ROOT_COLLECTION', J$.T(1021889, 'fs', 21, false));
            J$.P(1021921, J$.R(1021905, 'GridStore', GridStore, false, true), 'DEFAULT_CONTENT_TYPE', J$.T(1021913, 'binary/octet-stream', 21, false));
            J$.P(1021945, J$.R(1021929, 'GridStore', GridStore, false, true), 'IO_SEEK_SET', J$.T(1021937, 0, 22, false));
            J$.P(1021969, J$.R(1021953, 'GridStore', GridStore, false, true), 'IO_SEEK_CUR', J$.T(1021961, 1, 22, false));
            J$.P(1021993, J$.R(1021977, 'GridStore', GridStore, false, true), 'IO_SEEK_END', J$.T(1021985, 2, 22, false));
            J$.P(1022457, J$.R(1022001, 'GridStore', GridStore, false, true), 'exist', J$.T(1022449, function (db, fileIdObject, rootCollection, options, callback) {
                jalangiLabel90:
                    while (true) {
                        try {
                            J$.Fe(1022385, arguments.callee, this, arguments);
                            arguments = J$.N(1022393, 'arguments', arguments, true, false, false);
                            db = J$.N(1022401, 'db', db, true, false, false);
                            fileIdObject = J$.N(1022409, 'fileIdObject', fileIdObject, true, false, false);
                            rootCollection = J$.N(1022417, 'rootCollection', rootCollection, true, false, false);
                            options = J$.N(1022425, 'options', options, true, false, false);
                            callback = J$.N(1022433, 'callback', callback, true, false, false);
                            J$.N(1022441, 'args', args, false, false, false);
                            var args = J$.W(1022057, 'args', J$.M(1022049, J$.G(1022025, J$.G(1022017, J$.I(typeof Array === 'undefined' ? Array = J$.R(1022009, 'Array', undefined, true, true) : Array = J$.R(1022009, 'Array', Array, true, true)), 'prototype'), 'slice'), 'call', false)(J$.I(typeof arguments === 'undefined' ? arguments = J$.R(1022033, 'arguments', undefined, true, true) : arguments = J$.R(1022033, 'arguments', arguments, true, true)), J$.T(1022041, 2, 22, false)), args, false, false);
                            callback = J$.W(1022137, 'callback', J$.C(62056, J$.B(105458, '===', J$.U(105450, 'typeof', J$.G(1022097, J$.R(1022065, 'args', args, false, false), J$.B(105442, '-', J$.G(1022081, J$.R(1022073, 'args', args, false, false), 'length'), J$.T(1022089, 1, 22, false)))), J$.T(1022105, 'function', 21, false))) ? J$.M(1022121, J$.R(1022113, 'args', args, false, false), 'pop', false)() : J$.T(1022129, undefined, 24, false), callback, false, false);
                            rootCollection = J$.W(1022185, 'rootCollection', J$.C(62064, J$.G(1022153, J$.R(1022145, 'args', args, false, false), 'length')) ? J$.M(1022169, J$.R(1022161, 'args', args, false, false), 'shift', false)() : J$.T(1022177, null, 25, false), rootCollection, false, false);
                            options = J$.W(1022233, 'options', J$.C(62072, J$.G(1022201, J$.R(1022193, 'args', args, false, false), 'length')) ? J$.M(1022217, J$.R(1022209, 'args', args, false, false), 'shift', false)() : J$.T(1022225, {}, 11, false), options, false, false);
                            options = J$.W(1022257, 'options', J$.C(62080, J$.R(1022241, 'options', options, false, false)) ? J$._() : J$.T(1022249, {}, 11, false), options, false, false);
                            return J$.Rt(1022377, J$.F(1022369, J$.R(1022265, 'executeLegacyOperation', executeLegacyOperation, false, true), false)(J$.G(1022289, J$.G(1022281, J$.R(1022273, 'db', db, false, false), 's'), 'topology'), J$.R(1022297, 'exists', exists, false, true), J$.T(1022345, [
                                J$.R(1022305, 'db', db, false, false),
                                J$.R(1022313, 'fileIdObject', fileIdObject, false, false),
                                J$.R(1022321, 'rootCollection', rootCollection, false, false),
                                J$.R(1022329, 'options', options, false, false),
                                J$.R(1022337, 'callback', callback, false, false)
                            ], 10, false), J$.T(1022361, { skipSessions: J$.T(1022353, true, 23, false) }, 11, false)));
                        } catch (J$e) {
                            J$.Ex(1033865, J$e);
                        } finally {
                            if (J$.Fr(1033873))
                                continue jalangiLabel90;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            var exists = J$.W(1023145, 'exists', J$.T(1023137, function exists(db, fileIdObject, rootCollection, options, callback) {
                jalangiLabel93:
                    while (true) {
                        try {
                            J$.Fe(1023065, arguments.callee, this, arguments);
                            arguments = J$.N(1023073, 'arguments', arguments, true, false, false);
                            db = J$.N(1023081, 'db', db, true, false, false);
                            fileIdObject = J$.N(1023089, 'fileIdObject', fileIdObject, true, false, false);
                            rootCollection = J$.N(1023097, 'rootCollection', rootCollection, true, false, false);
                            options = J$.N(1023105, 'options', options, true, false, false);
                            callback = J$.N(1023113, 'callback', callback, true, false, false);
                            J$.N(1023121, 'readPreference', readPreference, false, false, false);
                            J$.N(1023129, 'rootCollectionFinal', rootCollectionFinal, false, false, false);
                            var readPreference = J$.W(1022497, 'readPreference', J$.C(62088, J$.G(1022473, J$.R(1022465, 'options', options, false, false), 'readPreference')) ? J$._() : J$.G(1022489, J$.R(1022481, 'ReadPreference', ReadPreference, false, true), 'PRIMARY'), readPreference, false, false);
                            var rootCollectionFinal = J$.W(1022545, 'rootCollectionFinal', J$.C(62096, J$.B(105466, '!=', J$.R(1022505, 'rootCollection', rootCollection, false, false), J$.T(1022513, null, 25, false))) ? J$.R(1022521, 'rootCollection', rootCollection, false, false) : J$.G(1022537, J$.R(1022529, 'GridStore', GridStore, false, true), 'DEFAULT_ROOT_COLLECTION'), rootCollectionFinal, false, false);
                            J$.M(1023057, J$.R(1022553, 'db', db, false, false), 'collection', false)(J$.B(105474, '+', J$.R(1022561, 'rootCollectionFinal', rootCollectionFinal, false, false), J$.T(1022569, '.files', 21, false)), J$.T(1023049, function (err, collection) {
                                jalangiLabel92:
                                    while (true) {
                                        try {
                                            J$.Fe(1023009, arguments.callee, this, arguments);
                                            arguments = J$.N(1023017, 'arguments', arguments, true, false, false);
                                            err = J$.N(1023025, 'err', err, true, false, false);
                                            collection = J$.N(1023033, 'collection', collection, true, false, false);
                                            J$.N(1023041, 'query', query, false, false, false);
                                            if (J$.C(62104, J$.R(1022577, 'err', err, false, false)))
                                                return J$.Rt(1022609, J$.F(1022601, J$.R(1022585, 'callback', callback, false, false), false)(J$.R(1022593, 'err', err, false, false)));
                                            var query = J$.W(1022713, 'query', J$.C(62120, J$.C(62112, J$.B(105490, '===', J$.U(105482, 'typeof', J$.R(1022617, 'fileIdObject', fileIdObject, false, false)), J$.T(1022625, 'string', 21, false))) ? J$._() : J$.B(105498, '===', J$.M(1022665, J$.G(1022649, J$.G(1022641, J$.I(typeof Object === 'undefined' ? Object = J$.R(1022633, 'Object', undefined, true, true) : Object = J$.R(1022633, 'Object', Object, true, true)), 'prototype'), 'toString'), 'call', false)(J$.R(1022657, 'fileIdObject', fileIdObject, false, false)), J$.T(1022673, '[object RegExp]', 21, false))) ? J$.T(1022689, { filename: J$.R(1022681, 'fileIdObject', fileIdObject, false, false) }, 11, false) : J$.T(1022705, { _id: J$.R(1022697, 'fileIdObject', fileIdObject, false, false) }, 11, false), query, false, false);
                                            if (J$.C(62144, J$.C(62136, J$.C(62128, J$.B(105506, '!=', J$.R(1022721, 'fileIdObject', fileIdObject, false, false), J$.T(1022729, null, 25, false))) ? J$.B(105514, '===', J$.F(1022753, J$.R(1022737, '_typeof', _typeof, false, true), false)(J$.R(1022745, 'fileIdObject', fileIdObject, false, false)), J$.T(1022761, 'object', 21, false)) : J$._()) ? J$.B(105522, '!==', J$.M(1022801, J$.G(1022785, J$.G(1022777, J$.I(typeof Object === 'undefined' ? Object = J$.R(1022769, 'Object', undefined, true, true) : Object = J$.R(1022769, 'Object', Object, true, true)), 'prototype'), 'toString'), 'call', false)(J$.R(1022793, 'fileIdObject', fileIdObject, false, false)), J$.T(1022809, '[object RegExp]', 21, false)) : J$._())) {
                                                query = J$.W(1022825, 'query', J$.R(1022817, 'fileIdObject', fileIdObject, false, false), query, false, false);
                                            }
                                            J$.M(1023001, J$.R(1022833, 'collection', collection, false, false), 'findOne', false)(J$.R(1022841, 'query', query, false, false), J$.T(1022857, { readPreference: J$.R(1022849, 'readPreference', readPreference, false, false) }, 11, false), J$.T(1022993, function (err, item) {
                                                jalangiLabel91:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(1022961, arguments.callee, this, arguments);
                                                            arguments = J$.N(1022969, 'arguments', arguments, true, false, false);
                                                            err = J$.N(1022977, 'err', err, true, false, false);
                                                            item = J$.N(1022985, 'item', item, true, false, false);
                                                            if (J$.C(62152, J$.R(1022865, 'err', err, false, false)))
                                                                return J$.Rt(1022897, J$.F(1022889, J$.R(1022873, 'callback', callback, false, false), false)(J$.R(1022881, 'err', err, false, false)));
                                                            J$.F(1022953, J$.R(1022905, 'callback', callback, false, false), false)(J$.T(1022913, null, 25, false), J$.C(62160, J$.B(105530, '==', J$.R(1022921, 'item', item, false, false), J$.T(1022929, null, 25, false))) ? J$.T(1022937, false, 23, false) : J$.T(1022945, true, 23, false));
                                                        } catch (J$e) {
                                                            J$.Ex(1033881, J$e);
                                                        } finally {
                                                            if (J$.Fr(1033889))
                                                                continue jalangiLabel91;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false));
                                        } catch (J$e) {
                                            J$.Ex(1033897, J$e);
                                        } finally {
                                            if (J$.Fr(1033905))
                                                continue jalangiLabel92;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                        } catch (J$e) {
                            J$.Ex(1033913, J$e);
                        } finally {
                            if (J$.Fr(1033921))
                                continue jalangiLabel93;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false), exists, false, true);
            J$.P(1023593, J$.R(1023153, 'GridStore', GridStore, false, true), 'list', J$.T(1023585, function (db, rootCollection, options, callback) {
                jalangiLabel94:
                    while (true) {
                        try {
                            J$.Fe(1023529, arguments.callee, this, arguments);
                            arguments = J$.N(1023537, 'arguments', arguments, true, false, false);
                            db = J$.N(1023545, 'db', db, true, false, false);
                            rootCollection = J$.N(1023553, 'rootCollection', rootCollection, true, false, false);
                            options = J$.N(1023561, 'options', options, true, false, false);
                            callback = J$.N(1023569, 'callback', callback, true, false, false);
                            J$.N(1023577, 'args', args, false, false, false);
                            var args = J$.W(1023209, 'args', J$.M(1023201, J$.G(1023177, J$.G(1023169, J$.I(typeof Array === 'undefined' ? Array = J$.R(1023161, 'Array', undefined, true, true) : Array = J$.R(1023161, 'Array', Array, true, true)), 'prototype'), 'slice'), 'call', false)(J$.I(typeof arguments === 'undefined' ? arguments = J$.R(1023185, 'arguments', undefined, true, true) : arguments = J$.R(1023185, 'arguments', arguments, true, true)), J$.T(1023193, 1, 22, false)), args, false, false);
                            callback = J$.W(1023289, 'callback', J$.C(62168, J$.B(105554, '===', J$.U(105546, 'typeof', J$.G(1023249, J$.R(1023217, 'args', args, false, false), J$.B(105538, '-', J$.G(1023233, J$.R(1023225, 'args', args, false, false), 'length'), J$.T(1023241, 1, 22, false)))), J$.T(1023257, 'function', 21, false))) ? J$.M(1023273, J$.R(1023265, 'args', args, false, false), 'pop', false)() : J$.T(1023281, undefined, 24, false), callback, false, false);
                            rootCollection = J$.W(1023337, 'rootCollection', J$.C(62176, J$.G(1023305, J$.R(1023297, 'args', args, false, false), 'length')) ? J$.M(1023321, J$.R(1023313, 'args', args, false, false), 'shift', false)() : J$.T(1023329, null, 25, false), rootCollection, false, false);
                            options = J$.W(1023385, 'options', J$.C(62184, J$.G(1023353, J$.R(1023345, 'args', args, false, false), 'length')) ? J$.M(1023369, J$.R(1023361, 'args', args, false, false), 'shift', false)() : J$.T(1023377, {}, 11, false), options, false, false);
                            options = J$.W(1023409, 'options', J$.C(62192, J$.R(1023393, 'options', options, false, false)) ? J$._() : J$.T(1023401, {}, 11, false), options, false, false);
                            return J$.Rt(1023521, J$.F(1023513, J$.R(1023417, 'executeLegacyOperation', executeLegacyOperation, false, true), false)(J$.G(1023441, J$.G(1023433, J$.R(1023425, 'db', db, false, false), 's'), 'topology'), J$.R(1023449, 'list', list, false, true), J$.T(1023489, [
                                J$.R(1023457, 'db', db, false, false),
                                J$.R(1023465, 'rootCollection', rootCollection, false, false),
                                J$.R(1023473, 'options', options, false, false),
                                J$.R(1023481, 'callback', callback, false, false)
                            ], 10, false), J$.T(1023505, { skipSessions: J$.T(1023497, true, 23, false) }, 11, false)));
                        } catch (J$e) {
                            J$.Ex(1033929, J$e);
                        } finally {
                            if (J$.Fr(1033937))
                                continue jalangiLabel94;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            var list = J$.W(1024337, 'list', J$.T(1024329, function list(db, rootCollection, options, callback) {
                jalangiLabel98:
                    while (true) {
                        try {
                            J$.Fe(1024249, arguments.callee, this, arguments);
                            arguments = J$.N(1024257, 'arguments', arguments, true, false, false);
                            db = J$.N(1024265, 'db', db, true, false, false);
                            rootCollection = J$.N(1024273, 'rootCollection', rootCollection, true, false, false);
                            options = J$.N(1024281, 'options', options, true, false, false);
                            callback = J$.N(1024289, 'callback', callback, true, false, false);
                            J$.N(1024297, 'readPreference', readPreference, false, false, false);
                            J$.N(1024305, 'byId', byId, false, false, false);
                            J$.N(1024313, 'rootCollectionFinal', rootCollectionFinal, false, false, false);
                            J$.N(1024321, 'items', items, false, false, false);
                            if (J$.C(62208, J$.C(62200, J$.B(105562, '!=', J$.R(1023601, 'rootCollection', rootCollection, false, false), J$.T(1023609, null, 25, false))) ? J$.B(105570, '===', J$.F(1023633, J$.R(1023617, '_typeof', _typeof, false, true), false)(J$.R(1023625, 'rootCollection', rootCollection, false, false)), J$.T(1023641, 'object', 21, false)) : J$._())) {
                                options = J$.W(1023657, 'options', J$.R(1023649, 'rootCollection', rootCollection, false, false), options, false, false);
                                rootCollection = J$.W(1023673, 'rootCollection', J$.T(1023665, null, 25, false), rootCollection, false, false);
                            }
                            var readPreference = J$.W(1023713, 'readPreference', J$.C(62216, J$.G(1023689, J$.R(1023681, 'options', options, false, false), 'readPreference')) ? J$._() : J$.G(1023705, J$.R(1023697, 'ReadPreference', ReadPreference, false, true), 'primary'), readPreference, false, false);
                            var byId = J$.W(1023785, 'byId', J$.C(62224, J$.B(105578, '!=', J$.G(1023737, J$.R(1023721, 'options', options, false, false), J$.T(1023729, 'id', 21, false)), J$.T(1023745, null, 25, false))) ? J$.G(1023769, J$.R(1023753, 'options', options, false, false), J$.T(1023761, 'id', 21, false)) : J$.T(1023777, false, 23, false), byId, false, false);
                            var rootCollectionFinal = J$.W(1023833, 'rootCollectionFinal', J$.C(62232, J$.B(105586, '!=', J$.R(1023793, 'rootCollection', rootCollection, false, false), J$.T(1023801, null, 25, false))) ? J$.R(1023809, 'rootCollection', rootCollection, false, false) : J$.G(1023825, J$.R(1023817, 'GridStore', GridStore, false, true), 'DEFAULT_ROOT_COLLECTION'), rootCollectionFinal, false, false);
                            var items = J$.W(1023849, 'items', J$.T(1023841, [], 10, false), items, false, false);
                            J$.M(1024241, J$.R(1023857, 'db', db, false, false), 'collection', false)(J$.B(105594, '+', J$.R(1023865, 'rootCollectionFinal', rootCollectionFinal, false, false), J$.T(1023873, '.files', 21, false)), J$.T(1024233, function (err, collection) {
                                jalangiLabel97:
                                    while (true) {
                                        try {
                                            J$.Fe(1024201, arguments.callee, this, arguments);
                                            arguments = J$.N(1024209, 'arguments', arguments, true, false, false);
                                            err = J$.N(1024217, 'err', err, true, false, false);
                                            collection = J$.N(1024225, 'collection', collection, true, false, false);
                                            if (J$.C(62240, J$.R(1023881, 'err', err, false, false)))
                                                return J$.Rt(1023913, J$.F(1023905, J$.R(1023889, 'callback', callback, false, false), false)(J$.R(1023897, 'err', err, false, false)));
                                            J$.M(1024193, J$.R(1023921, 'collection', collection, false, false), 'find', false)(J$.T(1023929, {}, 11, false), J$.T(1023945, { readPreference: J$.R(1023937, 'readPreference', readPreference, false, false) }, 11, false), J$.T(1024185, function (err, cursor) {
                                                jalangiLabel96:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(1024153, arguments.callee, this, arguments);
                                                            arguments = J$.N(1024161, 'arguments', arguments, true, false, false);
                                                            err = J$.N(1024169, 'err', err, true, false, false);
                                                            cursor = J$.N(1024177, 'cursor', cursor, true, false, false);
                                                            if (J$.C(62248, J$.R(1023953, 'err', err, false, false)))
                                                                return J$.Rt(1023985, J$.F(1023977, J$.R(1023961, 'callback', callback, false, false), false)(J$.R(1023969, 'err', err, false, false)));
                                                            J$.M(1024145, J$.R(1023993, 'cursor', cursor, false, false), 'each', false)(J$.T(1024137, function (err, item) {
                                                                jalangiLabel95:
                                                                    while (true) {
                                                                        try {
                                                                            J$.Fe(1024105, arguments.callee, this, arguments);
                                                                            arguments = J$.N(1024113, 'arguments', arguments, true, false, false);
                                                                            err = J$.N(1024121, 'err', err, true, false, false);
                                                                            item = J$.N(1024129, 'item', item, true, false, false);
                                                                            if (J$.C(62264, J$.B(105602, '!=', J$.R(1024001, 'item', item, false, false), J$.T(1024009, null, 25, false)))) {
                                                                                J$.M(1024065, J$.R(1024017, 'items', items, false, false), 'push', false)(J$.C(62256, J$.R(1024025, 'byId', byId, false, false)) ? J$.G(1024041, J$.R(1024033, 'item', item, false, false), '_id') : J$.G(1024057, J$.R(1024049, 'item', item, false, false), 'filename'));
                                                                            } else {
                                                                                J$.F(1024097, J$.R(1024073, 'callback', callback, false, false), false)(J$.R(1024081, 'err', err, false, false), J$.R(1024089, 'items', items, false, false));
                                                                            }
                                                                        } catch (J$e) {
                                                                            J$.Ex(1033945, J$e);
                                                                        } finally {
                                                                            if (J$.Fr(1033953))
                                                                                continue jalangiLabel95;
                                                                            else
                                                                                return J$.Ra();
                                                                        }
                                                                    }
                                                            }, 12, false));
                                                        } catch (J$e) {
                                                            J$.Ex(1033961, J$e);
                                                        } finally {
                                                            if (J$.Fr(1033969))
                                                                continue jalangiLabel96;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false));
                                        } catch (J$e) {
                                            J$.Ex(1033977, J$e);
                                        } finally {
                                            if (J$.Fr(1033985))
                                                continue jalangiLabel97;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                        } catch (J$e) {
                            J$.Ex(1033993, J$e);
                        } finally {
                            if (J$.Fr(1034001))
                                continue jalangiLabel98;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false), list, false, true);
            J$.P(1024865, J$.R(1024345, 'GridStore', GridStore, false, true), 'read', J$.T(1024857, function (db, name, length, offset, options, callback) {
                jalangiLabel99:
                    while (true) {
                        try {
                            J$.Fe(1024785, arguments.callee, this, arguments);
                            arguments = J$.N(1024793, 'arguments', arguments, true, false, false);
                            db = J$.N(1024801, 'db', db, true, false, false);
                            name = J$.N(1024809, 'name', name, true, false, false);
                            length = J$.N(1024817, 'length', length, true, false, false);
                            offset = J$.N(1024825, 'offset', offset, true, false, false);
                            options = J$.N(1024833, 'options', options, true, false, false);
                            callback = J$.N(1024841, 'callback', callback, true, false, false);
                            J$.N(1024849, 'args', args, false, false, false);
                            var args = J$.W(1024401, 'args', J$.M(1024393, J$.G(1024369, J$.G(1024361, J$.I(typeof Array === 'undefined' ? Array = J$.R(1024353, 'Array', undefined, true, true) : Array = J$.R(1024353, 'Array', Array, true, true)), 'prototype'), 'slice'), 'call', false)(J$.I(typeof arguments === 'undefined' ? arguments = J$.R(1024377, 'arguments', undefined, true, true) : arguments = J$.R(1024377, 'arguments', arguments, true, true)), J$.T(1024385, 2, 22, false)), args, false, false);
                            callback = J$.W(1024481, 'callback', J$.C(62272, J$.B(105626, '===', J$.U(105618, 'typeof', J$.G(1024441, J$.R(1024409, 'args', args, false, false), J$.B(105610, '-', J$.G(1024425, J$.R(1024417, 'args', args, false, false), 'length'), J$.T(1024433, 1, 22, false)))), J$.T(1024449, 'function', 21, false))) ? J$.M(1024465, J$.R(1024457, 'args', args, false, false), 'pop', false)() : J$.T(1024473, undefined, 24, false), callback, false, false);
                            length = J$.W(1024529, 'length', J$.C(62280, J$.G(1024497, J$.R(1024489, 'args', args, false, false), 'length')) ? J$.M(1024513, J$.R(1024505, 'args', args, false, false), 'shift', false)() : J$.T(1024521, null, 25, false), length, false, false);
                            offset = J$.W(1024577, 'offset', J$.C(62288, J$.G(1024545, J$.R(1024537, 'args', args, false, false), 'length')) ? J$.M(1024561, J$.R(1024553, 'args', args, false, false), 'shift', false)() : J$.T(1024569, null, 25, false), offset, false, false);
                            options = J$.W(1024625, 'options', J$.C(62296, J$.G(1024593, J$.R(1024585, 'args', args, false, false), 'length')) ? J$.M(1024609, J$.R(1024601, 'args', args, false, false), 'shift', false)() : J$.T(1024617, null, 25, false), options, false, false);
                            options = J$.W(1024649, 'options', J$.C(62304, J$.R(1024633, 'options', options, false, false)) ? J$._() : J$.T(1024641, {}, 11, false), options, false, false);
                            return J$.Rt(1024777, J$.F(1024769, J$.R(1024657, 'executeLegacyOperation', executeLegacyOperation, false, true), false)(J$.G(1024681, J$.G(1024673, J$.R(1024665, 'db', db, false, false), 's'), 'topology'), J$.R(1024689, 'readStatic', readStatic, false, true), J$.T(1024745, [
                                J$.R(1024697, 'db', db, false, false),
                                J$.R(1024705, 'name', name, false, false),
                                J$.R(1024713, 'length', length, false, false),
                                J$.R(1024721, 'offset', offset, false, false),
                                J$.R(1024729, 'options', options, false, false),
                                J$.R(1024737, 'callback', callback, false, false)
                            ], 10, false), J$.T(1024761, { skipSessions: J$.T(1024753, true, 23, false) }, 11, false)));
                        } catch (J$e) {
                            J$.Ex(1034009, J$e);
                        } finally {
                            if (J$.Fr(1034017))
                                continue jalangiLabel99;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            var readStatic = J$.W(1025497, 'readStatic', J$.T(1025489, function readStatic(db, name, length, offset, options, callback) {
                jalangiLabel102:
                    while (true) {
                        try {
                            J$.Fe(1025425, arguments.callee, this, arguments);
                            arguments = J$.N(1025433, 'arguments', arguments, true, false, false);
                            db = J$.N(1025441, 'db', db, true, false, false);
                            name = J$.N(1025449, 'name', name, true, false, false);
                            length = J$.N(1025457, 'length', length, true, false, false);
                            offset = J$.N(1025465, 'offset', offset, true, false, false);
                            options = J$.N(1025473, 'options', options, true, false, false);
                            callback = J$.N(1025481, 'callback', callback, true, false, false);
                            J$.M(1025417, J$.F(1024913, J$.R(1024873, 'GridStore', GridStore, false, true), true)(J$.R(1024881, 'db', db, false, false), J$.R(1024889, 'name', name, false, false), J$.T(1024897, 'r', 21, false), J$.R(1024905, 'options', options, false, false)), 'open', false)(J$.T(1025409, function (err, gridStore) {
                                jalangiLabel101:
                                    while (true) {
                                        try {
                                            J$.Fe(1025377, arguments.callee, this, arguments);
                                            arguments = J$.N(1025385, 'arguments', arguments, true, false, false);
                                            err = J$.N(1025393, 'err', err, true, false, false);
                                            gridStore = J$.N(1025401, 'gridStore', gridStore, true, false, false);
                                            if (J$.C(62312, J$.R(1024921, 'err', err, false, false)))
                                                return J$.Rt(1024953, J$.F(1024945, J$.R(1024929, 'callback', callback, false, false), false)(J$.R(1024937, 'err', err, false, false)));
                                            if (J$.C(62328, J$.C(62320, J$.R(1024961, 'offset', offset, false, false)) ? J$.B(105634, '>=', J$.R(1024969, 'offset', offset, false, false), J$.G(1024985, J$.R(1024977, 'gridStore', gridStore, false, false), 'length')) : J$._()))
                                                return J$.Rt(1025025, J$.F(1025017, J$.R(1024993, 'callback', callback, false, false), false)(J$.T(1025001, 'offset larger than size of file', 21, false), J$.T(1025009, null, 25, false)));
                                            if (J$.C(62344, J$.C(62336, J$.R(1025033, 'length', length, false, false)) ? J$.B(105642, '>', J$.R(1025041, 'length', length, false, false), J$.G(1025057, J$.R(1025049, 'gridStore', gridStore, false, false), 'length')) : J$._()))
                                                return J$.Rt(1025097, J$.F(1025089, J$.R(1025065, 'callback', callback, false, false), false)(J$.T(1025073, 'length is larger than the size of the file', 21, false), J$.T(1025081, null, 25, false)));
                                            if (J$.C(62368, J$.C(62360, J$.C(62352, J$.R(1025105, 'offset', offset, false, false)) ? J$.R(1025113, 'length', length, false, false) : J$._()) ? J$.B(105658, '>', J$.B(105650, '+', J$.R(1025121, 'offset', offset, false, false), J$.R(1025129, 'length', length, false, false)), J$.G(1025145, J$.R(1025137, 'gridStore', gridStore, false, false), 'length')) : J$._()))
                                                return J$.Rt(1025185, J$.F(1025177, J$.R(1025153, 'callback', callback, false, false), false)(J$.T(1025161, 'offset and length is larger than the size of the file', 21, false), J$.T(1025169, null, 25, false)));
                                            if (J$.C(62384, J$.B(105666, '!=', J$.R(1025193, 'offset', offset, false, false), J$.T(1025201, null, 25, false)))) {
                                                J$.M(1025337, J$.R(1025209, 'gridStore', gridStore, false, false), 'seek', false)(J$.R(1025217, 'offset', offset, false, false), J$.T(1025329, function (err, gridStore) {
                                                    jalangiLabel100:
                                                        while (true) {
                                                            try {
                                                                J$.Fe(1025297, arguments.callee, this, arguments);
                                                                arguments = J$.N(1025305, 'arguments', arguments, true, false, false);
                                                                err = J$.N(1025313, 'err', err, true, false, false);
                                                                gridStore = J$.N(1025321, 'gridStore', gridStore, true, false, false);
                                                                if (J$.C(62376, J$.R(1025225, 'err', err, false, false)))
                                                                    return J$.Rt(1025257, J$.F(1025249, J$.R(1025233, 'callback', callback, false, false), false)(J$.R(1025241, 'err', err, false, false)));
                                                                J$.M(1025289, J$.R(1025265, 'gridStore', gridStore, false, false), 'read', false)(J$.R(1025273, 'length', length, false, false), J$.R(1025281, 'callback', callback, false, false));
                                                            } catch (J$e) {
                                                                J$.Ex(1034025, J$e);
                                                            } finally {
                                                                if (J$.Fr(1034033))
                                                                    continue jalangiLabel100;
                                                                else
                                                                    return J$.Ra();
                                                            }
                                                        }
                                                }, 12, false));
                                            } else {
                                                J$.M(1025369, J$.R(1025345, 'gridStore', gridStore, false, false), 'read', false)(J$.R(1025353, 'length', length, false, false), J$.R(1025361, 'callback', callback, false, false));
                                            }
                                        } catch (J$e) {
                                            J$.Ex(1034041, J$e);
                                        } finally {
                                            if (J$.Fr(1034049))
                                                continue jalangiLabel101;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                        } catch (J$e) {
                            J$.Ex(1034057, J$e);
                        } finally {
                            if (J$.Fr(1034065))
                                continue jalangiLabel102;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false), readStatic, false, true);
            J$.P(1025961, J$.R(1025505, 'GridStore', GridStore, false, true), 'readlines', J$.T(1025953, function (db, name, separator, options, callback) {
                jalangiLabel103:
                    while (true) {
                        try {
                            J$.Fe(1025889, arguments.callee, this, arguments);
                            arguments = J$.N(1025897, 'arguments', arguments, true, false, false);
                            db = J$.N(1025905, 'db', db, true, false, false);
                            name = J$.N(1025913, 'name', name, true, false, false);
                            separator = J$.N(1025921, 'separator', separator, true, false, false);
                            options = J$.N(1025929, 'options', options, true, false, false);
                            callback = J$.N(1025937, 'callback', callback, true, false, false);
                            J$.N(1025945, 'args', args, false, false, false);
                            var args = J$.W(1025561, 'args', J$.M(1025553, J$.G(1025529, J$.G(1025521, J$.I(typeof Array === 'undefined' ? Array = J$.R(1025513, 'Array', undefined, true, true) : Array = J$.R(1025513, 'Array', Array, true, true)), 'prototype'), 'slice'), 'call', false)(J$.I(typeof arguments === 'undefined' ? arguments = J$.R(1025537, 'arguments', undefined, true, true) : arguments = J$.R(1025537, 'arguments', arguments, true, true)), J$.T(1025545, 2, 22, false)), args, false, false);
                            callback = J$.W(1025641, 'callback', J$.C(62392, J$.B(105690, '===', J$.U(105682, 'typeof', J$.G(1025601, J$.R(1025569, 'args', args, false, false), J$.B(105674, '-', J$.G(1025585, J$.R(1025577, 'args', args, false, false), 'length'), J$.T(1025593, 1, 22, false)))), J$.T(1025609, 'function', 21, false))) ? J$.M(1025625, J$.R(1025617, 'args', args, false, false), 'pop', false)() : J$.T(1025633, undefined, 24, false), callback, false, false);
                            separator = J$.W(1025689, 'separator', J$.C(62400, J$.G(1025657, J$.R(1025649, 'args', args, false, false), 'length')) ? J$.M(1025673, J$.R(1025665, 'args', args, false, false), 'shift', false)() : J$.T(1025681, null, 25, false), separator, false, false);
                            options = J$.W(1025737, 'options', J$.C(62408, J$.G(1025705, J$.R(1025697, 'args', args, false, false), 'length')) ? J$.M(1025721, J$.R(1025713, 'args', args, false, false), 'shift', false)() : J$.T(1025729, null, 25, false), options, false, false);
                            options = J$.W(1025761, 'options', J$.C(62416, J$.R(1025745, 'options', options, false, false)) ? J$._() : J$.T(1025753, {}, 11, false), options, false, false);
                            return J$.Rt(1025881, J$.F(1025873, J$.R(1025769, 'executeLegacyOperation', executeLegacyOperation, false, true), false)(J$.G(1025793, J$.G(1025785, J$.R(1025777, 'db', db, false, false), 's'), 'topology'), J$.R(1025801, 'readlinesStatic', readlinesStatic, false, true), J$.T(1025849, [
                                J$.R(1025809, 'db', db, false, false),
                                J$.R(1025817, 'name', name, false, false),
                                J$.R(1025825, 'separator', separator, false, false),
                                J$.R(1025833, 'options', options, false, false),
                                J$.R(1025841, 'callback', callback, false, false)
                            ], 10, false), J$.T(1025865, { skipSessions: J$.T(1025857, true, 23, false) }, 11, false)));
                        } catch (J$e) {
                            J$.Ex(1034073, J$e);
                        } finally {
                            if (J$.Fr(1034081))
                                continue jalangiLabel103;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            var readlinesStatic = J$.W(1026249, 'readlinesStatic', J$.T(1026241, function readlinesStatic(db, name, separator, options, callback) {
                jalangiLabel105:
                    while (true) {
                        try {
                            J$.Fe(1026177, arguments.callee, this, arguments);
                            arguments = J$.N(1026185, 'arguments', arguments, true, false, false);
                            db = J$.N(1026193, 'db', db, true, false, false);
                            name = J$.N(1026201, 'name', name, true, false, false);
                            separator = J$.N(1026209, 'separator', separator, true, false, false);
                            options = J$.N(1026217, 'options', options, true, false, false);
                            callback = J$.N(1026225, 'callback', callback, true, false, false);
                            J$.N(1026233, 'finalSeperator', finalSeperator, false, false, false);
                            var finalSeperator = J$.W(1026001, 'finalSeperator', J$.C(62424, J$.B(105698, '==', J$.R(1025969, 'separator', separator, false, false), J$.T(1025977, null, 25, false))) ? J$.T(1025985, '\n', 21, false) : J$.R(1025993, 'separator', separator, false, false), finalSeperator, false, false);
                            J$.M(1026169, J$.F(1026049, J$.R(1026009, 'GridStore', GridStore, false, true), true)(J$.R(1026017, 'db', db, false, false), J$.R(1026025, 'name', name, false, false), J$.T(1026033, 'r', 21, false), J$.R(1026041, 'options', options, false, false)), 'open', false)(J$.T(1026161, function (err, gridStore) {
                                jalangiLabel104:
                                    while (true) {
                                        try {
                                            J$.Fe(1026129, arguments.callee, this, arguments);
                                            arguments = J$.N(1026137, 'arguments', arguments, true, false, false);
                                            err = J$.N(1026145, 'err', err, true, false, false);
                                            gridStore = J$.N(1026153, 'gridStore', gridStore, true, false, false);
                                            if (J$.C(62432, J$.R(1026057, 'err', err, false, false)))
                                                return J$.Rt(1026089, J$.F(1026081, J$.R(1026065, 'callback', callback, false, false), false)(J$.R(1026073, 'err', err, false, false)));
                                            J$.M(1026121, J$.R(1026097, 'gridStore', gridStore, false, false), 'readlines', false)(J$.R(1026105, 'finalSeperator', finalSeperator, false, false), J$.R(1026113, 'callback', callback, false, false));
                                        } catch (J$e) {
                                            J$.Ex(1034089, J$e);
                                        } finally {
                                            if (J$.Fr(1034097))
                                                continue jalangiLabel104;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                        } catch (J$e) {
                            J$.Ex(1034105, J$e);
                        } finally {
                            if (J$.Fr(1034113))
                                continue jalangiLabel105;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false), readlinesStatic, false, true);
            J$.P(1026657, J$.R(1026257, 'GridStore', GridStore, false, true), 'unlink', J$.T(1026649, function (db, names, options, callback) {
                jalangiLabel106:
                    while (true) {
                        try {
                            J$.Fe(1026593, arguments.callee, this, arguments);
                            arguments = J$.N(1026601, 'arguments', arguments, true, false, false);
                            db = J$.N(1026609, 'db', db, true, false, false);
                            names = J$.N(1026617, 'names', names, true, false, false);
                            options = J$.N(1026625, 'options', options, true, false, false);
                            callback = J$.N(1026633, 'callback', callback, true, false, false);
                            J$.N(1026641, 'args', args, false, false, false);
                            var args = J$.W(1026313, 'args', J$.M(1026305, J$.G(1026281, J$.G(1026273, J$.I(typeof Array === 'undefined' ? Array = J$.R(1026265, 'Array', undefined, true, true) : Array = J$.R(1026265, 'Array', Array, true, true)), 'prototype'), 'slice'), 'call', false)(J$.I(typeof arguments === 'undefined' ? arguments = J$.R(1026289, 'arguments', undefined, true, true) : arguments = J$.R(1026289, 'arguments', arguments, true, true)), J$.T(1026297, 2, 22, false)), args, false, false);
                            callback = J$.W(1026393, 'callback', J$.C(62440, J$.B(105722, '===', J$.U(105714, 'typeof', J$.G(1026353, J$.R(1026321, 'args', args, false, false), J$.B(105706, '-', J$.G(1026337, J$.R(1026329, 'args', args, false, false), 'length'), J$.T(1026345, 1, 22, false)))), J$.T(1026361, 'function', 21, false))) ? J$.M(1026377, J$.R(1026369, 'args', args, false, false), 'pop', false)() : J$.T(1026385, undefined, 24, false), callback, false, false);
                            options = J$.W(1026441, 'options', J$.C(62448, J$.G(1026409, J$.R(1026401, 'args', args, false, false), 'length')) ? J$.M(1026425, J$.R(1026417, 'args', args, false, false), 'shift', false)() : J$.T(1026433, {}, 11, false), options, false, false);
                            options = J$.W(1026465, 'options', J$.C(62456, J$.R(1026449, 'options', options, false, false)) ? J$._() : J$.T(1026457, {}, 11, false), options, false, false);
                            return J$.Rt(1026585, J$.F(1026577, J$.R(1026473, 'executeLegacyOperation', executeLegacyOperation, false, true), false)(J$.G(1026497, J$.G(1026489, J$.R(1026481, 'db', db, false, false), 's'), 'topology'), J$.R(1026505, 'unlinkStatic', unlinkStatic, false, true), J$.T(1026553, [
                                J$.R(1026513, 'this', this, false, false),
                                J$.R(1026521, 'db', db, false, false),
                                J$.R(1026529, 'names', names, false, false),
                                J$.R(1026537, 'options', options, false, false),
                                J$.R(1026545, 'callback', callback, false, false)
                            ], 10, false), J$.T(1026569, { skipSessions: J$.T(1026561, true, 23, false) }, 11, false)));
                        } catch (J$e) {
                            J$.Ex(1034121, J$e);
                        } finally {
                            if (J$.Fr(1034129))
                                continue jalangiLabel106;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            var unlinkStatic = J$.W(1027481, 'unlinkStatic', J$.T(1027473, function unlinkStatic(self, db, names, options, callback) {
                jalangiLabel112:
                    while (true) {
                        try {
                            J$.Fe(1027393, arguments.callee, this, arguments);
                            arguments = J$.N(1027401, 'arguments', arguments, true, false, false);
                            self = J$.N(1027409, 'self', self, true, false, false);
                            db = J$.N(1027417, 'db', db, true, false, false);
                            names = J$.N(1027425, 'names', names, true, false, false);
                            options = J$.N(1027433, 'options', options, true, false, false);
                            callback = J$.N(1027441, 'callback', callback, true, false, false);
                            J$.N(1027449, 'writeConcern', writeConcern, false, false, false);
                            J$.N(1027457, 'tc', tc, false, false, false);
                            J$.N(1027465, 'i', i, false, false, false);
                            var writeConcern = J$.W(1026697, 'writeConcern', J$.F(1026689, J$.R(1026665, '_getWriteConcern', _getWriteConcern, false, true), false)(J$.R(1026673, 'db', db, false, false), J$.R(1026681, 'options', options, false, false)), writeConcern, false, false);
                            if (J$.C(62504, J$.B(105730, '===', J$.G(1026713, J$.R(1026705, 'names', names, false, false), 'constructor'), J$.I(typeof Array === 'undefined' ? Array = J$.R(1026721, 'Array', undefined, true, true) : Array = J$.R(1026721, 'Array', Array, true, true))))) {
                                var tc = J$.W(1026737, 'tc', J$.T(1026729, 0, 22, false), tc, false, false);
                                for (var i = J$.W(1026753, 'i', J$.T(1026745, 0, 22, false), i, false, false); J$.C(62472, J$.B(105738, '<', J$.R(1026761, 'i', i, false, false), J$.G(1026777, J$.R(1026769, 'names', names, false, false), 'length'))); J$.B(105762, '-', i = J$.W(1026793, 'i', J$.B(105754, '+', J$.U(105746, '+', J$.R(1026785, 'i', i, false, false)), 1), i, false, false), 1)) {
                                    tc = J$.W(1026809, 'tc', J$.B(105778, '+', J$.U(105770, '+', J$.R(1026801, 'tc', tc, false, false)), 1), tc, false, false);
                                    J$.M(1026945, J$.R(1026817, 'GridStore', GridStore, false, true), 'unlink', false)(J$.R(1026825, 'db', db, false, false), J$.G(1026849, J$.R(1026833, 'names', names, false, false), J$.R(1026841, 'i', i, false, false)), J$.R(1026857, 'options', options, false, false), J$.T(1026937, function () {
                                        jalangiLabel107:
                                            while (true) {
                                                try {
                                                    J$.Fe(1026921, arguments.callee, this, arguments);
                                                    arguments = J$.N(1026929, 'arguments', arguments, true, false, false);
                                                    if (J$.C(62464, J$.B(105802, '===', tc = J$.W(1026873, 'tc', J$.B(105794, '-', J$.U(105786, '+', J$.R(1026865, 'tc', tc, false, false)), 1), tc, false, false), J$.T(1026881, 0, 22, false)))) {
                                                        J$.F(1026913, J$.R(1026889, 'callback', callback, false, false), false)(J$.T(1026897, null, 25, false), J$.R(1026905, 'self', self, false, false));
                                                    }
                                                } catch (J$e) {
                                                    J$.Ex(1034137, J$e);
                                                } finally {
                                                    if (J$.Fr(1034145))
                                                        continue jalangiLabel107;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false));
                                }
                            } else {
                                J$.M(1027385, J$.F(1026993, J$.R(1026953, 'GridStore', GridStore, false, true), true)(J$.R(1026961, 'db', db, false, false), J$.R(1026969, 'names', names, false, false), J$.T(1026977, 'w', 21, false), J$.R(1026985, 'options', options, false, false)), 'open', false)(J$.T(1027377, function (err, gridStore) {
                                    jalangiLabel111:
                                        while (true) {
                                            try {
                                                J$.Fe(1027345, arguments.callee, this, arguments);
                                                arguments = J$.N(1027353, 'arguments', arguments, true, false, false);
                                                err = J$.N(1027361, 'err', err, true, false, false);
                                                gridStore = J$.N(1027369, 'gridStore', gridStore, true, false, false);
                                                if (J$.C(62480, J$.R(1027001, 'err', err, false, false)))
                                                    return J$.Rt(1027033, J$.F(1027025, J$.R(1027009, 'callback', callback, false, false), false)(J$.R(1027017, 'err', err, false, false)));
                                                J$.F(1027337, J$.R(1027041, 'deleteChunks', deleteChunks, false, true), false)(J$.R(1027049, 'gridStore', gridStore, false, false), J$.T(1027329, function (err) {
                                                    jalangiLabel110:
                                                        while (true) {
                                                            try {
                                                                J$.Fe(1027305, arguments.callee, this, arguments);
                                                                arguments = J$.N(1027313, 'arguments', arguments, true, false, false);
                                                                err = J$.N(1027321, 'err', err, true, false, false);
                                                                if (J$.C(62488, J$.R(1027057, 'err', err, false, false)))
                                                                    return J$.Rt(1027089, J$.F(1027081, J$.R(1027065, 'callback', callback, false, false), false)(J$.R(1027073, 'err', err, false, false)));
                                                                J$.M(1027297, J$.R(1027097, 'gridStore', gridStore, false, false), 'collection', false)(J$.T(1027289, function (err, collection) {
                                                                    jalangiLabel109:
                                                                        while (true) {
                                                                            try {
                                                                                J$.Fe(1027257, arguments.callee, this, arguments);
                                                                                arguments = J$.N(1027265, 'arguments', arguments, true, false, false);
                                                                                err = J$.N(1027273, 'err', err, true, false, false);
                                                                                collection = J$.N(1027281, 'collection', collection, true, false, false);
                                                                                if (J$.C(62496, J$.R(1027105, 'err', err, false, false)))
                                                                                    return J$.Rt(1027137, J$.F(1027129, J$.R(1027113, 'callback', callback, false, false), false)(J$.R(1027121, 'err', err, false, false)));
                                                                                J$.M(1027249, J$.R(1027145, 'collection', collection, false, false), 'remove', false)(J$.T(1027169, { _id: J$.G(1027161, J$.R(1027153, 'gridStore', gridStore, false, false), 'fileId') }, 11, false), J$.R(1027177, 'writeConcern', writeConcern, false, false), J$.T(1027241, function (err) {
                                                                                    jalangiLabel108:
                                                                                        while (true) {
                                                                                            try {
                                                                                                J$.Fe(1027217, arguments.callee, this, arguments);
                                                                                                arguments = J$.N(1027225, 'arguments', arguments, true, false, false);
                                                                                                err = J$.N(1027233, 'err', err, true, false, false);
                                                                                                J$.F(1027209, J$.R(1027185, 'callback', callback, false, false), false)(J$.R(1027193, 'err', err, false, false), J$.R(1027201, 'self', self, false, false));
                                                                                            } catch (J$e) {
                                                                                                J$.Ex(1034153, J$e);
                                                                                            } finally {
                                                                                                if (J$.Fr(1034161))
                                                                                                    continue jalangiLabel108;
                                                                                                else
                                                                                                    return J$.Ra();
                                                                                            }
                                                                                        }
                                                                                }, 12, false));
                                                                            } catch (J$e) {
                                                                                J$.Ex(1034169, J$e);
                                                                            } finally {
                                                                                if (J$.Fr(1034177))
                                                                                    continue jalangiLabel109;
                                                                                else
                                                                                    return J$.Ra();
                                                                            }
                                                                        }
                                                                }, 12, false));
                                                            } catch (J$e) {
                                                                J$.Ex(1034185, J$e);
                                                            } finally {
                                                                if (J$.Fr(1034193))
                                                                    continue jalangiLabel110;
                                                                else
                                                                    return J$.Ra();
                                                            }
                                                        }
                                                }, 12, false));
                                            } catch (J$e) {
                                                J$.Ex(1034201, J$e);
                                            } finally {
                                                if (J$.Fr(1034209))
                                                    continue jalangiLabel111;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false));
                            }
                        } catch (J$e) {
                            J$.Ex(1034217, J$e);
                        } finally {
                            if (J$.Fr(1034225))
                                continue jalangiLabel112;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false), unlinkStatic, false, true);
            var _writeNormal = J$.W(1027713, '_writeNormal', J$.T(1027705, function _writeNormal(self, data, close, options, callback) {
                jalangiLabel113:
                    while (true) {
                        try {
                            J$.Fe(1027649, arguments.callee, this, arguments);
                            arguments = J$.N(1027657, 'arguments', arguments, true, false, false);
                            self = J$.N(1027665, 'self', self, true, false, false);
                            data = J$.N(1027673, 'data', data, true, false, false);
                            close = J$.N(1027681, 'close', close, true, false, false);
                            options = J$.N(1027689, 'options', options, true, false, false);
                            callback = J$.N(1027697, 'callback', callback, true, false, false);
                            if (J$.C(62512, J$.M(1027505, J$.R(1027489, 'Buffer', Buffer, false, true), 'isBuffer', false)(J$.R(1027497, 'data', data, false, false)))) {
                                return J$.Rt(1027561, J$.F(1027553, J$.R(1027513, 'writeBuffer', writeBuffer, false, true), false)(J$.R(1027521, 'self', self, false, false), J$.R(1027529, 'data', data, false, false), J$.R(1027537, 'close', close, false, false), J$.R(1027545, 'callback', callback, false, false)));
                            } else {
                                return J$.Rt(1027641, J$.F(1027633, J$.R(1027569, 'writeBuffer', writeBuffer, false, true), false)(J$.R(1027577, 'self', self, false, false), J$.M(1027609, J$.R(1027585, 'Buffer', Buffer, false, true), 'from', false)(J$.R(1027593, 'data', data, false, false), J$.T(1027601, 'binary', 21, false)), J$.R(1027617, 'close', close, false, false), J$.R(1027625, 'callback', callback, false, false)));
                            }
                        } catch (J$e) {
                            J$.Ex(1034233, J$e);
                        } finally {
                            if (J$.Fr(1034241))
                                continue jalangiLabel113;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false), _writeNormal, false, true);
            var _setWriteConcernHash = J$.W(1028073, '_setWriteConcernHash', J$.T(1028065, function _setWriteConcernHash(options) {
                jalangiLabel114:
                    while (true) {
                        try {
                            J$.Fe(1028033, arguments.callee, this, arguments);
                            arguments = J$.N(1028041, 'arguments', arguments, true, false, false);
                            options = J$.N(1028049, 'options', options, true, false, false);
                            J$.N(1028057, 'finalOptions', finalOptions, false, false, false);
                            var finalOptions = J$.W(1027729, 'finalOptions', J$.T(1027721, {}, 11, false), finalOptions, false, false);
                            if (J$.C(62520, J$.B(105810, '!=', J$.G(1027745, J$.R(1027737, 'options', options, false, false), 'w'), J$.T(1027753, null, 25, false))))
                                J$.P(1027785, J$.R(1027761, 'finalOptions', finalOptions, false, false), 'w', J$.G(1027777, J$.R(1027769, 'options', options, false, false), 'w'));
                            if (J$.C(62528, J$.B(105818, '===', J$.G(1027801, J$.R(1027793, 'options', options, false, false), 'journal'), J$.T(1027809, true, 23, false))))
                                J$.P(1027841, J$.R(1027817, 'finalOptions', finalOptions, false, false), 'j', J$.G(1027833, J$.R(1027825, 'options', options, false, false), 'journal'));
                            if (J$.C(62536, J$.B(105826, '===', J$.G(1027857, J$.R(1027849, 'options', options, false, false), 'j'), J$.T(1027865, true, 23, false))))
                                J$.P(1027897, J$.R(1027873, 'finalOptions', finalOptions, false, false), 'j', J$.G(1027889, J$.R(1027881, 'options', options, false, false), 'j'));
                            if (J$.C(62544, J$.B(105834, '===', J$.G(1027913, J$.R(1027905, 'options', options, false, false), 'fsync'), J$.T(1027921, true, 23, false))))
                                J$.P(1027953, J$.R(1027929, 'finalOptions', finalOptions, false, false), 'fsync', J$.G(1027945, J$.R(1027937, 'options', options, false, false), 'fsync'));
                            if (J$.C(62552, J$.B(105842, '!=', J$.G(1027969, J$.R(1027961, 'options', options, false, false), 'wtimeout'), J$.T(1027977, null, 25, false))))
                                J$.P(1028009, J$.R(1027985, 'finalOptions', finalOptions, false, false), 'wtimeout', J$.G(1028001, J$.R(1027993, 'options', options, false, false), 'wtimeout'));
                            return J$.Rt(1028025, J$.R(1028017, 'finalOptions', finalOptions, false, false));
                        } catch (J$e) {
                            J$.Ex(1034249, J$e);
                        } finally {
                            if (J$.Fr(1034257))
                                continue jalangiLabel114;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false), _setWriteConcernHash, false, true);
            var _getWriteConcern = J$.W(1029057, '_getWriteConcern', J$.T(1029049, function _getWriteConcern(self, options) {
                jalangiLabel115:
                    while (true) {
                        try {
                            J$.Fe(1029009, arguments.callee, this, arguments);
                            arguments = J$.N(1029017, 'arguments', arguments, true, false, false);
                            self = J$.N(1029025, 'self', self, true, false, false);
                            options = J$.N(1029033, 'options', options, true, false, false);
                            J$.N(1029041, 'finalOptions', finalOptions, false, false, false);
                            var finalOptions = J$.W(1028097, 'finalOptions', J$.T(1028089, { w: J$.T(1028081, 1, 22, false) }, 11, false), finalOptions, false, false);
                            options = J$.W(1028121, 'options', J$.C(62560, J$.R(1028105, 'options', options, false, false)) ? J$._() : J$.T(1028113, {}, 11, false), options, false, false);
                            if (J$.C(62712, J$.C(62584, J$.C(62576, J$.C(62568, J$.B(105850, '!=', J$.G(1028137, J$.R(1028129, 'options', options, false, false), 'w'), J$.T(1028145, null, 25, false))) ? J$._() : J$.B(105866, '===', J$.U(105858, 'typeof', J$.G(1028161, J$.R(1028153, 'options', options, false, false), 'j')), J$.T(1028169, 'boolean', 21, false))) ? J$._() : J$.B(105882, '===', J$.U(105874, 'typeof', J$.G(1028185, J$.R(1028177, 'options', options, false, false), 'journal')), J$.T(1028193, 'boolean', 21, false))) ? J$._() : J$.B(105898, '===', J$.U(105890, 'typeof', J$.G(1028209, J$.R(1028201, 'options', options, false, false), 'fsync')), J$.T(1028217, 'boolean', 21, false)))) {
                                finalOptions = J$.W(1028249, 'finalOptions', J$.F(1028241, J$.R(1028225, '_setWriteConcernHash', _setWriteConcernHash, false, true), false)(J$.R(1028233, 'options', options, false, false)), finalOptions, false, false);
                            } else if (J$.C(62704, J$.C(62592, J$.B(105906, '!=', J$.G(1028265, J$.R(1028257, 'options', options, false, false), 'safe'), J$.T(1028273, null, 25, false))) ? J$.B(105914, '===', J$.F(1028305, J$.R(1028281, '_typeof', _typeof, false, true), false)(J$.G(1028297, J$.R(1028289, 'options', options, false, false), 'safe')), J$.T(1028313, 'object', 21, false)) : J$._())) {
                                finalOptions = J$.W(1028353, 'finalOptions', J$.F(1028345, J$.R(1028321, '_setWriteConcernHash', _setWriteConcernHash, false, true), false)(J$.G(1028337, J$.R(1028329, 'options', options, false, false), 'safe')), finalOptions, false, false);
                            } else if (J$.C(62696, J$.B(105930, '===', J$.U(105922, 'typeof', J$.G(1028369, J$.R(1028361, 'options', options, false, false), 'safe')), J$.T(1028377, 'boolean', 21, false)))) {
                                finalOptions = J$.W(1028425, 'finalOptions', J$.T(1028417, { w: J$.C(62600, J$.G(1028393, J$.R(1028385, 'options', options, false, false), 'safe')) ? J$.T(1028401, 1, 22, false) : J$.T(1028409, 0, 22, false) }, 11, false), finalOptions, false, false);
                            } else if (J$.C(62688, J$.C(62624, J$.C(62616, J$.C(62608, J$.B(105938, '!=', J$.G(1028449, J$.G(1028441, J$.R(1028433, 'self', self, false, false), 'options'), 'w'), J$.T(1028457, null, 25, false))) ? J$._() : J$.B(105954, '===', J$.U(105946, 'typeof', J$.G(1028481, J$.G(1028473, J$.R(1028465, 'self', self, false, false), 'options'), 'j')), J$.T(1028489, 'boolean', 21, false))) ? J$._() : J$.B(105970, '===', J$.U(105962, 'typeof', J$.G(1028513, J$.G(1028505, J$.R(1028497, 'self', self, false, false), 'options'), 'journal')), J$.T(1028521, 'boolean', 21, false))) ? J$._() : J$.B(105986, '===', J$.U(105978, 'typeof', J$.G(1028545, J$.G(1028537, J$.R(1028529, 'self', self, false, false), 'options'), 'fsync')), J$.T(1028553, 'boolean', 21, false)))) {
                                finalOptions = J$.W(1028593, 'finalOptions', J$.F(1028585, J$.R(1028561, '_setWriteConcernHash', _setWriteConcernHash, false, true), false)(J$.G(1028577, J$.R(1028569, 'self', self, false, false), 'options')), finalOptions, false, false);
                            } else if (J$.C(62680, J$.C(62656, J$.G(1028609, J$.R(1028601, 'self', self, false, false), 'safe')) ? J$.C(62648, J$.C(62640, J$.C(62632, J$.B(105994, '!=', J$.G(1028633, J$.G(1028625, J$.R(1028617, 'self', self, false, false), 'safe'), 'w'), J$.T(1028641, null, 25, false))) ? J$._() : J$.B(106010, '===', J$.U(106002, 'typeof', J$.G(1028665, J$.G(1028657, J$.R(1028649, 'self', self, false, false), 'safe'), 'j')), J$.T(1028673, 'boolean', 21, false))) ? J$._() : J$.B(106026, '===', J$.U(106018, 'typeof', J$.G(1028697, J$.G(1028689, J$.R(1028681, 'self', self, false, false), 'safe'), 'journal')), J$.T(1028705, 'boolean', 21, false))) ? J$._() : J$.B(106042, '===', J$.U(106034, 'typeof', J$.G(1028729, J$.G(1028721, J$.R(1028713, 'self', self, false, false), 'safe'), 'fsync')), J$.T(1028737, 'boolean', 21, false)) : J$._())) {
                                finalOptions = J$.W(1028777, 'finalOptions', J$.F(1028769, J$.R(1028745, '_setWriteConcernHash', _setWriteConcernHash, false, true), false)(J$.G(1028761, J$.R(1028753, 'self', self, false, false), 'safe')), finalOptions, false, false);
                            } else if (J$.C(62672, J$.B(106058, '===', J$.U(106050, 'typeof', J$.G(1028793, J$.R(1028785, 'self', self, false, false), 'safe')), J$.T(1028801, 'boolean', 21, false)))) {
                                finalOptions = J$.W(1028849, 'finalOptions', J$.T(1028841, { w: J$.C(62664, J$.G(1028817, J$.R(1028809, 'self', self, false, false), 'safe')) ? J$.T(1028825, 1, 22, false) : J$.T(1028833, 0, 22, false) }, 11, false), finalOptions, false, false);
                            }
                            if (J$.C(62744, J$.C(62736, J$.B(106066, '<', J$.G(1028865, J$.R(1028857, 'finalOptions', finalOptions, false, false), 'w'), J$.T(1028873, 1, 22, false))) ? J$.C(62728, J$.C(62720, J$.B(106074, '===', J$.G(1028889, J$.R(1028881, 'finalOptions', finalOptions, false, false), 'journal'), J$.T(1028897, true, 23, false))) ? J$._() : J$.B(106082, '===', J$.G(1028913, J$.R(1028905, 'finalOptions', finalOptions, false, false), 'j'), J$.T(1028921, true, 23, false))) ? J$._() : J$.B(106090, '===', J$.G(1028937, J$.R(1028929, 'finalOptions', finalOptions, false, false), 'fsync'), J$.T(1028945, true, 23, false)) : J$._()))
                                throw J$.M(1028985, J$.R(1028953, 'MongoError', MongoError, false, true), 'create', false)(J$.T(1028977, {
                                    message: J$.T(1028961, 'No acknowledgement using w < 1 cannot be combined with journal:true or fsync:true', 21, false),
                                    driver: J$.T(1028969, true, 23, false)
                                }, 11, false));
                            return J$.Rt(1029001, J$.R(1028993, 'finalOptions', finalOptions, false, false));
                        } catch (J$e) {
                            J$.Ex(1034265, J$e);
                        } finally {
                            if (J$.Fr(1034273))
                                continue jalangiLabel115;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false), _getWriteConcern, false, true);
            var GridStoreStream = J$.W(1029273, 'GridStoreStream', J$.T(1029265, function GridStoreStream(gs) {
                jalangiLabel116:
                    while (true) {
                        try {
                            J$.Fe(1029241, arguments.callee, this, arguments);
                            arguments = J$.N(1029249, 'arguments', arguments, true, false, false);
                            gs = J$.N(1029257, 'gs', gs, true, false, false);
                            J$.M(1029081, J$.R(1029065, 'Duplex', Duplex, false, true), 'call', false)(J$.R(1029073, 'this', this, false, false));
                            J$.P(1029105, J$.R(1029089, 'this', this, false, false), 'gs', J$.R(1029097, 'gs', gs, false, false));
                            J$.P(1029129, J$.R(1029113, 'this', this, false, false), 'endCalled', J$.T(1029121, false, 23, false));
                            J$.P(1029193, J$.R(1029137, 'this', this, false, false), 'totalBytesToRead', J$.B(106098, '-', J$.G(1029161, J$.G(1029153, J$.R(1029145, 'this', this, false, false), 'gs'), 'length'), J$.G(1029185, J$.G(1029177, J$.R(1029169, 'this', this, false, false), 'gs'), 'position')));
                            J$.P(1029233, J$.R(1029201, 'this', this, false, false), 'seekPosition', J$.G(1029225, J$.G(1029217, J$.R(1029209, 'this', this, false, false), 'gs'), 'position'));
                        } catch (J$e) {
                            J$.Ex(1034281, J$e);
                        } finally {
                            if (J$.Fr(1034289))
                                continue jalangiLabel116;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false), GridStoreStream, false, true);
            J$.F(1029305, J$.R(1029281, 'inherits', inherits, false, true), false)(J$.R(1029289, 'GridStoreStream', GridStoreStream, false, true), J$.R(1029297, 'Duplex', Duplex, false, true));
            J$.P(1029353, J$.G(1029321, J$.R(1029313, 'GridStoreStream', GridStoreStream, false, true), 'prototype'), '_pipe', J$.G(1029345, J$.G(1029337, J$.R(1029329, 'GridStoreStream', GridStoreStream, false, true), 'prototype'), 'pipe'));
            J$.P(1029801, J$.G(1029369, J$.R(1029361, 'GridStoreStream', GridStoreStream, false, true), 'prototype'), 'pipe', J$.T(1029793, function (destination) {
                jalangiLabel118:
                    while (true) {
                        try {
                            J$.Fe(1029761, arguments.callee, this, arguments);
                            arguments = J$.N(1029769, 'arguments', arguments, true, false, false);
                            destination = J$.N(1029777, 'destination', destination, true, false, false);
                            J$.N(1029785, 'self', self, false, false, false);
                            var self = J$.W(1029385, 'self', J$.R(1029377, 'this', this, false, false), self, false, false);
                            if (J$.C(62760, J$.U(106106, '!', J$.G(1029409, J$.G(1029401, J$.R(1029393, 'self', self, false, false), 'gs'), 'isOpen')))) {
                                J$.M(1029625, J$.G(1029425, J$.R(1029417, 'self', self, false, false), 'gs'), 'open', false)(J$.T(1029617, function (err) {
                                    jalangiLabel117:
                                        while (true) {
                                            try {
                                                J$.Fe(1029593, arguments.callee, this, arguments);
                                                arguments = J$.N(1029601, 'arguments', arguments, true, false, false);
                                                err = J$.N(1029609, 'err', err, true, false, false);
                                                if (J$.C(62752, J$.R(1029433, 'err', err, false, false)))
                                                    return J$.Rt(1029473, J$.M(1029465, J$.R(1029441, 'self', self, false, false), 'emit', false)(J$.T(1029449, 'error', 21, false), J$.R(1029457, 'err', err, false, false)));
                                                J$.P(1029537, J$.R(1029481, 'self', self, false, false), 'totalBytesToRead', J$.B(106114, '-', J$.G(1029505, J$.G(1029497, J$.R(1029489, 'self', self, false, false), 'gs'), 'length'), J$.G(1029529, J$.G(1029521, J$.R(1029513, 'self', self, false, false), 'gs'), 'position')));
                                                J$.M(1029585, J$.G(1029553, J$.R(1029545, 'self', self, false, false), '_pipe'), 'apply', false)(J$.R(1029561, 'self', self, false, false), J$.T(1029577, [J$.R(1029569, 'destination', destination, false, false)], 10, false));
                                            } catch (J$e) {
                                                J$.Ex(1034297, J$e);
                                            } finally {
                                                if (J$.Fr(1034305))
                                                    continue jalangiLabel117;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false));
                            } else {
                                J$.P(1029689, J$.R(1029633, 'self', self, false, false), 'totalBytesToRead', J$.B(106122, '-', J$.G(1029657, J$.G(1029649, J$.R(1029641, 'self', self, false, false), 'gs'), 'length'), J$.G(1029681, J$.G(1029673, J$.R(1029665, 'self', self, false, false), 'gs'), 'position')));
                                J$.M(1029737, J$.G(1029705, J$.R(1029697, 'self', self, false, false), '_pipe'), 'apply', false)(J$.R(1029713, 'self', self, false, false), J$.T(1029729, [J$.R(1029721, 'destination', destination, false, false)], 10, false));
                            }
                            return J$.Rt(1029753, J$.R(1029745, 'destination', destination, false, false));
                        } catch (J$e) {
                            J$.Ex(1034313, J$e);
                        } finally {
                            if (J$.Fr(1034321))
                                continue jalangiLabel118;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(1030753, J$.G(1029817, J$.R(1029809, 'GridStoreStream', GridStoreStream, false, true), 'prototype'), '_read', J$.T(1030745, function () {
                jalangiLabel122:
                    while (true) {
                        try {
                            J$.Fe(1030705, arguments.callee, this, arguments);
                            arguments = J$.N(1030713, 'arguments', arguments, true, false, false);
                            J$.N(1030721, 'self', self, false, false, false);
                            J$.N(1030729, 'read', read, false, false, false);
                            J$.N(1030737, 'length', length, false, false, false);
                            var self = J$.W(1029833, 'self', J$.R(1029825, 'this', this, false, false), self, false, false);
                            var read = J$.W(1030353, 'read', J$.T(1030345, function read() {
                                jalangiLabel120:
                                    while (true) {
                                        try {
                                            J$.Fe(1030329, arguments.callee, this, arguments);
                                            arguments = J$.N(1030337, 'arguments', arguments, true, false, false);
                                            J$.M(1030321, J$.G(1029849, J$.R(1029841, 'self', self, false, false), 'gs'), 'read', false)(J$.R(1029857, 'length', length, false, false), J$.T(1030313, function (err, buffer) {
                                                jalangiLabel119:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(1030281, arguments.callee, this, arguments);
                                                            arguments = J$.N(1030289, 'arguments', arguments, true, false, false);
                                                            err = J$.N(1030297, 'err', err, true, false, false);
                                                            buffer = J$.N(1030305, 'buffer', buffer, true, false, false);
                                                            if (J$.C(62776, J$.C(62768, J$.R(1029865, 'err', err, false, false)) ? J$.U(106130, '!', J$.G(1029881, J$.R(1029873, 'self', self, false, false), 'endCalled')) : J$._()))
                                                                return J$.Rt(1029921, J$.M(1029913, J$.R(1029889, 'self', self, false, false), 'emit', false)(J$.T(1029897, 'error', 21, false), J$.R(1029905, 'err', err, false, false)));
                                                            if (J$.C(62792, J$.C(62784, J$.G(1029937, J$.R(1029929, 'self', self, false, false), 'endCalled')) ? J$._() : J$.B(106138, '==', J$.R(1029945, 'buffer', buffer, false, false), J$.T(1029953, null, 25, false))))
                                                                return J$.Rt(1029985, J$.M(1029977, J$.R(1029961, 'self', self, false, false), 'push', false)(J$.T(1029969, null, 25, false)));
                                                            if (J$.C(62808, J$.B(106146, '<=', J$.G(1030001, J$.R(1029993, 'buffer', buffer, false, false), 'length'), J$.G(1030017, J$.R(1030009, 'self', self, false, false), 'totalBytesToRead')))) {
                                                                J$.P(1030065, J$.R(1030025, 'self', self, false, false), 'totalBytesToRead', J$.B(106154, '-', J$.G(1030041, J$.R(1030033, 'self', self, false, false), 'totalBytesToRead'), J$.G(1030057, J$.R(1030049, 'buffer', buffer, false, false), 'length')));
                                                                J$.M(1030089, J$.R(1030073, 'self', self, false, false), 'push', false)(J$.R(1030081, 'buffer', buffer, false, false));
                                                            } else if (J$.C(62800, J$.B(106162, '>', J$.G(1030105, J$.R(1030097, 'buffer', buffer, false, false), 'length'), J$.G(1030121, J$.R(1030113, 'self', self, false, false), 'totalBytesToRead')))) {
                                                                J$.P(1030169, J$.R(1030129, 'self', self, false, false), 'totalBytesToRead', J$.B(106170, '-', J$.G(1030145, J$.R(1030137, 'self', self, false, false), 'totalBytesToRead'), J$.G(1030161, J$.R(1030153, 'buffer', buffer, false, false), '_index')));
                                                                J$.M(1030225, J$.R(1030177, 'self', self, false, false), 'push', false)(J$.M(1030217, J$.R(1030185, 'buffer', buffer, false, false), 'slice', false)(J$.T(1030193, 0, 22, false), J$.G(1030209, J$.R(1030201, 'buffer', buffer, false, false), '_index')));
                                                            }
                                                            if (J$.C(62816, J$.B(106178, '<=', J$.G(1030241, J$.R(1030233, 'self', self, false, false), 'totalBytesToRead'), J$.T(1030249, 0, 22, false)))) {
                                                                J$.P(1030273, J$.R(1030257, 'self', self, false, false), 'endCalled', J$.T(1030265, true, 23, false));
                                                            }
                                                        } catch (J$e) {
                                                            J$.Ex(1034329, J$e);
                                                        } finally {
                                                            if (J$.Fr(1034337))
                                                                continue jalangiLabel119;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false));
                                        } catch (J$e) {
                                            J$.Ex(1034345, J$e);
                                        } finally {
                                            if (J$.Fr(1034353))
                                                continue jalangiLabel120;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false), read, false, false);
                            var length = J$.W(1030473, 'length', J$.C(62824, J$.B(106186, '<', J$.G(1030377, J$.G(1030369, J$.R(1030361, 'self', self, false, false), 'gs'), 'length'), J$.G(1030401, J$.G(1030393, J$.R(1030385, 'self', self, false, false), 'gs'), 'chunkSize'))) ? J$.B(106194, '-', J$.G(1030425, J$.G(1030417, J$.R(1030409, 'self', self, false, false), 'gs'), 'length'), J$.G(1030441, J$.R(1030433, 'self', self, false, false), 'seekPosition')) : J$.G(1030465, J$.G(1030457, J$.R(1030449, 'self', self, false, false), 'gs'), 'chunkSize'), length, false, false);
                            if (J$.C(62840, J$.U(106202, '!', J$.G(1030497, J$.G(1030489, J$.R(1030481, 'self', self, false, false), 'gs'), 'isOpen')))) {
                                J$.M(1030681, J$.G(1030513, J$.R(1030505, 'self', self, false, false), 'gs'), 'open', false)(J$.T(1030673, function (err) {
                                    jalangiLabel121:
                                        while (true) {
                                            try {
                                                J$.Fe(1030649, arguments.callee, this, arguments);
                                                arguments = J$.N(1030657, 'arguments', arguments, true, false, false);
                                                err = J$.N(1030665, 'err', err, true, false, false);
                                                J$.P(1030577, J$.R(1030521, 'self', self, false, false), 'totalBytesToRead', J$.B(106210, '-', J$.G(1030545, J$.G(1030537, J$.R(1030529, 'self', self, false, false), 'gs'), 'length'), J$.G(1030569, J$.G(1030561, J$.R(1030553, 'self', self, false, false), 'gs'), 'position')));
                                                if (J$.C(62832, J$.R(1030585, 'err', err, false, false)))
                                                    return J$.Rt(1030625, J$.M(1030617, J$.R(1030593, 'self', self, false, false), 'emit', false)(J$.T(1030601, 'error', 21, false), J$.R(1030609, 'err', err, false, false)));
                                                J$.F(1030641, J$.R(1030633, 'read', read, false, false), false)();
                                            } catch (J$e) {
                                                J$.Ex(1034361, J$e);
                                            } finally {
                                                if (J$.Fr(1034369))
                                                    continue jalangiLabel121;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false));
                            } else {
                                J$.F(1030697, J$.R(1030689, 'read', read, false, false), false)();
                            }
                        } catch (J$e) {
                            J$.Ex(1034377, J$e);
                        } finally {
                            if (J$.Fr(1034385))
                                continue jalangiLabel122;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(1030889, J$.G(1030769, J$.R(1030761, 'GridStoreStream', GridStoreStream, false, true), 'prototype'), 'destroy', J$.T(1030881, function () {
                jalangiLabel123:
                    while (true) {
                        try {
                            J$.Fe(1030865, arguments.callee, this, arguments);
                            arguments = J$.N(1030873, 'arguments', arguments, true, false, false);
                            J$.M(1030785, J$.R(1030777, 'this', this, false, false), 'pause', false)();
                            J$.P(1030809, J$.R(1030793, 'this', this, false, false), 'endCalled', J$.T(1030801, true, 23, false));
                            J$.M(1030833, J$.G(1030825, J$.R(1030817, 'this', this, false, false), 'gs'), 'close', false)();
                            J$.M(1030857, J$.R(1030841, 'this', this, false, false), 'emit', false)(J$.T(1030849, 'end', 21, false));
                        } catch (J$e) {
                            J$.Ex(1034393, J$e);
                        } finally {
                            if (J$.Fr(1034401))
                                continue jalangiLabel123;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(1031393, J$.G(1030905, J$.R(1030897, 'GridStoreStream', GridStoreStream, false, true), 'prototype'), 'write', J$.T(1031385, function (chunk) {
                jalangiLabel128:
                    while (true) {
                        try {
                            J$.Fe(1031353, arguments.callee, this, arguments);
                            arguments = J$.N(1031361, 'arguments', arguments, true, false, false);
                            chunk = J$.N(1031369, 'chunk', chunk, true, false, false);
                            J$.N(1031377, 'self', self, false, false, false);
                            var self = J$.W(1030921, 'self', J$.R(1030913, 'this', this, false, false), self, false, false);
                            if (J$.C(62848, J$.G(1030937, J$.R(1030929, 'self', self, false, false), 'endCalled')))
                                return J$.Rt(1031009, J$.M(1031001, J$.R(1030945, 'self', self, false, false), 'emit', false)(J$.T(1030953, 'error', 21, false), J$.M(1030993, J$.R(1030961, 'MongoError', MongoError, false, true), 'create', false)(J$.T(1030985, {
                                    message: J$.T(1030969, 'attempting to write to stream after end called', 21, false),
                                    driver: J$.T(1030977, true, 23, false)
                                }, 11, false))));
                            if (J$.C(62856, J$.U(106218, '!', J$.G(1031033, J$.G(1031025, J$.R(1031017, 'self', self, false, false), 'gs'), 'isOpen')))) {
                                J$.M(1031233, J$.G(1031049, J$.R(1031041, 'self', self, false, false), 'gs'), 'open', false)(J$.T(1031225, function () {
                                    jalangiLabel126:
                                        while (true) {
                                            try {
                                                J$.Fe(1031209, arguments.callee, this, arguments);
                                                arguments = J$.N(1031217, 'arguments', arguments, true, false, false);
                                                J$.P(1031081, J$.G(1031065, J$.R(1031057, 'self', self, false, false), 'gs'), 'isOpen', J$.T(1031073, true, 23, false));
                                                J$.M(1031201, J$.G(1031097, J$.R(1031089, 'self', self, false, false), 'gs'), 'write', false)(J$.R(1031105, 'chunk', chunk, false, false), J$.T(1031193, function () {
                                                    jalangiLabel125:
                                                        while (true) {
                                                            try {
                                                                J$.Fe(1031177, arguments.callee, this, arguments);
                                                                arguments = J$.N(1031185, 'arguments', arguments, true, false, false);
                                                                J$.M(1031169, J$.I(typeof process === 'undefined' ? process = J$.R(1031113, 'process', undefined, true, true) : process = J$.R(1031113, 'process', process, true, true)), 'nextTick', false)(J$.T(1031161, function () {
                                                                    jalangiLabel124:
                                                                        while (true) {
                                                                            try {
                                                                                J$.Fe(1031145, arguments.callee, this, arguments);
                                                                                arguments = J$.N(1031153, 'arguments', arguments, true, false, false);
                                                                                J$.M(1031137, J$.R(1031121, 'self', self, false, false), 'emit', false)(J$.T(1031129, 'drain', 21, false));
                                                                            } catch (J$e) {
                                                                                J$.Ex(1034409, J$e);
                                                                            } finally {
                                                                                if (J$.Fr(1034417))
                                                                                    continue jalangiLabel124;
                                                                                else
                                                                                    return J$.Ra();
                                                                            }
                                                                        }
                                                                }, 12, false));
                                                            } catch (J$e) {
                                                                J$.Ex(1034425, J$e);
                                                            } finally {
                                                                if (J$.Fr(1034433))
                                                                    continue jalangiLabel125;
                                                                else
                                                                    return J$.Ra();
                                                            }
                                                        }
                                                }, 12, false));
                                            } catch (J$e) {
                                                J$.Ex(1034441, J$e);
                                            } finally {
                                                if (J$.Fr(1034449))
                                                    continue jalangiLabel126;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false));
                                return J$.Rt(1031249, J$.T(1031241, false, 23, false));
                            } else {
                                J$.M(1031329, J$.G(1031265, J$.R(1031257, 'self', self, false, false), 'gs'), 'write', false)(J$.R(1031273, 'chunk', chunk, false, false), J$.T(1031321, function () {
                                    jalangiLabel127:
                                        while (true) {
                                            try {
                                                J$.Fe(1031305, arguments.callee, this, arguments);
                                                arguments = J$.N(1031313, 'arguments', arguments, true, false, false);
                                                J$.M(1031297, J$.R(1031281, 'self', self, false, false), 'emit', false)(J$.T(1031289, 'drain', 21, false));
                                            } catch (J$e) {
                                                J$.Ex(1034457, J$e);
                                            } finally {
                                                if (J$.Fr(1034465))
                                                    continue jalangiLabel127;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false));
                                return J$.Rt(1031345, J$.T(1031337, true, 23, false));
                            }
                        } catch (J$e) {
                            J$.Ex(1034473, J$e);
                        } finally {
                            if (J$.Fr(1034481))
                                continue jalangiLabel128;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(1032025, J$.G(1031409, J$.R(1031401, 'GridStoreStream', GridStoreStream, false, true), 'prototype'), 'end', J$.T(1032017, function (chunk, encoding, callback) {
                jalangiLabel132:
                    while (true) {
                        try {
                            J$.Fe(1031961, arguments.callee, this, arguments);
                            arguments = J$.N(1031969, 'arguments', arguments, true, false, false);
                            chunk = J$.N(1031977, 'chunk', chunk, true, false, false);
                            encoding = J$.N(1031985, 'encoding', encoding, true, false, false);
                            callback = J$.N(1031993, 'callback', callback, true, false, false);
                            J$.N(1032001, 'self', self, false, false, false);
                            J$.N(1032009, 'args', args, false, false, false);
                            var self = J$.W(1031425, 'self', J$.R(1031417, 'this', this, false, false), self, false, false);
                            var args = J$.W(1031481, 'args', J$.M(1031473, J$.G(1031449, J$.G(1031441, J$.I(typeof Array === 'undefined' ? Array = J$.R(1031433, 'Array', undefined, true, true) : Array = J$.R(1031433, 'Array', Array, true, true)), 'prototype'), 'slice'), 'call', false)(J$.I(typeof arguments === 'undefined' ? arguments = J$.R(1031457, 'arguments', undefined, true, true) : arguments = J$.R(1031457, 'arguments', arguments, true, true)), J$.T(1031465, 0, 22, false)), args, false, false);
                            callback = J$.W(1031561, 'callback', J$.C(62864, J$.B(106242, '===', J$.U(106234, 'typeof', J$.G(1031521, J$.R(1031489, 'args', args, false, false), J$.B(106226, '-', J$.G(1031505, J$.R(1031497, 'args', args, false, false), 'length'), J$.T(1031513, 1, 22, false)))), J$.T(1031529, 'function', 21, false))) ? J$.M(1031545, J$.R(1031537, 'args', args, false, false), 'pop', false)() : J$.T(1031553, undefined, 24, false), callback, false, false);
                            chunk = J$.W(1031609, 'chunk', J$.C(62872, J$.G(1031577, J$.R(1031569, 'args', args, false, false), 'length')) ? J$.M(1031593, J$.R(1031585, 'args', args, false, false), 'shift', false)() : J$.T(1031601, null, 25, false), chunk, false, false);
                            encoding = J$.W(1031657, 'encoding', J$.C(62880, J$.G(1031625, J$.R(1031617, 'args', args, false, false), 'length')) ? J$.M(1031641, J$.R(1031633, 'args', args, false, false), 'shift', false)() : J$.T(1031649, null, 25, false), encoding, false, false);
                            J$.P(1031681, J$.R(1031665, 'self', self, false, false), 'endCalled', J$.T(1031673, true, 23, false));
                            if (J$.C(62896, J$.R(1031689, 'chunk', chunk, false, false))) {
                                J$.M(1031849, J$.G(1031705, J$.R(1031697, 'self', self, false, false), 'gs'), 'write', false)(J$.R(1031713, 'chunk', chunk, false, false), J$.T(1031841, function () {
                                    jalangiLabel130:
                                        while (true) {
                                            try {
                                                J$.Fe(1031825, arguments.callee, this, arguments);
                                                arguments = J$.N(1031833, 'arguments', arguments, true, false, false);
                                                J$.M(1031817, J$.G(1031729, J$.R(1031721, 'self', self, false, false), 'gs'), 'close', false)(J$.T(1031809, function () {
                                                    jalangiLabel129:
                                                        while (true) {
                                                            try {
                                                                J$.Fe(1031793, arguments.callee, this, arguments);
                                                                arguments = J$.N(1031801, 'arguments', arguments, true, false, false);
                                                                if (J$.C(62888, J$.B(106258, '===', J$.U(106250, 'typeof', J$.R(1031737, 'callback', callback, false, false)), J$.T(1031745, 'function', 21, false))))
                                                                    J$.F(1031761, J$.R(1031753, 'callback', callback, false, false), false)();
                                                                J$.M(1031785, J$.R(1031769, 'self', self, false, false), 'emit', false)(J$.T(1031777, 'end', 21, false));
                                                            } catch (J$e) {
                                                                J$.Ex(1034489, J$e);
                                                            } finally {
                                                                if (J$.Fr(1034497))
                                                                    continue jalangiLabel129;
                                                                else
                                                                    return J$.Ra();
                                                            }
                                                        }
                                                }, 12, false));
                                            } catch (J$e) {
                                                J$.Ex(1034505, J$e);
                                            } finally {
                                                if (J$.Fr(1034513))
                                                    continue jalangiLabel130;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false));
                            }
                            J$.M(1031953, J$.G(1031865, J$.R(1031857, 'self', self, false, false), 'gs'), 'close', false)(J$.T(1031945, function () {
                                jalangiLabel131:
                                    while (true) {
                                        try {
                                            J$.Fe(1031929, arguments.callee, this, arguments);
                                            arguments = J$.N(1031937, 'arguments', arguments, true, false, false);
                                            if (J$.C(62904, J$.B(106274, '===', J$.U(106266, 'typeof', J$.R(1031873, 'callback', callback, false, false)), J$.T(1031881, 'function', 21, false))))
                                                J$.F(1031897, J$.R(1031889, 'callback', callback, false, false), false)();
                                            J$.M(1031921, J$.R(1031905, 'self', self, false, false), 'emit', false)(J$.T(1031913, 'end', 21, false));
                                        } catch (J$e) {
                                            J$.Ex(1034521, J$e);
                                        } finally {
                                            if (J$.Fr(1034529))
                                                continue jalangiLabel131;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                        } catch (J$e) {
                            J$.Ex(1034537, J$e);
                        } finally {
                            if (J$.Fr(1034545))
                                continue jalangiLabel132;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(1032049, J$.I(typeof module === 'undefined' ? module = J$.R(1032033, 'module', undefined, true, true) : module = J$.R(1032033, 'module', module, true, true)), 'exports', J$.R(1032041, 'GridStore', GridStore, false, true));
        } catch (J$e) {
            J$.Ex(1034553, J$e);
        } finally {
            if (J$.Sr(1034561))
                continue jalangiLabel133;
            else
                break jalangiLabel133;
        }
    }
// JALANGI DO NOT INSTRUMENT

