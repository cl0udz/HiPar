J$.noInstrEval = false;
jalangiLabel12:
    while (true) {
        try {
            J$.Se(1387529, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestMongoDb/node_modules/mongodb/lib/url_parser.js');
            function matchesParentDomain(srvAddress, parentDomain) {
                jalangiLabel4:
                    while (true) {
                        try {
                            J$.Fe(1378113, arguments.callee, this, arguments);
                            arguments = J$.N(1378121, 'arguments', arguments, true, false, false);
                            srvAddress = J$.N(1378129, 'srvAddress', srvAddress, true, false, false);
                            parentDomain = J$.N(1378137, 'parentDomain', parentDomain, true, false, false);
                            J$.N(1378145, 'regex', regex, false, false, false);
                            J$.N(1378153, 'srv', srv, false, false, false);
                            J$.N(1378161, 'parent', parent, false, false, false);
                            var regex = J$.W(1377937, 'regex', J$.T(1377929, /^.*?\./, 14, false), regex, false, false);
                            var srv = J$.W(1377993, 'srv', J$.M(1377985, J$.T(1377945, '.', 21, false), 'concat', false)(J$.M(1377977, J$.R(1377953, 'srvAddress', srvAddress, false, false), 'replace', false)(J$.R(1377961, 'regex', regex, false, false), J$.T(1377969, '', 21, false))), srv, false, false);
                            var parent = J$.W(1378049, 'parent', J$.M(1378041, J$.T(1378001, '.', 21, false), 'concat', false)(J$.M(1378033, J$.R(1378009, 'parentDomain', parentDomain, false, false), 'replace', false)(J$.R(1378017, 'regex', regex, false, false), J$.T(1378025, '', 21, false))), parent, false, false);
                            if (J$.C(86616, J$.M(1378073, J$.R(1378057, 'srv', srv, false, false), 'endsWith', false)(J$.R(1378065, 'parent', parent, false, false))))
                                return J$.Rt(1378089, J$.T(1378081, true, 23, false));
                            else
                                return J$.Rt(1378105, J$.T(1378097, false, 23, false));
                        } catch (J$e) {
                            J$.Ex(1387697, J$e);
                        } finally {
                            if (J$.Fr(1387705))
                                continue jalangiLabel4;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function parseHandler(address, options, callback) {
                jalangiLabel5:
                    while (true) {
                        try {
                            J$.Fe(1378313, arguments.callee, this, arguments);
                            arguments = J$.N(1378321, 'arguments', arguments, true, false, false);
                            address = J$.N(1378329, 'address', address, true, false, false);
                            options = J$.N(1378337, 'options', options, true, false, false);
                            callback = J$.N(1378345, 'callback', callback, true, false, false);
                            J$.N(1378353, 'result', result, false, false, false);
                            J$.N(1378361, 'err', err, false, false, false);
                            var result, err;
                            try {
                                result = J$.W(1378201, 'result', J$.F(1378193, J$.R(1378169, 'parseConnectionString', parseConnectionString, false, true), false)(J$.R(1378177, 'address', address, false, false), J$.R(1378185, 'options', options, false, false)), result, false, false);
                            } catch (e) {
                                J$.N(1378225, 'e', e, false, false, true);
                                err = J$.W(1378217, 'err', J$.R(1378209, 'e', e, false, false), err, false, false);
                            }
                            return J$.Rt(1378305, J$.C(86624, J$.R(1378233, 'err', err, false, false)) ? J$.F(1378265, J$.R(1378241, 'callback', callback, false, false), false)(J$.R(1378249, 'err', err, false, false), J$.T(1378257, null, 25, false)) : J$.F(1378297, J$.R(1378273, 'callback', callback, false, false), false)(J$.T(1378281, null, 25, false), J$.R(1378289, 'result', result, false, false)));
                        } catch (J$e) {
                            J$.Ex(1387713, J$e);
                        } finally {
                            if (J$.Fr(1387721))
                                continue jalangiLabel5;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function parseConnectionString(url, options) {
                jalangiLabel11:
                    while (true) {
                        try {
                            J$.Fe(1387265, arguments.callee, this, arguments);
                            arguments = J$.N(1387273, 'arguments', arguments, true, false, false);
                            url = J$.N(1387281, 'url', url, true, false, false);
                            options = J$.N(1387289, 'options', options, true, false, false);
                            J$.N(1387297, 'connection_part', connection_part, false, false, false);
                            J$.N(1387305, 'auth_part', auth_part, false, false, false);
                            J$.N(1387313, 'query_string_part', query_string_part, false, false, false);
                            J$.N(1387321, 'dbName', dbName, false, false, false);
                            J$.N(1387329, 'result', result, false, false, false);
                            J$.N(1387337, 'name', name, false, false, false);
                            J$.N(1387345, 'parts', parts, false, false, false);
                            J$.N(1387353, 'clean', clean, false, false, false);
                            J$.N(1387361, 'strings', strings, false, false, false);
                            J$.N(1387369, 'hosts', hosts, false, false, false);
                            J$.N(1387377, 'i', i, false, false, false);
                            J$.N(1387385, 'hostString', hostString, false, false, false);
                            J$.N(1387393, '_i', _i, false, false, false);
                            J$.N(1387401, 'r', r, false, false, false);
                            J$.N(1387409, 'object', object, false, false, false);
                            J$.N(1387417, 'authPart', authPart, false, false, false);
                            J$.N(1387425, 'auth', auth, false, false, false);
                            J$.N(1387433, 'user', user, false, false, false);
                            J$.N(1387441, 'pass', pass, false, false, false);
                            J$.N(1387449, 'hostPart', hostPart, false, false, false);
                            J$.N(1387457, 'urlOptions', urlOptions, false, false, false);
                            J$.N(1387465, 'servers', servers, false, false, false);
                            J$.N(1387473, 'compression', compression, false, false, false);
                            J$.N(1387481, 'serverOptions', serverOptions, false, false, false);
                            J$.N(1387489, 'dbOptions', dbOptions, false, false, false);
                            J$.N(1387497, 'replSetServersOptions', replSetServersOptions, false, false, false);
                            J$.N(1387505, 'mongosOptions', mongosOptions, false, false, false);
                            J$.N(1387513, 'domainSocket', domainSocket, false, false, false);
                            J$.N(1387521, 'deduplicatedServers', deduplicatedServers, false, false, false);
                            var connection_part = J$.W(1378377, 'connection_part', J$.T(1378369, '', 21, false), connection_part, false, false);
                            var auth_part = J$.W(1378393, 'auth_part', J$.T(1378385, '', 21, false), auth_part, false, false);
                            var query_string_part = J$.W(1378409, 'query_string_part', J$.T(1378401, '', 21, false), query_string_part, false, false);
                            var dbName = J$.W(1378425, 'dbName', J$.T(1378417, 'admin', 21, false), dbName, false, false);
                            var result = J$.W(1378465, 'result', J$.M(1378457, J$.R(1378433, 'parser', parser, false, true), 'parse', false)(J$.R(1378441, 'url', url, false, false), J$.T(1378449, true, 23, false)), result, false, false);
                            if (J$.C(86648, J$.C(86640, J$.C(86632, J$.B(129170, '==', J$.G(1378481, J$.R(1378473, 'result', result, false, false), 'hostname'), J$.T(1378489, null, 25, false))) ? J$._() : J$.B(129178, '===', J$.G(1378505, J$.R(1378497, 'result', result, false, false), 'hostname'), J$.T(1378513, '', 21, false))) ? J$.B(129194, '===', J$.M(1378537, J$.R(1378521, 'url', url, false, false), 'indexOf', false)(J$.T(1378529, '.sock', 21, false)), J$.U(129186, '-', J$.T(1378545, 1, 22, false))) : J$._())) {
                                throw J$.F(1378569, J$.I(typeof Error === 'undefined' ? Error = J$.R(1378553, 'Error', undefined, true, true) : Error = J$.R(1378553, 'Error', Error, true, true)), true)(J$.T(1378561, 'No hostname or hostnames provided in connection string', 21, false));
                            }
                            if (J$.C(86656, J$.B(129202, '===', J$.G(1378585, J$.R(1378577, 'result', result, false, false), 'port'), J$.T(1378593, '0', 21, false)))) {
                                throw J$.F(1378617, J$.I(typeof Error === 'undefined' ? Error = J$.R(1378601, 'Error', undefined, true, true) : Error = J$.R(1378601, 'Error', Error, true, true)), true)(J$.T(1378609, 'Invalid port (zero) with hostname', 21, false));
                            }
                            if (J$.C(86672, J$.C(86664, J$.U(129210, '!', J$.F(1378673, J$.I(typeof isNaN === 'undefined' ? isNaN = J$.R(1378625, 'isNaN', undefined, true, true) : isNaN = J$.R(1378625, 'isNaN', isNaN, true, true)), false)(J$.F(1378665, J$.I(typeof parseInt === 'undefined' ? parseInt = J$.R(1378633, 'parseInt', undefined, true, true) : parseInt = J$.R(1378633, 'parseInt', parseInt, true, true)), false)(J$.G(1378649, J$.R(1378641, 'result', result, false, false), 'port'), J$.T(1378657, 10, 22, false))))) ? J$.B(129218, '>', J$.F(1378713, J$.I(typeof parseInt === 'undefined' ? parseInt = J$.R(1378681, 'parseInt', undefined, true, true) : parseInt = J$.R(1378681, 'parseInt', parseInt, true, true)), false)(J$.G(1378697, J$.R(1378689, 'result', result, false, false), 'port'), J$.T(1378705, 10, 22, false)), J$.T(1378721, 65535, 22, false)) : J$._())) {
                                throw J$.F(1378745, J$.I(typeof Error === 'undefined' ? Error = J$.R(1378729, 'Error', undefined, true, true) : Error = J$.R(1378729, 'Error', Error, true, true)), true)(J$.T(1378737, 'Invalid port (larger than 65535) with hostname', 21, false));
                            }
                            if (J$.C(86704, J$.C(86696, J$.C(86688, J$.C(86680, J$.G(1378761, J$.R(1378753, 'result', result, false, false), 'path')) ? J$.B(129226, '>', J$.G(1378785, J$.G(1378777, J$.R(1378769, 'result', result, false, false), 'path'), 'length'), J$.T(1378793, 0, 22, false)) : J$._()) ? J$.B(129234, '!==', J$.G(1378825, J$.G(1378809, J$.R(1378801, 'result', result, false, false), 'path'), J$.T(1378817, 0, 22, false)), J$.T(1378833, '/', 21, false)) : J$._()) ? J$.B(129250, '===', J$.M(1378857, J$.R(1378841, 'url', url, false, false), 'indexOf', false)(J$.T(1378849, '.sock', 21, false)), J$.U(129242, '-', J$.T(1378865, 1, 22, false))) : J$._())) {
                                throw J$.F(1378889, J$.I(typeof Error === 'undefined' ? Error = J$.R(1378873, 'Error', undefined, true, true) : Error = J$.R(1378873, 'Error', Error, true, true)), true)(J$.T(1378881, 'Missing delimiting slash between hosts and options', 21, false));
                            }
                            if (J$.C(86728, J$.G(1378905, J$.R(1378897, 'result', result, false, false), 'query'))) {
                                for (var name in J$.H(1379065, J$.G(1378921, J$.R(1378913, 'result', result, false, false), 'query'))) {
                                    J$.N(1379073, 'name', name, false, true, false);
                                    {
                                        {
                                            if (J$.C(86712, J$.B(129266, '!==', J$.M(1378945, J$.R(1378929, 'name', name, false, false), 'indexOf', false)(J$.T(1378937, '::', 21, false)), J$.U(129258, '-', J$.T(1378953, 1, 22, false))))) {
                                                throw J$.F(1378977, J$.I(typeof Error === 'undefined' ? Error = J$.R(1378961, 'Error', undefined, true, true) : Error = J$.R(1378961, 'Error', Error, true, true)), true)(J$.T(1378969, 'Double colon in host identifier', 21, false));
                                            }
                                            if (J$.C(86720, J$.B(129274, '===', J$.G(1379009, J$.G(1378993, J$.R(1378985, 'result', result, false, false), 'query'), J$.R(1379001, 'name', name, false, false)), J$.T(1379017, '', 21, false)))) {
                                                throw J$.F(1379057, J$.I(typeof Error === 'undefined' ? Error = J$.R(1379025, 'Error', undefined, true, true) : Error = J$.R(1379025, 'Error', Error, true, true)), true)(J$.B(129290, '+', J$.B(129282, '+', J$.T(1379033, 'Query parameter ', 21, false), J$.R(1379041, 'name', name, false, false)), J$.T(1379049, ' is an incomplete value pair', 21, false)));
                                            }
                                        }
                                    }
                                }
                            }
                            if (J$.C(86768, J$.G(1379089, J$.R(1379081, 'result', result, false, false), 'auth'))) {
                                var parts = J$.W(1379129, 'parts', J$.M(1379121, J$.G(1379105, J$.R(1379097, 'result', result, false, false), 'auth'), 'split', false)(J$.T(1379113, ':', 21, false)), parts, false, false);
                                if (J$.C(86744, J$.C(86736, J$.B(129306, '!==', J$.M(1379161, J$.R(1379137, 'url', url, false, false), 'indexOf', false)(J$.G(1379153, J$.R(1379145, 'result', result, false, false), 'auth')), J$.U(129298, '-', J$.T(1379169, 1, 22, false)))) ? J$.B(129314, '>', J$.G(1379185, J$.R(1379177, 'parts', parts, false, false), 'length'), J$.T(1379193, 2, 22, false)) : J$._())) {
                                    throw J$.F(1379217, J$.I(typeof Error === 'undefined' ? Error = J$.R(1379201, 'Error', undefined, true, true) : Error = J$.R(1379201, 'Error', Error, true, true)), true)(J$.T(1379209, 'Username with password containing an unescaped colon', 21, false));
                                }
                                if (J$.C(86760, J$.C(86752, J$.B(129330, '!==', J$.M(1379249, J$.R(1379225, 'url', url, false, false), 'indexOf', false)(J$.G(1379241, J$.R(1379233, 'result', result, false, false), 'auth')), J$.U(129322, '-', J$.T(1379257, 1, 22, false)))) ? J$.B(129346, '!==', J$.M(1379289, J$.G(1379273, J$.R(1379265, 'result', result, false, false), 'auth'), 'indexOf', false)(J$.T(1379281, '@', 21, false)), J$.U(129338, '-', J$.T(1379297, 1, 22, false))) : J$._())) {
                                    throw J$.F(1379321, J$.I(typeof Error === 'undefined' ? Error = J$.R(1379305, 'Error', undefined, true, true) : Error = J$.R(1379305, 'Error', Error, true, true)), true)(J$.T(1379313, 'Username containing an unescaped at-sign', 21, false));
                                }
                            }
                            var clean = J$.W(1379361, 'clean', J$.M(1379353, J$.M(1379345, J$.R(1379329, 'url', url, false, false), 'split', false)(J$.T(1379337, '?', 21, false)), 'shift', false)(), clean, false, false);
                            var strings = J$.W(1379393, 'strings', J$.M(1379385, J$.R(1379369, 'clean', clean, false, false), 'split', false)(J$.T(1379377, ',', 21, false)), strings, false, false);
                            var hosts = J$.W(1379409, 'hosts', J$.T(1379401, [], 10, false), hosts, false, false);
                            for (var i = J$.W(1379425, 'i', J$.T(1379417, 0, 22, false), i, false, false); J$.C(86808, J$.B(129354, '<', J$.R(1379433, 'i', i, false, false), J$.G(1379449, J$.R(1379441, 'strings', strings, false, false), 'length'))); J$.B(129378, '-', i = J$.W(1379465, 'i', J$.B(129370, '+', J$.U(129362, '+', J$.R(1379457, 'i', i, false, false)), 1), i, false, false), 1)) {
                                var hostString = J$.W(1379497, 'hostString', J$.G(1379489, J$.R(1379473, 'strings', strings, false, false), J$.R(1379481, 'i', i, false, false)), hostString, false, false);
                                if (J$.C(86800, J$.B(129394, '!==', J$.M(1379521, J$.R(1379505, 'hostString', hostString, false, false), 'indexOf', false)(J$.T(1379513, 'mongodb', 21, false)), J$.U(129386, '-', J$.T(1379529, 1, 22, false))))) {
                                    if (J$.C(86776, J$.B(129410, '!==', J$.M(1379553, J$.R(1379537, 'hostString', hostString, false, false), 'indexOf', false)(J$.T(1379545, '@', 21, false)), J$.U(129402, '-', J$.T(1379561, 1, 22, false))))) {
                                        J$.M(1379609, J$.R(1379569, 'hosts', hosts, false, false), 'push', false)(J$.M(1379601, J$.M(1379593, J$.R(1379577, 'hostString', hostString, false, false), 'split', false)(J$.T(1379585, '@', 21, false)), 'pop', false)());
                                    } else {
                                        J$.M(1379657, J$.R(1379617, 'hosts', hosts, false, false), 'push', false)(J$.M(1379649, J$.R(1379625, 'hostString', hostString, false, false), 'substr', false)(J$.G(1379641, J$.T(1379633, 'mongodb://', 21, false), 'length')));
                                    }
                                } else if (J$.C(86792, J$.B(129426, '!==', J$.M(1379681, J$.R(1379665, 'hostString', hostString, false, false), 'indexOf', false)(J$.T(1379673, '/', 21, false)), J$.U(129418, '-', J$.T(1379689, 1, 22, false))))) {
                                    J$.M(1379737, J$.R(1379697, 'hosts', hosts, false, false), 'push', false)(J$.M(1379729, J$.M(1379721, J$.R(1379705, 'hostString', hostString, false, false), 'split', false)(J$.T(1379713, '/', 21, false)), 'shift', false)());
                                } else if (J$.C(86784, J$.B(129442, '===', J$.M(1379761, J$.R(1379745, 'hostString', hostString, false, false), 'indexOf', false)(J$.T(1379753, '/', 21, false)), J$.U(129434, '-', J$.T(1379769, 1, 22, false))))) {
                                    J$.M(1379801, J$.R(1379777, 'hosts', hosts, false, false), 'push', false)(J$.M(1379793, J$.R(1379785, 'hostString', hostString, false, false), 'trim', false)());
                                }
                            }
                            for (var _i = J$.W(1379817, '_i', J$.T(1379809, 0, 22, false), _i, false, false); J$.C(86864, J$.B(129450, '<', J$.R(1379825, '_i', _i, false, false), J$.G(1379841, J$.R(1379833, 'hosts', hosts, false, false), 'length'))); J$.B(129474, '-', _i = J$.W(1379857, '_i', J$.B(129466, '+', J$.U(129458, '+', J$.R(1379849, '_i', _i, false, false)), 1), _i, false, false), 1)) {
                                var r = J$.W(1379937, 'r', J$.M(1379929, J$.R(1379865, 'parser', parser, false, true), 'parse', false)(J$.F(1379921, J$.R(1379873, 'f', f, false, true), false)(J$.T(1379881, 'mongodb://%s', 21, false), J$.M(1379913, J$.G(1379905, J$.R(1379889, 'hosts', hosts, false, false), J$.R(1379897, '_i', _i, false, false)), 'trim', false)())), r, false, false);
                                if (J$.C(86824, J$.C(86816, J$.G(1379953, J$.R(1379945, 'r', r, false, false), 'path')) ? J$.B(129490, '!==', J$.M(1379985, J$.G(1379969, J$.R(1379961, 'r', r, false, false), 'path'), 'indexOf', false)(J$.T(1379977, '.sock', 21, false)), J$.U(129482, '-', J$.T(1379993, 1, 22, false))) : J$._()))
                                    continue;
                                if (J$.C(86856, J$.C(86832, J$.G(1380009, J$.R(1380001, 'r', r, false, false), 'path')) ? J$.B(129506, '!==', J$.M(1380041, J$.G(1380025, J$.R(1380017, 'r', r, false, false), 'path'), 'indexOf', false)(J$.T(1380033, ':', 21, false)), J$.U(129498, '-', J$.T(1380049, 1, 22, false))) : J$._())) {
                                    if (J$.C(86848, J$.C(86840, J$.B(129514, '>', J$.G(1380089, J$.M(1380081, J$.G(1380065, J$.R(1380057, 'r', r, false, false), 'path'), 'split', false)(J$.T(1380073, '/', 21, false)), 'length'), J$.T(1380097, 1, 22, false))) ? J$.B(129530, '===', J$.M(1380129, J$.G(1380113, J$.R(1380105, 'r', r, false, false), 'path'), 'indexOf', false)(J$.T(1380121, '::', 21, false)), J$.U(129522, '-', J$.T(1380137, 1, 22, false))) : J$._())) {
                                        throw J$.F(1380161, J$.I(typeof Error === 'undefined' ? Error = J$.R(1380145, 'Error', undefined, true, true) : Error = J$.R(1380145, 'Error', Error, true, true)), true)(J$.T(1380153, 'Slash in host identifier', 21, false));
                                    } else {
                                        throw J$.F(1380185, J$.I(typeof Error === 'undefined' ? Error = J$.R(1380169, 'Error', undefined, true, true) : Error = J$.R(1380169, 'Error', Error, true, true)), true)(J$.T(1380177, 'Double colon in host identifier', 21, false));
                                    }
                                }
                            }
                            if (J$.C(86872, J$.B(129546, '!==', J$.M(1380209, J$.R(1380193, 'url', url, false, false), 'indexOf', false)(J$.T(1380201, '?', 21, false)), J$.U(129538, '-', J$.T(1380217, 1, 22, false))))) {
                                query_string_part = J$.W(1380273, 'query_string_part', J$.M(1380265, J$.R(1380225, 'url', url, false, false), 'substr', false)(J$.B(129554, '+', J$.M(1380249, J$.R(1380233, 'url', url, false, false), 'indexOf', false)(J$.T(1380241, '?', 21, false)), J$.T(1380257, 1, 22, false))), query_string_part, false, false);
                                connection_part = J$.W(1380337, 'connection_part', J$.M(1380329, J$.R(1380281, 'url', url, false, false), 'substring', false)(J$.G(1380297, J$.T(1380289, 'mongodb://', 21, false), 'length'), J$.M(1380321, J$.R(1380305, 'url', url, false, false), 'indexOf', false)(J$.T(1380313, '?', 21, false))), connection_part, false, false);
                            } else {
                                connection_part = J$.W(1380377, 'connection_part', J$.M(1380369, J$.R(1380345, 'url', url, false, false), 'substring', false)(J$.G(1380361, J$.T(1380353, 'mongodb://', 21, false), 'length')), connection_part, false, false);
                            }
                            if (J$.C(86880, J$.B(129570, '!==', J$.M(1380401, J$.R(1380385, 'connection_part', connection_part, false, false), 'indexOf', false)(J$.T(1380393, '@', 21, false)), J$.U(129562, '-', J$.T(1380409, 1, 22, false))))) {
                                auth_part = J$.W(1380457, 'auth_part', J$.G(1380449, J$.M(1380433, J$.R(1380417, 'connection_part', connection_part, false, false), 'split', false)(J$.T(1380425, '@', 21, false)), J$.T(1380441, 0, 22, false)), auth_part, false, false);
                                connection_part = J$.W(1380505, 'connection_part', J$.G(1380497, J$.M(1380481, J$.R(1380465, 'connection_part', connection_part, false, false), 'split', false)(J$.T(1380473, '@', 21, false)), J$.T(1380489, 1, 22, false)), connection_part, false, false);
                            }
                            if (J$.C(86888, J$.B(129578, '>', J$.G(1380537, J$.M(1380529, J$.R(1380513, 'connection_part', connection_part, false, false), 'split', false)(J$.T(1380521, '/', 21, false)), 'length'), J$.T(1380545, 2, 22, false)))) {
                                throw J$.F(1380617, J$.I(typeof Error === 'undefined' ? Error = J$.R(1380553, 'Error', undefined, true, true) : Error = J$.R(1380553, 'Error', Error, true, true)), true)(J$.B(129594, '+', J$.B(129586, '+', J$.T(1380561, 'Unsupported host \'', 21, false), J$.G(1380601, J$.M(1380585, J$.R(1380569, 'connection_part', connection_part, false, false), 'split', false)(J$.T(1380577, '?', 21, false)), J$.T(1380593, 0, 22, false))), J$.T(1380609, '\', hosts must be URL encoded and contain at most one unencoded slash', 21, false)));
                            }
                            if (J$.C(86952, J$.B(129610, '!==', J$.M(1380641, J$.R(1380625, 'connection_part', connection_part, false, false), 'indexOf', false)(J$.T(1380633, '.sock', 21, false)), J$.U(129602, '-', J$.T(1380649, 1, 22, false))))) {
                                if (J$.C(86920, J$.B(129626, '!==', J$.M(1380673, J$.R(1380657, 'connection_part', connection_part, false, false), 'indexOf', false)(J$.T(1380665, '.sock/', 21, false)), J$.U(129618, '-', J$.T(1380681, 1, 22, false))))) {
                                    dbName = J$.W(1380729, 'dbName', J$.G(1380721, J$.M(1380705, J$.R(1380689, 'connection_part', connection_part, false, false), 'split', false)(J$.T(1380697, '.sock/', 21, false)), J$.T(1380713, 1, 22, false)), dbName, false, false);
                                    if (J$.C(86912, J$.B(129642, '!==', J$.M(1380753, J$.R(1380737, 'dbName', dbName, false, false), 'indexOf', false)(J$.T(1380745, '/', 21, false)), J$.U(129634, '-', J$.T(1380761, 1, 22, false))))) {
                                        if (J$.C(86904, J$.C(86896, J$.B(129650, '===', J$.G(1380793, J$.M(1380785, J$.R(1380769, 'dbName', dbName, false, false), 'split', false)(J$.T(1380777, '/', 21, false)), 'length'), J$.T(1380801, 2, 22, false))) ? J$.B(129658, '===', J$.G(1380849, J$.G(1380841, J$.M(1380825, J$.R(1380809, 'dbName', dbName, false, false), 'split', false)(J$.T(1380817, '/', 21, false)), J$.T(1380833, 1, 22, false)), 'length'), J$.T(1380857, 0, 22, false)) : J$._())) {
                                            throw J$.F(1380881, J$.I(typeof Error === 'undefined' ? Error = J$.R(1380865, 'Error', undefined, true, true) : Error = J$.R(1380865, 'Error', Error, true, true)), true)(J$.T(1380873, 'Illegal trailing backslash after database name', 21, false));
                                        }
                                        throw J$.F(1380905, J$.I(typeof Error === 'undefined' ? Error = J$.R(1380889, 'Error', undefined, true, true) : Error = J$.R(1380889, 'Error', Error, true, true)), true)(J$.T(1380897, 'More than 1 database name in URL', 21, false));
                                    }
                                    connection_part = J$.W(1380977, 'connection_part', J$.M(1380969, J$.R(1380913, 'connection_part', connection_part, false, false), 'split', false)(J$.T(1380921, '/', 21, false), J$.B(129666, '+', J$.M(1380945, J$.R(1380929, 'connection_part', connection_part, false, false), 'indexOf', false)(J$.T(1380937, '.sock', 21, false)), J$.G(1380961, J$.T(1380953, '.sock', 21, false), 'length'))), connection_part, false, false);
                                }
                            } else if (J$.C(86944, J$.B(129682, '!==', J$.M(1381001, J$.R(1380985, 'connection_part', connection_part, false, false), 'indexOf', false)(J$.T(1380993, '/', 21, false)), J$.U(129674, '-', J$.T(1381009, 1, 22, false))))) {
                                if (J$.C(86936, J$.B(129690, '>', J$.G(1381041, J$.M(1381033, J$.R(1381017, 'connection_part', connection_part, false, false), 'split', false)(J$.T(1381025, '/', 21, false)), 'length'), J$.T(1381049, 2, 22, false)))) {
                                    if (J$.C(86928, J$.B(129698, '===', J$.G(1381097, J$.G(1381089, J$.M(1381073, J$.R(1381057, 'connection_part', connection_part, false, false), 'split', false)(J$.T(1381065, '/', 21, false)), J$.T(1381081, 2, 22, false)), 'length'), J$.T(1381105, 0, 22, false)))) {
                                        throw J$.F(1381129, J$.I(typeof Error === 'undefined' ? Error = J$.R(1381113, 'Error', undefined, true, true) : Error = J$.R(1381113, 'Error', Error, true, true)), true)(J$.T(1381121, 'Illegal trailing backslash after database name', 21, false));
                                    }
                                    throw J$.F(1381153, J$.I(typeof Error === 'undefined' ? Error = J$.R(1381137, 'Error', undefined, true, true) : Error = J$.R(1381137, 'Error', Error, true, true)), true)(J$.T(1381145, 'More than 1 database name in URL', 21, false));
                                }
                                dbName = J$.W(1381201, 'dbName', J$.G(1381193, J$.M(1381177, J$.R(1381161, 'connection_part', connection_part, false, false), 'split', false)(J$.T(1381169, '/', 21, false)), J$.T(1381185, 1, 22, false)), dbName, false, false);
                                connection_part = J$.W(1381249, 'connection_part', J$.G(1381241, J$.M(1381225, J$.R(1381209, 'connection_part', connection_part, false, false), 'split', false)(J$.T(1381217, '/', 21, false)), J$.T(1381233, 0, 22, false)), connection_part, false, false);
                            }
                            connection_part = J$.W(1381281, 'connection_part', J$.F(1381273, J$.I(typeof decodeURIComponent === 'undefined' ? decodeURIComponent = J$.R(1381257, 'decodeURIComponent', undefined, true, true) : decodeURIComponent = J$.R(1381257, 'decodeURIComponent', decodeURIComponent, true, true)), false)(J$.R(1381265, 'connection_part', connection_part, false, false)), connection_part, false, false);
                            var object = J$.W(1381297, 'object', J$.T(1381289, {}, 11, false), object, false, false);
                            var authPart = J$.W(1381321, 'authPart', J$.C(86960, J$.R(1381305, 'auth_part', auth_part, false, false)) ? J$._() : J$.T(1381313, '', 21, false), authPart, false, false);
                            var auth = J$.W(1381361, 'auth', J$.M(1381353, J$.R(1381329, 'authPart', authPart, false, false), 'split', false)(J$.T(1381337, ':', 21, false), J$.T(1381345, 2, 22, false)), auth, false, false);
                            var user = J$.W(1381409, 'user', J$.F(1381401, J$.I(typeof decodeURIComponent === 'undefined' ? decodeURIComponent = J$.R(1381369, 'decodeURIComponent', undefined, true, true) : decodeURIComponent = J$.R(1381369, 'decodeURIComponent', decodeURIComponent, true, true)), false)(J$.G(1381393, J$.R(1381377, 'auth', auth, false, false), J$.T(1381385, 0, 22, false))), user, false, false);
                            if (J$.C(86968, J$.B(129706, '!==', J$.G(1381433, J$.R(1381417, 'auth', auth, false, false), J$.T(1381425, 0, 22, false)), J$.F(1381457, J$.I(typeof encodeURIComponent === 'undefined' ? encodeURIComponent = J$.R(1381441, 'encodeURIComponent', undefined, true, true) : encodeURIComponent = J$.R(1381441, 'encodeURIComponent', encodeURIComponent, true, true)), false)(J$.R(1381449, 'user', user, false, false))))) {
                                throw J$.F(1381481, J$.I(typeof Error === 'undefined' ? Error = J$.R(1381465, 'Error', undefined, true, true) : Error = J$.R(1381465, 'Error', Error, true, true)), true)(J$.T(1381473, 'Username contains an illegal unescaped character', 21, false));
                            }
                            J$.P(1381513, J$.R(1381489, 'auth', auth, false, false), J$.T(1381497, 0, 22, false), J$.R(1381505, 'user', user, false, false));
                            if (J$.C(86984, J$.G(1381537, J$.R(1381521, 'auth', auth, false, false), J$.T(1381529, 1, 22, false)))) {
                                var pass = J$.W(1381585, 'pass', J$.F(1381577, J$.I(typeof decodeURIComponent === 'undefined' ? decodeURIComponent = J$.R(1381545, 'decodeURIComponent', undefined, true, true) : decodeURIComponent = J$.R(1381545, 'decodeURIComponent', decodeURIComponent, true, true)), false)(J$.G(1381569, J$.R(1381553, 'auth', auth, false, false), J$.T(1381561, 1, 22, false))), pass, false, false);
                                if (J$.C(86976, J$.B(129714, '!==', J$.G(1381609, J$.R(1381593, 'auth', auth, false, false), J$.T(1381601, 1, 22, false)), J$.F(1381633, J$.I(typeof encodeURIComponent === 'undefined' ? encodeURIComponent = J$.R(1381617, 'encodeURIComponent', undefined, true, true) : encodeURIComponent = J$.R(1381617, 'encodeURIComponent', encodeURIComponent, true, true)), false)(J$.R(1381625, 'pass', pass, false, false))))) {
                                    throw J$.F(1381657, J$.I(typeof Error === 'undefined' ? Error = J$.R(1381641, 'Error', undefined, true, true) : Error = J$.R(1381641, 'Error', Error, true, true)), true)(J$.T(1381649, 'Password contains an illegal unescaped character', 21, false));
                                }
                                J$.P(1381689, J$.R(1381665, 'auth', auth, false, false), J$.T(1381673, 1, 22, false), J$.R(1381681, 'pass', pass, false, false));
                            }
                            if (J$.C(86992, J$.B(129722, '===', J$.G(1381705, J$.R(1381697, 'auth', auth, false, false), 'length'), J$.T(1381713, 2, 22, false))))
                                J$.P(1381785, J$.R(1381721, 'object', object, false, false), 'auth', J$.T(1381777, {
                                    user: J$.G(1381745, J$.R(1381729, 'auth', auth, false, false), J$.T(1381737, 0, 22, false)),
                                    password: J$.G(1381769, J$.R(1381753, 'auth', auth, false, false), J$.T(1381761, 1, 22, false))
                                }, 11, false));
                            if (J$.C(87008, J$.C(87000, J$.R(1381793, 'options', options, false, false)) ? J$.B(129730, '!=', J$.G(1381809, J$.R(1381801, 'options', options, false, false), 'auth'), J$.T(1381817, null, 25, false)) : J$._()))
                                J$.P(1381849, J$.R(1381825, 'object', object, false, false), 'auth', J$.G(1381841, J$.R(1381833, 'options', options, false, false), 'auth'));
                            var hostPart;
                            var urlOptions;
                            var servers;
                            var compression;
                            var serverOptions = J$.W(1381873, 'serverOptions', J$.T(1381865, { socketOptions: J$.T(1381857, {}, 11, false) }, 11, false), serverOptions, false, false);
                            var dbOptions = J$.W(1381897, 'dbOptions', J$.T(1381889, { read_preference_tags: J$.T(1381881, [], 10, false) }, 11, false), dbOptions, false, false);
                            var replSetServersOptions = J$.W(1381921, 'replSetServersOptions', J$.T(1381913, { socketOptions: J$.T(1381905, {}, 11, false) }, 11, false), replSetServersOptions, false, false);
                            var mongosOptions = J$.W(1381945, 'mongosOptions', J$.T(1381937, { socketOptions: J$.T(1381929, {}, 11, false) }, 11, false), mongosOptions, false, false);
                            J$.P(1381969, J$.R(1381953, 'object', object, false, false), 'server_options', J$.R(1381961, 'serverOptions', serverOptions, false, false));
                            J$.P(1381993, J$.R(1381977, 'object', object, false, false), 'db_options', J$.R(1381985, 'dbOptions', dbOptions, false, false));
                            J$.P(1382017, J$.R(1382001, 'object', object, false, false), 'rs_options', J$.R(1382009, 'replSetServersOptions', replSetServersOptions, false, false));
                            J$.P(1382041, J$.R(1382025, 'object', object, false, false), 'mongos_options', J$.R(1382033, 'mongosOptions', mongosOptions, false, false));
                            if (J$.C(87072, J$.M(1382065, J$.R(1382049, 'url', url, false, false), 'match', false)(J$.T(1382057, /\.sock/, 14, false)))) {
                                var domainSocket = J$.W(1382169, 'domainSocket', J$.M(1382161, J$.R(1382073, 'url', url, false, false), 'substring', false)(J$.B(129738, '+', J$.M(1382097, J$.R(1382081, 'url', url, false, false), 'indexOf', false)(J$.T(1382089, 'mongodb://', 21, false)), J$.G(1382113, J$.T(1382105, 'mongodb://', 21, false), 'length')), J$.B(129746, '+', J$.M(1382137, J$.R(1382121, 'url', url, false, false), 'lastIndexOf', false)(J$.T(1382129, '.sock', 21, false)), J$.G(1382153, J$.T(1382145, '.sock', 21, false), 'length'))), domainSocket, false, false);
                                if (J$.C(87016, J$.B(129762, '!==', J$.M(1382193, J$.R(1382177, 'domainSocket', domainSocket, false, false), 'indexOf', false)(J$.T(1382185, '@', 21, false)), J$.U(129754, '-', J$.T(1382201, 1, 22, false)))))
                                    domainSocket = J$.W(1382249, 'domainSocket', J$.G(1382241, J$.M(1382225, J$.R(1382209, 'domainSocket', domainSocket, false, false), 'split', false)(J$.T(1382217, '@', 21, false)), J$.T(1382233, 1, 22, false)), domainSocket, false, false);
                                domainSocket = J$.W(1382281, 'domainSocket', J$.F(1382273, J$.I(typeof decodeURIComponent === 'undefined' ? decodeURIComponent = J$.R(1382257, 'decodeURIComponent', undefined, true, true) : decodeURIComponent = J$.R(1382257, 'decodeURIComponent', decodeURIComponent, true, true)), false)(J$.R(1382265, 'domainSocket', domainSocket, false, false)), domainSocket, false, false);
                                servers = J$.W(1382313, 'servers', J$.T(1382305, [J$.T(1382297, { domain_socket: J$.R(1382289, 'domainSocket', domainSocket, false, false) }, 11, false)], 10, false), servers, false, false);
                            } else {
                                hostPart = J$.W(1382329, 'hostPart', J$.R(1382321, 'connection_part', connection_part, false, false), hostPart, false, false);
                                var deduplicatedServers = J$.W(1382345, 'deduplicatedServers', J$.T(1382337, {}, 11, false), deduplicatedServers, false, false);
                                servers = J$.W(1383033, 'servers', J$.M(1383025, J$.M(1382961, J$.M(1382369, J$.R(1382353, 'hostPart', hostPart, false, false), 'split', false)(J$.T(1382361, ',', 21, false)), 'map', false)(J$.T(1382953, function (h) {
                                    jalangiLabel6:
                                        while (true) {
                                            try {
                                                J$.Fe(1382897, arguments.callee, this, arguments);
                                                arguments = J$.N(1382905, 'arguments', arguments, true, false, false);
                                                h = J$.N(1382913, 'h', h, true, false, false);
                                                J$.N(1382921, '_host', _host, false, false, false);
                                                J$.N(1382929, '_port', _port, false, false, false);
                                                J$.N(1382937, 'ipv6match', ipv6match, false, false, false);
                                                J$.N(1382945, 'hostPort', hostPort, false, false, false);
                                                var _host, _port, ipv6match;
                                                if (J$.C(87056, ipv6match = J$.W(1382401, 'ipv6match', J$.M(1382393, J$.T(1382377, /\[([^\]]+)\](?::(.+))?/, 14, false), 'exec', false)(J$.R(1382385, 'h', h, false, false)), ipv6match, false, false))) {
                                                    _host = J$.W(1382433, '_host', J$.G(1382425, J$.R(1382409, 'ipv6match', ipv6match, false, false), J$.T(1382417, 1, 22, false)), _host, false, false);
                                                    _port = J$.W(1382497, '_port', J$.C(87024, J$.F(1382481, J$.I(typeof parseInt === 'undefined' ? parseInt = J$.R(1382441, 'parseInt', undefined, true, true) : parseInt = J$.R(1382441, 'parseInt', parseInt, true, true)), false)(J$.G(1382465, J$.R(1382449, 'ipv6match', ipv6match, false, false), J$.T(1382457, 2, 22, false)), J$.T(1382473, 10, 22, false))) ? J$._() : J$.T(1382489, 27017, 22, false), _port, false, false);
                                                } else {
                                                    var hostPort = J$.W(1382537, 'hostPort', J$.M(1382529, J$.R(1382505, 'h', h, false, false), 'split', false)(J$.T(1382513, ':', 21, false), J$.T(1382521, 2, 22, false)), hostPort, false, false);
                                                    _host = J$.W(1382577, '_host', J$.C(87032, J$.G(1382561, J$.R(1382545, 'hostPort', hostPort, false, false), J$.T(1382553, 0, 22, false))) ? J$._() : J$.T(1382569, 'localhost', 21, false), _host, false, false);
                                                    _port = J$.W(1382673, '_port', J$.C(87040, J$.B(129770, '!=', J$.G(1382601, J$.R(1382585, 'hostPort', hostPort, false, false), J$.T(1382593, 1, 22, false)), J$.T(1382609, null, 25, false))) ? J$.F(1382657, J$.I(typeof parseInt === 'undefined' ? parseInt = J$.R(1382617, 'parseInt', undefined, true, true) : parseInt = J$.R(1382617, 'parseInt', parseInt, true, true)), false)(J$.G(1382641, J$.R(1382625, 'hostPort', hostPort, false, false), J$.T(1382633, 1, 22, false)), J$.T(1382649, 10, 22, false)) : J$.T(1382665, 27017, 22, false), _port, false, false);
                                                    if (J$.C(87048, J$.B(129786, '!==', J$.M(1382697, J$.R(1382681, '_host', _host, false, false), 'indexOf', false)(J$.T(1382689, '?', 21, false)), J$.U(129778, '-', J$.T(1382705, 1, 22, false)))))
                                                        _host = J$.W(1382753, '_host', J$.G(1382745, J$.M(1382729, J$.R(1382713, '_host', _host, false, false), 'split', false)(J$.T(1382721, /\?/, 14, false)), J$.T(1382737, 0, 22, false)), _host, false, false);
                                                }
                                                if (J$.C(87064, J$.G(1382793, J$.R(1382761, 'deduplicatedServers', deduplicatedServers, false, false), J$.B(129802, '+', J$.B(129794, '+', J$.R(1382769, '_host', _host, false, false), J$.T(1382777, '_', 21, false)), J$.R(1382785, '_port', _port, false, false)))))
                                                    return J$.Rt(1382809, J$.T(1382801, null, 25, false));
                                                J$.P(1382857, J$.R(1382817, 'deduplicatedServers', deduplicatedServers, false, false), J$.B(129818, '+', J$.B(129810, '+', J$.R(1382825, '_host', _host, false, false), J$.T(1382833, '_', 21, false)), J$.R(1382841, '_port', _port, false, false)), J$.T(1382849, 1, 22, false));
                                                return J$.Rt(1382889, J$.T(1382881, {
                                                    host: J$.R(1382865, '_host', _host, false, false),
                                                    port: J$.R(1382873, '_port', _port, false, false)
                                                }, 11, false));
                                            } catch (J$e) {
                                                J$.Ex(1387729, J$e);
                                            } finally {
                                                if (J$.Fr(1387737))
                                                    continue jalangiLabel6;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false)), 'filter', false)(J$.T(1383017, function (x) {
                                    jalangiLabel7:
                                        while (true) {
                                            try {
                                                J$.Fe(1382993, arguments.callee, this, arguments);
                                                arguments = J$.N(1383001, 'arguments', arguments, true, false, false);
                                                x = J$.N(1383009, 'x', x, true, false, false);
                                                return J$.Rt(1382985, J$.B(129826, '!=', J$.R(1382969, 'x', x, false, false), J$.T(1382977, null, 25, false)));
                                            } catch (J$e) {
                                                J$.Ex(1387745, J$e);
                                            } finally {
                                                if (J$.Fr(1387753))
                                                    continue jalangiLabel7;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false)), servers, false, false);
                            }
                            J$.P(1383065, J$.R(1383041, 'object', object, false, false), 'dbName', J$.C(87080, J$.R(1383049, 'dbName', dbName, false, false)) ? J$._() : J$.T(1383057, 'admin', 21, false));
                            urlOptions = J$.W(1383105, 'urlOptions', J$.M(1383097, J$.C(87088, J$.R(1383073, 'query_string_part', query_string_part, false, false)) ? J$._() : J$.T(1383081, '', 21, false), 'split', false)(J$.T(1383089, /[&;]/, 14, false)), urlOptions, false, false);
                            J$.M(1386937, J$.R(1383113, 'urlOptions', urlOptions, false, false), 'forEach', false)(J$.T(1386929, function (opt) {
                                jalangiLabel10:
                                    while (true) {
                                        try {
                                            J$.Fe(1386801, arguments.callee, this, arguments);
                                            arguments = J$.N(1386809, 'arguments', arguments, true, false, false);
                                            opt = J$.N(1386817, 'opt', opt, true, false, false);
                                            J$.N(1386825, 'splitOpt', splitOpt, false, false, false);
                                            J$.N(1386833, 'name', name, false, false, false);
                                            J$.N(1386841, 'value', value, false, false, false);
                                            J$.N(1386849, 'urlDecodeAuthPart', urlDecodeAuthPart, false, false, false);
                                            J$.N(1386857, 'values', values, false, false, false);
                                            J$.N(1386865, 'o', o, false, false, false);
                                            J$.N(1386873, 'tagObject', tagObject, false, false, false);
                                            J$.N(1386881, 'tags', tags, false, false, false);
                                            J$.N(1386889, '_i2', _i2, false, false, false);
                                            J$.N(1386897, '_parts', _parts, false, false, false);
                                            J$.N(1386905, 'compressors', compressors, false, false, false);
                                            J$.N(1386913, 'zlibCompressionLevel', zlibCompressionLevel, false, false, false);
                                            J$.N(1386921, 'logger', logger, false, false, false);
                                            if (J$.C(87096, J$.U(129834, '!', J$.R(1383121, 'opt', opt, false, false))))
                                                return J$.Rt(1383129, undefined);
                                            var splitOpt = J$.W(1383209, 'splitOpt', J$.M(1383153, J$.R(1383137, 'opt', opt, false, false), 'split', false)(J$.T(1383145, '=', 21, false)), splitOpt, false, false), name = J$.W(1383217, 'name', J$.G(1383177, J$.R(1383161, 'splitOpt', splitOpt, false, false), J$.T(1383169, 0, 22, false)), name, false, false), value = J$.W(1383225, 'value', J$.G(1383201, J$.R(1383185, 'splitOpt', splitOpt, false, false), J$.T(1383193, 1, 22, false)), value, false, false);
                                            switch (J$.C1(87320, J$.R(1383233, 'name', name, false, false))) {
                                            case J$.C2(87328, J$.T(1383241, 'slaveOk', 21, false)):
                                            case J$.C2(87336, J$.T(1383313, 'slave_ok', 21, false)):
                                                J$.P(1383273, J$.R(1383249, 'serverOptions', serverOptions, false, false), 'slave_ok', J$.B(129842, '===', J$.R(1383257, 'value', value, false, false), J$.T(1383265, 'true', 21, false)));
                                                J$.P(1383305, J$.R(1383281, 'dbOptions', dbOptions, false, false), 'slaveOk', J$.B(129850, '===', J$.R(1383289, 'value', value, false, false), J$.T(1383297, 'true', 21, false)));
                                                break;
                                            case J$.C2(87344, J$.T(1383321, 'maxPoolSize', 21, false)):
                                            case J$.C2(87352, J$.T(1383425, 'poolSize', 21, false)):
                                                J$.P(1383369, J$.R(1383329, 'serverOptions', serverOptions, false, false), 'poolSize', J$.F(1383361, J$.I(typeof parseInt === 'undefined' ? parseInt = J$.R(1383337, 'parseInt', undefined, true, true) : parseInt = J$.R(1383337, 'parseInt', parseInt, true, true)), false)(J$.R(1383345, 'value', value, false, false), J$.T(1383353, 10, 22, false)));
                                                J$.P(1383417, J$.R(1383377, 'replSetServersOptions', replSetServersOptions, false, false), 'poolSize', J$.F(1383409, J$.I(typeof parseInt === 'undefined' ? parseInt = J$.R(1383385, 'parseInt', undefined, true, true) : parseInt = J$.R(1383385, 'parseInt', parseInt, true, true)), false)(J$.R(1383393, 'value', value, false, false), J$.T(1383401, 10, 22, false)));
                                                break;
                                            case J$.C2(87360, J$.T(1383473, 'appname', 21, false)):
                                                J$.P(1383465, J$.R(1383433, 'object', object, false, false), 'appname', J$.F(1383457, J$.I(typeof decodeURIComponent === 'undefined' ? decodeURIComponent = J$.R(1383441, 'decodeURIComponent', undefined, true, true) : decodeURIComponent = J$.R(1383441, 'decodeURIComponent', decodeURIComponent, true, true)), false)(J$.R(1383449, 'value', value, false, false)));
                                                break;
                                            case J$.C2(87368, J$.T(1383481, 'autoReconnect', 21, false)):
                                            case J$.C2(87376, J$.T(1383521, 'auto_reconnect', 21, false)):
                                                J$.P(1383513, J$.R(1383489, 'serverOptions', serverOptions, false, false), 'auto_reconnect', J$.B(129858, '===', J$.R(1383497, 'value', value, false, false), J$.T(1383505, 'true', 21, false)));
                                                break;
                                            case J$.C2(87384, J$.T(1383713, 'ssl', 21, false)):
                                                if (J$.C(87104, J$.B(129866, '===', J$.R(1383529, 'value', value, false, false), J$.T(1383537, 'prefer', 21, false)))) {
                                                    J$.P(1383561, J$.R(1383545, 'serverOptions', serverOptions, false, false), 'ssl', J$.R(1383553, 'value', value, false, false));
                                                    J$.P(1383585, J$.R(1383569, 'replSetServersOptions', replSetServersOptions, false, false), 'ssl', J$.R(1383577, 'value', value, false, false));
                                                    J$.P(1383609, J$.R(1383593, 'mongosOptions', mongosOptions, false, false), 'ssl', J$.R(1383601, 'value', value, false, false));
                                                    break;
                                                }
                                                J$.P(1383641, J$.R(1383617, 'serverOptions', serverOptions, false, false), 'ssl', J$.B(129874, '===', J$.R(1383625, 'value', value, false, false), J$.T(1383633, 'true', 21, false)));
                                                J$.P(1383673, J$.R(1383649, 'replSetServersOptions', replSetServersOptions, false, false), 'ssl', J$.B(129882, '===', J$.R(1383657, 'value', value, false, false), J$.T(1383665, 'true', 21, false)));
                                                J$.P(1383705, J$.R(1383681, 'mongosOptions', mongosOptions, false, false), 'ssl', J$.B(129890, '===', J$.R(1383689, 'value', value, false, false), J$.T(1383697, 'true', 21, false)));
                                                break;
                                            case J$.C2(87392, J$.T(1383817, 'sslValidate', 21, false)):
                                                J$.P(1383745, J$.R(1383721, 'serverOptions', serverOptions, false, false), 'sslValidate', J$.B(129898, '===', J$.R(1383729, 'value', value, false, false), J$.T(1383737, 'true', 21, false)));
                                                J$.P(1383777, J$.R(1383753, 'replSetServersOptions', replSetServersOptions, false, false), 'sslValidate', J$.B(129906, '===', J$.R(1383761, 'value', value, false, false), J$.T(1383769, 'true', 21, false)));
                                                J$.P(1383809, J$.R(1383785, 'mongosOptions', mongosOptions, false, false), 'sslValidate', J$.B(129914, '===', J$.R(1383793, 'value', value, false, false), J$.T(1383801, 'true', 21, false)));
                                                break;
                                            case J$.C2(87400, J$.T(1383825, 'replicaSet', 21, false)):
                                            case J$.C2(87408, J$.T(1383857, 'rs_name', 21, false)):
                                                J$.P(1383849, J$.R(1383833, 'replSetServersOptions', replSetServersOptions, false, false), 'rs_name', J$.R(1383841, 'value', value, false, false));
                                                break;
                                            case J$.C2(87416, J$.T(1383913, 'reconnectWait', 21, false)):
                                                J$.P(1383905, J$.R(1383865, 'replSetServersOptions', replSetServersOptions, false, false), 'reconnectWait', J$.F(1383897, J$.I(typeof parseInt === 'undefined' ? parseInt = J$.R(1383873, 'parseInt', undefined, true, true) : parseInt = J$.R(1383873, 'parseInt', parseInt, true, true)), false)(J$.R(1383881, 'value', value, false, false), J$.T(1383889, 10, 22, false)));
                                                break;
                                            case J$.C2(87424, J$.T(1383969, 'retries', 21, false)):
                                                J$.P(1383961, J$.R(1383921, 'replSetServersOptions', replSetServersOptions, false, false), 'retries', J$.F(1383953, J$.I(typeof parseInt === 'undefined' ? parseInt = J$.R(1383929, 'parseInt', undefined, true, true) : parseInt = J$.R(1383929, 'parseInt', parseInt, true, true)), false)(J$.R(1383937, 'value', value, false, false), J$.T(1383945, 10, 22, false)));
                                                break;
                                            case J$.C2(87432, J$.T(1383977, 'readSecondary', 21, false)):
                                            case J$.C2(87440, J$.T(1384017, 'read_secondary', 21, false)):
                                                J$.P(1384009, J$.R(1383985, 'replSetServersOptions', replSetServersOptions, false, false), 'read_secondary', J$.B(129922, '===', J$.R(1383993, 'value', value, false, false), J$.T(1384001, 'true', 21, false)));
                                                break;
                                            case J$.C2(87448, J$.T(1384057, 'fsync', 21, false)):
                                                J$.P(1384049, J$.R(1384025, 'dbOptions', dbOptions, false, false), 'fsync', J$.B(129930, '===', J$.R(1384033, 'value', value, false, false), J$.T(1384041, 'true', 21, false)));
                                                break;
                                            case J$.C2(87456, J$.T(1384097, 'journal', 21, false)):
                                                J$.P(1384089, J$.R(1384065, 'dbOptions', dbOptions, false, false), 'j', J$.B(129938, '===', J$.R(1384073, 'value', value, false, false), J$.T(1384081, 'true', 21, false)));
                                                break;
                                            case J$.C2(87464, J$.T(1384137, 'safe', 21, false)):
                                                J$.P(1384129, J$.R(1384105, 'dbOptions', dbOptions, false, false), 'safe', J$.B(129946, '===', J$.R(1384113, 'value', value, false, false), J$.T(1384121, 'true', 21, false)));
                                                break;
                                            case J$.C2(87472, J$.T(1384145, 'nativeParser', 21, false)):
                                            case J$.C2(87480, J$.T(1384185, 'native_parser', 21, false)):
                                                J$.P(1384177, J$.R(1384153, 'dbOptions', dbOptions, false, false), 'native_parser', J$.B(129954, '===', J$.R(1384161, 'value', value, false, false), J$.T(1384169, 'true', 21, false)));
                                                break;
                                            case J$.C2(87488, J$.T(1384233, 'readConcernLevel', 21, false)):
                                                J$.P(1384225, J$.R(1384193, 'dbOptions', dbOptions, false, false), 'readConcern', J$.F(1384217, J$.R(1384201, 'ReadConcern', ReadConcern, false, true), true)(J$.R(1384209, 'value', value, false, false)));
                                                break;
                                            case J$.C2(87496, J$.T(1384409, 'connectTimeoutMS', 21, false)):
                                                J$.P(1384289, J$.G(1384249, J$.R(1384241, 'serverOptions', serverOptions, false, false), 'socketOptions'), 'connectTimeoutMS', J$.F(1384281, J$.I(typeof parseInt === 'undefined' ? parseInt = J$.R(1384257, 'parseInt', undefined, true, true) : parseInt = J$.R(1384257, 'parseInt', parseInt, true, true)), false)(J$.R(1384265, 'value', value, false, false), J$.T(1384273, 10, 22, false)));
                                                J$.P(1384345, J$.G(1384305, J$.R(1384297, 'replSetServersOptions', replSetServersOptions, false, false), 'socketOptions'), 'connectTimeoutMS', J$.F(1384337, J$.I(typeof parseInt === 'undefined' ? parseInt = J$.R(1384313, 'parseInt', undefined, true, true) : parseInt = J$.R(1384313, 'parseInt', parseInt, true, true)), false)(J$.R(1384321, 'value', value, false, false), J$.T(1384329, 10, 22, false)));
                                                J$.P(1384401, J$.G(1384361, J$.R(1384353, 'mongosOptions', mongosOptions, false, false), 'socketOptions'), 'connectTimeoutMS', J$.F(1384393, J$.I(typeof parseInt === 'undefined' ? parseInt = J$.R(1384369, 'parseInt', undefined, true, true) : parseInt = J$.R(1384369, 'parseInt', parseInt, true, true)), false)(J$.R(1384377, 'value', value, false, false), J$.T(1384385, 10, 22, false)));
                                                break;
                                            case J$.C2(87504, J$.T(1384585, 'socketTimeoutMS', 21, false)):
                                                J$.P(1384465, J$.G(1384425, J$.R(1384417, 'serverOptions', serverOptions, false, false), 'socketOptions'), 'socketTimeoutMS', J$.F(1384457, J$.I(typeof parseInt === 'undefined' ? parseInt = J$.R(1384433, 'parseInt', undefined, true, true) : parseInt = J$.R(1384433, 'parseInt', parseInt, true, true)), false)(J$.R(1384441, 'value', value, false, false), J$.T(1384449, 10, 22, false)));
                                                J$.P(1384521, J$.G(1384481, J$.R(1384473, 'replSetServersOptions', replSetServersOptions, false, false), 'socketOptions'), 'socketTimeoutMS', J$.F(1384513, J$.I(typeof parseInt === 'undefined' ? parseInt = J$.R(1384489, 'parseInt', undefined, true, true) : parseInt = J$.R(1384489, 'parseInt', parseInt, true, true)), false)(J$.R(1384497, 'value', value, false, false), J$.T(1384505, 10, 22, false)));
                                                J$.P(1384577, J$.G(1384537, J$.R(1384529, 'mongosOptions', mongosOptions, false, false), 'socketOptions'), 'socketTimeoutMS', J$.F(1384569, J$.I(typeof parseInt === 'undefined' ? parseInt = J$.R(1384545, 'parseInt', undefined, true, true) : parseInt = J$.R(1384545, 'parseInt', parseInt, true, true)), false)(J$.R(1384553, 'value', value, false, false), J$.T(1384561, 10, 22, false)));
                                                break;
                                            case J$.C2(87512, J$.T(1384697, 'w', 21, false)):
                                                J$.P(1384633, J$.R(1384593, 'dbOptions', dbOptions, false, false), 'w', J$.F(1384625, J$.I(typeof parseInt === 'undefined' ? parseInt = J$.R(1384601, 'parseInt', undefined, true, true) : parseInt = J$.R(1384601, 'parseInt', parseInt, true, true)), false)(J$.R(1384609, 'value', value, false, false), J$.T(1384617, 10, 22, false)));
                                                if (J$.C(87112, J$.F(1384665, J$.I(typeof isNaN === 'undefined' ? isNaN = J$.R(1384641, 'isNaN', undefined, true, true) : isNaN = J$.R(1384641, 'isNaN', isNaN, true, true)), false)(J$.G(1384657, J$.R(1384649, 'dbOptions', dbOptions, false, false), 'w'))))
                                                    J$.P(1384689, J$.R(1384673, 'dbOptions', dbOptions, false, false), 'w', J$.R(1384681, 'value', value, false, false));
                                                break;
                                            case J$.C2(87520, J$.T(1384729, 'authSource', 21, false)):
                                                J$.P(1384721, J$.R(1384705, 'dbOptions', dbOptions, false, false), 'authSource', J$.R(1384713, 'value', value, false, false));
                                                break;
                                            case J$.C2(87528, J$.T(1384761, 'gssapiServiceName', 21, false)):
                                                J$.P(1384753, J$.R(1384737, 'dbOptions', dbOptions, false, false), 'gssapiServiceName', J$.R(1384745, 'value', value, false, false));
                                                break;
                                            case J$.C2(87536, J$.T(1385225, 'authMechanism', 21, false)):
                                                if (J$.C(87144, J$.B(129962, '===', J$.R(1384769, 'value', value, false, false), J$.T(1384777, 'GSSAPI', 21, false)))) {
                                                    if (J$.C(87128, J$.B(129970, '==', J$.G(1384793, J$.R(1384785, 'object', object, false, false), 'auth'), J$.T(1384801, null, 25, false)))) {
                                                        var urlDecodeAuthPart = J$.W(1384833, 'urlDecodeAuthPart', J$.F(1384825, J$.I(typeof decodeURIComponent === 'undefined' ? decodeURIComponent = J$.R(1384809, 'decodeURIComponent', undefined, true, true) : decodeURIComponent = J$.R(1384809, 'decodeURIComponent', decodeURIComponent, true, true)), false)(J$.R(1384817, 'authPart', authPart, false, false)), urlDecodeAuthPart, false, false);
                                                        if (J$.C(87120, J$.B(129986, '===', J$.M(1384857, J$.R(1384841, 'urlDecodeAuthPart', urlDecodeAuthPart, false, false), 'indexOf', false)(J$.T(1384849, '@', 21, false)), J$.U(129978, '-', J$.T(1384865, 1, 22, false)))))
                                                            throw J$.F(1384889, J$.I(typeof Error === 'undefined' ? Error = J$.R(1384873, 'Error', undefined, true, true) : Error = J$.R(1384873, 'Error', Error, true, true)), true)(J$.T(1384881, 'GSSAPI requires a provided principal', 21, false));
                                                        J$.P(1384929, J$.R(1384897, 'object', object, false, false), 'auth', J$.T(1384921, {
                                                            user: J$.R(1384905, 'urlDecodeAuthPart', urlDecodeAuthPart, false, false),
                                                            password: J$.T(1384913, null, 25, false)
                                                        }, 11, false));
                                                    } else {
                                                        J$.P(1384993, J$.G(1384945, J$.R(1384937, 'object', object, false, false), 'auth'), 'user', J$.F(1384985, J$.I(typeof decodeURIComponent === 'undefined' ? decodeURIComponent = J$.R(1384953, 'decodeURIComponent', undefined, true, true) : decodeURIComponent = J$.R(1384953, 'decodeURIComponent', decodeURIComponent, true, true)), false)(J$.G(1384977, J$.G(1384969, J$.R(1384961, 'object', object, false, false), 'auth'), 'user')));
                                                    }
                                                } else if (J$.C(87136, J$.B(129994, '===', J$.R(1385001, 'value', value, false, false), J$.T(1385009, 'MONGODB-X509', 21, false)))) {
                                                    J$.P(1385057, J$.R(1385017, 'object', object, false, false), 'auth', J$.T(1385049, { user: J$.F(1385041, J$.I(typeof decodeURIComponent === 'undefined' ? decodeURIComponent = J$.R(1385025, 'decodeURIComponent', undefined, true, true) : decodeURIComponent = J$.R(1385025, 'decodeURIComponent', decodeURIComponent, true, true)), false)(J$.R(1385033, 'authPart', authPart, false, false)) }, 11, false));
                                                }
                                                if (J$.C(87200, J$.C(87192, J$.C(87184, J$.C(87176, J$.C(87168, J$.C(87160, J$.C(87152, J$.B(130002, '!==', J$.R(1385065, 'value', value, false, false), J$.T(1385073, 'GSSAPI', 21, false))) ? J$.B(130010, '!==', J$.R(1385081, 'value', value, false, false), J$.T(1385089, 'MONGODB-X509', 21, false)) : J$._()) ? J$.B(130018, '!==', J$.R(1385097, 'value', value, false, false), J$.T(1385105, 'MONGODB-CR', 21, false)) : J$._()) ? J$.B(130026, '!==', J$.R(1385113, 'value', value, false, false), J$.T(1385121, 'DEFAULT', 21, false)) : J$._()) ? J$.B(130034, '!==', J$.R(1385129, 'value', value, false, false), J$.T(1385137, 'SCRAM-SHA-1', 21, false)) : J$._()) ? J$.B(130042, '!==', J$.R(1385145, 'value', value, false, false), J$.T(1385153, 'SCRAM-SHA-256', 21, false)) : J$._()) ? J$.B(130050, '!==', J$.R(1385161, 'value', value, false, false), J$.T(1385169, 'PLAIN', 21, false)) : J$._()))
                                                    throw J$.F(1385193, J$.I(typeof Error === 'undefined' ? Error = J$.R(1385177, 'Error', undefined, true, true) : Error = J$.R(1385177, 'Error', Error, true, true)), true)(J$.T(1385185, 'Only DEFAULT, GSSAPI, PLAIN, MONGODB-X509, or SCRAM-SHA-1 is supported by authMechanism', 21, false));
                                                J$.P(1385217, J$.R(1385201, 'dbOptions', dbOptions, false, false), 'authMechanism', J$.R(1385209, 'value', value, false, false));
                                                break;
                                            case J$.C2(87544, J$.T(1385649, 'authMechanismProperties', 21, false)): {
                                                    var values = J$.W(1385257, 'values', J$.M(1385249, J$.R(1385233, 'value', value, false, false), 'split', false)(J$.T(1385241, ',', 21, false)), values, false, false);
                                                    var o = J$.W(1385273, 'o', J$.T(1385265, {}, 11, false), o, false, false);
                                                    J$.M(1385425, J$.R(1385281, 'values', values, false, false), 'forEach', false)(J$.T(1385417, function (x) {
                                                        jalangiLabel8:
                                                            while (true) {
                                                                try {
                                                                    J$.Fe(1385385, arguments.callee, this, arguments);
                                                                    arguments = J$.N(1385393, 'arguments', arguments, true, false, false);
                                                                    x = J$.N(1385401, 'x', x, true, false, false);
                                                                    J$.N(1385409, 'v', v, false, false, false);
                                                                    var v = J$.W(1385313, 'v', J$.M(1385305, J$.R(1385289, 'x', x, false, false), 'split', false)(J$.T(1385297, ':', 21, false)), v, false, false);
                                                                    J$.P(1385377, J$.R(1385321, 'o', o, false, false), J$.G(1385345, J$.R(1385329, 'v', v, false, false), J$.T(1385337, 0, 22, false)), J$.G(1385369, J$.R(1385353, 'v', v, false, false), J$.T(1385361, 1, 22, false)));
                                                                } catch (J$e) {
                                                                    J$.Ex(1387761, J$e);
                                                                } finally {
                                                                    if (J$.Fr(1387769))
                                                                        continue jalangiLabel8;
                                                                    else
                                                                        return J$.Ra();
                                                                }
                                                            }
                                                    }, 12, false));
                                                    J$.P(1385449, J$.R(1385433, 'dbOptions', dbOptions, false, false), 'authMechanismProperties', J$.R(1385441, 'o', o, false, false));
                                                    if (J$.C(87208, J$.B(130066, '===', J$.U(130058, 'typeof', J$.G(1385465, J$.R(1385457, 'o', o, false, false), 'SERVICE_NAME')), J$.T(1385473, 'string', 21, false))))
                                                        J$.P(1385505, J$.R(1385481, 'dbOptions', dbOptions, false, false), 'gssapiServiceName', J$.G(1385497, J$.R(1385489, 'o', o, false, false), 'SERVICE_NAME'));
                                                    if (J$.C(87216, J$.B(130082, '===', J$.U(130074, 'typeof', J$.G(1385521, J$.R(1385513, 'o', o, false, false), 'SERVICE_REALM')), J$.T(1385529, 'string', 21, false))))
                                                        J$.P(1385561, J$.R(1385537, 'dbOptions', dbOptions, false, false), 'gssapiServiceRealm', J$.G(1385553, J$.R(1385545, 'o', o, false, false), 'SERVICE_REALM'));
                                                    if (J$.C(87232, J$.B(130098, '===', J$.U(130090, 'typeof', J$.G(1385577, J$.R(1385569, 'o', o, false, false), 'CANONICALIZE_HOST_NAME')), J$.T(1385585, 'string', 21, false))))
                                                        J$.P(1385641, J$.R(1385593, 'dbOptions', dbOptions, false, false), 'gssapiCanonicalizeHostName', J$.C(87224, J$.B(130106, '===', J$.G(1385609, J$.R(1385601, 'o', o, false, false), 'CANONICALIZE_HOST_NAME'), J$.T(1385617, 'true', 21, false))) ? J$.T(1385625, true, 23, false) : J$.T(1385633, false, 23, false));
                                                }
                                                break;
                                            case J$.C2(87552, J$.T(1385705, 'wtimeoutMS', 21, false)):
                                                J$.P(1385697, J$.R(1385657, 'dbOptions', dbOptions, false, false), 'wtimeout', J$.F(1385689, J$.I(typeof parseInt === 'undefined' ? parseInt = J$.R(1385665, 'parseInt', undefined, true, true) : parseInt = J$.R(1385665, 'parseInt', parseInt, true, true)), false)(J$.R(1385673, 'value', value, false, false), J$.T(1385681, 10, 22, false)));
                                                break;
                                            case J$.C2(87560, J$.T(1385785, 'readPreference', 21, false)):
                                                if (J$.C(87240, J$.U(130114, '!', J$.M(1385729, J$.R(1385713, 'ReadPreference', ReadPreference, false, true), 'isValid', false)(J$.R(1385721, 'value', value, false, false)))))
                                                    throw J$.F(1385753, J$.I(typeof Error === 'undefined' ? Error = J$.R(1385737, 'Error', undefined, true, true) : Error = J$.R(1385737, 'Error', Error, true, true)), true)(J$.T(1385745, 'readPreference must be either primary/primaryPreferred/secondary/secondaryPreferred/nearest', 21, false));
                                                J$.P(1385777, J$.R(1385761, 'dbOptions', dbOptions, false, false), 'readPreference', J$.R(1385769, 'value', value, false, false));
                                                break;
                                            case J$.C2(87568, J$.T(1385841, 'maxStalenessSeconds', 21, false)):
                                                J$.P(1385833, J$.R(1385793, 'dbOptions', dbOptions, false, false), 'maxStalenessSeconds', J$.F(1385825, J$.I(typeof parseInt === 'undefined' ? parseInt = J$.R(1385801, 'parseInt', undefined, true, true) : parseInt = J$.R(1385801, 'parseInt', parseInt, true, true)), false)(J$.R(1385809, 'value', value, false, false), J$.T(1385817, 10, 22, false)));
                                                break;
                                            case J$.C2(87576, J$.T(1386201, 'readPreferenceTags', 21, false)): {
                                                    value = J$.W(1385873, 'value', J$.F(1385865, J$.I(typeof decodeURIComponent === 'undefined' ? decodeURIComponent = J$.R(1385849, 'decodeURIComponent', undefined, true, true) : decodeURIComponent = J$.R(1385849, 'decodeURIComponent', decodeURIComponent, true, true)), false)(J$.R(1385857, 'value', value, false, false)), value, false, false);
                                                    var tagObject = J$.W(1385889, 'tagObject', J$.T(1385881, {}, 11, false), tagObject, false, false);
                                                    if (J$.C(87256, J$.C(87248, J$.B(130122, '==', J$.R(1385897, 'value', value, false, false), J$.T(1385905, null, 25, false))) ? J$._() : J$.B(130130, '===', J$.R(1385913, 'value', value, false, false), J$.T(1385921, '', 21, false)))) {
                                                        J$.M(1385953, J$.G(1385937, J$.R(1385929, 'dbOptions', dbOptions, false, false), 'read_preference_tags'), 'push', false)(J$.R(1385945, 'tagObject', tagObject, false, false));
                                                        break;
                                                    }
                                                    var tags = J$.W(1385985, 'tags', J$.M(1385977, J$.R(1385961, 'value', value, false, false), 'split', false)(J$.T(1385969, /,/, 14, false)), tags, false, false);
                                                    for (var _i2 = J$.W(1386001, '_i2', J$.T(1385993, 0, 22, false), _i2, false, false); J$.C(87264, J$.B(130138, '<', J$.R(1386009, '_i2', _i2, false, false), J$.G(1386025, J$.R(1386017, 'tags', tags, false, false), 'length'))); J$.B(130162, '-', _i2 = J$.W(1386041, '_i2', J$.B(130154, '+', J$.U(130146, '+', J$.R(1386033, '_i2', _i2, false, false)), 1), _i2, false, false), 1)) {
                                                        var _parts = J$.W(1386097, '_parts', J$.M(1386089, J$.M(1386073, J$.G(1386065, J$.R(1386049, 'tags', tags, false, false), J$.R(1386057, '_i2', _i2, false, false)), 'trim', false)(), 'split', false)(J$.T(1386081, /:/, 14, false)), _parts, false, false);
                                                        J$.P(1386161, J$.R(1386105, 'tagObject', tagObject, false, false), J$.G(1386129, J$.R(1386113, '_parts', _parts, false, false), J$.T(1386121, 0, 22, false)), J$.G(1386153, J$.R(1386137, '_parts', _parts, false, false), J$.T(1386145, 1, 22, false)));
                                                    }
                                                    J$.M(1386193, J$.G(1386177, J$.R(1386169, 'dbOptions', dbOptions, false, false), 'read_preference_tags'), 'push', false)(J$.R(1386185, 'tagObject', tagObject, false, false));
                                                }
                                                break;
                                            case J$.C2(87584, J$.T(1386433, 'compressors', 21, false)): {
                                                    compression = J$.W(1386233, 'compression', J$.C(87272, J$.G(1386217, J$.R(1386209, 'serverOptions', serverOptions, false, false), 'compression')) ? J$._() : J$.T(1386225, {}, 11, false), compression, false, false);
                                                    var compressors = J$.W(1386265, 'compressors', J$.M(1386257, J$.R(1386241, 'value', value, false, false), 'split', false)(J$.T(1386249, ',', 21, false)), compressors, false, false);
                                                    if (J$.C(87288, J$.U(130186, '!', J$.M(1386353, J$.R(1386273, 'compressors', compressors, false, false), 'every', false)(J$.T(1386345, function (compressor) {
                                                            jalangiLabel9:
                                                                while (true) {
                                                                    try {
                                                                        J$.Fe(1386321, arguments.callee, this, arguments);
                                                                        arguments = J$.N(1386329, 'arguments', arguments, true, false, false);
                                                                        compressor = J$.N(1386337, 'compressor', compressor, true, false, false);
                                                                        return J$.Rt(1386313, J$.C(87280, J$.B(130170, '===', J$.R(1386281, 'compressor', compressor, false, false), J$.T(1386289, 'snappy', 21, false))) ? J$._() : J$.B(130178, '===', J$.R(1386297, 'compressor', compressor, false, false), J$.T(1386305, 'zlib', 21, false)));
                                                                    } catch (J$e) {
                                                                        J$.Ex(1387777, J$e);
                                                                    } finally {
                                                                        if (J$.Fr(1387785))
                                                                            continue jalangiLabel9;
                                                                        else
                                                                            return J$.Ra();
                                                                    }
                                                                }
                                                        }, 12, false))))) {
                                                        throw J$.F(1386377, J$.I(typeof Error === 'undefined' ? Error = J$.R(1386361, 'Error', undefined, true, true) : Error = J$.R(1386361, 'Error', Error, true, true)), true)(J$.T(1386369, 'Compressors must be at least one of snappy or zlib', 21, false));
                                                    }
                                                    J$.P(1386401, J$.R(1386385, 'compression', compression, false, false), 'compressors', J$.R(1386393, 'compressors', compressors, false, false));
                                                    J$.P(1386425, J$.R(1386409, 'serverOptions', serverOptions, false, false), 'compression', J$.R(1386417, 'compression', compression, false, false));
                                                }
                                                break;
                                            case J$.C2(87592, J$.T(1386617, 'zlibCompressionLevel', 21, false)): {
                                                    compression = J$.W(1386465, 'compression', J$.C(87296, J$.G(1386449, J$.R(1386441, 'serverOptions', serverOptions, false, false), 'compression')) ? J$._() : J$.T(1386457, {}, 11, false), compression, false, false);
                                                    var zlibCompressionLevel = J$.W(1386505, 'zlibCompressionLevel', J$.F(1386497, J$.I(typeof parseInt === 'undefined' ? parseInt = J$.R(1386473, 'parseInt', undefined, true, true) : parseInt = J$.R(1386473, 'parseInt', parseInt, true, true)), false)(J$.R(1386481, 'value', value, false, false), J$.T(1386489, 10, 22, false)), zlibCompressionLevel, false, false);
                                                    if (J$.C(87312, J$.C(87304, J$.B(130202, '<', J$.R(1386513, 'zlibCompressionLevel', zlibCompressionLevel, false, false), J$.U(130194, '-', J$.T(1386521, 1, 22, false)))) ? J$._() : J$.B(130210, '>', J$.R(1386529, 'zlibCompressionLevel', zlibCompressionLevel, false, false), J$.T(1386537, 9, 22, false)))) {
                                                        throw J$.F(1386561, J$.I(typeof Error === 'undefined' ? Error = J$.R(1386545, 'Error', undefined, true, true) : Error = J$.R(1386545, 'Error', Error, true, true)), true)(J$.T(1386553, 'zlibCompressionLevel must be an integer between -1 and 9', 21, false));
                                                    }
                                                    J$.P(1386585, J$.R(1386569, 'compression', compression, false, false), 'zlibCompressionLevel', J$.R(1386577, 'zlibCompressionLevel', zlibCompressionLevel, false, false));
                                                    J$.P(1386609, J$.R(1386593, 'serverOptions', serverOptions, false, false), 'compression', J$.R(1386601, 'compression', compression, false, false));
                                                }
                                                break;
                                            case J$.C2(87600, J$.T(1386657, 'retryWrites', 21, false)):
                                                J$.P(1386649, J$.R(1386625, 'dbOptions', dbOptions, false, false), 'retryWrites', J$.B(130218, '===', J$.R(1386633, 'value', value, false, false), J$.T(1386641, 'true', 21, false)));
                                                break;
                                            case J$.C2(87608, J$.T(1386713, 'minSize', 21, false)):
                                                J$.P(1386705, J$.R(1386665, 'dbOptions', dbOptions, false, false), 'minSize', J$.F(1386697, J$.I(typeof parseInt === 'undefined' ? parseInt = J$.R(1386673, 'parseInt', undefined, true, true) : parseInt = J$.R(1386673, 'parseInt', parseInt, true, true)), false)(J$.R(1386681, 'value', value, false, false), J$.T(1386689, 10, 22, false)));
                                                break;
                                            default: {
                                                    var logger = J$.W(1386745, 'logger', J$.F(1386737, J$.R(1386721, 'Logger', Logger, false, true), false)(J$.T(1386729, 'URL Parser', 21, false)), logger, false, false);
                                                    J$.M(1386793, J$.R(1386753, 'logger', logger, false, false), 'warn', false)(J$.M(1386785, J$.T(1386761, '', 21, false), 'concat', false)(J$.R(1386769, 'name', name, false, false), J$.T(1386777, ' is not supported as a connection string option', 21, false)));
                                                }
                                                break;
                                            }
                                        } catch (J$e) {
                                            J$.Ex(1387793, J$e);
                                        } finally {
                                            if (J$.Fr(1387801))
                                                continue jalangiLabel10;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            if (J$.C(87616, J$.B(130226, '===', J$.G(1386961, J$.G(1386953, J$.R(1386945, 'dbOptions', dbOptions, false, false), 'read_preference_tags'), 'length'), J$.T(1386969, 0, 22, false)))) {
                                J$.P(1386993, J$.R(1386977, 'dbOptions', dbOptions, false, false), 'read_preference_tags', J$.T(1386985, null, 25, false));
                            }
                            if (J$.C(87656, J$.C(87648, J$.C(87624, J$.B(130242, '===', J$.G(1387009, J$.R(1387001, 'dbOptions', dbOptions, false, false), 'w'), J$.U(130234, '-', J$.T(1387017, 1, 22, false)))) ? J$._() : J$.B(130250, '===', J$.G(1387033, J$.R(1387025, 'dbOptions', dbOptions, false, false), 'w'), J$.T(1387041, 0, 22, false))) ? J$.C(87640, J$.C(87632, J$.B(130258, '===', J$.G(1387057, J$.R(1387049, 'dbOptions', dbOptions, false, false), 'journal'), J$.T(1387065, true, 23, false))) ? J$._() : J$.B(130266, '===', J$.G(1387081, J$.R(1387073, 'dbOptions', dbOptions, false, false), 'fsync'), J$.T(1387089, true, 23, false))) ? J$._() : J$.B(130274, '===', J$.G(1387105, J$.R(1387097, 'dbOptions', dbOptions, false, false), 'safe'), J$.T(1387113, true, 23, false)) : J$._()))
                                throw J$.F(1387137, J$.I(typeof Error === 'undefined' ? Error = J$.R(1387121, 'Error', undefined, true, true) : Error = J$.R(1387121, 'Error', Error, true, true)), true)(J$.T(1387129, 'w set to -1 or 0 cannot be combined with safe/w/journal/fsync', 21, false));
                            if (J$.C(87664, J$.U(130282, '!', J$.G(1387153, J$.R(1387145, 'dbOptions', dbOptions, false, false), 'readPreference')))) {
                                J$.P(1387177, J$.R(1387161, 'dbOptions', dbOptions, false, false), 'readPreference', J$.T(1387169, 'primary', 21, false));
                            }
                            dbOptions = J$.W(1387217, 'dbOptions', J$.M(1387209, J$.I(typeof Object === 'undefined' ? Object = J$.R(1387185, 'Object', undefined, true, true) : Object = J$.R(1387185, 'Object', Object, true, true)), 'assign', false)(J$.R(1387193, 'dbOptions', dbOptions, false, false), J$.R(1387201, 'options', options, false, false)), dbOptions, false, false);
                            J$.P(1387241, J$.R(1387225, 'object', object, false, false), 'servers', J$.R(1387233, 'servers', servers, false, false));
                            return J$.Rt(1387257, J$.R(1387249, 'object', object, false, false));
                        } catch (J$e) {
                            J$.Ex(1387809, J$e);
                        } finally {
                            if (J$.Fr(1387817))
                                continue jalangiLabel11;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(1387537, 'ReadPreference', ReadPreference, false, false, false);
            J$.N(1387545, 'parser', parser, false, false, false);
            J$.N(1387553, 'f', f, false, false, false);
            J$.N(1387561, 'Logger', Logger, false, false, false);
            J$.N(1387569, 'dns', dns, false, false, false);
            J$.N(1387577, 'ReadConcern', ReadConcern, false, false, false);
            matchesParentDomain = J$.N(1387593, 'matchesParentDomain', J$.T(1387585, matchesParentDomain, 12, false), true, false, false);
            parseHandler = J$.N(1387609, 'parseHandler', J$.T(1387601, parseHandler, 12, false), true, false, false);
            parseConnectionString = J$.N(1387625, 'parseConnectionString', J$.T(1387617, parseConnectionString, 12, false), true, false, false);
            J$.T(1375161, 'use strict', 21, false);
            var ReadPreference = J$.W(1375313, 'ReadPreference', J$.G(1375193, J$.F(1375185, J$.I(typeof require === 'undefined' ? require = J$.R(1375169, 'require', undefined, true, true) : require = J$.R(1375169, 'require', require, true, true)), false)(J$.T(1375177, './core', 21, false)), 'ReadPreference'), ReadPreference, false, true), parser = J$.W(1375321, 'parser', J$.F(1375217, J$.I(typeof require === 'undefined' ? require = J$.R(1375201, 'require', undefined, true, true) : require = J$.R(1375201, 'require', require, true, true)), false)(J$.T(1375209, 'url', 21, false)), parser, false, true), f = J$.W(1375329, 'f', J$.G(1375249, J$.F(1375241, J$.I(typeof require === 'undefined' ? require = J$.R(1375225, 'require', undefined, true, true) : require = J$.R(1375225, 'require', require, true, true)), false)(J$.T(1375233, 'util', 21, false)), 'format'), f, false, true), Logger = J$.W(1375337, 'Logger', J$.G(1375281, J$.F(1375273, J$.I(typeof require === 'undefined' ? require = J$.R(1375257, 'require', undefined, true, true) : require = J$.R(1375257, 'require', require, true, true)), false)(J$.T(1375265, './core', 21, false)), 'Logger'), Logger, false, true), dns = J$.W(1375345, 'dns', J$.F(1375305, J$.I(typeof require === 'undefined' ? require = J$.R(1375289, 'require', undefined, true, true) : require = J$.R(1375289, 'require', require, true, true)), false)(J$.T(1375297, 'dns', 21, false)), dns, false, true);
            var ReadConcern = J$.W(1375377, 'ReadConcern', J$.F(1375369, J$.I(typeof require === 'undefined' ? require = J$.R(1375353, 'require', undefined, true, true) : require = J$.R(1375353, 'require', require, true, true)), false)(J$.T(1375361, './read_concern', 21, false)), ReadConcern, false, true);
            J$.P(1377921, J$.I(typeof module === 'undefined' ? module = J$.R(1375385, 'module', undefined, true, true) : module = J$.R(1375385, 'module', module, true, true)), 'exports', J$.T(1377913, function (url, options, callback) {
                jalangiLabel3:
                    while (true) {
                        try {
                            J$.Fe(1377857, arguments.callee, this, arguments);
                            arguments = J$.N(1377865, 'arguments', arguments, true, false, false);
                            url = J$.N(1377873, 'url', url, true, false, false);
                            options = J$.N(1377881, 'options', options, true, false, false);
                            callback = J$.N(1377889, 'callback', callback, true, false, false);
                            J$.N(1377897, 'result', result, false, false, false);
                            J$.N(1377905, 'srvAddress', srvAddress, false, false, false);
                            if (J$.C(86352, J$.B(128954, '===', J$.U(128946, 'typeof', J$.R(1375393, 'options', options, false, false)), J$.T(1375401, 'function', 21, false))))
                                callback = J$.W(1375417, 'callback', J$.R(1375409, 'options', options, false, false), callback, false, false), options = J$.W(1375433, 'options', J$.T(1375425, {}, 11, false), options, false, false);
                            options = J$.W(1375457, 'options', J$.C(86360, J$.R(1375441, 'options', options, false, false)) ? J$._() : J$.T(1375449, {}, 11, false), options, false, false);
                            var result;
                            try {
                                result = J$.W(1375497, 'result', J$.M(1375489, J$.R(1375465, 'parser', parser, false, true), 'parse', false)(J$.R(1375473, 'url', url, false, false), J$.T(1375481, true, 23, false)), result, false, false);
                            } catch (e) {
                                J$.N(1375553, 'e', e, false, false, true);
                                return J$.Rt(1375545, J$.F(1375537, J$.R(1375505, 'callback', callback, false, false), false)(J$.F(1375529, J$.I(typeof Error === 'undefined' ? Error = J$.R(1375513, 'Error', undefined, true, true) : Error = J$.R(1375513, 'Error', Error, true, true)), true)(J$.T(1375521, 'URL malformed, cannot be parsed', 21, false))));
                            }
                            if (J$.C(86376, J$.C(86368, J$.B(128962, '!==', J$.G(1375569, J$.R(1375561, 'result', result, false, false), 'protocol'), J$.T(1375577, 'mongodb:', 21, false))) ? J$.B(128970, '!==', J$.G(1375593, J$.R(1375585, 'result', result, false, false), 'protocol'), J$.T(1375601, 'mongodb+srv:', 21, false)) : J$._())) {
                                return J$.Rt(1375649, J$.F(1375641, J$.R(1375609, 'callback', callback, false, false), false)(J$.F(1375633, J$.I(typeof Error === 'undefined' ? Error = J$.R(1375617, 'Error', undefined, true, true) : Error = J$.R(1375617, 'Error', Error, true, true)), true)(J$.T(1375625, 'Invalid schema, expected `mongodb` or `mongodb+srv`', 21, false))));
                            }
                            if (J$.C(86384, J$.B(128978, '===', J$.G(1375665, J$.R(1375657, 'result', result, false, false), 'protocol'), J$.T(1375673, 'mongodb:', 21, false)))) {
                                return J$.Rt(1375721, J$.F(1375713, J$.R(1375681, 'parseHandler', parseHandler, false, true), false)(J$.R(1375689, 'url', url, false, false), J$.R(1375697, 'options', options, false, false), J$.R(1375705, 'callback', callback, false, false)));
                            }
                            if (J$.C(86392, J$.B(128986, '<', J$.G(1375761, J$.M(1375753, J$.G(1375737, J$.R(1375729, 'result', result, false, false), 'hostname'), 'split', false)(J$.T(1375745, '.', 21, false)), 'length'), J$.T(1375769, 3, 22, false)))) {
                                return J$.Rt(1375817, J$.F(1375809, J$.R(1375777, 'callback', callback, false, false), false)(J$.F(1375801, J$.I(typeof Error === 'undefined' ? Error = J$.R(1375785, 'Error', undefined, true, true) : Error = J$.R(1375785, 'Error', Error, true, true)), true)(J$.T(1375793, 'URI does not have hostname, domain name and tld', 21, false))));
                            }
                            J$.P(1375873, J$.R(1375825, 'result', result, false, false), 'domainLength', J$.G(1375865, J$.M(1375857, J$.G(1375841, J$.R(1375833, 'result', result, false, false), 'hostname'), 'split', false)(J$.T(1375849, '.', 21, false)), 'length'));
                            if (J$.C(86408, J$.C(86400, J$.G(1375889, J$.R(1375881, 'result', result, false, false), 'pathname')) ? J$.M(1375921, J$.G(1375905, J$.R(1375897, 'result', result, false, false), 'pathname'), 'match', false)(J$.T(1375913, ',', 21, false)) : J$._())) {
                                return J$.Rt(1375969, J$.F(1375961, J$.R(1375929, 'callback', callback, false, false), false)(J$.F(1375953, J$.I(typeof Error === 'undefined' ? Error = J$.R(1375937, 'Error', undefined, true, true) : Error = J$.R(1375937, 'Error', Error, true, true)), true)(J$.T(1375945, 'Invalid URI, cannot contain multiple hostnames', 21, false))));
                            }
                            if (J$.C(86416, J$.G(1375985, J$.R(1375977, 'result', result, false, false), 'port'))) {
                                return J$.Rt(1376033, J$.F(1376025, J$.R(1375993, 'callback', callback, false, false), false)(J$.F(1376017, J$.I(typeof Error === 'undefined' ? Error = J$.R(1376001, 'Error', undefined, true, true) : Error = J$.R(1376001, 'Error', Error, true, true)), true)(J$.T(1376009, 'Ports not accepted with `mongodb+srv` URIs', 21, false))));
                            }
                            var srvAddress = J$.W(1376073, 'srvAddress', J$.M(1376065, J$.T(1376041, '_mongodb._tcp.', 21, false), 'concat', false)(J$.G(1376057, J$.R(1376049, 'result', result, false, false), 'host')), srvAddress, false, false);
                            J$.M(1377849, J$.R(1376081, 'dns', dns, false, true), 'resolveSrv', false)(J$.R(1376089, 'srvAddress', srvAddress, false, false), J$.T(1377841, function (err, addresses) {
                                jalangiLabel2:
                                    while (true) {
                                        try {
                                            J$.Fe(1377761, arguments.callee, this, arguments);
                                            arguments = J$.N(1377769, 'arguments', arguments, true, false, false);
                                            err = J$.N(1377777, 'err', err, true, false, false);
                                            addresses = J$.N(1377785, 'addresses', addresses, true, false, false);
                                            J$.N(1377793, 'i', i, false, false, false);
                                            J$.N(1377801, 'base', base, false, false, false);
                                            J$.N(1377809, 'connectionStrings', connectionStrings, false, false, false);
                                            J$.N(1377817, 'connectionString', connectionString, false, false, false);
                                            J$.N(1377825, 'connectionStringOptions', connectionStringOptions, false, false, false);
                                            J$.N(1377833, 'defaultDb', defaultDb, false, false, false);
                                            if (J$.C(86424, J$.R(1376097, 'err', err, false, false)))
                                                return J$.Rt(1376129, J$.F(1376121, J$.R(1376105, 'callback', callback, false, false), false)(J$.R(1376113, 'err', err, false, false)));
                                            if (J$.C(86432, J$.B(128994, '===', J$.G(1376145, J$.R(1376137, 'addresses', addresses, false, false), 'length'), J$.T(1376153, 0, 22, false)))) {
                                                return J$.Rt(1376201, J$.F(1376193, J$.R(1376161, 'callback', callback, false, false), false)(J$.F(1376185, J$.I(typeof Error === 'undefined' ? Error = J$.R(1376169, 'Error', undefined, true, true) : Error = J$.R(1376169, 'Error', Error, true, true)), true)(J$.T(1376177, 'No addresses found at host', 21, false))));
                                            }
                                            for (var i = J$.W(1376217, 'i', J$.T(1376209, 0, 22, false), i, false, false); J$.C(86448, J$.B(129002, '<', J$.R(1376225, 'i', i, false, false), J$.G(1376241, J$.R(1376233, 'addresses', addresses, false, false), 'length'))); J$.B(129026, '-', i = J$.W(1376257, 'i', J$.B(129018, '+', J$.U(129010, '+', J$.R(1376249, 'i', i, false, false)), 1), i, false, false), 1)) {
                                                if (J$.C(86440, J$.U(129034, '!', J$.F(1376337, J$.R(1376265, 'matchesParentDomain', matchesParentDomain, false, true), false)(J$.G(1376297, J$.G(1376289, J$.R(1376273, 'addresses', addresses, false, false), J$.R(1376281, 'i', i, false, false)), 'name'), J$.G(1376313, J$.R(1376305, 'result', result, false, false), 'hostname'), J$.G(1376329, J$.R(1376321, 'result', result, false, false), 'domainLength'))))) {
                                                    return J$.Rt(1376385, J$.F(1376377, J$.R(1376345, 'callback', callback, false, false), false)(J$.F(1376369, J$.I(typeof Error === 'undefined' ? Error = J$.R(1376353, 'Error', undefined, true, true) : Error = J$.R(1376353, 'Error', Error, true, true)), true)(J$.T(1376361, 'Server record does not share hostname with parent URI', 21, false))));
                                                }
                                            }
                                            var base = J$.W(1376457, 'base', J$.C(86456, J$.G(1376401, J$.R(1376393, 'result', result, false, false), 'auth')) ? J$.M(1376441, J$.T(1376409, 'mongodb://', 21, false), 'concat', false)(J$.G(1376425, J$.R(1376417, 'result', result, false, false), 'auth'), J$.T(1376433, '@', 21, false)) : J$.T(1376449, 'mongodb://', 21, false), base, false, false);
                                            var connectionStrings = J$.W(1376697, 'connectionStrings', J$.M(1376689, J$.R(1376465, 'addresses', addresses, false, false), 'map', false)(J$.T(1376681, function (address, i) {
                                                jalangiLabel0:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(1376649, arguments.callee, this, arguments);
                                                            arguments = J$.N(1376657, 'arguments', arguments, true, false, false);
                                                            address = J$.N(1376665, 'address', address, true, false, false);
                                                            i = J$.N(1376673, 'i', i, true, false, false);
                                                            if (J$.C(86464, J$.B(129042, '===', J$.R(1376473, 'i', i, false, false), J$.T(1376481, 0, 22, false))))
                                                                return J$.Rt(1376569, J$.M(1376561, J$.M(1376537, J$.M(1376505, J$.T(1376489, '', 21, false), 'concat', false)(J$.R(1376497, 'base', base, false, false)), 'concat', false)(J$.G(1376521, J$.R(1376513, 'address', address, false, false), 'name'), J$.T(1376529, ':', 21, false)), 'concat', false)(J$.G(1376553, J$.R(1376545, 'address', address, false, false), 'port')));
                                                            else
                                                                return J$.Rt(1376641, J$.M(1376633, J$.M(1376609, J$.T(1376577, '', 21, false), 'concat', false)(J$.G(1376593, J$.R(1376585, 'address', address, false, false), 'name'), J$.T(1376601, ':', 21, false)), 'concat', false)(J$.G(1376625, J$.R(1376617, 'address', address, false, false), 'port')));
                                                        } catch (J$e) {
                                                            J$.Ex(1387633, J$e);
                                                        } finally {
                                                            if (J$.Fr(1387641))
                                                                continue jalangiLabel0;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false)), connectionStrings, false, false);
                                            var connectionString = J$.W(1376737, 'connectionString', J$.B(129050, '+', J$.M(1376721, J$.R(1376705, 'connectionStrings', connectionStrings, false, false), 'join', false)(J$.T(1376713, ',', 21, false)), J$.T(1376729, '/', 21, false)), connectionString, false, false);
                                            var connectionStringOptions = J$.W(1376753, 'connectionStringOptions', J$.T(1376745, [], 10, false), connectionStringOptions, false, false);
                                            if (J$.C(86480, J$.G(1376769, J$.R(1376761, 'result', result, false, false), 'path'))) {
                                                var defaultDb = J$.W(1376809, 'defaultDb', J$.M(1376801, J$.G(1376785, J$.R(1376777, 'result', result, false, false), 'path'), 'slice', false)(J$.T(1376793, 1, 22, false)), defaultDb, false, false);
                                                if (J$.C(86472, J$.B(129066, '!==', J$.M(1376833, J$.R(1376817, 'defaultDb', defaultDb, false, false), 'indexOf', false)(J$.T(1376825, '?', 21, false)), J$.U(129058, '-', J$.T(1376841, 1, 22, false))))) {
                                                    defaultDb = J$.W(1376897, 'defaultDb', J$.M(1376889, J$.R(1376849, 'defaultDb', defaultDb, false, false), 'slice', false)(J$.T(1376857, 0, 22, false), J$.M(1376881, J$.R(1376865, 'defaultDb', defaultDb, false, false), 'indexOf', false)(J$.T(1376873, '?', 21, false))), defaultDb, false, false);
                                                }
                                                connectionString = J$.W(1376921, 'connectionString', J$.B(129074, '+', J$.R(1376913, 'connectionString', connectionString, false, false), J$.R(1376905, 'defaultDb', defaultDb, false, false)), connectionString, false, false);
                                            }
                                            if (J$.C(86520, J$.C(86488, J$.U(129082, '!', J$.G(1376937, J$.R(1376929, 'options', options, false, false), 'ssl'))) ? J$.U(129090, '!', J$.G(1376953, J$.R(1376945, 'result', result, false, false), 'search')) : J$._())) {
                                                J$.M(1376977, J$.R(1376961, 'connectionStringOptions', connectionStringOptions, false, false), 'push', false)(J$.T(1376969, 'ssl=true', 21, false));
                                            } else if (J$.C(86512, J$.C(86504, J$.C(86496, J$.U(129098, '!', J$.G(1376993, J$.R(1376985, 'options', options, false, false), 'ssl'))) ? J$.G(1377009, J$.R(1377001, 'result', result, false, false), 'search') : J$._()) ? J$.U(129106, '!', J$.M(1377041, J$.G(1377025, J$.R(1377017, 'result', result, false, false), 'search'), 'match', false)(J$.T(1377033, 'ssl', 21, false))) : J$._())) {
                                                J$.M(1377065, J$.R(1377049, 'connectionStringOptions', connectionStringOptions, false, false), 'push', false)(J$.T(1377057, 'ssl=true', 21, false));
                                            }
                                            if (J$.C(86528, J$.G(1377081, J$.R(1377073, 'result', result, false, false), 'search'))) {
                                                J$.M(1377137, J$.R(1377089, 'connectionStringOptions', connectionStringOptions, false, false), 'push', false)(J$.M(1377129, J$.G(1377105, J$.R(1377097, 'result', result, false, false), 'search'), 'replace', false)(J$.T(1377113, '?', 21, false), J$.T(1377121, '', 21, false)));
                                            }
                                            J$.M(1377753, J$.R(1377145, 'dns', dns, false, true), 'resolveTxt', false)(J$.G(1377161, J$.R(1377153, 'result', result, false, false), 'host'), J$.T(1377745, function (err, record) {
                                                jalangiLabel1:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(1377713, arguments.callee, this, arguments);
                                                            arguments = J$.N(1377721, 'arguments', arguments, true, false, false);
                                                            err = J$.N(1377729, 'err', err, true, false, false);
                                                            record = J$.N(1377737, 'record', record, true, false, false);
                                                            if (J$.C(86544, J$.C(86536, J$.R(1377169, 'err', err, false, false)) ? J$.B(129114, '!==', J$.G(1377185, J$.R(1377177, 'err', err, false, false), 'code'), J$.T(1377193, 'ENODATA', 21, false)) : J$._()))
                                                                return J$.Rt(1377225, J$.F(1377217, J$.R(1377201, 'callback', callback, false, false), false)(J$.R(1377209, 'err', err, false, false)));
                                                            if (J$.C(86560, J$.C(86552, J$.R(1377233, 'err', err, false, false)) ? J$.B(129122, '===', J$.G(1377249, J$.R(1377241, 'err', err, false, false), 'code'), J$.T(1377257, 'ENODATA', 21, false)) : J$._()))
                                                                record = J$.W(1377273, 'record', J$.T(1377265, null, 25, false), record, false, false);
                                                            if (J$.C(86600, J$.R(1377281, 'record', record, false, false))) {
                                                                if (J$.C(86568, J$.B(129130, '>', J$.G(1377297, J$.R(1377289, 'record', record, false, false), 'length'), J$.T(1377305, 1, 22, false)))) {
                                                                    return J$.Rt(1377353, J$.F(1377345, J$.R(1377313, 'callback', callback, false, false), false)(J$.F(1377337, J$.I(typeof Error === 'undefined' ? Error = J$.R(1377321, 'Error', undefined, true, true) : Error = J$.R(1377321, 'Error', Error, true, true)), true)(J$.T(1377329, 'Multiple text records not allowed', 21, false))));
                                                                }
                                                                record = J$.W(1377385, 'record', J$.G(1377377, J$.R(1377361, 'record', record, false, false), J$.T(1377369, 0, 22, false)), record, false, false);
                                                                if (J$.C(86576, J$.B(129138, '>', J$.G(1377401, J$.R(1377393, 'record', record, false, false), 'length'), J$.T(1377409, 1, 22, false))))
                                                                    record = J$.W(1377441, 'record', J$.M(1377433, J$.R(1377417, 'record', record, false, false), 'join', false)(J$.T(1377425, '', 21, false)), record, false, false);
                                                                else
                                                                    record = J$.W(1377473, 'record', J$.G(1377465, J$.R(1377449, 'record', record, false, false), J$.T(1377457, 0, 22, false)), record, false, false);
                                                                if (J$.C(86592, J$.C(86584, J$.U(129146, '!', J$.M(1377497, J$.R(1377481, 'record', record, false, false), 'includes', false)(J$.T(1377489, 'authSource', 21, false)))) ? J$.U(129154, '!', J$.M(1377521, J$.R(1377505, 'record', record, false, false), 'includes', false)(J$.T(1377513, 'replicaSet', 21, false))) : J$._())) {
                                                                    return J$.Rt(1377569, J$.F(1377561, J$.R(1377529, 'callback', callback, false, false), false)(J$.F(1377553, J$.I(typeof Error === 'undefined' ? Error = J$.R(1377537, 'Error', undefined, true, true) : Error = J$.R(1377537, 'Error', Error, true, true)), true)(J$.T(1377545, 'Text record must only set `authSource` or `replicaSet`', 21, false))));
                                                                }
                                                                J$.M(1377593, J$.R(1377577, 'connectionStringOptions', connectionStringOptions, false, false), 'push', false)(J$.R(1377585, 'record', record, false, false));
                                                            }
                                                            if (J$.C(86608, J$.G(1377609, J$.R(1377601, 'connectionStringOptions', connectionStringOptions, false, false), 'length'))) {
                                                                connectionString = J$.W(1377665, 'connectionString', J$.B(129162, '+', J$.R(1377657, 'connectionString', connectionString, false, false), J$.M(1377649, J$.T(1377617, '?', 21, false), 'concat', false)(J$.M(1377641, J$.R(1377625, 'connectionStringOptions', connectionStringOptions, false, false), 'join', false)(J$.T(1377633, '&', 21, false)))), connectionString, false, false);
                                                            }
                                                            J$.F(1377705, J$.R(1377673, 'parseHandler', parseHandler, false, true), false)(J$.R(1377681, 'connectionString', connectionString, false, false), J$.R(1377689, 'options', options, false, false), J$.R(1377697, 'callback', callback, false, false));
                                                        } catch (J$e) {
                                                            J$.Ex(1387649, J$e);
                                                        } finally {
                                                            if (J$.Fr(1387657))
                                                                continue jalangiLabel1;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false));
                                        } catch (J$e) {
                                            J$.Ex(1387665, J$e);
                                        } finally {
                                            if (J$.Fr(1387673))
                                                continue jalangiLabel2;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                        } catch (J$e) {
                            J$.Ex(1387681, J$e);
                        } finally {
                            if (J$.Fr(1387689))
                                continue jalangiLabel3;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
        } catch (J$e) {
            J$.Ex(1387825, J$e);
        } finally {
            if (J$.Sr(1387833))
                continue jalangiLabel12;
            else
                break jalangiLabel12;
        }
    }
// JALANGI DO NOT INSTRUMENT

