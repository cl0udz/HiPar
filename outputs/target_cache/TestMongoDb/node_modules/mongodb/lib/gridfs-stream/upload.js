J$.noInstrEval = false;
jalangiLabel34:
    while (true) {
        try {
            J$.Se(1054745, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestMongoDb/node_modules/mongodb/lib/gridfs-stream/upload.js');
            function GridFSBucketWriteStream(bucket, filename, options) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(1047753, arguments.callee, this, arguments);
                            arguments = J$.N(1047761, 'arguments', arguments, true, false, false);
                            bucket = J$.N(1047769, 'bucket', bucket, true, false, false);
                            filename = J$.N(1047777, 'filename', filename, true, false, false);
                            options = J$.N(1047785, 'options', options, true, false, false);
                            J$.N(1047793, '_this', _this, false, false, false);
                            options = J$.W(1046985, 'options', J$.C(63680, J$.R(1046969, 'options', options, false, false)) ? J$._() : J$.T(1046977, {}, 11, false), options, false, false);
                            J$.P(1047009, J$.R(1046993, 'this', this, false, false), 'bucket', J$.R(1047001, 'bucket', bucket, false, false));
                            J$.P(1047049, J$.R(1047017, 'this', this, false, false), 'chunks', J$.G(1047041, J$.G(1047033, J$.R(1047025, 'bucket', bucket, false, false), 's'), '_chunksCollection'));
                            J$.P(1047073, J$.R(1047057, 'this', this, false, false), 'filename', J$.R(1047065, 'filename', filename, false, false));
                            J$.P(1047113, J$.R(1047081, 'this', this, false, false), 'files', J$.G(1047105, J$.G(1047097, J$.R(1047089, 'bucket', bucket, false, false), 's'), '_filesCollection'));
                            J$.P(1047137, J$.R(1047121, 'this', this, false, false), 'options', J$.R(1047129, 'options', options, false, false));
                            J$.P(1047161, J$.R(1047145, 'this', this, false, false), 'done', J$.T(1047153, false, 23, false));
                            J$.P(1047233, J$.R(1047169, 'this', this, false, false), 'id', J$.C(63688, J$.G(1047185, J$.R(1047177, 'options', options, false, false), 'id')) ? J$.G(1047201, J$.R(1047193, 'options', options, false, false), 'id') : J$.M(1047225, J$.G(1047217, J$.R(1047209, 'core', core, false, true), 'BSON'), 'ObjectId', false)());
                            J$.P(1047273, J$.R(1047241, 'this', this, false, false), 'chunkSizeBytes', J$.G(1047265, J$.G(1047257, J$.R(1047249, 'this', this, false, false), 'options'), 'chunkSizeBytes'));
                            J$.P(1047321, J$.R(1047281, 'this', this, false, false), 'bufToStore', J$.M(1047313, J$.R(1047289, 'Buffer', Buffer, false, true), 'alloc', false)(J$.G(1047305, J$.R(1047297, 'this', this, false, false), 'chunkSizeBytes')));
                            J$.P(1047345, J$.R(1047329, 'this', this, false, false), 'length', J$.T(1047337, 0, 22, false));
                            J$.P(1047401, J$.R(1047353, 'this', this, false, false), 'md5', J$.C(63696, J$.U(107266, '!', J$.G(1047369, J$.R(1047361, 'options', options, false, false), 'disableMD5'))) ? J$.M(1047393, J$.R(1047377, 'crypto', crypto, false, true), 'createHash', false)(J$.T(1047385, 'md5', 21, false)) : J$._());
                            J$.P(1047425, J$.R(1047409, 'this', this, false, false), 'n', J$.T(1047417, 0, 22, false));
                            J$.P(1047449, J$.R(1047433, 'this', this, false, false), 'pos', J$.T(1047441, 0, 22, false));
                            J$.P(1047537, J$.R(1047457, 'this', this, false, false), 'state', J$.T(1047529, {
                                streamEnd: J$.T(1047465, false, 23, false),
                                outstandingRequests: J$.T(1047473, 0, 22, false),
                                errored: J$.T(1047481, false, 23, false),
                                aborted: J$.T(1047489, false, 23, false),
                                promiseLibrary: J$.G(1047521, J$.G(1047513, J$.G(1047505, J$.R(1047497, 'this', this, false, false), 'bucket'), 's'), 'promiseLibrary')
                            }, 11, false));
                            if (J$.C(63704, J$.U(107274, '!', J$.G(1047569, J$.G(1047561, J$.G(1047553, J$.R(1047545, 'this', this, false, false), 'bucket'), 's'), 'calledOpenUploadStream')))) {
                                J$.P(1047609, J$.G(1047593, J$.G(1047585, J$.R(1047577, 'this', this, false, false), 'bucket'), 's'), 'calledOpenUploadStream', J$.T(1047601, true, 23, false));
                                var _this = J$.W(1047625, '_this', J$.R(1047617, 'this', this, false, false), _this, false, false);
                                J$.F(1047745, J$.R(1047633, 'checkIndexes', checkIndexes, false, true), false)(J$.R(1047641, 'this', this, false, false), J$.T(1047737, function () {
                                    jalangiLabel0:
                                        while (true) {
                                            try {
                                                J$.Fe(1047721, arguments.callee, this, arguments);
                                                arguments = J$.N(1047729, 'arguments', arguments, true, false, false);
                                                J$.P(1047681, J$.G(1047665, J$.G(1047657, J$.R(1047649, '_this', _this, false, false), 'bucket'), 's'), 'checkedIndexes', J$.T(1047673, true, 23, false));
                                                J$.M(1047713, J$.G(1047697, J$.R(1047689, '_this', _this, false, false), 'bucket'), 'emit', false)(J$.T(1047705, 'index', 21, false));
                                            } catch (J$e) {
                                                J$.Ex(1054993, J$e);
                                            } finally {
                                                if (J$.Fr(1055001))
                                                    continue jalangiLabel0;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false));
                            }
                        } catch (J$e) {
                            J$.Ex(1055009, J$e);
                        } finally {
                            if (J$.Fr(1055017))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function __handleError(_this, error, callback) {
                jalangiLabel10:
                    while (true) {
                        try {
                            J$.Fe(1049249, arguments.callee, this, arguments);
                            arguments = J$.N(1049257, 'arguments', arguments, true, false, false);
                            _this = J$.N(1049265, '_this', _this, true, false, false);
                            error = J$.N(1049273, 'error', error, true, false, false);
                            callback = J$.N(1049281, 'callback', callback, true, false, false);
                            if (J$.C(63792, J$.G(1049129, J$.G(1049121, J$.R(1049113, '_this', _this, false, false), 'state'), 'errored'))) {
                                return J$.Rt(1049137, undefined);
                            }
                            J$.P(1049169, J$.G(1049153, J$.R(1049145, '_this', _this, false, false), 'state'), 'errored', J$.T(1049161, true, 23, false));
                            if (J$.C(63800, J$.R(1049177, 'callback', callback, false, false))) {
                                return J$.Rt(1049209, J$.F(1049201, J$.R(1049185, 'callback', callback, false, false), false)(J$.R(1049193, 'error', error, false, false)));
                            }
                            J$.M(1049241, J$.R(1049217, '_this', _this, false, false), 'emit', false)(J$.T(1049225, 'error', 21, false), J$.R(1049233, 'error', error, false, false));
                        } catch (J$e) {
                            J$.Ex(1055153, J$e);
                        } finally {
                            if (J$.Fr(1055161))
                                continue jalangiLabel10;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function createChunkDoc(filesId, n, data) {
                jalangiLabel11:
                    while (true) {
                        try {
                            J$.Fe(1049353, arguments.callee, this, arguments);
                            arguments = J$.N(1049361, 'arguments', arguments, true, false, false);
                            filesId = J$.N(1049369, 'filesId', filesId, true, false, false);
                            n = J$.N(1049377, 'n', n, true, false, false);
                            data = J$.N(1049385, 'data', data, true, false, false);
                            return J$.Rt(1049345, J$.T(1049337, {
                                _id: J$.M(1049305, J$.G(1049297, J$.R(1049289, 'core', core, false, true), 'BSON'), 'ObjectId', false)(),
                                files_id: J$.R(1049313, 'filesId', filesId, false, false),
                                n: J$.R(1049321, 'n', n, false, false),
                                data: J$.R(1049329, 'data', data, false, false)
                            }, 11, false));
                        } catch (J$e) {
                            J$.Ex(1055169, J$e);
                        } finally {
                            if (J$.Fr(1055177))
                                continue jalangiLabel11;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function checkChunksIndex(_this, callback) {
                jalangiLabel16:
                    while (true) {
                        try {
                            J$.Fe(1050233, arguments.callee, this, arguments);
                            arguments = J$.N(1050241, 'arguments', arguments, true, false, false);
                            _this = J$.N(1050249, '_this', _this, true, false, false);
                            callback = J$.N(1050257, 'callback', callback, true, false, false);
                            J$.M(1050225, J$.M(1049409, J$.G(1049401, J$.R(1049393, '_this', _this, false, false), 'chunks'), 'listIndexes', false)(), 'toArray', false)(J$.T(1050217, function (error, indexes) {
                                jalangiLabel15:
                                    while (true) {
                                        try {
                                            J$.Fe(1050161, arguments.callee, this, arguments);
                                            arguments = J$.N(1050169, 'arguments', arguments, true, false, false);
                                            error = J$.N(1050177, 'error', error, true, false, false);
                                            indexes = J$.N(1050185, 'indexes', indexes, true, false, false);
                                            J$.N(1050193, 'index', index, false, false, false);
                                            J$.N(1050201, 'hasChunksIndex', hasChunksIndex, false, false, false);
                                            J$.N(1050209, 'indexOptions', indexOptions, false, false, false);
                                            if (J$.C(63824, J$.R(1049417, 'error', error, false, false))) {
                                                if (J$.C(63816, J$.B(107370, '===', J$.G(1049433, J$.R(1049425, 'error', error, false, false), 'code'), J$.R(1049441, 'ERROR_NAMESPACE_NOT_FOUND', ERROR_NAMESPACE_NOT_FOUND, false, true)))) {
                                                    var index = J$.W(1049473, 'index', J$.T(1049465, {
                                                        files_id: J$.T(1049449, 1, 22, false),
                                                        n: J$.T(1049457, 1, 22, false)
                                                    }, 11, false), index, false, false);
                                                    J$.M(1049617, J$.G(1049489, J$.R(1049481, '_this', _this, false, false), 'chunks'), 'createIndex', false)(J$.R(1049497, 'index', index, false, false), J$.T(1049521, {
                                                        background: J$.T(1049505, false, 23, false),
                                                        unique: J$.T(1049513, true, 23, false)
                                                    }, 11, false), J$.T(1049609, function (error) {
                                                        jalangiLabel12:
                                                            while (true) {
                                                                try {
                                                                    J$.Fe(1049585, arguments.callee, this, arguments);
                                                                    arguments = J$.N(1049593, 'arguments', arguments, true, false, false);
                                                                    error = J$.N(1049601, 'error', error, true, false, false);
                                                                    if (J$.C(63808, J$.R(1049529, 'error', error, false, false))) {
                                                                        return J$.Rt(1049561, J$.F(1049553, J$.R(1049537, 'callback', callback, false, false), false)(J$.R(1049545, 'error', error, false, false)));
                                                                    }
                                                                    J$.F(1049577, J$.R(1049569, 'callback', callback, false, false), false)();
                                                                } catch (J$e) {
                                                                    J$.Ex(1055185, J$e);
                                                                } finally {
                                                                    if (J$.Fr(1055193))
                                                                        continue jalangiLabel12;
                                                                    else
                                                                        return J$.Ra();
                                                                }
                                                            }
                                                    }, 12, false));
                                                    return J$.Rt(1049625, undefined);
                                                }
                                                return J$.Rt(1049657, J$.F(1049649, J$.R(1049633, 'callback', callback, false, false), false)(J$.R(1049641, 'error', error, false, false)));
                                            }
                                            var hasChunksIndex = J$.W(1049673, 'hasChunksIndex', J$.T(1049665, false, 23, false), hasChunksIndex, false, false);
                                            J$.M(1049889, J$.R(1049681, 'indexes', indexes, false, false), 'forEach', false)(J$.T(1049881, function (index) {
                                                jalangiLabel13:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(1049849, arguments.callee, this, arguments);
                                                            arguments = J$.N(1049857, 'arguments', arguments, true, false, false);
                                                            index = J$.N(1049865, 'index', index, true, false, false);
                                                            J$.N(1049873, 'keys', keys, false, false, false);
                                                            if (J$.C(63856, J$.G(1049697, J$.R(1049689, 'index', index, false, false), 'key'))) {
                                                                var keys = J$.W(1049737, 'keys', J$.M(1049729, J$.I(typeof Object === 'undefined' ? Object = J$.R(1049705, 'Object', undefined, true, true) : Object = J$.R(1049705, 'Object', Object, true, true)), 'keys', false)(J$.G(1049721, J$.R(1049713, 'index', index, false, false), 'key')), keys, false, false);
                                                                if (J$.C(63848, J$.C(63840, J$.C(63832, J$.B(107378, '===', J$.G(1049753, J$.R(1049745, 'keys', keys, false, false), 'length'), J$.T(1049761, 2, 22, false))) ? J$.B(107386, '===', J$.G(1049785, J$.G(1049777, J$.R(1049769, 'index', index, false, false), 'key'), 'files_id'), J$.T(1049793, 1, 22, false)) : J$._()) ? J$.B(107394, '===', J$.G(1049817, J$.G(1049809, J$.R(1049801, 'index', index, false, false), 'key'), 'n'), J$.T(1049825, 1, 22, false)) : J$._())) {
                                                                    hasChunksIndex = J$.W(1049841, 'hasChunksIndex', J$.T(1049833, true, 23, false), hasChunksIndex, false, false);
                                                                }
                                                            }
                                                        } catch (J$e) {
                                                            J$.Ex(1055201, J$e);
                                                        } finally {
                                                            if (J$.Fr(1055209))
                                                                continue jalangiLabel13;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false));
                                            if (J$.C(63872, J$.R(1049897, 'hasChunksIndex', hasChunksIndex, false, false))) {
                                                J$.F(1049913, J$.R(1049905, 'callback', callback, false, false), false)();
                                            } else {
                                                index = J$.W(1049945, 'index', J$.T(1049937, {
                                                    files_id: J$.T(1049921, 1, 22, false),
                                                    n: J$.T(1049929, 1, 22, false)
                                                }, 11, false), index, false, false);
                                                var indexOptions = J$.W(1049977, 'indexOptions', J$.F(1049969, J$.R(1049953, 'getWriteOptions', getWriteOptions, false, true), false)(J$.R(1049961, '_this', _this, false, false)), indexOptions, false, false);
                                                J$.P(1050001, J$.R(1049985, 'indexOptions', indexOptions, false, false), 'background', J$.T(1049993, false, 23, false));
                                                J$.P(1050025, J$.R(1050009, 'indexOptions', indexOptions, false, false), 'unique', J$.T(1050017, true, 23, false));
                                                J$.M(1050153, J$.G(1050041, J$.R(1050033, '_this', _this, false, false), 'chunks'), 'createIndex', false)(J$.R(1050049, 'index', index, false, false), J$.R(1050057, 'indexOptions', indexOptions, false, false), J$.T(1050145, function (error) {
                                                    jalangiLabel14:
                                                        while (true) {
                                                            try {
                                                                J$.Fe(1050121, arguments.callee, this, arguments);
                                                                arguments = J$.N(1050129, 'arguments', arguments, true, false, false);
                                                                error = J$.N(1050137, 'error', error, true, false, false);
                                                                if (J$.C(63864, J$.R(1050065, 'error', error, false, false))) {
                                                                    return J$.Rt(1050097, J$.F(1050089, J$.R(1050073, 'callback', callback, false, false), false)(J$.R(1050081, 'error', error, false, false)));
                                                                }
                                                                J$.F(1050113, J$.R(1050105, 'callback', callback, false, false), false)();
                                                            } catch (J$e) {
                                                                J$.Ex(1055217, J$e);
                                                            } finally {
                                                                if (J$.Fr(1055225))
                                                                    continue jalangiLabel14;
                                                                else
                                                                    return J$.Ra();
                                                            }
                                                        }
                                                }, 12, false));
                                            }
                                        } catch (J$e) {
                                            J$.Ex(1055233, J$e);
                                        } finally {
                                            if (J$.Fr(1055241))
                                                continue jalangiLabel15;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                        } catch (J$e) {
                            J$.Ex(1055249, J$e);
                        } finally {
                            if (J$.Fr(1055257))
                                continue jalangiLabel16;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function checkDone(_this, callback) {
                jalangiLabel18:
                    while (true) {
                        try {
                            J$.Fe(1050865, arguments.callee, this, arguments);
                            arguments = J$.N(1050873, 'arguments', arguments, true, false, false);
                            _this = J$.N(1050881, '_this', _this, true, false, false);
                            callback = J$.N(1050889, 'callback', callback, true, false, false);
                            J$.N(1050897, 'filesDoc', filesDoc, false, false, false);
                            if (J$.C(63880, J$.G(1050273, J$.R(1050265, '_this', _this, false, false), 'done')))
                                return J$.Rt(1050289, J$.T(1050281, true, 23, false));
                            if (J$.C(63928, J$.C(63896, J$.C(63888, J$.G(1050313, J$.G(1050305, J$.R(1050297, '_this', _this, false, false), 'state'), 'streamEnd')) ? J$.B(107402, '===', J$.G(1050337, J$.G(1050329, J$.R(1050321, '_this', _this, false, false), 'state'), 'outstandingRequests'), J$.T(1050345, 0, 22, false)) : J$._()) ? J$.U(107410, '!', J$.G(1050369, J$.G(1050361, J$.R(1050353, '_this', _this, false, false), 'state'), 'errored')) : J$._())) {
                                J$.P(1050393, J$.R(1050377, '_this', _this, false, false), 'done', J$.T(1050385, true, 23, false));
                                var filesDoc = J$.W(1050601, 'filesDoc', J$.F(1050593, J$.R(1050401, 'createFilesDoc', createFilesDoc, false, true), false)(J$.G(1050417, J$.R(1050409, '_this', _this, false, false), 'id'), J$.G(1050433, J$.R(1050425, '_this', _this, false, false), 'length'), J$.G(1050449, J$.R(1050441, '_this', _this, false, false), 'chunkSizeBytes'), J$.C(63904, J$.G(1050465, J$.R(1050457, '_this', _this, false, false), 'md5')) ? J$.M(1050497, J$.G(1050481, J$.R(1050473, '_this', _this, false, false), 'md5'), 'digest', false)(J$.T(1050489, 'hex', 21, false)) : J$._(), J$.G(1050513, J$.R(1050505, '_this', _this, false, false), 'filename'), J$.G(1050537, J$.G(1050529, J$.R(1050521, '_this', _this, false, false), 'options'), 'contentType'), J$.G(1050561, J$.G(1050553, J$.R(1050545, '_this', _this, false, false), 'options'), 'aliases'), J$.G(1050585, J$.G(1050577, J$.R(1050569, '_this', _this, false, false), 'options'), 'metadata')), filesDoc, false, false);
                                if (J$.C(63912, J$.F(1050633, J$.R(1050609, 'checkAborted', checkAborted, false, true), false)(J$.R(1050617, '_this', _this, false, false), J$.R(1050625, 'callback', callback, false, false)))) {
                                    return J$.Rt(1050649, J$.T(1050641, false, 23, false));
                                }
                                J$.M(1050825, J$.G(1050665, J$.R(1050657, '_this', _this, false, false), 'files'), 'insertOne', false)(J$.R(1050673, 'filesDoc', filesDoc, false, false), J$.F(1050697, J$.R(1050681, 'getWriteOptions', getWriteOptions, false, true), false)(J$.R(1050689, '_this', _this, false, false)), J$.T(1050817, function (error) {
                                    jalangiLabel17:
                                        while (true) {
                                            try {
                                                J$.Fe(1050793, arguments.callee, this, arguments);
                                                arguments = J$.N(1050801, 'arguments', arguments, true, false, false);
                                                error = J$.N(1050809, 'error', error, true, false, false);
                                                if (J$.C(63920, J$.R(1050705, 'error', error, false, false))) {
                                                    return J$.Rt(1050753, J$.F(1050745, J$.R(1050713, '__handleError', __handleError, false, true), false)(J$.R(1050721, '_this', _this, false, false), J$.R(1050729, 'error', error, false, false), J$.R(1050737, 'callback', callback, false, false)));
                                                }
                                                J$.M(1050785, J$.R(1050761, '_this', _this, false, false), 'emit', false)(J$.T(1050769, 'finish', 21, false), J$.R(1050777, 'filesDoc', filesDoc, false, false));
                                            } catch (J$e) {
                                                J$.Ex(1055265, J$e);
                                            } finally {
                                                if (J$.Fr(1055273))
                                                    continue jalangiLabel17;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false));
                                return J$.Rt(1050841, J$.T(1050833, true, 23, false));
                            }
                            return J$.Rt(1050857, J$.T(1050849, false, 23, false));
                        } catch (J$e) {
                            J$.Ex(1055281, J$e);
                        } finally {
                            if (J$.Fr(1055289))
                                continue jalangiLabel18;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function checkIndexes(_this, callback) {
                jalangiLabel24:
                    while (true) {
                        try {
                            J$.Fe(1051905, arguments.callee, this, arguments);
                            arguments = J$.N(1051913, 'arguments', arguments, true, false, false);
                            _this = J$.N(1051921, '_this', _this, true, false, false);
                            callback = J$.N(1051929, 'callback', callback, true, false, false);
                            J$.M(1051897, J$.G(1050913, J$.R(1050905, '_this', _this, false, false), 'files'), 'findOne', false)(J$.T(1050921, {}, 11, false), J$.T(1050937, { _id: J$.T(1050929, 1, 22, false) }, 11, false), J$.T(1051889, function (error, doc) {
                                jalangiLabel23:
                                    while (true) {
                                        try {
                                            J$.Fe(1051857, arguments.callee, this, arguments);
                                            arguments = J$.N(1051865, 'arguments', arguments, true, false, false);
                                            error = J$.N(1051873, 'error', error, true, false, false);
                                            doc = J$.N(1051881, 'doc', doc, true, false, false);
                                            if (J$.C(63936, J$.R(1050945, 'error', error, false, false))) {
                                                return J$.Rt(1050977, J$.F(1050969, J$.R(1050953, 'callback', callback, false, false), false)(J$.R(1050961, 'error', error, false, false)));
                                            }
                                            if (J$.C(63944, J$.R(1050985, 'doc', doc, false, false))) {
                                                return J$.Rt(1051009, J$.F(1051001, J$.R(1050993, 'callback', callback, false, false), false)());
                                            }
                                            J$.M(1051849, J$.M(1051033, J$.G(1051025, J$.R(1051017, '_this', _this, false, false), 'files'), 'listIndexes', false)(), 'toArray', false)(J$.T(1051841, function (error, indexes) {
                                                jalangiLabel22:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(1051785, arguments.callee, this, arguments);
                                                            arguments = J$.N(1051793, 'arguments', arguments, true, false, false);
                                                            error = J$.N(1051801, 'error', error, true, false, false);
                                                            indexes = J$.N(1051809, 'indexes', indexes, true, false, false);
                                                            J$.N(1051817, 'index', index, false, false, false);
                                                            J$.N(1051825, 'hasFileIndex', hasFileIndex, false, false, false);
                                                            J$.N(1051833, 'indexOptions', indexOptions, false, false, false);
                                                            if (J$.C(63968, J$.R(1051041, 'error', error, false, false))) {
                                                                if (J$.C(63960, J$.B(107418, '===', J$.G(1051057, J$.R(1051049, 'error', error, false, false), 'code'), J$.R(1051065, 'ERROR_NAMESPACE_NOT_FOUND', ERROR_NAMESPACE_NOT_FOUND, false, true)))) {
                                                                    var index = J$.W(1051097, 'index', J$.T(1051089, {
                                                                        filename: J$.T(1051073, 1, 22, false),
                                                                        uploadDate: J$.T(1051081, 1, 22, false)
                                                                    }, 11, false), index, false, false);
                                                                    J$.M(1051249, J$.G(1051113, J$.R(1051105, '_this', _this, false, false), 'files'), 'createIndex', false)(J$.R(1051121, 'index', index, false, false), J$.T(1051137, { background: J$.T(1051129, false, 23, false) }, 11, false), J$.T(1051241, function (error) {
                                                                        jalangiLabel19:
                                                                            while (true) {
                                                                                try {
                                                                                    J$.Fe(1051217, arguments.callee, this, arguments);
                                                                                    arguments = J$.N(1051225, 'arguments', arguments, true, false, false);
                                                                                    error = J$.N(1051233, 'error', error, true, false, false);
                                                                                    if (J$.C(63952, J$.R(1051145, 'error', error, false, false))) {
                                                                                        return J$.Rt(1051177, J$.F(1051169, J$.R(1051153, 'callback', callback, false, false), false)(J$.R(1051161, 'error', error, false, false)));
                                                                                    }
                                                                                    J$.F(1051209, J$.R(1051185, 'checkChunksIndex', checkChunksIndex, false, true), false)(J$.R(1051193, '_this', _this, false, false), J$.R(1051201, 'callback', callback, false, false));
                                                                                } catch (J$e) {
                                                                                    J$.Ex(1055297, J$e);
                                                                                } finally {
                                                                                    if (J$.Fr(1055305))
                                                                                        continue jalangiLabel19;
                                                                                    else
                                                                                        return J$.Ra();
                                                                                }
                                                                            }
                                                                    }, 12, false));
                                                                    return J$.Rt(1051257, undefined);
                                                                }
                                                                return J$.Rt(1051289, J$.F(1051281, J$.R(1051265, 'callback', callback, false, false), false)(J$.R(1051273, 'error', error, false, false)));
                                                            }
                                                            var hasFileIndex = J$.W(1051305, 'hasFileIndex', J$.T(1051297, false, 23, false), hasFileIndex, false, false);
                                                            J$.M(1051505, J$.R(1051313, 'indexes', indexes, false, false), 'forEach', false)(J$.T(1051497, function (index) {
                                                                jalangiLabel20:
                                                                    while (true) {
                                                                        try {
                                                                            J$.Fe(1051465, arguments.callee, this, arguments);
                                                                            arguments = J$.N(1051473, 'arguments', arguments, true, false, false);
                                                                            index = J$.N(1051481, 'index', index, true, false, false);
                                                                            J$.N(1051489, 'keys', keys, false, false, false);
                                                                            var keys = J$.W(1051353, 'keys', J$.M(1051345, J$.I(typeof Object === 'undefined' ? Object = J$.R(1051321, 'Object', undefined, true, true) : Object = J$.R(1051321, 'Object', Object, true, true)), 'keys', false)(J$.G(1051337, J$.R(1051329, 'index', index, false, false), 'key')), keys, false, false);
                                                                            if (J$.C(63992, J$.C(63984, J$.C(63976, J$.B(107426, '===', J$.G(1051369, J$.R(1051361, 'keys', keys, false, false), 'length'), J$.T(1051377, 2, 22, false))) ? J$.B(107434, '===', J$.G(1051401, J$.G(1051393, J$.R(1051385, 'index', index, false, false), 'key'), 'filename'), J$.T(1051409, 1, 22, false)) : J$._()) ? J$.B(107442, '===', J$.G(1051433, J$.G(1051425, J$.R(1051417, 'index', index, false, false), 'key'), 'uploadDate'), J$.T(1051441, 1, 22, false)) : J$._())) {
                                                                                hasFileIndex = J$.W(1051457, 'hasFileIndex', J$.T(1051449, true, 23, false), hasFileIndex, false, false);
                                                                            }
                                                                        } catch (J$e) {
                                                                            J$.Ex(1055313, J$e);
                                                                        } finally {
                                                                            if (J$.Fr(1055321))
                                                                                continue jalangiLabel20;
                                                                            else
                                                                                return J$.Ra();
                                                                        }
                                                                    }
                                                            }, 12, false));
                                                            if (J$.C(64008, J$.R(1051513, 'hasFileIndex', hasFileIndex, false, false))) {
                                                                J$.F(1051545, J$.R(1051521, 'checkChunksIndex', checkChunksIndex, false, true), false)(J$.R(1051529, '_this', _this, false, false), J$.R(1051537, 'callback', callback, false, false));
                                                            } else {
                                                                index = J$.W(1051577, 'index', J$.T(1051569, {
                                                                    filename: J$.T(1051553, 1, 22, false),
                                                                    uploadDate: J$.T(1051561, 1, 22, false)
                                                                }, 11, false), index, false, false);
                                                                var indexOptions = J$.W(1051609, 'indexOptions', J$.F(1051601, J$.R(1051585, 'getWriteOptions', getWriteOptions, false, true), false)(J$.R(1051593, '_this', _this, false, false)), indexOptions, false, false);
                                                                J$.P(1051633, J$.R(1051617, 'indexOptions', indexOptions, false, false), 'background', J$.T(1051625, false, 23, false));
                                                                J$.M(1051777, J$.G(1051649, J$.R(1051641, '_this', _this, false, false), 'files'), 'createIndex', false)(J$.R(1051657, 'index', index, false, false), J$.R(1051665, 'indexOptions', indexOptions, false, false), J$.T(1051769, function (error) {
                                                                    jalangiLabel21:
                                                                        while (true) {
                                                                            try {
                                                                                J$.Fe(1051745, arguments.callee, this, arguments);
                                                                                arguments = J$.N(1051753, 'arguments', arguments, true, false, false);
                                                                                error = J$.N(1051761, 'error', error, true, false, false);
                                                                                if (J$.C(64000, J$.R(1051673, 'error', error, false, false))) {
                                                                                    return J$.Rt(1051705, J$.F(1051697, J$.R(1051681, 'callback', callback, false, false), false)(J$.R(1051689, 'error', error, false, false)));
                                                                                }
                                                                                J$.F(1051737, J$.R(1051713, 'checkChunksIndex', checkChunksIndex, false, true), false)(J$.R(1051721, '_this', _this, false, false), J$.R(1051729, 'callback', callback, false, false));
                                                                            } catch (J$e) {
                                                                                J$.Ex(1055329, J$e);
                                                                            } finally {
                                                                                if (J$.Fr(1055337))
                                                                                    continue jalangiLabel21;
                                                                                else
                                                                                    return J$.Ra();
                                                                            }
                                                                        }
                                                                }, 12, false));
                                                            }
                                                        } catch (J$e) {
                                                            J$.Ex(1055345, J$e);
                                                        } finally {
                                                            if (J$.Fr(1055353))
                                                                continue jalangiLabel22;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false));
                                        } catch (J$e) {
                                            J$.Ex(1055361, J$e);
                                        } finally {
                                            if (J$.Fr(1055369))
                                                continue jalangiLabel23;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                        } catch (J$e) {
                            J$.Ex(1055377, J$e);
                        } finally {
                            if (J$.Fr(1055385))
                                continue jalangiLabel24;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function createFilesDoc(_id, length, chunkSize, md5, filename, contentType, aliases, metadata) {
                jalangiLabel25:
                    while (true) {
                        try {
                            J$.Fe(1052145, arguments.callee, this, arguments);
                            arguments = J$.N(1052153, 'arguments', arguments, true, false, false);
                            _id = J$.N(1052161, '_id', _id, true, false, false);
                            length = J$.N(1052169, 'length', length, true, false, false);
                            chunkSize = J$.N(1052177, 'chunkSize', chunkSize, true, false, false);
                            md5 = J$.N(1052185, 'md5', md5, true, false, false);
                            filename = J$.N(1052193, 'filename', filename, true, false, false);
                            contentType = J$.N(1052201, 'contentType', contentType, true, false, false);
                            aliases = J$.N(1052209, 'aliases', aliases, true, false, false);
                            metadata = J$.N(1052217, 'metadata', metadata, true, false, false);
                            J$.N(1052225, 'ret', ret, false, false, false);
                            var ret = J$.W(1051993, 'ret', J$.T(1051985, {
                                _id: J$.R(1051937, '_id', _id, false, false),
                                length: J$.R(1051945, 'length', length, false, false),
                                chunkSize: J$.R(1051953, 'chunkSize', chunkSize, false, false),
                                uploadDate: J$.F(1051969, J$.I(typeof Date === 'undefined' ? Date = J$.R(1051961, 'Date', undefined, true, true) : Date = J$.R(1051961, 'Date', Date, true, true)), true)(),
                                filename: J$.R(1051977, 'filename', filename, false, false)
                            }, 11, false), ret, false, false);
                            if (J$.C(64016, J$.R(1052001, 'md5', md5, false, false))) {
                                J$.P(1052025, J$.R(1052009, 'ret', ret, false, false), 'md5', J$.R(1052017, 'md5', md5, false, false));
                            }
                            if (J$.C(64024, J$.R(1052033, 'contentType', contentType, false, false))) {
                                J$.P(1052057, J$.R(1052041, 'ret', ret, false, false), 'contentType', J$.R(1052049, 'contentType', contentType, false, false));
                            }
                            if (J$.C(64032, J$.R(1052065, 'aliases', aliases, false, false))) {
                                J$.P(1052089, J$.R(1052073, 'ret', ret, false, false), 'aliases', J$.R(1052081, 'aliases', aliases, false, false));
                            }
                            if (J$.C(64040, J$.R(1052097, 'metadata', metadata, false, false))) {
                                J$.P(1052121, J$.R(1052105, 'ret', ret, false, false), 'metadata', J$.R(1052113, 'metadata', metadata, false, false));
                            }
                            return J$.Rt(1052137, J$.R(1052129, 'ret', ret, false, false));
                        } catch (J$e) {
                            J$.Ex(1055393, J$e);
                        } finally {
                            if (J$.Fr(1055401))
                                continue jalangiLabel25;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function doWrite(_this, chunk, encoding, callback) {
                jalangiLabel27:
                    while (true) {
                        try {
                            J$.Fe(1053489, arguments.callee, this, arguments);
                            arguments = J$.N(1053497, 'arguments', arguments, true, false, false);
                            _this = J$.N(1053505, '_this', _this, true, false, false);
                            chunk = J$.N(1053513, 'chunk', chunk, true, false, false);
                            encoding = J$.N(1053521, 'encoding', encoding, true, false, false);
                            callback = J$.N(1053529, 'callback', callback, true, false, false);
                            J$.N(1053537, 'inputBuf', inputBuf, false, false, false);
                            J$.N(1053545, 'inputBufRemaining', inputBufRemaining, false, false, false);
                            J$.N(1053553, 'spaceRemaining', spaceRemaining, false, false, false);
                            J$.N(1053561, 'numToCopy', numToCopy, false, false, false);
                            J$.N(1053569, 'outstandingRequests', outstandingRequests, false, false, false);
                            J$.N(1053577, 'inputBufPos', inputBufPos, false, false, false);
                            J$.N(1053585, 'doc', doc, false, false, false);
                            if (J$.C(64048, J$.F(1052257, J$.R(1052233, 'checkAborted', checkAborted, false, true), false)(J$.R(1052241, '_this', _this, false, false), J$.R(1052249, 'callback', callback, false, false)))) {
                                return J$.Rt(1052273, J$.T(1052265, false, 23, false));
                            }
                            var inputBuf = J$.W(1052345, 'inputBuf', J$.C(64056, J$.M(1052297, J$.R(1052281, 'Buffer', Buffer, false, true), 'isBuffer', false)(J$.R(1052289, 'chunk', chunk, false, false))) ? J$.R(1052305, 'chunk', chunk, false, false) : J$.M(1052337, J$.R(1052313, 'Buffer', Buffer, false, true), 'from', false)(J$.R(1052321, 'chunk', chunk, false, false), J$.R(1052329, 'encoding', encoding, false, false)), inputBuf, false, false);
                            J$.A(1052377, J$.R(1052353, '_this', _this, false, false), 'length', '+')(J$.G(1052369, J$.R(1052361, 'inputBuf', inputBuf, false, false), 'length'));
                            if (J$.C(64072, J$.B(107458, '<', J$.B(107450, '+', J$.G(1052393, J$.R(1052385, '_this', _this, false, false), 'pos'), J$.G(1052409, J$.R(1052401, 'inputBuf', inputBuf, false, false), 'length')), J$.G(1052425, J$.R(1052417, '_this', _this, false, false), 'chunkSizeBytes')))) {
                                J$.M(1052473, J$.R(1052433, 'inputBuf', inputBuf, false, false), 'copy', false)(J$.G(1052449, J$.R(1052441, '_this', _this, false, false), 'bufToStore'), J$.G(1052465, J$.R(1052457, '_this', _this, false, false), 'pos'));
                                J$.A(1052505, J$.R(1052481, '_this', _this, false, false), 'pos', '+')(J$.G(1052497, J$.R(1052489, 'inputBuf', inputBuf, false, false), 'length'));
                                J$.C(64064, J$.R(1052513, 'callback', callback, false, false)) ? J$.F(1052529, J$.R(1052521, 'callback', callback, false, false), false)() : J$._();
                                return J$.Rt(1052545, J$.T(1052537, true, 23, false));
                            }
                            var inputBufRemaining = J$.W(1052569, 'inputBufRemaining', J$.G(1052561, J$.R(1052553, 'inputBuf', inputBuf, false, false), 'length'), inputBufRemaining, false, false);
                            var spaceRemaining = J$.W(1052609, 'spaceRemaining', J$.B(107466, '-', J$.G(1052585, J$.R(1052577, '_this', _this, false, false), 'chunkSizeBytes'), J$.G(1052601, J$.R(1052593, '_this', _this, false, false), 'pos')), spaceRemaining, false, false);
                            var numToCopy = J$.W(1052657, 'numToCopy', J$.M(1052649, J$.I(typeof Math === 'undefined' ? Math = J$.R(1052617, 'Math', undefined, true, true) : Math = J$.R(1052617, 'Math', Math, true, true)), 'min', false)(J$.R(1052625, 'spaceRemaining', spaceRemaining, false, false), J$.G(1052641, J$.R(1052633, 'inputBuf', inputBuf, false, false), 'length')), numToCopy, false, false);
                            var outstandingRequests = J$.W(1052673, 'outstandingRequests', J$.T(1052665, 0, 22, false), outstandingRequests, false, false);
                            while (J$.C(64128, J$.B(107474, '>', J$.R(1052681, 'inputBufRemaining', inputBufRemaining, false, false), J$.T(1052689, 0, 22, false)))) {
                                var inputBufPos = J$.W(1052721, 'inputBufPos', J$.B(107482, '-', J$.G(1052705, J$.R(1052697, 'inputBuf', inputBuf, false, false), 'length'), J$.R(1052713, 'inputBufRemaining', inputBufRemaining, false, false)), inputBufPos, false, false);
                                J$.M(1052793, J$.R(1052729, 'inputBuf', inputBuf, false, false), 'copy', false)(J$.G(1052745, J$.R(1052737, '_this', _this, false, false), 'bufToStore'), J$.G(1052761, J$.R(1052753, '_this', _this, false, false), 'pos'), J$.R(1052769, 'inputBufPos', inputBufPos, false, false), J$.B(107490, '+', J$.R(1052777, 'inputBufPos', inputBufPos, false, false), J$.R(1052785, 'numToCopy', numToCopy, false, false)));
                                J$.A(1052817, J$.R(1052801, '_this', _this, false, false), 'pos', '+')(J$.R(1052809, 'numToCopy', numToCopy, false, false));
                                spaceRemaining = J$.W(1052841, 'spaceRemaining', J$.B(107498, '-', J$.R(1052833, 'spaceRemaining', spaceRemaining, false, false), J$.R(1052825, 'numToCopy', numToCopy, false, false)), spaceRemaining, false, false);
                                if (J$.C(64120, J$.B(107506, '===', J$.R(1052849, 'spaceRemaining', spaceRemaining, false, false), J$.T(1052857, 0, 22, false)))) {
                                    if (J$.C(64080, J$.G(1052873, J$.R(1052865, '_this', _this, false, false), 'md5'))) {
                                        J$.M(1052913, J$.G(1052889, J$.R(1052881, '_this', _this, false, false), 'md5'), 'update', false)(J$.G(1052905, J$.R(1052897, '_this', _this, false, false), 'bufToStore'));
                                    }
                                    var doc = J$.W(1052985, 'doc', J$.F(1052977, J$.R(1052921, 'createChunkDoc', createChunkDoc, false, true), false)(J$.G(1052937, J$.R(1052929, '_this', _this, false, false), 'id'), J$.G(1052953, J$.R(1052945, '_this', _this, false, false), 'n'), J$.G(1052969, J$.R(1052961, '_this', _this, false, false), 'bufToStore')), doc, false, false);
                                    J$.A(1053009, J$.G(1053001, J$.R(1052993, '_this', _this, false, false), 'state'), 'outstandingRequests', '+')(1);
                                    outstandingRequests = J$.W(1053025, 'outstandingRequests', J$.B(107522, '+', J$.U(107514, '+', J$.R(1053017, 'outstandingRequests', outstandingRequests, false, false)), 1), outstandingRequests, false, false);
                                    if (J$.C(64088, J$.F(1053057, J$.R(1053033, 'checkAborted', checkAborted, false, true), false)(J$.R(1053041, '_this', _this, false, false), J$.R(1053049, 'callback', callback, false, false)))) {
                                        return J$.Rt(1053073, J$.T(1053065, false, 23, false));
                                    }
                                    J$.M(1053337, J$.G(1053089, J$.R(1053081, '_this', _this, false, false), 'chunks'), 'insertOne', false)(J$.R(1053097, 'doc', doc, false, false), J$.F(1053121, J$.R(1053105, 'getWriteOptions', getWriteOptions, false, true), false)(J$.R(1053113, '_this', _this, false, false)), J$.T(1053329, function (error) {
                                        jalangiLabel26:
                                            while (true) {
                                                try {
                                                    J$.Fe(1053305, arguments.callee, this, arguments);
                                                    arguments = J$.N(1053313, 'arguments', arguments, true, false, false);
                                                    error = J$.N(1053321, 'error', error, true, false, false);
                                                    if (J$.C(64096, J$.R(1053129, 'error', error, false, false))) {
                                                        return J$.Rt(1053169, J$.F(1053161, J$.R(1053137, '__handleError', __handleError, false, true), false)(J$.R(1053145, '_this', _this, false, false), J$.R(1053153, 'error', error, false, false)));
                                                    }
                                                    J$.A(1053193, J$.G(1053185, J$.R(1053177, '_this', _this, false, false), 'state'), 'outstandingRequests', '-')(1);
                                                    outstandingRequests = J$.W(1053209, 'outstandingRequests', J$.B(107538, '-', J$.U(107530, '+', J$.R(1053201, 'outstandingRequests', outstandingRequests, false, false)), 1), outstandingRequests, false, false);
                                                    if (J$.C(64112, J$.U(107546, '!', J$.R(1053217, 'outstandingRequests', outstandingRequests, false, false)))) {
                                                        J$.M(1053249, J$.R(1053225, '_this', _this, false, false), 'emit', false)(J$.T(1053233, 'drain', 21, false), J$.R(1053241, 'doc', doc, false, false));
                                                        J$.C(64104, J$.R(1053257, 'callback', callback, false, false)) ? J$.F(1053273, J$.R(1053265, 'callback', callback, false, false), false)() : J$._();
                                                        J$.F(1053297, J$.R(1053281, 'checkDone', checkDone, false, true), false)(J$.R(1053289, '_this', _this, false, false));
                                                    }
                                                } catch (J$e) {
                                                    J$.Ex(1055409, J$e);
                                                } finally {
                                                    if (J$.Fr(1055417))
                                                        continue jalangiLabel26;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false));
                                    spaceRemaining = J$.W(1053361, 'spaceRemaining', J$.G(1053353, J$.R(1053345, '_this', _this, false, false), 'chunkSizeBytes'), spaceRemaining, false, false);
                                    J$.P(1053385, J$.R(1053369, '_this', _this, false, false), 'pos', J$.T(1053377, 0, 22, false));
                                    J$.A(1053401, J$.R(1053393, '_this', _this, false, false), 'n', '+')(1);
                                }
                                inputBufRemaining = J$.W(1053425, 'inputBufRemaining', J$.B(107554, '-', J$.R(1053417, 'inputBufRemaining', inputBufRemaining, false, false), J$.R(1053409, 'numToCopy', numToCopy, false, false)), inputBufRemaining, false, false);
                                numToCopy = J$.W(1053465, 'numToCopy', J$.M(1053457, J$.I(typeof Math === 'undefined' ? Math = J$.R(1053433, 'Math', undefined, true, true) : Math = J$.R(1053433, 'Math', Math, true, true)), 'min', false)(J$.R(1053441, 'spaceRemaining', spaceRemaining, false, false), J$.R(1053449, 'inputBufRemaining', inputBufRemaining, false, false)), numToCopy, false, false);
                            }
                            return J$.Rt(1053481, J$.T(1053473, false, 23, false));
                        } catch (J$e) {
                            J$.Ex(1055425, J$e);
                        } finally {
                            if (J$.Fr(1055433))
                                continue jalangiLabel27;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function getWriteOptions(_this) {
                jalangiLabel28:
                    while (true) {
                        try {
                            J$.Fe(1053793, arguments.callee, this, arguments);
                            arguments = J$.N(1053801, 'arguments', arguments, true, false, false);
                            _this = J$.N(1053809, '_this', _this, true, false, false);
                            J$.N(1053817, 'obj', obj, false, false, false);
                            var obj = J$.W(1053601, 'obj', J$.T(1053593, {}, 11, false), obj, false, false);
                            if (J$.C(64136, J$.G(1053625, J$.G(1053617, J$.R(1053609, '_this', _this, false, false), 'options'), 'writeConcern'))) {
                                J$.P(1053673, J$.R(1053633, 'obj', obj, false, false), 'w', J$.G(1053665, J$.G(1053657, J$.G(1053649, J$.R(1053641, '_this', _this, false, false), 'options'), 'writeConcern'), 'w'));
                                J$.P(1053721, J$.R(1053681, 'obj', obj, false, false), 'wtimeout', J$.G(1053713, J$.G(1053705, J$.G(1053697, J$.R(1053689, '_this', _this, false, false), 'options'), 'writeConcern'), 'wtimeout'));
                                J$.P(1053769, J$.R(1053729, 'obj', obj, false, false), 'j', J$.G(1053761, J$.G(1053753, J$.G(1053745, J$.R(1053737, '_this', _this, false, false), 'options'), 'writeConcern'), 'j'));
                            }
                            return J$.Rt(1053785, J$.R(1053777, 'obj', obj, false, false));
                        } catch (J$e) {
                            J$.Ex(1055441, J$e);
                        } finally {
                            if (J$.Fr(1055449))
                                continue jalangiLabel28;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function waitForIndexes(_this, callback) {
                jalangiLabel30:
                    while (true) {
                        try {
                            J$.Fe(1053985, arguments.callee, this, arguments);
                            arguments = J$.N(1053993, 'arguments', arguments, true, false, false);
                            _this = J$.N(1054001, '_this', _this, true, false, false);
                            callback = J$.N(1054009, 'callback', callback, true, false, false);
                            if (J$.C(64144, J$.G(1053849, J$.G(1053841, J$.G(1053833, J$.R(1053825, '_this', _this, false, false), 'bucket'), 's'), 'checkedIndexes'))) {
                                return J$.Rt(1053881, J$.F(1053873, J$.R(1053857, 'callback', callback, false, false), false)(J$.T(1053865, false, 23, false)));
                            }
                            J$.M(1053961, J$.G(1053897, J$.R(1053889, '_this', _this, false, false), 'bucket'), 'once', false)(J$.T(1053905, 'index', 21, false), J$.T(1053953, function () {
                                jalangiLabel29:
                                    while (true) {
                                        try {
                                            J$.Fe(1053937, arguments.callee, this, arguments);
                                            arguments = J$.N(1053945, 'arguments', arguments, true, false, false);
                                            J$.F(1053929, J$.R(1053913, 'callback', callback, false, false), false)(J$.T(1053921, true, 23, false));
                                        } catch (J$e) {
                                            J$.Ex(1055457, J$e);
                                        } finally {
                                            if (J$.Fr(1055465))
                                                continue jalangiLabel29;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            return J$.Rt(1053977, J$.T(1053969, true, 23, false));
                        } catch (J$e) {
                            J$.Ex(1055473, J$e);
                        } finally {
                            if (J$.Fr(1055481))
                                continue jalangiLabel30;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function writeRemnant(_this, callback) {
                jalangiLabel32:
                    while (true) {
                        try {
                            J$.Fe(1054553, arguments.callee, this, arguments);
                            arguments = J$.N(1054561, 'arguments', arguments, true, false, false);
                            _this = J$.N(1054569, '_this', _this, true, false, false);
                            callback = J$.N(1054577, 'callback', callback, true, false, false);
                            J$.N(1054585, 'remnant', remnant, false, false, false);
                            J$.N(1054593, 'doc', doc, false, false, false);
                            if (J$.C(64152, J$.B(107562, '===', J$.G(1054025, J$.R(1054017, '_this', _this, false, false), 'pos'), J$.T(1054033, 0, 22, false)))) {
                                return J$.Rt(1054073, J$.F(1054065, J$.R(1054041, 'checkDone', checkDone, false, true), false)(J$.R(1054049, '_this', _this, false, false), J$.R(1054057, 'callback', callback, false, false)));
                            }
                            J$.A(1054097, J$.G(1054089, J$.R(1054081, '_this', _this, false, false), 'state'), 'outstandingRequests', '+')(1);
                            var remnant = J$.W(1054137, 'remnant', J$.M(1054129, J$.R(1054105, 'Buffer', Buffer, false, true), 'alloc', false)(J$.G(1054121, J$.R(1054113, '_this', _this, false, false), 'pos')), remnant, false, false);
                            J$.M(1054201, J$.G(1054153, J$.R(1054145, '_this', _this, false, false), 'bufToStore'), 'copy', false)(J$.R(1054161, 'remnant', remnant, false, false), J$.T(1054169, 0, 22, false), J$.T(1054177, 0, 22, false), J$.G(1054193, J$.R(1054185, '_this', _this, false, false), 'pos'));
                            if (J$.C(64160, J$.G(1054217, J$.R(1054209, '_this', _this, false, false), 'md5'))) {
                                J$.M(1054249, J$.G(1054233, J$.R(1054225, '_this', _this, false, false), 'md5'), 'update', false)(J$.R(1054241, 'remnant', remnant, false, false));
                            }
                            var doc = J$.W(1054313, 'doc', J$.F(1054305, J$.R(1054257, 'createChunkDoc', createChunkDoc, false, true), false)(J$.G(1054273, J$.R(1054265, '_this', _this, false, false), 'id'), J$.G(1054289, J$.R(1054281, '_this', _this, false, false), 'n'), J$.R(1054297, 'remnant', remnant, false, false)), doc, false, false);
                            if (J$.C(64168, J$.F(1054345, J$.R(1054321, 'checkAborted', checkAborted, false, true), false)(J$.R(1054329, '_this', _this, false, false), J$.R(1054337, 'callback', callback, false, false)))) {
                                return J$.Rt(1054361, J$.T(1054353, false, 23, false));
                            }
                            J$.M(1054545, J$.G(1054377, J$.R(1054369, '_this', _this, false, false), 'chunks'), 'insertOne', false)(J$.R(1054385, 'doc', doc, false, false), J$.F(1054409, J$.R(1054393, 'getWriteOptions', getWriteOptions, false, true), false)(J$.R(1054401, '_this', _this, false, false)), J$.T(1054537, function (error) {
                                jalangiLabel31:
                                    while (true) {
                                        try {
                                            J$.Fe(1054513, arguments.callee, this, arguments);
                                            arguments = J$.N(1054521, 'arguments', arguments, true, false, false);
                                            error = J$.N(1054529, 'error', error, true, false, false);
                                            if (J$.C(64176, J$.R(1054417, 'error', error, false, false))) {
                                                return J$.Rt(1054457, J$.F(1054449, J$.R(1054425, '__handleError', __handleError, false, true), false)(J$.R(1054433, '_this', _this, false, false), J$.R(1054441, 'error', error, false, false)));
                                            }
                                            J$.A(1054481, J$.G(1054473, J$.R(1054465, '_this', _this, false, false), 'state'), 'outstandingRequests', '-')(1);
                                            J$.F(1054505, J$.R(1054489, 'checkDone', checkDone, false, true), false)(J$.R(1054497, '_this', _this, false, false));
                                        } catch (J$e) {
                                            J$.Ex(1055489, J$e);
                                        } finally {
                                            if (J$.Fr(1055497))
                                                continue jalangiLabel31;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                        } catch (J$e) {
                            J$.Ex(1055505, J$e);
                        } finally {
                            if (J$.Fr(1055513))
                                continue jalangiLabel32;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function checkAborted(_this, callback) {
                jalangiLabel33:
                    while (true) {
                        try {
                            J$.Fe(1054713, arguments.callee, this, arguments);
                            arguments = J$.N(1054721, 'arguments', arguments, true, false, false);
                            _this = J$.N(1054729, '_this', _this, true, false, false);
                            callback = J$.N(1054737, 'callback', callback, true, false, false);
                            if (J$.C(64192, J$.G(1054617, J$.G(1054609, J$.R(1054601, '_this', _this, false, false), 'state'), 'aborted'))) {
                                if (J$.C(64184, J$.B(107578, '===', J$.U(107570, 'typeof', J$.R(1054625, 'callback', callback, false, false)), J$.T(1054633, 'function', 21, false)))) {
                                    J$.F(1054673, J$.R(1054641, 'callback', callback, false, false), false)(J$.F(1054665, J$.I(typeof Error === 'undefined' ? Error = J$.R(1054649, 'Error', undefined, true, true) : Error = J$.R(1054649, 'Error', Error, true, true)), true)(J$.T(1054657, 'this stream has been aborted', 21, false)));
                                }
                                return J$.Rt(1054689, J$.T(1054681, true, 23, false));
                            }
                            return J$.Rt(1054705, J$.T(1054697, false, 23, false));
                        } catch (J$e) {
                            J$.Ex(1055521, J$e);
                        } finally {
                            if (J$.Fr(1055529))
                                continue jalangiLabel33;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(1054753, 'core', core, false, false, false);
            J$.N(1054761, 'crypto', crypto, false, false, false);
            J$.N(1054769, 'stream', stream, false, false, false);
            J$.N(1054777, 'util', util, false, false, false);
            J$.N(1054785, 'Buffer', Buffer, false, false, false);
            J$.N(1054793, 'ERROR_NAMESPACE_NOT_FOUND', ERROR_NAMESPACE_NOT_FOUND, false, false, false);
            GridFSBucketWriteStream = J$.N(1054809, 'GridFSBucketWriteStream', J$.T(1054801, GridFSBucketWriteStream, 12, false), true, false, false);
            __handleError = J$.N(1054825, '__handleError', J$.T(1054817, __handleError, 12, false), true, false, false);
            createChunkDoc = J$.N(1054841, 'createChunkDoc', J$.T(1054833, createChunkDoc, 12, false), true, false, false);
            checkChunksIndex = J$.N(1054857, 'checkChunksIndex', J$.T(1054849, checkChunksIndex, 12, false), true, false, false);
            checkDone = J$.N(1054873, 'checkDone', J$.T(1054865, checkDone, 12, false), true, false, false);
            checkIndexes = J$.N(1054889, 'checkIndexes', J$.T(1054881, checkIndexes, 12, false), true, false, false);
            createFilesDoc = J$.N(1054905, 'createFilesDoc', J$.T(1054897, createFilesDoc, 12, false), true, false, false);
            doWrite = J$.N(1054921, 'doWrite', J$.T(1054913, doWrite, 12, false), true, false, false);
            getWriteOptions = J$.N(1054937, 'getWriteOptions', J$.T(1054929, getWriteOptions, 12, false), true, false, false);
            waitForIndexes = J$.N(1054953, 'waitForIndexes', J$.T(1054945, waitForIndexes, 12, false), true, false, false);
            writeRemnant = J$.N(1054969, 'writeRemnant', J$.T(1054961, writeRemnant, 12, false), true, false, false);
            checkAborted = J$.N(1054985, 'checkAborted', J$.T(1054977, checkAborted, 12, false), true, false, false);
            J$.T(1046753, 'use strict', 21, false);
            var core = J$.W(1046785, 'core', J$.F(1046777, J$.I(typeof require === 'undefined' ? require = J$.R(1046761, 'require', undefined, true, true) : require = J$.R(1046761, 'require', require, true, true)), false)(J$.T(1046769, '../core', 21, false)), core, false, true);
            var crypto = J$.W(1046817, 'crypto', J$.F(1046809, J$.I(typeof require === 'undefined' ? require = J$.R(1046793, 'require', undefined, true, true) : require = J$.R(1046793, 'require', require, true, true)), false)(J$.T(1046801, 'crypto', 21, false)), crypto, false, true);
            var stream = J$.W(1046849, 'stream', J$.F(1046841, J$.I(typeof require === 'undefined' ? require = J$.R(1046825, 'require', undefined, true, true) : require = J$.R(1046825, 'require', require, true, true)), false)(J$.T(1046833, 'stream', 21, false)), stream, false, true);
            var util = J$.W(1046881, 'util', J$.F(1046873, J$.I(typeof require === 'undefined' ? require = J$.R(1046857, 'require', undefined, true, true) : require = J$.R(1046857, 'require', require, true, true)), false)(J$.T(1046865, 'util', 21, false)), util, false, true);
            var Buffer = J$.W(1046921, 'Buffer', J$.G(1046913, J$.F(1046905, J$.I(typeof require === 'undefined' ? require = J$.R(1046889, 'require', undefined, true, true) : require = J$.R(1046889, 'require', require, true, true)), false)(J$.T(1046897, 'safe-buffer', 21, false)), 'Buffer'), Buffer, false, true);
            var ERROR_NAMESPACE_NOT_FOUND = J$.W(1046937, 'ERROR_NAMESPACE_NOT_FOUND', J$.T(1046929, 26, 22, false), ERROR_NAMESPACE_NOT_FOUND, false, true);
            J$.P(1046961, J$.I(typeof module === 'undefined' ? module = J$.R(1046945, 'module', undefined, true, true) : module = J$.R(1046945, 'module', module, true, true)), 'exports', J$.R(1046953, 'GridFSBucketWriteStream', GridFSBucketWriteStream, false, true));
            J$.M(1047833, J$.R(1047801, 'util', util, false, true), 'inherits', false)(J$.R(1047809, 'GridFSBucketWriteStream', GridFSBucketWriteStream, false, true), J$.G(1047825, J$.R(1047817, 'stream', stream, false, true), 'Writable'));
            J$.P(1048041, J$.G(1047849, J$.R(1047841, 'GridFSBucketWriteStream', GridFSBucketWriteStream, false, true), 'prototype'), 'write', J$.T(1048033, function (chunk, encoding, callback) {
                jalangiLabel3:
                    while (true) {
                        try {
                            J$.Fe(1047985, arguments.callee, this, arguments);
                            arguments = J$.N(1047993, 'arguments', arguments, true, false, false);
                            chunk = J$.N(1048001, 'chunk', chunk, true, false, false);
                            encoding = J$.N(1048009, 'encoding', encoding, true, false, false);
                            callback = J$.N(1048017, 'callback', callback, true, false, false);
                            J$.N(1048025, '_this', _this, false, false, false);
                            var _this = J$.W(1047865, '_this', J$.R(1047857, 'this', this, false, false), _this, false, false);
                            return J$.Rt(1047977, J$.F(1047969, J$.R(1047873, 'waitForIndexes', waitForIndexes, false, true), false)(J$.R(1047881, 'this', this, false, false), J$.T(1047961, function () {
                                jalangiLabel2:
                                    while (true) {
                                        try {
                                            J$.Fe(1047945, arguments.callee, this, arguments);
                                            arguments = J$.N(1047953, 'arguments', arguments, true, false, false);
                                            return J$.Rt(1047937, J$.F(1047929, J$.R(1047889, 'doWrite', doWrite, false, true), false)(J$.R(1047897, '_this', _this, false, false), J$.R(1047905, 'chunk', chunk, false, false), J$.R(1047913, 'encoding', encoding, false, false), J$.R(1047921, 'callback', callback, false, false)));
                                        } catch (J$e) {
                                            J$.Ex(1055025, J$e);
                                        } finally {
                                            if (J$.Fr(1055033))
                                                continue jalangiLabel2;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false)));
                        } catch (J$e) {
                            J$.Ex(1055041, J$e);
                        } finally {
                            if (J$.Fr(1055049))
                                continue jalangiLabel3;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(1048561, J$.G(1048057, J$.R(1048049, 'GridFSBucketWriteStream', GridFSBucketWriteStream, false, true), 'prototype'), 'abort', J$.T(1048553, function (callback) {
                jalangiLabel5:
                    while (true) {
                        try {
                            J$.Fe(1048521, arguments.callee, this, arguments);
                            arguments = J$.N(1048529, 'arguments', arguments, true, false, false);
                            callback = J$.N(1048537, 'callback', callback, true, false, false);
                            J$.N(1048545, 'error', error, false, false, false);
                            if (J$.C(63720, J$.G(1048081, J$.G(1048073, J$.R(1048065, 'this', this, false, false), 'state'), 'streamEnd'))) {
                                var error = J$.W(1048113, 'error', J$.F(1048105, J$.I(typeof Error === 'undefined' ? Error = J$.R(1048089, 'Error', undefined, true, true) : Error = J$.R(1048089, 'Error', Error, true, true)), true)(J$.T(1048097, 'Cannot abort a stream that has already completed', 21, false)), error, false, false);
                                if (J$.C(63712, J$.B(107290, '===', J$.U(107282, 'typeof', J$.R(1048121, 'callback', callback, false, false)), J$.T(1048129, 'function', 21, false)))) {
                                    return J$.Rt(1048161, J$.F(1048153, J$.R(1048137, 'callback', callback, false, false), false)(J$.R(1048145, 'error', error, false, false)));
                                }
                                return J$.Rt(1048209, J$.M(1048201, J$.G(1048185, J$.G(1048177, J$.R(1048169, 'this', this, false, false), 'state'), 'promiseLibrary'), 'reject', false)(J$.R(1048193, 'error', error, false, false)));
                            }
                            if (J$.C(63736, J$.G(1048233, J$.G(1048225, J$.R(1048217, 'this', this, false, false), 'state'), 'aborted'))) {
                                error = J$.W(1048265, 'error', J$.F(1048257, J$.I(typeof Error === 'undefined' ? Error = J$.R(1048241, 'Error', undefined, true, true) : Error = J$.R(1048241, 'Error', Error, true, true)), true)(J$.T(1048249, 'Cannot call abort() on a stream twice', 21, false)), error, false, false);
                                if (J$.C(63728, J$.B(107306, '===', J$.U(107298, 'typeof', J$.R(1048273, 'callback', callback, false, false)), J$.T(1048281, 'function', 21, false)))) {
                                    return J$.Rt(1048313, J$.F(1048305, J$.R(1048289, 'callback', callback, false, false), false)(J$.R(1048297, 'error', error, false, false)));
                                }
                                return J$.Rt(1048361, J$.M(1048353, J$.G(1048337, J$.G(1048329, J$.R(1048321, 'this', this, false, false), 'state'), 'promiseLibrary'), 'reject', false)(J$.R(1048345, 'error', error, false, false)));
                            }
                            J$.P(1048393, J$.G(1048377, J$.R(1048369, 'this', this, false, false), 'state'), 'aborted', J$.T(1048385, true, 23, false));
                            J$.M(1048513, J$.G(1048409, J$.R(1048401, 'this', this, false, false), 'chunks'), 'deleteMany', false)(J$.T(1048433, { files_id: J$.G(1048425, J$.R(1048417, 'this', this, false, false), 'id') }, 11, false), J$.T(1048505, function (error) {
                                jalangiLabel4:
                                    while (true) {
                                        try {
                                            J$.Fe(1048481, arguments.callee, this, arguments);
                                            arguments = J$.N(1048489, 'arguments', arguments, true, false, false);
                                            error = J$.N(1048497, 'error', error, true, false, false);
                                            if (J$.C(63744, J$.B(107322, '===', J$.U(107314, 'typeof', J$.R(1048441, 'callback', callback, false, false)), J$.T(1048449, 'function', 21, false))))
                                                J$.F(1048473, J$.R(1048457, 'callback', callback, false, false), false)(J$.R(1048465, 'error', error, false, false));
                                        } catch (J$e) {
                                            J$.Ex(1055057, J$e);
                                        } finally {
                                            if (J$.Fr(1055065))
                                                continue jalangiLabel4;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                        } catch (J$e) {
                            J$.Ex(1055073, J$e);
                        } finally {
                            if (J$.Fr(1055081))
                                continue jalangiLabel5;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(1049105, J$.G(1048577, J$.R(1048569, 'GridFSBucketWriteStream', GridFSBucketWriteStream, false, true), 'prototype'), 'end', J$.T(1049097, function (chunk, encoding, callback) {
                jalangiLabel9:
                    while (true) {
                        try {
                            J$.Fe(1049049, arguments.callee, this, arguments);
                            arguments = J$.N(1049057, 'arguments', arguments, true, false, false);
                            chunk = J$.N(1049065, 'chunk', chunk, true, false, false);
                            encoding = J$.N(1049073, 'encoding', encoding, true, false, false);
                            callback = J$.N(1049081, 'callback', callback, true, false, false);
                            J$.N(1049089, '_this', _this, false, false, false);
                            var _this = J$.W(1048593, '_this', J$.R(1048585, 'this', this, false, false), _this, false, false);
                            if (J$.C(63760, J$.B(107338, '===', J$.U(107330, 'typeof', J$.R(1048601, 'chunk', chunk, false, false)), J$.T(1048609, 'function', 21, false)))) {
                                callback = J$.W(1048625, 'callback', J$.R(1048617, 'chunk', chunk, false, false), callback, false, false), chunk = J$.W(1048641, 'chunk', J$.T(1048633, null, 25, false), chunk, false, false), encoding = J$.W(1048657, 'encoding', J$.T(1048649, null, 25, false), encoding, false, false);
                            } else if (J$.C(63752, J$.B(107354, '===', J$.U(107346, 'typeof', J$.R(1048665, 'encoding', encoding, false, false)), J$.T(1048673, 'function', 21, false)))) {
                                callback = J$.W(1048689, 'callback', J$.R(1048681, 'encoding', encoding, false, false), callback, false, false), encoding = J$.W(1048705, 'encoding', J$.T(1048697, null, 25, false), encoding, false, false);
                            }
                            if (J$.C(63768, J$.F(1048737, J$.R(1048713, 'checkAborted', checkAborted, false, true), false)(J$.R(1048721, 'this', this, false, false), J$.R(1048729, 'callback', callback, false, false)))) {
                                return J$.Rt(1048745, undefined);
                            }
                            J$.P(1048777, J$.G(1048761, J$.R(1048753, 'this', this, false, false), 'state'), 'streamEnd', J$.T(1048769, true, 23, false));
                            if (J$.C(63776, J$.R(1048785, 'callback', callback, false, false))) {
                                J$.M(1048873, J$.R(1048793, 'this', this, false, false), 'once', false)(J$.T(1048801, 'finish', 21, false), J$.T(1048865, function (result) {
                                    jalangiLabel6:
                                        while (true) {
                                            try {
                                                J$.Fe(1048841, arguments.callee, this, arguments);
                                                arguments = J$.N(1048849, 'arguments', arguments, true, false, false);
                                                result = J$.N(1048857, 'result', result, true, false, false);
                                                J$.F(1048833, J$.R(1048809, 'callback', callback, false, false), false)(J$.T(1048817, null, 25, false), J$.R(1048825, 'result', result, false, false));
                                            } catch (J$e) {
                                                J$.Ex(1055089, J$e);
                                            } finally {
                                                if (J$.Fr(1055097))
                                                    continue jalangiLabel6;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false));
                            }
                            if (J$.C(63784, J$.U(107362, '!', J$.R(1048881, 'chunk', chunk, false, false)))) {
                                J$.F(1048953, J$.R(1048889, 'waitForIndexes', waitForIndexes, false, true), false)(J$.R(1048897, 'this', this, false, false), J$.T(1048945, function () {
                                    jalangiLabel7:
                                        while (true) {
                                            try {
                                                J$.Fe(1048929, arguments.callee, this, arguments);
                                                arguments = J$.N(1048937, 'arguments', arguments, true, false, false);
                                                J$.F(1048921, J$.R(1048905, 'writeRemnant', writeRemnant, false, true), false)(J$.R(1048913, '_this', _this, false, false));
                                            } catch (J$e) {
                                                J$.Ex(1055105, J$e);
                                            } finally {
                                                if (J$.Fr(1055113))
                                                    continue jalangiLabel7;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false));
                                return J$.Rt(1048961, undefined);
                            }
                            J$.M(1049041, J$.R(1048969, 'this', this, false, false), 'write', false)(J$.R(1048977, 'chunk', chunk, false, false), J$.R(1048985, 'encoding', encoding, false, false), J$.T(1049033, function () {
                                jalangiLabel8:
                                    while (true) {
                                        try {
                                            J$.Fe(1049017, arguments.callee, this, arguments);
                                            arguments = J$.N(1049025, 'arguments', arguments, true, false, false);
                                            J$.F(1049009, J$.R(1048993, 'writeRemnant', writeRemnant, false, true), false)(J$.R(1049001, '_this', _this, false, false));
                                        } catch (J$e) {
                                            J$.Ex(1055121, J$e);
                                        } finally {
                                            if (J$.Fr(1055129))
                                                continue jalangiLabel8;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                        } catch (J$e) {
                            J$.Ex(1055137, J$e);
                        } finally {
                            if (J$.Fr(1055145))
                                continue jalangiLabel9;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
        } catch (J$e) {
            J$.Ex(1055537, J$e);
        } finally {
            if (J$.Sr(1055545))
                continue jalangiLabel34;
            else
                break jalangiLabel34;
        }
    }
// JALANGI DO NOT INSTRUMENT

