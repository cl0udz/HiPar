J$.noInstrEval = false;
jalangiLabel23:
    while (true) {
        try {
            J$.Se(817257, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestMongoDb/node_modules/mongodb/lib/core/sdam/topology_description.js');
            function _classCallCheck(instance, Constructor) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(808177, arguments.callee, this, arguments);
                            arguments = J$.N(808185, 'arguments', arguments, true, false, false);
                            instance = J$.N(808193, 'instance', instance, true, false, false);
                            Constructor = J$.N(808201, 'Constructor', Constructor, true, false, false);
                            if (J$.C(46760, J$.U(91706, '!', J$.B(91698, 'instanceof', J$.R(808137, 'instance', instance, false, false), J$.R(808145, 'Constructor', Constructor, false, false))))) {
                                throw J$.F(808169, J$.I(typeof TypeError === 'undefined' ? TypeError = J$.R(808153, 'TypeError', undefined, true, true) : TypeError = J$.R(808153, 'TypeError', TypeError, true, true)), true)(J$.T(808161, 'Cannot call a class as a function', 21, false));
                            }
                        } catch (J$e) {
                            J$.Ex(817465, J$e);
                        } finally {
                            if (J$.Fr(817473))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function _defineProperties(target, props) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(808449, arguments.callee, this, arguments);
                            arguments = J$.N(808457, 'arguments', arguments, true, false, false);
                            target = J$.N(808465, 'target', target, true, false, false);
                            props = J$.N(808473, 'props', props, true, false, false);
                            J$.N(808481, 'i', i, false, false, false);
                            J$.N(808489, 'descriptor', descriptor, false, false, false);
                            for (var i = J$.W(808217, 'i', J$.T(808209, 0, 22, false), i, false, false); J$.C(46784, J$.B(91714, '<', J$.R(808225, 'i', i, false, false), J$.G(808241, J$.R(808233, 'props', props, false, false), 'length'))); J$.B(91738, '-', i = J$.W(808257, 'i', J$.B(91730, '+', J$.U(91722, '+', J$.R(808249, 'i', i, false, false)), 1), i, false, false), 1)) {
                                var descriptor = J$.W(808289, 'descriptor', J$.G(808281, J$.R(808265, 'props', props, false, false), J$.R(808273, 'i', i, false, false)), descriptor, false, false);
                                J$.P(808329, J$.R(808297, 'descriptor', descriptor, false, false), 'enumerable', J$.C(46768, J$.G(808313, J$.R(808305, 'descriptor', descriptor, false, false), 'enumerable')) ? J$._() : J$.T(808321, false, 23, false));
                                J$.P(808353, J$.R(808337, 'descriptor', descriptor, false, false), 'configurable', J$.T(808345, true, 23, false));
                                if (J$.C(46776, J$.B(91746, 'in', J$.T(808361, 'value', 21, false), J$.R(808369, 'descriptor', descriptor, false, false))))
                                    J$.P(808393, J$.R(808377, 'descriptor', descriptor, false, false), 'writable', J$.T(808385, true, 23, false));
                                J$.M(808441, J$.I(typeof Object === 'undefined' ? Object = J$.R(808401, 'Object', undefined, true, true) : Object = J$.R(808401, 'Object', Object, true, true)), 'defineProperty', false)(J$.R(808409, 'target', target, false, false), J$.G(808425, J$.R(808417, 'descriptor', descriptor, false, false), 'key'), J$.R(808433, 'descriptor', descriptor, false, false));
                            }
                        } catch (J$e) {
                            J$.Ex(817481, J$e);
                        } finally {
                            if (J$.Fr(817489))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function _createClass(Constructor, protoProps, staticProps) {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(808601, arguments.callee, this, arguments);
                            arguments = J$.N(808609, 'arguments', arguments, true, false, false);
                            Constructor = J$.N(808617, 'Constructor', Constructor, true, false, false);
                            protoProps = J$.N(808625, 'protoProps', protoProps, true, false, false);
                            staticProps = J$.N(808633, 'staticProps', staticProps, true, false, false);
                            if (J$.C(46792, J$.R(808497, 'protoProps', protoProps, false, false)))
                                J$.F(808537, J$.R(808505, '_defineProperties', _defineProperties, false, true), false)(J$.G(808521, J$.R(808513, 'Constructor', Constructor, false, false), 'prototype'), J$.R(808529, 'protoProps', protoProps, false, false));
                            if (J$.C(46800, J$.R(808545, 'staticProps', staticProps, false, false)))
                                J$.F(808577, J$.R(808553, '_defineProperties', _defineProperties, false, true), false)(J$.R(808561, 'Constructor', Constructor, false, false), J$.R(808569, 'staticProps', staticProps, false, false));
                            return J$.Rt(808593, J$.R(808585, 'Constructor', Constructor, false, false));
                        } catch (J$e) {
                            J$.Ex(817497, J$e);
                        } finally {
                            if (J$.Fr(817505))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function topologyTypeForServerType(serverType) {
                jalangiLabel14:
                    while (true) {
                        try {
                            J$.Fe(814441, arguments.callee, this, arguments);
                            arguments = J$.N(814449, 'arguments', arguments, true, false, false);
                            serverType = J$.N(814457, 'serverType', serverType, true, false, false);
                            if (J$.C(47168, J$.B(92018, '===', J$.R(814321, 'serverType', serverType, false, false), J$.G(814337, J$.R(814329, 'ServerType', ServerType, false, true), 'Mongos'))))
                                return J$.Rt(814361, J$.G(814353, J$.R(814345, 'TopologyType', TopologyType, false, true), 'Sharded'));
                            if (J$.C(47176, J$.B(92026, '===', J$.R(814369, 'serverType', serverType, false, false), J$.G(814385, J$.R(814377, 'ServerType', ServerType, false, true), 'RSPrimary'))))
                                return J$.Rt(814409, J$.G(814401, J$.R(814393, 'TopologyType', TopologyType, false, true), 'ReplicaSetWithPrimary'));
                            return J$.Rt(814433, J$.G(814425, J$.R(814417, 'TopologyType', TopologyType, false, true), 'ReplicaSetNoPrimary'));
                        } catch (J$e) {
                            J$.Ex(817689, J$e);
                        } finally {
                            if (J$.Fr(817697))
                                continue jalangiLabel14;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function updateRsFromPrimary(serverDescriptions, setName, serverDescription, maxSetVersion, maxElectionId) {
                jalangiLabel18:
                    while (true) {
                        try {
                            J$.Fe(815937, arguments.callee, this, arguments);
                            arguments = J$.N(815945, 'arguments', arguments, true, false, false);
                            serverDescriptions = J$.N(815953, 'serverDescriptions', serverDescriptions, true, false, false);
                            setName = J$.N(815961, 'setName', setName, true, false, false);
                            serverDescription = J$.N(815969, 'serverDescription', serverDescription, true, false, false);
                            maxSetVersion = J$.N(815977, 'maxSetVersion', maxSetVersion, true, false, false);
                            maxElectionId = J$.N(815985, 'maxElectionId', maxElectionId, true, false, false);
                            J$.N(815993, 'electionIdOID', electionIdOID, false, false, false);
                            J$.N(816001, 'maxElectionIdOID', maxElectionIdOID, false, false, false);
                            J$.N(816009, '_iteratorNormalCompletion4', _iteratorNormalCompletion4, false, false, false);
                            J$.N(816017, '_didIteratorError4', _didIteratorError4, false, false, false);
                            J$.N(816025, '_iteratorError4', _iteratorError4, false, false, false);
                            J$.N(816033, '_iterator4', _iterator4, false, false, false);
                            J$.N(816041, '_step4', _step4, false, false, false);
                            J$.N(816049, 'address', address, false, false, false);
                            J$.N(816057, 'server', server, false, false, false);
                            J$.N(816065, 'currentAddresses', currentAddresses, false, false, false);
                            J$.N(816073, 'responseAddresses', responseAddresses, false, false, false);
                            setName = J$.W(814489, 'setName', J$.C(47184, J$.R(814465, 'setName', setName, false, false)) ? J$._() : J$.G(814481, J$.R(814473, 'serverDescription', serverDescription, false, false), 'setName'), setName, false, false);
                            if (J$.C(47192, J$.B(92034, '!==', J$.R(814497, 'setName', setName, false, false), J$.G(814513, J$.R(814505, 'serverDescription', serverDescription, false, false), 'setName')))) {
                                J$.M(814553, J$.R(814521, 'serverDescriptions', serverDescriptions, false, false), J$.T(814529, 'delete', 21, false), false)(J$.G(814545, J$.R(814537, 'serverDescription', serverDescription, false, false), 'address'));
                                return J$.Rt(814617, J$.T(814609, [
                                    J$.F(814577, J$.R(814561, 'checkHasPrimary', checkHasPrimary, false, true), false)(J$.R(814569, 'serverDescriptions', serverDescriptions, false, false)),
                                    J$.R(814585, 'setName', setName, false, false),
                                    J$.R(814593, 'maxSetVersion', maxSetVersion, false, false),
                                    J$.R(814601, 'maxElectionId', maxElectionId, false, false)
                                ], 10, false));
                            }
                            var electionIdOID = J$.W(814673, 'electionIdOID', J$.C(47200, J$.G(814633, J$.R(814625, 'serverDescription', serverDescription, false, false), 'electionId')) ? J$.G(814657, J$.G(814649, J$.R(814641, 'serverDescription', serverDescription, false, false), 'electionId'), '$oid') : J$.T(814665, null, 25, false), electionIdOID, false, false);
                            var maxElectionIdOID = J$.W(814713, 'maxElectionIdOID', J$.C(47208, J$.R(814681, 'maxElectionId', maxElectionId, false, false)) ? J$.G(814697, J$.R(814689, 'maxElectionId', maxElectionId, false, false), '$oid') : J$.T(814705, null, 25, false), maxElectionIdOID, false, false);
                            if (J$.C(47256, J$.C(47216, J$.B(92042, '!=', J$.G(814729, J$.R(814721, 'serverDescription', serverDescription, false, false), 'setVersion'), J$.T(814737, null, 25, false))) ? J$.B(92050, '!=', J$.R(814745, 'electionIdOID', electionIdOID, false, false), J$.T(814753, null, 25, false)) : J$._())) {
                                if (J$.C(47248, J$.C(47224, J$.B(92058, '!=', J$.R(814761, 'maxSetVersion', maxSetVersion, false, false), J$.T(814769, null, 25, false))) ? J$.B(92066, '!=', J$.R(814777, 'maxElectionIdOID', maxElectionIdOID, false, false), J$.T(814785, null, 25, false)) : J$._())) {
                                    if (J$.C(47240, J$.C(47232, J$.B(92074, '>', J$.R(814793, 'maxSetVersion', maxSetVersion, false, false), J$.G(814809, J$.R(814801, 'serverDescription', serverDescription, false, false), 'setVersion'))) ? J$._() : J$.B(92082, '>', J$.R(814817, 'maxElectionIdOID', maxElectionIdOID, false, false), J$.R(814825, 'electionIdOID', electionIdOID, false, false)))) {
                                        J$.M(814889, J$.R(814833, 'serverDescriptions', serverDescriptions, false, false), 'set', false)(J$.G(814849, J$.R(814841, 'serverDescription', serverDescription, false, false), 'address'), J$.F(814881, J$.R(814857, 'ServerDescription', ServerDescription, false, true), true)(J$.G(814873, J$.R(814865, 'serverDescription', serverDescription, false, false), 'address')));
                                        return J$.Rt(814953, J$.T(814945, [
                                            J$.F(814913, J$.R(814897, 'checkHasPrimary', checkHasPrimary, false, true), false)(J$.R(814905, 'serverDescriptions', serverDescriptions, false, false)),
                                            J$.R(814921, 'setName', setName, false, false),
                                            J$.R(814929, 'maxSetVersion', maxSetVersion, false, false),
                                            J$.R(814937, 'maxElectionId', maxElectionId, false, false)
                                        ], 10, false));
                                    }
                                }
                                maxElectionId = J$.W(814977, 'maxElectionId', J$.G(814969, J$.R(814961, 'serverDescription', serverDescription, false, false), 'electionId'), maxElectionId, false, false);
                            }
                            if (J$.C(47280, J$.C(47272, J$.B(92090, '!=', J$.G(814993, J$.R(814985, 'serverDescription', serverDescription, false, false), 'setVersion'), J$.T(815001, null, 25, false))) ? J$.C(47264, J$.B(92098, '==', J$.R(815009, 'maxSetVersion', maxSetVersion, false, false), J$.T(815017, null, 25, false))) ? J$._() : J$.B(92106, '>', J$.G(815033, J$.R(815025, 'serverDescription', serverDescription, false, false), 'setVersion'), J$.R(815041, 'maxSetVersion', maxSetVersion, false, false)) : J$._())) {
                                maxSetVersion = J$.W(815065, 'maxSetVersion', J$.G(815057, J$.R(815049, 'serverDescription', serverDescription, false, false), 'setVersion'), maxSetVersion, false, false);
                            }
                            var _iteratorNormalCompletion4 = J$.W(815081, '_iteratorNormalCompletion4', J$.T(815073, true, 23, false), _iteratorNormalCompletion4, false, false);
                            var _didIteratorError4 = J$.W(815097, '_didIteratorError4', J$.T(815089, false, 23, false), _didIteratorError4, false, false);
                            var _iteratorError4 = J$.W(815113, '_iteratorError4', J$.T(815105, undefined, 24, false), _iteratorError4, false, false);
                            try {
                                for (var _iterator4 = J$.W(815161, '_iterator4', J$.M(815153, J$.M(815129, J$.R(815121, 'serverDescriptions', serverDescriptions, false, false), 'keys', false)(), J$.G(815145, J$.I(typeof Symbol === 'undefined' ? Symbol = J$.R(815137, 'Symbol', undefined, true, true) : Symbol = J$.R(815137, 'Symbol', Symbol, true, true)), 'iterator'), false)(), _iterator4, false, false), _step4; J$.C(47304, J$.U(92114, '!', _iteratorNormalCompletion4 = J$.W(815201, '_iteratorNormalCompletion4', J$.G(815193, _step4 = J$.W(815185, '_step4', J$.M(815177, J$.R(815169, '_iterator4', _iterator4, false, false), 'next', false)(), _step4, false, false), 'done'), _iteratorNormalCompletion4, false, false))); _iteratorNormalCompletion4 = J$.W(815217, '_iteratorNormalCompletion4', J$.T(815209, true, 23, false), _iteratorNormalCompletion4, false, false)) {
                                    var address = J$.W(815241, 'address', J$.G(815233, J$.R(815225, '_step4', _step4, false, false), 'value'), address, false, false);
                                    var server = J$.W(815273, 'server', J$.M(815265, J$.R(815249, 'serverDescriptions', serverDescriptions, false, false), 'get', false)(J$.R(815257, 'address', address, false, false)), server, false, false);
                                    if (J$.C(47296, J$.C(47288, J$.B(92122, '===', J$.G(815289, J$.R(815281, 'server', server, false, false), 'type'), J$.G(815305, J$.R(815297, 'ServerType', ServerType, false, true), 'RSPrimary'))) ? J$.B(92130, '!==', J$.G(815321, J$.R(815313, 'server', server, false, false), 'address'), J$.G(815337, J$.R(815329, 'serverDescription', serverDescription, false, false), 'address')) : J$._())) {
                                        J$.M(815393, J$.R(815345, 'serverDescriptions', serverDescriptions, false, false), 'set', false)(J$.R(815353, 'address', address, false, false), J$.F(815385, J$.R(815361, 'ServerDescription', ServerDescription, false, true), true)(J$.G(815377, J$.R(815369, 'server', server, false, false), 'address')));
                                        break;
                                    }
                                }
                            } catch (err) {
                                J$.N(815433, 'err', err, false, false, true);
                                _didIteratorError4 = J$.W(815409, '_didIteratorError4', J$.T(815401, true, 23, false), _didIteratorError4, false, false);
                                _iteratorError4 = J$.W(815425, '_iteratorError4', J$.R(815417, 'err', err, false, false), _iteratorError4, false, false);
                            } finally {
                                try {
                                    if (J$.C(47320, J$.C(47312, J$.U(92138, '!', J$.R(815441, '_iteratorNormalCompletion4', _iteratorNormalCompletion4, false, false))) ? J$.B(92146, '!=', J$.G(815465, J$.R(815449, '_iterator4', _iterator4, false, false), J$.T(815457, 'return', 21, false)), J$.T(815473, null, 25, false)) : J$._())) {
                                        J$.M(815497, J$.R(815481, '_iterator4', _iterator4, false, false), J$.T(815489, 'return', 21, false), false)();
                                    }
                                } finally {
                                    if (J$.C(47328, J$.R(815505, '_didIteratorError4', _didIteratorError4, false, false))) {
                                        throw J$.R(815513, '_iteratorError4', _iteratorError4, false, false);
                                    }
                                }
                            }
                            J$.M(815641, J$.G(815529, J$.R(815521, 'serverDescription', serverDescription, false, false), 'allHosts'), 'forEach', false)(J$.T(815633, function (address) {
                                jalangiLabel15:
                                    while (true) {
                                        try {
                                            J$.Fe(815609, arguments.callee, this, arguments);
                                            arguments = J$.N(815617, 'arguments', arguments, true, false, false);
                                            address = J$.N(815625, 'address', address, true, false, false);
                                            if (J$.C(47336, J$.U(92154, '!', J$.M(815553, J$.R(815537, 'serverDescriptions', serverDescriptions, false, false), 'has', false)(J$.R(815545, 'address', address, false, false))))) {
                                                J$.M(815601, J$.R(815561, 'serverDescriptions', serverDescriptions, false, false), 'set', false)(J$.R(815569, 'address', address, false, false), J$.F(815593, J$.R(815577, 'ServerDescription', ServerDescription, false, true), true)(J$.R(815585, 'address', address, false, false)));
                                            }
                                        } catch (J$e) {
                                            J$.Ex(817705, J$e);
                                        } finally {
                                            if (J$.Fr(817713))
                                                continue jalangiLabel15;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            var currentAddresses = J$.W(815681, 'currentAddresses', J$.M(815673, J$.I(typeof Array === 'undefined' ? Array = J$.R(815649, 'Array', undefined, true, true) : Array = J$.R(815649, 'Array', Array, true, true)), 'from', false)(J$.M(815665, J$.R(815657, 'serverDescriptions', serverDescriptions, false, false), 'keys', false)()), currentAddresses, false, false);
                            var responseAddresses = J$.W(815705, 'responseAddresses', J$.G(815697, J$.R(815689, 'serverDescription', serverDescription, false, false), 'allHosts'), responseAddresses, false, false);
                            J$.M(815865, J$.M(815793, J$.R(815713, 'currentAddresses', currentAddresses, false, false), 'filter', false)(J$.T(815785, function (addr) {
                                jalangiLabel16:
                                    while (true) {
                                        try {
                                            J$.Fe(815761, arguments.callee, this, arguments);
                                            arguments = J$.N(815769, 'arguments', arguments, true, false, false);
                                            addr = J$.N(815777, 'addr', addr, true, false, false);
                                            return J$.Rt(815753, J$.B(92170, '===', J$.M(815737, J$.R(815721, 'responseAddresses', responseAddresses, false, false), 'indexOf', false)(J$.R(815729, 'addr', addr, false, false)), J$.U(92162, '-', J$.T(815745, 1, 22, false))));
                                        } catch (J$e) {
                                            J$.Ex(817721, J$e);
                                        } finally {
                                            if (J$.Fr(817729))
                                                continue jalangiLabel16;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false)), 'forEach', false)(J$.T(815857, function (address) {
                                jalangiLabel17:
                                    while (true) {
                                        try {
                                            J$.Fe(815833, arguments.callee, this, arguments);
                                            arguments = J$.N(815841, 'arguments', arguments, true, false, false);
                                            address = J$.N(815849, 'address', address, true, false, false);
                                            J$.M(815825, J$.R(815801, 'serverDescriptions', serverDescriptions, false, false), J$.T(815809, 'delete', 21, false), false)(J$.R(815817, 'address', address, false, false));
                                        } catch (J$e) {
                                            J$.Ex(817737, J$e);
                                        } finally {
                                            if (J$.Fr(817745))
                                                continue jalangiLabel17;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            return J$.Rt(815929, J$.T(815921, [
                                J$.F(815889, J$.R(815873, 'checkHasPrimary', checkHasPrimary, false, true), false)(J$.R(815881, 'serverDescriptions', serverDescriptions, false, false)),
                                J$.R(815897, 'setName', setName, false, false),
                                J$.R(815905, 'maxSetVersion', maxSetVersion, false, false),
                                J$.R(815913, 'maxElectionId', maxElectionId, false, false)
                            ], 10, false));
                        } catch (J$e) {
                            J$.Ex(817753, J$e);
                        } finally {
                            if (J$.Fr(817761))
                                continue jalangiLabel18;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function updateRsWithPrimaryFromMember(serverDescriptions, setName, serverDescription) {
                jalangiLabel19:
                    while (true) {
                        try {
                            J$.Fe(816265, arguments.callee, this, arguments);
                            arguments = J$.N(816273, 'arguments', arguments, true, false, false);
                            serverDescriptions = J$.N(816281, 'serverDescriptions', serverDescriptions, true, false, false);
                            setName = J$.N(816289, 'setName', setName, true, false, false);
                            serverDescription = J$.N(816297, 'serverDescription', serverDescription, true, false, false);
                            if (J$.C(47344, J$.B(92178, '==', J$.R(816081, 'setName', setName, false, false), J$.T(816089, null, 25, false)))) {
                                throw J$.F(816113, J$.I(typeof TypeError === 'undefined' ? TypeError = J$.R(816097, 'TypeError', undefined, true, true) : TypeError = J$.R(816097, 'TypeError', TypeError, true, true)), true)(J$.T(816105, 'setName is required', 21, false));
                            }
                            if (J$.C(47368, J$.C(47360, J$.B(92186, '!==', J$.R(816121, 'setName', setName, false, false), J$.G(816137, J$.R(816129, 'serverDescription', serverDescription, false, false), 'setName'))) ? J$._() : J$.C(47352, J$.G(816153, J$.R(816145, 'serverDescription', serverDescription, false, false), 'me')) ? J$.B(92194, '!==', J$.G(816169, J$.R(816161, 'serverDescription', serverDescription, false, false), 'address'), J$.G(816185, J$.R(816177, 'serverDescription', serverDescription, false, false), 'me')) : J$._())) {
                                J$.M(816225, J$.R(816193, 'serverDescriptions', serverDescriptions, false, false), J$.T(816201, 'delete', 21, false), false)(J$.G(816217, J$.R(816209, 'serverDescription', serverDescription, false, false), 'address'));
                            }
                            return J$.Rt(816257, J$.F(816249, J$.R(816233, 'checkHasPrimary', checkHasPrimary, false, true), false)(J$.R(816241, 'serverDescriptions', serverDescriptions, false, false)));
                        } catch (J$e) {
                            J$.Ex(817769, J$e);
                        } finally {
                            if (J$.Fr(817777))
                                continue jalangiLabel19;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function updateRsNoPrimaryFromMember(serverDescriptions, setName, serverDescription) {
                jalangiLabel21:
                    while (true) {
                        try {
                            J$.Fe(816705, arguments.callee, this, arguments);
                            arguments = J$.N(816713, 'arguments', arguments, true, false, false);
                            serverDescriptions = J$.N(816721, 'serverDescriptions', serverDescriptions, true, false, false);
                            setName = J$.N(816729, 'setName', setName, true, false, false);
                            serverDescription = J$.N(816737, 'serverDescription', serverDescription, true, false, false);
                            J$.N(816745, 'topologyType', topologyType, false, false, false);
                            var topologyType = J$.W(816321, 'topologyType', J$.G(816313, J$.R(816305, 'TopologyType', TopologyType, false, true), 'ReplicaSetNoPrimary'), topologyType, false, false);
                            setName = J$.W(816353, 'setName', J$.C(47376, J$.R(816329, 'setName', setName, false, false)) ? J$._() : J$.G(816345, J$.R(816337, 'serverDescription', serverDescription, false, false), 'setName'), setName, false, false);
                            if (J$.C(47384, J$.B(92202, '!==', J$.R(816361, 'setName', setName, false, false), J$.G(816377, J$.R(816369, 'serverDescription', serverDescription, false, false), 'setName')))) {
                                J$.M(816417, J$.R(816385, 'serverDescriptions', serverDescriptions, false, false), J$.T(816393, 'delete', 21, false), false)(J$.G(816409, J$.R(816401, 'serverDescription', serverDescription, false, false), 'address'));
                                return J$.Rt(816449, J$.T(816441, [
                                    J$.R(816425, 'topologyType', topologyType, false, false),
                                    J$.R(816433, 'setName', setName, false, false)
                                ], 10, false));
                            }
                            J$.M(816577, J$.G(816465, J$.R(816457, 'serverDescription', serverDescription, false, false), 'allHosts'), 'forEach', false)(J$.T(816569, function (address) {
                                jalangiLabel20:
                                    while (true) {
                                        try {
                                            J$.Fe(816545, arguments.callee, this, arguments);
                                            arguments = J$.N(816553, 'arguments', arguments, true, false, false);
                                            address = J$.N(816561, 'address', address, true, false, false);
                                            if (J$.C(47392, J$.U(92210, '!', J$.M(816489, J$.R(816473, 'serverDescriptions', serverDescriptions, false, false), 'has', false)(J$.R(816481, 'address', address, false, false))))) {
                                                J$.M(816537, J$.R(816497, 'serverDescriptions', serverDescriptions, false, false), 'set', false)(J$.R(816505, 'address', address, false, false), J$.F(816529, J$.R(816513, 'ServerDescription', ServerDescription, false, true), true)(J$.R(816521, 'address', address, false, false)));
                                            }
                                        } catch (J$e) {
                                            J$.Ex(817785, J$e);
                                        } finally {
                                            if (J$.Fr(817793))
                                                continue jalangiLabel20;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            if (J$.C(47408, J$.C(47400, J$.G(816593, J$.R(816585, 'serverDescription', serverDescription, false, false), 'me')) ? J$.B(92218, '!==', J$.G(816609, J$.R(816601, 'serverDescription', serverDescription, false, false), 'address'), J$.G(816625, J$.R(816617, 'serverDescription', serverDescription, false, false), 'me')) : J$._())) {
                                J$.M(816665, J$.R(816633, 'serverDescriptions', serverDescriptions, false, false), J$.T(816641, 'delete', 21, false), false)(J$.G(816657, J$.R(816649, 'serverDescription', serverDescription, false, false), 'address'));
                            }
                            return J$.Rt(816697, J$.T(816689, [
                                J$.R(816673, 'topologyType', topologyType, false, false),
                                J$.R(816681, 'setName', setName, false, false)
                            ], 10, false));
                        } catch (J$e) {
                            J$.Ex(817801, J$e);
                        } finally {
                            if (J$.Fr(817809))
                                continue jalangiLabel21;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function checkHasPrimary(serverDescriptions) {
                jalangiLabel22:
                    while (true) {
                        try {
                            J$.Fe(817145, arguments.callee, this, arguments);
                            arguments = J$.N(817153, 'arguments', arguments, true, false, false);
                            serverDescriptions = J$.N(817161, 'serverDescriptions', serverDescriptions, true, false, false);
                            J$.N(817169, '_iteratorNormalCompletion5', _iteratorNormalCompletion5, false, false, false);
                            J$.N(817177, '_didIteratorError5', _didIteratorError5, false, false, false);
                            J$.N(817185, '_iteratorError5', _iteratorError5, false, false, false);
                            J$.N(817193, '_iterator5', _iterator5, false, false, false);
                            J$.N(817201, '_step5', _step5, false, false, false);
                            J$.N(817209, 'addr', addr, false, false, false);
                            var _iteratorNormalCompletion5 = J$.W(816761, '_iteratorNormalCompletion5', J$.T(816753, true, 23, false), _iteratorNormalCompletion5, false, false);
                            var _didIteratorError5 = J$.W(816777, '_didIteratorError5', J$.T(816769, false, 23, false), _didIteratorError5, false, false);
                            var _iteratorError5 = J$.W(816793, '_iteratorError5', J$.T(816785, undefined, 24, false), _iteratorError5, false, false);
                            try {
                                for (var _iterator5 = J$.W(816841, '_iterator5', J$.M(816833, J$.M(816809, J$.R(816801, 'serverDescriptions', serverDescriptions, false, false), 'keys', false)(), J$.G(816825, J$.I(typeof Symbol === 'undefined' ? Symbol = J$.R(816817, 'Symbol', undefined, true, true) : Symbol = J$.R(816817, 'Symbol', Symbol, true, true)), 'iterator'), false)(), _iterator5, false, false), _step5; J$.C(47424, J$.U(92226, '!', _iteratorNormalCompletion5 = J$.W(816881, '_iteratorNormalCompletion5', J$.G(816873, _step5 = J$.W(816865, '_step5', J$.M(816857, J$.R(816849, '_iterator5', _iterator5, false, false), 'next', false)(), _step5, false, false), 'done'), _iteratorNormalCompletion5, false, false))); _iteratorNormalCompletion5 = J$.W(816897, '_iteratorNormalCompletion5', J$.T(816889, true, 23, false), _iteratorNormalCompletion5, false, false)) {
                                    var addr = J$.W(816921, 'addr', J$.G(816913, J$.R(816905, '_step5', _step5, false, false), 'value'), addr, false, false);
                                    if (J$.C(47416, J$.B(92234, '===', J$.G(816953, J$.M(816945, J$.R(816929, 'serverDescriptions', serverDescriptions, false, false), 'get', false)(J$.R(816937, 'addr', addr, false, false)), 'type'), J$.G(816969, J$.R(816961, 'ServerType', ServerType, false, true), 'RSPrimary')))) {
                                        return J$.Rt(816993, J$.G(816985, J$.R(816977, 'TopologyType', TopologyType, false, true), 'ReplicaSetWithPrimary'));
                                    }
                                }
                            } catch (err) {
                                J$.N(817033, 'err', err, false, false, true);
                                _didIteratorError5 = J$.W(817009, '_didIteratorError5', J$.T(817001, true, 23, false), _didIteratorError5, false, false);
                                _iteratorError5 = J$.W(817025, '_iteratorError5', J$.R(817017, 'err', err, false, false), _iteratorError5, false, false);
                            } finally {
                                try {
                                    if (J$.C(47440, J$.C(47432, J$.U(92242, '!', J$.R(817041, '_iteratorNormalCompletion5', _iteratorNormalCompletion5, false, false))) ? J$.B(92250, '!=', J$.G(817065, J$.R(817049, '_iterator5', _iterator5, false, false), J$.T(817057, 'return', 21, false)), J$.T(817073, null, 25, false)) : J$._())) {
                                        J$.M(817097, J$.R(817081, '_iterator5', _iterator5, false, false), J$.T(817089, 'return', 21, false), false)();
                                    }
                                } finally {
                                    if (J$.C(47448, J$.R(817105, '_didIteratorError5', _didIteratorError5, false, false))) {
                                        throw J$.R(817113, '_iteratorError5', _iteratorError5, false, false);
                                    }
                                }
                            }
                            return J$.Rt(817137, J$.G(817129, J$.R(817121, 'TopologyType', TopologyType, false, true), 'ReplicaSetNoPrimary'));
                        } catch (J$e) {
                            J$.Ex(817817, J$e);
                        } finally {
                            if (J$.Fr(817825))
                                continue jalangiLabel22;
                            else
                                return J$.Ra();
                        }
                    }
            }
            _classCallCheck = J$.N(817273, '_classCallCheck', J$.T(817265, _classCallCheck, 12, false), true, false, false);
            _defineProperties = J$.N(817289, '_defineProperties', J$.T(817281, _defineProperties, 12, false), true, false, false);
            _createClass = J$.N(817305, '_createClass', J$.T(817297, _createClass, 12, false), true, false, false);
            J$.N(817313, 'ServerType', ServerType, false, false, false);
            J$.N(817321, 'ServerDescription', ServerDescription, false, false, false);
            J$.N(817329, 'WIRE_CONSTANTS', WIRE_CONSTANTS, false, false, false);
            J$.N(817337, 'MIN_SUPPORTED_SERVER_VERSION', MIN_SUPPORTED_SERVER_VERSION, false, false, false);
            J$.N(817345, 'MAX_SUPPORTED_SERVER_VERSION', MAX_SUPPORTED_SERVER_VERSION, false, false, false);
            J$.N(817353, 'MIN_SUPPORTED_WIRE_VERSION', MIN_SUPPORTED_WIRE_VERSION, false, false, false);
            J$.N(817361, 'MAX_SUPPORTED_WIRE_VERSION', MAX_SUPPORTED_WIRE_VERSION, false, false, false);
            J$.N(817369, 'TopologyType', TopologyType, false, false, false);
            J$.N(817377, 'TopologyDescription', TopologyDescription, false, false, false);
            topologyTypeForServerType = J$.N(817393, 'topologyTypeForServerType', J$.T(817385, topologyTypeForServerType, 12, false), true, false, false);
            updateRsFromPrimary = J$.N(817409, 'updateRsFromPrimary', J$.T(817401, updateRsFromPrimary, 12, false), true, false, false);
            updateRsWithPrimaryFromMember = J$.N(817425, 'updateRsWithPrimaryFromMember', J$.T(817417, updateRsWithPrimaryFromMember, 12, false), true, false, false);
            updateRsNoPrimaryFromMember = J$.N(817441, 'updateRsNoPrimaryFromMember', J$.T(817433, updateRsNoPrimaryFromMember, 12, false), true, false, false);
            checkHasPrimary = J$.N(817457, 'checkHasPrimary', J$.T(817449, checkHasPrimary, 12, false), true, false, false);
            J$.T(808129, 'use strict', 21, false);
            var ServerType = J$.W(808673, 'ServerType', J$.G(808665, J$.F(808657, J$.I(typeof require === 'undefined' ? require = J$.R(808641, 'require', undefined, true, true) : require = J$.R(808641, 'require', require, true, true)), false)(J$.T(808649, './server_description', 21, false)), 'ServerType'), ServerType, false, true);
            var ServerDescription = J$.W(808713, 'ServerDescription', J$.G(808705, J$.F(808697, J$.I(typeof require === 'undefined' ? require = J$.R(808681, 'require', undefined, true, true) : require = J$.R(808681, 'require', require, true, true)), false)(J$.T(808689, './server_description', 21, false)), 'ServerDescription'), ServerDescription, false, true);
            var WIRE_CONSTANTS = J$.W(808745, 'WIRE_CONSTANTS', J$.F(808737, J$.I(typeof require === 'undefined' ? require = J$.R(808721, 'require', undefined, true, true) : require = J$.R(808721, 'require', require, true, true)), false)(J$.T(808729, '../wireprotocol/constants', 21, false)), WIRE_CONSTANTS, false, true);
            var MIN_SUPPORTED_SERVER_VERSION = J$.W(808769, 'MIN_SUPPORTED_SERVER_VERSION', J$.G(808761, J$.R(808753, 'WIRE_CONSTANTS', WIRE_CONSTANTS, false, true), 'MIN_SUPPORTED_SERVER_VERSION'), MIN_SUPPORTED_SERVER_VERSION, false, true);
            var MAX_SUPPORTED_SERVER_VERSION = J$.W(808793, 'MAX_SUPPORTED_SERVER_VERSION', J$.G(808785, J$.R(808777, 'WIRE_CONSTANTS', WIRE_CONSTANTS, false, true), 'MAX_SUPPORTED_SERVER_VERSION'), MAX_SUPPORTED_SERVER_VERSION, false, true);
            var MIN_SUPPORTED_WIRE_VERSION = J$.W(808817, 'MIN_SUPPORTED_WIRE_VERSION', J$.G(808809, J$.R(808801, 'WIRE_CONSTANTS', WIRE_CONSTANTS, false, true), 'MIN_SUPPORTED_WIRE_VERSION'), MIN_SUPPORTED_WIRE_VERSION, false, true);
            var MAX_SUPPORTED_WIRE_VERSION = J$.W(808841, 'MAX_SUPPORTED_WIRE_VERSION', J$.G(808833, J$.R(808825, 'WIRE_CONSTANTS', WIRE_CONSTANTS, false, true), 'MAX_SUPPORTED_WIRE_VERSION'), MAX_SUPPORTED_WIRE_VERSION, false, true);
            var TopologyType = J$.W(808897, 'TopologyType', J$.T(808889, {
                Single: J$.T(808849, 'Single', 21, false),
                ReplicaSetNoPrimary: J$.T(808857, 'ReplicaSetNoPrimary', 21, false),
                ReplicaSetWithPrimary: J$.T(808865, 'ReplicaSetWithPrimary', 21, false),
                Sharded: J$.T(808873, 'Sharded', 21, false),
                Unknown: J$.T(808881, 'Unknown', 21, false)
            }, 11, false), TopologyType, false, true);
            var TopologyDescription = J$.W(814313, 'TopologyDescription', J$.F(814305, J$.T(814297, function () {
                jalangiLabel13:
                    while (true) {
                        try {
                            J$.Fe(814265, arguments.callee, this, arguments);
                            function TopologyDescription(topologyType, serverDescriptions, setName, maxSetVersion, maxElectionId, commonWireVersion, options, error) {
                                jalangiLabel5:
                                    while (true) {
                                        try {
                                            J$.Fe(810417, arguments.callee, this, arguments);
                                            arguments = J$.N(810425, 'arguments', arguments, true, false, false);
                                            topologyType = J$.N(810433, 'topologyType', topologyType, true, false, false);
                                            serverDescriptions = J$.N(810441, 'serverDescriptions', serverDescriptions, true, false, false);
                                            setName = J$.N(810449, 'setName', setName, true, false, false);
                                            maxSetVersion = J$.N(810457, 'maxSetVersion', maxSetVersion, true, false, false);
                                            maxElectionId = J$.N(810465, 'maxElectionId', maxElectionId, true, false, false);
                                            commonWireVersion = J$.N(810473, 'commonWireVersion', commonWireVersion, true, false, false);
                                            options = J$.N(810481, 'options', options, true, false, false);
                                            error = J$.N(810489, 'error', error, true, false, false);
                                            J$.N(810497, '_iteratorNormalCompletion', _iteratorNormalCompletion, false, false, false);
                                            J$.N(810505, '_didIteratorError', _didIteratorError, false, false, false);
                                            J$.N(810513, '_iteratorError', _iteratorError, false, false, false);
                                            J$.N(810521, '_iterator', _iterator, false, false, false);
                                            J$.N(810529, '_step', _step, false, false, false);
                                            J$.N(810537, 'serverDescription', serverDescription, false, false, false);
                                            J$.N(810545, 'readableServers', readableServers, false, false, false);
                                            J$.F(808929, J$.R(808905, '_classCallCheck', _classCallCheck, false, true), false)(J$.R(808913, 'this', this, false, false), J$.R(808921, 'TopologyDescription', TopologyDescription, false, false));
                                            options = J$.W(808953, 'options', J$.C(46808, J$.R(808937, 'options', options, false, false)) ? J$._() : J$.T(808945, {}, 11, false), options, false, false);
                                            J$.P(808993, J$.R(808961, 'this', this, false, false), 'type', J$.C(46816, J$.R(808969, 'topologyType', topologyType, false, false)) ? J$._() : J$.G(808985, J$.R(808977, 'TopologyType', TopologyType, false, true), 'Unknown'));
                                            J$.P(809025, J$.R(809001, 'this', this, false, false), 'setName', J$.C(46824, J$.R(809009, 'setName', setName, false, false)) ? J$._() : J$.T(809017, null, 25, false));
                                            J$.P(809057, J$.R(809033, 'this', this, false, false), 'maxSetVersion', J$.C(46832, J$.R(809041, 'maxSetVersion', maxSetVersion, false, false)) ? J$._() : J$.T(809049, null, 25, false));
                                            J$.P(809089, J$.R(809065, 'this', this, false, false), 'maxElectionId', J$.C(46840, J$.R(809073, 'maxElectionId', maxElectionId, false, false)) ? J$._() : J$.T(809081, null, 25, false));
                                            J$.P(809129, J$.R(809097, 'this', this, false, false), 'servers', J$.C(46848, J$.R(809105, 'serverDescriptions', serverDescriptions, false, false)) ? J$._() : J$.F(809121, J$.I(typeof Map === 'undefined' ? Map = J$.R(809113, 'Map', undefined, true, true) : Map = J$.R(809113, 'Map', Map, true, true)), true)());
                                            J$.P(809153, J$.R(809137, 'this', this, false, false), 'stale', J$.T(809145, false, 23, false));
                                            J$.P(809177, J$.R(809161, 'this', this, false, false), 'compatible', J$.T(809169, true, 23, false));
                                            J$.P(809201, J$.R(809185, 'this', this, false, false), 'compatibilityError', J$.T(809193, null, 25, false));
                                            J$.P(809225, J$.R(809209, 'this', this, false, false), 'logicalSessionTimeoutMinutes', J$.T(809217, null, 25, false));
                                            J$.P(809265, J$.R(809233, 'this', this, false, false), 'heartbeatFrequencyMS', J$.C(46856, J$.G(809249, J$.R(809241, 'options', options, false, false), 'heartbeatFrequencyMS')) ? J$._() : J$.T(809257, 0, 22, false));
                                            J$.P(809305, J$.R(809273, 'this', this, false, false), 'localThresholdMS', J$.C(46864, J$.G(809289, J$.R(809281, 'options', options, false, false), 'localThresholdMS')) ? J$._() : J$.T(809297, 0, 22, false));
                                            J$.P(809329, J$.R(809313, 'this', this, false, false), 'options', J$.R(809321, 'options', options, false, false));
                                            J$.P(809353, J$.R(809337, 'this', this, false, false), 'error', J$.R(809345, 'error', error, false, false));
                                            J$.P(809385, J$.R(809361, 'this', this, false, false), 'commonWireVersion', J$.C(46872, J$.R(809369, 'commonWireVersion', commonWireVersion, false, false)) ? J$._() : J$.T(809377, null, 25, false));
                                            var _iteratorNormalCompletion = J$.W(809401, '_iteratorNormalCompletion', J$.T(809393, true, 23, false), _iteratorNormalCompletion, false, false);
                                            var _didIteratorError = J$.W(809417, '_didIteratorError', J$.T(809409, false, 23, false), _didIteratorError, false, false);
                                            var _iteratorError = J$.W(809433, '_iteratorError', J$.T(809425, undefined, 24, false), _iteratorError, false, false);
                                            try {
                                                for (var _iterator = J$.W(809489, '_iterator', J$.M(809481, J$.M(809457, J$.G(809449, J$.R(809441, 'this', this, false, false), 'servers'), 'values', false)(), J$.G(809473, J$.I(typeof Symbol === 'undefined' ? Symbol = J$.R(809465, 'Symbol', undefined, true, true) : Symbol = J$.R(809465, 'Symbol', Symbol, true, true)), 'iterator'), false)(), _iterator, false, false), _step; J$.C(46904, J$.U(91754, '!', _iteratorNormalCompletion = J$.W(809529, '_iteratorNormalCompletion', J$.G(809521, _step = J$.W(809513, '_step', J$.M(809505, J$.R(809497, '_iterator', _iterator, false, false), 'next', false)(), _step, false, false), 'done'), _iteratorNormalCompletion, false, false))); _iteratorNormalCompletion = J$.W(809545, '_iteratorNormalCompletion', J$.T(809537, true, 23, false), _iteratorNormalCompletion, false, false)) {
                                                    var serverDescription = J$.W(809569, 'serverDescription', J$.G(809561, J$.R(809553, '_step', _step, false, false), 'value'), serverDescription, false, false);
                                                    if (J$.C(46880, J$.B(91762, '===', J$.G(809585, J$.R(809577, 'serverDescription', serverDescription, false, false), 'type'), J$.G(809601, J$.R(809593, 'ServerType', ServerType, false, true), 'Unknown'))))
                                                        continue;
                                                    if (J$.C(46888, J$.B(91770, '>', J$.G(809617, J$.R(809609, 'serverDescription', serverDescription, false, false), 'minWireVersion'), J$.R(809625, 'MAX_SUPPORTED_WIRE_VERSION', MAX_SUPPORTED_WIRE_VERSION, false, true)))) {
                                                        J$.P(809649, J$.R(809633, 'this', this, false, false), 'compatible', J$.T(809641, false, 23, false));
                                                        J$.P(809785, J$.R(809657, 'this', this, false, false), 'compatibilityError', J$.M(809777, J$.M(809753, J$.M(809729, J$.M(809697, J$.T(809665, 'Server at ', 21, false), 'concat', false)(J$.G(809681, J$.R(809673, 'serverDescription', serverDescription, false, false), 'address'), J$.T(809689, ' requires wire version ', 21, false)), 'concat', false)(J$.G(809713, J$.R(809705, 'serverDescription', serverDescription, false, false), 'minWireVersion'), J$.T(809721, ', but this version of the driver only supports up to ', 21, false)), 'concat', false)(J$.R(809737, 'MAX_SUPPORTED_WIRE_VERSION', MAX_SUPPORTED_WIRE_VERSION, false, true), J$.T(809745, ' (MongoDB ', 21, false)), 'concat', false)(J$.R(809761, 'MAX_SUPPORTED_SERVER_VERSION', MAX_SUPPORTED_SERVER_VERSION, false, true), J$.T(809769, ')', 21, false)));
                                                    }
                                                    if (J$.C(46896, J$.B(91778, '<', J$.G(809801, J$.R(809793, 'serverDescription', serverDescription, false, false), 'maxWireVersion'), J$.R(809809, 'MIN_SUPPORTED_WIRE_VERSION', MIN_SUPPORTED_WIRE_VERSION, false, true)))) {
                                                        J$.P(809833, J$.R(809817, 'this', this, false, false), 'compatible', J$.T(809825, false, 23, false));
                                                        J$.P(809969, J$.R(809841, 'this', this, false, false), 'compatibilityError', J$.M(809961, J$.M(809937, J$.M(809913, J$.M(809881, J$.T(809849, 'Server at ', 21, false), 'concat', false)(J$.G(809865, J$.R(809857, 'serverDescription', serverDescription, false, false), 'address'), J$.T(809873, ' reports wire version ', 21, false)), 'concat', false)(J$.G(809897, J$.R(809889, 'serverDescription', serverDescription, false, false), 'maxWireVersion'), J$.T(809905, ', but this version of the driver requires at least ', 21, false)), 'concat', false)(J$.R(809921, 'MIN_SUPPORTED_WIRE_VERSION', MIN_SUPPORTED_WIRE_VERSION, false, true), J$.T(809929, ' (MongoDB ', 21, false)), 'concat', false)(J$.R(809945, 'MIN_SUPPORTED_SERVER_VERSION', MIN_SUPPORTED_SERVER_VERSION, false, true), J$.T(809953, ').', 21, false)));
                                                        break;
                                                    }
                                                }
                                            } catch (err) {
                                                J$.N(810009, 'err', err, false, false, true);
                                                _didIteratorError = J$.W(809985, '_didIteratorError', J$.T(809977, true, 23, false), _didIteratorError, false, false);
                                                _iteratorError = J$.W(810001, '_iteratorError', J$.R(809993, 'err', err, false, false), _iteratorError, false, false);
                                            } finally {
                                                try {
                                                    if (J$.C(46920, J$.C(46912, J$.U(91786, '!', J$.R(810017, '_iteratorNormalCompletion', _iteratorNormalCompletion, false, false))) ? J$.B(91794, '!=', J$.G(810041, J$.R(810025, '_iterator', _iterator, false, false), J$.T(810033, 'return', 21, false)), J$.T(810049, null, 25, false)) : J$._())) {
                                                        J$.M(810073, J$.R(810057, '_iterator', _iterator, false, false), J$.T(810065, 'return', 21, false), false)();
                                                    }
                                                } finally {
                                                    if (J$.C(46928, J$.R(810081, '_didIteratorError', _didIteratorError, false, false))) {
                                                        throw J$.R(810089, '_iteratorError', _iteratorError, false, false);
                                                    }
                                                }
                                            }
                                            var readableServers = J$.W(810201, 'readableServers', J$.M(810193, J$.M(810129, J$.I(typeof Array === 'undefined' ? Array = J$.R(810097, 'Array', undefined, true, true) : Array = J$.R(810097, 'Array', Array, true, true)), 'from', false)(J$.M(810121, J$.G(810113, J$.R(810105, 'this', this, false, false), 'servers'), 'values', false)()), 'filter', false)(J$.T(810185, function (s) {
                                                jalangiLabel3:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(810161, arguments.callee, this, arguments);
                                                            arguments = J$.N(810169, 'arguments', arguments, true, false, false);
                                                            s = J$.N(810177, 's', s, true, false, false);
                                                            return J$.Rt(810153, J$.G(810145, J$.R(810137, 's', s, false, false), 'isReadable'));
                                                        } catch (J$e) {
                                                            J$.Ex(817513, J$e);
                                                        } finally {
                                                            if (J$.Fr(817521))
                                                                continue jalangiLabel3;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false)), readableServers, false, false);
                                            J$.P(810409, J$.R(810209, 'this', this, false, false), 'logicalSessionTimeoutMinutes', J$.M(810401, J$.R(810217, 'readableServers', readableServers, false, false), 'reduce', false)(J$.T(810385, function (result, server) {
                                                jalangiLabel4:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(810353, arguments.callee, this, arguments);
                                                            arguments = J$.N(810361, 'arguments', arguments, true, false, false);
                                                            result = J$.N(810369, 'result', result, true, false, false);
                                                            server = J$.N(810377, 'server', server, true, false, false);
                                                            if (J$.C(46936, J$.B(91802, '==', J$.G(810233, J$.R(810225, 'server', server, false, false), 'logicalSessionTimeoutMinutes'), J$.T(810241, null, 25, false))))
                                                                return J$.Rt(810257, J$.T(810249, null, 25, false));
                                                            if (J$.C(46944, J$.B(91810, '==', J$.R(810265, 'result', result, false, false), J$.T(810273, null, 25, false))))
                                                                return J$.Rt(810297, J$.G(810289, J$.R(810281, 'server', server, false, false), 'logicalSessionTimeoutMinutes'));
                                                            return J$.Rt(810345, J$.M(810337, J$.I(typeof Math === 'undefined' ? Math = J$.R(810305, 'Math', undefined, true, true) : Math = J$.R(810305, 'Math', Math, true, true)), 'min', false)(J$.R(810313, 'result', result, false, false), J$.G(810329, J$.R(810321, 'server', server, false, false), 'logicalSessionTimeoutMinutes')));
                                                        } catch (J$e) {
                                                            J$.Ex(817529, J$e);
                                                        } finally {
                                                            if (J$.Fr(817537))
                                                                continue jalangiLabel4;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false), J$.T(810393, null, 25, false)));
                                        } catch (J$e) {
                                            J$.Ex(817545, J$e);
                                        } finally {
                                            if (J$.Fr(817553))
                                                continue jalangiLabel5;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }
                            arguments = J$.N(814273, 'arguments', arguments, true, false, false);
                            TopologyDescription = J$.N(814289, 'TopologyDescription', J$.T(814281, TopologyDescription, 12, false), true, false, false);
                            J$.F(814241, J$.R(810553, '_createClass', _createClass, false, true), false)(J$.R(810561, 'TopologyDescription', TopologyDescription, false, false), J$.T(814233, [
                                J$.T(811769, {
                                    key: J$.T(810569, 'updateFromSrvPollingEvent', 21, false),
                                    value: J$.T(811761, function updateFromSrvPollingEvent(ev) {
                                        jalangiLabel6:
                                            while (true) {
                                                try {
                                                    J$.Fe(811625, arguments.callee, this, arguments);
                                                    arguments = J$.N(811633, 'arguments', arguments, true, false, false);
                                                    ev = J$.N(811641, 'ev', ev, true, false, false);
                                                    J$.N(811649, 'newAddresses', newAddresses, false, false, false);
                                                    J$.N(811657, 'serverDescriptions', serverDescriptions, false, false, false);
                                                    J$.N(811665, '_iteratorNormalCompletion2', _iteratorNormalCompletion2, false, false, false);
                                                    J$.N(811673, '_didIteratorError2', _didIteratorError2, false, false, false);
                                                    J$.N(811681, '_iteratorError2', _iteratorError2, false, false, false);
                                                    J$.N(811689, '_iterator2', _iterator2, false, false, false);
                                                    J$.N(811697, '_step2', _step2, false, false, false);
                                                    J$.N(811705, 'server', server, false, false, false);
                                                    J$.N(811713, '_iteratorNormalCompletion3', _iteratorNormalCompletion3, false, false, false);
                                                    J$.N(811721, '_didIteratorError3', _didIteratorError3, false, false, false);
                                                    J$.N(811729, '_iteratorError3', _iteratorError3, false, false, false);
                                                    J$.N(811737, '_iterator3', _iterator3, false, false, false);
                                                    J$.N(811745, '_step3', _step3, false, false, false);
                                                    J$.N(811753, 'address', address, false, false, false);
                                                    var newAddresses = J$.W(810593, 'newAddresses', J$.M(810585, J$.R(810577, 'ev', ev, false, false), 'addresses', false)(), newAddresses, false, false);
                                                    var serverDescriptions = J$.W(810633, 'serverDescriptions', J$.F(810625, J$.I(typeof Map === 'undefined' ? Map = J$.R(810601, 'Map', undefined, true, true) : Map = J$.R(810601, 'Map', Map, true, true)), true)(J$.G(810617, J$.R(810609, 'this', this, false, false), 'servers')), serverDescriptions, false, false);
                                                    var _iteratorNormalCompletion2 = J$.W(810649, '_iteratorNormalCompletion2', J$.T(810641, true, 23, false), _iteratorNormalCompletion2, false, false);
                                                    var _didIteratorError2 = J$.W(810665, '_didIteratorError2', J$.T(810657, false, 23, false), _didIteratorError2, false, false);
                                                    var _iteratorError2 = J$.W(810681, '_iteratorError2', J$.T(810673, undefined, 24, false), _iteratorError2, false, false);
                                                    try {
                                                        for (var _iterator2 = J$.W(810729, '_iterator2', J$.M(810721, J$.G(810697, J$.R(810689, 'this', this, false, false), 'servers'), J$.G(810713, J$.I(typeof Symbol === 'undefined' ? Symbol = J$.R(810705, 'Symbol', undefined, true, true) : Symbol = J$.R(810705, 'Symbol', Symbol, true, true)), 'iterator'), false)(), _iterator2, false, false), _step2; J$.C(46960, J$.U(91818, '!', _iteratorNormalCompletion2 = J$.W(810769, '_iteratorNormalCompletion2', J$.G(810761, _step2 = J$.W(810753, '_step2', J$.M(810745, J$.R(810737, '_iterator2', _iterator2, false, false), 'next', false)(), _step2, false, false), 'done'), _iteratorNormalCompletion2, false, false))); _iteratorNormalCompletion2 = J$.W(810785, '_iteratorNormalCompletion2', J$.T(810777, true, 23, false), _iteratorNormalCompletion2, false, false)) {
                                                            var server = J$.W(810809, 'server', J$.G(810801, J$.R(810793, '_step2', _step2, false, false), 'value'), server, false, false);
                                                            if (J$.C(46952, J$.M(810849, J$.R(810817, 'newAddresses', newAddresses, false, false), 'has', false)(J$.G(810841, J$.R(810825, 'server', server, false, false), J$.T(810833, 0, 22, false))))) {
                                                                J$.M(810897, J$.R(810857, 'newAddresses', newAddresses, false, false), J$.T(810865, 'delete', 21, false), false)(J$.G(810889, J$.R(810873, 'server', server, false, false), J$.T(810881, 0, 22, false)));
                                                            } else {
                                                                J$.M(810945, J$.R(810905, 'serverDescriptions', serverDescriptions, false, false), J$.T(810913, 'delete', 21, false), false)(J$.G(810937, J$.R(810921, 'server', server, false, false), J$.T(810929, 0, 22, false)));
                                                            }
                                                        }
                                                    } catch (err) {
                                                        J$.N(810985, 'err', err, false, false, true);
                                                        _didIteratorError2 = J$.W(810961, '_didIteratorError2', J$.T(810953, true, 23, false), _didIteratorError2, false, false);
                                                        _iteratorError2 = J$.W(810977, '_iteratorError2', J$.R(810969, 'err', err, false, false), _iteratorError2, false, false);
                                                    } finally {
                                                        try {
                                                            if (J$.C(46976, J$.C(46968, J$.U(91826, '!', J$.R(810993, '_iteratorNormalCompletion2', _iteratorNormalCompletion2, false, false))) ? J$.B(91834, '!=', J$.G(811017, J$.R(811001, '_iterator2', _iterator2, false, false), J$.T(811009, 'return', 21, false)), J$.T(811025, null, 25, false)) : J$._())) {
                                                                J$.M(811049, J$.R(811033, '_iterator2', _iterator2, false, false), J$.T(811041, 'return', 21, false), false)();
                                                            }
                                                        } finally {
                                                            if (J$.C(46984, J$.R(811057, '_didIteratorError2', _didIteratorError2, false, false))) {
                                                                throw J$.R(811065, '_iteratorError2', _iteratorError2, false, false);
                                                            }
                                                        }
                                                    }
                                                    if (J$.C(47000, J$.C(46992, J$.B(91842, '===', J$.G(811081, J$.R(811073, 'serverDescriptions', serverDescriptions, false, false), 'size'), J$.G(811105, J$.G(811097, J$.R(811089, 'this', this, false, false), 'servers'), 'size'))) ? J$.B(91850, '===', J$.G(811121, J$.R(811113, 'newAddresses', newAddresses, false, false), 'size'), J$.T(811129, 0, 22, false)) : J$._())) {
                                                        return J$.Rt(811145, J$.R(811137, 'this', this, false, false));
                                                    }
                                                    var _iteratorNormalCompletion3 = J$.W(811161, '_iteratorNormalCompletion3', J$.T(811153, true, 23, false), _iteratorNormalCompletion3, false, false);
                                                    var _didIteratorError3 = J$.W(811177, '_didIteratorError3', J$.T(811169, false, 23, false), _didIteratorError3, false, false);
                                                    var _iteratorError3 = J$.W(811193, '_iteratorError3', J$.T(811185, undefined, 24, false), _iteratorError3, false, false);
                                                    try {
                                                        for (var _iterator3 = J$.W(811233, '_iterator3', J$.M(811225, J$.R(811201, 'newAddresses', newAddresses, false, false), J$.G(811217, J$.I(typeof Symbol === 'undefined' ? Symbol = J$.R(811209, 'Symbol', undefined, true, true) : Symbol = J$.R(811209, 'Symbol', Symbol, true, true)), 'iterator'), false)(), _iterator3, false, false), _step3; J$.C(47008, J$.U(91858, '!', _iteratorNormalCompletion3 = J$.W(811273, '_iteratorNormalCompletion3', J$.G(811265, _step3 = J$.W(811257, '_step3', J$.M(811249, J$.R(811241, '_iterator3', _iterator3, false, false), 'next', false)(), _step3, false, false), 'done'), _iteratorNormalCompletion3, false, false))); _iteratorNormalCompletion3 = J$.W(811289, '_iteratorNormalCompletion3', J$.T(811281, true, 23, false), _iteratorNormalCompletion3, false, false)) {
                                                            var address = J$.W(811313, 'address', J$.G(811305, J$.R(811297, '_step3', _step3, false, false), 'value'), address, false, false);
                                                            J$.M(811361, J$.R(811321, 'serverDescriptions', serverDescriptions, false, false), 'set', false)(J$.R(811329, 'address', address, false, false), J$.F(811353, J$.R(811337, 'ServerDescription', ServerDescription, false, true), true)(J$.R(811345, 'address', address, false, false)));
                                                        }
                                                    } catch (err) {
                                                        J$.N(811401, 'err', err, false, false, true);
                                                        _didIteratorError3 = J$.W(811377, '_didIteratorError3', J$.T(811369, true, 23, false), _didIteratorError3, false, false);
                                                        _iteratorError3 = J$.W(811393, '_iteratorError3', J$.R(811385, 'err', err, false, false), _iteratorError3, false, false);
                                                    } finally {
                                                        try {
                                                            if (J$.C(47024, J$.C(47016, J$.U(91866, '!', J$.R(811409, '_iteratorNormalCompletion3', _iteratorNormalCompletion3, false, false))) ? J$.B(91874, '!=', J$.G(811433, J$.R(811417, '_iterator3', _iterator3, false, false), J$.T(811425, 'return', 21, false)), J$.T(811441, null, 25, false)) : J$._())) {
                                                                J$.M(811465, J$.R(811449, '_iterator3', _iterator3, false, false), J$.T(811457, 'return', 21, false), false)();
                                                            }
                                                        } finally {
                                                            if (J$.C(47032, J$.R(811473, '_didIteratorError3', _didIteratorError3, false, false))) {
                                                                throw J$.R(811481, '_iteratorError3', _iteratorError3, false, false);
                                                            }
                                                        }
                                                    }
                                                    return J$.Rt(811617, J$.F(811609, J$.R(811489, 'TopologyDescription', TopologyDescription, false, false), true)(J$.G(811505, J$.R(811497, 'this', this, false, false), 'type'), J$.R(811513, 'serverDescriptions', serverDescriptions, false, false), J$.G(811529, J$.R(811521, 'this', this, false, false), 'setName'), J$.G(811545, J$.R(811537, 'this', this, false, false), 'maxSetVersion'), J$.G(811561, J$.R(811553, 'this', this, false, false), 'maxElectionId'), J$.G(811577, J$.R(811569, 'this', this, false, false), 'commonWireVersion'), J$.G(811593, J$.R(811585, 'this', this, false, false), 'options'), J$.T(811601, null, 25, false)));
                                                } catch (J$e) {
                                                    J$.Ex(817561, J$e);
                                                } finally {
                                                    if (J$.Fr(817569))
                                                        continue jalangiLabel6;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false)
                                }, 11, false),
                                J$.T(813817, {
                                    key: J$.T(811777, 'update', 21, false),
                                    value: J$.T(813809, function update(serverDescription) {
                                        jalangiLabel7:
                                            while (true) {
                                                try {
                                                    J$.Fe(813689, arguments.callee, this, arguments);
                                                    arguments = J$.N(813697, 'arguments', arguments, true, false, false);
                                                    serverDescription = J$.N(813705, 'serverDescription', serverDescription, true, false, false);
                                                    J$.N(813713, 'address', address, false, false, false);
                                                    J$.N(813721, 'topologyType', topologyType, false, false, false);
                                                    J$.N(813729, 'setName', setName, false, false, false);
                                                    J$.N(813737, 'maxSetVersion', maxSetVersion, false, false, false);
                                                    J$.N(813745, 'maxElectionId', maxElectionId, false, false, false);
                                                    J$.N(813753, 'commonWireVersion', commonWireVersion, false, false, false);
                                                    J$.N(813761, 'error', error, false, false, false);
                                                    J$.N(813769, 'serverType', serverType, false, false, false);
                                                    J$.N(813777, 'serverDescriptions', serverDescriptions, false, false, false);
                                                    J$.N(813785, 'result', result, false, false, false);
                                                    J$.N(813793, '_result', _result, false, false, false);
                                                    J$.N(813801, '_result2', _result2, false, false, false);
                                                    var address = J$.W(811801, 'address', J$.G(811793, J$.R(811785, 'serverDescription', serverDescription, false, false), 'address'), address, false, false);
                                                    var topologyType = J$.W(811825, 'topologyType', J$.G(811817, J$.R(811809, 'this', this, false, false), 'type'), topologyType, false, false);
                                                    var setName = J$.W(811849, 'setName', J$.G(811841, J$.R(811833, 'this', this, false, false), 'setName'), setName, false, false);
                                                    var maxSetVersion = J$.W(811873, 'maxSetVersion', J$.G(811865, J$.R(811857, 'this', this, false, false), 'maxSetVersion'), maxSetVersion, false, false);
                                                    var maxElectionId = J$.W(811897, 'maxElectionId', J$.G(811889, J$.R(811881, 'this', this, false, false), 'maxElectionId'), maxElectionId, false, false);
                                                    var commonWireVersion = J$.W(811921, 'commonWireVersion', J$.G(811913, J$.R(811905, 'this', this, false, false), 'commonWireVersion'), commonWireVersion, false, false);
                                                    var error = J$.W(811961, 'error', J$.C(47040, J$.G(811937, J$.R(811929, 'serverDescription', serverDescription, false, false), 'error')) ? J$._() : J$.G(811953, J$.R(811945, 'this', this, false, false), 'error'), error, false, false);
                                                    var serverType = J$.W(811985, 'serverType', J$.G(811977, J$.R(811969, 'serverDescription', serverDescription, false, false), 'type'), serverType, false, false);
                                                    var serverDescriptions = J$.W(812025, 'serverDescriptions', J$.F(812017, J$.I(typeof Map === 'undefined' ? Map = J$.R(811993, 'Map', undefined, true, true) : Map = J$.R(811993, 'Map', Map, true, true)), true)(J$.G(812009, J$.R(812001, 'this', this, false, false), 'servers')), serverDescriptions, false, false);
                                                    if (J$.C(47056, J$.B(91882, '!==', J$.G(812041, J$.R(812033, 'serverDescription', serverDescription, false, false), 'maxWireVersion'), J$.T(812049, 0, 22, false)))) {
                                                        if (J$.C(47048, J$.B(91890, '==', J$.R(812057, 'commonWireVersion', commonWireVersion, false, false), J$.T(812065, null, 25, false)))) {
                                                            commonWireVersion = J$.W(812089, 'commonWireVersion', J$.G(812081, J$.R(812073, 'serverDescription', serverDescription, false, false), 'maxWireVersion'), commonWireVersion, false, false);
                                                        } else {
                                                            commonWireVersion = J$.W(812137, 'commonWireVersion', J$.M(812129, J$.I(typeof Math === 'undefined' ? Math = J$.R(812097, 'Math', undefined, true, true) : Math = J$.R(812097, 'Math', Math, true, true)), 'min', false)(J$.R(812105, 'commonWireVersion', commonWireVersion, false, false), J$.G(812121, J$.R(812113, 'serverDescription', serverDescription, false, false), 'maxWireVersion')), commonWireVersion, false, false);
                                                        }
                                                    }
                                                    J$.M(812169, J$.R(812145, 'serverDescriptions', serverDescriptions, false, false), 'set', false)(J$.R(812153, 'address', address, false, false), J$.R(812161, 'serverDescription', serverDescription, false, false));
                                                    if (J$.C(47064, J$.B(91898, '===', J$.R(812177, 'topologyType', topologyType, false, false), J$.G(812193, J$.R(812185, 'TopologyType', TopologyType, false, true), 'Single')))) {
                                                        return J$.Rt(812297, J$.F(812289, J$.R(812201, 'TopologyDescription', TopologyDescription, false, false), true)(J$.G(812217, J$.R(812209, 'TopologyType', TopologyType, false, true), 'Single'), J$.R(812225, 'serverDescriptions', serverDescriptions, false, false), J$.R(812233, 'setName', setName, false, false), J$.R(812241, 'maxSetVersion', maxSetVersion, false, false), J$.R(812249, 'maxElectionId', maxElectionId, false, false), J$.R(812257, 'commonWireVersion', commonWireVersion, false, false), J$.G(812273, J$.R(812265, 'this', this, false, false), 'options'), J$.R(812281, 'error', error, false, false)));
                                                    }
                                                    if (J$.C(47080, J$.B(91906, '===', J$.R(812305, 'topologyType', topologyType, false, false), J$.G(812321, J$.R(812313, 'TopologyType', TopologyType, false, true), 'Unknown')))) {
                                                        if (J$.C(47072, J$.B(91914, '===', J$.R(812329, 'serverType', serverType, false, false), J$.G(812345, J$.R(812337, 'ServerType', ServerType, false, true), 'Standalone')))) {
                                                            J$.M(812377, J$.R(812353, 'serverDescriptions', serverDescriptions, false, false), J$.T(812361, 'delete', 21, false), false)(J$.R(812369, 'address', address, false, false));
                                                        } else {
                                                            topologyType = J$.W(812409, 'topologyType', J$.F(812401, J$.R(812385, 'topologyTypeForServerType', topologyTypeForServerType, false, true), false)(J$.R(812393, 'serverType', serverType, false, false)), topologyType, false, false);
                                                        }
                                                    }
                                                    if (J$.C(47096, J$.B(91922, '===', J$.R(812417, 'topologyType', topologyType, false, false), J$.G(812433, J$.R(812425, 'TopologyType', TopologyType, false, true), 'Sharded')))) {
                                                        if (J$.C(47088, J$.B(91938, '===', J$.M(812489, J$.T(812473, [
                                                                J$.G(812449, J$.R(812441, 'ServerType', ServerType, false, true), 'Mongos'),
                                                                J$.G(812465, J$.R(812457, 'ServerType', ServerType, false, true), 'Unknown')
                                                            ], 10, false), 'indexOf', false)(J$.R(812481, 'serverType', serverType, false, false)), J$.U(91930, '-', J$.T(812497, 1, 22, false))))) {
                                                            J$.M(812529, J$.R(812505, 'serverDescriptions', serverDescriptions, false, false), J$.T(812513, 'delete', 21, false), false)(J$.R(812521, 'address', address, false, false));
                                                        }
                                                    }
                                                    if (J$.C(47128, J$.B(91946, '===', J$.R(812537, 'topologyType', topologyType, false, false), J$.G(812553, J$.R(812545, 'TopologyType', TopologyType, false, true), 'ReplicaSetNoPrimary')))) {
                                                        if (J$.C(47104, J$.B(91954, '>=', J$.M(812609, J$.T(812593, [
                                                                J$.G(812569, J$.R(812561, 'ServerType', ServerType, false, true), 'Mongos'),
                                                                J$.G(812585, J$.R(812577, 'ServerType', ServerType, false, true), 'Unknown')
                                                            ], 10, false), 'indexOf', false)(J$.R(812601, 'serverType', serverType, false, false)), J$.T(812617, 0, 22, false)))) {
                                                            J$.M(812649, J$.R(812625, 'serverDescriptions', serverDescriptions, false, false), J$.T(812633, 'delete', 21, false), false)(J$.R(812641, 'address', address, false, false));
                                                        }
                                                        if (J$.C(47120, J$.B(91962, '===', J$.R(812657, 'serverType', serverType, false, false), J$.G(812673, J$.R(812665, 'ServerType', ServerType, false, true), 'RSPrimary')))) {
                                                            var result = J$.W(812737, 'result', J$.F(812729, J$.R(812681, 'updateRsFromPrimary', updateRsFromPrimary, false, true), false)(J$.R(812689, 'serverDescriptions', serverDescriptions, false, false), J$.R(812697, 'setName', setName, false, false), J$.R(812705, 'serverDescription', serverDescription, false, false), J$.R(812713, 'maxSetVersion', maxSetVersion, false, false), J$.R(812721, 'maxElectionId', maxElectionId, false, false)), result, false, false);
                                                            topologyType = J$.W(812769, 'topologyType', J$.G(812761, J$.R(812745, 'result', result, false, false), J$.T(812753, 0, 22, false)), topologyType, false, false), setName = J$.W(812801, 'setName', J$.G(812793, J$.R(812777, 'result', result, false, false), J$.T(812785, 1, 22, false)), setName, false, false), maxSetVersion = J$.W(812833, 'maxSetVersion', J$.G(812825, J$.R(812809, 'result', result, false, false), J$.T(812817, 2, 22, false)), maxSetVersion, false, false), maxElectionId = J$.W(812865, 'maxElectionId', J$.G(812857, J$.R(812841, 'result', result, false, false), J$.T(812849, 3, 22, false)), maxElectionId, false, false);
                                                        } else if (J$.C(47112, J$.B(91970, '>=', J$.M(812937, J$.T(812921, [
                                                                J$.G(812881, J$.R(812873, 'ServerType', ServerType, false, true), 'RSSecondary'),
                                                                J$.G(812897, J$.R(812889, 'ServerType', ServerType, false, true), 'RSArbiter'),
                                                                J$.G(812913, J$.R(812905, 'ServerType', ServerType, false, true), 'RSOther')
                                                            ], 10, false), 'indexOf', false)(J$.R(812929, 'serverType', serverType, false, false)), J$.T(812945, 0, 22, false)))) {
                                                            var _result = J$.W(812993, '_result', J$.F(812985, J$.R(812953, 'updateRsNoPrimaryFromMember', updateRsNoPrimaryFromMember, false, true), false)(J$.R(812961, 'serverDescriptions', serverDescriptions, false, false), J$.R(812969, 'setName', setName, false, false), J$.R(812977, 'serverDescription', serverDescription, false, false)), _result, false, false);
                                                            topologyType = J$.W(813025, 'topologyType', J$.G(813017, J$.R(813001, '_result', _result, false, false), J$.T(813009, 0, 22, false)), topologyType, false, false), setName = J$.W(813057, 'setName', J$.G(813049, J$.R(813033, '_result', _result, false, false), J$.T(813041, 1, 22, false)), setName, false, false);
                                                        }
                                                    }
                                                    if (J$.C(47160, J$.B(91978, '===', J$.R(813065, 'topologyType', topologyType, false, false), J$.G(813081, J$.R(813073, 'TopologyType', TopologyType, false, true), 'ReplicaSetWithPrimary')))) {
                                                        if (J$.C(47152, J$.B(91986, '>=', J$.M(813137, J$.T(813121, [
                                                                J$.G(813097, J$.R(813089, 'ServerType', ServerType, false, true), 'Standalone'),
                                                                J$.G(813113, J$.R(813105, 'ServerType', ServerType, false, true), 'Mongos')
                                                            ], 10, false), 'indexOf', false)(J$.R(813129, 'serverType', serverType, false, false)), J$.T(813145, 0, 22, false)))) {
                                                            J$.M(813177, J$.R(813153, 'serverDescriptions', serverDescriptions, false, false), J$.T(813161, 'delete', 21, false), false)(J$.R(813169, 'address', address, false, false));
                                                            topologyType = J$.W(813209, 'topologyType', J$.F(813201, J$.R(813185, 'checkHasPrimary', checkHasPrimary, false, true), false)(J$.R(813193, 'serverDescriptions', serverDescriptions, false, false)), topologyType, false, false);
                                                        } else if (J$.C(47144, J$.B(91994, '===', J$.R(813217, 'serverType', serverType, false, false), J$.G(813233, J$.R(813225, 'ServerType', ServerType, false, true), 'RSPrimary')))) {
                                                            var _result2 = J$.W(813297, '_result2', J$.F(813289, J$.R(813241, 'updateRsFromPrimary', updateRsFromPrimary, false, true), false)(J$.R(813249, 'serverDescriptions', serverDescriptions, false, false), J$.R(813257, 'setName', setName, false, false), J$.R(813265, 'serverDescription', serverDescription, false, false), J$.R(813273, 'maxSetVersion', maxSetVersion, false, false), J$.R(813281, 'maxElectionId', maxElectionId, false, false)), _result2, false, false);
                                                            topologyType = J$.W(813329, 'topologyType', J$.G(813321, J$.R(813305, '_result2', _result2, false, false), J$.T(813313, 0, 22, false)), topologyType, false, false), setName = J$.W(813361, 'setName', J$.G(813353, J$.R(813337, '_result2', _result2, false, false), J$.T(813345, 1, 22, false)), setName, false, false), maxSetVersion = J$.W(813393, 'maxSetVersion', J$.G(813385, J$.R(813369, '_result2', _result2, false, false), J$.T(813377, 2, 22, false)), maxSetVersion, false, false), maxElectionId = J$.W(813425, 'maxElectionId', J$.G(813417, J$.R(813401, '_result2', _result2, false, false), J$.T(813409, 3, 22, false)), maxElectionId, false, false);
                                                        } else if (J$.C(47136, J$.B(92002, '>=', J$.M(813497, J$.T(813481, [
                                                                J$.G(813441, J$.R(813433, 'ServerType', ServerType, false, true), 'RSSecondary'),
                                                                J$.G(813457, J$.R(813449, 'ServerType', ServerType, false, true), 'RSArbiter'),
                                                                J$.G(813473, J$.R(813465, 'ServerType', ServerType, false, true), 'RSOther')
                                                            ], 10, false), 'indexOf', false)(J$.R(813489, 'serverType', serverType, false, false)), J$.T(813505, 0, 22, false)))) {
                                                            topologyType = J$.W(813553, 'topologyType', J$.F(813545, J$.R(813513, 'updateRsWithPrimaryFromMember', updateRsWithPrimaryFromMember, false, true), false)(J$.R(813521, 'serverDescriptions', serverDescriptions, false, false), J$.R(813529, 'setName', setName, false, false), J$.R(813537, 'serverDescription', serverDescription, false, false)), topologyType, false, false);
                                                        } else {
                                                            topologyType = J$.W(813585, 'topologyType', J$.F(813577, J$.R(813561, 'checkHasPrimary', checkHasPrimary, false, true), false)(J$.R(813569, 'serverDescriptions', serverDescriptions, false, false)), topologyType, false, false);
                                                        }
                                                    }
                                                    return J$.Rt(813681, J$.F(813673, J$.R(813593, 'TopologyDescription', TopologyDescription, false, false), true)(J$.R(813601, 'topologyType', topologyType, false, false), J$.R(813609, 'serverDescriptions', serverDescriptions, false, false), J$.R(813617, 'setName', setName, false, false), J$.R(813625, 'maxSetVersion', maxSetVersion, false, false), J$.R(813633, 'maxElectionId', maxElectionId, false, false), J$.R(813641, 'commonWireVersion', commonWireVersion, false, false), J$.G(813657, J$.R(813649, 'this', this, false, false), 'options'), J$.R(813665, 'error', error, false, false)));
                                                } catch (J$e) {
                                                    J$.Ex(817577, J$e);
                                                } finally {
                                                    if (J$.Fr(817585))
                                                        continue jalangiLabel7;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false)
                                }, 11, false),
                                J$.T(813905, {
                                    key: J$.T(813825, 'hasServer', 21, false),
                                    value: J$.T(813897, function hasServer(address) {
                                        jalangiLabel8:
                                            while (true) {
                                                try {
                                                    J$.Fe(813873, arguments.callee, this, arguments);
                                                    arguments = J$.N(813881, 'arguments', arguments, true, false, false);
                                                    address = J$.N(813889, 'address', address, true, false, false);
                                                    return J$.Rt(813865, J$.M(813857, J$.G(813841, J$.R(813833, 'this', this, false, false), 'servers'), 'has', false)(J$.R(813849, 'address', address, false, false)));
                                                } catch (J$e) {
                                                    J$.Ex(817593, J$e);
                                                } finally {
                                                    if (J$.Fr(817601))
                                                        continue jalangiLabel8;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false)
                                }, 11, false),
                                J$.T(814073, {
                                    key: J$.T(813913, 'hasKnownServers', 21, false),
                                    get: J$.T(814065, function get() {
                                        jalangiLabel10:
                                            while (true) {
                                                try {
                                                    J$.Fe(814049, arguments.callee, this, arguments);
                                                    arguments = J$.N(814057, 'arguments', arguments, true, false, false);
                                                    return J$.Rt(814041, J$.M(814033, J$.M(813953, J$.I(typeof Array === 'undefined' ? Array = J$.R(813921, 'Array', undefined, true, true) : Array = J$.R(813921, 'Array', Array, true, true)), 'from', false)(J$.M(813945, J$.G(813937, J$.R(813929, 'this', this, false, false), 'servers'), 'values', false)()), 'some', false)(J$.T(814025, function (sd) {
                                                        jalangiLabel9:
                                                            while (true) {
                                                                try {
                                                                    J$.Fe(814001, arguments.callee, this, arguments);
                                                                    arguments = J$.N(814009, 'arguments', arguments, true, false, false);
                                                                    sd = J$.N(814017, 'sd', sd, true, false, false);
                                                                    return J$.Rt(813993, J$.B(92010, '!==', J$.G(813969, J$.R(813961, 'sd', sd, false, false), 'type'), J$.G(813985, J$.R(813977, 'ServerDescription', ServerDescription, false, true), 'Unknown')));
                                                                } catch (J$e) {
                                                                    J$.Ex(817609, J$e);
                                                                } finally {
                                                                    if (J$.Fr(817617))
                                                                        continue jalangiLabel9;
                                                                    else
                                                                        return J$.Ra();
                                                                }
                                                            }
                                                    }, 12, false)));
                                                } catch (J$e) {
                                                    J$.Ex(817625, J$e);
                                                } finally {
                                                    if (J$.Fr(817633))
                                                        continue jalangiLabel10;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false)
                                }, 11, false),
                                J$.T(814225, {
                                    key: J$.T(814081, 'hasDataBearingServers', 21, false),
                                    get: J$.T(814217, function get() {
                                        jalangiLabel12:
                                            while (true) {
                                                try {
                                                    J$.Fe(814201, arguments.callee, this, arguments);
                                                    arguments = J$.N(814209, 'arguments', arguments, true, false, false);
                                                    return J$.Rt(814193, J$.M(814185, J$.M(814121, J$.I(typeof Array === 'undefined' ? Array = J$.R(814089, 'Array', undefined, true, true) : Array = J$.R(814089, 'Array', Array, true, true)), 'from', false)(J$.M(814113, J$.G(814105, J$.R(814097, 'this', this, false, false), 'servers'), 'values', false)()), 'some', false)(J$.T(814177, function (sd) {
                                                        jalangiLabel11:
                                                            while (true) {
                                                                try {
                                                                    J$.Fe(814153, arguments.callee, this, arguments);
                                                                    arguments = J$.N(814161, 'arguments', arguments, true, false, false);
                                                                    sd = J$.N(814169, 'sd', sd, true, false, false);
                                                                    return J$.Rt(814145, J$.G(814137, J$.R(814129, 'sd', sd, false, false), 'isDataBearing'));
                                                                } catch (J$e) {
                                                                    J$.Ex(817641, J$e);
                                                                } finally {
                                                                    if (J$.Fr(817649))
                                                                        continue jalangiLabel11;
                                                                    else
                                                                        return J$.Ra();
                                                                }
                                                            }
                                                    }, 12, false)));
                                                } catch (J$e) {
                                                    J$.Ex(817657, J$e);
                                                } finally {
                                                    if (J$.Fr(817665))
                                                        continue jalangiLabel12;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false)
                                }, 11, false)
                            ], 10, false));
                            return J$.Rt(814257, J$.R(814249, 'TopologyDescription', TopologyDescription, false, false));
                        } catch (J$e) {
                            J$.Ex(817673, J$e);
                        } finally {
                            if (J$.Fr(817681))
                                continue jalangiLabel13;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false), false)(), TopologyDescription, false, true);
            J$.P(817249, J$.I(typeof module === 'undefined' ? module = J$.R(817217, 'module', undefined, true, true) : module = J$.R(817217, 'module', module, true, true)), 'exports', J$.T(817241, {
                TopologyType: J$.R(817225, 'TopologyType', TopologyType, false, true),
                TopologyDescription: J$.R(817233, 'TopologyDescription', TopologyDescription, false, true)
            }, 11, false));
        } catch (J$e) {
            J$.Ex(817833, J$e);
        } finally {
            if (J$.Sr(817841))
                continue jalangiLabel23;
            else
                break jalangiLabel23;
        }
    }
// JALANGI DO NOT INSTRUMENT

