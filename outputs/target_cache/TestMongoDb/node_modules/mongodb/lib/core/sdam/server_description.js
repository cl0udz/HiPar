J$.noInstrEval = false;
jalangiLabel14:
    while (true) {
        try {
            J$.Se(773401, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestMongoDb/node_modules/mongodb/lib/core/sdam/server_description.js');
            function _classCallCheck(instance, Constructor) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(770609, arguments.callee, this, arguments);
                            arguments = J$.N(770617, 'arguments', arguments, true, false, false);
                            instance = J$.N(770625, 'instance', instance, true, false, false);
                            Constructor = J$.N(770633, 'Constructor', Constructor, true, false, false);
                            if (J$.C(44640, J$.U(89698, '!', J$.B(89690, 'instanceof', J$.R(770569, 'instance', instance, false, false), J$.R(770577, 'Constructor', Constructor, false, false))))) {
                                throw J$.F(770601, J$.I(typeof TypeError === 'undefined' ? TypeError = J$.R(770585, 'TypeError', undefined, true, true) : TypeError = J$.R(770585, 'TypeError', TypeError, true, true)), true)(J$.T(770593, 'Cannot call a class as a function', 21, false));
                            }
                        } catch (J$e) {
                            J$.Ex(773513, J$e);
                        } finally {
                            if (J$.Fr(773521))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function _defineProperties(target, props) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(770881, arguments.callee, this, arguments);
                            arguments = J$.N(770889, 'arguments', arguments, true, false, false);
                            target = J$.N(770897, 'target', target, true, false, false);
                            props = J$.N(770905, 'props', props, true, false, false);
                            J$.N(770913, 'i', i, false, false, false);
                            J$.N(770921, 'descriptor', descriptor, false, false, false);
                            for (var i = J$.W(770649, 'i', J$.T(770641, 0, 22, false), i, false, false); J$.C(44664, J$.B(89706, '<', J$.R(770657, 'i', i, false, false), J$.G(770673, J$.R(770665, 'props', props, false, false), 'length'))); J$.B(89730, '-', i = J$.W(770689, 'i', J$.B(89722, '+', J$.U(89714, '+', J$.R(770681, 'i', i, false, false)), 1), i, false, false), 1)) {
                                var descriptor = J$.W(770721, 'descriptor', J$.G(770713, J$.R(770697, 'props', props, false, false), J$.R(770705, 'i', i, false, false)), descriptor, false, false);
                                J$.P(770761, J$.R(770729, 'descriptor', descriptor, false, false), 'enumerable', J$.C(44648, J$.G(770745, J$.R(770737, 'descriptor', descriptor, false, false), 'enumerable')) ? J$._() : J$.T(770753, false, 23, false));
                                J$.P(770785, J$.R(770769, 'descriptor', descriptor, false, false), 'configurable', J$.T(770777, true, 23, false));
                                if (J$.C(44656, J$.B(89738, 'in', J$.T(770793, 'value', 21, false), J$.R(770801, 'descriptor', descriptor, false, false))))
                                    J$.P(770825, J$.R(770809, 'descriptor', descriptor, false, false), 'writable', J$.T(770817, true, 23, false));
                                J$.M(770873, J$.I(typeof Object === 'undefined' ? Object = J$.R(770833, 'Object', undefined, true, true) : Object = J$.R(770833, 'Object', Object, true, true)), 'defineProperty', false)(J$.R(770841, 'target', target, false, false), J$.G(770857, J$.R(770849, 'descriptor', descriptor, false, false), 'key'), J$.R(770865, 'descriptor', descriptor, false, false));
                            }
                        } catch (J$e) {
                            J$.Ex(773529, J$e);
                        } finally {
                            if (J$.Fr(773537))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function _createClass(Constructor, protoProps, staticProps) {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(771033, arguments.callee, this, arguments);
                            arguments = J$.N(771041, 'arguments', arguments, true, false, false);
                            Constructor = J$.N(771049, 'Constructor', Constructor, true, false, false);
                            protoProps = J$.N(771057, 'protoProps', protoProps, true, false, false);
                            staticProps = J$.N(771065, 'staticProps', staticProps, true, false, false);
                            if (J$.C(44672, J$.R(770929, 'protoProps', protoProps, false, false)))
                                J$.F(770969, J$.R(770937, '_defineProperties', _defineProperties, false, true), false)(J$.G(770953, J$.R(770945, 'Constructor', Constructor, false, false), 'prototype'), J$.R(770961, 'protoProps', protoProps, false, false));
                            if (J$.C(44680, J$.R(770977, 'staticProps', staticProps, false, false)))
                                J$.F(771009, J$.R(770985, '_defineProperties', _defineProperties, false, true), false)(J$.R(770993, 'Constructor', Constructor, false, false), J$.R(771001, 'staticProps', staticProps, false, false));
                            return J$.Rt(771025, J$.R(771017, 'Constructor', Constructor, false, false));
                        } catch (J$e) {
                            J$.Ex(773545, J$e);
                        } finally {
                            if (J$.Fr(773553))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function parseServerType(ismaster) {
                jalangiLabel13:
                    while (true) {
                        try {
                            J$.Fe(773337, arguments.callee, this, arguments);
                            arguments = J$.N(773345, 'arguments', arguments, true, false, false);
                            ismaster = J$.N(773353, 'ismaster', ismaster, true, false, false);
                            if (J$.C(44760, J$.C(44752, J$.U(89770, '!', J$.R(772961, 'ismaster', ismaster, false, false))) ? J$._() : J$.U(89778, '!', J$.G(772977, J$.R(772969, 'ismaster', ismaster, false, false), 'ok')))) {
                                return J$.Rt(773001, J$.G(772993, J$.R(772985, 'ServerType', ServerType, false, true), 'Unknown'));
                            }
                            if (J$.C(44768, J$.G(773017, J$.R(773009, 'ismaster', ismaster, false, false), 'isreplicaset'))) {
                                return J$.Rt(773041, J$.G(773033, J$.R(773025, 'ServerType', ServerType, false, true), 'RSGhost'));
                            }
                            if (J$.C(44784, J$.C(44776, J$.G(773057, J$.R(773049, 'ismaster', ismaster, false, false), 'msg')) ? J$.B(89786, '===', J$.G(773073, J$.R(773065, 'ismaster', ismaster, false, false), 'msg'), J$.T(773081, 'isdbgrid', 21, false)) : J$._())) {
                                return J$.Rt(773105, J$.G(773097, J$.R(773089, 'ServerType', ServerType, false, true), 'Mongos'));
                            }
                            if (J$.C(44824, J$.G(773121, J$.R(773113, 'ismaster', ismaster, false, false), 'setName'))) {
                                if (J$.C(44816, J$.G(773137, J$.R(773129, 'ismaster', ismaster, false, false), 'hidden'))) {
                                    return J$.Rt(773161, J$.G(773153, J$.R(773145, 'ServerType', ServerType, false, true), 'RSOther'));
                                } else if (J$.C(44808, J$.G(773177, J$.R(773169, 'ismaster', ismaster, false, false), 'ismaster'))) {
                                    return J$.Rt(773201, J$.G(773193, J$.R(773185, 'ServerType', ServerType, false, true), 'RSPrimary'));
                                } else if (J$.C(44800, J$.G(773217, J$.R(773209, 'ismaster', ismaster, false, false), 'secondary'))) {
                                    return J$.Rt(773241, J$.G(773233, J$.R(773225, 'ServerType', ServerType, false, true), 'RSSecondary'));
                                } else if (J$.C(44792, J$.G(773257, J$.R(773249, 'ismaster', ismaster, false, false), 'arbiterOnly'))) {
                                    return J$.Rt(773281, J$.G(773273, J$.R(773265, 'ServerType', ServerType, false, true), 'RSArbiter'));
                                } else {
                                    return J$.Rt(773305, J$.G(773297, J$.R(773289, 'ServerType', ServerType, false, true), 'RSOther'));
                                }
                            }
                            return J$.Rt(773329, J$.G(773321, J$.R(773313, 'ServerType', ServerType, false, true), 'Standalone'));
                        } catch (J$e) {
                            J$.Ex(773721, J$e);
                        } finally {
                            if (J$.Fr(773729))
                                continue jalangiLabel13;
                            else
                                return J$.Ra();
                        }
                    }
            }
            _classCallCheck = J$.N(773417, '_classCallCheck', J$.T(773409, _classCallCheck, 12, false), true, false, false);
            _defineProperties = J$.N(773433, '_defineProperties', J$.T(773425, _defineProperties, 12, false), true, false, false);
            _createClass = J$.N(773449, '_createClass', J$.T(773441, _createClass, 12, false), true, false, false);
            J$.N(773457, 'ServerType', ServerType, false, false, false);
            J$.N(773465, 'WRITABLE_SERVER_TYPES', WRITABLE_SERVER_TYPES, false, false, false);
            J$.N(773473, 'DATA_BEARING_SERVER_TYPES', DATA_BEARING_SERVER_TYPES, false, false, false);
            J$.N(773481, 'ISMASTER_FIELDS', ISMASTER_FIELDS, false, false, false);
            J$.N(773489, 'ServerDescription', ServerDescription, false, false, false);
            parseServerType = J$.N(773505, 'parseServerType', J$.T(773497, parseServerType, 12, false), true, false, false);
            J$.T(770561, 'use strict', 21, false);
            var ServerType = J$.W(771153, 'ServerType', J$.T(771145, {
                Standalone: J$.T(771073, 'Standalone', 21, false),
                Mongos: J$.T(771081, 'Mongos', 21, false),
                PossiblePrimary: J$.T(771089, 'PossiblePrimary', 21, false),
                RSPrimary: J$.T(771097, 'RSPrimary', 21, false),
                RSSecondary: J$.T(771105, 'RSSecondary', 21, false),
                RSArbiter: J$.T(771113, 'RSArbiter', 21, false),
                RSOther: J$.T(771121, 'RSOther', 21, false),
                RSGhost: J$.T(771129, 'RSGhost', 21, false),
                Unknown: J$.T(771137, 'Unknown', 21, false)
            }, 11, false), ServerType, false, true);
            var WRITABLE_SERVER_TYPES = J$.W(771233, 'WRITABLE_SERVER_TYPES', J$.F(771225, J$.I(typeof Set === 'undefined' ? Set = J$.R(771161, 'Set', undefined, true, true) : Set = J$.R(771161, 'Set', Set, true, true)), true)(J$.T(771217, [
                J$.G(771177, J$.R(771169, 'ServerType', ServerType, false, true), 'RSPrimary'),
                J$.G(771193, J$.R(771185, 'ServerType', ServerType, false, true), 'Standalone'),
                J$.G(771209, J$.R(771201, 'ServerType', ServerType, false, true), 'Mongos')
            ], 10, false)), WRITABLE_SERVER_TYPES, false, true);
            var DATA_BEARING_SERVER_TYPES = J$.W(771329, 'DATA_BEARING_SERVER_TYPES', J$.F(771321, J$.I(typeof Set === 'undefined' ? Set = J$.R(771241, 'Set', undefined, true, true) : Set = J$.R(771241, 'Set', Set, true, true)), true)(J$.T(771313, [
                J$.G(771257, J$.R(771249, 'ServerType', ServerType, false, true), 'RSPrimary'),
                J$.G(771273, J$.R(771265, 'ServerType', ServerType, false, true), 'RSSecondary'),
                J$.G(771289, J$.R(771281, 'ServerType', ServerType, false, true), 'Mongos'),
                J$.G(771305, J$.R(771297, 'ServerType', ServerType, false, true), 'Standalone')
            ], 10, false)), DATA_BEARING_SERVER_TYPES, false, true);
            var ISMASTER_FIELDS = J$.W(771497, 'ISMASTER_FIELDS', J$.T(771489, [
                J$.T(771337, 'minWireVersion', 21, false),
                J$.T(771345, 'maxWireVersion', 21, false),
                J$.T(771353, 'maxBsonObjectSize', 21, false),
                J$.T(771361, 'maxMessageSizeBytes', 21, false),
                J$.T(771369, 'maxWriteBatchSize', 21, false),
                J$.T(771377, 'compression', 21, false),
                J$.T(771385, 'me', 21, false),
                J$.T(771393, 'hosts', 21, false),
                J$.T(771401, 'passives', 21, false),
                J$.T(771409, 'arbiters', 21, false),
                J$.T(771417, 'tags', 21, false),
                J$.T(771425, 'setName', 21, false),
                J$.T(771433, 'setVersion', 21, false),
                J$.T(771441, 'electionId', 21, false),
                J$.T(771449, 'primary', 21, false),
                J$.T(771457, 'logicalSessionTimeoutMinutes', 21, false),
                J$.T(771465, 'saslSupportedMechs', 21, false),
                J$.T(771473, '__nodejs_mock_server__', 21, false),
                J$.T(771481, '$clusterTime', 21, false)
            ], 10, false), ISMASTER_FIELDS, false, true);
            var ServerDescription = J$.W(772953, 'ServerDescription', J$.F(772945, J$.T(772937, function () {
                jalangiLabel12:
                    while (true) {
                        try {
                            J$.Fe(772905, arguments.callee, this, arguments);
                            function ServerDescription(address, ismaster, options) {
                                jalangiLabel7:
                                    while (true) {
                                        try {
                                            J$.Fe(772441, arguments.callee, this, arguments);
                                            arguments = J$.N(772449, 'arguments', arguments, true, false, false);
                                            address = J$.N(772457, 'address', address, true, false, false);
                                            ismaster = J$.N(772465, 'ismaster', ismaster, true, false, false);
                                            options = J$.N(772473, 'options', options, true, false, false);
                                            J$.N(772481, '_this', _this, false, false, false);
                                            var _this = J$.W(771513, '_this', J$.R(771505, 'this', this, false, false), _this, false, false);
                                            J$.F(771545, J$.R(771521, '_classCallCheck', _classCallCheck, false, true), false)(J$.R(771529, 'this', this, false, false), J$.R(771537, 'ServerDescription', ServerDescription, false, false));
                                            options = J$.W(771569, 'options', J$.C(44688, J$.R(771553, 'options', options, false, false)) ? J$._() : J$.T(771561, {}, 11, false), options, false, false);
                                            ismaster = J$.W(771657, 'ismaster', J$.M(771649, J$.I(typeof Object === 'undefined' ? Object = J$.R(771577, 'Object', undefined, true, true) : Object = J$.R(771577, 'Object', Object, true, true)), 'assign', false)(J$.T(771633, {
                                                minWireVersion: J$.T(771585, 0, 22, false),
                                                maxWireVersion: J$.T(771593, 0, 22, false),
                                                hosts: J$.T(771601, [], 10, false),
                                                passives: J$.T(771609, [], 10, false),
                                                arbiters: J$.T(771617, [], 10, false),
                                                tags: J$.T(771625, [], 10, false)
                                            }, 11, false), J$.R(771641, 'ismaster', ismaster, false, false)), ismaster, false, false);
                                            J$.P(771681, J$.R(771665, 'this', this, false, false), 'address', J$.R(771673, 'address', address, false, false));
                                            J$.P(771721, J$.R(771689, 'this', this, false, false), 'error', J$.C(44696, J$.G(771705, J$.R(771697, 'options', options, false, false), 'error')) ? J$._() : J$.T(771713, null, 25, false));
                                            J$.P(771761, J$.R(771729, 'this', this, false, false), 'roundTripTime', J$.C(44704, J$.G(771745, J$.R(771737, 'options', options, false, false), 'roundTripTime')) ? J$._() : J$.T(771753, 0, 22, false));
                                            J$.P(771793, J$.R(771769, 'this', this, false, false), 'lastUpdateTime', J$.M(771785, J$.I(typeof Date === 'undefined' ? Date = J$.R(771777, 'Date', undefined, true, true) : Date = J$.R(771777, 'Date', Date, true, true)), 'now', false)());
                                            J$.P(771857, J$.R(771801, 'this', this, false, false), 'lastWriteDate', J$.C(44712, J$.G(771817, J$.R(771809, 'ismaster', ismaster, false, false), 'lastWrite')) ? J$.G(771841, J$.G(771833, J$.R(771825, 'ismaster', ismaster, false, false), 'lastWrite'), 'lastWriteDate') : J$.T(771849, null, 25, false));
                                            J$.P(771921, J$.R(771865, 'this', this, false, false), 'opTime', J$.C(44720, J$.G(771881, J$.R(771873, 'ismaster', ismaster, false, false), 'lastWrite')) ? J$.G(771905, J$.G(771897, J$.R(771889, 'ismaster', ismaster, false, false), 'lastWrite'), 'opTime') : J$.T(771913, null, 25, false));
                                            J$.P(771961, J$.R(771929, 'this', this, false, false), 'type', J$.F(771953, J$.R(771937, 'parseServerType', parseServerType, false, true), false)(J$.R(771945, 'ismaster', ismaster, false, false)));
                                            J$.M(772089, J$.R(771969, 'ISMASTER_FIELDS', ISMASTER_FIELDS, false, true), 'forEach', false)(J$.T(772081, function (field) {
                                                jalangiLabel3:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(772057, arguments.callee, this, arguments);
                                                            arguments = J$.N(772065, 'arguments', arguments, true, false, false);
                                                            field = J$.N(772073, 'field', field, true, false, false);
                                                            if (J$.C(44728, J$.B(89754, '!==', J$.U(89746, 'typeof', J$.G(771993, J$.R(771977, 'ismaster', ismaster, false, false), J$.R(771985, 'field', field, false, false))), J$.T(772001, 'undefined', 21, false))))
                                                                J$.P(772049, J$.R(772009, '_this', _this, false, false), J$.R(772017, 'field', field, false, false), J$.G(772041, J$.R(772025, 'ismaster', ismaster, false, false), J$.R(772033, 'field', field, false, false)));
                                                        } catch (J$e) {
                                                            J$.Ex(773561, J$e);
                                                        } finally {
                                                            if (J$.Fr(773569))
                                                                continue jalangiLabel3;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false));
                                            if (J$.C(44736, J$.G(772105, J$.R(772097, 'this', this, false, false), 'me')))
                                                J$.P(772145, J$.R(772113, 'this', this, false, false), 'me', J$.M(772137, J$.G(772129, J$.R(772121, 'this', this, false, false), 'me'), 'toLowerCase', false)());
                                            J$.P(772241, J$.R(772153, 'this', this, false, false), 'hosts', J$.M(772233, J$.G(772169, J$.R(772161, 'this', this, false, false), 'hosts'), 'map', false)(J$.T(772225, function (host) {
                                                jalangiLabel4:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(772201, arguments.callee, this, arguments);
                                                            arguments = J$.N(772209, 'arguments', arguments, true, false, false);
                                                            host = J$.N(772217, 'host', host, true, false, false);
                                                            return J$.Rt(772193, J$.M(772185, J$.R(772177, 'host', host, false, false), 'toLowerCase', false)());
                                                        } catch (J$e) {
                                                            J$.Ex(773577, J$e);
                                                        } finally {
                                                            if (J$.Fr(773585))
                                                                continue jalangiLabel4;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false)));
                                            J$.P(772337, J$.R(772249, 'this', this, false, false), 'passives', J$.M(772329, J$.G(772265, J$.R(772257, 'this', this, false, false), 'passives'), 'map', false)(J$.T(772321, function (host) {
                                                jalangiLabel5:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(772297, arguments.callee, this, arguments);
                                                            arguments = J$.N(772305, 'arguments', arguments, true, false, false);
                                                            host = J$.N(772313, 'host', host, true, false, false);
                                                            return J$.Rt(772289, J$.M(772281, J$.R(772273, 'host', host, false, false), 'toLowerCase', false)());
                                                        } catch (J$e) {
                                                            J$.Ex(773593, J$e);
                                                        } finally {
                                                            if (J$.Fr(773601))
                                                                continue jalangiLabel5;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false)));
                                            J$.P(772433, J$.R(772345, 'this', this, false, false), 'arbiters', J$.M(772425, J$.G(772361, J$.R(772353, 'this', this, false, false), 'arbiters'), 'map', false)(J$.T(772417, function (host) {
                                                jalangiLabel6:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(772393, arguments.callee, this, arguments);
                                                            arguments = J$.N(772401, 'arguments', arguments, true, false, false);
                                                            host = J$.N(772409, 'host', host, true, false, false);
                                                            return J$.Rt(772385, J$.M(772377, J$.R(772369, 'host', host, false, false), 'toLowerCase', false)());
                                                        } catch (J$e) {
                                                            J$.Ex(773609, J$e);
                                                        } finally {
                                                            if (J$.Fr(773617))
                                                                continue jalangiLabel6;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false)));
                                        } catch (J$e) {
                                            J$.Ex(773625, J$e);
                                        } finally {
                                            if (J$.Fr(773633))
                                                continue jalangiLabel7;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }
                            arguments = J$.N(772913, 'arguments', arguments, true, false, false);
                            ServerDescription = J$.N(772929, 'ServerDescription', J$.T(772921, ServerDescription, 12, false), true, false, false);
                            J$.F(772881, J$.R(772489, '_createClass', _createClass, false, true), false)(J$.R(772497, 'ServerDescription', ServerDescription, false, false), J$.T(772873, [
                                J$.T(772609, {
                                    key: J$.T(772505, 'allHosts', 21, false),
                                    get: J$.T(772601, function get() {
                                        jalangiLabel8:
                                            while (true) {
                                                try {
                                                    J$.Fe(772585, arguments.callee, this, arguments);
                                                    arguments = J$.N(772593, 'arguments', arguments, true, false, false);
                                                    return J$.Rt(772577, J$.M(772569, J$.M(772545, J$.G(772521, J$.R(772513, 'this', this, false, false), 'hosts'), 'concat', false)(J$.G(772537, J$.R(772529, 'this', this, false, false), 'arbiters')), 'concat', false)(J$.G(772561, J$.R(772553, 'this', this, false, false), 'passives')));
                                                } catch (J$e) {
                                                    J$.Ex(773641, J$e);
                                                } finally {
                                                    if (J$.Fr(773649))
                                                        continue jalangiLabel8;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false)
                                }, 11, false),
                                J$.T(772705, {
                                    key: J$.T(772617, 'isReadable', 21, false),
                                    get: J$.T(772697, function get() {
                                        jalangiLabel9:
                                            while (true) {
                                                try {
                                                    J$.Fe(772681, arguments.callee, this, arguments);
                                                    arguments = J$.N(772689, 'arguments', arguments, true, false, false);
                                                    return J$.Rt(772673, J$.C(44744, J$.B(89762, '===', J$.G(772633, J$.R(772625, 'this', this, false, false), 'type'), J$.G(772649, J$.R(772641, 'ServerType', ServerType, false, true), 'RSSecondary'))) ? J$._() : J$.G(772665, J$.R(772657, 'this', this, false, false), 'isWritable'));
                                                } catch (J$e) {
                                                    J$.Ex(773657, J$e);
                                                } finally {
                                                    if (J$.Fr(773665))
                                                        continue jalangiLabel9;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false)
                                }, 11, false),
                                J$.T(772785, {
                                    key: J$.T(772713, 'isDataBearing', 21, false),
                                    get: J$.T(772777, function get() {
                                        jalangiLabel10:
                                            while (true) {
                                                try {
                                                    J$.Fe(772761, arguments.callee, this, arguments);
                                                    arguments = J$.N(772769, 'arguments', arguments, true, false, false);
                                                    return J$.Rt(772753, J$.M(772745, J$.R(772721, 'DATA_BEARING_SERVER_TYPES', DATA_BEARING_SERVER_TYPES, false, true), 'has', false)(J$.G(772737, J$.R(772729, 'this', this, false, false), 'type')));
                                                } catch (J$e) {
                                                    J$.Ex(773673, J$e);
                                                } finally {
                                                    if (J$.Fr(773681))
                                                        continue jalangiLabel10;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false)
                                }, 11, false),
                                J$.T(772865, {
                                    key: J$.T(772793, 'isWritable', 21, false),
                                    get: J$.T(772857, function get() {
                                        jalangiLabel11:
                                            while (true) {
                                                try {
                                                    J$.Fe(772841, arguments.callee, this, arguments);
                                                    arguments = J$.N(772849, 'arguments', arguments, true, false, false);
                                                    return J$.Rt(772833, J$.M(772825, J$.R(772801, 'WRITABLE_SERVER_TYPES', WRITABLE_SERVER_TYPES, false, true), 'has', false)(J$.G(772817, J$.R(772809, 'this', this, false, false), 'type')));
                                                } catch (J$e) {
                                                    J$.Ex(773689, J$e);
                                                } finally {
                                                    if (J$.Fr(773697))
                                                        continue jalangiLabel11;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false)
                                }, 11, false)
                            ], 10, false));
                            return J$.Rt(772897, J$.R(772889, 'ServerDescription', ServerDescription, false, false));
                        } catch (J$e) {
                            J$.Ex(773705, J$e);
                        } finally {
                            if (J$.Fr(773713))
                                continue jalangiLabel12;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false), false)(), ServerDescription, false, true);
            J$.P(773393, J$.I(typeof module === 'undefined' ? module = J$.R(773361, 'module', undefined, true, true) : module = J$.R(773361, 'module', module, true, true)), 'exports', J$.T(773385, {
                ServerDescription: J$.R(773369, 'ServerDescription', ServerDescription, false, true),
                ServerType: J$.R(773377, 'ServerType', ServerType, false, true)
            }, 11, false));
        } catch (J$e) {
            J$.Ex(773737, J$e);
        } finally {
            if (J$.Sr(773745))
                continue jalangiLabel14;
            else
                break jalangiLabel14;
        }
    }
// JALANGI DO NOT INSTRUMENT

