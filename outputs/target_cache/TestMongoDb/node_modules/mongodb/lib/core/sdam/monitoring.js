J$.noInstrEval = false;
jalangiLabel20:
    while (true) {
        try {
            J$.Se(758385, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestMongoDb/node_modules/mongodb/lib/core/sdam/monitoring.js');
            function _classCallCheck(instance, Constructor) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(755337, arguments.callee, this, arguments);
                            arguments = J$.N(755345, 'arguments', arguments, true, false, false);
                            instance = J$.N(755353, 'instance', instance, true, false, false);
                            Constructor = J$.N(755361, 'Constructor', Constructor, true, false, false);
                            if (J$.C(43880, J$.U(89234, '!', J$.B(89226, 'instanceof', J$.R(755297, 'instance', instance, false, false), J$.R(755305, 'Constructor', Constructor, false, false))))) {
                                throw J$.F(755329, J$.I(typeof TypeError === 'undefined' ? TypeError = J$.R(755313, 'TypeError', undefined, true, true) : TypeError = J$.R(755313, 'TypeError', TypeError, true, true)), true)(J$.T(755321, 'Cannot call a class as a function', 21, false));
                            }
                        } catch (J$e) {
                            J$.Ex(758529, J$e);
                        } finally {
                            if (J$.Fr(758537))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function monitorServer(server, options) {
                jalangiLabel19:
                    while (true) {
                        try {
                            J$.Fe(758225, arguments.callee, this, arguments);
                            arguments = J$.N(758233, 'arguments', arguments, true, false, false);
                            server = J$.N(758241, 'server', server, true, false, false);
                            options = J$.N(758249, 'options', options, true, false, false);
                            J$.N(758257, 'heartbeatFrequencyMS', heartbeatFrequencyMS, false, false, false);
                            J$.N(758265, 'checkServer', checkServer, false, false, false);
                            J$.N(758273, 'successHandler', successHandler, false, false, false);
                            options = J$.W(756681, 'options', J$.C(43888, J$.R(756665, 'options', options, false, false)) ? J$._() : J$.T(756673, {}, 11, false), options, false, false);
                            var heartbeatFrequencyMS = J$.W(756713, 'heartbeatFrequencyMS', J$.C(43896, J$.G(756697, J$.R(756689, 'options', options, false, false), 'heartbeatFrequencyMS')) ? J$._() : J$.T(756705, 10000, 22, false), heartbeatFrequencyMS, false, false);
                            if (J$.C(43904, J$.B(89242, '===', J$.G(756729, J$.R(756721, 'options', options, false, false), 'initial'), J$.T(756737, true, 23, false)))) {
                                J$.P(756841, J$.G(756753, J$.R(756745, 'server', server, false, false), 's'), 'monitorId', J$.F(756833, J$.I(typeof setTimeout === 'undefined' ? setTimeout = J$.R(756761, 'setTimeout', undefined, true, true) : setTimeout = J$.R(756761, 'setTimeout', setTimeout, true, true)), false)(J$.T(756817, function () {
                                    jalangiLabel10:
                                        while (true) {
                                            try {
                                                J$.Fe(756801, arguments.callee, this, arguments);
                                                arguments = J$.N(756809, 'arguments', arguments, true, false, false);
                                                return J$.Rt(756793, J$.F(756785, J$.R(756769, 'monitorServer', monitorServer, false, true), false)(J$.R(756777, 'server', server, false, false)));
                                            } catch (J$e) {
                                                J$.Ex(758689, J$e);
                                            } finally {
                                                if (J$.Fr(758697))
                                                    continue jalangiLabel10;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false), J$.R(756825, 'heartbeatFrequencyMS', heartbeatFrequencyMS, false, false)));
                                return J$.Rt(756849, undefined);
                            }
                            var checkServer = J$.W(757497, 'checkServer', J$.T(757489, function checkServer(callback) {
                                jalangiLabel13:
                                    while (true) {
                                        try {
                                            J$.Fe(757457, arguments.callee, this, arguments);
                                            arguments = J$.N(757465, 'arguments', arguments, true, false, false);
                                            callback = J$.N(757473, 'callback', callback, true, false, false);
                                            J$.N(757481, 'start', start, false, false, false);
                                            var start = J$.W(756873, 'start', J$.M(756865, J$.I(typeof process === 'undefined' ? process = J$.R(756857, 'process', undefined, true, true) : process = J$.R(756857, 'process', process, true, true)), 'hrtime', false)(), start, false, false);
                                            J$.M(756929, J$.R(756881, 'server', server, false, false), 'emit', false)(J$.T(756889, 'serverHeartbeatStarted', 21, false), J$.F(756921, J$.R(756897, 'ServerHeartbeatStartedEvent', ServerHeartbeatStartedEvent, false, true), true)(J$.G(756913, J$.R(756905, 'server', server, false, false), 'name')));
                                            J$.M(757009, J$.I(typeof process === 'undefined' ? process = J$.R(756937, 'process', undefined, true, true) : process = J$.R(756937, 'process', process, true, true)), 'nextTick', false)(J$.T(757001, function () {
                                                jalangiLabel11:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(756985, arguments.callee, this, arguments);
                                                            arguments = J$.N(756993, 'arguments', arguments, true, false, false);
                                                            return J$.Rt(756977, J$.M(756969, J$.R(756945, 'server', server, false, false), 'emit', false)(J$.T(756953, 'monitoring', 21, false), J$.R(756961, 'server', server, false, false)));
                                                        } catch (J$e) {
                                                            J$.Ex(758705, J$e);
                                                        } finally {
                                                            if (J$.Fr(758713))
                                                                continue jalangiLabel11;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false));
                                            J$.M(757449, J$.R(757017, 'server', server, false, false), 'command', false)(J$.T(757025, 'admin.$cmd', 21, false), J$.T(757041, { ismaster: J$.T(757033, true, 23, false) }, 11, false), J$.T(757097, {
                                                monitoring: J$.T(757049, true, 23, false),
                                                socketTimeout: J$.C(43912, J$.G(757081, J$.G(757073, J$.G(757065, J$.R(757057, 'server', server, false, false), 's'), 'options'), 'connectionTimeout')) ? J$._() : J$.T(757089, 2000, 22, false)
                                            }, 11, false), J$.T(757441, function (err, result) {
                                                jalangiLabel12:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(757393, arguments.callee, this, arguments);
                                                            arguments = J$.N(757401, 'arguments', arguments, true, false, false);
                                                            err = J$.N(757409, 'err', err, true, false, false);
                                                            result = J$.N(757417, 'result', result, true, false, false);
                                                            J$.N(757425, 'duration', duration, false, false, false);
                                                            J$.N(757433, 'isMaster', isMaster, false, false, false);
                                                            var duration = J$.W(757129, 'duration', J$.F(757121, J$.R(757105, 'calculateDurationInMs', calculateDurationInMs, false, true), false)(J$.R(757113, 'start', start, false, false)), duration, false, false);
                                                            if (J$.C(43920, J$.R(757137, 'err', err, false, false))) {
                                                                J$.M(757209, J$.R(757145, 'server', server, false, false), 'emit', false)(J$.T(757153, 'serverHeartbeatFailed', 21, false), J$.F(757201, J$.R(757161, 'ServerHeartbeatFailedEvent', ServerHeartbeatFailedEvent, false, true), true)(J$.R(757169, 'duration', duration, false, false), J$.R(757177, 'err', err, false, false), J$.G(757193, J$.R(757185, 'server', server, false, false), 'name')));
                                                                return J$.Rt(757249, J$.F(757241, J$.R(757217, 'callback', callback, false, false), false)(J$.R(757225, 'err', err, false, false), J$.T(757233, null, 25, false)));
                                                            }
                                                            var isMaster = J$.W(757273, 'isMaster', J$.G(757265, J$.R(757257, 'result', result, false, false), 'result'), isMaster, false, false);
                                                            J$.M(757345, J$.R(757281, 'server', server, false, false), 'emit', false)(J$.T(757289, 'serverHeartbeatSucceeded', 21, false), J$.F(757337, J$.R(757297, 'ServerHeartbeatSucceededEvent', ServerHeartbeatSucceededEvent, false, true), true)(J$.R(757305, 'duration', duration, false, false), J$.R(757313, 'isMaster', isMaster, false, false), J$.G(757329, J$.R(757321, 'server', server, false, false), 'name')));
                                                            return J$.Rt(757385, J$.F(757377, J$.R(757353, 'callback', callback, false, false), false)(J$.T(757361, null, 25, false), J$.R(757369, 'isMaster', isMaster, false, false)));
                                                        } catch (J$e) {
                                                            J$.Ex(758721, J$e);
                                                        } finally {
                                                            if (J$.Fr(758729))
                                                                continue jalangiLabel12;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false));
                                        } catch (J$e) {
                                            J$.Ex(758737, J$e);
                                        } finally {
                                            if (J$.Fr(758745))
                                                continue jalangiLabel13;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false), checkServer, false, false);
                            var successHandler = J$.W(757817, 'successHandler', J$.T(757809, function successHandler(isMaster) {
                                jalangiLabel15:
                                    while (true) {
                                        try {
                                            J$.Fe(757785, arguments.callee, this, arguments);
                                            arguments = J$.N(757793, 'arguments', arguments, true, false, false);
                                            isMaster = J$.N(757801, 'isMaster', isMaster, true, false, false);
                                            J$.P(757529, J$.G(757513, J$.R(757505, 'server', server, false, false), 's'), 'monitoring', J$.T(757521, false, 23, false));
                                            J$.M(757601, J$.R(757537, 'server', server, false, false), 'emit', false)(J$.T(757545, 'descriptionReceived', 21, false), J$.F(757593, J$.R(757553, 'ServerDescription', ServerDescription, false, true), true)(J$.G(757577, J$.G(757569, J$.R(757561, 'server', server, false, false), 'description'), 'address'), J$.R(757585, 'isMaster', isMaster, false, false)));
                                            if (J$.C(43936, J$.C(43928, J$.B(89250, '===', J$.G(757625, J$.G(757617, J$.R(757609, 'server', server, false, false), 's'), 'state'), J$.R(757633, 'STATE_DISCONNECTED', STATE_DISCONNECTED, false, true))) ? J$._() : J$.B(89258, '===', J$.G(757657, J$.G(757649, J$.R(757641, 'server', server, false, false), 's'), 'state'), J$.R(757665, 'STATE_DISCONNECTING', STATE_DISCONNECTING, false, true)))) {
                                                return J$.Rt(757673, undefined);
                                            }
                                            J$.P(757777, J$.G(757689, J$.R(757681, 'server', server, false, false), 's'), 'monitorId', J$.F(757769, J$.I(typeof setTimeout === 'undefined' ? setTimeout = J$.R(757697, 'setTimeout', undefined, true, true) : setTimeout = J$.R(757697, 'setTimeout', setTimeout, true, true)), false)(J$.T(757753, function () {
                                                jalangiLabel14:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(757737, arguments.callee, this, arguments);
                                                            arguments = J$.N(757745, 'arguments', arguments, true, false, false);
                                                            return J$.Rt(757729, J$.F(757721, J$.R(757705, 'monitorServer', monitorServer, false, true), false)(J$.R(757713, 'server', server, false, false)));
                                                        } catch (J$e) {
                                                            J$.Ex(758753, J$e);
                                                        } finally {
                                                            if (J$.Fr(758761))
                                                                continue jalangiLabel14;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false), J$.R(757761, 'heartbeatFrequencyMS', heartbeatFrequencyMS, false, false)));
                                        } catch (J$e) {
                                            J$.Ex(758769, J$e);
                                        } finally {
                                            if (J$.Fr(758777))
                                                continue jalangiLabel15;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false), successHandler, false, false);
                            J$.P(757849, J$.G(757833, J$.R(757825, 'server', server, false, false), 's'), 'monitoring', J$.T(757841, true, 23, false));
                            J$.F(758217, J$.R(757857, 'checkServer', checkServer, false, false), false)(J$.T(758209, function (err, isMaster) {
                                jalangiLabel18:
                                    while (true) {
                                        try {
                                            J$.Fe(758177, arguments.callee, this, arguments);
                                            arguments = J$.N(758185, 'arguments', arguments, true, false, false);
                                            err = J$.N(758193, 'err', err, true, false, false);
                                            isMaster = J$.N(758201, 'isMaster', isMaster, true, false, false);
                                            if (J$.C(43944, J$.U(89266, '!', J$.R(757865, 'err', err, false, false)))) {
                                                J$.F(757889, J$.R(757873, 'successHandler', successHandler, false, false), false)(J$.R(757881, 'isMaster', isMaster, false, false));
                                                return J$.Rt(757897, undefined);
                                            }
                                            J$.M(758169, J$.G(757921, J$.G(757913, J$.R(757905, 'server', server, false, false), 's'), 'pool'), 'reset', false)(J$.T(758161, function () {
                                                jalangiLabel17:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(758145, arguments.callee, this, arguments);
                                                            arguments = J$.N(758153, 'arguments', arguments, true, false, false);
                                                            J$.F(758137, J$.R(757929, 'checkServer', checkServer, false, false), false)(J$.T(758129, function (error, isMaster) {
                                                                jalangiLabel16:
                                                                    while (true) {
                                                                        try {
                                                                            J$.Fe(758097, arguments.callee, this, arguments);
                                                                            arguments = J$.N(758105, 'arguments', arguments, true, false, false);
                                                                            error = J$.N(758113, 'error', error, true, false, false);
                                                                            isMaster = J$.N(758121, 'isMaster', isMaster, true, false, false);
                                                                            if (J$.C(43952, J$.R(757937, 'error', error, false, false))) {
                                                                                J$.P(757969, J$.G(757953, J$.R(757945, 'server', server, false, false), 's'), 'monitoring', J$.T(757961, false, 23, false));
                                                                                J$.M(758057, J$.R(757977, 'server', server, false, false), 'emit', false)(J$.T(757985, 'descriptionReceived', 21, false), J$.F(758049, J$.R(757993, 'ServerDescription', ServerDescription, false, true), true)(J$.G(758017, J$.G(758009, J$.R(758001, 'server', server, false, false), 'description'), 'address'), J$.T(758025, null, 25, false), J$.T(758041, { error: J$.R(758033, 'error', error, false, false) }, 11, false)));
                                                                                return J$.Rt(758065, undefined);
                                                                            }
                                                                            J$.F(758089, J$.R(758073, 'successHandler', successHandler, false, false), false)(J$.R(758081, 'isMaster', isMaster, false, false));
                                                                        } catch (J$e) {
                                                                            J$.Ex(758785, J$e);
                                                                        } finally {
                                                                            if (J$.Fr(758793))
                                                                                continue jalangiLabel16;
                                                                            else
                                                                                return J$.Ra();
                                                                        }
                                                                    }
                                                            }, 12, false));
                                                        } catch (J$e) {
                                                            J$.Ex(758801, J$e);
                                                        } finally {
                                                            if (J$.Fr(758809))
                                                                continue jalangiLabel17;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false));
                                        } catch (J$e) {
                                            J$.Ex(758817, J$e);
                                        } finally {
                                            if (J$.Fr(758825))
                                                continue jalangiLabel18;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                        } catch (J$e) {
                            J$.Ex(758833, J$e);
                        } finally {
                            if (J$.Fr(758841))
                                continue jalangiLabel19;
                            else
                                return J$.Ra();
                        }
                    }
            }
            _classCallCheck = J$.N(758401, '_classCallCheck', J$.T(758393, _classCallCheck, 12, false), true, false, false);
            J$.N(758409, 'ServerDescription', ServerDescription, false, false, false);
            J$.N(758417, 'calculateDurationInMs', calculateDurationInMs, false, false, false);
            J$.N(758425, 'STATE_DISCONNECTED', STATE_DISCONNECTED, false, false, false);
            J$.N(758433, 'STATE_DISCONNECTING', STATE_DISCONNECTING, false, false, false);
            J$.N(758441, 'ServerDescriptionChangedEvent', ServerDescriptionChangedEvent, false, false, false);
            J$.N(758449, 'ServerOpeningEvent', ServerOpeningEvent, false, false, false);
            J$.N(758457, 'ServerClosedEvent', ServerClosedEvent, false, false, false);
            J$.N(758465, 'TopologyDescriptionChangedEvent', TopologyDescriptionChangedEvent, false, false, false);
            J$.N(758473, 'TopologyOpeningEvent', TopologyOpeningEvent, false, false, false);
            J$.N(758481, 'TopologyClosedEvent', TopologyClosedEvent, false, false, false);
            J$.N(758489, 'ServerHeartbeatStartedEvent', ServerHeartbeatStartedEvent, false, false, false);
            J$.N(758497, 'ServerHeartbeatSucceededEvent', ServerHeartbeatSucceededEvent, false, false, false);
            J$.N(758505, 'ServerHeartbeatFailedEvent', ServerHeartbeatFailedEvent, false, false, false);
            monitorServer = J$.N(758521, 'monitorServer', J$.T(758513, monitorServer, 12, false), true, false, false);
            J$.T(755289, 'use strict', 21, false);
            var ServerDescription = J$.W(755401, 'ServerDescription', J$.G(755393, J$.F(755385, J$.I(typeof require === 'undefined' ? require = J$.R(755369, 'require', undefined, true, true) : require = J$.R(755369, 'require', require, true, true)), false)(J$.T(755377, './server_description', 21, false)), 'ServerDescription'), ServerDescription, false, true);
            var calculateDurationInMs = J$.W(755441, 'calculateDurationInMs', J$.G(755433, J$.F(755425, J$.I(typeof require === 'undefined' ? require = J$.R(755409, 'require', undefined, true, true) : require = J$.R(755409, 'require', require, true, true)), false)(J$.T(755417, '../utils', 21, false)), 'calculateDurationInMs'), calculateDurationInMs, false, true);
            var STATE_DISCONNECTED = J$.W(755457, 'STATE_DISCONNECTED', J$.T(755449, 'disconnected', 21, false), STATE_DISCONNECTED, false, true);
            var STATE_DISCONNECTING = J$.W(755473, 'STATE_DISCONNECTING', J$.T(755465, 'disconnecting', 21, false), STATE_DISCONNECTING, false, true);
            var ServerDescriptionChangedEvent = J$.W(755633, 'ServerDescriptionChangedEvent', J$.T(755625, function ServerDescriptionChangedEvent(topologyId, address, previousDescription, newDescription) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(755577, arguments.callee, this, arguments);
                            arguments = J$.N(755585, 'arguments', arguments, true, false, false);
                            topologyId = J$.N(755593, 'topologyId', topologyId, true, false, false);
                            address = J$.N(755601, 'address', address, true, false, false);
                            previousDescription = J$.N(755609, 'previousDescription', previousDescription, true, false, false);
                            newDescription = J$.N(755617, 'newDescription', newDescription, true, false, false);
                            J$.F(755505, J$.R(755481, '_classCallCheck', _classCallCheck, false, true), false)(J$.R(755489, 'this', this, false, false), J$.R(755497, 'ServerDescriptionChangedEvent', ServerDescriptionChangedEvent, false, false));
                            J$.M(755569, J$.I(typeof Object === 'undefined' ? Object = J$.R(755513, 'Object', undefined, true, true) : Object = J$.R(755513, 'Object', Object, true, true)), 'assign', false)(J$.R(755521, 'this', this, false, false), J$.T(755561, {
                                topologyId: J$.R(755529, 'topologyId', topologyId, false, false),
                                address: J$.R(755537, 'address', address, false, false),
                                previousDescription: J$.R(755545, 'previousDescription', previousDescription, false, false),
                                newDescription: J$.R(755553, 'newDescription', newDescription, false, false)
                            }, 11, false));
                        } catch (J$e) {
                            J$.Ex(758545, J$e);
                        } finally {
                            if (J$.Fr(758553))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false), ServerDescriptionChangedEvent, false, true);
            var ServerOpeningEvent = J$.W(755761, 'ServerOpeningEvent', J$.T(755753, function ServerOpeningEvent(topologyId, address) {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(755721, arguments.callee, this, arguments);
                            arguments = J$.N(755729, 'arguments', arguments, true, false, false);
                            topologyId = J$.N(755737, 'topologyId', topologyId, true, false, false);
                            address = J$.N(755745, 'address', address, true, false, false);
                            J$.F(755665, J$.R(755641, '_classCallCheck', _classCallCheck, false, true), false)(J$.R(755649, 'this', this, false, false), J$.R(755657, 'ServerOpeningEvent', ServerOpeningEvent, false, false));
                            J$.M(755713, J$.I(typeof Object === 'undefined' ? Object = J$.R(755673, 'Object', undefined, true, true) : Object = J$.R(755673, 'Object', Object, true, true)), 'assign', false)(J$.R(755681, 'this', this, false, false), J$.T(755705, {
                                topologyId: J$.R(755689, 'topologyId', topologyId, false, false),
                                address: J$.R(755697, 'address', address, false, false)
                            }, 11, false));
                        } catch (J$e) {
                            J$.Ex(758561, J$e);
                        } finally {
                            if (J$.Fr(758569))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false), ServerOpeningEvent, false, true);
            var ServerClosedEvent = J$.W(755889, 'ServerClosedEvent', J$.T(755881, function ServerClosedEvent(topologyId, address) {
                jalangiLabel3:
                    while (true) {
                        try {
                            J$.Fe(755849, arguments.callee, this, arguments);
                            arguments = J$.N(755857, 'arguments', arguments, true, false, false);
                            topologyId = J$.N(755865, 'topologyId', topologyId, true, false, false);
                            address = J$.N(755873, 'address', address, true, false, false);
                            J$.F(755793, J$.R(755769, '_classCallCheck', _classCallCheck, false, true), false)(J$.R(755777, 'this', this, false, false), J$.R(755785, 'ServerClosedEvent', ServerClosedEvent, false, false));
                            J$.M(755841, J$.I(typeof Object === 'undefined' ? Object = J$.R(755801, 'Object', undefined, true, true) : Object = J$.R(755801, 'Object', Object, true, true)), 'assign', false)(J$.R(755809, 'this', this, false, false), J$.T(755833, {
                                topologyId: J$.R(755817, 'topologyId', topologyId, false, false),
                                address: J$.R(755825, 'address', address, false, false)
                            }, 11, false));
                        } catch (J$e) {
                            J$.Ex(758577, J$e);
                        } finally {
                            if (J$.Fr(758585))
                                continue jalangiLabel3;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false), ServerClosedEvent, false, true);
            var TopologyDescriptionChangedEvent = J$.W(756033, 'TopologyDescriptionChangedEvent', J$.T(756025, function TopologyDescriptionChangedEvent(topologyId, previousDescription, newDescription) {
                jalangiLabel4:
                    while (true) {
                        try {
                            J$.Fe(755985, arguments.callee, this, arguments);
                            arguments = J$.N(755993, 'arguments', arguments, true, false, false);
                            topologyId = J$.N(756001, 'topologyId', topologyId, true, false, false);
                            previousDescription = J$.N(756009, 'previousDescription', previousDescription, true, false, false);
                            newDescription = J$.N(756017, 'newDescription', newDescription, true, false, false);
                            J$.F(755921, J$.R(755897, '_classCallCheck', _classCallCheck, false, true), false)(J$.R(755905, 'this', this, false, false), J$.R(755913, 'TopologyDescriptionChangedEvent', TopologyDescriptionChangedEvent, false, false));
                            J$.M(755977, J$.I(typeof Object === 'undefined' ? Object = J$.R(755929, 'Object', undefined, true, true) : Object = J$.R(755929, 'Object', Object, true, true)), 'assign', false)(J$.R(755937, 'this', this, false, false), J$.T(755969, {
                                topologyId: J$.R(755945, 'topologyId', topologyId, false, false),
                                previousDescription: J$.R(755953, 'previousDescription', previousDescription, false, false),
                                newDescription: J$.R(755961, 'newDescription', newDescription, false, false)
                            }, 11, false));
                        } catch (J$e) {
                            J$.Ex(758593, J$e);
                        } finally {
                            if (J$.Fr(758601))
                                continue jalangiLabel4;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false), TopologyDescriptionChangedEvent, false, true);
            var TopologyOpeningEvent = J$.W(756145, 'TopologyOpeningEvent', J$.T(756137, function TopologyOpeningEvent(topologyId) {
                jalangiLabel5:
                    while (true) {
                        try {
                            J$.Fe(756113, arguments.callee, this, arguments);
                            arguments = J$.N(756121, 'arguments', arguments, true, false, false);
                            topologyId = J$.N(756129, 'topologyId', topologyId, true, false, false);
                            J$.F(756065, J$.R(756041, '_classCallCheck', _classCallCheck, false, true), false)(J$.R(756049, 'this', this, false, false), J$.R(756057, 'TopologyOpeningEvent', TopologyOpeningEvent, false, false));
                            J$.M(756105, J$.I(typeof Object === 'undefined' ? Object = J$.R(756073, 'Object', undefined, true, true) : Object = J$.R(756073, 'Object', Object, true, true)), 'assign', false)(J$.R(756081, 'this', this, false, false), J$.T(756097, { topologyId: J$.R(756089, 'topologyId', topologyId, false, false) }, 11, false));
                        } catch (J$e) {
                            J$.Ex(758609, J$e);
                        } finally {
                            if (J$.Fr(758617))
                                continue jalangiLabel5;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false), TopologyOpeningEvent, false, true);
            var TopologyClosedEvent = J$.W(756257, 'TopologyClosedEvent', J$.T(756249, function TopologyClosedEvent(topologyId) {
                jalangiLabel6:
                    while (true) {
                        try {
                            J$.Fe(756225, arguments.callee, this, arguments);
                            arguments = J$.N(756233, 'arguments', arguments, true, false, false);
                            topologyId = J$.N(756241, 'topologyId', topologyId, true, false, false);
                            J$.F(756177, J$.R(756153, '_classCallCheck', _classCallCheck, false, true), false)(J$.R(756161, 'this', this, false, false), J$.R(756169, 'TopologyClosedEvent', TopologyClosedEvent, false, false));
                            J$.M(756217, J$.I(typeof Object === 'undefined' ? Object = J$.R(756185, 'Object', undefined, true, true) : Object = J$.R(756185, 'Object', Object, true, true)), 'assign', false)(J$.R(756193, 'this', this, false, false), J$.T(756209, { topologyId: J$.R(756201, 'topologyId', topologyId, false, false) }, 11, false));
                        } catch (J$e) {
                            J$.Ex(758625, J$e);
                        } finally {
                            if (J$.Fr(758633))
                                continue jalangiLabel6;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false), TopologyClosedEvent, false, true);
            var ServerHeartbeatStartedEvent = J$.W(756369, 'ServerHeartbeatStartedEvent', J$.T(756361, function ServerHeartbeatStartedEvent(connectionId) {
                jalangiLabel7:
                    while (true) {
                        try {
                            J$.Fe(756337, arguments.callee, this, arguments);
                            arguments = J$.N(756345, 'arguments', arguments, true, false, false);
                            connectionId = J$.N(756353, 'connectionId', connectionId, true, false, false);
                            J$.F(756289, J$.R(756265, '_classCallCheck', _classCallCheck, false, true), false)(J$.R(756273, 'this', this, false, false), J$.R(756281, 'ServerHeartbeatStartedEvent', ServerHeartbeatStartedEvent, false, false));
                            J$.M(756329, J$.I(typeof Object === 'undefined' ? Object = J$.R(756297, 'Object', undefined, true, true) : Object = J$.R(756297, 'Object', Object, true, true)), 'assign', false)(J$.R(756305, 'this', this, false, false), J$.T(756321, { connectionId: J$.R(756313, 'connectionId', connectionId, false, false) }, 11, false));
                        } catch (J$e) {
                            J$.Ex(758641, J$e);
                        } finally {
                            if (J$.Fr(758649))
                                continue jalangiLabel7;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false), ServerHeartbeatStartedEvent, false, true);
            var ServerHeartbeatSucceededEvent = J$.W(756513, 'ServerHeartbeatSucceededEvent', J$.T(756505, function ServerHeartbeatSucceededEvent(duration, reply, connectionId) {
                jalangiLabel8:
                    while (true) {
                        try {
                            J$.Fe(756465, arguments.callee, this, arguments);
                            arguments = J$.N(756473, 'arguments', arguments, true, false, false);
                            duration = J$.N(756481, 'duration', duration, true, false, false);
                            reply = J$.N(756489, 'reply', reply, true, false, false);
                            connectionId = J$.N(756497, 'connectionId', connectionId, true, false, false);
                            J$.F(756401, J$.R(756377, '_classCallCheck', _classCallCheck, false, true), false)(J$.R(756385, 'this', this, false, false), J$.R(756393, 'ServerHeartbeatSucceededEvent', ServerHeartbeatSucceededEvent, false, false));
                            J$.M(756457, J$.I(typeof Object === 'undefined' ? Object = J$.R(756409, 'Object', undefined, true, true) : Object = J$.R(756409, 'Object', Object, true, true)), 'assign', false)(J$.R(756417, 'this', this, false, false), J$.T(756449, {
                                duration: J$.R(756425, 'duration', duration, false, false),
                                reply: J$.R(756433, 'reply', reply, false, false),
                                connectionId: J$.R(756441, 'connectionId', connectionId, false, false)
                            }, 11, false));
                        } catch (J$e) {
                            J$.Ex(758657, J$e);
                        } finally {
                            if (J$.Fr(758665))
                                continue jalangiLabel8;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false), ServerHeartbeatSucceededEvent, false, true);
            var ServerHeartbeatFailedEvent = J$.W(756657, 'ServerHeartbeatFailedEvent', J$.T(756649, function ServerHeartbeatFailedEvent(duration, failure, connectionId) {
                jalangiLabel9:
                    while (true) {
                        try {
                            J$.Fe(756609, arguments.callee, this, arguments);
                            arguments = J$.N(756617, 'arguments', arguments, true, false, false);
                            duration = J$.N(756625, 'duration', duration, true, false, false);
                            failure = J$.N(756633, 'failure', failure, true, false, false);
                            connectionId = J$.N(756641, 'connectionId', connectionId, true, false, false);
                            J$.F(756545, J$.R(756521, '_classCallCheck', _classCallCheck, false, true), false)(J$.R(756529, 'this', this, false, false), J$.R(756537, 'ServerHeartbeatFailedEvent', ServerHeartbeatFailedEvent, false, false));
                            J$.M(756601, J$.I(typeof Object === 'undefined' ? Object = J$.R(756553, 'Object', undefined, true, true) : Object = J$.R(756553, 'Object', Object, true, true)), 'assign', false)(J$.R(756561, 'this', this, false, false), J$.T(756593, {
                                duration: J$.R(756569, 'duration', duration, false, false),
                                failure: J$.R(756577, 'failure', failure, false, false),
                                connectionId: J$.R(756585, 'connectionId', connectionId, false, false)
                            }, 11, false));
                        } catch (J$e) {
                            J$.Ex(758673, J$e);
                        } finally {
                            if (J$.Fr(758681))
                                continue jalangiLabel9;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false), ServerHeartbeatFailedEvent, false, true);
            J$.P(758377, J$.I(typeof module === 'undefined' ? module = J$.R(758281, 'module', undefined, true, true) : module = J$.R(758281, 'module', module, true, true)), 'exports', J$.T(758369, {
                ServerDescriptionChangedEvent: J$.R(758289, 'ServerDescriptionChangedEvent', ServerDescriptionChangedEvent, false, true),
                ServerOpeningEvent: J$.R(758297, 'ServerOpeningEvent', ServerOpeningEvent, false, true),
                ServerClosedEvent: J$.R(758305, 'ServerClosedEvent', ServerClosedEvent, false, true),
                TopologyDescriptionChangedEvent: J$.R(758313, 'TopologyDescriptionChangedEvent', TopologyDescriptionChangedEvent, false, true),
                TopologyOpeningEvent: J$.R(758321, 'TopologyOpeningEvent', TopologyOpeningEvent, false, true),
                TopologyClosedEvent: J$.R(758329, 'TopologyClosedEvent', TopologyClosedEvent, false, true),
                ServerHeartbeatStartedEvent: J$.R(758337, 'ServerHeartbeatStartedEvent', ServerHeartbeatStartedEvent, false, true),
                ServerHeartbeatSucceededEvent: J$.R(758345, 'ServerHeartbeatSucceededEvent', ServerHeartbeatSucceededEvent, false, true),
                ServerHeartbeatFailedEvent: J$.R(758353, 'ServerHeartbeatFailedEvent', ServerHeartbeatFailedEvent, false, true),
                monitorServer: J$.R(758361, 'monitorServer', monitorServer, false, true)
            }, 11, false));
        } catch (J$e) {
            J$.Ex(758849, J$e);
        } finally {
            if (J$.Sr(758857))
                continue jalangiLabel20;
            else
                break jalangiLabel20;
        }
    }
// JALANGI DO NOT INSTRUMENT

