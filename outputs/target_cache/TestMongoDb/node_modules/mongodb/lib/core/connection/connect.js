J$.noInstrEval = false;
jalangiLabel29:
    while (true) {
        try {
            J$.Se(684201, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestMongoDb/node_modules/mongodb/lib/core/connection/connect.js');
            function connect(options, callback) {
                jalangiLabel3:
                    while (true) {
                        try {
                            J$.Fe(677817, arguments.callee, this, arguments);
                            arguments = J$.N(677825, 'arguments', arguments, true, false, false);
                            options = J$.N(677833, 'options', options, true, false, false);
                            callback = J$.N(677841, 'callback', callback, true, false, false);
                            if (J$.C(38568, J$.B(84106, '==', J$.R(677193, 'AUTH_PROVIDERS', AUTH_PROVIDERS, false, true), J$.T(677201, null, 25, false)))) {
                                AUTH_PROVIDERS = J$.W(677241, 'AUTH_PROVIDERS', J$.F(677233, J$.R(677209, 'defaultAuthProviders', defaultAuthProviders, false, true), false)(J$.G(677225, J$.R(677217, 'options', options, false, false), 'bson')), AUTH_PROVIDERS, false, true);
                            }
                            if (J$.C(38584, J$.B(84114, '!==', J$.G(677257, J$.R(677249, 'options', options, false, false), 'family'), void J$.T(677265, 0, 22, false)))) {
                                J$.F(677457, J$.R(677273, 'makeConnection', makeConnection, false, true), false)(J$.G(677289, J$.R(677281, 'options', options, false, false), 'family'), J$.R(677297, 'options', options, false, false), J$.T(677449, function (err, socket) {
                                    jalangiLabel0:
                                        while (true) {
                                            try {
                                                J$.Fe(677417, arguments.callee, this, arguments);
                                                arguments = J$.N(677425, 'arguments', arguments, true, false, false);
                                                err = J$.N(677433, 'err', err, true, false, false);
                                                socket = J$.N(677441, 'socket', socket, true, false, false);
                                                if (J$.C(38576, J$.R(677305, 'err', err, false, false))) {
                                                    J$.F(677337, J$.R(677313, 'callback', callback, false, false), false)(J$.R(677321, 'err', err, false, false), J$.R(677329, 'socket', socket, false, false));
                                                    return J$.Rt(677345, undefined);
                                                }
                                                J$.F(677409, J$.R(677353, 'performInitialHandshake', performInitialHandshake, false, true), false)(J$.F(677385, J$.R(677361, 'Connection', Connection, false, true), true)(J$.R(677369, 'socket', socket, false, false), J$.R(677377, 'options', options, false, false)), J$.R(677393, 'options', options, false, false), J$.R(677401, 'callback', callback, false, false));
                                            } catch (J$e) {
                                                J$.Ex(684497, J$e);
                                            } finally {
                                                if (J$.Fr(684505))
                                                    continue jalangiLabel0;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false));
                                return J$.Rt(677465, undefined);
                            }
                            return J$.Rt(677809, J$.F(677801, J$.R(677473, 'makeConnection', makeConnection, false, true), false)(J$.T(677481, 6, 22, false), J$.R(677489, 'options', options, false, false), J$.T(677793, function (err, ipv6Socket) {
                                jalangiLabel2:
                                    while (true) {
                                        try {
                                            J$.Fe(677761, arguments.callee, this, arguments);
                                            arguments = J$.N(677769, 'arguments', arguments, true, false, false);
                                            err = J$.N(677777, 'err', err, true, false, false);
                                            ipv6Socket = J$.N(677785, 'ipv6Socket', ipv6Socket, true, false, false);
                                            if (J$.C(38600, J$.R(677497, 'err', err, false, false))) {
                                                J$.F(677681, J$.R(677505, 'makeConnection', makeConnection, false, true), false)(J$.T(677513, 4, 22, false), J$.R(677521, 'options', options, false, false), J$.T(677673, function (err, ipv4Socket) {
                                                    jalangiLabel1:
                                                        while (true) {
                                                            try {
                                                                J$.Fe(677641, arguments.callee, this, arguments);
                                                                arguments = J$.N(677649, 'arguments', arguments, true, false, false);
                                                                err = J$.N(677657, 'err', err, true, false, false);
                                                                ipv4Socket = J$.N(677665, 'ipv4Socket', ipv4Socket, true, false, false);
                                                                if (J$.C(38592, J$.R(677529, 'err', err, false, false))) {
                                                                    J$.F(677561, J$.R(677537, 'callback', callback, false, false), false)(J$.R(677545, 'err', err, false, false), J$.R(677553, 'ipv4Socket', ipv4Socket, false, false));
                                                                    return J$.Rt(677569, undefined);
                                                                }
                                                                J$.F(677633, J$.R(677577, 'performInitialHandshake', performInitialHandshake, false, true), false)(J$.F(677609, J$.R(677585, 'Connection', Connection, false, true), true)(J$.R(677593, 'ipv4Socket', ipv4Socket, false, false), J$.R(677601, 'options', options, false, false)), J$.R(677617, 'options', options, false, false), J$.R(677625, 'callback', callback, false, false));
                                                            } catch (J$e) {
                                                                J$.Ex(684513, J$e);
                                                            } finally {
                                                                if (J$.Fr(684521))
                                                                    continue jalangiLabel1;
                                                                else
                                                                    return J$.Ra();
                                                            }
                                                        }
                                                }, 12, false));
                                                return J$.Rt(677689, undefined);
                                            }
                                            J$.F(677753, J$.R(677697, 'performInitialHandshake', performInitialHandshake, false, true), false)(J$.F(677729, J$.R(677705, 'Connection', Connection, false, true), true)(J$.R(677713, 'ipv6Socket', ipv6Socket, false, false), J$.R(677721, 'options', options, false, false)), J$.R(677737, 'options', options, false, false), J$.R(677745, 'callback', callback, false, false));
                                        } catch (J$e) {
                                            J$.Ex(684529, J$e);
                                        } finally {
                                            if (J$.Fr(684537))
                                                continue jalangiLabel2;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false)));
                        } catch (J$e) {
                            J$.Ex(684545, J$e);
                        } finally {
                            if (J$.Fr(684553))
                                continue jalangiLabel3;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function getSaslSupportedMechs(options) {
                jalangiLabel4:
                    while (true) {
                        try {
                            J$.Fe(678169, arguments.callee, this, arguments);
                            arguments = J$.N(678177, 'arguments', arguments, true, false, false);
                            options = J$.N(678185, 'options', options, true, false, false);
                            J$.N(678193, 'credentials', credentials, false, false, false);
                            J$.N(678201, 'authMechanism', authMechanism, false, false, false);
                            J$.N(678209, 'authSource', authSource, false, false, false);
                            J$.N(678217, 'user', user, false, false, false);
                            if (J$.C(38616, J$.U(84122, '!', J$.C(38608, J$.R(677849, 'options', options, false, false)) ? J$.G(677865, J$.R(677857, 'options', options, false, false), 'credentials') : J$._()))) {
                                return J$.Rt(677881, J$.T(677873, {}, 11, false));
                            }
                            var credentials = J$.W(677905, 'credentials', J$.G(677897, J$.R(677889, 'options', options, false, false), 'credentials'), credentials, false, false);
                            var authMechanism = J$.W(677929, 'authMechanism', J$.G(677921, J$.R(677913, 'credentials', credentials, false, false), 'mechanism'), authMechanism, false, false);
                            var authSource = J$.W(677977, 'authSource', J$.C(38632, J$.C(38624, J$.G(677945, J$.R(677937, 'credentials', credentials, false, false), 'source')) ? J$._() : J$.G(677961, J$.R(677953, 'options', options, false, false), 'dbName')) ? J$._() : J$.T(677969, 'admin', 21, false), authSource, false, false);
                            var user = J$.W(678017, 'user', J$.C(38640, J$.G(677993, J$.R(677985, 'credentials', credentials, false, false), 'username')) ? J$._() : J$.G(678009, J$.R(678001, 'options', options, false, false), 'user'), user, false, false);
                            if (J$.C(38656, J$.C(38648, J$.B(84138, '===', J$.U(84130, 'typeof', J$.R(678025, 'authMechanism', authMechanism, false, false)), J$.T(678033, 'string', 21, false))) ? J$.B(84146, '!==', J$.M(678049, J$.R(678041, 'authMechanism', authMechanism, false, false), 'toUpperCase', false)(), J$.T(678057, 'DEFAULT', 21, false)) : J$._())) {
                                return J$.Rt(678073, J$.T(678065, {}, 11, false));
                            }
                            if (J$.C(38664, J$.U(84154, '!', J$.R(678081, 'user', user, false, false)))) {
                                return J$.Rt(678097, J$.T(678089, {}, 11, false));
                            }
                            return J$.Rt(678161, J$.T(678153, { saslSupportedMechs: J$.M(678145, J$.M(678129, J$.T(678105, '', 21, false), 'concat', false)(J$.R(678113, 'authSource', authSource, false, false), J$.T(678121, '.', 21, false)), 'concat', false)(J$.R(678137, 'user', user, false, false)) }, 11, false));
                        } catch (J$e) {
                            J$.Ex(684561, J$e);
                        } finally {
                            if (J$.Fr(684569))
                                continue jalangiLabel4;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function checkSupportedServer(ismaster, options) {
                jalangiLabel5:
                    while (true) {
                        try {
                            J$.Fe(678777, arguments.callee, this, arguments);
                            arguments = J$.N(678785, 'arguments', arguments, true, false, false);
                            ismaster = J$.N(678793, 'ismaster', ismaster, true, false, false);
                            options = J$.N(678801, 'options', options, true, false, false);
                            J$.N(678809, 'serverVersionHighEnough', serverVersionHighEnough, false, false, false);
                            J$.N(678817, 'serverVersionLowEnough', serverVersionLowEnough, false, false, false);
                            J$.N(678825, '_message', _message, false, false, false);
                            J$.N(678833, 'message', message, false, false, false);
                            var serverVersionHighEnough = J$.W(678281, 'serverVersionHighEnough', J$.C(38680, J$.C(38672, J$.R(678225, 'ismaster', ismaster, false, false)) ? J$.B(84170, '===', J$.U(84162, 'typeof', J$.G(678241, J$.R(678233, 'ismaster', ismaster, false, false), 'maxWireVersion')), J$.T(678249, 'number', 21, false)) : J$._()) ? J$.B(84178, '>=', J$.G(678265, J$.R(678257, 'ismaster', ismaster, false, false), 'maxWireVersion'), J$.R(678273, 'MIN_SUPPORTED_WIRE_VERSION', MIN_SUPPORTED_WIRE_VERSION, false, true)) : J$._(), serverVersionHighEnough, false, false);
                            var serverVersionLowEnough = J$.W(678345, 'serverVersionLowEnough', J$.C(38696, J$.C(38688, J$.R(678289, 'ismaster', ismaster, false, false)) ? J$.B(84194, '===', J$.U(84186, 'typeof', J$.G(678305, J$.R(678297, 'ismaster', ismaster, false, false), 'minWireVersion')), J$.T(678313, 'number', 21, false)) : J$._()) ? J$.B(84202, '<=', J$.G(678329, J$.R(678321, 'ismaster', ismaster, false, false), 'minWireVersion'), J$.R(678337, 'MAX_SUPPORTED_WIRE_VERSION', MAX_SUPPORTED_WIRE_VERSION, false, true)) : J$._(), serverVersionLowEnough, false, false);
                            if (J$.C(38712, J$.R(678353, 'serverVersionHighEnough', serverVersionHighEnough, false, false))) {
                                if (J$.C(38704, J$.R(678361, 'serverVersionLowEnough', serverVersionLowEnough, false, false))) {
                                    return J$.Rt(678377, J$.T(678369, null, 25, false));
                                }
                                var _message = J$.W(678537, '_message', J$.M(678529, J$.M(678505, J$.M(678481, J$.M(678449, J$.M(678417, J$.T(678385, 'Server at ', 21, false), 'concat', false)(J$.G(678401, J$.R(678393, 'options', options, false, false), 'host'), J$.T(678409, ':', 21, false)), 'concat', false)(J$.G(678433, J$.R(678425, 'options', options, false, false), 'port'), J$.T(678441, ' reports minimum wire version ', 21, false)), 'concat', false)(J$.G(678465, J$.R(678457, 'ismaster', ismaster, false, false), 'minWireVersion'), J$.T(678473, ', but this version of the Node.js Driver requires at most ', 21, false)), 'concat', false)(J$.R(678489, 'MAX_SUPPORTED_WIRE_VERSION', MAX_SUPPORTED_WIRE_VERSION, false, true), J$.T(678497, ' (MongoDB ', 21, false)), 'concat', false)(J$.R(678513, 'MAX_SUPPORTED_SERVER_VERSION', MAX_SUPPORTED_SERVER_VERSION, false, true), J$.T(678521, ')', 21, false)), _message, false, false);
                                return J$.Rt(678569, J$.F(678561, J$.R(678545, 'MongoError', MongoError, false, true), true)(J$.R(678553, '_message', _message, false, false)));
                            }
                            var message = J$.W(678737, 'message', J$.M(678729, J$.M(678705, J$.M(678681, J$.M(678641, J$.M(678609, J$.T(678577, 'Server at ', 21, false), 'concat', false)(J$.G(678593, J$.R(678585, 'options', options, false, false), 'host'), J$.T(678601, ':', 21, false)), 'concat', false)(J$.G(678625, J$.R(678617, 'options', options, false, false), 'port'), J$.T(678633, ' reports maximum wire version ', 21, false)), 'concat', false)(J$.C(38720, J$.G(678657, J$.R(678649, 'ismaster', ismaster, false, false), 'maxWireVersion')) ? J$._() : J$.T(678665, 0, 22, false), J$.T(678673, ', but this version of the Node.js Driver requires at least ', 21, false)), 'concat', false)(J$.R(678689, 'MIN_SUPPORTED_WIRE_VERSION', MIN_SUPPORTED_WIRE_VERSION, false, true), J$.T(678697, ' (MongoDB ', 21, false)), 'concat', false)(J$.R(678713, 'MIN_SUPPORTED_SERVER_VERSION', MIN_SUPPORTED_SERVER_VERSION, false, true), J$.T(678721, ')', 21, false)), message, false, false);
                            return J$.Rt(678769, J$.F(678761, J$.R(678745, 'MongoError', MongoError, false, true), true)(J$.R(678753, 'message', message, false, false)));
                        } catch (J$e) {
                            J$.Ex(684577, J$e);
                        } finally {
                            if (J$.Fr(684585))
                                continue jalangiLabel5;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function performInitialHandshake(conn, options, _callback) {
                jalangiLabel9:
                    while (true) {
                        try {
                            J$.Fe(679977, arguments.callee, this, arguments);
                            arguments = J$.N(679985, 'arguments', arguments, true, false, false);
                            conn = J$.N(679993, 'conn', conn, true, false, false);
                            options = J$.N(680001, 'options', options, true, false, false);
                            _callback = J$.N(680009, '_callback', _callback, true, false, false);
                            J$.N(680017, 'callback', callback, false, false, false);
                            J$.N(680025, 'compressors', compressors, false, false, false);
                            J$.N(680033, 'handshakeDoc', handshakeDoc, false, false, false);
                            J$.N(680041, 'start', start, false, false, false);
                            var callback = J$.W(678945, 'callback', J$.T(678937, function callback(err, ret) {
                                jalangiLabel6:
                                    while (true) {
                                        try {
                                            J$.Fe(678905, arguments.callee, this, arguments);
                                            arguments = J$.N(678913, 'arguments', arguments, true, false, false);
                                            err = J$.N(678921, 'err', err, true, false, false);
                                            ret = J$.N(678929, 'ret', ret, true, false, false);
                                            if (J$.C(38736, J$.C(38728, J$.R(678841, 'err', err, false, false)) ? J$.R(678849, 'conn', conn, false, false) : J$._())) {
                                                J$.M(678865, J$.R(678857, 'conn', conn, false, false), 'destroy', false)();
                                            }
                                            J$.F(678897, J$.R(678873, '_callback', _callback, false, false), false)(J$.R(678881, 'err', err, false, false), J$.R(678889, 'ret', ret, false, false));
                                        } catch (J$e) {
                                            J$.Ex(684593, J$e);
                                        } finally {
                                            if (J$.Fr(684601))
                                                continue jalangiLabel6;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false), callback, false, false);
                            var compressors = J$.W(678961, 'compressors', J$.T(678953, [], 10, false), compressors, false, false);
                            if (J$.C(38752, J$.C(38744, J$.G(678977, J$.R(678969, 'options', options, false, false), 'compression')) ? J$.G(679001, J$.G(678993, J$.R(678985, 'options', options, false, false), 'compression'), 'compressors') : J$._())) {
                                compressors = J$.W(679033, 'compressors', J$.G(679025, J$.G(679017, J$.R(679009, 'options', options, false, false), 'compression'), 'compressors'), compressors, false, false);
                            }
                            var handshakeDoc = J$.W(679129, 'handshakeDoc', J$.M(679121, J$.I(typeof Object === 'undefined' ? Object = J$.R(679041, 'Object', undefined, true, true) : Object = J$.R(679041, 'Object', Object, true, true)), 'assign', false)(J$.T(679089, {
                                ismaster: J$.T(679049, true, 23, false),
                                client: J$.F(679073, J$.R(679057, 'createClientInfo', createClientInfo, false, true), false)(J$.R(679065, 'options', options, false, false)),
                                compression: J$.R(679081, 'compressors', compressors, false, false)
                            }, 11, false), J$.F(679113, J$.R(679097, 'getSaslSupportedMechs', getSaslSupportedMechs, false, true), false)(J$.R(679105, 'options', options, false, false))), handshakeDoc, false, false);
                            var start = J$.W(679161, 'start', J$.M(679153, J$.F(679145, J$.I(typeof Date === 'undefined' ? Date = J$.R(679137, 'Date', undefined, true, true) : Date = J$.R(679137, 'Date', Date, true, true)), true)(), 'getTime', false)(), start, false, false);
                            J$.F(679969, J$.R(679169, 'runCommand', runCommand, false, true), false)(J$.R(679177, 'conn', conn, false, false), J$.T(679185, 'admin.$cmd', 21, false), J$.R(679193, 'handshakeDoc', handshakeDoc, false, false), J$.R(679201, 'options', options, false, false), J$.T(679961, function (err, ismaster) {
                                jalangiLabel8:
                                    while (true) {
                                        try {
                                            J$.Fe(679905, arguments.callee, this, arguments);
                                            arguments = J$.N(679913, 'arguments', arguments, true, false, false);
                                            err = J$.N(679921, 'err', err, true, false, false);
                                            ismaster = J$.N(679929, 'ismaster', ismaster, true, false, false);
                                            J$.N(679937, 'supportedServerErr', supportedServerErr, false, false, false);
                                            J$.N(679945, 'agreedCompressors', agreedCompressors, false, false, false);
                                            J$.N(679953, 'credentials', credentials, false, false, false);
                                            if (J$.C(38760, J$.R(679209, 'err', err, false, false))) {
                                                J$.F(679241, J$.R(679217, 'callback', callback, false, false), false)(J$.R(679225, 'err', err, false, false), J$.T(679233, null, 25, false));
                                                return J$.Rt(679249, undefined);
                                            }
                                            if (J$.C(38768, J$.B(84210, '===', J$.G(679265, J$.R(679257, 'ismaster', ismaster, false, false), 'ok'), J$.T(679273, 0, 22, false)))) {
                                                J$.F(679321, J$.R(679281, 'callback', callback, false, false), false)(J$.F(679305, J$.R(679289, 'MongoError', MongoError, false, true), true)(J$.R(679297, 'ismaster', ismaster, false, false)), J$.T(679313, null, 25, false));
                                                return J$.Rt(679329, undefined);
                                            }
                                            var supportedServerErr = J$.W(679369, 'supportedServerErr', J$.F(679361, J$.R(679337, 'checkSupportedServer', checkSupportedServer, false, true), false)(J$.R(679345, 'ismaster', ismaster, false, false), J$.R(679353, 'options', options, false, false)), supportedServerErr, false, false);
                                            if (J$.C(38776, J$.R(679377, 'supportedServerErr', supportedServerErr, false, false))) {
                                                J$.F(679409, J$.R(679385, 'callback', callback, false, false), false)(J$.R(679393, 'supportedServerErr', supportedServerErr, false, false), J$.T(679401, null, 25, false));
                                                return J$.Rt(679417, undefined);
                                            }
                                            if (J$.C(38808, J$.G(679433, J$.R(679425, 'ismaster', ismaster, false, false), 'compression'))) {
                                                var agreedCompressors = J$.W(679537, 'agreedCompressors', J$.M(679529, J$.R(679441, 'compressors', compressors, false, false), 'filter', false)(J$.T(679521, function (compressor) {
                                                    jalangiLabel7:
                                                        while (true) {
                                                            try {
                                                                J$.Fe(679497, arguments.callee, this, arguments);
                                                                arguments = J$.N(679505, 'arguments', arguments, true, false, false);
                                                                compressor = J$.N(679513, 'compressor', compressor, true, false, false);
                                                                return J$.Rt(679489, J$.B(84226, '!==', J$.M(679473, J$.G(679457, J$.R(679449, 'ismaster', ismaster, false, false), 'compression'), 'indexOf', false)(J$.R(679465, 'compressor', compressor, false, false)), J$.U(84218, '-', J$.T(679481, 1, 22, false))));
                                                            } catch (J$e) {
                                                                J$.Ex(684609, J$e);
                                                            } finally {
                                                                if (J$.Fr(684617))
                                                                    continue jalangiLabel7;
                                                                else
                                                                    return J$.Ra();
                                                            }
                                                        }
                                                }, 12, false)), agreedCompressors, false, false);
                                                if (J$.C(38784, J$.G(679553, J$.R(679545, 'agreedCompressors', agreedCompressors, false, false), 'length'))) {
                                                    J$.P(679593, J$.R(679561, 'conn', conn, false, false), 'agreedCompressor', J$.G(679585, J$.R(679569, 'agreedCompressors', agreedCompressors, false, false), J$.T(679577, 0, 22, false)));
                                                }
                                                if (J$.C(38800, J$.C(38792, J$.G(679609, J$.R(679601, 'options', options, false, false), 'compression')) ? J$.G(679633, J$.G(679625, J$.R(679617, 'options', options, false, false), 'compression'), 'zlibCompressionLevel') : J$._())) {
                                                    J$.P(679673, J$.R(679641, 'conn', conn, false, false), 'zlibCompressionLevel', J$.G(679665, J$.G(679657, J$.R(679649, 'options', options, false, false), 'compression'), 'zlibCompressionLevel'));
                                                }
                                            }
                                            J$.P(679697, J$.R(679681, 'conn', conn, false, false), 'ismaster', J$.R(679689, 'ismaster', ismaster, false, false));
                                            J$.P(679745, J$.R(679705, 'conn', conn, false, false), 'lastIsMasterMS', J$.B(84234, '-', J$.M(679729, J$.F(679721, J$.I(typeof Date === 'undefined' ? Date = J$.R(679713, 'Date', undefined, true, true) : Date = J$.R(679713, 'Date', Date, true, true)), true)(), 'getTime', false)(), J$.R(679737, 'start', start, false, false)));
                                            var credentials = J$.W(679769, 'credentials', J$.G(679761, J$.R(679753, 'options', options, false, false), 'credentials'), credentials, false, false);
                                            if (J$.C(38824, J$.C(38816, J$.U(84242, '!', J$.G(679785, J$.R(679777, 'ismaster', ismaster, false, false), 'arbiterOnly'))) ? J$.R(679793, 'credentials', credentials, false, false) : J$._())) {
                                                J$.M(679817, J$.R(679801, 'credentials', credentials, false, false), 'resolveAuthMechanism', false)(J$.R(679809, 'ismaster', ismaster, false, false));
                                                J$.F(679857, J$.R(679825, 'authenticate', authenticate, false, true), false)(J$.R(679833, 'conn', conn, false, false), J$.R(679841, 'credentials', credentials, false, false), J$.R(679849, 'callback', callback, false, false));
                                                return J$.Rt(679865, undefined);
                                            }
                                            J$.F(679897, J$.R(679873, 'callback', callback, false, false), false)(J$.T(679881, null, 25, false), J$.R(679889, 'conn', conn, false, false));
                                        } catch (J$e) {
                                            J$.Ex(684625, J$e);
                                        } finally {
                                            if (J$.Fr(684633))
                                                continue jalangiLabel8;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                        } catch (J$e) {
                            J$.Ex(684641, J$e);
                        } finally {
                            if (J$.Fr(684649))
                                continue jalangiLabel9;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function parseConnectOptions(family, options) {
                jalangiLabel10:
                    while (true) {
                        try {
                            J$.Fe(680409, arguments.callee, this, arguments);
                            arguments = J$.N(680417, 'arguments', arguments, true, false, false);
                            family = J$.N(680425, 'family', family, true, false, false);
                            options = J$.N(680433, 'options', options, true, false, false);
                            J$.N(680441, 'host', host, false, false, false);
                            J$.N(680449, 'result', result, false, false, false);
                            var host = J$.W(680241, 'host', J$.C(38832, J$.B(84258, '===', J$.U(84250, 'typeof', J$.G(680201, J$.R(680193, 'options', options, false, false), 'host')), J$.T(680209, 'string', 21, false))) ? J$.G(680225, J$.R(680217, 'options', options, false, false), 'host') : J$.T(680233, 'localhost', 21, false), host, false, false);
                            if (J$.C(38840, J$.B(84274, '!==', J$.M(680265, J$.R(680249, 'host', host, false, false), 'indexOf', false)(J$.T(680257, '/', 21, false)), J$.U(84266, '-', J$.T(680273, 1, 22, false))))) {
                                return J$.Rt(680297, J$.T(680289, { path: J$.R(680281, 'host', host, false, false) }, 11, false));
                            }
                            var result = J$.W(680385, 'result', J$.T(680377, {
                                family: J$.R(680305, 'family', family, false, false),
                                host: J$.R(680313, 'host', host, false, false),
                                port: J$.C(38848, J$.B(84290, '===', J$.U(84282, 'typeof', J$.G(680329, J$.R(680321, 'options', options, false, false), 'port')), J$.T(680337, 'number', 21, false))) ? J$.G(680353, J$.R(680345, 'options', options, false, false), 'port') : J$.T(680361, 27017, 22, false),
                                rejectUnauthorized: J$.T(680369, false, 23, false)
                            }, 11, false), result, false, false);
                            return J$.Rt(680401, J$.R(680393, 'result', result, false, false));
                        } catch (J$e) {
                            J$.Ex(684657, J$e);
                        } finally {
                            if (J$.Fr(684665))
                                continue jalangiLabel10;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function parseSslOptions(family, options) {
                jalangiLabel12:
                    while (true) {
                        try {
                            J$.Fe(680841, arguments.callee, this, arguments);
                            arguments = J$.N(680849, 'arguments', arguments, true, false, false);
                            family = J$.N(680857, 'family', family, true, false, false);
                            options = J$.N(680865, 'options', options, true, false, false);
                            J$.N(680873, 'result', result, false, false, false);
                            J$.N(680881, 'name', name, false, false, false);
                            var result = J$.W(680489, 'result', J$.F(680481, J$.R(680457, 'parseConnectOptions', parseConnectOptions, false, true), false)(J$.R(680465, 'family', family, false, false), J$.R(680473, 'options', options, false, false)), result, false, false);
                            for (var name in J$.H(680617, J$.R(680497, 'options', options, false, false))) {
                                J$.N(680625, 'name', name, false, true, false);
                                {
                                    {
                                        if (J$.C(38864, J$.C(38856, J$.B(84298, '!=', J$.G(680521, J$.R(680505, 'options', options, false, false), J$.R(680513, 'name', name, false, false)), J$.T(680529, null, 25, false))) ? J$.B(84314, '!==', J$.M(680553, J$.R(680537, 'LEGAL_SSL_SOCKET_OPTIONS', LEGAL_SSL_SOCKET_OPTIONS, false, true), 'indexOf', false)(J$.R(680545, 'name', name, false, false)), J$.U(84306, '-', J$.T(680561, 1, 22, false))) : J$._())) {
                                            J$.P(680609, J$.R(680569, 'result', result, false, false), J$.R(680577, 'name', name, false, false), J$.G(680601, J$.R(680585, 'options', options, false, false), J$.R(680593, 'name', name, false, false)));
                                        }
                                    }
                                }
                            }
                            if (J$.C(38880, J$.B(84322, '===', J$.G(680641, J$.R(680633, 'options', options, false, false), 'checkServerIdentity'), J$.T(680649, false, 23, false)))) {
                                J$.P(680705, J$.R(680657, 'result', result, false, false), 'checkServerIdentity', J$.T(680697, function () {
                                    jalangiLabel11:
                                        while (true) {
                                            try {
                                                J$.Fe(680681, arguments.callee, this, arguments);
                                                arguments = J$.N(680689, 'arguments', arguments, true, false, false);
                                                return J$.Rt(680673, J$.T(680665, undefined, 24, false));
                                            } catch (J$e) {
                                                J$.Ex(684673, J$e);
                                            } finally {
                                                if (J$.Fr(684681))
                                                    continue jalangiLabel11;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false));
                            } else if (J$.C(38872, J$.B(84338, '===', J$.U(84330, 'typeof', J$.G(680721, J$.R(680713, 'options', options, false, false), 'checkServerIdentity')), J$.T(680729, 'function', 21, false)))) {
                                J$.P(680761, J$.R(680737, 'result', result, false, false), 'checkServerIdentity', J$.G(680753, J$.R(680745, 'options', options, false, false), 'checkServerIdentity'));
                            }
                            if (J$.C(38888, J$.B(84346, '==', J$.G(680777, J$.R(680769, 'result', result, false, false), 'servername'), J$.T(680785, null, 25, false)))) {
                                J$.P(680817, J$.R(680793, 'result', result, false, false), 'servername', J$.G(680809, J$.R(680801, 'result', result, false, false), 'host'));
                            }
                            return J$.Rt(680833, J$.R(680825, 'result', result, false, false));
                        } catch (J$e) {
                            J$.Ex(684689, J$e);
                        } finally {
                            if (J$.Fr(684697))
                                continue jalangiLabel12;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function makeConnection(family, options, _callback) {
                jalangiLabel19:
                    while (true) {
                        try {
                            J$.Fe(682449, arguments.callee, this, arguments);
                            function errorHandler(eventName) {
                                jalangiLabel16:
                                    while (true) {
                                        try {
                                            J$.Fe(681985, arguments.callee, this, arguments);
                                            arguments = J$.N(681993, 'arguments', arguments, true, false, false);
                                            eventName = J$.N(682001, 'eventName', eventName, true, false, false);
                                            return J$.Rt(681977, J$.T(681969, function (err) {
                                                jalangiLabel15:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(681945, arguments.callee, this, arguments);
                                                            arguments = J$.N(681953, 'arguments', arguments, true, false, false);
                                                            err = J$.N(681961, 'err', err, true, false, false);
                                                            J$.M(681849, J$.R(681777, 'errorEvents', errorEvents, false, false), 'forEach', false)(J$.T(681841, function (event) {
                                                                jalangiLabel14:
                                                                    while (true) {
                                                                        try {
                                                                            J$.Fe(681817, arguments.callee, this, arguments);
                                                                            arguments = J$.N(681825, 'arguments', arguments, true, false, false);
                                                                            event = J$.N(681833, 'event', event, true, false, false);
                                                                            return J$.Rt(681809, J$.M(681801, J$.R(681785, 'socket', socket, false, false), 'removeAllListeners', false)(J$.R(681793, 'event', event, false, false)));
                                                                        } catch (J$e) {
                                                                            J$.Ex(684721, J$e);
                                                                        } finally {
                                                                            if (J$.Fr(684729))
                                                                                continue jalangiLabel14;
                                                                            else
                                                                                return J$.Ra();
                                                                        }
                                                                    }
                                                            }, 12, false));
                                                            J$.M(681881, J$.R(681857, 'socket', socket, false, false), 'removeListener', false)(J$.T(681865, 'connect', 21, false), J$.R(681873, 'connectHandler', connectHandler, false, false));
                                                            J$.F(681937, J$.R(681889, 'callback', callback, false, false), false)(J$.F(681921, J$.R(681897, 'connectionFailureError', connectionFailureError, false, true), false)(J$.R(681905, 'eventName', eventName, false, false), J$.R(681913, 'err', err, false, false)), J$.R(681929, 'eventName', eventName, false, false));
                                                        } catch (J$e) {
                                                            J$.Ex(684737, J$e);
                                                        } finally {
                                                            if (J$.Fr(684745))
                                                                continue jalangiLabel15;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false));
                                        } catch (J$e) {
                                            J$.Ex(684753, J$e);
                                        } finally {
                                            if (J$.Fr(684761))
                                                continue jalangiLabel16;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }
                            function connectHandler() {
                                jalangiLabel18:
                                    while (true) {
                                        try {
                                            J$.Fe(682209, arguments.callee, this, arguments);
                                            arguments = J$.N(682217, 'arguments', arguments, true, false, false);
                                            J$.M(682081, J$.R(682009, 'errorEvents', errorEvents, false, false), 'forEach', false)(J$.T(682073, function (event) {
                                                jalangiLabel17:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(682049, arguments.callee, this, arguments);
                                                            arguments = J$.N(682057, 'arguments', arguments, true, false, false);
                                                            event = J$.N(682065, 'event', event, true, false, false);
                                                            return J$.Rt(682041, J$.M(682033, J$.R(682017, 'socket', socket, false, false), 'removeAllListeners', false)(J$.R(682025, 'event', event, false, false)));
                                                        } catch (J$e) {
                                                            J$.Ex(684769, J$e);
                                                        } finally {
                                                            if (J$.Fr(684777))
                                                                continue jalangiLabel17;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false));
                                            if (J$.C(39000, J$.C(38992, J$.G(682097, J$.R(682089, 'socket', socket, false, false), 'authorizationError')) ? J$.R(682105, 'rejectUnauthorized', rejectUnauthorized, false, false) : J$._())) {
                                                return J$.Rt(682145, J$.F(682137, J$.R(682113, 'callback', callback, false, false), false)(J$.G(682129, J$.R(682121, 'socket', socket, false, false), 'authorizationError')));
                                            }
                                            J$.M(682169, J$.R(682153, 'socket', socket, false, false), 'setTimeout', false)(J$.R(682161, 'socketTimeout', socketTimeout, false, false));
                                            J$.F(682201, J$.R(682177, 'callback', callback, false, false), false)(J$.T(682185, null, 25, false), J$.R(682193, 'socket', socket, false, false));
                                        } catch (J$e) {
                                            J$.Ex(684785, J$e);
                                        } finally {
                                            if (J$.Fr(684793))
                                                continue jalangiLabel18;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }
                            arguments = J$.N(682457, 'arguments', arguments, true, false, false);
                            family = J$.N(682465, 'family', family, true, false, false);
                            options = J$.N(682473, 'options', options, true, false, false);
                            _callback = J$.N(682481, '_callback', _callback, true, false, false);
                            J$.N(682489, 'useSsl', useSsl, false, false, false);
                            J$.N(682497, 'keepAlive', keepAlive, false, false, false);
                            J$.N(682505, 'keepAliveInitialDelay', keepAliveInitialDelay, false, false, false);
                            J$.N(682513, 'noDelay', noDelay, false, false, false);
                            J$.N(682521, 'connectionTimeout', connectionTimeout, false, false, false);
                            J$.N(682529, 'socketTimeout', socketTimeout, false, false, false);
                            J$.N(682537, 'rejectUnauthorized', rejectUnauthorized, false, false, false);
                            J$.N(682545, 'socket', socket, false, false, false);
                            J$.N(682553, 'callback', callback, false, false, false);
                            J$.N(682561, 'errorEvents', errorEvents, false, false, false);
                            errorHandler = J$.N(682577, 'errorHandler', J$.T(682569, errorHandler, 12, false), true, false, false);
                            connectHandler = J$.N(682593, 'connectHandler', J$.T(682585, connectHandler, 12, false), true, false, false);
                            var useSsl = J$.W(680937, 'useSsl', J$.C(38896, J$.B(84362, '===', J$.U(84354, 'typeof', J$.G(680897, J$.R(680889, 'options', options, false, false), 'ssl')), J$.T(680905, 'boolean', 21, false))) ? J$.G(680921, J$.R(680913, 'options', options, false, false), 'ssl') : J$.T(680929, false, 23, false), useSsl, false, false);
                            var keepAlive = J$.W(680993, 'keepAlive', J$.C(38904, J$.B(84378, '===', J$.U(84370, 'typeof', J$.G(680953, J$.R(680945, 'options', options, false, false), 'keepAlive')), J$.T(680961, 'boolean', 21, false))) ? J$.G(680977, J$.R(680969, 'options', options, false, false), 'keepAlive') : J$.T(680985, true, 23, false), keepAlive, false, false);
                            var keepAliveInitialDelay = J$.W(681049, 'keepAliveInitialDelay', J$.C(38912, J$.B(84394, '===', J$.U(84386, 'typeof', J$.G(681009, J$.R(681001, 'options', options, false, false), 'keepAliveInitialDelay')), J$.T(681017, 'number', 21, false))) ? J$.G(681033, J$.R(681025, 'options', options, false, false), 'keepAliveInitialDelay') : J$.T(681041, 300000, 22, false), keepAliveInitialDelay, false, false);
                            var noDelay = J$.W(681105, 'noDelay', J$.C(38920, J$.B(84410, '===', J$.U(84402, 'typeof', J$.G(681065, J$.R(681057, 'options', options, false, false), 'noDelay')), J$.T(681073, 'boolean', 21, false))) ? J$.G(681089, J$.R(681081, 'options', options, false, false), 'noDelay') : J$.T(681097, true, 23, false), noDelay, false, false);
                            var connectionTimeout = J$.W(681161, 'connectionTimeout', J$.C(38928, J$.B(84426, '===', J$.U(84418, 'typeof', J$.G(681121, J$.R(681113, 'options', options, false, false), 'connectionTimeout')), J$.T(681129, 'number', 21, false))) ? J$.G(681145, J$.R(681137, 'options', options, false, false), 'connectionTimeout') : J$.T(681153, 30000, 22, false), connectionTimeout, false, false);
                            var socketTimeout = J$.W(681217, 'socketTimeout', J$.C(38936, J$.B(84442, '===', J$.U(84434, 'typeof', J$.G(681177, J$.R(681169, 'options', options, false, false), 'socketTimeout')), J$.T(681185, 'number', 21, false))) ? J$.G(681201, J$.R(681193, 'options', options, false, false), 'socketTimeout') : J$.T(681209, 360000, 22, false), socketTimeout, false, false);
                            var rejectUnauthorized = J$.W(681273, 'rejectUnauthorized', J$.C(38944, J$.B(84458, '===', J$.U(84450, 'typeof', J$.G(681233, J$.R(681225, 'options', options, false, false), 'rejectUnauthorized')), J$.T(681241, 'boolean', 21, false))) ? J$.G(681257, J$.R(681249, 'options', options, false, false), 'rejectUnauthorized') : J$.T(681265, true, 23, false), rejectUnauthorized, false, false);
                            if (J$.C(38952, J$.B(84466, '>', J$.R(681281, 'keepAliveInitialDelay', keepAliveInitialDelay, false, false), J$.R(681289, 'socketTimeout', socketTimeout, false, false)))) {
                                keepAliveInitialDelay = J$.W(681329, 'keepAliveInitialDelay', J$.M(681321, J$.I(typeof Math === 'undefined' ? Math = J$.R(681297, 'Math', undefined, true, true) : Math = J$.R(681297, 'Math', Math, true, true)), 'round', false)(J$.B(84474, '/', J$.R(681305, 'socketTimeout', socketTimeout, false, false), J$.T(681313, 2, 22, false))), keepAliveInitialDelay, false, false);
                            }
                            var socket;
                            var callback = J$.W(681441, 'callback', J$.T(681433, function callback(err, ret) {
                                jalangiLabel13:
                                    while (true) {
                                        try {
                                            J$.Fe(681401, arguments.callee, this, arguments);
                                            arguments = J$.N(681409, 'arguments', arguments, true, false, false);
                                            err = J$.N(681417, 'err', err, true, false, false);
                                            ret = J$.N(681425, 'ret', ret, true, false, false);
                                            if (J$.C(38968, J$.C(38960, J$.R(681337, 'err', err, false, false)) ? J$.R(681345, 'socket', socket, false, false) : J$._())) {
                                                J$.M(681361, J$.R(681353, 'socket', socket, false, false), 'destroy', false)();
                                            }
                                            J$.F(681393, J$.R(681369, '_callback', _callback, false, false), false)(J$.R(681377, 'err', err, false, false), J$.R(681385, 'ret', ret, false, false));
                                        } catch (J$e) {
                                            J$.Ex(684705, J$e);
                                        } finally {
                                            if (J$.Fr(684713))
                                                continue jalangiLabel13;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false), callback, false, false);
                            try {
                                if (J$.C(38984, J$.R(681449, 'useSsl', useSsl, false, false))) {
                                    socket = J$.W(681505, 'socket', J$.M(681497, J$.R(681457, 'tls', tls, false, true), 'connect', false)(J$.F(681489, J$.R(681465, 'parseSslOptions', parseSslOptions, false, true), false)(J$.R(681473, 'family', family, false, false), J$.R(681481, 'options', options, false, false))), socket, false, false);
                                    if (J$.C(38976, J$.B(84490, '===', J$.U(84482, 'typeof', J$.G(681521, J$.R(681513, 'socket', socket, false, false), 'disableRenegotiation')), J$.T(681529, 'function', 21, false)))) {
                                        J$.M(681545, J$.R(681537, 'socket', socket, false, false), 'disableRenegotiation', false)();
                                    }
                                } else {
                                    socket = J$.W(681601, 'socket', J$.M(681593, J$.R(681553, 'net', net, false, true), 'createConnection', false)(J$.F(681585, J$.R(681561, 'parseConnectOptions', parseConnectOptions, false, true), false)(J$.R(681569, 'family', family, false, false), J$.R(681577, 'options', options, false, false))), socket, false, false);
                                }
                            } catch (err) {
                                J$.N(681641, 'err', err, false, false, true);
                                return J$.Rt(681633, J$.F(681625, J$.R(681609, 'callback', callback, false, false), false)(J$.R(681617, 'err', err, false, false)));
                            }
                            J$.M(681673, J$.R(681649, 'socket', socket, false, false), 'setKeepAlive', false)(J$.R(681657, 'keepAlive', keepAlive, false, false), J$.R(681665, 'keepAliveInitialDelay', keepAliveInitialDelay, false, false));
                            J$.M(681697, J$.R(681681, 'socket', socket, false, false), 'setTimeout', false)(J$.R(681689, 'connectionTimeout', connectionTimeout, false, false));
                            J$.M(681721, J$.R(681705, 'socket', socket, false, false), 'setNoDelay', false)(J$.R(681713, 'noDelay', noDelay, false, false));
                            var errorEvents = J$.W(681769, 'errorEvents', J$.T(681761, [
                                J$.T(681729, 'error', 21, false),
                                J$.T(681737, 'close', 21, false),
                                J$.T(681745, 'timeout', 21, false),
                                J$.T(681753, 'parseError', 21, false)
                            ], 10, false), errorEvents, false, false);
                            J$.M(682265, J$.R(682225, 'socket', socket, false, false), 'once', false)(J$.T(682233, 'error', 21, false), J$.F(682257, J$.R(682241, 'errorHandler', errorHandler, false, false), false)(J$.T(682249, 'error', 21, false)));
                            J$.M(682313, J$.R(682273, 'socket', socket, false, false), 'once', false)(J$.T(682281, 'close', 21, false), J$.F(682305, J$.R(682289, 'errorHandler', errorHandler, false, false), false)(J$.T(682297, 'close', 21, false)));
                            J$.M(682361, J$.R(682321, 'socket', socket, false, false), 'once', false)(J$.T(682329, 'timeout', 21, false), J$.F(682353, J$.R(682337, 'errorHandler', errorHandler, false, false), false)(J$.T(682345, 'timeout', 21, false)));
                            J$.M(682409, J$.R(682369, 'socket', socket, false, false), 'once', false)(J$.T(682377, 'parseError', 21, false), J$.F(682401, J$.R(682385, 'errorHandler', errorHandler, false, false), false)(J$.T(682393, 'parseError', 21, false)));
                            J$.M(682441, J$.R(682417, 'socket', socket, false, false), 'once', false)(J$.T(682425, 'connect', 21, false), J$.R(682433, 'connectHandler', connectHandler, false, false));
                        } catch (J$e) {
                            J$.Ex(684801, J$e);
                        } finally {
                            if (J$.Fr(684809))
                                continue jalangiLabel19;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function runCommand(conn, ns, command, options, callback) {
                jalangiLabel25:
                    while (true) {
                        try {
                            J$.Fe(683513, arguments.callee, this, arguments);
                            function errorHandler(err) {
                                jalangiLabel21:
                                    while (true) {
                                        try {
                                            J$.Fe(683025, arguments.callee, this, arguments);
                                            arguments = J$.N(683033, 'arguments', arguments, true, false, false);
                                            err = J$.N(683041, 'err', err, true, false, false);
                                            J$.M(682865, J$.R(682857, 'conn', conn, false, false), 'resetSocketTimeout', false)();
                                            J$.M(682953, J$.R(682873, 'CONNECTION_ERROR_EVENTS', CONNECTION_ERROR_EVENTS, false, true), 'forEach', false)(J$.T(682945, function (eventName) {
                                                jalangiLabel20:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(682921, arguments.callee, this, arguments);
                                                            arguments = J$.N(682929, 'arguments', arguments, true, false, false);
                                                            eventName = J$.N(682937, 'eventName', eventName, true, false, false);
                                                            return J$.Rt(682913, J$.M(682905, J$.R(682881, 'conn', conn, false, false), 'removeListener', false)(J$.R(682889, 'eventName', eventName, false, false), J$.R(682897, 'errorHandler', errorHandler, false, false)));
                                                        } catch (J$e) {
                                                            J$.Ex(684817, J$e);
                                                        } finally {
                                                            if (J$.Fr(684825))
                                                                continue jalangiLabel20;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false));
                                            J$.M(682985, J$.R(682961, 'conn', conn, false, false), 'removeListener', false)(J$.T(682969, 'message', 21, false), J$.R(682977, 'messageHandler', messageHandler, false, false));
                                            J$.F(683017, J$.R(682993, 'callback', callback, false, false), false)(J$.R(683001, 'err', err, false, false), J$.T(683009, null, 25, false));
                                        } catch (J$e) {
                                            J$.Ex(684833, J$e);
                                        } finally {
                                            if (J$.Fr(684841))
                                                continue jalangiLabel21;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }
                            function messageHandler(msg) {
                                jalangiLabel23:
                                    while (true) {
                                        try {
                                            J$.Fe(683313, arguments.callee, this, arguments);
                                            arguments = J$.N(683321, 'arguments', arguments, true, false, false);
                                            msg = J$.N(683329, 'msg', msg, true, false, false);
                                            if (J$.C(39024, J$.B(84530, '!==', J$.G(683057, J$.R(683049, 'msg', msg, false, false), 'responseTo'), J$.G(683073, J$.R(683065, 'query', query, false, false), 'requestId')))) {
                                                return J$.Rt(683081, undefined);
                                            }
                                            J$.M(683097, J$.R(683089, 'conn', conn, false, false), 'resetSocketTimeout', false)();
                                            J$.M(683185, J$.R(683105, 'CONNECTION_ERROR_EVENTS', CONNECTION_ERROR_EVENTS, false, true), 'forEach', false)(J$.T(683177, function (eventName) {
                                                jalangiLabel22:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(683153, arguments.callee, this, arguments);
                                                            arguments = J$.N(683161, 'arguments', arguments, true, false, false);
                                                            eventName = J$.N(683169, 'eventName', eventName, true, false, false);
                                                            return J$.Rt(683145, J$.M(683137, J$.R(683113, 'conn', conn, false, false), 'removeListener', false)(J$.R(683121, 'eventName', eventName, false, false), J$.R(683129, 'errorHandler', errorHandler, false, false)));
                                                        } catch (J$e) {
                                                            J$.Ex(684849, J$e);
                                                        } finally {
                                                            if (J$.Fr(684857))
                                                                continue jalangiLabel22;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false));
                                            J$.M(683217, J$.R(683193, 'conn', conn, false, false), 'removeListener', false)(J$.T(683201, 'message', 21, false), J$.R(683209, 'messageHandler', messageHandler, false, false));
                                            J$.M(683249, J$.R(683225, 'msg', msg, false, false), 'parse', false)(J$.T(683241, { promoteValues: J$.T(683233, true, 23, false) }, 11, false));
                                            J$.F(683305, J$.R(683257, 'callback', callback, false, false), false)(J$.T(683265, null, 25, false), J$.G(683297, J$.G(683281, J$.R(683273, 'msg', msg, false, false), 'documents'), J$.T(683289, 0, 22, false)));
                                        } catch (J$e) {
                                            J$.Ex(684865, J$e);
                                        } finally {
                                            if (J$.Fr(684873))
                                                continue jalangiLabel23;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }
                            arguments = J$.N(683521, 'arguments', arguments, true, false, false);
                            conn = J$.N(683529, 'conn', conn, true, false, false);
                            ns = J$.N(683537, 'ns', ns, true, false, false);
                            command = J$.N(683545, 'command', command, true, false, false);
                            options = J$.N(683553, 'options', options, true, false, false);
                            callback = J$.N(683561, 'callback', callback, true, false, false);
                            J$.N(683569, 'socketTimeout', socketTimeout, false, false, false);
                            J$.N(683577, 'bson', bson, false, false, false);
                            J$.N(683585, 'query', query, false, false, false);
                            errorHandler = J$.N(683601, 'errorHandler', J$.T(683593, errorHandler, 12, false), true, false, false);
                            messageHandler = J$.N(683617, 'messageHandler', J$.T(683609, messageHandler, 12, false), true, false, false);
                            if (J$.C(39008, J$.B(84506, '===', J$.U(84498, 'typeof', J$.R(682649, 'options', options, false, false)), J$.T(682657, 'function', 21, false))))
                                callback = J$.W(682673, 'callback', J$.R(682665, 'options', options, false, false), callback, false, false), options = J$.W(682689, 'options', J$.T(682681, {}, 11, false), options, false, false);
                            var socketTimeout = J$.W(682745, 'socketTimeout', J$.C(39016, J$.B(84522, '===', J$.U(84514, 'typeof', J$.G(682705, J$.R(682697, 'options', options, false, false), 'socketTimeout')), J$.T(682713, 'number', 21, false))) ? J$.G(682729, J$.R(682721, 'options', options, false, false), 'socketTimeout') : J$.T(682737, 360000, 22, false), socketTimeout, false, false);
                            var bson = J$.W(682777, 'bson', J$.G(682769, J$.G(682761, J$.R(682753, 'conn', conn, false, false), 'options'), 'bson'), bson, false, false);
                            var query = J$.W(682849, 'query', J$.F(682841, J$.R(682785, 'Query', Query, false, true), true)(J$.R(682793, 'bson', bson, false, false), J$.R(682801, 'ns', ns, false, false), J$.R(682809, 'command', command, false, false), J$.T(682833, {
                                numberToSkip: J$.T(682817, 0, 22, false),
                                numberToReturn: J$.T(682825, 1, 22, false)
                            }, 11, false)), query, false, false);
                            J$.M(683353, J$.R(683337, 'conn', conn, false, false), 'setSocketTimeout', false)(J$.R(683345, 'socketTimeout', socketTimeout, false, false));
                            J$.M(683441, J$.R(683361, 'CONNECTION_ERROR_EVENTS', CONNECTION_ERROR_EVENTS, false, true), 'forEach', false)(J$.T(683433, function (eventName) {
                                jalangiLabel24:
                                    while (true) {
                                        try {
                                            J$.Fe(683409, arguments.callee, this, arguments);
                                            arguments = J$.N(683417, 'arguments', arguments, true, false, false);
                                            eventName = J$.N(683425, 'eventName', eventName, true, false, false);
                                            return J$.Rt(683401, J$.M(683393, J$.R(683369, 'conn', conn, false, false), 'once', false)(J$.R(683377, 'eventName', eventName, false, false), J$.R(683385, 'errorHandler', errorHandler, false, false)));
                                        } catch (J$e) {
                                            J$.Ex(684881, J$e);
                                        } finally {
                                            if (J$.Fr(684889))
                                                continue jalangiLabel24;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            J$.M(683473, J$.R(683449, 'conn', conn, false, false), 'on', false)(J$.T(683457, 'message', 21, false), J$.R(683465, 'messageHandler', messageHandler, false, false));
                            J$.M(683505, J$.R(683481, 'conn', conn, false, false), 'write', false)(J$.M(683497, J$.R(683489, 'query', query, false, false), 'toBin', false)());
                        } catch (J$e) {
                            J$.Ex(684897, J$e);
                        } finally {
                            if (J$.Fr(684905))
                                continue jalangiLabel25;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function authenticate(conn, credentials, callback) {
                jalangiLabel27:
                    while (true) {
                        try {
                            J$.Fe(683929, arguments.callee, this, arguments);
                            arguments = J$.N(683937, 'arguments', arguments, true, false, false);
                            conn = J$.N(683945, 'conn', conn, true, false, false);
                            credentials = J$.N(683953, 'credentials', credentials, true, false, false);
                            callback = J$.N(683961, 'callback', callback, true, false, false);
                            J$.N(683969, 'mechanism', mechanism, false, false, false);
                            J$.N(683977, 'provider', provider, false, false, false);
                            var mechanism = J$.W(683641, 'mechanism', J$.G(683633, J$.R(683625, 'credentials', credentials, false, false), 'mechanism'), mechanism, false, false);
                            if (J$.C(39032, J$.U(84538, '!', J$.G(683665, J$.R(683649, 'AUTH_PROVIDERS', AUTH_PROVIDERS, false, true), J$.R(683657, 'mechanism', mechanism, false, false))))) {
                                J$.F(683729, J$.R(683673, 'callback', callback, false, false), false)(J$.F(683721, J$.R(683681, 'MongoError', MongoError, false, true), true)(J$.M(683713, J$.T(683689, 'authMechanism \'', 21, false), 'concat', false)(J$.R(683697, 'mechanism', mechanism, false, false), J$.T(683705, '\' not supported', 21, false))));
                                return J$.Rt(683737, undefined);
                            }
                            var provider = J$.W(683769, 'provider', J$.G(683761, J$.R(683745, 'AUTH_PROVIDERS', AUTH_PROVIDERS, false, true), J$.R(683753, 'mechanism', mechanism, false, false)), provider, false, false);
                            J$.M(683921, J$.R(683777, 'provider', provider, false, false), 'auth', false)(J$.R(683785, 'runCommand', runCommand, false, true), J$.T(683801, [J$.R(683793, 'conn', conn, false, false)], 10, false), J$.R(683809, 'credentials', credentials, false, false), J$.T(683913, function (err) {
                                jalangiLabel26:
                                    while (true) {
                                        try {
                                            J$.Fe(683889, arguments.callee, this, arguments);
                                            arguments = J$.N(683897, 'arguments', arguments, true, false, false);
                                            err = J$.N(683905, 'err', err, true, false, false);
                                            if (J$.C(39040, J$.R(683817, 'err', err, false, false)))
                                                return J$.Rt(683849, J$.F(683841, J$.R(683825, 'callback', callback, false, false), false)(J$.R(683833, 'err', err, false, false)));
                                            J$.F(683881, J$.R(683857, 'callback', callback, false, false), false)(J$.T(683865, null, 25, false), J$.R(683873, 'conn', conn, false, false));
                                        } catch (J$e) {
                                            J$.Ex(684913, J$e);
                                        } finally {
                                            if (J$.Fr(684921))
                                                continue jalangiLabel26;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                        } catch (J$e) {
                            J$.Ex(684929, J$e);
                        } finally {
                            if (J$.Fr(684937))
                                continue jalangiLabel27;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function connectionFailureError(type, err) {
                jalangiLabel28:
                    while (true) {
                        try {
                            J$.Fe(684145, arguments.callee, this, arguments);
                            arguments = J$.N(684153, 'arguments', arguments, true, false, false);
                            type = J$.N(684161, 'type', type, true, false, false);
                            err = J$.N(684169, 'err', err, true, false, false);
                            switch (J$.C1(39048, J$.R(683985, 'type', type, false, false))) {
                            case J$.C2(39056, J$.T(684025, 'error', 21, false)):
                                return J$.Rt(684017, J$.F(684009, J$.R(683993, 'MongoNetworkError', MongoNetworkError, false, true), true)(J$.R(684001, 'err', err, false, false)));
                            case J$.C2(39064, J$.T(684065, 'timeout', 21, false)):
                                return J$.Rt(684057, J$.F(684049, J$.R(684033, 'MongoNetworkError', MongoNetworkError, false, true), true)(J$.T(684041, 'connection timed out', 21, false)));
                            case J$.C2(39072, J$.T(684105, 'close', 21, false)):
                                return J$.Rt(684097, J$.F(684089, J$.R(684073, 'MongoNetworkError', MongoNetworkError, false, true), true)(J$.T(684081, 'connection closed', 21, false)));
                            default:
                                return J$.Rt(684137, J$.F(684129, J$.R(684113, 'MongoNetworkError', MongoNetworkError, false, true), true)(J$.T(684121, 'unknown network error', 21, false)));
                            }
                        } catch (J$e) {
                            J$.Ex(684945, J$e);
                        } finally {
                            if (J$.Fr(684953))
                                continue jalangiLabel28;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(684209, 'net', net, false, false, false);
            J$.N(684217, 'tls', tls, false, false, false);
            J$.N(684225, 'Connection', Connection, false, false, false);
            J$.N(684233, 'Query', Query, false, false, false);
            J$.N(684241, 'createClientInfo', createClientInfo, false, false, false);
            J$.N(684249, 'MongoError', MongoError, false, false, false);
            J$.N(684257, 'MongoNetworkError', MongoNetworkError, false, false, false);
            J$.N(684265, 'defaultAuthProviders', defaultAuthProviders, false, false, false);
            J$.N(684273, 'WIRE_CONSTANTS', WIRE_CONSTANTS, false, false, false);
            J$.N(684281, 'MAX_SUPPORTED_WIRE_VERSION', MAX_SUPPORTED_WIRE_VERSION, false, false, false);
            J$.N(684289, 'MAX_SUPPORTED_SERVER_VERSION', MAX_SUPPORTED_SERVER_VERSION, false, false, false);
            J$.N(684297, 'MIN_SUPPORTED_WIRE_VERSION', MIN_SUPPORTED_WIRE_VERSION, false, false, false);
            J$.N(684305, 'MIN_SUPPORTED_SERVER_VERSION', MIN_SUPPORTED_SERVER_VERSION, false, false, false);
            J$.N(684313, 'AUTH_PROVIDERS', AUTH_PROVIDERS, false, false, false);
            connect = J$.N(684329, 'connect', J$.T(684321, connect, 12, false), true, false, false);
            getSaslSupportedMechs = J$.N(684345, 'getSaslSupportedMechs', J$.T(684337, getSaslSupportedMechs, 12, false), true, false, false);
            checkSupportedServer = J$.N(684361, 'checkSupportedServer', J$.T(684353, checkSupportedServer, 12, false), true, false, false);
            performInitialHandshake = J$.N(684377, 'performInitialHandshake', J$.T(684369, performInitialHandshake, 12, false), true, false, false);
            J$.N(684385, 'LEGAL_SSL_SOCKET_OPTIONS', LEGAL_SSL_SOCKET_OPTIONS, false, false, false);
            parseConnectOptions = J$.N(684401, 'parseConnectOptions', J$.T(684393, parseConnectOptions, 12, false), true, false, false);
            parseSslOptions = J$.N(684417, 'parseSslOptions', J$.T(684409, parseSslOptions, 12, false), true, false, false);
            makeConnection = J$.N(684433, 'makeConnection', J$.T(684425, makeConnection, 12, false), true, false, false);
            J$.N(684441, 'CONNECTION_ERROR_EVENTS', CONNECTION_ERROR_EVENTS, false, false, false);
            runCommand = J$.N(684457, 'runCommand', J$.T(684449, runCommand, 12, false), true, false, false);
            authenticate = J$.N(684473, 'authenticate', J$.T(684465, authenticate, 12, false), true, false, false);
            connectionFailureError = J$.N(684489, 'connectionFailureError', J$.T(684481, connectionFailureError, 12, false), true, false, false);
            J$.T(676761, 'use strict', 21, false);
            var net = J$.W(676793, 'net', J$.F(676785, J$.I(typeof require === 'undefined' ? require = J$.R(676769, 'require', undefined, true, true) : require = J$.R(676769, 'require', require, true, true)), false)(J$.T(676777, 'net', 21, false)), net, false, true);
            var tls = J$.W(676825, 'tls', J$.F(676817, J$.I(typeof require === 'undefined' ? require = J$.R(676801, 'require', undefined, true, true) : require = J$.R(676801, 'require', require, true, true)), false)(J$.T(676809, 'tls', 21, false)), tls, false, true);
            var Connection = J$.W(676857, 'Connection', J$.F(676849, J$.I(typeof require === 'undefined' ? require = J$.R(676833, 'require', undefined, true, true) : require = J$.R(676833, 'require', require, true, true)), false)(J$.T(676841, './connection', 21, false)), Connection, false, true);
            var Query = J$.W(676897, 'Query', J$.G(676889, J$.F(676881, J$.I(typeof require === 'undefined' ? require = J$.R(676865, 'require', undefined, true, true) : require = J$.R(676865, 'require', require, true, true)), false)(J$.T(676873, './commands', 21, false)), 'Query'), Query, false, true);
            var createClientInfo = J$.W(676937, 'createClientInfo', J$.G(676929, J$.F(676921, J$.I(typeof require === 'undefined' ? require = J$.R(676905, 'require', undefined, true, true) : require = J$.R(676905, 'require', require, true, true)), false)(J$.T(676913, '../topologies/shared', 21, false)), 'createClientInfo'), createClientInfo, false, true);
            var MongoError = J$.W(676977, 'MongoError', J$.G(676969, J$.F(676961, J$.I(typeof require === 'undefined' ? require = J$.R(676945, 'require', undefined, true, true) : require = J$.R(676945, 'require', require, true, true)), false)(J$.T(676953, '../error', 21, false)), 'MongoError'), MongoError, false, true);
            var MongoNetworkError = J$.W(677017, 'MongoNetworkError', J$.G(677009, J$.F(677001, J$.I(typeof require === 'undefined' ? require = J$.R(676985, 'require', undefined, true, true) : require = J$.R(676985, 'require', require, true, true)), false)(J$.T(676993, '../error', 21, false)), 'MongoNetworkError'), MongoNetworkError, false, true);
            var defaultAuthProviders = J$.W(677057, 'defaultAuthProviders', J$.G(677049, J$.F(677041, J$.I(typeof require === 'undefined' ? require = J$.R(677025, 'require', undefined, true, true) : require = J$.R(677025, 'require', require, true, true)), false)(J$.T(677033, '../auth/defaultAuthProviders', 21, false)), 'defaultAuthProviders'), defaultAuthProviders, false, true);
            var WIRE_CONSTANTS = J$.W(677089, 'WIRE_CONSTANTS', J$.F(677081, J$.I(typeof require === 'undefined' ? require = J$.R(677065, 'require', undefined, true, true) : require = J$.R(677065, 'require', require, true, true)), false)(J$.T(677073, '../wireprotocol/constants', 21, false)), WIRE_CONSTANTS, false, true);
            var MAX_SUPPORTED_WIRE_VERSION = J$.W(677113, 'MAX_SUPPORTED_WIRE_VERSION', J$.G(677105, J$.R(677097, 'WIRE_CONSTANTS', WIRE_CONSTANTS, false, true), 'MAX_SUPPORTED_WIRE_VERSION'), MAX_SUPPORTED_WIRE_VERSION, false, true);
            var MAX_SUPPORTED_SERVER_VERSION = J$.W(677137, 'MAX_SUPPORTED_SERVER_VERSION', J$.G(677129, J$.R(677121, 'WIRE_CONSTANTS', WIRE_CONSTANTS, false, true), 'MAX_SUPPORTED_SERVER_VERSION'), MAX_SUPPORTED_SERVER_VERSION, false, true);
            var MIN_SUPPORTED_WIRE_VERSION = J$.W(677161, 'MIN_SUPPORTED_WIRE_VERSION', J$.G(677153, J$.R(677145, 'WIRE_CONSTANTS', WIRE_CONSTANTS, false, true), 'MIN_SUPPORTED_WIRE_VERSION'), MIN_SUPPORTED_WIRE_VERSION, false, true);
            var MIN_SUPPORTED_SERVER_VERSION = J$.W(677185, 'MIN_SUPPORTED_SERVER_VERSION', J$.G(677177, J$.R(677169, 'WIRE_CONSTANTS', WIRE_CONSTANTS, false, true), 'MIN_SUPPORTED_SERVER_VERSION'), MIN_SUPPORTED_SERVER_VERSION, false, true);
            var AUTH_PROVIDERS;
            var LEGAL_SSL_SOCKET_OPTIONS = J$.W(680185, 'LEGAL_SSL_SOCKET_OPTIONS', J$.T(680177, [
                J$.T(680049, 'pfx', 21, false),
                J$.T(680057, 'key', 21, false),
                J$.T(680065, 'passphrase', 21, false),
                J$.T(680073, 'cert', 21, false),
                J$.T(680081, 'ca', 21, false),
                J$.T(680089, 'ciphers', 21, false),
                J$.T(680097, 'NPNProtocols', 21, false),
                J$.T(680105, 'ALPNProtocols', 21, false),
                J$.T(680113, 'servername', 21, false),
                J$.T(680121, 'ecdhCurve', 21, false),
                J$.T(680129, 'secureProtocol', 21, false),
                J$.T(680137, 'secureContext', 21, false),
                J$.T(680145, 'session', 21, false),
                J$.T(680153, 'minDHSize', 21, false),
                J$.T(680161, 'crl', 21, false),
                J$.T(680169, 'rejectUnauthorized', 21, false)
            ], 10, false), LEGAL_SSL_SOCKET_OPTIONS, false, true);
            var CONNECTION_ERROR_EVENTS = J$.W(682641, 'CONNECTION_ERROR_EVENTS', J$.T(682633, [
                J$.T(682601, 'error', 21, false),
                J$.T(682609, 'close', 21, false),
                J$.T(682617, 'timeout', 21, false),
                J$.T(682625, 'parseError', 21, false)
            ], 10, false), CONNECTION_ERROR_EVENTS, false, true);
            J$.P(684193, J$.I(typeof module === 'undefined' ? module = J$.R(684177, 'module', undefined, true, true) : module = J$.R(684177, 'module', module, true, true)), 'exports', J$.R(684185, 'connect', connect, false, true));
        } catch (J$e) {
            J$.Ex(684961, J$e);
        } finally {
            if (J$.Sr(684969))
                continue jalangiLabel29;
            else
                break jalangiLabel29;
        }
    }
// JALANGI DO NOT INSTRUMENT

