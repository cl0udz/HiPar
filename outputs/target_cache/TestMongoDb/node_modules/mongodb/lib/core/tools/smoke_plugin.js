J$.noInstrEval = false;
jalangiLabel6:
    while (true) {
        try {
            J$.Se(833801, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestMongoDb/node_modules/mongodb/lib/core/tools/smoke_plugin.js');
            J$.N(833809, 'fs', fs, false, false, false);
            J$.T(832833, 'use strict', 21, false);
            var fs = J$.W(832865, 'fs', J$.F(832857, J$.I(typeof require === 'undefined' ? require = J$.R(832841, 'require', undefined, true, true) : require = J$.R(832841, 'require', require, true, true)), false)(J$.T(832849, 'fs', 21, false)), fs, false, true);
            J$.P(833793, J$.I(typeof exports === 'undefined' ? exports = J$.R(832873, 'exports', undefined, true, true) : exports = J$.R(832873, 'exports', exports, true, true)), 'attachToRunner', J$.T(833785, function (runner, outputFile) {
                jalangiLabel5:
                    while (true) {
                        try {
                            J$.Fe(833729, arguments.callee, this, arguments);
                            arguments = J$.N(833737, 'arguments', arguments, true, false, false);
                            runner = J$.N(833745, 'runner', runner, true, false, false);
                            outputFile = J$.N(833753, 'outputFile', outputFile, true, false, false);
                            J$.N(833761, 'smokeOutput', smokeOutput, false, false, false);
                            J$.N(833769, 'runningTests', runningTests, false, false, false);
                            J$.N(833777, 'integraPlugin', integraPlugin, false, false, false);
                            var smokeOutput = J$.W(832897, 'smokeOutput', J$.T(832889, { results: J$.T(832881, [], 10, false) }, 11, false), smokeOutput, false, false);
                            var runningTests = J$.W(832913, 'runningTests', J$.T(832905, {}, 11, false), runningTests, false, false);
                            var integraPlugin = J$.W(833377, 'integraPlugin', J$.T(833369, {
                                beforeTest: J$.T(833041, function beforeTest(test, callback) {
                                    jalangiLabel0:
                                        while (true) {
                                            try {
                                                J$.Fe(833009, arguments.callee, this, arguments);
                                                arguments = J$.N(833017, 'arguments', arguments, true, false, false);
                                                test = J$.N(833025, 'test', test, true, false, false);
                                                callback = J$.N(833033, 'callback', callback, true, false, false);
                                                J$.P(832945, J$.R(832921, 'test', test, false, false), 'startTime', J$.M(832937, J$.I(typeof Date === 'undefined' ? Date = J$.R(832929, 'Date', undefined, true, true) : Date = J$.R(832929, 'Date', Date, true, true)), 'now', false)());
                                                J$.P(832985, J$.R(832953, 'runningTests', runningTests, false, false), J$.G(832969, J$.R(832961, 'test', test, false, false), 'name'), J$.R(832977, 'test', test, false, false));
                                                J$.F(833001, J$.R(832993, 'callback', callback, false, false), false)();
                                            } catch (J$e) {
                                                J$.Ex(833817, J$e);
                                            } finally {
                                                if (J$.Fr(833825))
                                                    continue jalangiLabel0;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false),
                                afterTest: J$.T(833233, function afterTest(test, callback) {
                                    jalangiLabel1:
                                        while (true) {
                                            try {
                                                J$.Fe(833201, arguments.callee, this, arguments);
                                                arguments = J$.N(833209, 'arguments', arguments, true, false, false);
                                                test = J$.N(833217, 'test', test, true, false, false);
                                                callback = J$.N(833225, 'callback', callback, true, false, false);
                                                J$.M(833153, J$.G(833057, J$.R(833049, 'smokeOutput', smokeOutput, false, false), 'results'), 'push', false)(J$.T(833145, {
                                                    status: J$.G(833073, J$.R(833065, 'test', test, false, false), 'status'),
                                                    start: J$.G(833089, J$.R(833081, 'test', test, false, false), 'startTime'),
                                                    end: J$.M(833105, J$.I(typeof Date === 'undefined' ? Date = J$.R(833097, 'Date', undefined, true, true) : Date = J$.R(833097, 'Date', Date, true, true)), 'now', false)(),
                                                    test_file: J$.G(833121, J$.R(833113, 'test', test, false, false), 'name'),
                                                    exit_code: J$.T(833129, 0, 22, false),
                                                    url: J$.T(833137, '', 21, false)
                                                }, 11, false));
                                                J$.B(93122, 'delete', J$.R(833161, 'runningTests', runningTests, false, false), J$.G(833177, J$.R(833169, 'test', test, false, false), 'name'));
                                                J$.F(833193, J$.R(833185, 'callback', callback, false, false), false)();
                                            } catch (J$e) {
                                                J$.Ex(833833, J$e);
                                            } finally {
                                                if (J$.Fr(833841))
                                                    continue jalangiLabel1;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false),
                                beforeExit: J$.T(833361, function beforeExit(obj, callback) {
                                    jalangiLabel3:
                                        while (true) {
                                            try {
                                                J$.Fe(833329, arguments.callee, this, arguments);
                                                arguments = J$.N(833337, 'arguments', arguments, true, false, false);
                                                obj = J$.N(833345, 'obj', obj, true, false, false);
                                                callback = J$.N(833353, 'callback', callback, true, false, false);
                                                J$.M(833321, J$.R(833241, 'fs', fs, false, true), 'writeFile', false)(J$.R(833249, 'outputFile', outputFile, false, false), J$.M(833273, J$.I(typeof JSON === 'undefined' ? JSON = J$.R(833257, 'JSON', undefined, true, true) : JSON = J$.R(833257, 'JSON', JSON, true, true)), 'stringify', false)(J$.R(833265, 'smokeOutput', smokeOutput, false, false)), J$.T(833313, function () {
                                                    jalangiLabel2:
                                                        while (true) {
                                                            try {
                                                                J$.Fe(833297, arguments.callee, this, arguments);
                                                                arguments = J$.N(833305, 'arguments', arguments, true, false, false);
                                                                J$.F(833289, J$.R(833281, 'callback', callback, false, false), false)();
                                                            } catch (J$e) {
                                                                J$.Ex(833849, J$e);
                                                            } finally {
                                                                if (J$.Fr(833857))
                                                                    continue jalangiLabel2;
                                                                else
                                                                    return J$.Ra();
                                                            }
                                                        }
                                                }, 12, false));
                                            } catch (J$e) {
                                                J$.Ex(833865, J$e);
                                            } finally {
                                                if (J$.Fr(833873))
                                                    continue jalangiLabel3;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false)
                            }, 11, false), integraPlugin, false, false);
                            J$.M(833681, J$.I(typeof process === 'undefined' ? process = J$.R(833385, 'process', undefined, true, true) : process = J$.R(833385, 'process', process, true, true)), 'on', false)(J$.T(833393, 'uncaughtException', 21, false), J$.T(833673, function (err) {
                                jalangiLabel4:
                                    while (true) {
                                        try {
                                            J$.Fe(833641, arguments.callee, this, arguments);
                                            arguments = J$.N(833649, 'arguments', arguments, true, false, false);
                                            err = J$.N(833657, 'err', err, true, false, false);
                                            J$.N(833665, 'testName', testName, false, false, false);
                                            for (var testName in J$.H(833521, J$.R(833401, 'runningTests', runningTests, false, false))) {
                                                J$.N(833529, 'testName', testName, false, true, false);
                                                {
                                                    {
                                                        J$.M(833513, J$.G(833417, J$.R(833409, 'smokeOutput', smokeOutput, false, false), 'results'), 'push', false)(J$.T(833505, {
                                                            status: J$.T(833425, 'fail', 21, false),
                                                            start: J$.G(833457, J$.G(833449, J$.R(833433, 'runningTests', runningTests, false, false), J$.R(833441, 'testName', testName, false, false)), 'startTime'),
                                                            end: J$.M(833473, J$.I(typeof Date === 'undefined' ? Date = J$.R(833465, 'Date', undefined, true, true) : Date = J$.R(833465, 'Date', Date, true, true)), 'now', false)(),
                                                            test_file: J$.R(833481, 'testName', testName, false, false),
                                                            exit_code: J$.T(833489, 0, 22, false),
                                                            url: J$.T(833497, '', 21, false)
                                                        }, 11, false));
                                                    }
                                                }
                                            }
                                            J$.M(833577, J$.R(833537, 'fs', fs, false, true), 'writeFileSync', false)(J$.R(833545, 'outputFile', outputFile, false, false), J$.M(833569, J$.I(typeof JSON === 'undefined' ? JSON = J$.R(833553, 'JSON', undefined, true, true) : JSON = J$.R(833553, 'JSON', JSON, true, true)), 'stringify', false)(J$.R(833561, 'smokeOutput', smokeOutput, false, false)));
                                            J$.M(833609, J$.I(typeof console === 'undefined' ? console = J$.R(833585, 'console', undefined, true, true) : console = J$.R(833585, 'console', console, true, true)), 'error', false)(J$.G(833601, J$.R(833593, 'err', err, false, false), 'stack'));
                                            J$.M(833633, J$.I(typeof process === 'undefined' ? process = J$.R(833617, 'process', undefined, true, true) : process = J$.R(833617, 'process', process, true, true)), 'exit', false)(J$.T(833625, 1, 22, false));
                                        } catch (J$e) {
                                            J$.Ex(833881, J$e);
                                        } finally {
                                            if (J$.Fr(833889))
                                                continue jalangiLabel4;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            J$.M(833705, J$.R(833689, 'runner', runner, false, false), 'plugin', false)(J$.R(833697, 'integraPlugin', integraPlugin, false, false));
                            return J$.Rt(833721, J$.R(833713, 'integraPlugin', integraPlugin, false, false));
                        } catch (J$e) {
                            J$.Ex(833897, J$e);
                        } finally {
                            if (J$.Fr(833905))
                                continue jalangiLabel5;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
        } catch (J$e) {
            J$.Ex(833913, J$e);
        } finally {
            if (J$.Sr(833921))
                continue jalangiLabel6;
            else
                break jalangiLabel6;
        }
    }
// JALANGI DO NOT INSTRUMENT

