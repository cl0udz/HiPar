J$.noInstrEval = false;
jalangiLabel10:
    while (true) {
        try {
            J$.Se(946729, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestMongoDb/node_modules/mongodb/lib/core/wireprotocol/command.js');
            function isClientEncryptionEnabled(server) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(943921, arguments.callee, this, arguments);
                            arguments = J$.N(943929, 'arguments', arguments, true, false, false);
                            server = J$.N(943937, 'server', server, true, false, false);
                            return J$.Rt(943913, J$.G(943905, J$.R(943897, 'server', server, false, false), 'autoEncrypter'));
                        } catch (J$e) {
                            J$.Ex(946897, J$e);
                        } finally {
                            if (J$.Fr(946905))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function command(server, ns, cmd, options, callback) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(944265, arguments.callee, this, arguments);
                            arguments = J$.N(944273, 'arguments', arguments, true, false, false);
                            server = J$.N(944281, 'server', server, true, false, false);
                            ns = J$.N(944289, 'ns', ns, true, false, false);
                            cmd = J$.N(944297, 'cmd', cmd, true, false, false);
                            options = J$.N(944305, 'options', options, true, false, false);
                            callback = J$.N(944313, 'callback', callback, true, false, false);
                            if (J$.C(56704, J$.B(100442, '===', J$.U(100434, 'typeof', J$.R(943945, 'options', options, false, false)), J$.T(943953, 'function', 21, false))))
                                callback = J$.W(943969, 'callback', J$.R(943961, 'options', options, false, false), callback, false, false), options = J$.W(943985, 'options', J$.T(943977, {}, 11, false), options, false, false);
                            options = J$.W(944009, 'options', J$.C(56712, J$.R(943993, 'options', options, false, false)) ? J$._() : J$.T(944001, {}, 11, false), options, false, false);
                            if (J$.C(56720, J$.B(100450, '==', J$.R(944017, 'cmd', cmd, false, false), J$.T(944025, null, 25, false)))) {
                                return J$.Rt(944113, J$.F(944105, J$.R(944033, 'callback', callback, false, false), false)(J$.F(944097, J$.R(944041, 'MongoError', MongoError, false, true), true)(J$.M(944089, J$.T(944049, 'command ', 21, false), 'concat', false)(J$.M(944073, J$.I(typeof JSON === 'undefined' ? JSON = J$.R(944057, 'JSON', undefined, true, true) : JSON = J$.R(944057, 'JSON', JSON, true, true)), 'stringify', false)(J$.R(944065, 'cmd', cmd, false, false)), J$.T(944081, ' does not return a cursor', 21, false)))));
                            }
                            if (J$.C(56728, J$.U(100458, '!', J$.F(944137, J$.R(944121, 'isClientEncryptionEnabled', isClientEncryptionEnabled, false, true), false)(J$.R(944129, 'server', server, false, false))))) {
                                J$.F(944193, J$.R(944145, '_command', _command, false, true), false)(J$.R(944153, 'server', server, false, false), J$.R(944161, 'ns', ns, false, false), J$.R(944169, 'cmd', cmd, false, false), J$.R(944177, 'options', options, false, false), J$.R(944185, 'callback', callback, false, false));
                                return J$.Rt(944201, undefined);
                            }
                            J$.F(944257, J$.R(944209, '_cryptCommand', _cryptCommand, false, true), false)(J$.R(944217, 'server', server, false, false), J$.R(944225, 'ns', ns, false, false), J$.R(944233, 'cmd', cmd, false, false), J$.R(944241, 'options', options, false, false), J$.R(944249, 'callback', callback, false, false));
                        } catch (J$e) {
                            J$.Ex(946913, J$e);
                        } finally {
                            if (J$.Fr(946921))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function _command(server, ns, cmd, options, callback) {
                jalangiLabel3:
                    while (true) {
                        try {
                            J$.Fe(945473, arguments.callee, this, arguments);
                            arguments = J$.N(945481, 'arguments', arguments, true, false, false);
                            server = J$.N(945489, 'server', server, true, false, false);
                            ns = J$.N(945497, 'ns', ns, true, false, false);
                            cmd = J$.N(945505, 'cmd', cmd, true, false, false);
                            options = J$.N(945513, 'options', options, true, false, false);
                            callback = J$.N(945521, 'callback', callback, true, false, false);
                            J$.N(945529, 'bson', bson, false, false, false);
                            J$.N(945537, 'pool', pool, false, false, false);
                            J$.N(945545, 'readPreference', readPreference, false, false, false);
                            J$.N(945553, 'shouldUseOpMsg', shouldUseOpMsg, false, false, false);
                            J$.N(945561, 'session', session, false, false, false);
                            J$.N(945569, 'clusterTime', clusterTime, false, false, false);
                            J$.N(945577, 'finalCmd', finalCmd, false, false, false);
                            J$.N(945585, 'err', err, false, false, false);
                            J$.N(945593, 'commandOptions', commandOptions, false, false, false);
                            J$.N(945601, 'cmdNs', cmdNs, false, false, false);
                            J$.N(945609, 'message', message, false, false, false);
                            J$.N(945617, 'inTransaction', inTransaction, false, false, false);
                            J$.N(945625, 'commandResponseHandler', commandResponseHandler, false, false, false);
                            var bson = J$.W(944345, 'bson', J$.G(944337, J$.G(944329, J$.R(944321, 'server', server, false, false), 's'), 'bson'), bson, false, false);
                            var pool = J$.W(944377, 'pool', J$.G(944369, J$.G(944361, J$.R(944353, 'server', server, false, false), 's'), 'pool'), pool, false, false);
                            var readPreference = J$.W(944417, 'readPreference', J$.F(944409, J$.R(944385, 'getReadPreference', getReadPreference, false, true), false)(J$.R(944393, 'cmd', cmd, false, false), J$.R(944401, 'options', options, false, false)), readPreference, false, false);
                            var shouldUseOpMsg = J$.W(944449, 'shouldUseOpMsg', J$.F(944441, J$.R(944425, 'supportsOpMsg', supportsOpMsg, false, true), false)(J$.R(944433, 'server', server, false, false)), shouldUseOpMsg, false, false);
                            var session = J$.W(944473, 'session', J$.G(944465, J$.R(944457, 'options', options, false, false), 'session'), session, false, false);
                            var clusterTime = J$.W(944497, 'clusterTime', J$.G(944489, J$.R(944481, 'server', server, false, false), 'clusterTime'), clusterTime, false, false);
                            var finalCmd = J$.W(944537, 'finalCmd', J$.M(944529, J$.I(typeof Object === 'undefined' ? Object = J$.R(944505, 'Object', undefined, true, true) : Object = J$.R(944505, 'Object', Object, true, true)), 'assign', false)(J$.T(944513, {}, 11, false), J$.R(944521, 'cmd', cmd, false, false)), finalCmd, false, false);
                            if (J$.C(56768, J$.C(56736, J$.F(944561, J$.R(944545, 'hasSessionSupport', hasSessionSupport, false, true), false)(J$.R(944553, 'server', server, false, false))) ? J$.R(944569, 'session', session, false, false) : J$._())) {
                                if (J$.C(56752, J$.C(56744, J$.G(944585, J$.R(944577, 'session', session, false, false), 'clusterTime')) ? J$.M(944633, J$.G(944609, J$.G(944601, J$.R(944593, 'session', session, false, false), 'clusterTime'), 'clusterTime'), 'greaterThan', false)(J$.G(944625, J$.R(944617, 'clusterTime', clusterTime, false, false), 'clusterTime')) : J$._())) {
                                    clusterTime = J$.W(944657, 'clusterTime', J$.G(944649, J$.R(944641, 'session', session, false, false), 'clusterTime'), clusterTime, false, false);
                                }
                                var err = J$.W(944705, 'err', J$.F(944697, J$.R(944665, 'applySession', applySession, false, true), false)(J$.R(944673, 'session', session, false, false), J$.R(944681, 'finalCmd', finalCmd, false, false), J$.R(944689, 'options', options, false, false)), err, false, false);
                                if (J$.C(56760, J$.R(944713, 'err', err, false, false))) {
                                    return J$.Rt(944745, J$.F(944737, J$.R(944721, 'callback', callback, false, false), false)(J$.R(944729, 'err', err, false, false)));
                                }
                            }
                            if (J$.C(56776, J$.R(944753, 'clusterTime', clusterTime, false, false))) {
                                J$.P(944777, J$.R(944761, 'finalCmd', finalCmd, false, false), '$clusterTime', J$.R(944769, 'clusterTime', clusterTime, false, false));
                            }
                            if (J$.C(56808, J$.C(56800, J$.C(56792, J$.C(56784, J$.F(944801, J$.R(944785, 'isSharded', isSharded, false, true), false)(J$.R(944793, 'server', server, false, false))) ? J$.U(100466, '!', J$.R(944809, 'shouldUseOpMsg', shouldUseOpMsg, false, false)) : J$._()) ? J$.R(944817, 'readPreference', readPreference, false, false) : J$._()) ? J$.B(100474, '!==', J$.G(944833, J$.R(944825, 'readPreference', readPreference, false, false), 'preference'), J$.T(944841, 'primary', 21, false)) : J$._())) {
                                finalCmd = J$.W(944881, 'finalCmd', J$.T(944873, {
                                    $query: J$.R(944849, 'finalCmd', finalCmd, false, false),
                                    $readPreference: J$.M(944865, J$.R(944857, 'readPreference', readPreference, false, false), 'toJSON', false)()
                                }, 11, false), finalCmd, false, false);
                            }
                            var commandOptions = J$.W(944953, 'commandOptions', J$.M(944945, J$.I(typeof Object === 'undefined' ? Object = J$.R(944889, 'Object', undefined, true, true) : Object = J$.R(944889, 'Object', Object, true, true)), 'assign', false)(J$.T(944929, {
                                command: J$.T(944897, true, 23, false),
                                numberToSkip: J$.T(944905, 0, 22, false),
                                numberToReturn: J$.U(100482, '-', J$.T(944913, 1, 22, false)),
                                checkKeys: J$.T(944921, false, 23, false)
                            }, 11, false), J$.R(944937, 'options', options, false, false)), commandOptions, false, false);
                            J$.P(944985, J$.R(944961, 'commandOptions', commandOptions, false, false), 'slaveOk', J$.M(944977, J$.R(944969, 'readPreference', readPreference, false, false), 'slaveOk', false)());
                            var cmdNs = J$.W(945041, 'cmdNs', J$.M(945033, J$.T(944993, '', 21, false), 'concat', false)(J$.F(945017, J$.R(945001, 'databaseNamespace', databaseNamespace, false, true), false)(J$.R(945009, 'ns', ns, false, false)), J$.T(945025, '.$cmd', 21, false)), cmdNs, false, false);
                            var message = J$.W(945153, 'message', J$.C(56816, J$.R(945049, 'shouldUseOpMsg', shouldUseOpMsg, false, false)) ? J$.F(945097, J$.R(945057, 'Msg', Msg, false, true), true)(J$.R(945065, 'bson', bson, false, false), J$.R(945073, 'cmdNs', cmdNs, false, false), J$.R(945081, 'finalCmd', finalCmd, false, false), J$.R(945089, 'commandOptions', commandOptions, false, false)) : J$.F(945145, J$.R(945105, 'Query', Query, false, true), true)(J$.R(945113, 'bson', bson, false, false), J$.R(945121, 'cmdNs', cmdNs, false, false), J$.R(945129, 'finalCmd', finalCmd, false, false), J$.R(945137, 'commandOptions', commandOptions, false, false)), message, false, false);
                            var inTransaction = J$.W(945209, 'inTransaction', J$.C(56832, J$.R(945161, 'session', session, false, false)) ? J$.C(56824, J$.M(945177, J$.R(945169, 'session', session, false, false), 'inTransaction', false)()) ? J$._() : J$.F(945201, J$.R(945185, 'isTransactionCommand', isTransactionCommand, false, true), false)(J$.R(945193, 'finalCmd', finalCmd, false, false)) : J$._(), inTransaction, false, false);
                            var commandResponseHandler = J$.W(945393, 'commandResponseHandler', J$.C(56872, J$.R(945217, 'inTransaction', inTransaction, false, false)) ? J$.T(945377, function (err) {
                                jalangiLabel2:
                                    while (true) {
                                        try {
                                            J$.Fe(945353, arguments.callee, this, arguments);
                                            arguments = J$.N(945361, 'arguments', arguments, true, false, false);
                                            err = J$.N(945369, 'err', err, true, false, false);
                                            if (J$.C(56864, J$.C(56856, J$.C(56848, J$.C(56840, J$.U(100490, '!', J$.G(945233, J$.R(945225, 'cmd', cmd, false, false), 'commitTransaction'))) ? J$.R(945241, 'err', err, false, false) : J$._()) ? J$.B(100498, 'instanceof', J$.R(945249, 'err', err, false, false), J$.R(945257, 'MongoError', MongoError, false, true)) : J$._()) ? J$.M(945281, J$.R(945265, 'err', err, false, false), 'hasErrorLabel', false)(J$.T(945273, 'TransientTransactionError', 21, false)) : J$._())) {
                                                J$.M(945305, J$.G(945297, J$.R(945289, 'session', session, false, false), 'transaction'), 'unpinServer', false)();
                                            }
                                            return J$.Rt(945345, J$.M(945337, J$.R(945313, 'callback', callback, false, false), 'apply', false)(J$.T(945321, null, 25, false), J$.I(typeof arguments === 'undefined' ? arguments = J$.R(945329, 'arguments', undefined, true, true) : arguments = J$.R(945329, 'arguments', arguments, true, true))));
                                        } catch (J$e) {
                                            J$.Ex(946929, J$e);
                                        } finally {
                                            if (J$.Fr(946937))
                                                continue jalangiLabel2;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false) : J$.R(945385, 'callback', callback, false, false), commandResponseHandler, false, false);
                            try {
                                J$.M(945433, J$.R(945401, 'pool', pool, false, false), 'write', false)(J$.R(945409, 'message', message, false, false), J$.R(945417, 'commandOptions', commandOptions, false, false), J$.R(945425, 'commandResponseHandler', commandResponseHandler, false, false));
                            } catch (err) {
                                J$.N(945465, 'err', err, false, false, true);
                                J$.F(945457, J$.R(945441, 'commandResponseHandler', commandResponseHandler, false, false), false)(J$.R(945449, 'err', err, false, false));
                            }
                        } catch (J$e) {
                            J$.Ex(946945, J$e);
                        } finally {
                            if (J$.Fr(946953))
                                continue jalangiLabel3;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function hasSessionSupport(topology) {
                jalangiLabel4:
                    while (true) {
                        try {
                            J$.Fe(945793, arguments.callee, this, arguments);
                            arguments = J$.N(945801, 'arguments', arguments, true, false, false);
                            topology = J$.N(945809, 'topology', topology, true, false, false);
                            if (J$.C(56880, J$.B(100506, '==', J$.R(945633, 'topology', topology, false, false), J$.T(945641, null, 25, false))))
                                return J$.Rt(945657, J$.T(945649, false, 23, false));
                            if (J$.C(56888, J$.G(945673, J$.R(945665, 'topology', topology, false, false), 'description'))) {
                                return J$.Rt(945713, J$.B(100514, '>=', J$.G(945697, J$.G(945689, J$.R(945681, 'topology', topology, false, false), 'description'), 'maxWireVersion'), J$.T(945705, 6, 22, false)));
                            }
                            return J$.Rt(945785, J$.C(56896, J$.B(100522, '==', J$.G(945729, J$.R(945721, 'topology', topology, false, false), 'ismaster'), J$.T(945737, null, 25, false))) ? J$.T(945745, false, 23, false) : J$.B(100530, '>=', J$.G(945769, J$.G(945761, J$.R(945753, 'topology', topology, false, false), 'ismaster'), 'maxWireVersion'), J$.T(945777, 6, 22, false)));
                        } catch (J$e) {
                            J$.Ex(946961, J$e);
                        } finally {
                            if (J$.Fr(946969))
                                continue jalangiLabel4;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function supportsOpMsg(topologyOrServer) {
                jalangiLabel5:
                    while (true) {
                        try {
                            J$.Fe(945961, arguments.callee, this, arguments);
                            arguments = J$.N(945969, 'arguments', arguments, true, false, false);
                            topologyOrServer = J$.N(945977, 'topologyOrServer', topologyOrServer, true, false, false);
                            J$.N(945985, 'description', description, false, false, false);
                            var description = J$.W(945865, 'description', J$.C(56904, J$.G(945825, J$.R(945817, 'topologyOrServer', topologyOrServer, false, false), 'ismaster')) ? J$.G(945841, J$.R(945833, 'topologyOrServer', topologyOrServer, false, false), 'ismaster') : J$.G(945857, J$.R(945849, 'topologyOrServer', topologyOrServer, false, false), 'description'), description, false, false);
                            if (J$.C(56912, J$.B(100538, '==', J$.R(945873, 'description', description, false, false), J$.T(945881, null, 25, false)))) {
                                return J$.Rt(945897, J$.T(945889, false, 23, false));
                            }
                            return J$.Rt(945953, J$.C(56920, J$.B(100546, '>=', J$.G(945913, J$.R(945905, 'description', description, false, false), 'maxWireVersion'), J$.T(945921, 6, 22, false))) ? J$.B(100554, '==', J$.G(945937, J$.R(945929, 'description', description, false, false), '__nodejs_mock_server__'), J$.T(945945, null, 25, false)) : J$._());
                        } catch (J$e) {
                            J$.Ex(946977, J$e);
                        } finally {
                            if (J$.Fr(946985))
                                continue jalangiLabel5;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function _cryptCommand(server, ns, cmd, options, callback) {
                jalangiLabel9:
                    while (true) {
                        try {
                            J$.Fe(946617, arguments.callee, this, arguments);
                            function commandResponseHandler(err, response) {
                                jalangiLabel7:
                                    while (true) {
                                        try {
                                            J$.Fe(946337, arguments.callee, this, arguments);
                                            arguments = J$.N(946345, 'arguments', arguments, true, false, false);
                                            err = J$.N(946353, 'err', err, true, false, false);
                                            response = J$.N(946361, 'response', response, true, false, false);
                                            if (J$.C(56936, J$.C(56928, J$.R(946057, 'err', err, false, false)) ? J$._() : J$.B(100578, '==', J$.R(946065, 'response', response, false, false), J$.T(946073, null, 25, false)))) {
                                                J$.F(946105, J$.R(946081, 'callback', callback, false, false), false)(J$.R(946089, 'err', err, false, false), J$.R(946097, 'response', response, false, false));
                                                return J$.Rt(946113, undefined);
                                            }
                                            J$.M(946329, J$.R(946121, 'autoEncrypter', autoEncrypter, false, false), 'decrypt', false)(J$.G(946137, J$.R(946129, 'response', response, false, false), 'result'), J$.T(946321, function (err, decrypted) {
                                                jalangiLabel6:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(946289, arguments.callee, this, arguments);
                                                            arguments = J$.N(946297, 'arguments', arguments, true, false, false);
                                                            err = J$.N(946305, 'err', err, true, false, false);
                                                            decrypted = J$.N(946313, 'decrypted', decrypted, true, false, false);
                                                            if (J$.C(56944, J$.R(946145, 'err', err, false, false))) {
                                                                J$.F(946177, J$.R(946153, 'callback', callback, false, false), false)(J$.R(946161, 'err', err, false, false), J$.T(946169, null, 25, false));
                                                                return J$.Rt(946185, undefined);
                                                            }
                                                            J$.P(946209, J$.R(946193, 'response', response, false, false), 'result', J$.R(946201, 'decrypted', decrypted, false, false));
                                                            J$.P(946249, J$.G(946225, J$.R(946217, 'response', response, false, false), 'message'), 'documents', J$.T(946241, [J$.R(946233, 'decrypted', decrypted, false, false)], 10, false));
                                                            J$.F(946281, J$.R(946257, 'callback', callback, false, false), false)(J$.T(946265, null, 25, false), J$.R(946273, 'response', response, false, false));
                                                        } catch (J$e) {
                                                            J$.Ex(946993, J$e);
                                                        } finally {
                                                            if (J$.Fr(947001))
                                                                continue jalangiLabel6;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false));
                                        } catch (J$e) {
                                            J$.Ex(947009, J$e);
                                        } finally {
                                            if (J$.Fr(947017))
                                                continue jalangiLabel7;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }
                            arguments = J$.N(946625, 'arguments', arguments, true, false, false);
                            server = J$.N(946633, 'server', server, true, false, false);
                            ns = J$.N(946641, 'ns', ns, true, false, false);
                            cmd = J$.N(946649, 'cmd', cmd, true, false, false);
                            options = J$.N(946657, 'options', options, true, false, false);
                            callback = J$.N(946665, 'callback', callback, true, false, false);
                            J$.N(946673, 'shouldBypassAutoEncryption', shouldBypassAutoEncryption, false, false, false);
                            J$.N(946681, 'autoEncrypter', autoEncrypter, false, false, false);
                            commandResponseHandler = J$.N(946697, 'commandResponseHandler', J$.T(946689, commandResponseHandler, 12, false), true, false, false);
                            var shouldBypassAutoEncryption = J$.W(946025, 'shouldBypassAutoEncryption', J$.U(100570, '!', J$.U(100562, '!', J$.G(946017, J$.G(946009, J$.G(946001, J$.R(945993, 'server', server, false, false), 's'), 'options'), 'bypassAutoEncryption'))), shouldBypassAutoEncryption, false, false);
                            var autoEncrypter = J$.W(946049, 'autoEncrypter', J$.G(946041, J$.R(946033, 'server', server, false, false), 'autoEncrypter'), autoEncrypter, false, false);
                            if (J$.C(56952, J$.R(946369, 'shouldBypassAutoEncryption', shouldBypassAutoEncryption, false, false))) {
                                J$.F(946425, J$.R(946377, '_command', _command, false, true), false)(J$.R(946385, 'server', server, false, false), J$.R(946393, 'ns', ns, false, false), J$.R(946401, 'cmd', cmd, false, false), J$.R(946409, 'options', options, false, false), J$.R(946417, 'commandResponseHandler', commandResponseHandler, false, false));
                                return J$.Rt(946433, undefined);
                            }
                            J$.M(946609, J$.R(946441, 'autoEncrypter', autoEncrypter, false, false), 'encrypt', false)(J$.R(946449, 'ns', ns, false, false), J$.R(946457, 'cmd', cmd, false, false), J$.T(946601, function (err, encrypted) {
                                jalangiLabel8:
                                    while (true) {
                                        try {
                                            J$.Fe(946569, arguments.callee, this, arguments);
                                            arguments = J$.N(946577, 'arguments', arguments, true, false, false);
                                            err = J$.N(946585, 'err', err, true, false, false);
                                            encrypted = J$.N(946593, 'encrypted', encrypted, true, false, false);
                                            if (J$.C(56960, J$.R(946465, 'err', err, false, false))) {
                                                J$.F(946497, J$.R(946473, 'callback', callback, false, false), false)(J$.R(946481, 'err', err, false, false), J$.T(946489, null, 25, false));
                                                return J$.Rt(946505, undefined);
                                            }
                                            J$.F(946561, J$.R(946513, '_command', _command, false, true), false)(J$.R(946521, 'server', server, false, false), J$.R(946529, 'ns', ns, false, false), J$.R(946537, 'encrypted', encrypted, false, false), J$.R(946545, 'options', options, false, false), J$.R(946553, 'commandResponseHandler', commandResponseHandler, false, false));
                                        } catch (J$e) {
                                            J$.Ex(947025, J$e);
                                        } finally {
                                            if (J$.Fr(947033))
                                                continue jalangiLabel8;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                        } catch (J$e) {
                            J$.Ex(947041, J$e);
                        } finally {
                            if (J$.Fr(947049))
                                continue jalangiLabel9;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(946737, 'Query', Query, false, false, false);
            J$.N(946745, 'Msg', Msg, false, false, false);
            J$.N(946753, 'MongoError', MongoError, false, false, false);
            J$.N(946761, 'getReadPreference', getReadPreference, false, false, false);
            J$.N(946769, 'isSharded', isSharded, false, false, false);
            J$.N(946777, 'databaseNamespace', databaseNamespace, false, false, false);
            J$.N(946785, 'isTransactionCommand', isTransactionCommand, false, false, false);
            J$.N(946793, 'applySession', applySession, false, false, false);
            isClientEncryptionEnabled = J$.N(946809, 'isClientEncryptionEnabled', J$.T(946801, isClientEncryptionEnabled, 12, false), true, false, false);
            command = J$.N(946825, 'command', J$.T(946817, command, 12, false), true, false, false);
            _command = J$.N(946841, '_command', J$.T(946833, _command, 12, false), true, false, false);
            hasSessionSupport = J$.N(946857, 'hasSessionSupport', J$.T(946849, hasSessionSupport, 12, false), true, false, false);
            supportsOpMsg = J$.N(946873, 'supportsOpMsg', J$.T(946865, supportsOpMsg, 12, false), true, false, false);
            _cryptCommand = J$.N(946889, '_cryptCommand', J$.T(946881, _cryptCommand, 12, false), true, false, false);
            J$.T(943569, 'use strict', 21, false);
            var Query = J$.W(943609, 'Query', J$.G(943601, J$.F(943593, J$.I(typeof require === 'undefined' ? require = J$.R(943577, 'require', undefined, true, true) : require = J$.R(943577, 'require', require, true, true)), false)(J$.T(943585, '../connection/commands', 21, false)), 'Query'), Query, false, true);
            var Msg = J$.W(943649, 'Msg', J$.G(943641, J$.F(943633, J$.I(typeof require === 'undefined' ? require = J$.R(943617, 'require', undefined, true, true) : require = J$.R(943617, 'require', require, true, true)), false)(J$.T(943625, '../connection/msg', 21, false)), 'Msg'), Msg, false, true);
            var MongoError = J$.W(943689, 'MongoError', J$.G(943681, J$.F(943673, J$.I(typeof require === 'undefined' ? require = J$.R(943657, 'require', undefined, true, true) : require = J$.R(943657, 'require', require, true, true)), false)(J$.T(943665, '../error', 21, false)), 'MongoError'), MongoError, false, true);
            var getReadPreference = J$.W(943729, 'getReadPreference', J$.G(943721, J$.F(943713, J$.I(typeof require === 'undefined' ? require = J$.R(943697, 'require', undefined, true, true) : require = J$.R(943697, 'require', require, true, true)), false)(J$.T(943705, './shared', 21, false)), 'getReadPreference'), getReadPreference, false, true);
            var isSharded = J$.W(943769, 'isSharded', J$.G(943761, J$.F(943753, J$.I(typeof require === 'undefined' ? require = J$.R(943737, 'require', undefined, true, true) : require = J$.R(943737, 'require', require, true, true)), false)(J$.T(943745, './shared', 21, false)), 'isSharded'), isSharded, false, true);
            var databaseNamespace = J$.W(943809, 'databaseNamespace', J$.G(943801, J$.F(943793, J$.I(typeof require === 'undefined' ? require = J$.R(943777, 'require', undefined, true, true) : require = J$.R(943777, 'require', require, true, true)), false)(J$.T(943785, './shared', 21, false)), 'databaseNamespace'), databaseNamespace, false, true);
            var isTransactionCommand = J$.W(943849, 'isTransactionCommand', J$.G(943841, J$.F(943833, J$.I(typeof require === 'undefined' ? require = J$.R(943817, 'require', undefined, true, true) : require = J$.R(943817, 'require', require, true, true)), false)(J$.T(943825, '../transactions', 21, false)), 'isTransactionCommand'), isTransactionCommand, false, true);
            var applySession = J$.W(943889, 'applySession', J$.G(943881, J$.F(943873, J$.I(typeof require === 'undefined' ? require = J$.R(943857, 'require', undefined, true, true) : require = J$.R(943857, 'require', require, true, true)), false)(J$.T(943865, '../sessions', 21, false)), 'applySession'), applySession, false, true);
            J$.P(946721, J$.I(typeof module === 'undefined' ? module = J$.R(946705, 'module', undefined, true, true) : module = J$.R(946705, 'module', module, true, true)), 'exports', J$.R(946713, 'command', command, false, true));
        } catch (J$e) {
            J$.Ex(947057, J$e);
        } finally {
            if (J$.Sr(947065))
                continue jalangiLabel10;
            else
                break jalangiLabel10;
        }
    }
// JALANGI DO NOT INSTRUMENT

