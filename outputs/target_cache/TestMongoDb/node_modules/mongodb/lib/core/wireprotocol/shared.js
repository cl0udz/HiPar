J$.noInstrEval = false;
jalangiLabel7:
    while (true) {
        try {
            J$.Se(960849, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestMongoDb/node_modules/mongodb/lib/core/wireprotocol/shared.js');
            function applyCommonQueryOptions(queryOptions, options) {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(960209, arguments.callee, this, arguments);
                            arguments = J$.N(960217, 'arguments', arguments, true, false, false);
                            queryOptions = J$.N(960225, 'queryOptions', queryOptions, true, false, false);
                            options = J$.N(960233, 'options', options, true, false, false);
                            J$.M(960025, J$.I(typeof Object === 'undefined' ? Object = J$.R(959713, 'Object', undefined, true, true) : Object = J$.R(959713, 'Object', Object, true, true)), 'assign', false)(J$.R(959721, 'queryOptions', queryOptions, false, false), J$.T(960017, {
                                raw: J$.C(57968, J$.B(101362, '===', J$.U(101354, 'typeof', J$.G(959737, J$.R(959729, 'options', options, false, false), 'raw')), J$.T(959745, 'boolean', 21, false))) ? J$.G(959761, J$.R(959753, 'options', options, false, false), 'raw') : J$.T(959769, false, 23, false),
                                promoteLongs: J$.C(57976, J$.B(101378, '===', J$.U(101370, 'typeof', J$.G(959785, J$.R(959777, 'options', options, false, false), 'promoteLongs')), J$.T(959793, 'boolean', 21, false))) ? J$.G(959809, J$.R(959801, 'options', options, false, false), 'promoteLongs') : J$.T(959817, true, 23, false),
                                promoteValues: J$.C(57984, J$.B(101394, '===', J$.U(101386, 'typeof', J$.G(959833, J$.R(959825, 'options', options, false, false), 'promoteValues')), J$.T(959841, 'boolean', 21, false))) ? J$.G(959857, J$.R(959849, 'options', options, false, false), 'promoteValues') : J$.T(959865, true, 23, false),
                                promoteBuffers: J$.C(57992, J$.B(101410, '===', J$.U(101402, 'typeof', J$.G(959881, J$.R(959873, 'options', options, false, false), 'promoteBuffers')), J$.T(959889, 'boolean', 21, false))) ? J$.G(959905, J$.R(959897, 'options', options, false, false), 'promoteBuffers') : J$.T(959913, false, 23, false),
                                monitoring: J$.C(58000, J$.B(101426, '===', J$.U(101418, 'typeof', J$.G(959929, J$.R(959921, 'options', options, false, false), 'monitoring')), J$.T(959937, 'boolean', 21, false))) ? J$.G(959953, J$.R(959945, 'options', options, false, false), 'monitoring') : J$.T(959961, false, 23, false),
                                fullResult: J$.C(58008, J$.B(101442, '===', J$.U(101434, 'typeof', J$.G(959977, J$.R(959969, 'options', options, false, false), 'fullResult')), J$.T(959985, 'boolean', 21, false))) ? J$.G(960001, J$.R(959993, 'options', options, false, false), 'fullResult') : J$.T(960009, false, 23, false)
                            }, 11, false));
                            if (J$.C(58016, J$.B(101458, '===', J$.U(101450, 'typeof', J$.G(960041, J$.R(960033, 'options', options, false, false), 'socketTimeout')), J$.T(960049, 'number', 21, false)))) {
                                J$.P(960081, J$.R(960057, 'queryOptions', queryOptions, false, false), 'socketTimeout', J$.G(960073, J$.R(960065, 'options', options, false, false), 'socketTimeout'));
                            }
                            if (J$.C(58024, J$.G(960097, J$.R(960089, 'options', options, false, false), 'session'))) {
                                J$.P(960129, J$.R(960105, 'queryOptions', queryOptions, false, false), 'session', J$.G(960121, J$.R(960113, 'options', options, false, false), 'session'));
                            }
                            if (J$.C(58032, J$.B(101474, '===', J$.U(101466, 'typeof', J$.G(960145, J$.R(960137, 'options', options, false, false), 'documentsReturnedIn')), J$.T(960153, 'string', 21, false)))) {
                                J$.P(960185, J$.R(960161, 'queryOptions', queryOptions, false, false), 'documentsReturnedIn', J$.G(960177, J$.R(960169, 'options', options, false, false), 'documentsReturnedIn'));
                            }
                            return J$.Rt(960201, J$.R(960193, 'queryOptions', queryOptions, false, false));
                        } catch (J$e) {
                            J$.Ex(961025, J$e);
                        } finally {
                            if (J$.Fr(961033))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function isSharded(topologyOrServer) {
                jalangiLabel4:
                    while (true) {
                        try {
                            J$.Fe(960561, arguments.callee, this, arguments);
                            arguments = J$.N(960569, 'arguments', arguments, true, false, false);
                            topologyOrServer = J$.N(960577, 'topologyOrServer', topologyOrServer, true, false, false);
                            J$.N(960585, 'servers', servers, false, false, false);
                            if (J$.C(58040, J$.B(101482, '===', J$.G(960249, J$.R(960241, 'topologyOrServer', topologyOrServer, false, false), 'type'), J$.T(960257, 'mongos', 21, false))))
                                return J$.Rt(960273, J$.T(960265, true, 23, false));
                            if (J$.C(58056, J$.C(58048, J$.G(960289, J$.R(960281, 'topologyOrServer', topologyOrServer, false, false), 'description')) ? J$.B(101490, '===', J$.G(960313, J$.G(960305, J$.R(960297, 'topologyOrServer', topologyOrServer, false, false), 'description'), 'type'), J$.G(960329, J$.R(960321, 'ServerType', ServerType, false, true), 'Mongos')) : J$._())) {
                                return J$.Rt(960345, J$.T(960337, true, 23, false));
                            }
                            if (J$.C(58072, J$.C(58064, J$.G(960361, J$.R(960353, 'topologyOrServer', topologyOrServer, false, false), 'description')) ? J$.B(101498, 'instanceof', J$.G(960377, J$.R(960369, 'topologyOrServer', topologyOrServer, false, false), 'description'), J$.R(960385, 'TopologyDescription', TopologyDescription, false, true)) : J$._())) {
                                var servers = J$.W(960441, 'servers', J$.M(960433, J$.I(typeof Array === 'undefined' ? Array = J$.R(960393, 'Array', undefined, true, true) : Array = J$.R(960393, 'Array', Array, true, true)), 'from', false)(J$.M(960425, J$.G(960417, J$.G(960409, J$.R(960401, 'topologyOrServer', topologyOrServer, false, false), 'description'), 'servers'), 'values', false)()), servers, false, false);
                                return J$.Rt(960537, J$.M(960529, J$.R(960449, 'servers', servers, false, false), 'some', false)(J$.T(960521, function (server) {
                                    jalangiLabel3:
                                        while (true) {
                                            try {
                                                J$.Fe(960497, arguments.callee, this, arguments);
                                                arguments = J$.N(960505, 'arguments', arguments, true, false, false);
                                                server = J$.N(960513, 'server', server, true, false, false);
                                                return J$.Rt(960489, J$.B(101506, '===', J$.G(960465, J$.R(960457, 'server', server, false, false), 'type'), J$.G(960481, J$.R(960473, 'ServerType', ServerType, false, true), 'Mongos')));
                                            } catch (J$e) {
                                                J$.Ex(961041, J$e);
                                            } finally {
                                                if (J$.Fr(961049))
                                                    continue jalangiLabel3;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false)));
                            }
                            return J$.Rt(960553, J$.T(960545, false, 23, false));
                        } catch (J$e) {
                            J$.Ex(961057, J$e);
                        } finally {
                            if (J$.Fr(961065))
                                continue jalangiLabel4;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function databaseNamespace(ns) {
                jalangiLabel5:
                    while (true) {
                        try {
                            J$.Fe(960641, arguments.callee, this, arguments);
                            arguments = J$.N(960649, 'arguments', arguments, true, false, false);
                            ns = J$.N(960657, 'ns', ns, true, false, false);
                            return J$.Rt(960633, J$.G(960625, J$.M(960609, J$.R(960593, 'ns', ns, false, false), 'split', false)(J$.T(960601, '.', 21, false)), J$.T(960617, 0, 22, false)));
                        } catch (J$e) {
                            J$.Ex(961073, J$e);
                        } finally {
                            if (J$.Fr(961081))
                                continue jalangiLabel5;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function collectionNamespace(ns) {
                jalangiLabel6:
                    while (true) {
                        try {
                            J$.Fe(960729, arguments.callee, this, arguments);
                            arguments = J$.N(960737, 'arguments', arguments, true, false, false);
                            ns = J$.N(960745, 'ns', ns, true, false, false);
                            return J$.Rt(960721, J$.M(960713, J$.M(960697, J$.M(960681, J$.R(960665, 'ns', ns, false, false), 'split', false)(J$.T(960673, '.', 21, false)), 'slice', false)(J$.T(960689, 1, 22, false)), 'join', false)(J$.T(960705, '.', 21, false)));
                        } catch (J$e) {
                            J$.Ex(961089, J$e);
                        } finally {
                            if (J$.Fr(961097))
                                continue jalangiLabel6;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(960857, 'ReadPreference', ReadPreference, false, false, false);
            J$.N(960865, 'MongoError', MongoError, false, false, false);
            J$.N(960873, 'ServerType', ServerType, false, false, false);
            J$.N(960881, 'TopologyDescription', TopologyDescription, false, false, false);
            J$.N(960889, 'MESSAGE_HEADER_SIZE', MESSAGE_HEADER_SIZE, false, false, false);
            J$.N(960897, 'COMPRESSION_DETAILS_SIZE', COMPRESSION_DETAILS_SIZE, false, false, false);
            J$.N(960905, 'opcodes', opcodes, false, false, false);
            J$.N(960913, 'getReadPreference', getReadPreference, false, false, false);
            J$.N(960921, 'parseHeader', parseHeader, false, false, false);
            applyCommonQueryOptions = J$.N(960937, 'applyCommonQueryOptions', J$.T(960929, applyCommonQueryOptions, 12, false), true, false, false);
            isSharded = J$.N(960953, 'isSharded', J$.T(960945, isSharded, 12, false), true, false, false);
            databaseNamespace = J$.N(960969, 'databaseNamespace', J$.T(960961, databaseNamespace, 12, false), true, false, false);
            collectionNamespace = J$.N(960985, 'collectionNamespace', J$.T(960977, collectionNamespace, 12, false), true, false, false);
            J$.T(959033, 'use strict', 21, false);
            var ReadPreference = J$.W(959065, 'ReadPreference', J$.F(959057, J$.I(typeof require === 'undefined' ? require = J$.R(959041, 'require', undefined, true, true) : require = J$.R(959041, 'require', require, true, true)), false)(J$.T(959049, '../topologies/read_preference', 21, false)), ReadPreference, false, true);
            var MongoError = J$.W(959105, 'MongoError', J$.G(959097, J$.F(959089, J$.I(typeof require === 'undefined' ? require = J$.R(959073, 'require', undefined, true, true) : require = J$.R(959073, 'require', require, true, true)), false)(J$.T(959081, '../error', 21, false)), 'MongoError'), MongoError, false, true);
            var ServerType = J$.W(959145, 'ServerType', J$.G(959137, J$.F(959129, J$.I(typeof require === 'undefined' ? require = J$.R(959113, 'require', undefined, true, true) : require = J$.R(959113, 'require', require, true, true)), false)(J$.T(959121, '../sdam/server_description', 21, false)), 'ServerType'), ServerType, false, true);
            var TopologyDescription = J$.W(959185, 'TopologyDescription', J$.G(959177, J$.F(959169, J$.I(typeof require === 'undefined' ? require = J$.R(959153, 'require', undefined, true, true) : require = J$.R(959153, 'require', require, true, true)), false)(J$.T(959161, '../sdam/topology_description', 21, false)), 'TopologyDescription'), TopologyDescription, false, true);
            var MESSAGE_HEADER_SIZE = J$.W(959201, 'MESSAGE_HEADER_SIZE', J$.T(959193, 16, 22, false), MESSAGE_HEADER_SIZE, false, true);
            var COMPRESSION_DETAILS_SIZE = J$.W(959217, 'COMPRESSION_DETAILS_SIZE', J$.T(959209, 9, 22, false), COMPRESSION_DETAILS_SIZE, false, true);
            var opcodes = J$.W(959305, 'opcodes', J$.T(959297, {
                OP_REPLY: J$.T(959225, 1, 22, false),
                OP_UPDATE: J$.T(959233, 2001, 22, false),
                OP_INSERT: J$.T(959241, 2002, 22, false),
                OP_QUERY: J$.T(959249, 2004, 22, false),
                OP_GETMORE: J$.T(959257, 2005, 22, false),
                OP_DELETE: J$.T(959265, 2006, 22, false),
                OP_KILL_CURSORS: J$.T(959273, 2007, 22, false),
                OP_COMPRESSED: J$.T(959281, 2012, 22, false),
                OP_MSG: J$.T(959289, 2013, 22, false)
            }, 11, false), opcodes, false, true);
            var getReadPreference = J$.W(959553, 'getReadPreference', J$.T(959545, function getReadPreference(cmd, options) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(959505, arguments.callee, this, arguments);
                            arguments = J$.N(959513, 'arguments', arguments, true, false, false);
                            cmd = J$.N(959521, 'cmd', cmd, true, false, false);
                            options = J$.N(959529, 'options', options, true, false, false);
                            J$.N(959537, 'readPreference', readPreference, false, false, false);
                            var readPreference = J$.W(959353, 'readPreference', J$.C(57936, J$.G(959321, J$.R(959313, 'cmd', cmd, false, false), 'readPreference')) ? J$._() : J$.F(959345, J$.R(959329, 'ReadPreference', ReadPreference, false, true), true)(J$.T(959337, 'primary', 21, false)), readPreference, false, false);
                            if (J$.C(57944, J$.G(959369, J$.R(959361, 'options', options, false, false), 'readPreference'))) {
                                readPreference = J$.W(959393, 'readPreference', J$.G(959385, J$.R(959377, 'options', options, false, false), 'readPreference'), readPreference, false, false);
                            }
                            if (J$.C(57952, J$.B(101330, '===', J$.U(101322, 'typeof', J$.R(959401, 'readPreference', readPreference, false, false)), J$.T(959409, 'string', 21, false)))) {
                                readPreference = J$.W(959441, 'readPreference', J$.F(959433, J$.R(959417, 'ReadPreference', ReadPreference, false, true), true)(J$.R(959425, 'readPreference', readPreference, false, false)), readPreference, false, false);
                            }
                            if (J$.C(57960, J$.U(101346, '!', J$.B(101338, 'instanceof', J$.R(959449, 'readPreference', readPreference, false, false), J$.R(959457, 'ReadPreference', ReadPreference, false, true))))) {
                                throw J$.F(959481, J$.R(959465, 'MongoError', MongoError, false, true), true)(J$.T(959473, 'read preference must be a ReadPreference instance', 21, false));
                            }
                            return J$.Rt(959497, J$.R(959489, 'readPreference', readPreference, false, false));
                        } catch (J$e) {
                            J$.Ex(960993, J$e);
                        } finally {
                            if (J$.Fr(961001))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false), getReadPreference, false, true);
            var parseHeader = J$.W(959705, 'parseHeader', J$.T(959697, function parseHeader(message) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(959673, arguments.callee, this, arguments);
                            arguments = J$.N(959681, 'arguments', arguments, true, false, false);
                            message = J$.N(959689, 'message', message, true, false, false);
                            return J$.Rt(959665, J$.T(959657, {
                                length: J$.M(959577, J$.R(959561, 'message', message, false, false), 'readInt32LE', false)(J$.T(959569, 0, 22, false)),
                                requestId: J$.M(959601, J$.R(959585, 'message', message, false, false), 'readInt32LE', false)(J$.T(959593, 4, 22, false)),
                                responseTo: J$.M(959625, J$.R(959609, 'message', message, false, false), 'readInt32LE', false)(J$.T(959617, 8, 22, false)),
                                opCode: J$.M(959649, J$.R(959633, 'message', message, false, false), 'readInt32LE', false)(J$.T(959641, 12, 22, false))
                            }, 11, false));
                        } catch (J$e) {
                            J$.Ex(961009, J$e);
                        } finally {
                            if (J$.Fr(961017))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false), parseHeader, false, true);
            J$.P(960841, J$.I(typeof module === 'undefined' ? module = J$.R(960753, 'module', undefined, true, true) : module = J$.R(960753, 'module', module, true, true)), 'exports', J$.T(960833, {
                getReadPreference: J$.R(960761, 'getReadPreference', getReadPreference, false, true),
                MESSAGE_HEADER_SIZE: J$.R(960769, 'MESSAGE_HEADER_SIZE', MESSAGE_HEADER_SIZE, false, true),
                COMPRESSION_DETAILS_SIZE: J$.R(960777, 'COMPRESSION_DETAILS_SIZE', COMPRESSION_DETAILS_SIZE, false, true),
                opcodes: J$.R(960785, 'opcodes', opcodes, false, true),
                parseHeader: J$.R(960793, 'parseHeader', parseHeader, false, true),
                applyCommonQueryOptions: J$.R(960801, 'applyCommonQueryOptions', applyCommonQueryOptions, false, true),
                isSharded: J$.R(960809, 'isSharded', isSharded, false, true),
                databaseNamespace: J$.R(960817, 'databaseNamespace', databaseNamespace, false, true),
                collectionNamespace: J$.R(960825, 'collectionNamespace', collectionNamespace, false, true)
            }, 11, false));
        } catch (J$e) {
            J$.Ex(961105, J$e);
        } finally {
            if (J$.Sr(961113))
                continue jalangiLabel7;
            else
                break jalangiLabel7;
        }
    }
// JALANGI DO NOT INSTRUMENT

