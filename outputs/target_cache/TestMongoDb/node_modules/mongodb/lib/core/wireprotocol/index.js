J$.noInstrEval = false;
jalangiLabel3:
    while (true) {
        try {
            J$.Se(950921, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestMongoDb/node_modules/mongodb/lib/core/wireprotocol/index.js');
            J$.N(950929, 'writeCommand', writeCommand, false, false, false);
            J$.T(950353, 'use strict', 21, false);
            var writeCommand = J$.W(950385, 'writeCommand', J$.F(950377, J$.I(typeof require === 'undefined' ? require = J$.R(950361, 'require', undefined, true, true) : require = J$.R(950361, 'require', require, true, true)), false)(J$.T(950369, './write_command', 21, false)), writeCommand, false, true);
            J$.P(950913, J$.I(typeof module === 'undefined' ? module = J$.R(950393, 'module', undefined, true, true) : module = J$.R(950393, 'module', module, true, true)), 'exports', J$.T(950905, {
                insert: J$.T(950529, function insert(server, ns, ops, options, callback) {
                    jalangiLabel0:
                        while (true) {
                            try {
                                J$.Fe(950473, arguments.callee, this, arguments);
                                arguments = J$.N(950481, 'arguments', arguments, true, false, false);
                                server = J$.N(950489, 'server', server, true, false, false);
                                ns = J$.N(950497, 'ns', ns, true, false, false);
                                ops = J$.N(950505, 'ops', ops, true, false, false);
                                options = J$.N(950513, 'options', options, true, false, false);
                                callback = J$.N(950521, 'callback', callback, true, false, false);
                                J$.F(950465, J$.R(950401, 'writeCommand', writeCommand, false, true), false)(J$.R(950409, 'server', server, false, false), J$.T(950417, 'insert', 21, false), J$.T(950425, 'documents', 21, false), J$.R(950433, 'ns', ns, false, false), J$.R(950441, 'ops', ops, false, false), J$.R(950449, 'options', options, false, false), J$.R(950457, 'callback', callback, false, false));
                            } catch (J$e) {
                                J$.Ex(950937, J$e);
                            } finally {
                                if (J$.Fr(950945))
                                    continue jalangiLabel0;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false),
                update: J$.T(950665, function update(server, ns, ops, options, callback) {
                    jalangiLabel1:
                        while (true) {
                            try {
                                J$.Fe(950609, arguments.callee, this, arguments);
                                arguments = J$.N(950617, 'arguments', arguments, true, false, false);
                                server = J$.N(950625, 'server', server, true, false, false);
                                ns = J$.N(950633, 'ns', ns, true, false, false);
                                ops = J$.N(950641, 'ops', ops, true, false, false);
                                options = J$.N(950649, 'options', options, true, false, false);
                                callback = J$.N(950657, 'callback', callback, true, false, false);
                                J$.F(950601, J$.R(950537, 'writeCommand', writeCommand, false, true), false)(J$.R(950545, 'server', server, false, false), J$.T(950553, 'update', 21, false), J$.T(950561, 'updates', 21, false), J$.R(950569, 'ns', ns, false, false), J$.R(950577, 'ops', ops, false, false), J$.R(950585, 'options', options, false, false), J$.R(950593, 'callback', callback, false, false));
                            } catch (J$e) {
                                J$.Ex(950953, J$e);
                            } finally {
                                if (J$.Fr(950961))
                                    continue jalangiLabel1;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false),
                remove: J$.T(950801, function remove(server, ns, ops, options, callback) {
                    jalangiLabel2:
                        while (true) {
                            try {
                                J$.Fe(950745, arguments.callee, this, arguments);
                                arguments = J$.N(950753, 'arguments', arguments, true, false, false);
                                server = J$.N(950761, 'server', server, true, false, false);
                                ns = J$.N(950769, 'ns', ns, true, false, false);
                                ops = J$.N(950777, 'ops', ops, true, false, false);
                                options = J$.N(950785, 'options', options, true, false, false);
                                callback = J$.N(950793, 'callback', callback, true, false, false);
                                J$.F(950737, J$.R(950673, 'writeCommand', writeCommand, false, true), false)(J$.R(950681, 'server', server, false, false), J$.T(950689, 'delete', 21, false), J$.T(950697, 'deletes', 21, false), J$.R(950705, 'ns', ns, false, false), J$.R(950713, 'ops', ops, false, false), J$.R(950721, 'options', options, false, false), J$.R(950729, 'callback', callback, false, false));
                            } catch (J$e) {
                                J$.Ex(950969, J$e);
                            } finally {
                                if (J$.Fr(950977))
                                    continue jalangiLabel2;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false),
                killCursors: J$.F(950825, J$.I(typeof require === 'undefined' ? require = J$.R(950809, 'require', undefined, true, true) : require = J$.R(950809, 'require', require, true, true)), false)(J$.T(950817, './kill_cursors', 21, false)),
                getMore: J$.F(950849, J$.I(typeof require === 'undefined' ? require = J$.R(950833, 'require', undefined, true, true) : require = J$.R(950833, 'require', require, true, true)), false)(J$.T(950841, './get_more', 21, false)),
                query: J$.F(950873, J$.I(typeof require === 'undefined' ? require = J$.R(950857, 'require', undefined, true, true) : require = J$.R(950857, 'require', require, true, true)), false)(J$.T(950865, './query', 21, false)),
                command: J$.F(950897, J$.I(typeof require === 'undefined' ? require = J$.R(950881, 'require', undefined, true, true) : require = J$.R(950881, 'require', require, true, true)), false)(J$.T(950889, './command', 21, false))
            }, 11, false));
        } catch (J$e) {
            J$.Ex(950985, J$e);
        } finally {
            if (J$.Sr(950993))
                continue jalangiLabel3;
            else
                break jalangiLabel3;
        }
    }
// JALANGI DO NOT INSTRUMENT

