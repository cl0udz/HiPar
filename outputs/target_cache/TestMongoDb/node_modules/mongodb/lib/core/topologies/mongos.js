J$.noInstrEval = false;
jalangiLabel58:
    while (true) {
        try {
            J$.Se(853705, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestMongoDb/node_modules/mongodb/lib/core/topologies/mongos.js');
            function stateTransition(self, newState) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(835129, arguments.callee, this, arguments);
                            arguments = J$.N(835137, 'arguments', arguments, true, false, false);
                            self = J$.N(835145, 'self', self, true, false, false);
                            newState = J$.N(835153, 'newState', newState, true, false, false);
                            J$.N(835161, 'legalTransitions', legalTransitions, false, false, false);
                            J$.N(835169, 'legalStates', legalStates, false, false, false);
                            var legalTransitions = J$.W(834913, 'legalTransitions', J$.T(834905, {
                                disconnected: J$.T(834753, [
                                    J$.R(834721, 'CONNECTING', CONNECTING, false, true),
                                    J$.R(834729, 'DESTROYING', DESTROYING, false, true),
                                    J$.R(834737, 'DESTROYED', DESTROYED, false, true),
                                    J$.R(834745, 'DISCONNECTED', DISCONNECTED, false, true)
                                ], 10, false),
                                connecting: J$.T(834801, [
                                    J$.R(834761, 'CONNECTING', CONNECTING, false, true),
                                    J$.R(834769, 'DESTROYING', DESTROYING, false, true),
                                    J$.R(834777, 'DESTROYED', DESTROYED, false, true),
                                    J$.R(834785, 'CONNECTED', CONNECTED, false, true),
                                    J$.R(834793, 'DISCONNECTED', DISCONNECTED, false, true)
                                ], 10, false),
                                connected: J$.T(834849, [
                                    J$.R(834809, 'CONNECTED', CONNECTED, false, true),
                                    J$.R(834817, 'DISCONNECTED', DISCONNECTED, false, true),
                                    J$.R(834825, 'DESTROYING', DESTROYING, false, true),
                                    J$.R(834833, 'DESTROYED', DESTROYED, false, true),
                                    J$.R(834841, 'UNREFERENCED', UNREFERENCED, false, true)
                                ], 10, false),
                                unreferenced: J$.T(834881, [
                                    J$.R(834857, 'UNREFERENCED', UNREFERENCED, false, true),
                                    J$.R(834865, 'DESTROYING', DESTROYING, false, true),
                                    J$.R(834873, 'DESTROYED', DESTROYED, false, true)
                                ], 10, false),
                                destroyed: J$.T(834897, [J$.R(834889, 'DESTROYED', DESTROYED, false, true)], 10, false)
                            }, 11, false), legalTransitions, false, false);
                            var legalStates = J$.W(834953, 'legalStates', J$.G(834945, J$.R(834921, 'legalTransitions', legalTransitions, false, false), J$.G(834937, J$.R(834929, 'self', self, false, false), 'state')), legalStates, false, false);
                            if (J$.C(48680, J$.C(48672, J$.R(834961, 'legalStates', legalStates, false, false)) ? J$.B(93138, '!==', J$.M(834985, J$.R(834969, 'legalStates', legalStates, false, false), 'indexOf', false)(J$.R(834977, 'newState', newState, false, false)), J$.U(93130, '-', J$.T(834993, 1, 22, false))) : J$._())) {
                                J$.P(835017, J$.R(835001, 'self', self, false, false), 'state', J$.R(835009, 'newState', newState, false, false));
                            } else {
                                J$.M(835121, J$.G(835041, J$.G(835033, J$.R(835025, 'self', self, false, false), 's'), 'logger'), 'error', false)(J$.F(835113, J$.R(835049, 'f', f, false, true), false)(J$.T(835057, 'Mongos with id [%s] failed attempted illegal state transition from [%s] to [%s] only following state allowed [%s]', 21, false), J$.G(835073, J$.R(835065, 'self', self, false, false), 'id'), J$.G(835089, J$.R(835081, 'self', self, false, false), 'state'), J$.R(835097, 'newState', newState, false, false), J$.R(835105, 'legalStates', legalStates, false, false)));
                            }
                        } catch (J$e) {
                            J$.Ex(854169, J$e);
                        } finally {
                            if (J$.Fr(854177))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function emitSDAMEvent(self, event, description) {
                jalangiLabel5:
                    while (true) {
                        try {
                            J$.Fe(836977, arguments.callee, this, arguments);
                            arguments = J$.N(836985, 'arguments', arguments, true, false, false);
                            self = J$.N(836993, 'self', self, true, false, false);
                            event = J$.N(837001, 'event', event, true, false, false);
                            description = J$.N(837009, 'description', description, true, false, false);
                            if (J$.C(48784, J$.B(93210, '>', J$.G(836929, J$.M(836921, J$.R(836905, 'self', self, false, false), 'listeners', false)(J$.R(836913, 'event', event, false, false)), 'length'), J$.T(836937, 0, 22, false)))) {
                                J$.M(836969, J$.R(836945, 'self', self, false, false), 'emit', false)(J$.R(836953, 'event', event, false, false), J$.R(836961, 'description', description, false, false));
                            }
                        } catch (J$e) {
                            J$.Ex(854249, J$e);
                        } finally {
                            if (J$.Fr(854257))
                                continue jalangiLabel5;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function destroyServer(server, options, callback) {
                jalangiLabel7:
                    while (true) {
                        try {
                            J$.Fe(837209, arguments.callee, this, arguments);
                            arguments = J$.N(837217, 'arguments', arguments, true, false, false);
                            server = J$.N(837225, 'server', server, true, false, false);
                            options = J$.N(837233, 'options', options, true, false, false);
                            callback = J$.N(837241, 'callback', callback, true, false, false);
                            options = J$.W(837089, 'options', J$.C(48792, J$.R(837073, 'options', options, false, false)) ? J$._() : J$.T(837081, {}, 11, false), options, false, false);
                            J$.M(837169, J$.R(837097, 'SERVER_EVENTS', SERVER_EVENTS, false, true), 'forEach', false)(J$.T(837161, function (event) {
                                jalangiLabel6:
                                    while (true) {
                                        try {
                                            J$.Fe(837137, arguments.callee, this, arguments);
                                            arguments = J$.N(837145, 'arguments', arguments, true, false, false);
                                            event = J$.N(837153, 'event', event, true, false, false);
                                            return J$.Rt(837129, J$.M(837121, J$.R(837105, 'server', server, false, false), 'removeAllListeners', false)(J$.R(837113, 'event', event, false, false)));
                                        } catch (J$e) {
                                            J$.Ex(854265, J$e);
                                        } finally {
                                            if (J$.Fr(854273))
                                                continue jalangiLabel6;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            J$.M(837201, J$.R(837177, 'server', server, false, false), 'destroy', false)(J$.R(837185, 'options', options, false, false), J$.R(837193, 'callback', callback, false, false));
                        } catch (J$e) {
                            J$.Ex(854281, J$e);
                        } finally {
                            if (J$.Fr(854289))
                                continue jalangiLabel7;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function handleEvent(self) {
                jalangiLabel12:
                    while (true) {
                        try {
                            J$.Fe(838185, arguments.callee, this, arguments);
                            arguments = J$.N(838193, 'arguments', arguments, true, false, false);
                            self = J$.N(838201, 'self', self, true, false, false);
                            return J$.Rt(838177, J$.T(838169, function () {
                                jalangiLabel11:
                                    while (true) {
                                        try {
                                            J$.Fe(838153, arguments.callee, this, arguments);
                                            arguments = J$.N(838161, 'arguments', arguments, true, false, false);
                                            if (J$.C(48824, J$.C(48816, J$.B(93234, '===', J$.G(837921, J$.R(837913, 'self', self, false, false), 'state'), J$.R(837929, 'DESTROYED', DESTROYED, false, true))) ? J$._() : J$.B(93242, '===', J$.G(837945, J$.R(837937, 'self', self, false, false), 'state'), J$.R(837953, 'DESTROYING', DESTROYING, false, true)))) {
                                                return J$.Rt(837961, undefined);
                                            }
                                            J$.F(838017, J$.R(837969, 'moveServerFrom', moveServerFrom, false, true), false)(J$.G(837985, J$.R(837977, 'self', self, false, false), 'connectedProxies'), J$.G(838001, J$.R(837993, 'self', self, false, false), 'disconnectedProxies'), J$.R(838009, 'this', this, false, false));
                                            J$.F(838041, J$.R(838025, 'emitTopologyDescriptionChanged', emitTopologyDescriptionChanged, false, true), false)(J$.R(838033, 'self', self, false, false));
                                            J$.M(838081, J$.R(838049, 'self', self, false, false), 'emit', false)(J$.T(838057, 'left', 21, false), J$.T(838065, 'mongos', 21, false), J$.R(838073, 'this', this, false, false));
                                            J$.M(838145, J$.R(838089, 'self', self, false, false), 'emit', false)(J$.T(838097, 'serverClosed', 21, false), J$.T(838137, {
                                                topologyId: J$.G(838113, J$.R(838105, 'self', self, false, false), 'id'),
                                                address: J$.G(838129, J$.R(838121, 'this', this, false, false), 'name')
                                            }, 11, false));
                                        } catch (J$e) {
                                            J$.Ex(854345, J$e);
                                        } finally {
                                            if (J$.Fr(854353))
                                                continue jalangiLabel11;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                        } catch (J$e) {
                            J$.Ex(854361, J$e);
                        } finally {
                            if (J$.Fr(854369))
                                continue jalangiLabel12;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function handleInitialConnectEvent(self, event) {
                jalangiLabel14:
                    while (true) {
                        try {
                            J$.Fe(840049, arguments.callee, this, arguments);
                            arguments = J$.N(840057, 'arguments', arguments, true, false, false);
                            self = J$.N(840065, 'self', self, true, false, false);
                            event = J$.N(840073, 'event', event, true, false, false);
                            return J$.Rt(840041, J$.T(840033, function () {
                                jalangiLabel13:
                                    while (true) {
                                        try {
                                            J$.Fe(839985, arguments.callee, this, arguments);
                                            arguments = J$.N(839993, 'arguments', arguments, true, false, false);
                                            J$.N(840001, '_this', _this, false, false, false);
                                            J$.N(840009, 'i', i, false, false, false);
                                            J$.N(840017, '_i', _i, false, false, false);
                                            J$.N(840025, 'message', message, false, false, false);
                                            var _this = J$.W(838217, '_this', J$.R(838209, 'this', this, false, false), _this, false, false);
                                            if (J$.C(48832, J$.B(93250, '===', J$.G(838233, J$.R(838225, 'self', self, false, false), 'state'), J$.R(838241, 'DESTROYED', DESTROYED, false, true)))) {
                                                J$.F(838265, J$.R(838249, 'emitTopologyDescriptionChanged', emitTopologyDescriptionChanged, false, true), false)(J$.R(838257, 'self', self, false, false));
                                                J$.F(838321, J$.R(838273, 'moveServerFrom', moveServerFrom, false, true), false)(J$.G(838289, J$.R(838281, 'self', self, false, false), 'connectingProxies'), J$.G(838305, J$.R(838297, 'self', self, false, false), 'disconnectedProxies'), J$.R(838313, 'this', this, false, false));
                                                return J$.Rt(838345, J$.M(838337, J$.R(838329, 'this', this, false, false), 'destroy', false)());
                                            }
                                            if (J$.C(48888, J$.B(93258, '===', J$.R(838353, 'event', event, false, false), J$.T(838361, 'connect', 21, false)))) {
                                                J$.P(838393, J$.R(838369, 'self', self, false, false), 'ismaster', J$.M(838385, J$.R(838377, '_this', _this, false, false), 'lastIsMaster', false)());
                                                if (J$.C(48880, J$.B(93266, '===', J$.G(838417, J$.G(838409, J$.R(838401, 'self', self, false, false), 'ismaster'), 'msg'), J$.T(838425, 'isdbgrid', 21, false)))) {
                                                    for (var i = J$.W(838441, 'i', J$.T(838433, 0, 22, false), i, false, false); J$.C(48848, J$.B(93274, '<', J$.R(838449, 'i', i, false, false), J$.G(838473, J$.G(838465, J$.R(838457, 'self', self, false, false), 'connectedProxies'), 'length'))); J$.B(93298, '-', i = J$.W(838489, 'i', J$.B(93290, '+', J$.U(93282, '+', J$.R(838481, 'i', i, false, false)), 1), i, false, false), 1)) {
                                                        if (J$.C(48840, J$.B(93306, '===', J$.G(838529, J$.G(838521, J$.G(838505, J$.R(838497, 'self', self, false, false), 'connectedProxies'), J$.R(838513, 'i', i, false, false)), 'name'), J$.G(838545, J$.R(838537, '_this', _this, false, false), 'name')))) {
                                                            J$.F(838601, J$.R(838553, 'moveServerFrom', moveServerFrom, false, true), false)(J$.G(838569, J$.R(838561, 'self', self, false, false), 'connectingProxies'), J$.G(838585, J$.R(838577, 'self', self, false, false), 'disconnectedProxies'), J$.R(838593, '_this', _this, false, false));
                                                            J$.F(838625, J$.R(838609, 'emitTopologyDescriptionChanged', emitTopologyDescriptionChanged, false, true), false)(J$.R(838617, 'self', self, false, false));
                                                            J$.M(838641, J$.R(838633, '_this', _this, false, false), 'destroy', false)();
                                                            return J$.Rt(838681, J$.M(838673, J$.R(838649, 'self', self, false, false), 'emit', false)(J$.T(838657, 'failed', 21, false), J$.R(838665, '_this', _this, false, false)));
                                                        }
                                                    }
                                                    for (var _i = J$.W(838697, '_i', J$.T(838689, 0, 22, false), _i, false, false); J$.C(48856, J$.B(93314, '<', J$.R(838705, '_i', _i, false, false), J$.G(838721, J$.R(838713, 'handlers', handlers, false, true), 'length'))); J$.B(93338, '-', _i = J$.W(838737, '_i', J$.B(93330, '+', J$.U(93322, '+', J$.R(838729, '_i', _i, false, false)), 1), _i, false, false), 1)) {
                                                        J$.M(838777, J$.R(838745, '_this', _this, false, false), 'removeAllListeners', false)(J$.G(838769, J$.R(838753, 'handlers', handlers, false, true), J$.R(838761, '_i', _i, false, false)));
                                                    }
                                                    J$.M(838833, J$.R(838785, '_this', _this, false, false), 'on', false)(J$.T(838793, 'error', 21, false), J$.F(838825, J$.R(838801, 'handleEvent', handleEvent, false, true), false)(J$.R(838809, 'self', self, false, false), J$.T(838817, 'error', 21, false)));
                                                    J$.M(838889, J$.R(838841, '_this', _this, false, false), 'on', false)(J$.T(838849, 'close', 21, false), J$.F(838881, J$.R(838857, 'handleEvent', handleEvent, false, true), false)(J$.R(838865, 'self', self, false, false), J$.T(838873, 'close', 21, false)));
                                                    J$.M(838945, J$.R(838897, '_this', _this, false, false), 'on', false)(J$.T(838905, 'timeout', 21, false), J$.F(838937, J$.R(838913, 'handleEvent', handleEvent, false, true), false)(J$.R(838921, 'self', self, false, false), J$.T(838929, 'timeout', 21, false)));
                                                    J$.M(839001, J$.R(838953, '_this', _this, false, false), 'on', false)(J$.T(838961, 'parseError', 21, false), J$.F(838993, J$.R(838969, 'handleEvent', handleEvent, false, true), false)(J$.R(838977, 'self', self, false, false), J$.T(838985, 'parseError', 21, false)));
                                                    J$.F(839057, J$.R(839009, 'moveServerFrom', moveServerFrom, false, true), false)(J$.G(839025, J$.R(839017, 'self', self, false, false), 'connectingProxies'), J$.G(839041, J$.R(839033, 'self', self, false, false), 'connectedProxies'), J$.R(839049, '_this', _this, false, false));
                                                    J$.M(839097, J$.R(839065, 'self', self, false, false), 'emit', false)(J$.T(839073, 'joined', 21, false), J$.T(839081, 'mongos', 21, false), J$.R(839089, '_this', _this, false, false));
                                                } else {
                                                    if (J$.C(48872, J$.M(839129, J$.G(839121, J$.G(839113, J$.R(839105, 'self', self, false, false), 's'), 'logger'), 'isWarn', false)())) {
                                                        var message = J$.W(839145, 'message', J$.T(839137, 'expected mongos proxy, but found replicaset member mongod for server %s', 21, false), message, false, false);
                                                        if (J$.C(48864, J$.U(93346, '!', J$.G(839169, J$.G(839161, J$.R(839153, 'self', self, false, false), 'ismaster'), 'hosts')))) {
                                                            message = J$.W(839185, 'message', J$.T(839177, 'expected mongos proxy, but found standalone mongod for server %s', 21, false), message, false, false);
                                                        }
                                                        J$.M(839257, J$.G(839209, J$.G(839201, J$.R(839193, 'self', self, false, false), 's'), 'logger'), 'warn', false)(J$.F(839249, J$.R(839217, 'f', f, false, true), false)(J$.R(839225, 'message', message, false, false), J$.G(839241, J$.R(839233, '_this', _this, false, false), 'name')));
                                                    }
                                                    J$.M(839281, J$.R(839265, '_this', _this, false, false), 'destroy', false)(J$.T(839273, true, 23, false));
                                                    J$.F(839321, J$.R(839289, 'removeProxyFrom', removeProxyFrom, false, true), false)(J$.G(839305, J$.R(839297, 'self', self, false, false), 'connectingProxies'), J$.R(839313, '_this', _this, false, false));
                                                    J$.M(839361, J$.R(839329, 'self', self, false, false), 'emit', false)(J$.T(839337, 'left', 21, false), J$.T(839345, 'server', 21, false), J$.R(839353, '_this', _this, false, false));
                                                    J$.M(839393, J$.R(839369, 'self', self, false, false), 'emit', false)(J$.T(839377, 'failed', 21, false), J$.R(839385, '_this', _this, false, false));
                                                }
                                            } else {
                                                J$.F(839449, J$.R(839401, 'moveServerFrom', moveServerFrom, false, true), false)(J$.G(839417, J$.R(839409, 'self', self, false, false), 'connectingProxies'), J$.G(839433, J$.R(839425, 'self', self, false, false), 'disconnectedProxies'), J$.R(839441, 'this', this, false, false));
                                                J$.M(839489, J$.R(839457, 'self', self, false, false), 'emit', false)(J$.T(839465, 'left', 21, false), J$.T(839473, 'mongos', 21, false), J$.R(839481, 'this', this, false, false));
                                                J$.M(839521, J$.R(839497, 'self', self, false, false), 'emit', false)(J$.T(839505, 'failed', 21, false), J$.R(839513, 'this', this, false, false));
                                            }
                                            J$.F(839545, J$.R(839529, 'emitTopologyDescriptionChanged', emitTopologyDescriptionChanged, false, true), false)(J$.R(839537, 'self', self, false, false));
                                            if (J$.C(48928, J$.B(93354, '===', J$.G(839569, J$.G(839561, J$.R(839553, 'self', self, false, false), 'connectingProxies'), 'length'), J$.T(839577, 0, 22, false)))) {
                                                if (J$.C(48920, J$.C(48896, J$.B(93362, '>', J$.G(839601, J$.G(839593, J$.R(839585, 'self', self, false, false), 'connectedProxies'), 'length'), J$.T(839609, 0, 22, false))) ? J$.B(93370, '===', J$.G(839625, J$.R(839617, 'self', self, false, false), 'state'), J$.R(839633, 'CONNECTING', CONNECTING, false, true)) : J$._())) {
                                                    J$.F(839665, J$.R(839641, 'stateTransition', stateTransition, false, true), false)(J$.R(839649, 'self', self, false, false), J$.R(839657, 'CONNECTED', CONNECTED, false, true));
                                                    J$.M(839697, J$.R(839673, 'self', self, false, false), 'emit', false)(J$.T(839681, 'connect', 21, false), J$.R(839689, 'self', self, false, false));
                                                    J$.M(839729, J$.R(839705, 'self', self, false, false), 'emit', false)(J$.T(839713, 'fullsetup', 21, false), J$.R(839721, 'self', self, false, false));
                                                    J$.M(839761, J$.R(839737, 'self', self, false, false), 'emit', false)(J$.T(839745, 'all', 21, false), J$.R(839753, 'self', self, false, false));
                                                } else if (J$.C(48912, J$.B(93378, '===', J$.G(839785, J$.G(839777, J$.R(839769, 'self', self, false, false), 'disconnectedProxies'), 'length'), J$.T(839793, 0, 22, false)))) {
                                                    if (J$.C(48904, J$.M(839825, J$.G(839817, J$.G(839809, J$.R(839801, 'self', self, false, false), 's'), 'logger'), 'isWarn', false)())) {
                                                        J$.M(839881, J$.G(839849, J$.G(839841, J$.R(839833, 'self', self, false, false), 's'), 'logger'), 'warn', false)(J$.F(839873, J$.R(839857, 'f', f, false, true), false)(J$.T(839865, 'no mongos proxies found in seed list, did you mean to connect to a replicaset', 21, false)));
                                                    }
                                                    return J$.Rt(839937, J$.M(839929, J$.R(839889, 'self', self, false, false), 'emit', false)(J$.T(839897, 'error', 21, false), J$.F(839921, J$.R(839905, 'MongoError', MongoError, false, true), true)(J$.T(839913, 'no mongos proxies found in seed list', 21, false))));
                                                }
                                                J$.F(839977, J$.R(839945, 'topologyMonitor', topologyMonitor, false, true), false)(J$.R(839953, 'self', self, false, false), J$.T(839969, { firstConnect: J$.T(839961, true, 23, false) }, 11, false));
                                            }
                                        } catch (J$e) {
                                            J$.Ex(854377, J$e);
                                        } finally {
                                            if (J$.Fr(854385))
                                                continue jalangiLabel13;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                        } catch (J$e) {
                            J$.Ex(854393, J$e);
                        } finally {
                            if (J$.Fr(854401))
                                continue jalangiLabel14;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function connectProxies(self, servers) {
                jalangiLabel18:
                    while (true) {
                        try {
                            J$.Fe(840793, arguments.callee, this, arguments);
                            function connect(server, timeoutInterval) {
                                jalangiLabel16:
                                    while (true) {
                                        try {
                                            J$.Fe(840665, arguments.callee, this, arguments);
                                            arguments = J$.N(840673, 'arguments', arguments, true, false, false);
                                            server = J$.N(840681, 'server', server, true, false, false);
                                            timeoutInterval = J$.N(840689, 'timeoutInterval', timeoutInterval, true, false, false);
                                            J$.F(840657, J$.I(typeof setTimeout === 'undefined' ? setTimeout = J$.R(840145, 'setTimeout', undefined, true, true) : setTimeout = J$.R(840145, 'setTimeout', setTimeout, true, true)), false)(J$.T(840641, function () {
                                                jalangiLabel15:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(840625, arguments.callee, this, arguments);
                                                            arguments = J$.N(840633, 'arguments', arguments, true, false, false);
                                                            J$.M(840209, J$.R(840153, 'self', self, false, false), 'emit', false)(J$.T(840161, 'serverOpening', 21, false), J$.T(840201, {
                                                                topologyId: J$.G(840177, J$.R(840169, 'self', self, false, false), 'id'),
                                                                address: J$.G(840193, J$.R(840185, 'server', server, false, false), 'name')
                                                            }, 11, false));
                                                            J$.F(840233, J$.R(840217, 'emitTopologyDescriptionChanged', emitTopologyDescriptionChanged, false, true), false)(J$.R(840225, 'self', self, false, false));
                                                            J$.M(840289, J$.R(840241, 'server', server, false, false), 'once', false)(J$.T(840249, 'close', 21, false), J$.F(840281, J$.R(840257, 'handleInitialConnectEvent', handleInitialConnectEvent, false, true), false)(J$.R(840265, 'self', self, false, false), J$.T(840273, 'close', 21, false)));
                                                            J$.M(840345, J$.R(840297, 'server', server, false, false), 'once', false)(J$.T(840305, 'timeout', 21, false), J$.F(840337, J$.R(840313, 'handleInitialConnectEvent', handleInitialConnectEvent, false, true), false)(J$.R(840321, 'self', self, false, false), J$.T(840329, 'timeout', 21, false)));
                                                            J$.M(840401, J$.R(840353, 'server', server, false, false), 'once', false)(J$.T(840361, 'parseError', 21, false), J$.F(840393, J$.R(840369, 'handleInitialConnectEvent', handleInitialConnectEvent, false, true), false)(J$.R(840377, 'self', self, false, false), J$.T(840385, 'parseError', 21, false)));
                                                            J$.M(840457, J$.R(840409, 'server', server, false, false), 'once', false)(J$.T(840417, 'error', 21, false), J$.F(840449, J$.R(840425, 'handleInitialConnectEvent', handleInitialConnectEvent, false, true), false)(J$.R(840433, 'self', self, false, false), J$.T(840441, 'error', 21, false)));
                                                            J$.M(840513, J$.R(840465, 'server', server, false, false), 'once', false)(J$.T(840473, 'connect', 21, false), J$.F(840505, J$.R(840481, 'handleInitialConnectEvent', handleInitialConnectEvent, false, true), false)(J$.R(840489, 'self', self, false, false), J$.T(840497, 'connect', 21, false)));
                                                            J$.F(840577, J$.R(840521, 'relayEvents', relayEvents, false, true), false)(J$.R(840529, 'server', server, false, false), J$.R(840537, 'self', self, false, false), J$.T(840569, [
                                                                J$.T(840545, 'commandStarted', 21, false),
                                                                J$.T(840553, 'commandSucceeded', 21, false),
                                                                J$.T(840561, 'commandFailed', 21, false)
                                                            ], 10, false));
                                                            J$.M(840617, J$.R(840585, 'server', server, false, false), 'connect', false)(J$.G(840609, J$.G(840601, J$.R(840593, 'self', self, false, false), 's'), 'connectOptions'));
                                                        } catch (J$e) {
                                                            J$.Ex(854409, J$e);
                                                        } finally {
                                                            if (J$.Fr(854417))
                                                                continue jalangiLabel15;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false), J$.R(840649, 'timeoutInterval', timeoutInterval, false, false));
                                        } catch (J$e) {
                                            J$.Ex(854425, J$e);
                                        } finally {
                                            if (J$.Fr(854433))
                                                continue jalangiLabel16;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }
                            arguments = J$.N(840801, 'arguments', arguments, true, false, false);
                            self = J$.N(840809, 'self', self, true, false, false);
                            servers = J$.N(840817, 'servers', servers, true, false, false);
                            J$.N(840825, 'timeoutInterval', timeoutInterval, false, false, false);
                            connect = J$.N(840841, 'connect', J$.T(840833, connect, 12, false), true, false, false);
                            J$.P(840121, J$.R(840081, 'self', self, false, false), 'connectingProxies', J$.M(840113, J$.G(840097, J$.R(840089, 'self', self, false, false), 'connectingProxies'), 'concat', false)(J$.R(840105, 'servers', servers, false, false)));
                            var timeoutInterval = J$.W(840137, 'timeoutInterval', J$.T(840129, 0, 22, false), timeoutInterval, false, false);
                            J$.M(840785, J$.R(840697, 'servers', servers, false, false), 'forEach', false)(J$.T(840777, function (server) {
                                jalangiLabel17:
                                    while (true) {
                                        try {
                                            J$.Fe(840753, arguments.callee, this, arguments);
                                            arguments = J$.N(840761, 'arguments', arguments, true, false, false);
                                            server = J$.N(840769, 'server', server, true, false, false);
                                            return J$.Rt(840745, J$.F(840737, J$.R(840705, 'connect', connect, false, false), false)(J$.R(840713, 'server', server, false, false), J$.B(93402, '-', timeoutInterval = J$.W(840729, 'timeoutInterval', J$.B(93394, '+', J$.U(93386, '+', J$.R(840721, 'timeoutInterval', timeoutInterval, false, false)), 1), timeoutInterval, false, false), 1)));
                                        } catch (J$e) {
                                            J$.Ex(854441, J$e);
                                        } finally {
                                            if (J$.Fr(854449))
                                                continue jalangiLabel17;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                        } catch (J$e) {
                            J$.Ex(854457, J$e);
                        } finally {
                            if (J$.Fr(854465))
                                continue jalangiLabel18;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function pickProxy(self, session) {
                jalangiLabel20:
                    while (true) {
                        try {
                            J$.Fe(841569, arguments.callee, this, arguments);
                            arguments = J$.N(841577, 'arguments', arguments, true, false, false);
                            self = J$.N(841585, 'self', self, true, false, false);
                            session = J$.N(841593, 'session', session, true, false, false);
                            J$.N(841601, 'transaction', transaction, false, false, false);
                            J$.N(841609, 'connectedProxies', connectedProxies, false, false, false);
                            J$.N(841617, 'lowerBoundLatency', lowerBoundLatency, false, false, false);
                            J$.N(841625, 'i', i, false, false, false);
                            J$.N(841633, 'proxy', proxy, false, false, false);
                            var transaction = J$.W(840873, 'transaction', J$.C(48936, J$.R(840849, 'session', session, false, false)) ? J$.G(840865, J$.R(840857, 'session', session, false, false), 'transaction') : J$._(), transaction, false, false);
                            if (J$.C(48960, J$.C(48944, J$.R(840881, 'transaction', transaction, false, false)) ? J$.G(840897, J$.R(840889, 'transaction', transaction, false, false), 'server') : J$._())) {
                                if (J$.C(48952, J$.M(840921, J$.G(840913, J$.R(840905, 'transaction', transaction, false, false), 'server'), 'isConnected', false)())) {
                                    return J$.Rt(840945, J$.G(840937, J$.R(840929, 'transaction', transaction, false, false), 'server'));
                                } else {
                                    J$.M(840961, J$.R(840953, 'transaction', transaction, false, false), 'unpinServer', false)();
                                }
                            }
                            var connectedProxies = J$.W(841001, 'connectedProxies', J$.M(840993, J$.G(840977, J$.R(840969, 'self', self, false, false), 'connectedProxies'), 'slice', false)(J$.T(840985, 0, 22, false)), connectedProxies, false, false);
                            var lowerBoundLatency = J$.W(841025, 'lowerBoundLatency', J$.G(841017, J$.I(typeof Number === 'undefined' ? Number = J$.R(841009, 'Number', undefined, true, true) : Number = J$.R(841009, 'Number', Number, true, true)), 'MAX_VALUE'), lowerBoundLatency, false, false);
                            for (var i = J$.W(841041, 'i', J$.T(841033, 0, 22, false), i, false, false); J$.C(48976, J$.B(93410, '<', J$.R(841049, 'i', i, false, false), J$.G(841065, J$.R(841057, 'connectedProxies', connectedProxies, false, false), 'length'))); J$.B(93434, '-', i = J$.W(841081, 'i', J$.B(93426, '+', J$.U(93418, '+', J$.R(841073, 'i', i, false, false)), 1), i, false, false), 1)) {
                                if (J$.C(48968, J$.B(93442, '<', J$.G(841113, J$.G(841105, J$.R(841089, 'connectedProxies', connectedProxies, false, false), J$.R(841097, 'i', i, false, false)), 'lastIsMasterMS'), J$.R(841121, 'lowerBoundLatency', lowerBoundLatency, false, false)))) {
                                    lowerBoundLatency = J$.W(841161, 'lowerBoundLatency', J$.G(841153, J$.G(841145, J$.R(841129, 'connectedProxies', connectedProxies, false, false), J$.R(841137, 'i', i, false, false)), 'lastIsMasterMS'), lowerBoundLatency, false, false);
                                }
                            }
                            connectedProxies = J$.W(841297, 'connectedProxies', J$.M(841289, J$.R(841169, 'connectedProxies', connectedProxies, false, false), 'filter', false)(J$.T(841281, function (server) {
                                jalangiLabel19:
                                    while (true) {
                                        try {
                                            J$.Fe(841257, arguments.callee, this, arguments);
                                            arguments = J$.N(841265, 'arguments', arguments, true, false, false);
                                            server = J$.N(841273, 'server', server, true, false, false);
                                            if (J$.C(48992, J$.C(48984, J$.B(93458, '<=', J$.G(841185, J$.R(841177, 'server', server, false, false), 'lastIsMasterMS'), J$.B(93450, '+', J$.R(841193, 'lowerBoundLatency', lowerBoundLatency, false, false), J$.G(841217, J$.G(841209, J$.R(841201, 'self', self, false, false), 's'), 'localThresholdMS')))) ? J$.M(841233, J$.R(841225, 'server', server, false, false), 'isConnected', false)() : J$._())) {
                                                return J$.Rt(841249, J$.T(841241, true, 23, false));
                                            }
                                        } catch (J$e) {
                                            J$.Ex(854473, J$e);
                                        } finally {
                                            if (J$.Fr(854481))
                                                continue jalangiLabel19;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false)), connectedProxies, false, false);
                            var proxy;
                            if (J$.C(49000, J$.B(93466, '===', J$.G(841313, J$.R(841305, 'connectedProxies', connectedProxies, false, false), 'length'), J$.T(841321, 0, 22, false)))) {
                                proxy = J$.W(841361, 'proxy', J$.G(841353, J$.G(841337, J$.R(841329, 'self', self, false, false), 'connectedProxies'), J$.T(841345, 0, 22, false)), proxy, false, false);
                            } else {
                                proxy = J$.W(841417, 'proxy', J$.G(841409, J$.R(841369, 'connectedProxies', connectedProxies, false, false), J$.B(93474, '%', J$.G(841385, J$.R(841377, 'self', self, false, false), 'index'), J$.G(841401, J$.R(841393, 'connectedProxies', connectedProxies, false, false), 'length'))), proxy, false, false);
                                J$.P(841473, J$.R(841425, 'self', self, false, false), 'index', J$.B(93490, '%', J$.B(93482, '+', J$.G(841441, J$.R(841433, 'self', self, false, false), 'index'), J$.T(841449, 1, 22, false)), J$.G(841465, J$.R(841457, 'connectedProxies', connectedProxies, false, false), 'length')));
                            }
                            if (J$.C(49032, J$.C(49024, J$.C(49016, J$.C(49008, J$.R(841481, 'transaction', transaction, false, false)) ? J$.G(841497, J$.R(841489, 'transaction', transaction, false, false), 'isActive') : J$._()) ? J$.R(841505, 'proxy', proxy, false, false) : J$._()) ? J$.M(841521, J$.R(841513, 'proxy', proxy, false, false), 'isConnected', false)() : J$._())) {
                                J$.M(841545, J$.R(841529, 'transaction', transaction, false, false), 'pinServer', false)(J$.R(841537, 'proxy', proxy, false, false));
                            }
                            return J$.Rt(841561, J$.R(841553, 'proxy', proxy, false, false));
                        } catch (J$e) {
                            J$.Ex(854489, J$e);
                        } finally {
                            if (J$.Fr(854497))
                                continue jalangiLabel20;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function moveServerFrom(from, to, proxy) {
                jalangiLabel21:
                    while (true) {
                        try {
                            J$.Fe(841937, arguments.callee, this, arguments);
                            arguments = J$.N(841945, 'arguments', arguments, true, false, false);
                            from = J$.N(841953, 'from', from, true, false, false);
                            to = J$.N(841961, 'to', to, true, false, false);
                            proxy = J$.N(841969, 'proxy', proxy, true, false, false);
                            J$.N(841977, 'i', i, false, false, false);
                            for (var i = J$.W(841649, 'i', J$.T(841641, 0, 22, false), i, false, false); J$.C(49048, J$.B(93498, '<', J$.R(841657, 'i', i, false, false), J$.G(841673, J$.R(841665, 'from', from, false, false), 'length'))); J$.B(93522, '-', i = J$.W(841689, 'i', J$.B(93514, '+', J$.U(93506, '+', J$.R(841681, 'i', i, false, false)), 1), i, false, false), 1)) {
                                if (J$.C(49040, J$.B(93530, '===', J$.G(841721, J$.G(841713, J$.R(841697, 'from', from, false, false), J$.R(841705, 'i', i, false, false)), 'name'), J$.G(841737, J$.R(841729, 'proxy', proxy, false, false), 'name')))) {
                                    J$.M(841769, J$.R(841745, 'from', from, false, false), 'splice', false)(J$.R(841753, 'i', i, false, false), J$.T(841761, 1, 22, false));
                                }
                            }
                            for (i = J$.W(841785, 'i', J$.T(841777, 0, 22, false), i, false, false); J$.C(49064, J$.B(93538, '<', J$.R(841793, 'i', i, false, false), J$.G(841809, J$.R(841801, 'to', to, false, false), 'length'))); J$.B(93562, '-', i = J$.W(841825, 'i', J$.B(93554, '+', J$.U(93546, '+', J$.R(841817, 'i', i, false, false)), 1), i, false, false), 1)) {
                                if (J$.C(49056, J$.B(93570, '===', J$.G(841857, J$.G(841849, J$.R(841833, 'to', to, false, false), J$.R(841841, 'i', i, false, false)), 'name'), J$.G(841873, J$.R(841865, 'proxy', proxy, false, false), 'name')))) {
                                    J$.M(841905, J$.R(841881, 'to', to, false, false), 'splice', false)(J$.R(841889, 'i', i, false, false), J$.T(841897, 1, 22, false));
                                }
                            }
                            J$.M(841929, J$.R(841913, 'to', to, false, false), 'push', false)(J$.R(841921, 'proxy', proxy, false, false));
                        } catch (J$e) {
                            J$.Ex(854505, J$e);
                        } finally {
                            if (J$.Fr(854513))
                                continue jalangiLabel21;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function removeProxyFrom(from, proxy) {
                jalangiLabel22:
                    while (true) {
                        try {
                            J$.Fe(842121, arguments.callee, this, arguments);
                            arguments = J$.N(842129, 'arguments', arguments, true, false, false);
                            from = J$.N(842137, 'from', from, true, false, false);
                            proxy = J$.N(842145, 'proxy', proxy, true, false, false);
                            J$.N(842153, 'i', i, false, false, false);
                            for (var i = J$.W(841993, 'i', J$.T(841985, 0, 22, false), i, false, false); J$.C(49080, J$.B(93578, '<', J$.R(842001, 'i', i, false, false), J$.G(842017, J$.R(842009, 'from', from, false, false), 'length'))); J$.B(93602, '-', i = J$.W(842033, 'i', J$.B(93594, '+', J$.U(93586, '+', J$.R(842025, 'i', i, false, false)), 1), i, false, false), 1)) {
                                if (J$.C(49072, J$.B(93610, '===', J$.G(842065, J$.G(842057, J$.R(842041, 'from', from, false, false), J$.R(842049, 'i', i, false, false)), 'name'), J$.G(842081, J$.R(842073, 'proxy', proxy, false, false), 'name')))) {
                                    J$.M(842113, J$.R(842089, 'from', from, false, false), 'splice', false)(J$.R(842097, 'i', i, false, false), J$.T(842105, 1, 22, false));
                                }
                            }
                        } catch (J$e) {
                            J$.Ex(854521, J$e);
                        } finally {
                            if (J$.Fr(854529))
                                continue jalangiLabel22;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function reconnectProxies(self, proxies, callback) {
                jalangiLabel27:
                    while (true) {
                        try {
                            J$.Fe(844425, arguments.callee, this, arguments);
                            function execute(_server, i) {
                                jalangiLabel26:
                                    while (true) {
                                        try {
                                            J$.Fe(844289, arguments.callee, this, arguments);
                                            arguments = J$.N(844297, 'arguments', arguments, true, false, false);
                                            _server = J$.N(844305, '_server', _server, true, false, false);
                                            i = J$.N(844313, 'i', i, true, false, false);
                                            J$.F(844281, J$.I(typeof setTimeout === 'undefined' ? setTimeout = J$.R(843225, 'setTimeout', undefined, true, true) : setTimeout = J$.R(843225, 'setTimeout', setTimeout, true, true)), false)(J$.T(844265, function () {
                                                jalangiLabel25:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(844241, arguments.callee, this, arguments);
                                                            arguments = J$.N(844249, 'arguments', arguments, true, false, false);
                                                            J$.N(844257, 'server', server, false, false, false);
                                                            if (J$.C(49184, J$.C(49176, J$.C(49168, J$.B(93730, '===', J$.G(843241, J$.R(843233, 'self', self, false, false), 'state'), J$.R(843249, 'DESTROYED', DESTROYED, false, true))) ? J$._() : J$.B(93738, '===', J$.G(843265, J$.R(843257, 'self', self, false, false), 'state'), J$.R(843273, 'DESTROYING', DESTROYING, false, true))) ? J$._() : J$.B(93746, '===', J$.G(843289, J$.R(843281, 'self', self, false, false), 'state'), J$.R(843297, 'UNREFERENCED', UNREFERENCED, false, true)))) {
                                                                return J$.Rt(843305, undefined);
                                                            }
                                                            var server = J$.W(843569, 'server', J$.F(843561, J$.R(843313, 'Server', Server, false, true), true)(J$.M(843553, J$.I(typeof Object === 'undefined' ? Object = J$.R(843321, 'Object', undefined, true, true) : Object = J$.R(843321, 'Object', Object, true, true)), 'assign', false)(J$.T(843329, {}, 11, false), J$.G(843353, J$.G(843345, J$.R(843337, 'self', self, false, false), 's'), 'options'), J$.T(843545, {
                                                                host: J$.G(843401, J$.M(843385, J$.G(843369, J$.R(843361, '_server', _server, false, false), 'name'), 'split', false)(J$.T(843377, ':', 21, false)), J$.T(843393, 0, 22, false)),
                                                                port: J$.F(843473, J$.I(typeof parseInt === 'undefined' ? parseInt = J$.R(843409, 'parseInt', undefined, true, true) : parseInt = J$.R(843409, 'parseInt', parseInt, true, true)), false)(J$.G(843457, J$.M(843441, J$.G(843425, J$.R(843417, '_server', _server, false, false), 'name'), 'split', false)(J$.T(843433, ':', 21, false)), J$.T(843449, 1, 22, false)), J$.T(843465, 10, 22, false)),
                                                                reconnect: J$.T(843481, false, 23, false),
                                                                monitoring: J$.T(843489, false, 23, false),
                                                                parent: J$.R(843497, 'self', self, false, false),
                                                                clientInfo: J$.F(843537, J$.R(843505, 'clone', clone, false, true), false)(J$.G(843529, J$.G(843521, J$.R(843513, 'self', self, false, false), 's'), 'clientInfo'))
                                                            }, 11, false))), server, false, false);
                                                            J$.F(843609, J$.R(843577, 'destroyServer', destroyServer, false, true), false)(J$.R(843585, '_server', _server, false, false), J$.T(843601, { force: J$.T(843593, true, 23, false) }, 11, false));
                                                            J$.F(843649, J$.R(843617, 'removeProxyFrom', removeProxyFrom, false, true), false)(J$.G(843633, J$.R(843625, 'self', self, false, false), 'disconnectedProxies'), J$.R(843641, '_server', _server, false, false));
                                                            J$.F(843697, J$.R(843657, 'relayEvents', relayEvents, false, true), false)(J$.R(843665, 'server', server, false, false), J$.R(843673, 'self', self, false, false), J$.T(843689, [J$.T(843681, 'serverDescriptionChanged', 21, false)], 10, false));
                                                            J$.M(843817, J$.R(843705, 'self', self, false, false), 'emit', false)(J$.T(843713, 'serverOpening', 21, false), J$.T(843809, {
                                                                topologyId: J$.C(49192, J$.B(93762, '!==', J$.G(843737, J$.G(843729, J$.R(843721, 'server', server, false, false), 's'), 'topologyId'), J$.U(93754, '-', J$.T(843745, 1, 22, false)))) ? J$.G(843769, J$.G(843761, J$.R(843753, 'server', server, false, false), 's'), 'topologyId') : J$.G(843785, J$.R(843777, 'self', self, false, false), 'id'),
                                                                address: J$.G(843801, J$.R(843793, 'server', server, false, false), 'name')
                                                            }, 11, false));
                                                            J$.M(843873, J$.R(843825, 'server', server, false, false), 'once', false)(J$.T(843833, 'connect', 21, false), J$.F(843865, J$.R(843841, '_handleEvent', _handleEvent, false, false), false)(J$.R(843849, 'self', self, false, false), J$.T(843857, 'connect', 21, false)));
                                                            J$.M(843929, J$.R(843881, 'server', server, false, false), 'once', false)(J$.T(843889, 'close', 21, false), J$.F(843921, J$.R(843897, '_handleEvent', _handleEvent, false, false), false)(J$.R(843905, 'self', self, false, false), J$.T(843913, 'close', 21, false)));
                                                            J$.M(843985, J$.R(843937, 'server', server, false, false), 'once', false)(J$.T(843945, 'timeout', 21, false), J$.F(843977, J$.R(843953, '_handleEvent', _handleEvent, false, false), false)(J$.R(843961, 'self', self, false, false), J$.T(843969, 'timeout', 21, false)));
                                                            J$.M(844041, J$.R(843993, 'server', server, false, false), 'once', false)(J$.T(844001, 'error', 21, false), J$.F(844033, J$.R(844009, '_handleEvent', _handleEvent, false, false), false)(J$.R(844017, 'self', self, false, false), J$.T(844025, 'error', 21, false)));
                                                            J$.M(844097, J$.R(844049, 'server', server, false, false), 'once', false)(J$.T(844057, 'parseError', 21, false), J$.F(844089, J$.R(844065, '_handleEvent', _handleEvent, false, false), false)(J$.R(844073, 'self', self, false, false), J$.T(844081, 'parseError', 21, false)));
                                                            J$.F(844161, J$.R(844105, 'relayEvents', relayEvents, false, true), false)(J$.R(844113, 'server', server, false, false), J$.R(844121, 'self', self, false, false), J$.T(844153, [
                                                                J$.T(844129, 'commandStarted', 21, false),
                                                                J$.T(844137, 'commandSucceeded', 21, false),
                                                                J$.T(844145, 'commandFailed', 21, false)
                                                            ], 10, false));
                                                            J$.M(844193, J$.G(844177, J$.R(844169, 'self', self, false, false), 'connectingProxies'), 'push', false)(J$.R(844185, 'server', server, false, false));
                                                            J$.M(844233, J$.R(844201, 'server', server, false, false), 'connect', false)(J$.G(844225, J$.G(844217, J$.R(844209, 'self', self, false, false), 's'), 'connectOptions'));
                                                        } catch (J$e) {
                                                            J$.Ex(854569, J$e);
                                                        } finally {
                                                            if (J$.Fr(854577))
                                                                continue jalangiLabel25;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false), J$.R(844273, 'i', i, false, false));
                                        } catch (J$e) {
                                            J$.Ex(854585, J$e);
                                        } finally {
                                            if (J$.Fr(854593))
                                                continue jalangiLabel26;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }
                            arguments = J$.N(844433, 'arguments', arguments, true, false, false);
                            self = J$.N(844441, 'self', self, true, false, false);
                            proxies = J$.N(844449, 'proxies', proxies, true, false, false);
                            callback = J$.N(844457, 'callback', callback, true, false, false);
                            J$.N(844465, 'count', count, false, false, false);
                            J$.N(844473, '_handleEvent', _handleEvent, false, false, false);
                            execute = J$.N(844489, 'execute', J$.T(844481, execute, 12, false), true, false, false);
                            J$.N(844497, 'i', i, false, false, false);
                            var count = J$.W(842177, 'count', J$.G(842169, J$.R(842161, 'proxies', proxies, false, false), 'length'), count, false, false);
                            var _handleEvent = J$.W(843177, '_handleEvent', J$.T(843169, function _handleEvent(self, event) {
                                jalangiLabel24:
                                    while (true) {
                                        try {
                                            J$.Fe(843137, arguments.callee, this, arguments);
                                            arguments = J$.N(843145, 'arguments', arguments, true, false, false);
                                            self = J$.N(843153, 'self', self, true, false, false);
                                            event = J$.N(843161, 'event', event, true, false, false);
                                            return J$.Rt(843129, J$.T(843121, function () {
                                                jalangiLabel23:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(843089, arguments.callee, this, arguments);
                                                            arguments = J$.N(843097, 'arguments', arguments, true, false, false);
                                                            J$.N(843105, '_self', _self, false, false, false);
                                                            J$.N(843113, 'i', i, false, false, false);
                                                            var _self = J$.W(842193, '_self', J$.R(842185, 'this', this, false, false), _self, false, false);
                                                            count = J$.W(842217, 'count', J$.B(93618, '-', J$.R(842201, 'count', count, false, false), J$.T(842209, 1, 22, false)), count, false, false);
                                                            if (J$.C(49104, J$.C(49096, J$.C(49088, J$.B(93626, '===', J$.G(842233, J$.R(842225, 'self', self, false, false), 'state'), J$.R(842241, 'DESTROYED', DESTROYED, false, true))) ? J$._() : J$.B(93634, '===', J$.G(842257, J$.R(842249, 'self', self, false, false), 'state'), J$.R(842265, 'DESTROYING', DESTROYING, false, true))) ? J$._() : J$.B(93642, '===', J$.G(842281, J$.R(842273, 'self', self, false, false), 'state'), J$.R(842289, 'UNREFERENCED', UNREFERENCED, false, true)))) {
                                                                J$.F(842345, J$.R(842297, 'moveServerFrom', moveServerFrom, false, true), false)(J$.G(842313, J$.R(842305, 'self', self, false, false), 'connectingProxies'), J$.G(842329, J$.R(842321, 'self', self, false, false), 'disconnectedProxies'), J$.R(842337, '_self', _self, false, false));
                                                                return J$.Rt(842369, J$.M(842361, J$.R(842353, 'this', this, false, false), 'destroy', false)());
                                                            }
                                                            if (J$.C(49144, J$.B(93650, '===', J$.R(842377, 'event', event, false, false), J$.T(842385, 'connect', 21, false)))) {
                                                                if (J$.C(49128, J$.C(49120, J$.C(49112, J$.B(93658, '===', J$.G(842401, J$.R(842393, 'self', self, false, false), 'state'), J$.R(842409, 'DESTROYED', DESTROYED, false, true))) ? J$._() : J$.B(93666, '===', J$.G(842425, J$.R(842417, 'self', self, false, false), 'state'), J$.R(842433, 'DESTROYING', DESTROYING, false, true))) ? J$._() : J$.B(93674, '===', J$.G(842449, J$.R(842441, 'self', self, false, false), 'state'), J$.R(842457, 'UNREFERENCED', UNREFERENCED, false, true)))) {
                                                                    J$.F(842513, J$.R(842465, 'moveServerFrom', moveServerFrom, false, true), false)(J$.G(842481, J$.R(842473, 'self', self, false, false), 'connectingProxies'), J$.G(842497, J$.R(842489, 'self', self, false, false), 'disconnectedProxies'), J$.R(842505, '_self', _self, false, false));
                                                                    return J$.Rt(842537, J$.M(842529, J$.R(842521, '_self', _self, false, false), 'destroy', false)());
                                                                }
                                                                for (var i = J$.W(842553, 'i', J$.T(842545, 0, 22, false), i, false, false); J$.C(49136, J$.B(93682, '<', J$.R(842561, 'i', i, false, false), J$.G(842577, J$.R(842569, 'handlers', handlers, false, true), 'length'))); J$.B(93706, '-', i = J$.W(842593, 'i', J$.B(93698, '+', J$.U(93690, '+', J$.R(842585, 'i', i, false, false)), 1), i, false, false), 1)) {
                                                                    J$.M(842633, J$.R(842601, '_self', _self, false, false), 'removeAllListeners', false)(J$.G(842625, J$.R(842609, 'handlers', handlers, false, true), J$.R(842617, 'i', i, false, false)));
                                                                }
                                                                J$.M(842689, J$.R(842641, '_self', _self, false, false), 'on', false)(J$.T(842649, 'error', 21, false), J$.F(842681, J$.R(842657, 'handleEvent', handleEvent, false, true), false)(J$.R(842665, 'self', self, false, false), J$.T(842673, 'error', 21, false)));
                                                                J$.M(842745, J$.R(842697, '_self', _self, false, false), 'on', false)(J$.T(842705, 'close', 21, false), J$.F(842737, J$.R(842713, 'handleEvent', handleEvent, false, true), false)(J$.R(842721, 'self', self, false, false), J$.T(842729, 'close', 21, false)));
                                                                J$.M(842801, J$.R(842753, '_self', _self, false, false), 'on', false)(J$.T(842761, 'timeout', 21, false), J$.F(842793, J$.R(842769, 'handleEvent', handleEvent, false, true), false)(J$.R(842777, 'self', self, false, false), J$.T(842785, 'timeout', 21, false)));
                                                                J$.M(842857, J$.R(842809, '_self', _self, false, false), 'on', false)(J$.T(842817, 'parseError', 21, false), J$.F(842849, J$.R(842825, 'handleEvent', handleEvent, false, true), false)(J$.R(842833, 'self', self, false, false), J$.T(842841, 'parseError', 21, false)));
                                                                J$.F(842913, J$.R(842865, 'moveServerFrom', moveServerFrom, false, true), false)(J$.G(842881, J$.R(842873, 'self', self, false, false), 'connectingProxies'), J$.G(842897, J$.R(842889, 'self', self, false, false), 'connectedProxies'), J$.R(842905, '_self', _self, false, false));
                                                                J$.F(842937, J$.R(842921, 'emitTopologyDescriptionChanged', emitTopologyDescriptionChanged, false, true), false)(J$.R(842929, 'self', self, false, false));
                                                                J$.M(842977, J$.R(842945, 'self', self, false, false), 'emit', false)(J$.T(842953, 'joined', 21, false), J$.T(842961, 'mongos', 21, false), J$.R(842969, '_self', _self, false, false));
                                                            } else {
                                                                J$.F(843033, J$.R(842985, 'moveServerFrom', moveServerFrom, false, true), false)(J$.G(843001, J$.R(842993, 'self', self, false, false), 'connectingProxies'), J$.G(843017, J$.R(843009, 'self', self, false, false), 'disconnectedProxies'), J$.R(843025, '_self', _self, false, false));
                                                                J$.M(843049, J$.R(843041, 'this', this, false, false), 'destroy', false)();
                                                            }
                                                            if (J$.C(49152, J$.B(93714, '===', J$.R(843057, 'count', count, false, false), J$.T(843065, 0, 22, false)))) {
                                                                J$.F(843081, J$.R(843073, 'callback', callback, false, false), false)();
                                                            }
                                                        } catch (J$e) {
                                                            J$.Ex(854537, J$e);
                                                        } finally {
                                                            if (J$.Fr(854545))
                                                                continue jalangiLabel23;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false));
                                        } catch (J$e) {
                                            J$.Ex(854553, J$e);
                                        } finally {
                                            if (J$.Fr(854561))
                                                continue jalangiLabel24;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false), _handleEvent, false, false);
                            if (J$.C(49160, J$.B(93722, '===', J$.R(843185, 'count', count, false, false), J$.T(843193, 0, 22, false)))) {
                                return J$.Rt(843217, J$.F(843209, J$.R(843201, 'callback', callback, false, false), false)());
                            }
                            for (var i = J$.W(844329, 'i', J$.T(844321, 0, 22, false), i, false, false); J$.C(49200, J$.B(93770, '<', J$.R(844337, 'i', i, false, false), J$.G(844353, J$.R(844345, 'proxies', proxies, false, false), 'length'))); J$.B(93794, '-', i = J$.W(844369, 'i', J$.B(93786, '+', J$.U(93778, '+', J$.R(844361, 'i', i, false, false)), 1), i, false, false), 1)) {
                                J$.F(844417, J$.R(844377, 'execute', execute, false, false), false)(J$.G(844401, J$.R(844385, 'proxies', proxies, false, false), J$.R(844393, 'i', i, false, false)), J$.R(844409, 'i', i, false, false));
                            }
                        } catch (J$e) {
                            J$.Ex(854601, J$e);
                        } finally {
                            if (J$.Fr(854609))
                                continue jalangiLabel27;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function topologyMonitor(self, options) {
                jalangiLabel34:
                    while (true) {
                        try {
                            J$.Fe(846785, arguments.callee, this, arguments);
                            arguments = J$.N(846793, 'arguments', arguments, true, false, false);
                            self = J$.N(846801, 'self', self, true, false, false);
                            options = J$.N(846809, 'options', options, true, false, false);
                            options = J$.W(844521, 'options', J$.C(49208, J$.R(844505, 'options', options, false, false)) ? J$._() : J$.T(844513, {}, 11, false), options, false, false);
                            if (J$.C(49232, J$.C(49224, J$.C(49216, J$.B(93802, '===', J$.G(844537, J$.R(844529, 'self', self, false, false), 'state'), J$.R(844545, 'DESTROYED', DESTROYED, false, true))) ? J$._() : J$.B(93810, '===', J$.G(844561, J$.R(844553, 'self', self, false, false), 'state'), J$.R(844569, 'DESTROYING', DESTROYING, false, true))) ? J$._() : J$.B(93818, '===', J$.G(844585, J$.R(844577, 'self', self, false, false), 'state'), J$.R(844593, 'UNREFERENCED', UNREFERENCED, false, true)))) {
                                return J$.Rt(844601, undefined);
                            }
                            J$.P(846777, J$.R(844609, 'self', self, false, false), 'haTimeoutId', J$.F(846769, J$.I(typeof setTimeout === 'undefined' ? setTimeout = J$.R(844617, 'setTimeout', undefined, true, true) : setTimeout = J$.R(844617, 'setTimeout', setTimeout, true, true)), false)(J$.T(846737, function () {
                                jalangiLabel33:
                                    while (true) {
                                        try {
                                            J$.Fe(846681, arguments.callee, this, arguments);
                                            function pingServer(_self, _server, cb) {
                                                jalangiLabel29:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(845601, arguments.callee, this, arguments);
                                                            arguments = J$.N(845609, 'arguments', arguments, true, false, false);
                                                            _self = J$.N(845617, '_self', _self, true, false, false);
                                                            _server = J$.N(845625, '_server', _server, true, false, false);
                                                            cb = J$.N(845633, 'cb', cb, true, false, false);
                                                            J$.N(845641, 'start', start, false, false, false);
                                                            var start = J$.W(844865, 'start', J$.M(844857, J$.F(844849, J$.I(typeof Date === 'undefined' ? Date = J$.R(844841, 'Date', undefined, true, true) : Date = J$.R(844841, 'Date', Date, true, true)), true)(), 'getTime', false)(), start, false, false);
                                                            J$.F(844921, J$.R(844873, 'emitSDAMEvent', emitSDAMEvent, false, true), false)(J$.R(844881, 'self', self, false, false), J$.T(844889, 'serverHeartbeatStarted', 21, false), J$.T(844913, { connectionId: J$.G(844905, J$.R(844897, '_server', _server, false, false), 'name') }, 11, false));
                                                            J$.M(845593, J$.R(844929, '_server', _server, false, false), 'command', false)(J$.T(844937, 'admin.$cmd', 21, false), J$.T(844953, { ismaster: J$.T(844945, true, 23, false) }, 11, false), J$.T(845009, {
                                                                monitoring: J$.T(844961, true, 23, false),
                                                                socketTimeout: J$.C(49280, J$.G(844993, J$.G(844985, J$.G(844977, J$.R(844969, 'self', self, false, false), 's'), 'options'), 'connectionTimeout')) ? J$._() : J$.T(845001, 2000, 22, false)
                                                            }, 11, false), J$.T(845585, function (err, r) {
                                                                jalangiLabel28:
                                                                    while (true) {
                                                                        try {
                                                                            J$.Fe(845545, arguments.callee, this, arguments);
                                                                            arguments = J$.N(845553, 'arguments', arguments, true, false, false);
                                                                            err = J$.N(845561, 'err', err, true, false, false);
                                                                            r = J$.N(845569, 'r', r, true, false, false);
                                                                            J$.N(845577, 'latencyMS', latencyMS, false, false, false);
                                                                            if (J$.C(49304, J$.C(49296, J$.C(49288, J$.B(93850, '===', J$.G(845025, J$.R(845017, 'self', self, false, false), 'state'), J$.R(845033, 'DESTROYED', DESTROYED, false, true))) ? J$._() : J$.B(93858, '===', J$.G(845049, J$.R(845041, 'self', self, false, false), 'state'), J$.R(845057, 'DESTROYING', DESTROYING, false, true))) ? J$._() : J$.B(93866, '===', J$.G(845073, J$.R(845065, 'self', self, false, false), 'state'), J$.R(845081, 'UNREFERENCED', UNREFERENCED, false, true)))) {
                                                                                J$.F(845137, J$.R(845089, 'moveServerFrom', moveServerFrom, false, true), false)(J$.G(845105, J$.R(845097, 'self', self, false, false), 'connectedProxies'), J$.G(845121, J$.R(845113, 'self', self, false, false), 'disconnectedProxies'), J$.R(845129, '_server', _server, false, false));
                                                                                J$.M(845153, J$.R(845145, '_server', _server, false, false), 'destroy', false)();
                                                                                return J$.Rt(845193, J$.F(845185, J$.R(845161, 'cb', cb, false, false), false)(J$.R(845169, 'err', err, false, false), J$.R(845177, 'r', r, false, false)));
                                                                            }
                                                                            var latencyMS = J$.W(845233, 'latencyMS', J$.B(93874, '-', J$.M(845217, J$.F(845209, J$.I(typeof Date === 'undefined' ? Date = J$.R(845201, 'Date', undefined, true, true) : Date = J$.R(845201, 'Date', Date, true, true)), true)(), 'getTime', false)(), J$.R(845225, 'start', start, false, false)), latencyMS, false, false);
                                                                            if (J$.C(49312, J$.R(845241, 'err', err, false, false))) {
                                                                                J$.F(845313, J$.R(845249, 'emitSDAMEvent', emitSDAMEvent, false, true), false)(J$.R(845257, 'self', self, false, false), J$.T(845265, 'serverHeartbeatFailed', 21, false), J$.T(845305, {
                                                                                    durationMS: J$.R(845273, 'latencyMS', latencyMS, false, false),
                                                                                    failure: J$.R(845281, 'err', err, false, false),
                                                                                    connectionId: J$.G(845297, J$.R(845289, '_server', _server, false, false), 'name')
                                                                                }, 11, false));
                                                                                J$.F(845369, J$.R(845321, 'moveServerFrom', moveServerFrom, false, true), false)(J$.G(845337, J$.R(845329, 'self', self, false, false), 'connectedProxies'), J$.G(845353, J$.R(845345, 'self', self, false, false), 'disconnectedProxies'), J$.R(845361, '_server', _server, false, false));
                                                                            } else {
                                                                                J$.P(845401, J$.R(845377, '_server', _server, false, false), 'ismaster', J$.G(845393, J$.R(845385, 'r', r, false, false), 'result'));
                                                                                J$.P(845425, J$.R(845409, '_server', _server, false, false), 'lastIsMasterMS', J$.R(845417, 'latencyMS', latencyMS, false, false));
                                                                                J$.F(845505, J$.R(845433, 'emitSDAMEvent', emitSDAMEvent, false, true), false)(J$.R(845441, 'self', self, false, false), J$.T(845449, 'serverHeartbeatSucceeded', 21, false), J$.T(845497, {
                                                                                    durationMS: J$.R(845457, 'latencyMS', latencyMS, false, false),
                                                                                    reply: J$.G(845473, J$.R(845465, 'r', r, false, false), 'result'),
                                                                                    connectionId: J$.G(845489, J$.R(845481, '_server', _server, false, false), 'name')
                                                                                }, 11, false));
                                                                            }
                                                                            J$.F(845537, J$.R(845513, 'cb', cb, false, false), false)(J$.R(845521, 'err', err, false, false), J$.R(845529, 'r', r, false, false));
                                                                        } catch (J$e) {
                                                                            J$.Ex(854617, J$e);
                                                                        } finally {
                                                                            if (J$.Fr(854625))
                                                                                continue jalangiLabel28;
                                                                            else
                                                                                return J$.Ra();
                                                                        }
                                                                    }
                                                            }, 12, false));
                                                        } catch (J$e) {
                                                            J$.Ex(854633, J$e);
                                                        } finally {
                                                            if (J$.Fr(854641))
                                                                continue jalangiLabel29;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }
                                            arguments = J$.N(846689, 'arguments', arguments, true, false, false);
                                            J$.N(846697, 'proxies', proxies, false, false, false);
                                            J$.N(846705, 'count', count, false, false, false);
                                            pingServer = J$.N(846721, 'pingServer', J$.T(846713, pingServer, 12, false), true, false, false);
                                            J$.N(846729, 'i', i, false, false, false);
                                            if (J$.C(49256, J$.C(49248, J$.C(49240, J$.B(93826, '===', J$.G(844633, J$.R(844625, 'self', self, false, false), 'state'), J$.R(844641, 'DESTROYED', DESTROYED, false, true))) ? J$._() : J$.B(93834, '===', J$.G(844657, J$.R(844649, 'self', self, false, false), 'state'), J$.R(844665, 'DESTROYING', DESTROYING, false, true))) ? J$._() : J$.B(93842, '===', J$.G(844681, J$.R(844673, 'self', self, false, false), 'state'), J$.R(844689, 'UNREFERENCED', UNREFERENCED, false, true)))) {
                                                return J$.Rt(844697, undefined);
                                            }
                                            if (J$.C(49272, J$.C(49264, J$.M(844713, J$.R(844705, 'self', self, false, false), 'isConnected', false)()) ? J$.G(844737, J$.G(844729, J$.R(844721, 'self', self, false, false), 's'), 'disconnectHandler') : J$._())) {
                                                J$.M(844769, J$.G(844761, J$.G(844753, J$.R(844745, 'self', self, false, false), 's'), 'disconnectHandler'), 'execute', false)();
                                            }
                                            var proxies = J$.W(844809, 'proxies', J$.M(844801, J$.G(844785, J$.R(844777, 'self', self, false, false), 'connectedProxies'), 'slice', false)(J$.T(844793, 0, 22, false)), proxies, false, false);
                                            var count = J$.W(844833, 'count', J$.G(844825, J$.R(844817, 'proxies', proxies, false, false), 'length'), count, false, false);
                                            if (J$.C(49400, J$.B(93882, '===', J$.G(845657, J$.R(845649, 'proxies', proxies, false, false), 'length'), J$.T(845665, 0, 22, false)))) {
                                                if (J$.C(49328, J$.C(49320, J$.B(93890, '>', J$.G(845697, J$.M(845689, J$.R(845673, 'self', self, false, false), 'listeners', false)(J$.T(845681, 'close', 21, false)), 'length'), J$.T(845705, 0, 22, false))) ? J$.B(93898, '===', J$.G(845721, J$.R(845713, 'self', self, false, false), 'state'), J$.R(845729, 'CONNECTING', CONNECTING, false, true)) : J$._())) {
                                                    J$.M(845777, J$.R(845737, 'self', self, false, false), 'emit', false)(J$.T(845745, 'error', 21, false), J$.F(845769, J$.R(845753, 'MongoError', MongoError, false, true), true)(J$.T(845761, 'no mongos proxy available', 21, false)));
                                                } else {
                                                    J$.M(845809, J$.R(845785, 'self', self, false, false), 'emit', false)(J$.T(845793, 'close', 21, false), J$.R(845801, 'self', self, false, false));
                                                }
                                                return J$.Rt(846257, J$.F(846249, J$.R(845817, 'reconnectProxies', reconnectProxies, false, true), false)(J$.R(845825, 'self', self, false, false), J$.G(845841, J$.R(845833, 'self', self, false, false), 'disconnectedProxies'), J$.T(846241, function () {
                                                    jalangiLabel30:
                                                        while (true) {
                                                            try {
                                                                J$.Fe(846225, arguments.callee, this, arguments);
                                                                arguments = J$.N(846233, 'arguments', arguments, true, false, false);
                                                                if (J$.C(49352, J$.C(49344, J$.C(49336, J$.B(93906, '===', J$.G(845857, J$.R(845849, 'self', self, false, false), 'state'), J$.R(845865, 'DESTROYED', DESTROYED, false, true))) ? J$._() : J$.B(93914, '===', J$.G(845881, J$.R(845873, 'self', self, false, false), 'state'), J$.R(845889, 'DESTROYING', DESTROYING, false, true))) ? J$._() : J$.B(93922, '===', J$.G(845905, J$.R(845897, 'self', self, false, false), 'state'), J$.R(845913, 'UNREFERENCED', UNREFERENCED, false, true)))) {
                                                                    return J$.Rt(845921, undefined);
                                                                }
                                                                if (J$.C(49392, J$.C(49360, J$.B(93930, '===', J$.G(845937, J$.R(845929, 'self', self, false, false), 'state'), J$.R(845945, 'CONNECTING', CONNECTING, false, true))) ? J$.G(845961, J$.R(845953, 'options', options, false, false), 'firstConnect') : J$._())) {
                                                                    J$.M(845993, J$.R(845969, 'self', self, false, false), 'emit', false)(J$.T(845977, 'connect', 21, false), J$.R(845985, 'self', self, false, false));
                                                                    J$.M(846025, J$.R(846001, 'self', self, false, false), 'emit', false)(J$.T(846009, 'fullsetup', 21, false), J$.R(846017, 'self', self, false, false));
                                                                    J$.M(846057, J$.R(846033, 'self', self, false, false), 'emit', false)(J$.T(846041, 'all', 21, false), J$.R(846049, 'self', self, false, false));
                                                                } else if (J$.C(49384, J$.M(846073, J$.R(846065, 'self', self, false, false), 'isConnected', false)())) {
                                                                    J$.M(846105, J$.R(846081, 'self', self, false, false), 'emit', false)(J$.T(846089, 'reconnect', 21, false), J$.R(846097, 'self', self, false, false));
                                                                } else if (J$.C(49376, J$.C(49368, J$.U(93938, '!', J$.M(846121, J$.R(846113, 'self', self, false, false), 'isConnected', false)())) ? J$.B(93946, '>', J$.G(846153, J$.M(846145, J$.R(846129, 'self', self, false, false), 'listeners', false)(J$.T(846137, 'close', 21, false)), 'length'), J$.T(846161, 0, 22, false)) : J$._())) {
                                                                    J$.M(846193, J$.R(846169, 'self', self, false, false), 'emit', false)(J$.T(846177, 'close', 21, false), J$.R(846185, 'self', self, false, false));
                                                                }
                                                                J$.F(846217, J$.R(846201, 'topologyMonitor', topologyMonitor, false, true), false)(J$.R(846209, 'self', self, false, false));
                                                            } catch (J$e) {
                                                                J$.Ex(854649, J$e);
                                                            } finally {
                                                                if (J$.Fr(854657))
                                                                    continue jalangiLabel30;
                                                                else
                                                                    return J$.Ra();
                                                            }
                                                        }
                                                }, 12, false)));
                                            }
                                            for (var i = J$.W(846273, 'i', J$.T(846265, 0, 22, false), i, false, false); J$.C(49464, J$.B(93954, '<', J$.R(846281, 'i', i, false, false), J$.G(846297, J$.R(846289, 'proxies', proxies, false, false), 'length'))); J$.B(93978, '-', i = J$.W(846313, 'i', J$.B(93970, '+', J$.U(93962, '+', J$.R(846305, 'i', i, false, false)), 1), i, false, false), 1)) {
                                                J$.F(846673, J$.R(846321, 'pingServer', pingServer, false, false), false)(J$.R(846329, 'self', self, false, false), J$.G(846353, J$.R(846337, 'proxies', proxies, false, false), J$.R(846345, 'i', i, false, false)), J$.T(846665, function () {
                                                    jalangiLabel32:
                                                        while (true) {
                                                            try {
                                                                J$.Fe(846649, arguments.callee, this, arguments);
                                                                arguments = J$.N(846657, 'arguments', arguments, true, false, false);
                                                                count = J$.W(846377, 'count', J$.B(93986, '-', J$.R(846361, 'count', count, false, false), J$.T(846369, 1, 22, false)), count, false, false);
                                                                if (J$.C(49456, J$.B(93994, '===', J$.R(846385, 'count', count, false, false), J$.T(846393, 0, 22, false)))) {
                                                                    if (J$.C(49424, J$.C(49416, J$.C(49408, J$.B(94002, '===', J$.G(846409, J$.R(846401, 'self', self, false, false), 'state'), J$.R(846417, 'DESTROYED', DESTROYED, false, true))) ? J$._() : J$.B(94010, '===', J$.G(846433, J$.R(846425, 'self', self, false, false), 'state'), J$.R(846441, 'DESTROYING', DESTROYING, false, true))) ? J$._() : J$.B(94018, '===', J$.G(846457, J$.R(846449, 'self', self, false, false), 'state'), J$.R(846465, 'UNREFERENCED', UNREFERENCED, false, true)))) {
                                                                        return J$.Rt(846473, undefined);
                                                                    }
                                                                    J$.F(846641, J$.R(846481, 'reconnectProxies', reconnectProxies, false, true), false)(J$.R(846489, 'self', self, false, false), J$.G(846505, J$.R(846497, 'self', self, false, false), 'disconnectedProxies'), J$.T(846633, function () {
                                                                        jalangiLabel31:
                                                                            while (true) {
                                                                                try {
                                                                                    J$.Fe(846617, arguments.callee, this, arguments);
                                                                                    arguments = J$.N(846625, 'arguments', arguments, true, false, false);
                                                                                    if (J$.C(49448, J$.C(49440, J$.C(49432, J$.B(94026, '===', J$.G(846521, J$.R(846513, 'self', self, false, false), 'state'), J$.R(846529, 'DESTROYED', DESTROYED, false, true))) ? J$._() : J$.B(94034, '===', J$.G(846545, J$.R(846537, 'self', self, false, false), 'state'), J$.R(846553, 'DESTROYING', DESTROYING, false, true))) ? J$._() : J$.B(94042, '===', J$.G(846569, J$.R(846561, 'self', self, false, false), 'state'), J$.R(846577, 'UNREFERENCED', UNREFERENCED, false, true)))) {
                                                                                        return J$.Rt(846585, undefined);
                                                                                    }
                                                                                    J$.F(846609, J$.R(846593, 'topologyMonitor', topologyMonitor, false, true), false)(J$.R(846601, 'self', self, false, false));
                                                                                } catch (J$e) {
                                                                                    J$.Ex(854665, J$e);
                                                                                } finally {
                                                                                    if (J$.Fr(854673))
                                                                                        continue jalangiLabel31;
                                                                                    else
                                                                                        return J$.Ra();
                                                                                }
                                                                            }
                                                                    }, 12, false));
                                                                }
                                                            } catch (J$e) {
                                                                J$.Ex(854681, J$e);
                                                            } finally {
                                                                if (J$.Fr(854689))
                                                                    continue jalangiLabel32;
                                                                else
                                                                    return J$.Ra();
                                                            }
                                                        }
                                                }, 12, false));
                                            }
                                        } catch (J$e) {
                                            J$.Ex(854697, J$e);
                                        } finally {
                                            if (J$.Fr(854705))
                                                continue jalangiLabel33;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false), J$.G(846761, J$.G(846753, J$.R(846745, 'self', self, false, false), 's'), 'haInterval')));
                        } catch (J$e) {
                            J$.Ex(854713, J$e);
                        } finally {
                            if (J$.Fr(854721))
                                continue jalangiLabel34;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function executeWriteOperation(args, options, callback) {
                jalangiLabel44:
                    while (true) {
                        try {
                            J$.Fe(849033, arguments.callee, this, arguments);
                            arguments = J$.N(849041, 'arguments', arguments, true, false, false);
                            args = J$.N(849049, 'args', args, true, false, false);
                            options = J$.N(849057, 'options', options, true, false, false);
                            callback = J$.N(849065, 'callback', callback, true, false, false);
                            J$.N(849073, 'self', self, false, false, false);
                            J$.N(849081, 'op', op, false, false, false);
                            J$.N(849089, 'ns', ns, false, false, false);
                            J$.N(849097, 'ops', ops, false, false, false);
                            J$.N(849105, 'server', server, false, false, false);
                            J$.N(849113, 'willRetryWrite', willRetryWrite, false, false, false);
                            J$.N(849121, 'handler', handler, false, false, false);
                            if (J$.C(49520, J$.B(94146, '===', J$.U(94138, 'typeof', J$.R(848105, 'options', options, false, false)), J$.T(848113, 'function', 21, false))))
                                callback = J$.W(848129, 'callback', J$.R(848121, 'options', options, false, false), callback, false, false), options = J$.W(848145, 'options', J$.T(848137, {}, 11, false), options, false, false);
                            options = J$.W(848169, 'options', J$.C(49528, J$.R(848153, 'options', options, false, false)) ? J$._() : J$.T(848161, {}, 11, false), options, false, false);
                            var self = J$.W(848193, 'self', J$.G(848185, J$.R(848177, 'args', args, false, false), 'self'), self, false, false);
                            var op = J$.W(848217, 'op', J$.G(848209, J$.R(848201, 'args', args, false, false), 'op'), op, false, false);
                            var ns = J$.W(848241, 'ns', J$.G(848233, J$.R(848225, 'args', args, false, false), 'ns'), ns, false, false);
                            var ops = J$.W(848265, 'ops', J$.G(848257, J$.R(848249, 'args', args, false, false), 'ops'), ops, false, false);
                            var server = J$.W(848313, 'server', J$.F(848305, J$.R(848273, 'pickProxy', pickProxy, false, true), false)(J$.R(848281, 'self', self, false, false), J$.G(848297, J$.R(848289, 'options', options, false, false), 'session')), server, false, false);
                            if (J$.C(49536, J$.U(94154, '!', J$.R(848321, 'server', server, false, false))))
                                return J$.Rt(848369, J$.F(848361, J$.R(848329, 'callback', callback, false, false), false)(J$.F(848353, J$.R(848337, 'MongoError', MongoError, false, true), true)(J$.T(848345, 'no mongos proxy available', 21, false))));
                            var willRetryWrite = J$.W(848473, 'willRetryWrite', J$.C(49568, J$.C(49560, J$.C(49552, J$.C(49544, J$.U(94162, '!', J$.G(848385, J$.R(848377, 'args', args, false, false), 'retrying'))) ? J$.U(94178, '!', J$.U(94170, '!', J$.G(848401, J$.R(848393, 'options', options, false, false), 'retryWrites'))) : J$._()) ? J$.G(848417, J$.R(848409, 'options', options, false, false), 'session') : J$._()) ? J$.F(848441, J$.R(848425, 'isRetryableWritesSupported', isRetryableWritesSupported, false, true), false)(J$.R(848433, 'self', self, false, false)) : J$._()) ? J$.U(94186, '!', J$.M(848465, J$.G(848457, J$.R(848449, 'options', options, false, false), 'session'), 'inTransaction', false)()) : J$._(), willRetryWrite, false, false);
                            var handler = J$.W(848865, 'handler', J$.T(848857, function handler(err, result) {
                                jalangiLabel43:
                                    while (true) {
                                        try {
                                            J$.Fe(848817, arguments.callee, this, arguments);
                                            arguments = J$.N(848825, 'arguments', arguments, true, false, false);
                                            err = J$.N(848833, 'err', err, true, false, false);
                                            result = J$.N(848841, 'result', result, true, false, false);
                                            J$.N(848849, 'newArgs', newArgs, false, false, false);
                                            if (J$.C(49576, J$.U(94194, '!', J$.R(848481, 'err', err, false, false))))
                                                return J$.Rt(848521, J$.F(848513, J$.R(848489, 'callback', callback, false, false), false)(J$.T(848497, null, 25, false), J$.R(848505, 'result', result, false, false)));
                                            if (J$.C(49592, J$.C(49584, J$.U(94202, '!', J$.F(848545, J$.R(848529, 'isRetryableError', isRetryableError, false, true), false)(J$.R(848537, 'err', err, false, false)))) ? J$._() : J$.U(94210, '!', J$.R(848553, 'willRetryWrite', willRetryWrite, false, false)))) {
                                                err = J$.W(848585, 'err', J$.F(848577, J$.R(848561, 'getMMAPError', getMMAPError, false, true), false)(J$.R(848569, 'err', err, false, false)), err, false, false);
                                                return J$.Rt(848617, J$.F(848609, J$.R(848593, 'callback', callback, false, false), false)(J$.R(848601, 'err', err, false, false)));
                                            }
                                            server = J$.W(848665, 'server', J$.F(848657, J$.R(848625, 'pickProxy', pickProxy, false, true), false)(J$.R(848633, 'self', self, false, false), J$.G(848649, J$.R(848641, 'options', options, false, false), 'session')), server, false, false);
                                            if (J$.C(49600, J$.U(94218, '!', J$.R(848673, 'server', server, false, false)))) {
                                                return J$.Rt(848705, J$.F(848697, J$.R(848681, 'callback', callback, false, false), false)(J$.R(848689, 'err', err, false, false)));
                                            }
                                            var newArgs = J$.W(848761, 'newArgs', J$.M(848753, J$.I(typeof Object === 'undefined' ? Object = J$.R(848713, 'Object', undefined, true, true) : Object = J$.R(848713, 'Object', Object, true, true)), 'assign', false)(J$.T(848721, {}, 11, false), J$.R(848729, 'args', args, false, false), J$.T(848745, { retrying: J$.T(848737, true, 23, false) }, 11, false)), newArgs, false, false);
                                            return J$.Rt(848809, J$.F(848801, J$.R(848769, 'executeWriteOperation', executeWriteOperation, false, true), false)(J$.R(848777, 'newArgs', newArgs, false, false), J$.R(848785, 'options', options, false, false), J$.R(848793, 'callback', callback, false, false)));
                                        } catch (J$e) {
                                            J$.Ex(854857, J$e);
                                        } finally {
                                            if (J$.Fr(854865))
                                                continue jalangiLabel43;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false), handler, false, false);
                            if (J$.C(49608, J$.G(848881, J$.R(848873, 'callback', callback, false, false), 'operationId'))) {
                                J$.P(848913, J$.R(848889, 'handler', handler, false, false), 'operationId', J$.G(848905, J$.R(848897, 'callback', callback, false, false), 'operationId'));
                            }
                            if (J$.C(49616, J$.R(848921, 'willRetryWrite', willRetryWrite, false, false))) {
                                J$.M(848945, J$.G(848937, J$.R(848929, 'options', options, false, false), 'session'), 'incrementTransactionNumber', false)();
                                J$.P(848969, J$.R(848953, 'options', options, false, false), 'willRetryWrite', J$.R(848961, 'willRetryWrite', willRetryWrite, false, false));
                            }
                            J$.M(849025, J$.R(848977, 'server', server, false, false), J$.R(848985, 'op', op, false, false), false)(J$.R(848993, 'ns', ns, false, false), J$.R(849001, 'ops', ops, false, false), J$.R(849009, 'options', options, false, false), J$.R(849017, 'handler', handler, false, false));
                        } catch (J$e) {
                            J$.Ex(854873, J$e);
                        } finally {
                            if (J$.Fr(854881))
                                continue jalangiLabel44;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function isWriteCommand(command) {
                jalangiLabel49:
                    while (true) {
                        try {
                            J$.Fe(850777, arguments.callee, this, arguments);
                            arguments = J$.N(850785, 'arguments', arguments, true, false, false);
                            command = J$.N(850793, 'command', command, true, false, false);
                            return J$.Rt(850769, J$.M(850761, J$.R(850689, 'RETRYABLE_WRITE_OPERATIONS', RETRYABLE_WRITE_OPERATIONS, false, true), 'some', false)(J$.T(850753, function (op) {
                                jalangiLabel48:
                                    while (true) {
                                        try {
                                            J$.Fe(850729, arguments.callee, this, arguments);
                                            arguments = J$.N(850737, 'arguments', arguments, true, false, false);
                                            op = J$.N(850745, 'op', op, true, false, false);
                                            return J$.Rt(850721, J$.G(850713, J$.R(850697, 'command', command, false, false), J$.R(850705, 'op', op, false, false)));
                                        } catch (J$e) {
                                            J$.Ex(854937, J$e);
                                        } finally {
                                            if (J$.Fr(854945))
                                                continue jalangiLabel48;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false)));
                        } catch (J$e) {
                            J$.Ex(854953, J$e);
                        } finally {
                            if (J$.Fr(854961))
                                continue jalangiLabel49;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function emitTopologyDescriptionChanged(self) {
                jalangiLabel57:
                    while (true) {
                        try {
                            J$.Fe(853617, arguments.callee, this, arguments);
                            arguments = J$.N(853625, 'arguments', arguments, true, false, false);
                            self = J$.N(853633, 'self', self, true, false, false);
                            J$.N(853641, 'topology', topology, false, false, false);
                            J$.N(853649, 'description', description, false, false, false);
                            J$.N(853657, 'proxies', proxies, false, false, false);
                            J$.N(853665, 'diffResult', diffResult, false, false, false);
                            J$.N(853673, 'result', result, false, false, false);
                            if (J$.C(49992, J$.B(94546, '>', J$.G(852929, J$.M(852921, J$.R(852905, 'self', self, false, false), 'listeners', false)(J$.T(852913, 'topologyDescriptionChanged', 21, false)), 'length'), J$.T(852937, 0, 22, false)))) {
                                var topology = J$.W(852953, 'topology', J$.T(852945, 'Unknown', 21, false), topology, false, false);
                                if (J$.C(49976, J$.B(94554, '>', J$.G(852977, J$.G(852969, J$.R(852961, 'self', self, false, false), 'connectedProxies'), 'length'), J$.T(852985, 0, 22, false)))) {
                                    topology = J$.W(853001, 'topology', J$.T(852993, 'Sharded', 21, false), topology, false, false);
                                }
                                var description = J$.W(853033, 'description', J$.T(853025, {
                                    topologyType: J$.R(853009, 'topology', topology, false, false),
                                    servers: J$.T(853017, [], 10, false)
                                }, 11, false), description, false, false);
                                var proxies = J$.W(853081, 'proxies', J$.M(853073, J$.G(853049, J$.R(853041, 'self', self, false, false), 'disconnectedProxies'), 'concat', false)(J$.G(853065, J$.R(853057, 'self', self, false, false), 'connectingProxies')), proxies, false, false);
                                J$.P(853241, J$.R(853089, 'description', description, false, false), 'servers', J$.M(853233, J$.G(853105, J$.R(853097, 'description', description, false, false), 'servers'), 'concat', false)(J$.M(853225, J$.R(853113, 'proxies', proxies, false, false), 'map', false)(J$.T(853217, function (x) {
                                    jalangiLabel55:
                                        while (true) {
                                            try {
                                                J$.Fe(853185, arguments.callee, this, arguments);
                                                arguments = J$.N(853193, 'arguments', arguments, true, false, false);
                                                x = J$.N(853201, 'x', x, true, false, false);
                                                J$.N(853209, 'description', description, false, false, false);
                                                var description = J$.W(853137, 'description', J$.M(853129, J$.R(853121, 'x', x, false, false), 'getDescription', false)(), description, false, false);
                                                J$.P(853161, J$.R(853145, 'description', description, false, false), 'type', J$.T(853153, 'Unknown', 21, false));
                                                return J$.Rt(853177, J$.R(853169, 'description', description, false, false));
                                            } catch (J$e) {
                                                J$.Ex(855049, J$e);
                                            } finally {
                                                if (J$.Fr(855057))
                                                    continue jalangiLabel55;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false))));
                                J$.P(853409, J$.R(853249, 'description', description, false, false), 'servers', J$.M(853401, J$.G(853265, J$.R(853257, 'description', description, false, false), 'servers'), 'concat', false)(J$.M(853393, J$.G(853281, J$.R(853273, 'self', self, false, false), 'connectedProxies'), 'map', false)(J$.T(853385, function (x) {
                                    jalangiLabel56:
                                        while (true) {
                                            try {
                                                J$.Fe(853353, arguments.callee, this, arguments);
                                                arguments = J$.N(853361, 'arguments', arguments, true, false, false);
                                                x = J$.N(853369, 'x', x, true, false, false);
                                                J$.N(853377, 'description', description, false, false, false);
                                                var description = J$.W(853305, 'description', J$.M(853297, J$.R(853289, 'x', x, false, false), 'getDescription', false)(), description, false, false);
                                                J$.P(853329, J$.R(853313, 'description', description, false, false), 'type', J$.T(853321, 'Mongos', 21, false));
                                                return J$.Rt(853345, J$.R(853337, 'description', description, false, false));
                                            } catch (J$e) {
                                                J$.Ex(855065, J$e);
                                            } finally {
                                                if (J$.Fr(855073))
                                                    continue jalangiLabel56;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false))));
                                var diffResult = J$.W(853457, 'diffResult', J$.F(853449, J$.R(853417, 'diff', diff, false, true), false)(J$.G(853433, J$.R(853425, 'self', self, false, false), 'topologyDescription'), J$.R(853441, 'description', description, false, false)), diffResult, false, false);
                                var result = J$.W(853521, 'result', J$.T(853513, {
                                    topologyId: J$.G(853473, J$.R(853465, 'self', self, false, false), 'id'),
                                    previousDescription: J$.G(853489, J$.R(853481, 'self', self, false, false), 'topologyDescription'),
                                    newDescription: J$.R(853497, 'description', description, false, false),
                                    diff: J$.R(853505, 'diffResult', diffResult, false, false)
                                }, 11, false), result, false, false);
                                if (J$.C(49984, J$.B(94562, '>', J$.G(853545, J$.G(853537, J$.R(853529, 'diffResult', diffResult, false, false), 'servers'), 'length'), J$.T(853553, 0, 22, false)))) {
                                    J$.M(853585, J$.R(853561, 'self', self, false, false), 'emit', false)(J$.T(853569, 'topologyDescriptionChanged', 21, false), J$.R(853577, 'result', result, false, false));
                                }
                                J$.P(853609, J$.R(853593, 'self', self, false, false), 'topologyDescription', J$.R(853601, 'description', description, false, false));
                            }
                        } catch (J$e) {
                            J$.Ex(855081, J$e);
                        } finally {
                            if (J$.Fr(855089))
                                continue jalangiLabel57;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(853713, 'inherits', inherits, false, false, false);
            J$.N(853721, 'f', f, false, false, false);
            J$.N(853729, 'EventEmitter', EventEmitter, false, false, false);
            J$.N(853737, 'CoreCursor', CoreCursor, false, false, false);
            J$.N(853745, 'Logger', Logger, false, false, false);
            J$.N(853753, 'retrieveBSON', retrieveBSON, false, false, false);
            J$.N(853761, 'MongoError', MongoError, false, false, false);
            J$.N(853769, 'Server', Server, false, false, false);
            J$.N(853777, 'clone', clone, false, false, false);
            J$.N(853785, 'diff', diff, false, false, false);
            J$.N(853793, 'cloneOptions', cloneOptions, false, false, false);
            J$.N(853801, 'createClientInfo', createClientInfo, false, false, false);
            J$.N(853809, 'SessionMixins', SessionMixins, false, false, false);
            J$.N(853817, 'isRetryableWritesSupported', isRetryableWritesSupported, false, false, false);
            J$.N(853825, 'relayEvents', relayEvents, false, false, false);
            J$.N(853833, 'isRetryableError', isRetryableError, false, false, false);
            J$.N(853841, 'BSON', BSON, false, false, false);
            J$.N(853849, 'getMMAPError', getMMAPError, false, false, false);
            J$.N(853857, 'DISCONNECTED', DISCONNECTED, false, false, false);
            J$.N(853865, 'CONNECTING', CONNECTING, false, false, false);
            J$.N(853873, 'CONNECTED', CONNECTED, false, false, false);
            J$.N(853881, 'UNREFERENCED', UNREFERENCED, false, false, false);
            J$.N(853889, 'DESTROYING', DESTROYING, false, false, false);
            J$.N(853897, 'DESTROYED', DESTROYED, false, false, false);
            stateTransition = J$.N(853913, 'stateTransition', J$.T(853905, stateTransition, 12, false), true, false, false);
            J$.N(853921, 'id', id, false, false, false);
            J$.N(853929, 'handlers', handlers, false, false, false);
            J$.N(853937, 'Mongos', Mongos, false, false, false);
            emitSDAMEvent = J$.N(853953, 'emitSDAMEvent', J$.T(853945, emitSDAMEvent, 12, false), true, false, false);
            J$.N(853961, 'SERVER_EVENTS', SERVER_EVENTS, false, false, false);
            destroyServer = J$.N(853977, 'destroyServer', J$.T(853969, destroyServer, 12, false), true, false, false);
            handleEvent = J$.N(853993, 'handleEvent', J$.T(853985, handleEvent, 12, false), true, false, false);
            handleInitialConnectEvent = J$.N(854009, 'handleInitialConnectEvent', J$.T(854001, handleInitialConnectEvent, 12, false), true, false, false);
            connectProxies = J$.N(854025, 'connectProxies', J$.T(854017, connectProxies, 12, false), true, false, false);
            pickProxy = J$.N(854041, 'pickProxy', J$.T(854033, pickProxy, 12, false), true, false, false);
            moveServerFrom = J$.N(854057, 'moveServerFrom', J$.T(854049, moveServerFrom, 12, false), true, false, false);
            removeProxyFrom = J$.N(854073, 'removeProxyFrom', J$.T(854065, removeProxyFrom, 12, false), true, false, false);
            reconnectProxies = J$.N(854089, 'reconnectProxies', J$.T(854081, reconnectProxies, 12, false), true, false, false);
            topologyMonitor = J$.N(854105, 'topologyMonitor', J$.T(854097, topologyMonitor, 12, false), true, false, false);
            executeWriteOperation = J$.N(854121, 'executeWriteOperation', J$.T(854113, executeWriteOperation, 12, false), true, false, false);
            J$.N(854129, 'RETRYABLE_WRITE_OPERATIONS', RETRYABLE_WRITE_OPERATIONS, false, false, false);
            isWriteCommand = J$.N(854145, 'isWriteCommand', J$.T(854137, isWriteCommand, 12, false), true, false, false);
            emitTopologyDescriptionChanged = J$.N(854161, 'emitTopologyDescriptionChanged', J$.T(854153, emitTopologyDescriptionChanged, 12, false), true, false, false);
            J$.T(833929, 'use strict', 21, false);
            var inherits = J$.W(833969, 'inherits', J$.G(833961, J$.F(833953, J$.I(typeof require === 'undefined' ? require = J$.R(833937, 'require', undefined, true, true) : require = J$.R(833937, 'require', require, true, true)), false)(J$.T(833945, 'util', 21, false)), 'inherits'), inherits, false, true);
            var f = J$.W(834009, 'f', J$.G(834001, J$.F(833993, J$.I(typeof require === 'undefined' ? require = J$.R(833977, 'require', undefined, true, true) : require = J$.R(833977, 'require', require, true, true)), false)(J$.T(833985, 'util', 21, false)), 'format'), f, false, true);
            var EventEmitter = J$.W(834049, 'EventEmitter', J$.G(834041, J$.F(834033, J$.I(typeof require === 'undefined' ? require = J$.R(834017, 'require', undefined, true, true) : require = J$.R(834017, 'require', require, true, true)), false)(J$.T(834025, 'events', 21, false)), 'EventEmitter'), EventEmitter, false, true);
            var CoreCursor = J$.W(834089, 'CoreCursor', J$.G(834081, J$.F(834073, J$.I(typeof require === 'undefined' ? require = J$.R(834057, 'require', undefined, true, true) : require = J$.R(834057, 'require', require, true, true)), false)(J$.T(834065, '../cursor', 21, false)), 'CoreCursor'), CoreCursor, false, true);
            var Logger = J$.W(834121, 'Logger', J$.F(834113, J$.I(typeof require === 'undefined' ? require = J$.R(834097, 'require', undefined, true, true) : require = J$.R(834097, 'require', require, true, true)), false)(J$.T(834105, '../connection/logger', 21, false)), Logger, false, true);
            var retrieveBSON = J$.W(834161, 'retrieveBSON', J$.G(834153, J$.F(834145, J$.I(typeof require === 'undefined' ? require = J$.R(834129, 'require', undefined, true, true) : require = J$.R(834129, 'require', require, true, true)), false)(J$.T(834137, '../connection/utils', 21, false)), 'retrieveBSON'), retrieveBSON, false, true);
            var MongoError = J$.W(834201, 'MongoError', J$.G(834193, J$.F(834185, J$.I(typeof require === 'undefined' ? require = J$.R(834169, 'require', undefined, true, true) : require = J$.R(834169, 'require', require, true, true)), false)(J$.T(834177, '../error', 21, false)), 'MongoError'), MongoError, false, true);
            var Server = J$.W(834233, 'Server', J$.F(834225, J$.I(typeof require === 'undefined' ? require = J$.R(834209, 'require', undefined, true, true) : require = J$.R(834209, 'require', require, true, true)), false)(J$.T(834217, './server', 21, false)), Server, false, true);
            var clone = J$.W(834273, 'clone', J$.G(834265, J$.F(834257, J$.I(typeof require === 'undefined' ? require = J$.R(834241, 'require', undefined, true, true) : require = J$.R(834241, 'require', require, true, true)), false)(J$.T(834249, './shared', 21, false)), 'clone'), clone, false, true);
            var diff = J$.W(834313, 'diff', J$.G(834305, J$.F(834297, J$.I(typeof require === 'undefined' ? require = J$.R(834281, 'require', undefined, true, true) : require = J$.R(834281, 'require', require, true, true)), false)(J$.T(834289, './shared', 21, false)), 'diff'), diff, false, true);
            var cloneOptions = J$.W(834353, 'cloneOptions', J$.G(834345, J$.F(834337, J$.I(typeof require === 'undefined' ? require = J$.R(834321, 'require', undefined, true, true) : require = J$.R(834321, 'require', require, true, true)), false)(J$.T(834329, './shared', 21, false)), 'cloneOptions'), cloneOptions, false, true);
            var createClientInfo = J$.W(834393, 'createClientInfo', J$.G(834385, J$.F(834377, J$.I(typeof require === 'undefined' ? require = J$.R(834361, 'require', undefined, true, true) : require = J$.R(834361, 'require', require, true, true)), false)(J$.T(834369, './shared', 21, false)), 'createClientInfo'), createClientInfo, false, true);
            var SessionMixins = J$.W(834433, 'SessionMixins', J$.G(834425, J$.F(834417, J$.I(typeof require === 'undefined' ? require = J$.R(834401, 'require', undefined, true, true) : require = J$.R(834401, 'require', require, true, true)), false)(J$.T(834409, './shared', 21, false)), 'SessionMixins'), SessionMixins, false, true);
            var isRetryableWritesSupported = J$.W(834473, 'isRetryableWritesSupported', J$.G(834465, J$.F(834457, J$.I(typeof require === 'undefined' ? require = J$.R(834441, 'require', undefined, true, true) : require = J$.R(834441, 'require', require, true, true)), false)(J$.T(834449, './shared', 21, false)), 'isRetryableWritesSupported'), isRetryableWritesSupported, false, true);
            var relayEvents = J$.W(834513, 'relayEvents', J$.G(834505, J$.F(834497, J$.I(typeof require === 'undefined' ? require = J$.R(834481, 'require', undefined, true, true) : require = J$.R(834481, 'require', require, true, true)), false)(J$.T(834489, '../utils', 21, false)), 'relayEvents'), relayEvents, false, true);
            var isRetryableError = J$.W(834553, 'isRetryableError', J$.G(834545, J$.F(834537, J$.I(typeof require === 'undefined' ? require = J$.R(834521, 'require', undefined, true, true) : require = J$.R(834521, 'require', require, true, true)), false)(J$.T(834529, '../error', 21, false)), 'isRetryableError'), isRetryableError, false, true);
            var BSON = J$.W(834577, 'BSON', J$.F(834569, J$.R(834561, 'retrieveBSON', retrieveBSON, false, true), false)(), BSON, false, true);
            var getMMAPError = J$.W(834617, 'getMMAPError', J$.G(834609, J$.F(834601, J$.I(typeof require === 'undefined' ? require = J$.R(834585, 'require', undefined, true, true) : require = J$.R(834585, 'require', require, true, true)), false)(J$.T(834593, './shared', 21, false)), 'getMMAPError'), getMMAPError, false, true);
            var DISCONNECTED = J$.W(834633, 'DISCONNECTED', J$.T(834625, 'disconnected', 21, false), DISCONNECTED, false, true);
            var CONNECTING = J$.W(834649, 'CONNECTING', J$.T(834641, 'connecting', 21, false), CONNECTING, false, true);
            var CONNECTED = J$.W(834665, 'CONNECTED', J$.T(834657, 'connected', 21, false), CONNECTED, false, true);
            var UNREFERENCED = J$.W(834681, 'UNREFERENCED', J$.T(834673, 'unreferenced', 21, false), UNREFERENCED, false, true);
            var DESTROYING = J$.W(834697, 'DESTROYING', J$.T(834689, 'destroying', 21, false), DESTROYING, false, true);
            var DESTROYED = J$.W(834713, 'DESTROYED', J$.T(834705, 'destroyed', 21, false), DESTROYED, false, true);
            var id = J$.W(835185, 'id', J$.T(835177, 1, 22, false), id, false, true);
            var handlers = J$.W(835241, 'handlers', J$.T(835233, [
                J$.T(835193, 'connect', 21, false),
                J$.T(835201, 'close', 21, false),
                J$.T(835209, 'error', 21, false),
                J$.T(835217, 'timeout', 21, false),
                J$.T(835225, 'parseError', 21, false)
            ], 10, false), handlers, false, true);
            var Mongos = J$.W(836449, 'Mongos', J$.T(836441, function Mongos(seedlist, options) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(836409, arguments.callee, this, arguments);
                            arguments = J$.N(836417, 'arguments', arguments, true, false, false);
                            seedlist = J$.N(836425, 'seedlist', seedlist, true, false, false);
                            options = J$.N(836433, 'options', options, true, false, false);
                            options = J$.W(835265, 'options', J$.C(48688, J$.R(835249, 'options', options, false, false)) ? J$._() : J$.T(835257, {}, 11, false), options, false, false);
                            J$.P(835297, J$.R(835273, 'this', this, false, false), 'id', J$.B(93162, '-', id = J$.W(835289, 'id', J$.B(93154, '+', J$.U(93146, '+', J$.R(835281, 'id', id, false, true)), 1), id, false, true), 1));
                            J$.P(835849, J$.R(835305, 'this', this, false, false), 's', J$.T(835841, {
                                options: J$.M(835337, J$.I(typeof Object === 'undefined' ? Object = J$.R(835313, 'Object', undefined, true, true) : Object = J$.R(835313, 'Object', Object, true, true)), 'assign', false)(J$.T(835321, {}, 11, false), J$.R(835329, 'options', options, false, false)),
                                bson: J$.C(48696, J$.G(835353, J$.R(835345, 'options', options, false, false), 'bson')) ? J$._() : J$.F(835601, J$.R(835361, 'BSON', BSON, false, true), true)(J$.T(835593, [
                                    J$.G(835377, J$.R(835369, 'BSON', BSON, false, true), 'Binary'),
                                    J$.G(835393, J$.R(835385, 'BSON', BSON, false, true), 'Code'),
                                    J$.G(835409, J$.R(835401, 'BSON', BSON, false, true), 'DBRef'),
                                    J$.G(835425, J$.R(835417, 'BSON', BSON, false, true), 'Decimal128'),
                                    J$.G(835441, J$.R(835433, 'BSON', BSON, false, true), 'Double'),
                                    J$.G(835457, J$.R(835449, 'BSON', BSON, false, true), 'Int32'),
                                    J$.G(835473, J$.R(835465, 'BSON', BSON, false, true), 'Long'),
                                    J$.G(835489, J$.R(835481, 'BSON', BSON, false, true), 'Map'),
                                    J$.G(835505, J$.R(835497, 'BSON', BSON, false, true), 'MaxKey'),
                                    J$.G(835521, J$.R(835513, 'BSON', BSON, false, true), 'MinKey'),
                                    J$.G(835537, J$.R(835529, 'BSON', BSON, false, true), 'ObjectId'),
                                    J$.G(835553, J$.R(835545, 'BSON', BSON, false, true), 'BSONRegExp'),
                                    J$.G(835569, J$.R(835561, 'BSON', BSON, false, true), 'Symbol'),
                                    J$.G(835585, J$.R(835577, 'BSON', BSON, false, true), 'Timestamp')
                                ], 10, false)),
                                Cursor: J$.C(48704, J$.G(835617, J$.R(835609, 'options', options, false, false), 'cursorFactory')) ? J$._() : J$.R(835625, 'CoreCursor', CoreCursor, false, true),
                                logger: J$.F(835657, J$.R(835633, 'Logger', Logger, false, true), false)(J$.T(835641, 'Mongos', 21, false), J$.R(835649, 'options', options, false, false)),
                                seedlist: J$.R(835665, 'seedlist', seedlist, false, false),
                                haInterval: J$.C(48712, J$.G(835681, J$.R(835673, 'options', options, false, false), 'haInterval')) ? J$.G(835697, J$.R(835689, 'options', options, false, false), 'haInterval') : J$.T(835705, 10000, 22, false),
                                disconnectHandler: J$.G(835721, J$.R(835713, 'options', options, false, false), 'disconnectHandler'),
                                index: J$.T(835729, 0, 22, false),
                                connectOptions: J$.T(835737, {}, 11, false),
                                debug: J$.C(48720, J$.B(93178, '===', J$.U(93170, 'typeof', J$.G(835753, J$.R(835745, 'options', options, false, false), 'debug')), J$.T(835761, 'boolean', 21, false))) ? J$.G(835777, J$.R(835769, 'options', options, false, false), 'debug') : J$.T(835785, false, 23, false),
                                localThresholdMS: J$.C(48728, J$.G(835801, J$.R(835793, 'options', options, false, false), 'localThresholdMS')) ? J$._() : J$.T(835809, 15, 22, false),
                                clientInfo: J$.F(835833, J$.R(835817, 'createClientInfo', createClientInfo, false, true), false)(J$.R(835825, 'options', options, false, false))
                            }, 11, false));
                            J$.P(835905, J$.G(835873, J$.G(835865, J$.R(835857, 'this', this, false, false), 's'), 'options'), 'clientInfo', J$.F(835897, J$.R(835881, 'createClientInfo', createClientInfo, false, true), false)(J$.R(835889, 'options', options, false, false)));
                            if (J$.C(48752, J$.C(48744, J$.C(48736, J$.M(835937, J$.G(835929, J$.G(835921, J$.R(835913, 'this', this, false, false), 's'), 'logger'), 'isWarn', false)()) ? J$.B(93186, '!==', J$.G(835969, J$.G(835961, J$.G(835953, J$.R(835945, 'this', this, false, false), 's'), 'options'), 'socketTimeout'), J$.T(835977, 0, 22, false)) : J$._()) ? J$.B(93194, '<', J$.G(836009, J$.G(836001, J$.G(835993, J$.R(835985, 'this', this, false, false), 's'), 'options'), 'socketTimeout'), J$.G(836033, J$.G(836025, J$.R(836017, 'this', this, false, false), 's'), 'haInterval')) : J$._())) {
                                J$.M(836145, J$.G(836057, J$.G(836049, J$.R(836041, 'this', this, false, false), 's'), 'logger'), 'warn', false)(J$.F(836137, J$.R(836065, 'f', f, false, true), false)(J$.T(836073, 'warning socketTimeout %s is less than haInterval %s. This might cause unnecessary server reconnections due to socket timeouts', 21, false), J$.G(836105, J$.G(836097, J$.G(836089, J$.R(836081, 'this', this, false, false), 's'), 'options'), 'socketTimeout'), J$.G(836129, J$.G(836121, J$.R(836113, 'this', this, false, false), 's'), 'haInterval')));
                            }
                            J$.P(836169, J$.R(836153, 'this', this, false, false), 'state', J$.R(836161, 'DISCONNECTED', DISCONNECTED, false, true));
                            J$.P(836193, J$.R(836177, 'this', this, false, false), 'connectingProxies', J$.T(836185, [], 10, false));
                            J$.P(836217, J$.R(836201, 'this', this, false, false), 'connectedProxies', J$.T(836209, [], 10, false));
                            J$.P(836241, J$.R(836225, 'this', this, false, false), 'disconnectedProxies', J$.T(836233, [], 10, false));
                            J$.P(836265, J$.R(836249, 'this', this, false, false), 'index', J$.T(836257, 0, 22, false));
                            J$.P(836289, J$.R(836273, 'this', this, false, false), 'haTimeoutId', J$.T(836281, null, 25, false));
                            J$.P(836313, J$.R(836297, 'this', this, false, false), 'ismaster', J$.T(836305, null, 25, false));
                            J$.P(836353, J$.R(836321, 'this', this, false, false), 'topologyDescription', J$.T(836345, {
                                topologyType: J$.T(836329, 'Unknown', 21, false),
                                servers: J$.T(836337, [], 10, false)
                            }, 11, false));
                            J$.P(836377, J$.R(836361, 'this', this, false, false), 'clusterTime', J$.T(836369, null, 25, false));
                            J$.M(836401, J$.R(836385, 'EventEmitter', EventEmitter, false, true), 'call', false)(J$.R(836393, 'this', this, false, false));
                        } catch (J$e) {
                            J$.Ex(854185, J$e);
                        } finally {
                            if (J$.Fr(854193))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false), Mongos, false, true);
            J$.F(836481, J$.R(836457, 'inherits', inherits, false, true), false)(J$.R(836465, 'Mongos', Mongos, false, true), J$.R(836473, 'EventEmitter', EventEmitter, false, true));
            J$.M(836521, J$.I(typeof Object === 'undefined' ? Object = J$.R(836489, 'Object', undefined, true, true) : Object = J$.R(836489, 'Object', Object, true, true)), 'assign', false)(J$.G(836505, J$.R(836497, 'Mongos', Mongos, false, true), 'prototype'), J$.R(836513, 'SessionMixins', SessionMixins, false, true));
            J$.M(836617, J$.I(typeof Object === 'undefined' ? Object = J$.R(836529, 'Object', undefined, true, true) : Object = J$.R(836529, 'Object', Object, true, true)), 'defineProperty', false)(J$.G(836545, J$.R(836537, 'Mongos', Mongos, false, true), 'prototype'), J$.T(836553, 'type', 21, false), J$.T(836609, {
                enumerable: J$.T(836561, true, 23, false),
                get: J$.T(836601, function get() {
                    jalangiLabel2:
                        while (true) {
                            try {
                                J$.Fe(836585, arguments.callee, this, arguments);
                                arguments = J$.N(836593, 'arguments', arguments, true, false, false);
                                return J$.Rt(836577, J$.T(836569, 'mongos', 21, false));
                            } catch (J$e) {
                                J$.Ex(854201, J$e);
                            } finally {
                                if (J$.Fr(854209))
                                    continue jalangiLabel2;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false)
            }, 11, false));
            J$.M(836745, J$.I(typeof Object === 'undefined' ? Object = J$.R(836625, 'Object', undefined, true, true) : Object = J$.R(836625, 'Object', Object, true, true)), 'defineProperty', false)(J$.G(836641, J$.R(836633, 'Mongos', Mongos, false, true), 'prototype'), J$.T(836649, 'parserType', 21, false), J$.T(836737, {
                enumerable: J$.T(836657, true, 23, false),
                get: J$.T(836729, function get() {
                    jalangiLabel3:
                        while (true) {
                            try {
                                J$.Fe(836713, arguments.callee, this, arguments);
                                arguments = J$.N(836721, 'arguments', arguments, true, false, false);
                                return J$.Rt(836705, J$.C(48760, J$.G(836681, J$.R(836665, 'BSON', BSON, false, true), J$.T(836673, 'native', 21, false))) ? J$.T(836689, 'c++', 21, false) : J$.T(836697, 'js', 21, false));
                            } catch (J$e) {
                                J$.Ex(854217, J$e);
                            } finally {
                                if (J$.Fr(854225))
                                    continue jalangiLabel3;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false)
            }, 11, false));
            J$.M(836897, J$.I(typeof Object === 'undefined' ? Object = J$.R(836753, 'Object', undefined, true, true) : Object = J$.R(836753, 'Object', Object, true, true)), 'defineProperty', false)(J$.G(836769, J$.R(836761, 'Mongos', Mongos, false, true), 'prototype'), J$.T(836777, 'logicalSessionTimeoutMinutes', 21, false), J$.T(836889, {
                enumerable: J$.T(836785, true, 23, false),
                get: J$.T(836881, function get() {
                    jalangiLabel4:
                        while (true) {
                            try {
                                J$.Fe(836865, arguments.callee, this, arguments);
                                arguments = J$.N(836873, 'arguments', arguments, true, false, false);
                                if (J$.C(48768, J$.U(93202, '!', J$.G(836801, J$.R(836793, 'this', this, false, false), 'ismaster'))))
                                    return J$.Rt(836817, J$.T(836809, null, 25, false));
                                return J$.Rt(836857, J$.C(48776, J$.G(836841, J$.G(836833, J$.R(836825, 'this', this, false, false), 'ismaster'), 'logicalSessionTimeoutMinutes')) ? J$._() : J$.T(836849, null, 25, false));
                            } catch (J$e) {
                                J$.Ex(854233, J$e);
                            } finally {
                                if (J$.Fr(854241))
                                    continue jalangiLabel4;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false)
            }, 11, false));
            var SERVER_EVENTS = J$.W(837065, 'SERVER_EVENTS', J$.T(837057, [
                J$.T(837017, 'serverDescriptionChanged', 21, false),
                J$.T(837025, 'error', 21, false),
                J$.T(837033, 'close', 21, false),
                J$.T(837041, 'timeout', 21, false),
                J$.T(837049, 'parseError', 21, false)
            ], 10, false), SERVER_EVENTS, false, true);
            J$.P(837793, J$.G(837257, J$.R(837249, 'Mongos', Mongos, false, true), 'prototype'), 'connect', J$.T(837785, function (options) {
                jalangiLabel9:
                    while (true) {
                        try {
                            J$.Fe(837745, arguments.callee, this, arguments);
                            arguments = J$.N(837753, 'arguments', arguments, true, false, false);
                            options = J$.N(837761, 'options', options, true, false, false);
                            J$.N(837769, 'self', self, false, false, false);
                            J$.N(837777, 'servers', servers, false, false, false);
                            var self = J$.W(837273, 'self', J$.R(837265, 'this', this, false, false), self, false, false);
                            J$.P(837313, J$.G(837289, J$.R(837281, 'this', this, false, false), 's'), 'connectOptions', J$.C(48800, J$.R(837297, 'options', options, false, false)) ? J$._() : J$.T(837305, {}, 11, false));
                            J$.F(837345, J$.R(837321, 'stateTransition', stateTransition, false, true), false)(J$.R(837329, 'this', this, false, false), J$.R(837337, 'CONNECTING', CONNECTING, false, true));
                            var servers = J$.W(837649, 'servers', J$.M(837641, J$.G(837369, J$.G(837361, J$.R(837353, 'this', this, false, false), 's'), 'seedlist'), 'map', false)(J$.T(837633, function (x) {
                                jalangiLabel8:
                                    while (true) {
                                        try {
                                            J$.Fe(837601, arguments.callee, this, arguments);
                                            arguments = J$.N(837609, 'arguments', arguments, true, false, false);
                                            x = J$.N(837617, 'x', x, true, false, false);
                                            J$.N(837625, 'server', server, false, false, false);
                                            var server = J$.W(837529, 'server', J$.F(837521, J$.R(837377, 'Server', Server, false, true), true)(J$.M(837513, J$.I(typeof Object === 'undefined' ? Object = J$.R(837385, 'Object', undefined, true, true) : Object = J$.R(837385, 'Object', Object, true, true)), 'assign', false)(J$.T(837393, {}, 11, false), J$.G(837417, J$.G(837409, J$.R(837401, 'self', self, false, false), 's'), 'options'), J$.R(837425, 'x', x, false, false), J$.R(837433, 'options', options, false, false), J$.T(837505, {
                                                reconnect: J$.T(837441, false, 23, false),
                                                monitoring: J$.T(837449, false, 23, false),
                                                parent: J$.R(837457, 'self', self, false, false),
                                                clientInfo: J$.F(837497, J$.R(837465, 'clone', clone, false, true), false)(J$.G(837489, J$.G(837481, J$.R(837473, 'self', self, false, false), 's'), 'clientInfo'))
                                            }, 11, false))), server, false, false);
                                            J$.F(837577, J$.R(837537, 'relayEvents', relayEvents, false, true), false)(J$.R(837545, 'server', server, false, false), J$.R(837553, 'self', self, false, false), J$.T(837569, [J$.T(837561, 'serverDescriptionChanged', 21, false)], 10, false));
                                            return J$.Rt(837593, J$.R(837585, 'server', server, false, false));
                                        } catch (J$e) {
                                            J$.Ex(854297, J$e);
                                        } finally {
                                            if (J$.Fr(854305))
                                                continue jalangiLabel8;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false)), servers, false, false);
                            J$.F(837705, J$.R(837657, 'emitSDAMEvent', emitSDAMEvent, false, true), false)(J$.R(837665, 'this', this, false, false), J$.T(837673, 'topologyOpening', 21, false), J$.T(837697, { topologyId: J$.G(837689, J$.R(837681, 'this', this, false, false), 'id') }, 11, false));
                            J$.F(837737, J$.R(837713, 'connectProxies', connectProxies, false, true), false)(J$.R(837721, 'self', self, false, false), J$.R(837729, 'servers', servers, false, false));
                        } catch (J$e) {
                            J$.Ex(854313, J$e);
                        } finally {
                            if (J$.Fr(854321))
                                continue jalangiLabel9;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(837905, J$.G(837809, J$.R(837801, 'Mongos', Mongos, false, true), 'prototype'), 'auth', J$.T(837897, function (credentials, callback) {
                jalangiLabel10:
                    while (true) {
                        try {
                            J$.Fe(837865, arguments.callee, this, arguments);
                            arguments = J$.N(837873, 'arguments', arguments, true, false, false);
                            credentials = J$.N(837881, 'credentials', credentials, true, false, false);
                            callback = J$.N(837889, 'callback', callback, true, false, false);
                            if (J$.C(48808, J$.B(93226, '===', J$.U(93218, 'typeof', J$.R(837817, 'callback', callback, false, false)), J$.T(837825, 'function', 21, false))))
                                J$.F(837857, J$.R(837833, 'callback', callback, false, false), false)(J$.T(837841, null, 25, false), J$.T(837849, null, 25, false));
                        } catch (J$e) {
                            J$.Ex(854329, J$e);
                        } finally {
                            if (J$.Fr(854337))
                                continue jalangiLabel10;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(846881, J$.G(846825, J$.R(846817, 'Mongos', Mongos, false, true), 'prototype'), 'lastIsMaster', J$.T(846873, function () {
                jalangiLabel35:
                    while (true) {
                        try {
                            J$.Fe(846857, arguments.callee, this, arguments);
                            arguments = J$.N(846865, 'arguments', arguments, true, false, false);
                            return J$.Rt(846849, J$.G(846841, J$.R(846833, 'this', this, false, false), 'ismaster'));
                        } catch (J$e) {
                            J$.Ex(854729, J$e);
                        } finally {
                            if (J$.Fr(854737))
                                continue jalangiLabel35;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(847113, J$.G(846897, J$.R(846889, 'Mongos', Mongos, false, true), 'prototype'), 'unref', J$.T(847105, function () {
                jalangiLabel37:
                    while (true) {
                        try {
                            J$.Fe(847081, arguments.callee, this, arguments);
                            arguments = J$.N(847089, 'arguments', arguments, true, false, false);
                            J$.N(847097, 'proxies', proxies, false, false, false);
                            J$.F(846929, J$.R(846905, 'stateTransition', stateTransition, false, true), false)(J$.R(846913, 'this', this, false, false), J$.R(846921, 'UNREFERENCED', UNREFERENCED, false, true));
                            var proxies = J$.W(846977, 'proxies', J$.M(846969, J$.G(846945, J$.R(846937, 'this', this, false, false), 'connectedProxies'), 'concat', false)(J$.G(846961, J$.R(846953, 'this', this, false, false), 'connectingProxies')), proxies, false, false);
                            J$.M(847041, J$.R(846985, 'proxies', proxies, false, false), 'forEach', false)(J$.T(847033, function (x) {
                                jalangiLabel36:
                                    while (true) {
                                        try {
                                            J$.Fe(847009, arguments.callee, this, arguments);
                                            arguments = J$.N(847017, 'arguments', arguments, true, false, false);
                                            x = J$.N(847025, 'x', x, true, false, false);
                                            J$.M(847001, J$.R(846993, 'x', x, false, false), 'unref', false)();
                                        } catch (J$e) {
                                            J$.Ex(854745, J$e);
                                        } finally {
                                            if (J$.Fr(854753))
                                                continue jalangiLabel36;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            J$.F(847073, J$.I(typeof clearTimeout === 'undefined' ? clearTimeout = J$.R(847049, 'clearTimeout', undefined, true, true) : clearTimeout = J$.R(847049, 'clearTimeout', clearTimeout, true, true)), false)(J$.G(847065, J$.R(847057, 'this', this, false, false), 'haTimeoutId'));
                        } catch (J$e) {
                            J$.Ex(854761, J$e);
                        } finally {
                            if (J$.Fr(854769))
                                continue jalangiLabel37;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(847929, J$.G(847129, J$.R(847121, 'Mongos', Mongos, false, true), 'prototype'), 'destroy', J$.T(847921, function (options, callback) {
                jalangiLabel40:
                    while (true) {
                        try {
                            J$.Fe(847857, arguments.callee, this, arguments);
                            arguments = J$.N(847865, 'arguments', arguments, true, false, false);
                            options = J$.N(847873, 'options', options, true, false, false);
                            callback = J$.N(847881, 'callback', callback, true, false, false);
                            J$.N(847889, '_this2', _this2, false, false, false);
                            J$.N(847897, 'proxies', proxies, false, false, false);
                            J$.N(847905, 'serverCount', serverCount, false, false, false);
                            J$.N(847913, 'serverDestroyed', serverDestroyed, false, false, false);
                            var _this2 = J$.W(847145, '_this2', J$.R(847137, 'this', this, false, false), _this2, false, false);
                            if (J$.C(49472, J$.B(94058, '===', J$.U(94050, 'typeof', J$.R(847153, 'options', options, false, false)), J$.T(847161, 'function', 21, false)))) {
                                callback = J$.W(847177, 'callback', J$.R(847169, 'options', options, false, false), callback, false, false);
                                options = J$.W(847193, 'options', J$.T(847185, {}, 11, false), options, false, false);
                            }
                            options = J$.W(847217, 'options', J$.C(49480, J$.R(847201, 'options', options, false, false)) ? J$._() : J$.T(847209, {}, 11, false), options, false, false);
                            J$.F(847249, J$.R(847225, 'stateTransition', stateTransition, false, true), false)(J$.R(847233, 'this', this, false, false), J$.R(847241, 'DESTROYING', DESTROYING, false, true));
                            if (J$.C(49488, J$.G(847265, J$.R(847257, 'this', this, false, false), 'haTimeoutId'))) {
                                J$.F(847297, J$.I(typeof clearTimeout === 'undefined' ? clearTimeout = J$.R(847273, 'clearTimeout', undefined, true, true) : clearTimeout = J$.R(847273, 'clearTimeout', clearTimeout, true, true)), false)(J$.G(847289, J$.R(847281, 'this', this, false, false), 'haTimeoutId'));
                            }
                            var proxies = J$.W(847345, 'proxies', J$.M(847337, J$.G(847313, J$.R(847305, 'this', this, false, false), 'connectedProxies'), 'concat', false)(J$.G(847329, J$.R(847321, 'this', this, false, false), 'connectingProxies')), proxies, false, false);
                            var serverCount = J$.W(847369, 'serverCount', J$.G(847361, J$.R(847353, 'proxies', proxies, false, false), 'length'), serverCount, false, false);
                            var serverDestroyed = J$.W(847601, 'serverDestroyed', J$.T(847593, function serverDestroyed() {
                                jalangiLabel38:
                                    while (true) {
                                        try {
                                            J$.Fe(847577, arguments.callee, this, arguments);
                                            arguments = J$.N(847585, 'arguments', arguments, true, false, false);
                                            J$.B(94082, '+', serverCount = J$.W(847385, 'serverCount', J$.B(94074, '-', J$.U(94066, '+', J$.R(847377, 'serverCount', serverCount, false, false)), 1), serverCount, false, false), 1);
                                            if (J$.C(49496, J$.B(94090, '>', J$.R(847393, 'serverCount', serverCount, false, false), J$.T(847401, 0, 22, false)))) {
                                                return J$.Rt(847409, undefined);
                                            }
                                            J$.F(847433, J$.R(847417, 'emitTopologyDescriptionChanged', emitTopologyDescriptionChanged, false, true), false)(J$.R(847425, '_this2', _this2, false, false));
                                            J$.F(847489, J$.R(847441, 'emitSDAMEvent', emitSDAMEvent, false, true), false)(J$.R(847449, '_this2', _this2, false, false), J$.T(847457, 'topologyClosed', 21, false), J$.T(847481, { topologyId: J$.G(847473, J$.R(847465, '_this2', _this2, false, false), 'id') }, 11, false));
                                            J$.F(847521, J$.R(847497, 'stateTransition', stateTransition, false, true), false)(J$.R(847505, '_this2', _this2, false, false), J$.R(847513, 'DESTROYED', DESTROYED, false, true));
                                            if (J$.C(49504, J$.B(94106, '===', J$.U(94098, 'typeof', J$.R(847529, 'callback', callback, false, false)), J$.T(847537, 'function', 21, false)))) {
                                                J$.F(847569, J$.R(847545, 'callback', callback, false, false), false)(J$.T(847553, null, 25, false), J$.T(847561, null, 25, false));
                                            }
                                        } catch (J$e) {
                                            J$.Ex(854777, J$e);
                                        } finally {
                                            if (J$.Fr(854785))
                                                continue jalangiLabel38;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false), serverDestroyed, false, false);
                            if (J$.C(49512, J$.B(94114, '===', J$.R(847609, 'serverCount', serverCount, false, false), J$.T(847617, 0, 22, false)))) {
                                J$.F(847633, J$.R(847625, 'serverDestroyed', serverDestroyed, false, false), false)();
                                return J$.Rt(847641, undefined);
                            }
                            J$.M(847849, J$.R(847649, 'proxies', proxies, false, false), 'forEach', false)(J$.T(847841, function (server) {
                                jalangiLabel39:
                                    while (true) {
                                        try {
                                            J$.Fe(847817, arguments.callee, this, arguments);
                                            arguments = J$.N(847825, 'arguments', arguments, true, false, false);
                                            server = J$.N(847833, 'server', server, true, false, false);
                                            J$.M(847713, J$.R(847657, '_this2', _this2, false, false), 'emit', false)(J$.T(847665, 'serverClosed', 21, false), J$.T(847705, {
                                                topologyId: J$.G(847681, J$.R(847673, '_this2', _this2, false, false), 'id'),
                                                address: J$.G(847697, J$.R(847689, 'server', server, false, false), 'name')
                                            }, 11, false));
                                            J$.F(847753, J$.R(847721, 'destroyServer', destroyServer, false, true), false)(J$.R(847729, 'server', server, false, false), J$.R(847737, 'options', options, false, false), J$.R(847745, 'serverDestroyed', serverDestroyed, false, false));
                                            J$.F(847809, J$.R(847761, 'moveServerFrom', moveServerFrom, false, true), false)(J$.G(847777, J$.R(847769, '_this2', _this2, false, false), 'connectedProxies'), J$.G(847793, J$.R(847785, '_this2', _this2, false, false), 'disconnectedProxies'), J$.R(847801, 'server', server, false, false));
                                        } catch (J$e) {
                                            J$.Ex(854793, J$e);
                                        } finally {
                                            if (J$.Fr(854801))
                                                continue jalangiLabel39;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                        } catch (J$e) {
                            J$.Ex(854809, J$e);
                        } finally {
                            if (J$.Fr(854817))
                                continue jalangiLabel40;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(848017, J$.G(847945, J$.R(847937, 'Mongos', Mongos, false, true), 'prototype'), 'isConnected', J$.T(848009, function () {
                jalangiLabel41:
                    while (true) {
                        try {
                            J$.Fe(847993, arguments.callee, this, arguments);
                            arguments = J$.N(848001, 'arguments', arguments, true, false, false);
                            return J$.Rt(847985, J$.B(94122, '>', J$.G(847969, J$.G(847961, J$.R(847953, 'this', this, false, false), 'connectedProxies'), 'length'), J$.T(847977, 0, 22, false)));
                        } catch (J$e) {
                            J$.Ex(854825, J$e);
                        } finally {
                            if (J$.Fr(854833))
                                continue jalangiLabel41;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(848097, J$.G(848033, J$.R(848025, 'Mongos', Mongos, false, true), 'prototype'), 'isDestroyed', J$.T(848089, function () {
                jalangiLabel42:
                    while (true) {
                        try {
                            J$.Fe(848073, arguments.callee, this, arguments);
                            arguments = J$.N(848081, 'arguments', arguments, true, false, false);
                            return J$.Rt(848065, J$.B(94130, '===', J$.G(848049, J$.R(848041, 'this', this, false, false), 'state'), J$.R(848057, 'DESTROYED', DESTROYED, false, true)));
                        } catch (J$e) {
                            J$.Ex(854841, J$e);
                        } finally {
                            if (J$.Fr(854849))
                                continue jalangiLabel42;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(849625, J$.G(849137, J$.R(849129, 'Mongos', Mongos, false, true), 'prototype'), 'insert', J$.T(849617, function (ns, ops, options, callback) {
                jalangiLabel45:
                    while (true) {
                        try {
                            J$.Fe(849569, arguments.callee, this, arguments);
                            arguments = J$.N(849577, 'arguments', arguments, true, false, false);
                            ns = J$.N(849585, 'ns', ns, true, false, false);
                            ops = J$.N(849593, 'ops', ops, true, false, false);
                            options = J$.N(849601, 'options', options, true, false, false);
                            callback = J$.N(849609, 'callback', callback, true, false, false);
                            if (J$.C(49632, J$.B(94234, '===', J$.U(94226, 'typeof', J$.R(849145, 'options', options, false, false)), J$.T(849153, 'function', 21, false)))) {
                                callback = J$.W(849169, 'callback', J$.R(849161, 'options', options, false, false), callback, false, false), options = J$.W(849185, 'options', J$.T(849177, {}, 11, false), options, false, false), options = J$.W(849209, 'options', J$.C(49624, J$.R(849193, 'options', options, false, false)) ? J$._() : J$.T(849201, {}, 11, false), options, false, false);
                            }
                            if (J$.C(49640, J$.B(94242, '===', J$.G(849225, J$.R(849217, 'this', this, false, false), 'state'), J$.R(849233, 'DESTROYED', DESTROYED, false, true)))) {
                                return J$.Rt(849297, J$.F(849289, J$.R(849241, 'callback', callback, false, false), false)(J$.F(849281, J$.R(849249, 'MongoError', MongoError, false, true), true)(J$.F(849273, J$.R(849257, 'f', f, false, true), false)(J$.T(849265, 'topology was destroyed', 21, false)))));
                            }
                            if (J$.C(49656, J$.C(49648, J$.U(94250, '!', J$.M(849313, J$.R(849305, 'this', this, false, false), 'isConnected', false)())) ? J$.B(94258, '!=', J$.G(849337, J$.G(849329, J$.R(849321, 'this', this, false, false), 's'), 'disconnectHandler'), J$.T(849345, null, 25, false)) : J$._())) {
                                return J$.Rt(849425, J$.M(849417, J$.G(849369, J$.G(849361, J$.R(849353, 'this', this, false, false), 's'), 'disconnectHandler'), 'add', false)(J$.T(849377, 'insert', 21, false), J$.R(849385, 'ns', ns, false, false), J$.R(849393, 'ops', ops, false, false), J$.R(849401, 'options', options, false, false), J$.R(849409, 'callback', callback, false, false)));
                            }
                            if (J$.C(49664, J$.U(94266, '!', J$.M(849441, J$.R(849433, 'this', this, false, false), 'isConnected', false)()))) {
                                return J$.Rt(849489, J$.F(849481, J$.R(849449, 'callback', callback, false, false), false)(J$.F(849473, J$.R(849457, 'MongoError', MongoError, false, true), true)(J$.T(849465, 'no mongos proxy available', 21, false))));
                            }
                            J$.F(849561, J$.R(849497, 'executeWriteOperation', executeWriteOperation, false, true), false)(J$.T(849537, {
                                self: J$.R(849505, 'this', this, false, false),
                                op: J$.T(849513, 'insert', 21, false),
                                ns: J$.R(849521, 'ns', ns, false, false),
                                ops: J$.R(849529, 'ops', ops, false, false)
                            }, 11, false), J$.R(849545, 'options', options, false, false), J$.R(849553, 'callback', callback, false, false));
                        } catch (J$e) {
                            J$.Ex(854889, J$e);
                        } finally {
                            if (J$.Fr(854897))
                                continue jalangiLabel45;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(850129, J$.G(849641, J$.R(849633, 'Mongos', Mongos, false, true), 'prototype'), 'update', J$.T(850121, function (ns, ops, options, callback) {
                jalangiLabel46:
                    while (true) {
                        try {
                            J$.Fe(850073, arguments.callee, this, arguments);
                            arguments = J$.N(850081, 'arguments', arguments, true, false, false);
                            ns = J$.N(850089, 'ns', ns, true, false, false);
                            ops = J$.N(850097, 'ops', ops, true, false, false);
                            options = J$.N(850105, 'options', options, true, false, false);
                            callback = J$.N(850113, 'callback', callback, true, false, false);
                            if (J$.C(49680, J$.B(94282, '===', J$.U(94274, 'typeof', J$.R(849649, 'options', options, false, false)), J$.T(849657, 'function', 21, false)))) {
                                callback = J$.W(849673, 'callback', J$.R(849665, 'options', options, false, false), callback, false, false), options = J$.W(849689, 'options', J$.T(849681, {}, 11, false), options, false, false), options = J$.W(849713, 'options', J$.C(49672, J$.R(849697, 'options', options, false, false)) ? J$._() : J$.T(849705, {}, 11, false), options, false, false);
                            }
                            if (J$.C(49688, J$.B(94290, '===', J$.G(849729, J$.R(849721, 'this', this, false, false), 'state'), J$.R(849737, 'DESTROYED', DESTROYED, false, true)))) {
                                return J$.Rt(849801, J$.F(849793, J$.R(849745, 'callback', callback, false, false), false)(J$.F(849785, J$.R(849753, 'MongoError', MongoError, false, true), true)(J$.F(849777, J$.R(849761, 'f', f, false, true), false)(J$.T(849769, 'topology was destroyed', 21, false)))));
                            }
                            if (J$.C(49704, J$.C(49696, J$.U(94298, '!', J$.M(849817, J$.R(849809, 'this', this, false, false), 'isConnected', false)())) ? J$.B(94306, '!=', J$.G(849841, J$.G(849833, J$.R(849825, 'this', this, false, false), 's'), 'disconnectHandler'), J$.T(849849, null, 25, false)) : J$._())) {
                                return J$.Rt(849929, J$.M(849921, J$.G(849873, J$.G(849865, J$.R(849857, 'this', this, false, false), 's'), 'disconnectHandler'), 'add', false)(J$.T(849881, 'update', 21, false), J$.R(849889, 'ns', ns, false, false), J$.R(849897, 'ops', ops, false, false), J$.R(849905, 'options', options, false, false), J$.R(849913, 'callback', callback, false, false)));
                            }
                            if (J$.C(49712, J$.U(94314, '!', J$.M(849945, J$.R(849937, 'this', this, false, false), 'isConnected', false)()))) {
                                return J$.Rt(849993, J$.F(849985, J$.R(849953, 'callback', callback, false, false), false)(J$.F(849977, J$.R(849961, 'MongoError', MongoError, false, true), true)(J$.T(849969, 'no mongos proxy available', 21, false))));
                            }
                            J$.F(850065, J$.R(850001, 'executeWriteOperation', executeWriteOperation, false, true), false)(J$.T(850041, {
                                self: J$.R(850009, 'this', this, false, false),
                                op: J$.T(850017, 'update', 21, false),
                                ns: J$.R(850025, 'ns', ns, false, false),
                                ops: J$.R(850033, 'ops', ops, false, false)
                            }, 11, false), J$.R(850049, 'options', options, false, false), J$.R(850057, 'callback', callback, false, false));
                        } catch (J$e) {
                            J$.Ex(854905, J$e);
                        } finally {
                            if (J$.Fr(854913))
                                continue jalangiLabel46;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(850633, J$.G(850145, J$.R(850137, 'Mongos', Mongos, false, true), 'prototype'), 'remove', J$.T(850625, function (ns, ops, options, callback) {
                jalangiLabel47:
                    while (true) {
                        try {
                            J$.Fe(850577, arguments.callee, this, arguments);
                            arguments = J$.N(850585, 'arguments', arguments, true, false, false);
                            ns = J$.N(850593, 'ns', ns, true, false, false);
                            ops = J$.N(850601, 'ops', ops, true, false, false);
                            options = J$.N(850609, 'options', options, true, false, false);
                            callback = J$.N(850617, 'callback', callback, true, false, false);
                            if (J$.C(49728, J$.B(94330, '===', J$.U(94322, 'typeof', J$.R(850153, 'options', options, false, false)), J$.T(850161, 'function', 21, false)))) {
                                callback = J$.W(850177, 'callback', J$.R(850169, 'options', options, false, false), callback, false, false), options = J$.W(850193, 'options', J$.T(850185, {}, 11, false), options, false, false), options = J$.W(850217, 'options', J$.C(49720, J$.R(850201, 'options', options, false, false)) ? J$._() : J$.T(850209, {}, 11, false), options, false, false);
                            }
                            if (J$.C(49736, J$.B(94338, '===', J$.G(850233, J$.R(850225, 'this', this, false, false), 'state'), J$.R(850241, 'DESTROYED', DESTROYED, false, true)))) {
                                return J$.Rt(850305, J$.F(850297, J$.R(850249, 'callback', callback, false, false), false)(J$.F(850289, J$.R(850257, 'MongoError', MongoError, false, true), true)(J$.F(850281, J$.R(850265, 'f', f, false, true), false)(J$.T(850273, 'topology was destroyed', 21, false)))));
                            }
                            if (J$.C(49752, J$.C(49744, J$.U(94346, '!', J$.M(850321, J$.R(850313, 'this', this, false, false), 'isConnected', false)())) ? J$.B(94354, '!=', J$.G(850345, J$.G(850337, J$.R(850329, 'this', this, false, false), 's'), 'disconnectHandler'), J$.T(850353, null, 25, false)) : J$._())) {
                                return J$.Rt(850433, J$.M(850425, J$.G(850377, J$.G(850369, J$.R(850361, 'this', this, false, false), 's'), 'disconnectHandler'), 'add', false)(J$.T(850385, 'remove', 21, false), J$.R(850393, 'ns', ns, false, false), J$.R(850401, 'ops', ops, false, false), J$.R(850409, 'options', options, false, false), J$.R(850417, 'callback', callback, false, false)));
                            }
                            if (J$.C(49760, J$.U(94362, '!', J$.M(850449, J$.R(850441, 'this', this, false, false), 'isConnected', false)()))) {
                                return J$.Rt(850497, J$.F(850489, J$.R(850457, 'callback', callback, false, false), false)(J$.F(850481, J$.R(850465, 'MongoError', MongoError, false, true), true)(J$.T(850473, 'no mongos proxy available', 21, false))));
                            }
                            J$.F(850569, J$.R(850505, 'executeWriteOperation', executeWriteOperation, false, true), false)(J$.T(850545, {
                                self: J$.R(850513, 'this', this, false, false),
                                op: J$.T(850521, 'remove', 21, false),
                                ns: J$.R(850529, 'ns', ns, false, false),
                                ops: J$.R(850537, 'ops', ops, false, false)
                            }, 11, false), J$.R(850553, 'options', options, false, false), J$.R(850561, 'callback', callback, false, false));
                        } catch (J$e) {
                            J$.Ex(854921, J$e);
                        } finally {
                            if (J$.Fr(854929))
                                continue jalangiLabel47;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            var RETRYABLE_WRITE_OPERATIONS = J$.W(850681, 'RETRYABLE_WRITE_OPERATIONS', J$.T(850673, [
                J$.T(850641, 'findAndModify', 21, false),
                J$.T(850649, 'insert', 21, false),
                J$.T(850657, 'update', 21, false),
                J$.T(850665, 'delete', 21, false)
            ], 10, false), RETRYABLE_WRITE_OPERATIONS, false, true);
            J$.P(851969, J$.G(850809, J$.R(850801, 'Mongos', Mongos, false, true), 'prototype'), 'command', J$.T(851961, function (ns, cmd, options, callback) {
                jalangiLabel51:
                    while (true) {
                        try {
                            J$.Fe(851865, arguments.callee, this, arguments);
                            arguments = J$.N(851873, 'arguments', arguments, true, false, false);
                            ns = J$.N(851881, 'ns', ns, true, false, false);
                            cmd = J$.N(851889, 'cmd', cmd, true, false, false);
                            options = J$.N(851897, 'options', options, true, false, false);
                            callback = J$.N(851905, 'callback', callback, true, false, false);
                            J$.N(851913, '_this3', _this3, false, false, false);
                            J$.N(851921, 'self', self, false, false, false);
                            J$.N(851929, 'server', server, false, false, false);
                            J$.N(851937, 'clonedOptions', clonedOptions, false, false, false);
                            J$.N(851945, 'willRetryWrite', willRetryWrite, false, false, false);
                            J$.N(851953, 'cb', cb, false, false, false);
                            var _this3 = J$.W(850825, '_this3', J$.R(850817, 'this', this, false, false), _this3, false, false);
                            if (J$.C(49776, J$.B(94378, '===', J$.U(94370, 'typeof', J$.R(850833, 'options', options, false, false)), J$.T(850841, 'function', 21, false)))) {
                                callback = J$.W(850857, 'callback', J$.R(850849, 'options', options, false, false), callback, false, false), options = J$.W(850873, 'options', J$.T(850865, {}, 11, false), options, false, false), options = J$.W(850897, 'options', J$.C(49768, J$.R(850881, 'options', options, false, false)) ? J$._() : J$.T(850889, {}, 11, false), options, false, false);
                            }
                            if (J$.C(49784, J$.B(94386, '===', J$.G(850913, J$.R(850905, 'this', this, false, false), 'state'), J$.R(850921, 'DESTROYED', DESTROYED, false, true)))) {
                                return J$.Rt(850985, J$.F(850977, J$.R(850929, 'callback', callback, false, false), false)(J$.F(850969, J$.R(850937, 'MongoError', MongoError, false, true), true)(J$.F(850961, J$.R(850945, 'f', f, false, true), false)(J$.T(850953, 'topology was destroyed', 21, false)))));
                            }
                            var self = J$.W(851001, 'self', J$.R(850993, 'this', this, false, false), self, false, false);
                            var server = J$.W(851049, 'server', J$.F(851041, J$.R(851009, 'pickProxy', pickProxy, false, true), false)(J$.R(851017, 'self', self, false, false), J$.G(851033, J$.R(851025, 'options', options, false, false), 'session')), server, false, false);
                            if (J$.C(49808, J$.C(49800, J$.C(49792, J$.B(94394, '==', J$.R(851057, 'server', server, false, false), J$.T(851065, null, 25, false))) ? J$._() : J$.U(94402, '!', J$.M(851081, J$.R(851073, 'server', server, false, false), 'isConnected', false)())) ? J$.B(94410, '!=', J$.G(851105, J$.G(851097, J$.R(851089, 'this', this, false, false), 's'), 'disconnectHandler'), J$.T(851113, null, 25, false)) : J$._())) {
                                return J$.Rt(851193, J$.M(851185, J$.G(851137, J$.G(851129, J$.R(851121, 'this', this, false, false), 's'), 'disconnectHandler'), 'add', false)(J$.T(851145, 'command', 21, false), J$.R(851153, 'ns', ns, false, false), J$.R(851161, 'cmd', cmd, false, false), J$.R(851169, 'options', options, false, false), J$.R(851177, 'callback', callback, false, false)));
                            }
                            if (J$.C(49816, J$.B(94418, '==', J$.R(851201, 'server', server, false, false), J$.T(851209, null, 25, false)))) {
                                return J$.Rt(851257, J$.F(851249, J$.R(851217, 'callback', callback, false, false), false)(J$.F(851241, J$.R(851225, 'MongoError', MongoError, false, true), true)(J$.T(851233, 'no mongos proxy available', 21, false))));
                            }
                            var clonedOptions = J$.W(851289, 'clonedOptions', J$.F(851281, J$.R(851265, 'cloneOptions', cloneOptions, false, true), false)(J$.R(851273, 'options', options, false, false)), clonedOptions, false, false);
                            J$.P(851313, J$.R(851297, 'clonedOptions', clonedOptions, false, false), 'topology', J$.R(851305, 'self', self, false, false));
                            var willRetryWrite = J$.W(851441, 'willRetryWrite', J$.C(49856, J$.C(49848, J$.C(49840, J$.C(49832, J$.C(49824, J$.U(94426, '!', J$.G(851329, J$.R(851321, 'options', options, false, false), 'retrying'))) ? J$.G(851345, J$.R(851337, 'options', options, false, false), 'retryWrites') : J$._()) ? J$.G(851361, J$.R(851353, 'options', options, false, false), 'session') : J$._()) ? J$.F(851385, J$.R(851369, 'isRetryableWritesSupported', isRetryableWritesSupported, false, true), false)(J$.R(851377, 'self', self, false, false)) : J$._()) ? J$.U(94434, '!', J$.M(851409, J$.G(851401, J$.R(851393, 'options', options, false, false), 'session'), 'inTransaction', false)()) : J$._()) ? J$.F(851433, J$.R(851417, 'isWriteCommand', isWriteCommand, false, true), false)(J$.R(851425, 'cmd', cmd, false, false)) : J$._(), willRetryWrite, false, false);
                            var cb = J$.W(851753, 'cb', J$.T(851745, function cb(err, result) {
                                jalangiLabel50:
                                    while (true) {
                                        try {
                                            J$.Fe(851705, arguments.callee, this, arguments);
                                            arguments = J$.N(851713, 'arguments', arguments, true, false, false);
                                            err = J$.N(851721, 'err', err, true, false, false);
                                            result = J$.N(851729, 'result', result, true, false, false);
                                            J$.N(851737, 'newOptions', newOptions, false, false, false);
                                            if (J$.C(49864, J$.U(94442, '!', J$.R(851449, 'err', err, false, false))))
                                                return J$.Rt(851489, J$.F(851481, J$.R(851457, 'callback', callback, false, false), false)(J$.T(851465, null, 25, false), J$.R(851473, 'result', result, false, false)));
                                            if (J$.C(49872, J$.U(94450, '!', J$.F(851513, J$.R(851497, 'isRetryableError', isRetryableError, false, true), false)(J$.R(851505, 'err', err, false, false))))) {
                                                return J$.Rt(851545, J$.F(851537, J$.R(851521, 'callback', callback, false, false), false)(J$.R(851529, 'err', err, false, false)));
                                            }
                                            if (J$.C(49880, J$.R(851553, 'willRetryWrite', willRetryWrite, false, false))) {
                                                var newOptions = J$.W(851609, 'newOptions', J$.M(851601, J$.I(typeof Object === 'undefined' ? Object = J$.R(851561, 'Object', undefined, true, true) : Object = J$.R(851561, 'Object', Object, true, true)), 'assign', false)(J$.T(851569, {}, 11, false), J$.R(851577, 'clonedOptions', clonedOptions, false, false), J$.T(851593, { retrying: J$.T(851585, true, 23, false) }, 11, false)), newOptions, false, false);
                                                return J$.Rt(851665, J$.M(851657, J$.R(851617, '_this3', _this3, false, false), 'command', false)(J$.R(851625, 'ns', ns, false, false), J$.R(851633, 'cmd', cmd, false, false), J$.R(851641, 'newOptions', newOptions, false, false), J$.R(851649, 'callback', callback, false, false)));
                                            }
                                            return J$.Rt(851697, J$.F(851689, J$.R(851673, 'callback', callback, false, false), false)(J$.R(851681, 'err', err, false, false)));
                                        } catch (J$e) {
                                            J$.Ex(854969, J$e);
                                        } finally {
                                            if (J$.Fr(854977))
                                                continue jalangiLabel50;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false), cb, false, false);
                            if (J$.C(49888, J$.R(851761, 'willRetryWrite', willRetryWrite, false, false))) {
                                J$.M(851785, J$.G(851777, J$.R(851769, 'options', options, false, false), 'session'), 'incrementTransactionNumber', false)();
                                J$.P(851809, J$.R(851793, 'options', options, false, false), 'willRetryWrite', J$.R(851801, 'willRetryWrite', willRetryWrite, false, false));
                            }
                            J$.M(851857, J$.R(851817, 'server', server, false, false), 'command', false)(J$.R(851825, 'ns', ns, false, false), J$.R(851833, 'cmd', cmd, false, false), J$.R(851841, 'clonedOptions', clonedOptions, false, false), J$.R(851849, 'cb', cb, false, false));
                        } catch (J$e) {
                            J$.Ex(854985, J$e);
                        } finally {
                            if (J$.Fr(854993))
                                continue jalangiLabel51;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(852217, J$.G(851985, J$.R(851977, 'Mongos', Mongos, false, true), 'prototype'), 'cursor', J$.T(852209, function (ns, cmd, options) {
                jalangiLabel52:
                    while (true) {
                        try {
                            J$.Fe(852153, arguments.callee, this, arguments);
                            arguments = J$.N(852161, 'arguments', arguments, true, false, false);
                            ns = J$.N(852169, 'ns', ns, true, false, false);
                            cmd = J$.N(852177, 'cmd', cmd, true, false, false);
                            options = J$.N(852185, 'options', options, true, false, false);
                            J$.N(852193, 'topology', topology, false, false, false);
                            J$.N(852201, 'FinalCursor', FinalCursor, false, false, false);
                            options = J$.W(852009, 'options', J$.C(49896, J$.R(851993, 'options', options, false, false)) ? J$._() : J$.T(852001, {}, 11, false), options, false, false);
                            var topology = J$.W(852041, 'topology', J$.C(49904, J$.G(852025, J$.R(852017, 'options', options, false, false), 'topology')) ? J$._() : J$.R(852033, 'this', this, false, false), topology, false, false);
                            var FinalCursor = J$.W(852089, 'FinalCursor', J$.C(49912, J$.G(852057, J$.R(852049, 'options', options, false, false), 'cursorFactory')) ? J$._() : J$.G(852081, J$.G(852073, J$.R(852065, 'this', this, false, false), 's'), 'Cursor'), FinalCursor, false, false);
                            return J$.Rt(852145, J$.F(852137, J$.R(852097, 'FinalCursor', FinalCursor, false, false), true)(J$.R(852105, 'topology', topology, false, false), J$.R(852113, 'ns', ns, false, false), J$.R(852121, 'cmd', cmd, false, false), J$.R(852129, 'options', options, false, false)));
                        } catch (J$e) {
                            J$.Ex(855001, J$e);
                        } finally {
                            if (J$.Fr(855009))
                                continue jalangiLabel52;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(852673, J$.G(852233, J$.R(852225, 'Mongos', Mongos, false, true), 'prototype'), 'selectServer', J$.T(852665, function (selector, options, callback) {
                jalangiLabel53:
                    while (true) {
                        try {
                            J$.Fe(852617, arguments.callee, this, arguments);
                            arguments = J$.N(852625, 'arguments', arguments, true, false, false);
                            selector = J$.N(852633, 'selector', selector, true, false, false);
                            options = J$.N(852641, 'options', options, true, false, false);
                            callback = J$.N(852649, 'callback', callback, true, false, false);
                            J$.N(852657, 'server', server, false, false, false);
                            if (J$.C(49928, J$.C(49920, J$.B(94466, '===', J$.U(94458, 'typeof', J$.R(852241, 'selector', selector, false, false)), J$.T(852249, 'function', 21, false))) ? J$.B(94482, '===', J$.U(94474, 'typeof', J$.R(852257, 'callback', callback, false, false)), J$.T(852265, 'undefined', 21, false)) : J$._()))
                                callback = J$.W(852281, 'callback', J$.R(852273, 'selector', selector, false, false), callback, false, false), selector = J$.W(852297, 'selector', J$.T(852289, undefined, 24, false), selector, false, false), options = J$.W(852313, 'options', J$.T(852305, {}, 11, false), options, false, false);
                            if (J$.C(49936, J$.B(94498, '===', J$.U(94490, 'typeof', J$.R(852321, 'options', options, false, false)), J$.T(852329, 'function', 21, false))))
                                callback = J$.W(852345, 'callback', J$.R(852337, 'options', options, false, false), callback, false, false), options = J$.W(852361, 'options', J$.R(852353, 'selector', selector, false, false), options, false, false), selector = J$.W(852377, 'selector', J$.T(852369, undefined, 24, false), selector, false, false);
                            options = J$.W(852401, 'options', J$.C(49944, J$.R(852385, 'options', options, false, false)) ? J$._() : J$.T(852393, {}, 11, false), options, false, false);
                            var server = J$.W(852449, 'server', J$.F(852441, J$.R(852409, 'pickProxy', pickProxy, false, true), false)(J$.R(852417, 'this', this, false, false), J$.G(852433, J$.R(852425, 'options', options, false, false), 'session')), server, false, false);
                            if (J$.C(49952, J$.B(94506, '==', J$.R(852457, 'server', server, false, false), J$.T(852465, null, 25, false)))) {
                                J$.F(852505, J$.R(852473, 'callback', callback, false, false), false)(J$.F(852497, J$.R(852481, 'MongoError', MongoError, false, true), true)(J$.T(852489, 'server selection failed', 21, false)));
                                return J$.Rt(852513, undefined);
                            }
                            if (J$.C(49960, J$.G(852537, J$.G(852529, J$.R(852521, 'this', this, false, false), 's'), 'debug')))
                                J$.M(852577, J$.R(852545, 'this', this, false, false), 'emit', false)(J$.T(852553, 'pickedServer', 21, false), J$.T(852561, null, 25, false), J$.R(852569, 'server', server, false, false));
                            J$.F(852609, J$.R(852585, 'callback', callback, false, false), false)(J$.T(852593, null, 25, false), J$.R(852601, 'server', server, false, false));
                        } catch (J$e) {
                            J$.Ex(855017, J$e);
                        } finally {
                            if (J$.Fr(855025))
                                continue jalangiLabel53;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(852897, J$.G(852689, J$.R(852681, 'Mongos', Mongos, false, true), 'prototype'), 'connections', J$.T(852889, function () {
                jalangiLabel54:
                    while (true) {
                        try {
                            J$.Fe(852857, arguments.callee, this, arguments);
                            arguments = J$.N(852865, 'arguments', arguments, true, false, false);
                            J$.N(852873, 'connections', connections, false, false, false);
                            J$.N(852881, 'i', i, false, false, false);
                            var connections = J$.W(852705, 'connections', J$.T(852697, [], 10, false), connections, false, false);
                            for (var i = J$.W(852721, 'i', J$.T(852713, 0, 22, false), i, false, false); J$.C(49968, J$.B(94514, '<', J$.R(852729, 'i', i, false, false), J$.G(852753, J$.G(852745, J$.R(852737, 'this', this, false, false), 'connectedProxies'), 'length'))); J$.B(94538, '-', i = J$.W(852769, 'i', J$.B(94530, '+', J$.U(94522, '+', J$.R(852761, 'i', i, false, false)), 1), i, false, false), 1)) {
                                connections = J$.W(852833, 'connections', J$.M(852825, J$.R(852777, 'connections', connections, false, false), 'concat', false)(J$.M(852817, J$.G(852809, J$.G(852793, J$.R(852785, 'this', this, false, false), 'connectedProxies'), J$.R(852801, 'i', i, false, false)), 'connections', false)()), connections, false, false);
                            }
                            return J$.Rt(852849, J$.R(852841, 'connections', connections, false, false));
                        } catch (J$e) {
                            J$.Ex(855033, J$e);
                        } finally {
                            if (J$.Fr(855041))
                                continue jalangiLabel54;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.P(853697, J$.I(typeof module === 'undefined' ? module = J$.R(853681, 'module', undefined, true, true) : module = J$.R(853681, 'module', module, true, true)), 'exports', J$.R(853689, 'Mongos', Mongos, false, true));
        } catch (J$e) {
            J$.Ex(855097, J$e);
        } finally {
            if (J$.Sr(855105))
                continue jalangiLabel58;
            else
                break jalangiLabel58;
        }
    }
// JALANGI DO NOT INSTRUMENT

