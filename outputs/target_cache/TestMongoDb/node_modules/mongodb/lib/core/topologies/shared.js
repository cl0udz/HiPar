J$.noInstrEval = false;
jalangiLabel30:
    while (true) {
        try {
            J$.Se(925249, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestMongoDb/node_modules/mongodb/lib/core/topologies/shared.js');
            function emitSDAMEvent(self, event, description) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(918113, arguments.callee, this, arguments);
                            arguments = J$.N(918121, 'arguments', arguments, true, false, false);
                            self = J$.N(918129, 'self', self, true, false, false);
                            event = J$.N(918137, 'event', event, true, false, false);
                            description = J$.N(918145, 'description', description, true, false, false);
                            if (J$.C(54888, J$.B(98586, '>', J$.G(918065, J$.M(918057, J$.R(918041, 'self', self, false, false), 'listeners', false)(J$.R(918049, 'event', event, false, false)), 'length'), J$.T(918073, 0, 22, false)))) {
                                J$.M(918105, J$.R(918081, 'self', self, false, false), 'emit', false)(J$.R(918089, 'event', event, false, false), J$.R(918097, 'description', description, false, false));
                            }
                        } catch (J$e) {
                            J$.Ex(925617, J$e);
                        } finally {
                            if (J$.Fr(925625))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function createClientInfo(options) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(918841, arguments.callee, this, arguments);
                            arguments = J$.N(918849, 'arguments', arguments, true, false, false);
                            options = J$.N(918857, 'options', options, true, false, false);
                            J$.N(918865, 'clientInfo', clientInfo, false, false, false);
                            J$.N(918873, 'buffer', buffer, false, false, false);
                            J$.N(918881, 'appname', appname, false, false, false);
                            var clientInfo = J$.W(918473, 'clientInfo', J$.C(54896, J$.G(918361, J$.R(918353, 'options', options, false, false), 'clientInfo')) ? J$.F(918393, J$.R(918369, 'clone', clone, false, true), false)(J$.G(918385, J$.R(918377, 'options', options, false, false), 'clientInfo')) : J$.T(918465, {
                                driver: J$.T(918417, {
                                    name: J$.T(918401, 'nodejs-core', 21, false),
                                    version: J$.R(918409, 'driverVersion', driverVersion, false, true)
                                }, 11, false),
                                os: J$.T(918457, {
                                    type: J$.R(918425, 'type', type, false, true),
                                    name: J$.R(918433, 'name', name, false, true),
                                    architecture: J$.R(918441, 'architecture', architecture, false, true),
                                    version: J$.R(918449, 'release', release, false, true)
                                }, 11, false)
                            }, 11, false), clientInfo, false, false);
                            if (J$.C(54920, J$.C(54904, J$.G(918489, J$.R(918481, 'clientInfo', clientInfo, false, false), 'platform')) ? J$.B(98602, '===', J$.M(918521, J$.G(918505, J$.R(918497, 'clientInfo', clientInfo, false, false), 'platform'), 'indexOf', false)(J$.T(918513, 'mongodb-core', 21, false)), J$.U(98594, '-', J$.T(918529, 1, 22, false))) : J$._())) {
                                J$.P(918593, J$.R(918537, 'clientInfo', clientInfo, false, false), 'platform', J$.F(918585, J$.R(918545, 'f', f, false, true), false)(J$.T(918553, '%s, mongodb-core: %s', 21, false), J$.G(918569, J$.R(918561, 'clientInfo', clientInfo, false, false), 'platform'), J$.R(918577, 'driverVersion', driverVersion, false, true)));
                            } else if (J$.C(54912, J$.U(98610, '!', J$.G(918609, J$.R(918601, 'clientInfo', clientInfo, false, false), 'platform')))) {
                                J$.P(918633, J$.R(918617, 'clientInfo', clientInfo, false, false), 'platform', J$.R(918625, 'nodejsversion', nodejsversion, false, true));
                            }
                            if (J$.C(54936, J$.G(918649, J$.R(918641, 'options', options, false, false), 'appname'))) {
                                var buffer = J$.W(918689, 'buffer', J$.M(918681, J$.R(918657, 'Buffer', Buffer, false, true), 'from', false)(J$.G(918673, J$.R(918665, 'options', options, false, false), 'appname')), buffer, false, false);
                                var appname = J$.W(918785, 'appname', J$.C(54928, J$.B(98618, '>', J$.G(918705, J$.R(918697, 'buffer', buffer, false, false), 'length'), J$.T(918713, 128, 22, false))) ? J$.M(918761, J$.M(918745, J$.R(918721, 'buffer', buffer, false, false), 'slice', false)(J$.T(918729, 0, 22, false), J$.T(918737, 128, 22, false)), 'toString', false)(J$.T(918753, 'utf8', 21, false)) : J$.G(918777, J$.R(918769, 'options', options, false, false), 'appname'), appname, false, false);
                                J$.P(918817, J$.R(918793, 'clientInfo', clientInfo, false, false), 'application', J$.T(918809, { name: J$.R(918801, 'appname', appname, false, false) }, 11, false));
                            }
                            return J$.Rt(918833, J$.R(918825, 'clientInfo', clientInfo, false, false));
                        } catch (J$e) {
                            J$.Ex(925633, J$e);
                        } finally {
                            if (J$.Fr(925641))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function createCompressionInfo(options) {
                jalangiLabel3:
                    while (true) {
                        try {
                            J$.Fe(919097, arguments.callee, this, arguments);
                            arguments = J$.N(919105, 'arguments', arguments, true, false, false);
                            options = J$.N(919113, 'options', options, true, false, false);
                            if (J$.C(54952, J$.C(54944, J$.U(98626, '!', J$.G(918897, J$.R(918889, 'options', options, false, false), 'compression'))) ? J$._() : J$.U(98634, '!', J$.G(918921, J$.G(918913, J$.R(918905, 'options', options, false, false), 'compression'), 'compressors')))) {
                                return J$.Rt(918937, J$.T(918929, [], 10, false));
                            }
                            J$.M(919057, J$.G(918961, J$.G(918953, J$.R(918945, 'options', options, false, false), 'compression'), 'compressors'), 'forEach', false)(J$.T(919049, function (compressor) {
                                jalangiLabel2:
                                    while (true) {
                                        try {
                                            J$.Fe(919025, arguments.callee, this, arguments);
                                            arguments = J$.N(919033, 'arguments', arguments, true, false, false);
                                            compressor = J$.N(919041, 'compressor', compressor, true, false, false);
                                            if (J$.C(54968, J$.C(54960, J$.B(98642, '!==', J$.R(918969, 'compressor', compressor, false, false), J$.T(918977, 'snappy', 21, false))) ? J$.B(98650, '!==', J$.R(918985, 'compressor', compressor, false, false), J$.T(918993, 'zlib', 21, false)) : J$._())) {
                                                throw J$.F(919017, J$.I(typeof Error === 'undefined' ? Error = J$.R(919001, 'Error', undefined, true, true) : Error = J$.R(919001, 'Error', Error, true, true)), true)(J$.T(919009, 'compressors must be at least one of snappy or zlib', 21, false));
                                            }
                                        } catch (J$e) {
                                            J$.Ex(925649, J$e);
                                        } finally {
                                            if (J$.Fr(925657))
                                                continue jalangiLabel2;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            return J$.Rt(919089, J$.G(919081, J$.G(919073, J$.R(919065, 'options', options, false, false), 'compression'), 'compressors'));
                        } catch (J$e) {
                            J$.Ex(925665, J$e);
                        } finally {
                            if (J$.Fr(925673))
                                continue jalangiLabel3;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function clone(object) {
                jalangiLabel4:
                    while (true) {
                        try {
                            J$.Fe(919169, arguments.callee, this, arguments);
                            arguments = J$.N(919177, 'arguments', arguments, true, false, false);
                            object = J$.N(919185, 'object', object, true, false, false);
                            return J$.Rt(919161, J$.M(919153, J$.I(typeof JSON === 'undefined' ? JSON = J$.R(919121, 'JSON', undefined, true, true) : JSON = J$.R(919121, 'JSON', JSON, true, true)), 'parse', false)(J$.M(919145, J$.I(typeof JSON === 'undefined' ? JSON = J$.R(919129, 'JSON', undefined, true, true) : JSON = J$.R(919129, 'JSON', JSON, true, true)), 'stringify', false)(J$.R(919137, 'object', object, false, false))));
                        } catch (J$e) {
                            J$.Ex(925681, J$e);
                        } finally {
                            if (J$.Fr(925689))
                                continue jalangiLabel4;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function Interval(fn, time) {
                jalangiLabel18:
                    while (true) {
                        try {
                            J$.Fe(922049, arguments.callee, this, arguments);
                            arguments = J$.N(922057, 'arguments', arguments, true, false, false);
                            fn = J$.N(922065, 'fn', fn, true, false, false);
                            time = J$.N(922073, 'time', time, true, false, false);
                            J$.N(922081, 'timer', timer, false, false, false);
                            var timer = J$.W(921769, 'timer', J$.T(921761, false, 23, false), timer, false, false);
                            J$.P(921881, J$.R(921777, 'this', this, false, false), 'start', J$.T(921873, function () {
                                jalangiLabel15:
                                    while (true) {
                                        try {
                                            J$.Fe(921857, arguments.callee, this, arguments);
                                            arguments = J$.N(921865, 'arguments', arguments, true, false, false);
                                            if (J$.C(55144, J$.U(98810, '!', J$.M(921793, J$.R(921785, 'this', this, false, false), 'isRunning', false)()))) {
                                                timer = J$.W(921833, 'timer', J$.F(921825, J$.I(typeof setInterval === 'undefined' ? setInterval = J$.R(921801, 'setInterval', undefined, true, true) : setInterval = J$.R(921801, 'setInterval', setInterval, true, true)), false)(J$.R(921809, 'fn', fn, false, false), J$.R(921817, 'time', time, false, false)), timer, false, false);
                                            }
                                            return J$.Rt(921849, J$.R(921841, 'this', this, false, false));
                                        } catch (J$e) {
                                            J$.Ex(925857, J$e);
                                        } finally {
                                            if (J$.Fr(925865))
                                                continue jalangiLabel15;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            J$.P(921977, J$.R(921889, 'this', this, false, false), 'stop', J$.T(921969, function () {
                                jalangiLabel16:
                                    while (true) {
                                        try {
                                            J$.Fe(921953, arguments.callee, this, arguments);
                                            arguments = J$.N(921961, 'arguments', arguments, true, false, false);
                                            J$.F(921913, J$.I(typeof clearInterval === 'undefined' ? clearInterval = J$.R(921897, 'clearInterval', undefined, true, true) : clearInterval = J$.R(921897, 'clearInterval', clearInterval, true, true)), false)(J$.R(921905, 'timer', timer, false, false));
                                            timer = J$.W(921929, 'timer', J$.T(921921, false, 23, false), timer, false, false);
                                            return J$.Rt(921945, J$.R(921937, 'this', this, false, false));
                                        } catch (J$e) {
                                            J$.Ex(925873, J$e);
                                        } finally {
                                            if (J$.Fr(925881))
                                                continue jalangiLabel16;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            J$.P(922041, J$.R(921985, 'this', this, false, false), 'isRunning', J$.T(922033, function () {
                                jalangiLabel17:
                                    while (true) {
                                        try {
                                            J$.Fe(922017, arguments.callee, this, arguments);
                                            arguments = J$.N(922025, 'arguments', arguments, true, false, false);
                                            return J$.Rt(922009, J$.B(98818, '!==', J$.R(921993, 'timer', timer, false, false), J$.T(922001, false, 23, false)));
                                        } catch (J$e) {
                                            J$.Ex(925889, J$e);
                                        } finally {
                                            if (J$.Fr(925897))
                                                continue jalangiLabel17;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                        } catch (J$e) {
                            J$.Ex(925905, J$e);
                        } finally {
                            if (J$.Fr(925913))
                                continue jalangiLabel18;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function Timeout(fn, time) {
                jalangiLabel22:
                    while (true) {
                        try {
                            J$.Fe(922417, arguments.callee, this, arguments);
                            arguments = J$.N(922425, 'arguments', arguments, true, false, false);
                            fn = J$.N(922433, 'fn', fn, true, false, false);
                            time = J$.N(922441, 'time', time, true, false, false);
                            J$.N(922449, 'timer', timer, false, false, false);
                            var timer = J$.W(922097, 'timer', J$.T(922089, false, 23, false), timer, false, false);
                            J$.P(922209, J$.R(922105, 'this', this, false, false), 'start', J$.T(922201, function () {
                                jalangiLabel19:
                                    while (true) {
                                        try {
                                            J$.Fe(922185, arguments.callee, this, arguments);
                                            arguments = J$.N(922193, 'arguments', arguments, true, false, false);
                                            if (J$.C(55152, J$.U(98826, '!', J$.M(922121, J$.R(922113, 'this', this, false, false), 'isRunning', false)()))) {
                                                timer = J$.W(922161, 'timer', J$.F(922153, J$.I(typeof setTimeout === 'undefined' ? setTimeout = J$.R(922129, 'setTimeout', undefined, true, true) : setTimeout = J$.R(922129, 'setTimeout', setTimeout, true, true)), false)(J$.R(922137, 'fn', fn, false, false), J$.R(922145, 'time', time, false, false)), timer, false, false);
                                            }
                                            return J$.Rt(922177, J$.R(922169, 'this', this, false, false));
                                        } catch (J$e) {
                                            J$.Ex(925921, J$e);
                                        } finally {
                                            if (J$.Fr(925929))
                                                continue jalangiLabel19;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            J$.P(922305, J$.R(922217, 'this', this, false, false), 'stop', J$.T(922297, function () {
                                jalangiLabel20:
                                    while (true) {
                                        try {
                                            J$.Fe(922281, arguments.callee, this, arguments);
                                            arguments = J$.N(922289, 'arguments', arguments, true, false, false);
                                            J$.F(922241, J$.I(typeof clearTimeout === 'undefined' ? clearTimeout = J$.R(922225, 'clearTimeout', undefined, true, true) : clearTimeout = J$.R(922225, 'clearTimeout', clearTimeout, true, true)), false)(J$.R(922233, 'timer', timer, false, false));
                                            timer = J$.W(922257, 'timer', J$.T(922249, false, 23, false), timer, false, false);
                                            return J$.Rt(922273, J$.R(922265, 'this', this, false, false));
                                        } catch (J$e) {
                                            J$.Ex(925937, J$e);
                                        } finally {
                                            if (J$.Fr(925945))
                                                continue jalangiLabel20;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            J$.P(922409, J$.R(922313, 'this', this, false, false), 'isRunning', J$.T(922401, function () {
                                jalangiLabel21:
                                    while (true) {
                                        try {
                                            J$.Fe(922385, arguments.callee, this, arguments);
                                            arguments = J$.N(922393, 'arguments', arguments, true, false, false);
                                            if (J$.C(55168, J$.C(55160, J$.R(922321, 'timer', timer, false, false)) ? J$.G(922337, J$.R(922329, 'timer', timer, false, false), '_called') : J$._()))
                                                return J$.Rt(922353, J$.T(922345, false, 23, false));
                                            return J$.Rt(922377, J$.B(98834, '!==', J$.R(922361, 'timer', timer, false, false), J$.T(922369, false, 23, false)));
                                        } catch (J$e) {
                                            J$.Ex(925953, J$e);
                                        } finally {
                                            if (J$.Fr(925961))
                                                continue jalangiLabel21;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                        } catch (J$e) {
                            J$.Ex(925969, J$e);
                        } finally {
                            if (J$.Fr(925977))
                                continue jalangiLabel22;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function diff(previous, current) {
                jalangiLabel23:
                    while (true) {
                        try {
                            J$.Fe(923665, arguments.callee, this, arguments);
                            arguments = J$.N(923673, 'arguments', arguments, true, false, false);
                            previous = J$.N(923681, 'previous', previous, true, false, false);
                            current = J$.N(923689, 'current', current, true, false, false);
                            J$.N(923697, 'diff', diff, false, false, false);
                            J$.N(923705, 'i', i, false, false, false);
                            J$.N(923713, 'found', found, false, false, false);
                            J$.N(923721, 'j', j, false, false, false);
                            J$.N(923729, 'prevServer', prevServer, false, false, false);
                            J$.N(923737, 'currServer', currServer, false, false, false);
                            var diff = J$.W(922473, 'diff', J$.T(922465, { servers: J$.T(922457, [], 10, false) }, 11, false), diff, false, false);
                            if (J$.C(55176, J$.U(98842, '!', J$.R(922481, 'previous', previous, false, false)))) {
                                previous = J$.W(922505, 'previous', J$.T(922497, { servers: J$.T(922489, [], 10, false) }, 11, false), previous, false, false);
                            }
                            for (var i = J$.W(922521, 'i', J$.T(922513, 0, 22, false), i, false, false); J$.C(55208, J$.B(98850, '<', J$.R(922529, 'i', i, false, false), J$.G(922553, J$.G(922545, J$.R(922537, 'previous', previous, false, false), 'servers'), 'length'))); J$.B(98874, '-', i = J$.W(922569, 'i', J$.B(98866, '+', J$.U(98858, '+', J$.R(922561, 'i', i, false, false)), 1), i, false, false), 1)) {
                                var found = J$.W(922585, 'found', J$.T(922577, false, 23, false), found, false, false);
                                for (var j = J$.W(922601, 'j', J$.T(922593, 0, 22, false), j, false, false); J$.C(55192, J$.B(98882, '<', J$.R(922609, 'j', j, false, false), J$.G(922633, J$.G(922625, J$.R(922617, 'current', current, false, false), 'servers'), 'length'))); J$.B(98906, '-', j = J$.W(922649, 'j', J$.B(98898, '+', J$.U(98890, '+', J$.R(922641, 'j', j, false, false)), 1), j, false, false), 1)) {
                                    if (J$.C(55184, J$.B(98914, '===', J$.M(922697, J$.G(922689, J$.G(922681, J$.G(922665, J$.R(922657, 'current', current, false, false), 'servers'), J$.R(922673, 'j', j, false, false)), 'address'), 'toLowerCase', false)(), J$.M(922745, J$.G(922737, J$.G(922729, J$.G(922713, J$.R(922705, 'previous', previous, false, false), 'servers'), J$.R(922721, 'i', i, false, false)), 'address'), 'toLowerCase', false)()))) {
                                        found = J$.W(922761, 'found', J$.T(922753, true, 23, false), found, false, false);
                                        break;
                                    }
                                }
                                if (J$.C(55200, J$.U(98922, '!', J$.R(922769, 'found', found, false, false)))) {
                                    J$.M(922889, J$.G(922785, J$.R(922777, 'diff', diff, false, false), 'servers'), 'push', false)(J$.T(922881, {
                                        address: J$.G(922825, J$.G(922817, J$.G(922801, J$.R(922793, 'previous', previous, false, false), 'servers'), J$.R(922809, 'i', i, false, false)), 'address'),
                                        from: J$.G(922865, J$.G(922857, J$.G(922841, J$.R(922833, 'previous', previous, false, false), 'servers'), J$.R(922849, 'i', i, false, false)), 'type'),
                                        to: J$.T(922873, 'Unknown', 21, false)
                                    }, 11, false));
                                }
                            }
                            for (j = J$.W(922905, 'j', J$.T(922897, 0, 22, false), j, false, false); J$.C(55240, J$.B(98930, '<', J$.R(922913, 'j', j, false, false), J$.G(922937, J$.G(922929, J$.R(922921, 'current', current, false, false), 'servers'), 'length'))); J$.B(98954, '-', j = J$.W(922953, 'j', J$.B(98946, '+', J$.U(98938, '+', J$.R(922945, 'j', j, false, false)), 1), j, false, false), 1)) {
                                found = J$.W(922969, 'found', J$.T(922961, false, 23, false), found, false, false);
                                for (i = J$.W(922985, 'i', J$.T(922977, 0, 22, false), i, false, false); J$.C(55224, J$.B(98962, '<', J$.R(922993, 'i', i, false, false), J$.G(923017, J$.G(923009, J$.R(923001, 'previous', previous, false, false), 'servers'), 'length'))); J$.B(98986, '-', i = J$.W(923033, 'i', J$.B(98978, '+', J$.U(98970, '+', J$.R(923025, 'i', i, false, false)), 1), i, false, false), 1)) {
                                    if (J$.C(55216, J$.B(98994, '===', J$.M(923081, J$.G(923073, J$.G(923065, J$.G(923049, J$.R(923041, 'previous', previous, false, false), 'servers'), J$.R(923057, 'i', i, false, false)), 'address'), 'toLowerCase', false)(), J$.M(923129, J$.G(923121, J$.G(923113, J$.G(923097, J$.R(923089, 'current', current, false, false), 'servers'), J$.R(923105, 'j', j, false, false)), 'address'), 'toLowerCase', false)()))) {
                                        found = J$.W(923145, 'found', J$.T(923137, true, 23, false), found, false, false);
                                        break;
                                    }
                                }
                                if (J$.C(55232, J$.U(99002, '!', J$.R(923153, 'found', found, false, false)))) {
                                    J$.M(923273, J$.G(923169, J$.R(923161, 'diff', diff, false, false), 'servers'), 'push', false)(J$.T(923265, {
                                        address: J$.G(923209, J$.G(923201, J$.G(923185, J$.R(923177, 'current', current, false, false), 'servers'), J$.R(923193, 'j', j, false, false)), 'address'),
                                        from: J$.T(923217, 'Unknown', 21, false),
                                        to: J$.G(923257, J$.G(923249, J$.G(923233, J$.R(923225, 'current', current, false, false), 'servers'), J$.R(923241, 'j', j, false, false)), 'type')
                                    }, 11, false));
                                }
                            }
                            for (i = J$.W(923289, 'i', J$.T(923281, 0, 22, false), i, false, false); J$.C(55272, J$.B(99010, '<', J$.R(923297, 'i', i, false, false), J$.G(923321, J$.G(923313, J$.R(923305, 'previous', previous, false, false), 'servers'), 'length'))); J$.B(99034, '-', i = J$.W(923337, 'i', J$.B(99026, '+', J$.U(99018, '+', J$.R(923329, 'i', i, false, false)), 1), i, false, false), 1)) {
                                var prevServer = J$.W(923377, 'prevServer', J$.G(923369, J$.G(923353, J$.R(923345, 'previous', previous, false, false), 'servers'), J$.R(923361, 'i', i, false, false)), prevServer, false, false);
                                for (j = J$.W(923393, 'j', J$.T(923385, 0, 22, false), j, false, false); J$.C(55264, J$.B(99042, '<', J$.R(923401, 'j', j, false, false), J$.G(923425, J$.G(923417, J$.R(923409, 'current', current, false, false), 'servers'), 'length'))); J$.B(99066, '-', j = J$.W(923441, 'j', J$.B(99058, '+', J$.U(99050, '+', J$.R(923433, 'j', j, false, false)), 1), j, false, false), 1)) {
                                    var currServer = J$.W(923481, 'currServer', J$.G(923473, J$.G(923457, J$.R(923449, 'current', current, false, false), 'servers'), J$.R(923465, 'j', j, false, false)), currServer, false, false);
                                    if (J$.C(55256, J$.B(99074, '===', J$.M(923505, J$.G(923497, J$.R(923489, 'prevServer', prevServer, false, false), 'address'), 'toLowerCase', false)(), J$.M(923529, J$.G(923521, J$.R(923513, 'currServer', currServer, false, false), 'address'), 'toLowerCase', false)()))) {
                                        if (J$.C(55248, J$.B(99082, '!==', J$.G(923545, J$.R(923537, 'prevServer', prevServer, false, false), 'type'), J$.G(923561, J$.R(923553, 'currServer', currServer, false, false), 'type')))) {
                                            J$.M(923641, J$.G(923577, J$.R(923569, 'diff', diff, false, false), 'servers'), 'push', false)(J$.T(923633, {
                                                address: J$.G(923593, J$.R(923585, 'prevServer', prevServer, false, false), 'address'),
                                                from: J$.G(923609, J$.R(923601, 'prevServer', prevServer, false, false), 'type'),
                                                to: J$.G(923625, J$.R(923617, 'currServer', currServer, false, false), 'type')
                                            }, 11, false));
                                        }
                                    }
                                }
                            }
                            return J$.Rt(923657, J$.R(923649, 'diff', diff, false, false));
                        } catch (J$e) {
                            J$.Ex(925985, J$e);
                        } finally {
                            if (J$.Fr(925993))
                                continue jalangiLabel23;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function resolveClusterTime(topology, $clusterTime) {
                jalangiLabel24:
                    while (true) {
                        try {
                            J$.Fe(923865, arguments.callee, this, arguments);
                            arguments = J$.N(923873, 'arguments', arguments, true, false, false);
                            topology = J$.N(923881, 'topology', topology, true, false, false);
                            $clusterTime = J$.N(923889, '$clusterTime', $clusterTime, true, false, false);
                            if (J$.C(55288, J$.B(99090, '==', J$.G(923753, J$.R(923745, 'topology', topology, false, false), 'clusterTime'), J$.T(923761, null, 25, false)))) {
                                J$.P(923785, J$.R(923769, 'topology', topology, false, false), 'clusterTime', J$.R(923777, '$clusterTime', $clusterTime, false, false));
                            } else {
                                if (J$.C(55280, J$.M(923833, J$.G(923801, J$.R(923793, '$clusterTime', $clusterTime, false, false), 'clusterTime'), 'greaterThan', false)(J$.G(923825, J$.G(923817, J$.R(923809, 'topology', topology, false, false), 'clusterTime'), 'clusterTime')))) {
                                    J$.P(923857, J$.R(923841, 'topology', topology, false, false), 'clusterTime', J$.R(923849, '$clusterTime', $clusterTime, false, false));
                                }
                            }
                        } catch (J$e) {
                            J$.Ex(926001, J$e);
                        } finally {
                            if (J$.Fr(926009))
                                continue jalangiLabel24;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function topologyType(topology) {
                jalangiLabel27:
                    while (true) {
                        try {
                            J$.Fe(924289, arguments.callee, this, arguments);
                            arguments = J$.N(924297, 'arguments', arguments, true, false, false);
                            topology = J$.N(924305, 'topology', topology, true, false, false);
                            if (J$.C(55312, J$.G(924129, J$.R(924121, 'topology', topology, false, false), 'description'))) {
                                return J$.Rt(924161, J$.G(924153, J$.G(924145, J$.R(924137, 'topology', topology, false, false), 'description'), 'type'));
                            }
                            if (J$.C(55328, J$.B(99122, '===', J$.G(924177, J$.R(924169, 'topology', topology, false, false), 'type'), J$.T(924185, 'mongos', 21, false)))) {
                                return J$.Rt(924209, J$.G(924201, J$.R(924193, 'TopologyType', TopologyType, false, true), 'Sharded'));
                            } else if (J$.C(55320, J$.B(99130, '===', J$.G(924225, J$.R(924217, 'topology', topology, false, false), 'type'), J$.T(924233, 'replset', 21, false)))) {
                                return J$.Rt(924257, J$.G(924249, J$.R(924241, 'TopologyType', TopologyType, false, true), 'ReplicaSetWithPrimary'));
                            }
                            return J$.Rt(924281, J$.G(924273, J$.R(924265, 'TopologyType', TopologyType, false, true), 'Single'));
                        } catch (J$e) {
                            J$.Ex(926049, J$e);
                        } finally {
                            if (J$.Fr(926057))
                                continue jalangiLabel27;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function getMMAPError(err) {
                jalangiLabel29:
                    while (true) {
                        try {
                            J$.Fe(924705, arguments.callee, this, arguments);
                            arguments = J$.N(924713, 'arguments', arguments, true, false, false);
                            err = J$.N(924721, 'err', err, true, false, false);
                            J$.N(924729, 'newErr', newErr, false, false, false);
                            if (J$.C(55368, J$.C(55360, J$.B(99162, '!==', J$.G(924569, J$.R(924561, 'err', err, false, false), 'code'), J$.R(924577, 'MMAPv1_RETRY_WRITES_ERROR_CODE', MMAPv1_RETRY_WRITES_ERROR_CODE, false, true))) ? J$._() : J$.U(99170, '!', J$.M(924609, J$.G(924593, J$.R(924585, 'err', err, false, false), 'errmsg'), 'includes', false)(J$.T(924601, 'Transaction numbers', 21, false))))) {
                                return J$.Rt(924625, J$.R(924617, 'err', err, false, false));
                            }
                            var newErr = J$.W(924681, 'newErr', J$.F(924673, J$.R(924633, 'MongoError', MongoError, false, true), true)(J$.T(924665, {
                                message: J$.R(924641, 'MMAPv1_RETRY_WRITES_ERROR_MESSAGE', MMAPv1_RETRY_WRITES_ERROR_MESSAGE, false, true),
                                errmsg: J$.R(924649, 'MMAPv1_RETRY_WRITES_ERROR_MESSAGE', MMAPv1_RETRY_WRITES_ERROR_MESSAGE, false, true),
                                originalError: J$.R(924657, 'err', err, false, false)
                            }, 11, false)), newErr, false, false);
                            return J$.Rt(924697, J$.R(924689, 'newErr', newErr, false, false));
                        } catch (J$e) {
                            J$.Ex(926081, J$e);
                        } finally {
                            if (J$.Fr(926089))
                                continue jalangiLabel29;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(925257, 'os', os, false, false, false);
            J$.N(925265, 'f', f, false, false, false);
            J$.N(925273, 'ReadPreference', ReadPreference, false, false, false);
            J$.N(925281, 'Buffer', Buffer, false, false, false);
            J$.N(925289, 'TopologyType', TopologyType, false, false, false);
            J$.N(925297, 'MongoError', MongoError, false, false, false);
            J$.N(925305, 'MMAPv1_RETRY_WRITES_ERROR_CODE', MMAPv1_RETRY_WRITES_ERROR_CODE, false, false, false);
            emitSDAMEvent = J$.N(925321, 'emitSDAMEvent', J$.T(925313, emitSDAMEvent, 12, false), true, false, false);
            J$.N(925329, 'driverVersion', driverVersion, false, false, false);
            J$.N(925337, 'nodejsversion', nodejsversion, false, false, false);
            J$.N(925345, 'type', type, false, false, false);
            J$.N(925353, 'name', name, false, false, false);
            J$.N(925361, 'architecture', architecture, false, false, false);
            J$.N(925369, 'release', release, false, false, false);
            createClientInfo = J$.N(925385, 'createClientInfo', J$.T(925377, createClientInfo, 12, false), true, false, false);
            createCompressionInfo = J$.N(925401, 'createCompressionInfo', J$.T(925393, createCompressionInfo, 12, false), true, false, false);
            clone = J$.N(925417, 'clone', J$.T(925409, clone, 12, false), true, false, false);
            J$.N(925425, 'getPreviousDescription', getPreviousDescription, false, false, false);
            J$.N(925433, 'emitServerDescriptionChanged', emitServerDescriptionChanged, false, false, false);
            J$.N(925441, 'getPreviousTopologyDescription', getPreviousTopologyDescription, false, false, false);
            J$.N(925449, 'emitTopologyDescriptionChanged', emitTopologyDescriptionChanged, false, false, false);
            J$.N(925457, 'changedIsMaster', changedIsMaster, false, false, false);
            J$.N(925465, 'getTopologyType', getTopologyType, false, false, false);
            J$.N(925473, 'inquireServerState', inquireServerState, false, false, false);
            J$.N(925481, 'cloneOptions', cloneOptions, false, false, false);
            Interval = J$.N(925497, 'Interval', J$.T(925489, Interval, 12, false), true, false, false);
            Timeout = J$.N(925513, 'Timeout', J$.T(925505, Timeout, 12, false), true, false, false);
            diff = J$.N(925529, 'diff', J$.T(925521, diff, 12, false), true, false, false);
            resolveClusterTime = J$.N(925545, 'resolveClusterTime', J$.T(925537, resolveClusterTime, 12, false), true, false, false);
            J$.N(925553, 'SessionMixins', SessionMixins, false, false, false);
            topologyType = J$.N(925569, 'topologyType', J$.T(925561, topologyType, 12, false), true, false, false);
            J$.N(925577, 'RETRYABLE_WIRE_VERSION', RETRYABLE_WIRE_VERSION, false, false, false);
            J$.N(925585, 'isRetryableWritesSupported', isRetryableWritesSupported, false, false, false);
            J$.N(925593, 'MMAPv1_RETRY_WRITES_ERROR_MESSAGE', MMAPv1_RETRY_WRITES_ERROR_MESSAGE, false, false, false);
            getMMAPError = J$.N(925609, 'getMMAPError', J$.T(925601, getMMAPError, 12, false), true, false, false);
            J$.T(917793, 'use strict', 21, false);
            var os = J$.W(917825, 'os', J$.F(917817, J$.I(typeof require === 'undefined' ? require = J$.R(917801, 'require', undefined, true, true) : require = J$.R(917801, 'require', require, true, true)), false)(J$.T(917809, 'os', 21, false)), os, false, true);
            var f = J$.W(917865, 'f', J$.G(917857, J$.F(917849, J$.I(typeof require === 'undefined' ? require = J$.R(917833, 'require', undefined, true, true) : require = J$.R(917833, 'require', require, true, true)), false)(J$.T(917841, 'util', 21, false)), 'format'), f, false, true);
            var ReadPreference = J$.W(917897, 'ReadPreference', J$.F(917889, J$.I(typeof require === 'undefined' ? require = J$.R(917873, 'require', undefined, true, true) : require = J$.R(917873, 'require', require, true, true)), false)(J$.T(917881, './read_preference', 21, false)), ReadPreference, false, true);
            var Buffer = J$.W(917937, 'Buffer', J$.G(917929, J$.F(917921, J$.I(typeof require === 'undefined' ? require = J$.R(917905, 'require', undefined, true, true) : require = J$.R(917905, 'require', require, true, true)), false)(J$.T(917913, 'safe-buffer', 21, false)), 'Buffer'), Buffer, false, true);
            var TopologyType = J$.W(917977, 'TopologyType', J$.G(917969, J$.F(917961, J$.I(typeof require === 'undefined' ? require = J$.R(917945, 'require', undefined, true, true) : require = J$.R(917945, 'require', require, true, true)), false)(J$.T(917953, '../sdam/topology_description', 21, false)), 'TopologyType'), TopologyType, false, true);
            var MongoError = J$.W(918017, 'MongoError', J$.G(918009, J$.F(918001, J$.I(typeof require === 'undefined' ? require = J$.R(917985, 'require', undefined, true, true) : require = J$.R(917985, 'require', require, true, true)), false)(J$.T(917993, '../error', 21, false)), 'MongoError'), MongoError, false, true);
            var MMAPv1_RETRY_WRITES_ERROR_CODE = J$.W(918033, 'MMAPv1_RETRY_WRITES_ERROR_CODE', J$.T(918025, 20, 22, false), MMAPv1_RETRY_WRITES_ERROR_CODE, false, true);
            var driverVersion = J$.W(918185, 'driverVersion', J$.G(918177, J$.F(918169, J$.I(typeof require === 'undefined' ? require = J$.R(918153, 'require', undefined, true, true) : require = J$.R(918153, 'require', require, true, true)), false)(J$.T(918161, '../../../package.json', 21, false)), 'version'), driverVersion, false, true);
            var nodejsversion = J$.W(918249, 'nodejsversion', J$.F(918241, J$.R(918193, 'f', f, false, true), false)(J$.T(918201, 'Node.js %s, %s', 21, false), J$.G(918217, J$.I(typeof process === 'undefined' ? process = J$.R(918209, 'process', undefined, true, true) : process = J$.R(918209, 'process', process, true, true)), 'version'), J$.M(918233, J$.R(918225, 'os', os, false, true), 'endianness', false)()), nodejsversion, false, true);
            var type = J$.W(918273, 'type', J$.M(918265, J$.R(918257, 'os', os, false, true), 'type', false)(), type, false, true);
            var name = J$.W(918297, 'name', J$.G(918289, J$.I(typeof process === 'undefined' ? process = J$.R(918281, 'process', undefined, true, true) : process = J$.R(918281, 'process', process, true, true)), 'platform'), name, false, true);
            var architecture = J$.W(918321, 'architecture', J$.G(918313, J$.I(typeof process === 'undefined' ? process = J$.R(918305, 'process', undefined, true, true) : process = J$.R(918305, 'process', process, true, true)), 'arch'), architecture, false, true);
            var release = J$.W(918345, 'release', J$.M(918337, J$.R(918329, 'os', os, false, true), 'release', false)(), release, false, true);
            var getPreviousDescription = J$.W(919361, 'getPreviousDescription', J$.T(919353, function getPreviousDescription(self) {
                jalangiLabel5:
                    while (true) {
                        try {
                            J$.Fe(919329, arguments.callee, this, arguments);
                            arguments = J$.N(919337, 'arguments', arguments, true, false, false);
                            self = J$.N(919345, 'self', self, true, false, false);
                            if (J$.C(54976, J$.U(98658, '!', J$.G(919209, J$.G(919201, J$.R(919193, 'self', self, false, false), 's'), 'serverDescription')))) {
                                J$.P(919289, J$.G(919225, J$.R(919217, 'self', self, false, false), 's'), 'serverDescription', J$.T(919281, {
                                    address: J$.G(919241, J$.R(919233, 'self', self, false, false), 'name'),
                                    arbiters: J$.T(919249, [], 10, false),
                                    hosts: J$.T(919257, [], 10, false),
                                    passives: J$.T(919265, [], 10, false),
                                    type: J$.T(919273, 'Unknown', 21, false)
                                }, 11, false));
                            }
                            return J$.Rt(919321, J$.G(919313, J$.G(919305, J$.R(919297, 'self', self, false, false), 's'), 'serverDescription'));
                        } catch (J$e) {
                            J$.Ex(925697, J$e);
                        } finally {
                            if (J$.Fr(925705))
                                continue jalangiLabel5;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false), getPreviousDescription, false, true);
            var emitServerDescriptionChanged = J$.W(919633, 'emitServerDescriptionChanged', J$.T(919625, function emitServerDescriptionChanged(self, description) {
                jalangiLabel6:
                    while (true) {
                        try {
                            J$.Fe(919593, arguments.callee, this, arguments);
                            arguments = J$.N(919601, 'arguments', arguments, true, false, false);
                            self = J$.N(919609, 'self', self, true, false, false);
                            description = J$.N(919617, 'description', description, true, false, false);
                            if (J$.C(54992, J$.B(98666, '>', J$.G(919393, J$.M(919385, J$.R(919369, 'self', self, false, false), 'listeners', false)(J$.T(919377, 'serverDescriptionChanged', 21, false)), 'length'), J$.T(919401, 0, 22, false)))) {
                                J$.M(919553, J$.R(919409, 'self', self, false, false), 'emit', false)(J$.T(919417, 'serverDescriptionChanged', 21, false), J$.T(919545, {
                                    topologyId: J$.C(54984, J$.B(98682, '!==', J$.G(919441, J$.G(919433, J$.R(919425, 'self', self, false, false), 's'), 'topologyId'), J$.U(98674, '-', J$.T(919449, 1, 22, false)))) ? J$.G(919473, J$.G(919465, J$.R(919457, 'self', self, false, false), 's'), 'topologyId') : J$.G(919489, J$.R(919481, 'self', self, false, false), 'id'),
                                    address: J$.G(919505, J$.R(919497, 'self', self, false, false), 'name'),
                                    previousDescription: J$.F(919529, J$.R(919513, 'getPreviousDescription', getPreviousDescription, false, true), false)(J$.R(919521, 'self', self, false, false)),
                                    newDescription: J$.R(919537, 'description', description, false, false)
                                }, 11, false));
                                J$.P(919585, J$.G(919569, J$.R(919561, 'self', self, false, false), 's'), 'serverDescription', J$.R(919577, 'description', description, false, false));
                            }
                        } catch (J$e) {
                            J$.Ex(925713, J$e);
                        } finally {
                            if (J$.Fr(925721))
                                continue jalangiLabel6;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false), emitServerDescriptionChanged, false, true);
            var getPreviousTopologyDescription = J$.W(919833, 'getPreviousTopologyDescription', J$.T(919825, function getPreviousTopologyDescription(self) {
                jalangiLabel7:
                    while (true) {
                        try {
                            J$.Fe(919801, arguments.callee, this, arguments);
                            arguments = J$.N(919809, 'arguments', arguments, true, false, false);
                            self = J$.N(919817, 'self', self, true, false, false);
                            if (J$.C(55000, J$.U(98690, '!', J$.G(919657, J$.G(919649, J$.R(919641, 'self', self, false, false), 's'), 'topologyDescription')))) {
                                J$.P(919761, J$.G(919673, J$.R(919665, 'self', self, false, false), 's'), 'topologyDescription', J$.T(919753, {
                                    topologyType: J$.T(919681, 'Unknown', 21, false),
                                    servers: J$.T(919745, [J$.T(919737, {
                                            address: J$.G(919697, J$.R(919689, 'self', self, false, false), 'name'),
                                            arbiters: J$.T(919705, [], 10, false),
                                            hosts: J$.T(919713, [], 10, false),
                                            passives: J$.T(919721, [], 10, false),
                                            type: J$.T(919729, 'Unknown', 21, false)
                                        }, 11, false)], 10, false)
                                }, 11, false));
                            }
                            return J$.Rt(919793, J$.G(919785, J$.G(919777, J$.R(919769, 'self', self, false, false), 's'), 'topologyDescription'));
                        } catch (J$e) {
                            J$.Ex(925729, J$e);
                        } finally {
                            if (J$.Fr(925737))
                                continue jalangiLabel7;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false), getPreviousTopologyDescription, false, true);
            var emitTopologyDescriptionChanged = J$.W(920105, 'emitTopologyDescriptionChanged', J$.T(920097, function emitTopologyDescriptionChanged(self, description) {
                jalangiLabel8:
                    while (true) {
                        try {
                            J$.Fe(920065, arguments.callee, this, arguments);
                            arguments = J$.N(920073, 'arguments', arguments, true, false, false);
                            self = J$.N(920081, 'self', self, true, false, false);
                            description = J$.N(920089, 'description', description, true, false, false);
                            if (J$.C(55016, J$.B(98698, '>', J$.G(919865, J$.M(919857, J$.R(919841, 'self', self, false, false), 'listeners', false)(J$.T(919849, 'topologyDescriptionChanged', 21, false)), 'length'), J$.T(919873, 0, 22, false)))) {
                                J$.M(920025, J$.R(919881, 'self', self, false, false), 'emit', false)(J$.T(919889, 'topologyDescriptionChanged', 21, false), J$.T(920017, {
                                    topologyId: J$.C(55008, J$.B(98714, '!==', J$.G(919913, J$.G(919905, J$.R(919897, 'self', self, false, false), 's'), 'topologyId'), J$.U(98706, '-', J$.T(919921, 1, 22, false)))) ? J$.G(919945, J$.G(919937, J$.R(919929, 'self', self, false, false), 's'), 'topologyId') : J$.G(919961, J$.R(919953, 'self', self, false, false), 'id'),
                                    address: J$.G(919977, J$.R(919969, 'self', self, false, false), 'name'),
                                    previousDescription: J$.F(920001, J$.R(919985, 'getPreviousTopologyDescription', getPreviousTopologyDescription, false, true), false)(J$.R(919993, 'self', self, false, false)),
                                    newDescription: J$.R(920009, 'description', description, false, false)
                                }, 11, false));
                                J$.P(920057, J$.G(920041, J$.R(920033, 'self', self, false, false), 's'), 'serverDescription', J$.R(920049, 'description', description, false, false));
                            }
                        } catch (J$e) {
                            J$.Ex(925745, J$e);
                        } finally {
                            if (J$.Fr(925753))
                                continue jalangiLabel8;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false), emitTopologyDescriptionChanged, false, true);
            var changedIsMaster = J$.W(920305, 'changedIsMaster', J$.T(920297, function changedIsMaster(self, currentIsmaster, ismaster) {
                jalangiLabel9:
                    while (true) {
                        try {
                            J$.Fe(920241, arguments.callee, this, arguments);
                            arguments = J$.N(920249, 'arguments', arguments, true, false, false);
                            self = J$.N(920257, 'self', self, true, false, false);
                            currentIsmaster = J$.N(920265, 'currentIsmaster', currentIsmaster, true, false, false);
                            ismaster = J$.N(920273, 'ismaster', ismaster, true, false, false);
                            J$.N(920281, 'currentType', currentType, false, false, false);
                            J$.N(920289, 'newType', newType, false, false, false);
                            var currentType = J$.W(920145, 'currentType', J$.F(920137, J$.R(920113, 'getTopologyType', getTopologyType, false, true), false)(J$.R(920121, 'self', self, false, false), J$.R(920129, 'currentIsmaster', currentIsmaster, false, false)), currentType, false, false);
                            var newType = J$.W(920185, 'newType', J$.F(920177, J$.R(920153, 'getTopologyType', getTopologyType, false, true), false)(J$.R(920161, 'self', self, false, false), J$.R(920169, 'ismaster', ismaster, false, false)), newType, false, false);
                            if (J$.C(55024, J$.B(98722, '!==', J$.R(920193, 'newType', newType, false, false), J$.R(920201, 'currentType', currentType, false, false))))
                                return J$.Rt(920217, J$.T(920209, true, 23, false));
                            return J$.Rt(920233, J$.T(920225, false, 23, false));
                        } catch (J$e) {
                            J$.Ex(925761, J$e);
                        } finally {
                            if (J$.Fr(925769))
                                continue jalangiLabel9;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false), changedIsMaster, false, true);
            var getTopologyType = J$.W(920625, 'getTopologyType', J$.T(920617, function getTopologyType(self, ismaster) {
                jalangiLabel10:
                    while (true) {
                        try {
                            J$.Fe(920585, arguments.callee, this, arguments);
                            arguments = J$.N(920593, 'arguments', arguments, true, false, false);
                            self = J$.N(920601, 'self', self, true, false, false);
                            ismaster = J$.N(920609, 'ismaster', ismaster, true, false, false);
                            if (J$.C(55032, J$.U(98730, '!', J$.R(920313, 'ismaster', ismaster, false, false)))) {
                                ismaster = J$.W(920337, 'ismaster', J$.G(920329, J$.R(920321, 'self', self, false, false), 'ismaster'), ismaster, false, false);
                            }
                            if (J$.C(55040, J$.U(98738, '!', J$.R(920345, 'ismaster', ismaster, false, false))))
                                return J$.Rt(920361, J$.T(920353, 'Unknown', 21, false));
                            if (J$.C(55056, J$.C(55048, J$.G(920377, J$.R(920369, 'ismaster', ismaster, false, false), 'ismaster')) ? J$.B(98746, '===', J$.G(920393, J$.R(920385, 'ismaster', ismaster, false, false), 'msg'), J$.T(920401, 'isdbgrid', 21, false)) : J$._()))
                                return J$.Rt(920417, J$.T(920409, 'Mongos', 21, false));
                            if (J$.C(55072, J$.C(55064, J$.G(920433, J$.R(920425, 'ismaster', ismaster, false, false), 'ismaster')) ? J$.U(98754, '!', J$.G(920449, J$.R(920441, 'ismaster', ismaster, false, false), 'hosts')) : J$._()))
                                return J$.Rt(920465, J$.T(920457, 'Standalone', 21, false));
                            if (J$.C(55080, J$.G(920481, J$.R(920473, 'ismaster', ismaster, false, false), 'ismaster')))
                                return J$.Rt(920497, J$.T(920489, 'RSPrimary', 21, false));
                            if (J$.C(55088, J$.G(920513, J$.R(920505, 'ismaster', ismaster, false, false), 'secondary')))
                                return J$.Rt(920529, J$.T(920521, 'RSSecondary', 21, false));
                            if (J$.C(55096, J$.G(920545, J$.R(920537, 'ismaster', ismaster, false, false), 'arbiterOnly')))
                                return J$.Rt(920561, J$.T(920553, 'RSArbiter', 21, false));
                            return J$.Rt(920577, J$.T(920569, 'Unknown', 21, false));
                        } catch (J$e) {
                            J$.Ex(925777, J$e);
                        } finally {
                            if (J$.Fr(925785))
                                continue jalangiLabel10;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false), getTopologyType, false, true);
            var inquireServerState = J$.W(921593, 'inquireServerState', J$.T(921585, function inquireServerState(self) {
                jalangiLabel13:
                    while (true) {
                        try {
                            J$.Fe(921561, arguments.callee, this, arguments);
                            arguments = J$.N(921569, 'arguments', arguments, true, false, false);
                            self = J$.N(921577, 'self', self, true, false, false);
                            return J$.Rt(921553, J$.T(921545, function (callback) {
                                jalangiLabel12:
                                    while (true) {
                                        try {
                                            J$.Fe(921513, arguments.callee, this, arguments);
                                            arguments = J$.N(921521, 'arguments', arguments, true, false, false);
                                            callback = J$.N(921529, 'callback', callback, true, false, false);
                                            J$.N(921537, 'start', start, false, false, false);
                                            if (J$.C(55104, J$.B(98762, '===', J$.G(920649, J$.G(920641, J$.R(920633, 'self', self, false, false), 's'), 'state'), J$.T(920657, 'destroyed', 21, false))))
                                                return J$.Rt(920665, undefined);
                                            var start = J$.W(920697, 'start', J$.M(920689, J$.F(920681, J$.I(typeof Date === 'undefined' ? Date = J$.R(920673, 'Date', undefined, true, true) : Date = J$.R(920673, 'Date', Date, true, true)), true)(), 'getTime', false)(), start, false, false);
                                            J$.F(920753, J$.R(920705, 'emitSDAMEvent', emitSDAMEvent, false, true), false)(J$.R(920713, 'self', self, false, false), J$.T(920721, 'serverHeartbeatStarted', 21, false), J$.T(920745, { connectionId: J$.G(920737, J$.R(920729, 'self', self, false, false), 'name') }, 11, false));
                                            J$.M(921505, J$.R(920761, 'self', self, false, false), 'command', false)(J$.T(920769, 'admin.$cmd', 21, false), J$.T(920785, { ismaster: J$.T(920777, true, 23, false) }, 11, false), J$.T(920801, { monitoring: J$.T(920793, true, 23, false) }, 11, false), J$.T(921497, function (err, r) {
                                                jalangiLabel11:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(921457, arguments.callee, this, arguments);
                                                            arguments = J$.N(921465, 'arguments', arguments, true, false, false);
                                                            err = J$.N(921473, 'err', err, true, false, false);
                                                            r = J$.N(921481, 'r', r, true, false, false);
                                                            J$.N(921489, 'latencyMS', latencyMS, false, false, false);
                                                            if (J$.C(55128, J$.U(98770, '!', J$.R(920809, 'err', err, false, false)))) {
                                                                J$.M(920849, J$.R(920817, 'self', self, false, false), 'emit', false)(J$.T(920825, 'ismaster', 21, false), J$.R(920833, 'r', r, false, false), J$.R(920841, 'self', self, false, false));
                                                                var latencyMS = J$.W(920889, 'latencyMS', J$.B(98778, '-', J$.M(920873, J$.F(920865, J$.I(typeof Date === 'undefined' ? Date = J$.R(920857, 'Date', undefined, true, true) : Date = J$.R(920857, 'Date', Date, true, true)), true)(), 'getTime', false)(), J$.R(920881, 'start', start, false, false)), latencyMS, false, false);
                                                                J$.F(920969, J$.R(920897, 'emitSDAMEvent', emitSDAMEvent, false, true), false)(J$.R(920905, 'self', self, false, false), J$.T(920913, 'serverHeartbeatSucceeded', 21, false), J$.T(920961, {
                                                                    durationMS: J$.R(920921, 'latencyMS', latencyMS, false, false),
                                                                    reply: J$.G(920937, J$.R(920929, 'r', r, false, false), 'result'),
                                                                    connectionId: J$.G(920953, J$.R(920945, 'self', self, false, false), 'name')
                                                                }, 11, false));
                                                                if (J$.C(55120, J$.F(921033, J$.R(920977, 'changedIsMaster', changedIsMaster, false, true), false)(J$.R(920985, 'self', self, false, false), J$.G(921009, J$.G(921001, J$.R(920993, 'self', self, false, false), 's'), 'ismaster'), J$.G(921025, J$.R(921017, 'r', r, false, false), 'result')))) {
                                                                    J$.F(921161, J$.R(921041, 'emitServerDescriptionChanged', emitServerDescriptionChanged, false, true), false)(J$.R(921049, 'self', self, false, false), J$.T(921153, {
                                                                        address: J$.G(921065, J$.R(921057, 'self', self, false, false), 'name'),
                                                                        arbiters: J$.T(921073, [], 10, false),
                                                                        hosts: J$.T(921081, [], 10, false),
                                                                        passives: J$.T(921089, [], 10, false),
                                                                        type: J$.C(55112, J$.U(98786, '!', J$.G(921113, J$.G(921105, J$.R(921097, 'self', self, false, false), 's'), 'inTopology'))) ? J$.T(921121, 'Standalone', 21, false) : J$.F(921145, J$.R(921129, 'getTopologyType', getTopologyType, false, true), false)(J$.R(921137, 'self', self, false, false))
                                                                    }, 11, false));
                                                                }
                                                                J$.P(921201, J$.G(921177, J$.R(921169, 'self', self, false, false), 's'), 'ismaster', J$.G(921193, J$.R(921185, 'r', r, false, false), 'result'));
                                                                J$.P(921233, J$.G(921217, J$.R(921209, 'self', self, false, false), 's'), 'isMasterLatencyMS', J$.R(921225, 'latencyMS', latencyMS, false, false));
                                                            } else {
                                                                J$.F(921305, J$.R(921241, 'emitSDAMEvent', emitSDAMEvent, false, true), false)(J$.R(921249, 'self', self, false, false), J$.T(921257, 'serverHeartbeatFailed', 21, false), J$.T(921297, {
                                                                    durationMS: J$.R(921265, 'latencyMS', latencyMS, false, false),
                                                                    failure: J$.R(921273, 'err', err, false, false),
                                                                    connectionId: J$.G(921289, J$.R(921281, 'self', self, false, false), 'name')
                                                                }, 11, false));
                                                            }
                                                            if (J$.C(55136, J$.B(98802, '===', J$.U(98794, 'typeof', J$.R(921313, 'callback', callback, false, false)), J$.T(921321, 'function', 21, false)))) {
                                                                return J$.Rt(921361, J$.F(921353, J$.R(921329, 'callback', callback, false, false), false)(J$.R(921337, 'err', err, false, false), J$.R(921345, 'r', r, false, false)));
                                                            }
                                                            J$.P(921449, J$.G(921377, J$.R(921369, 'self', self, false, false), 's'), 'inquireServerStateTimeout', J$.F(921441, J$.I(typeof setTimeout === 'undefined' ? setTimeout = J$.R(921385, 'setTimeout', undefined, true, true) : setTimeout = J$.R(921385, 'setTimeout', setTimeout, true, true)), false)(J$.F(921409, J$.R(921393, 'inquireServerState', inquireServerState, false, false), false)(J$.R(921401, 'self', self, false, false)), J$.G(921433, J$.G(921425, J$.R(921417, 'self', self, false, false), 's'), 'haInterval')));
                                                        } catch (J$e) {
                                                            J$.Ex(925793, J$e);
                                                        } finally {
                                                            if (J$.Fr(925801))
                                                                continue jalangiLabel11;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false));
                                        } catch (J$e) {
                                            J$.Ex(925809, J$e);
                                        } finally {
                                            if (J$.Fr(925817))
                                                continue jalangiLabel12;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                        } catch (J$e) {
                            J$.Ex(925825, J$e);
                        } finally {
                            if (J$.Fr(925833))
                                continue jalangiLabel13;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false), inquireServerState, false, true);
            var cloneOptions = J$.W(921753, 'cloneOptions', J$.T(921745, function cloneOptions(options) {
                jalangiLabel14:
                    while (true) {
                        try {
                            J$.Fe(921705, arguments.callee, this, arguments);
                            arguments = J$.N(921713, 'arguments', arguments, true, false, false);
                            options = J$.N(921721, 'options', options, true, false, false);
                            J$.N(921729, 'opts', opts, false, false, false);
                            J$.N(921737, 'name', name, false, false, false);
                            var opts = J$.W(921609, 'opts', J$.T(921601, {}, 11, false), opts, false, false);
                            for (var name in J$.H(921673, J$.R(921617, 'options', options, false, false))) {
                                J$.N(921681, 'name', name, false, true, false);
                                {
                                    {
                                        J$.P(921665, J$.R(921625, 'opts', opts, false, false), J$.R(921633, 'name', name, false, false), J$.G(921657, J$.R(921641, 'options', options, false, false), J$.R(921649, 'name', name, false, false)));
                                    }
                                }
                            }
                            return J$.Rt(921697, J$.R(921689, 'opts', opts, false, false));
                        } catch (J$e) {
                            J$.Ex(925841, J$e);
                        } finally {
                            if (J$.Fr(925849))
                                continue jalangiLabel14;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false), cloneOptions, false, true);
            var SessionMixins = J$.W(924113, 'SessionMixins', J$.T(924105, {
                endSessions: J$.T(924097, function endSessions(sessions, callback) {
                    jalangiLabel26:
                        while (true) {
                            try {
                                J$.Fe(924065, arguments.callee, this, arguments);
                                arguments = J$.N(924073, 'arguments', arguments, true, false, false);
                                sessions = J$.N(924081, 'sessions', sessions, true, false, false);
                                callback = J$.N(924089, 'callback', callback, true, false, false);
                                if (J$.C(55296, J$.U(99098, '!', J$.M(923913, J$.I(typeof Array === 'undefined' ? Array = J$.R(923897, 'Array', undefined, true, true) : Array = J$.R(923897, 'Array', Array, true, true)), 'isArray', false)(J$.R(923905, 'sessions', sessions, false, false))))) {
                                    sessions = J$.W(923937, 'sessions', J$.T(923929, [J$.R(923921, 'sessions', sessions, false, false)], 10, false), sessions, false, false);
                                }
                                J$.M(924057, J$.R(923945, 'this', this, false, false), 'command', false)(J$.T(923953, 'admin.$cmd', 21, false), J$.T(923969, { endSessions: J$.R(923961, 'sessions', sessions, false, false) }, 11, false), J$.T(923993, { readPreference: J$.G(923985, J$.R(923977, 'ReadPreference', ReadPreference, false, true), 'primaryPreferred') }, 11, false), J$.T(924049, function () {
                                    jalangiLabel25:
                                        while (true) {
                                            try {
                                                J$.Fe(924033, arguments.callee, this, arguments);
                                                arguments = J$.N(924041, 'arguments', arguments, true, false, false);
                                                if (J$.C(55304, J$.B(99114, '===', J$.U(99106, 'typeof', J$.R(924001, 'callback', callback, false, false)), J$.T(924009, 'function', 21, false))))
                                                    J$.F(924025, J$.R(924017, 'callback', callback, false, false), false)();
                                            } catch (J$e) {
                                                J$.Ex(926017, J$e);
                                            } finally {
                                                if (J$.Fr(926025))
                                                    continue jalangiLabel25;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false));
                            } catch (J$e) {
                                J$.Ex(926033, J$e);
                            } finally {
                                if (J$.Fr(926041))
                                    continue jalangiLabel26;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false)
            }, 11, false), SessionMixins, false, true);
            var RETRYABLE_WIRE_VERSION = J$.W(924321, 'RETRYABLE_WIRE_VERSION', J$.T(924313, 6, 22, false), RETRYABLE_WIRE_VERSION, false, true);
            var isRetryableWritesSupported = J$.W(924537, 'isRetryableWritesSupported', J$.T(924529, function isRetryableWritesSupported(topology) {
                jalangiLabel28:
                    while (true) {
                        try {
                            J$.Fe(924497, arguments.callee, this, arguments);
                            arguments = J$.N(924505, 'arguments', arguments, true, false, false);
                            topology = J$.N(924513, 'topology', topology, true, false, false);
                            J$.N(924521, 'maxWireVersion', maxWireVersion, false, false, false);
                            var maxWireVersion = J$.W(924353, 'maxWireVersion', J$.G(924345, J$.M(924337, J$.R(924329, 'topology', topology, false, false), 'lastIsMaster', false)(), 'maxWireVersion'), maxWireVersion, false, false);
                            if (J$.C(55336, J$.B(99138, '<', J$.R(924361, 'maxWireVersion', maxWireVersion, false, false), J$.R(924369, 'RETRYABLE_WIRE_VERSION', RETRYABLE_WIRE_VERSION, false, true)))) {
                                return J$.Rt(924385, J$.T(924377, false, 23, false));
                            }
                            if (J$.C(55344, J$.U(99146, '!', J$.G(924401, J$.R(924393, 'topology', topology, false, false), 'logicalSessionTimeoutMinutes')))) {
                                return J$.Rt(924417, J$.T(924409, false, 23, false));
                            }
                            if (J$.C(55352, J$.B(99154, '===', J$.F(924441, J$.R(924425, 'topologyType', topologyType, false, true), false)(J$.R(924433, 'topology', topology, false, false)), J$.G(924457, J$.R(924449, 'TopologyType', TopologyType, false, true), 'Single')))) {
                                return J$.Rt(924473, J$.T(924465, false, 23, false));
                            }
                            return J$.Rt(924489, J$.T(924481, true, 23, false));
                        } catch (J$e) {
                            J$.Ex(926065, J$e);
                        } finally {
                            if (J$.Fr(926073))
                                continue jalangiLabel28;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false), isRetryableWritesSupported, false, true);
            var MMAPv1_RETRY_WRITES_ERROR_MESSAGE = J$.W(924553, 'MMAPv1_RETRY_WRITES_ERROR_MESSAGE', J$.T(924545, 'This MongoDB deployment does not support retryable writes. Please add retryWrites=false to your connection string.', 21, false), MMAPv1_RETRY_WRITES_ERROR_MESSAGE, false, true);
            J$.P(924761, J$.G(924745, J$.I(typeof module === 'undefined' ? module = J$.R(924737, 'module', undefined, true, true) : module = J$.R(924737, 'module', module, true, true)), 'exports'), 'SessionMixins', J$.R(924753, 'SessionMixins', SessionMixins, false, true));
            J$.P(924793, J$.G(924777, J$.I(typeof module === 'undefined' ? module = J$.R(924769, 'module', undefined, true, true) : module = J$.R(924769, 'module', module, true, true)), 'exports'), 'resolveClusterTime', J$.R(924785, 'resolveClusterTime', resolveClusterTime, false, true));
            J$.P(924825, J$.G(924809, J$.I(typeof module === 'undefined' ? module = J$.R(924801, 'module', undefined, true, true) : module = J$.R(924801, 'module', module, true, true)), 'exports'), 'inquireServerState', J$.R(924817, 'inquireServerState', inquireServerState, false, true));
            J$.P(924857, J$.G(924841, J$.I(typeof module === 'undefined' ? module = J$.R(924833, 'module', undefined, true, true) : module = J$.R(924833, 'module', module, true, true)), 'exports'), 'getTopologyType', J$.R(924849, 'getTopologyType', getTopologyType, false, true));
            J$.P(924889, J$.G(924873, J$.I(typeof module === 'undefined' ? module = J$.R(924865, 'module', undefined, true, true) : module = J$.R(924865, 'module', module, true, true)), 'exports'), 'emitServerDescriptionChanged', J$.R(924881, 'emitServerDescriptionChanged', emitServerDescriptionChanged, false, true));
            J$.P(924921, J$.G(924905, J$.I(typeof module === 'undefined' ? module = J$.R(924897, 'module', undefined, true, true) : module = J$.R(924897, 'module', module, true, true)), 'exports'), 'emitTopologyDescriptionChanged', J$.R(924913, 'emitTopologyDescriptionChanged', emitTopologyDescriptionChanged, false, true));
            J$.P(924953, J$.G(924937, J$.I(typeof module === 'undefined' ? module = J$.R(924929, 'module', undefined, true, true) : module = J$.R(924929, 'module', module, true, true)), 'exports'), 'cloneOptions', J$.R(924945, 'cloneOptions', cloneOptions, false, true));
            J$.P(924985, J$.G(924969, J$.I(typeof module === 'undefined' ? module = J$.R(924961, 'module', undefined, true, true) : module = J$.R(924961, 'module', module, true, true)), 'exports'), 'createClientInfo', J$.R(924977, 'createClientInfo', createClientInfo, false, true));
            J$.P(925017, J$.G(925001, J$.I(typeof module === 'undefined' ? module = J$.R(924993, 'module', undefined, true, true) : module = J$.R(924993, 'module', module, true, true)), 'exports'), 'createCompressionInfo', J$.R(925009, 'createCompressionInfo', createCompressionInfo, false, true));
            J$.P(925049, J$.G(925033, J$.I(typeof module === 'undefined' ? module = J$.R(925025, 'module', undefined, true, true) : module = J$.R(925025, 'module', module, true, true)), 'exports'), 'clone', J$.R(925041, 'clone', clone, false, true));
            J$.P(925081, J$.G(925065, J$.I(typeof module === 'undefined' ? module = J$.R(925057, 'module', undefined, true, true) : module = J$.R(925057, 'module', module, true, true)), 'exports'), 'diff', J$.R(925073, 'diff', diff, false, true));
            J$.P(925113, J$.G(925097, J$.I(typeof module === 'undefined' ? module = J$.R(925089, 'module', undefined, true, true) : module = J$.R(925089, 'module', module, true, true)), 'exports'), 'Interval', J$.R(925105, 'Interval', Interval, false, true));
            J$.P(925145, J$.G(925129, J$.I(typeof module === 'undefined' ? module = J$.R(925121, 'module', undefined, true, true) : module = J$.R(925121, 'module', module, true, true)), 'exports'), 'Timeout', J$.R(925137, 'Timeout', Timeout, false, true));
            J$.P(925177, J$.G(925161, J$.I(typeof module === 'undefined' ? module = J$.R(925153, 'module', undefined, true, true) : module = J$.R(925153, 'module', module, true, true)), 'exports'), 'isRetryableWritesSupported', J$.R(925169, 'isRetryableWritesSupported', isRetryableWritesSupported, false, true));
            J$.P(925209, J$.G(925193, J$.I(typeof module === 'undefined' ? module = J$.R(925185, 'module', undefined, true, true) : module = J$.R(925185, 'module', module, true, true)), 'exports'), 'getMMAPError', J$.R(925201, 'getMMAPError', getMMAPError, false, true));
            J$.P(925241, J$.G(925225, J$.I(typeof module === 'undefined' ? module = J$.R(925217, 'module', undefined, true, true) : module = J$.R(925217, 'module', module, true, true)), 'exports'), 'topologyType', J$.R(925233, 'topologyType', topologyType, false, true));
        } catch (J$e) {
            J$.Ex(926097, J$e);
        } finally {
            if (J$.Sr(926105))
                continue jalangiLabel30;
            else
                break jalangiLabel30;
        }
    }
// JALANGI DO NOT INSTRUMENT

