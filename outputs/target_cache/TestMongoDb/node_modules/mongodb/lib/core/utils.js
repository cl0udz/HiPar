J$.noInstrEval = false;
jalangiLabel14:
    while (true) {
        try {
            J$.Se(943153, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestMongoDb/node_modules/mongodb/lib/core/utils.js');
            function relayEvents(listener, emitter, events) {
                jalangiLabel4:
                    while (true) {
                        try {
                            J$.Fe(941777, arguments.callee, this, arguments);
                            arguments = J$.N(941785, 'arguments', arguments, true, false, false);
                            listener = J$.N(941793, 'listener', listener, true, false, false);
                            emitter = J$.N(941801, 'emitter', emitter, true, false, false);
                            events = J$.N(941809, 'events', events, true, false, false);
                            J$.M(941769, J$.R(941625, 'events', events, false, false), 'forEach', false)(J$.T(941761, function (eventName) {
                                jalangiLabel3:
                                    while (true) {
                                        try {
                                            J$.Fe(941737, arguments.callee, this, arguments);
                                            arguments = J$.N(941745, 'arguments', arguments, true, false, false);
                                            eventName = J$.N(941753, 'eventName', eventName, true, false, false);
                                            return J$.Rt(941729, J$.M(941721, J$.R(941633, 'listener', listener, false, false), 'on', false)(J$.R(941641, 'eventName', eventName, false, false), J$.T(941713, function (event) {
                                                jalangiLabel2:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(941689, arguments.callee, this, arguments);
                                                            arguments = J$.N(941697, 'arguments', arguments, true, false, false);
                                                            event = J$.N(941705, 'event', event, true, false, false);
                                                            return J$.Rt(941681, J$.M(941673, J$.R(941649, 'emitter', emitter, false, false), 'emit', false)(J$.R(941657, 'eventName', eventName, false, false), J$.R(941665, 'event', event, false, false)));
                                                        } catch (J$e) {
                                                            J$.Ex(943361, J$e);
                                                        } finally {
                                                            if (J$.Fr(943369))
                                                                continue jalangiLabel2;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false)));
                                        } catch (J$e) {
                                            J$.Ex(943377, J$e);
                                        } finally {
                                            if (J$.Fr(943385))
                                                continue jalangiLabel3;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                        } catch (J$e) {
                            J$.Ex(943393, J$e);
                        } finally {
                            if (J$.Fr(943401))
                                continue jalangiLabel4;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function retrieveKerberos() {
                jalangiLabel5:
                    while (true) {
                        try {
                            J$.Fe(941929, arguments.callee, this, arguments);
                            arguments = J$.N(941937, 'arguments', arguments, true, false, false);
                            J$.N(941945, 'kerberos', kerberos, false, false, false);
                            var kerberos;
                            try {
                                kerberos = J$.W(941841, 'kerberos', J$.F(941833, J$.R(941817, 'requireOptional', requireOptional, false, true), false)(J$.T(941825, 'kerberos', 21, false)), kerberos, false, false);
                            } catch (err) {
                                J$.N(941905, 'err', err, false, false, true);
                                if (J$.C(56600, J$.B(100314, '===', J$.G(941857, J$.R(941849, 'err', err, false, false), 'code'), J$.T(941865, 'MODULE_NOT_FOUND', 21, false)))) {
                                    throw J$.F(941889, J$.I(typeof Error === 'undefined' ? Error = J$.R(941873, 'Error', undefined, true, true) : Error = J$.R(941873, 'Error', Error, true, true)), true)(J$.T(941881, 'The `kerberos` module was not found. Please install it and try again.', 21, false));
                                }
                                throw J$.R(941897, 'err', err, false, false);
                            }
                            return J$.Rt(941921, J$.R(941913, 'kerberos', kerberos, false, false));
                        } catch (J$e) {
                            J$.Ex(943409, J$e);
                        } finally {
                            if (J$.Fr(943417))
                                continue jalangiLabel5;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function retrieveEJSON() {
                jalangiLabel7:
                    while (true) {
                        try {
                            J$.Fe(942153, arguments.callee, this, arguments);
                            arguments = J$.N(942161, 'arguments', arguments, true, false, false);
                            J$.N(942169, 'EJSON', EJSON, false, false, false);
                            var EJSON = J$.W(942017, 'EJSON', J$.T(942009, null, 25, false), EJSON, false, false);
                            try {
                                EJSON = J$.W(942049, 'EJSON', J$.F(942041, J$.R(942025, 'requireOptional', requireOptional, false, true), false)(J$.T(942033, 'mongodb-extjson', 21, false)), EJSON, false, false);
                            } catch (error) {
                                J$.N(942057, 'error', error, false, false, true);
                            }
                            if (J$.C(56608, J$.U(100322, '!', J$.R(942065, 'EJSON', EJSON, false, false)))) {
                                EJSON = J$.W(942129, 'EJSON', J$.T(942121, {
                                    parse: J$.R(942073, 'noEJSONError', noEJSONError, false, true),
                                    deserialize: J$.R(942081, 'noEJSONError', noEJSONError, false, true),
                                    serialize: J$.R(942089, 'noEJSONError', noEJSONError, false, true),
                                    stringify: J$.R(942097, 'noEJSONError', noEJSONError, false, true),
                                    setBSONModule: J$.R(942105, 'noEJSONError', noEJSONError, false, true),
                                    BSON: J$.R(942113, 'noEJSONError', noEJSONError, false, true)
                                }, 11, false), EJSON, false, false);
                            }
                            return J$.Rt(942145, J$.R(942137, 'EJSON', EJSON, false, false));
                        } catch (J$e) {
                            J$.Ex(943441, J$e);
                        } finally {
                            if (J$.Fr(943449))
                                continue jalangiLabel7;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function maxWireVersion(topologyOrServer) {
                jalangiLabel8:
                    while (true) {
                        try {
                            J$.Fe(942369, arguments.callee, this, arguments);
                            arguments = J$.N(942377, 'arguments', arguments, true, false, false);
                            topologyOrServer = J$.N(942385, 'topologyOrServer', topologyOrServer, true, false, false);
                            J$.N(942393, 'lastIsMaster', lastIsMaster, false, false, false);
                            if (J$.C(56616, J$.G(942185, J$.R(942177, 'topologyOrServer', topologyOrServer, false, false), 'ismaster'))) {
                                return J$.Rt(942217, J$.G(942209, J$.G(942201, J$.R(942193, 'topologyOrServer', topologyOrServer, false, false), 'ismaster'), 'maxWireVersion'));
                            }
                            if (J$.C(56632, J$.B(100338, '===', J$.U(100330, 'typeof', J$.G(942233, J$.R(942225, 'topologyOrServer', topologyOrServer, false, false), 'lastIsMaster')), J$.T(942241, 'function', 21, false)))) {
                                var lastIsMaster = J$.W(942265, 'lastIsMaster', J$.M(942257, J$.R(942249, 'topologyOrServer', topologyOrServer, false, false), 'lastIsMaster', false)(), lastIsMaster, false, false);
                                if (J$.C(56624, J$.R(942273, 'lastIsMaster', lastIsMaster, false, false))) {
                                    return J$.Rt(942297, J$.G(942289, J$.R(942281, 'lastIsMaster', lastIsMaster, false, false), 'maxWireVersion'));
                                }
                            }
                            if (J$.C(56640, J$.G(942313, J$.R(942305, 'topologyOrServer', topologyOrServer, false, false), 'description'))) {
                                return J$.Rt(942345, J$.G(942337, J$.G(942329, J$.R(942321, 'topologyOrServer', topologyOrServer, false, false), 'description'), 'maxWireVersion'));
                            }
                            return J$.Rt(942361, J$.T(942353, null, 25, false));
                        } catch (J$e) {
                            J$.Ex(943457, J$e);
                        } finally {
                            if (J$.Fr(943465))
                                continue jalangiLabel8;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function collationNotSupported(server, cmd) {
                jalangiLabel9:
                    while (true) {
                        try {
                            J$.Fe(942465, arguments.callee, this, arguments);
                            arguments = J$.N(942473, 'arguments', arguments, true, false, false);
                            server = J$.N(942481, 'server', server, true, false, false);
                            cmd = J$.N(942489, 'cmd', cmd, true, false, false);
                            return J$.Rt(942457, J$.C(56656, J$.C(56648, J$.R(942401, 'cmd', cmd, false, false)) ? J$.G(942417, J$.R(942409, 'cmd', cmd, false, false), 'collation') : J$._()) ? J$.B(100346, '<', J$.F(942441, J$.R(942425, 'maxWireVersion', maxWireVersion, false, true), false)(J$.R(942433, 'server', server, false, false)), J$.T(942449, 5, 22, false)) : J$._());
                        } catch (J$e) {
                            J$.Ex(943473, J$e);
                        } finally {
                            if (J$.Fr(943481))
                                continue jalangiLabel9;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function isPromiseLike(maybePromise) {
                jalangiLabel10:
                    while (true) {
                        try {
                            J$.Fe(942537, arguments.callee, this, arguments);
                            arguments = J$.N(942545, 'arguments', arguments, true, false, false);
                            maybePromise = J$.N(942553, 'maybePromise', maybePromise, true, false, false);
                            return J$.Rt(942529, J$.C(56664, J$.R(942497, 'maybePromise', maybePromise, false, false)) ? J$.B(100362, '===', J$.U(100354, 'typeof', J$.G(942513, J$.R(942505, 'maybePromise', maybePromise, false, false), 'then')), J$.T(942521, 'function', 21, false)) : J$._());
                        } catch (J$e) {
                            J$.Ex(943489, J$e);
                        } finally {
                            if (J$.Fr(943497))
                                continue jalangiLabel10;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function eachAsync(arr, eachFn, callback) {
                jalangiLabel12:
                    while (true) {
                        try {
                            J$.Fe(942913, arguments.callee, this, arguments);
                            function eachCallback(err) {
                                jalangiLabel11:
                                    while (true) {
                                        try {
                                            J$.Fe(942753, arguments.callee, this, arguments);
                                            arguments = J$.N(942761, 'arguments', arguments, true, false, false);
                                            err = J$.N(942769, 'err', err, true, false, false);
                                            if (J$.C(56680, J$.R(942657, 'err', err, false, false))) {
                                                J$.F(942689, J$.R(942665, 'callback', callback, false, false), false)(J$.R(942673, 'err', err, false, false), J$.T(942681, null, 25, false));
                                                return J$.Rt(942697, undefined);
                                            }
                                            if (J$.C(56688, J$.B(100394, '===', completed = J$.W(942713, 'completed', J$.B(100386, '+', J$.U(100378, '+', J$.R(942705, 'completed', completed, false, false)), 1), completed, false, false), J$.R(942721, 'length', length, false, false)))) {
                                                J$.F(942745, J$.R(942729, 'callback', callback, false, false), false)(J$.T(942737, null, 25, false));
                                            }
                                        } catch (J$e) {
                                            J$.Ex(943505, J$e);
                                        } finally {
                                            if (J$.Fr(943513))
                                                continue jalangiLabel11;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }
                            arguments = J$.N(942921, 'arguments', arguments, true, false, false);
                            arr = J$.N(942929, 'arr', arr, true, false, false);
                            eachFn = J$.N(942937, 'eachFn', eachFn, true, false, false);
                            callback = J$.N(942945, 'callback', callback, true, false, false);
                            J$.N(942953, 'length', length, false, false, false);
                            J$.N(942961, 'completed', completed, false, false, false);
                            eachCallback = J$.N(942977, 'eachCallback', J$.T(942969, eachCallback, 12, false), true, false, false);
                            J$.N(942985, 'idx', idx, false, false, false);
                            if (J$.C(56672, J$.B(100370, '===', J$.G(942569, J$.R(942561, 'arr', arr, false, false), 'length'), J$.T(942577, 0, 22, false)))) {
                                J$.F(942601, J$.R(942585, 'callback', callback, false, false), false)(J$.T(942593, null, 25, false));
                                return J$.Rt(942609, undefined);
                            }
                            var length = J$.W(942633, 'length', J$.G(942625, J$.R(942617, 'arr', arr, false, false), 'length'), length, false, false);
                            var completed = J$.W(942649, 'completed', J$.T(942641, 0, 22, false), completed, false, false);
                            for (var idx = J$.W(942785, 'idx', J$.T(942777, 0, 22, false), idx, false, false); J$.C(56696, J$.B(100402, '<', J$.R(942793, 'idx', idx, false, false), J$.R(942801, 'length', length, false, false))); idx = J$.W(942817, 'idx', J$.B(100418, '+', J$.U(100410, '+', J$.R(942809, 'idx', idx, false, false)), 1), idx, false, false)) {
                                try {
                                    J$.F(942865, J$.R(942825, 'eachFn', eachFn, false, false), false)(J$.G(942849, J$.R(942833, 'arr', arr, false, false), J$.R(942841, 'idx', idx, false, false)), J$.R(942857, 'eachCallback', eachCallback, false, false));
                                } catch (err) {
                                    J$.N(942905, 'err', err, false, false, true);
                                    J$.F(942889, J$.R(942873, 'callback', callback, false, false), false)(J$.R(942881, 'err', err, false, false));
                                    return J$.Rt(942897, undefined);
                                }
                            }
                        } catch (J$e) {
                            J$.Ex(943521, J$e);
                        } finally {
                            if (J$.Fr(943529))
                                continue jalangiLabel12;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function isUnifiedTopology(topology) {
                jalangiLabel13:
                    while (true) {
                        try {
                            J$.Fe(943025, arguments.callee, this, arguments);
                            arguments = J$.N(943033, 'arguments', arguments, true, false, false);
                            topology = J$.N(943041, 'topology', topology, true, false, false);
                            return J$.Rt(943017, J$.B(100426, '!=', J$.G(943001, J$.R(942993, 'topology', topology, false, false), 'description'), J$.T(943009, null, 25, false)));
                        } catch (J$e) {
                            J$.Ex(943537, J$e);
                        } finally {
                            if (J$.Fr(943545))
                                continue jalangiLabel13;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(943161, 'crypto', crypto, false, false, false);
            J$.N(943169, 'requireOptional', requireOptional, false, false, false);
            J$.N(943177, 'uuidV4', uuidV4, false, false, false);
            J$.N(943185, 'calculateDurationInMs', calculateDurationInMs, false, false, false);
            relayEvents = J$.N(943201, 'relayEvents', J$.T(943193, relayEvents, 12, false), true, false, false);
            retrieveKerberos = J$.N(943217, 'retrieveKerberos', J$.T(943209, retrieveKerberos, 12, false), true, false, false);
            J$.N(943225, 'noEJSONError', noEJSONError, false, false, false);
            retrieveEJSON = J$.N(943241, 'retrieveEJSON', J$.T(943233, retrieveEJSON, 12, false), true, false, false);
            maxWireVersion = J$.N(943257, 'maxWireVersion', J$.T(943249, maxWireVersion, 12, false), true, false, false);
            collationNotSupported = J$.N(943273, 'collationNotSupported', J$.T(943265, collationNotSupported, 12, false), true, false, false);
            isPromiseLike = J$.N(943289, 'isPromiseLike', J$.T(943281, isPromiseLike, 12, false), true, false, false);
            eachAsync = J$.N(943305, 'eachAsync', J$.T(943297, eachAsync, 12, false), true, false, false);
            isUnifiedTopology = J$.N(943321, 'isUnifiedTopology', J$.T(943313, isUnifiedTopology, 12, false), true, false, false);
            J$.T(941185, 'use strict', 21, false);
            var crypto = J$.W(941217, 'crypto', J$.F(941209, J$.I(typeof require === 'undefined' ? require = J$.R(941193, 'require', undefined, true, true) : require = J$.R(941193, 'require', require, true, true)), false)(J$.T(941201, 'crypto', 21, false)), crypto, false, true);
            var requireOptional = J$.W(941249, 'requireOptional', J$.F(941241, J$.I(typeof require === 'undefined' ? require = J$.R(941225, 'require', undefined, true, true) : require = J$.R(941225, 'require', require, true, true)), false)(J$.T(941233, 'require_optional', 21, false)), requireOptional, false, true);
            var uuidV4 = J$.W(941465, 'uuidV4', J$.T(941457, function uuidV4() {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(941433, arguments.callee, this, arguments);
                            arguments = J$.N(941441, 'arguments', arguments, true, false, false);
                            J$.N(941449, 'result', result, false, false, false);
                            var result = J$.W(941281, 'result', J$.M(941273, J$.R(941257, 'crypto', crypto, false, true), 'randomBytes', false)(J$.T(941265, 16, 22, false)), result, false, false);
                            J$.P(941345, J$.R(941289, 'result', result, false, false), J$.T(941297, 6, 22, false), J$.B(100266, '|', J$.B(100258, '&', J$.G(941321, J$.R(941305, 'result', result, false, false), J$.T(941313, 6, 22, false)), J$.T(941329, 15, 22, false)), J$.T(941337, 64, 22, false)));
                            J$.P(941409, J$.R(941353, 'result', result, false, false), J$.T(941361, 8, 22, false), J$.B(100282, '|', J$.B(100274, '&', J$.G(941385, J$.R(941369, 'result', result, false, false), J$.T(941377, 8, 22, false)), J$.T(941393, 63, 22, false)), J$.T(941401, 128, 22, false)));
                            return J$.Rt(941425, J$.R(941417, 'result', result, false, false));
                        } catch (J$e) {
                            J$.Ex(943329, J$e);
                        } finally {
                            if (J$.Fr(943337))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false), uuidV4, false, true);
            var calculateDurationInMs = J$.W(941617, 'calculateDurationInMs', J$.T(941609, function calculateDurationInMs(started) {
                jalangiLabel1:
                    while (true) {
                        try {
                            J$.Fe(941577, arguments.callee, this, arguments);
                            arguments = J$.N(941585, 'arguments', arguments, true, false, false);
                            started = J$.N(941593, 'started', started, true, false, false);
                            J$.N(941601, 'hrtime', hrtime, false, false, false);
                            var hrtime = J$.W(941497, 'hrtime', J$.M(941489, J$.I(typeof process === 'undefined' ? process = J$.R(941473, 'process', undefined, true, true) : process = J$.R(941473, 'process', process, true, true)), 'hrtime', false)(J$.R(941481, 'started', started, false, false)), hrtime, false, false);
                            return J$.Rt(941569, J$.B(100306, '/', J$.B(100298, '+', J$.B(100290, '*', J$.G(941521, J$.R(941505, 'hrtime', hrtime, false, false), J$.T(941513, 0, 22, false)), J$.T(941529, 1000000000, 22, false)), J$.G(941553, J$.R(941537, 'hrtime', hrtime, false, false), J$.T(941545, 1, 22, false))), J$.T(941561, 1000000, 22, false)));
                        } catch (J$e) {
                            J$.Ex(943345, J$e);
                        } finally {
                            if (J$.Fr(943353))
                                continue jalangiLabel1;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false), calculateDurationInMs, false, true);
            var noEJSONError = J$.W(942001, 'noEJSONError', J$.T(941993, function noEJSONError() {
                jalangiLabel6:
                    while (true) {
                        try {
                            J$.Fe(941977, arguments.callee, this, arguments);
                            arguments = J$.N(941985, 'arguments', arguments, true, false, false);
                            throw J$.F(941969, J$.I(typeof Error === 'undefined' ? Error = J$.R(941953, 'Error', undefined, true, true) : Error = J$.R(941953, 'Error', Error, true, true)), true)(J$.T(941961, 'The `mongodb-extjson` module was not found. Please install it and try again.', 21, false));
                        } catch (J$e) {
                            J$.Ex(943425, J$e);
                        } finally {
                            if (J$.Fr(943433))
                                continue jalangiLabel6;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false), noEJSONError, false, true);
            J$.P(943145, J$.I(typeof module === 'undefined' ? module = J$.R(943049, 'module', undefined, true, true) : module = J$.R(943049, 'module', module, true, true)), 'exports', J$.T(943137, {
                uuidV4: J$.R(943057, 'uuidV4', uuidV4, false, true),
                calculateDurationInMs: J$.R(943065, 'calculateDurationInMs', calculateDurationInMs, false, true),
                relayEvents: J$.R(943073, 'relayEvents', relayEvents, false, true),
                collationNotSupported: J$.R(943081, 'collationNotSupported', collationNotSupported, false, true),
                retrieveEJSON: J$.R(943089, 'retrieveEJSON', retrieveEJSON, false, true),
                retrieveKerberos: J$.R(943097, 'retrieveKerberos', retrieveKerberos, false, true),
                maxWireVersion: J$.R(943105, 'maxWireVersion', maxWireVersion, false, true),
                isPromiseLike: J$.R(943113, 'isPromiseLike', isPromiseLike, false, true),
                eachAsync: J$.R(943121, 'eachAsync', eachAsync, false, true),
                isUnifiedTopology: J$.R(943129, 'isUnifiedTopology', isUnifiedTopology, false, true)
            }, 11, false));
        } catch (J$e) {
            J$.Ex(943553, J$e);
        } finally {
            if (J$.Sr(943561))
                continue jalangiLabel14;
            else
                break jalangiLabel14;
        }
    }
// JALANGI DO NOT INSTRUMENT

