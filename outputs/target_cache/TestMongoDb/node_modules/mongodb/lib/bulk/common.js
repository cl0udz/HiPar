J$.noInstrEval = false;
jalangiLabel81:
    while (true) {
        try {
            J$.Se(567401, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestMongoDb/node_modules/mongodb/lib/bulk/common.js');
            function _typeof2(obj) {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(548113, arguments.callee, this, arguments);
                            arguments = J$.N(548121, 'arguments', arguments, true, false, false);
                            obj = J$.N(548129, 'obj', obj, true, false, false);
                            if (J$.C(30752, J$.C(30712, J$.B(74354, '===', J$.U(74346, 'typeof', J$.I(typeof Symbol === 'undefined' ? Symbol = J$.R(547849, 'Symbol', undefined, true, true) : Symbol = J$.R(547849, 'Symbol', Symbol, true, true))), J$.T(547857, 'function', 21, false))) ? J$.B(74370, '===', J$.U(74362, 'typeof', J$.G(547873, J$.I(typeof Symbol === 'undefined' ? Symbol = J$.R(547865, 'Symbol', undefined, true, true) : Symbol = J$.R(547865, 'Symbol', Symbol, true, true)), 'iterator')), J$.T(547881, 'symbol', 21, false)) : J$._())) {
                                _typeof2 = J$.W(547937, '_typeof2', J$.T(547929, function _typeof2(obj) {
                                    jalangiLabel0:
                                        while (true) {
                                            try {
                                                J$.Fe(547905, arguments.callee, this, arguments);
                                                arguments = J$.N(547913, 'arguments', arguments, true, false, false);
                                                obj = J$.N(547921, 'obj', obj, true, false, false);
                                                return J$.Rt(547897, J$.U(74378, 'typeof', J$.R(547889, 'obj', obj, false, false)));
                                            } catch (J$e) {
                                                J$.Ex(567801, J$e);
                                            } finally {
                                                if (J$.Fr(567809))
                                                    continue jalangiLabel0;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false), _typeof2, false, true);
                            } else {
                                _typeof2 = J$.W(548073, '_typeof2', J$.T(548065, function _typeof2(obj) {
                                    jalangiLabel1:
                                        while (true) {
                                            try {
                                                J$.Fe(548041, arguments.callee, this, arguments);
                                                arguments = J$.N(548049, 'arguments', arguments, true, false, false);
                                                obj = J$.N(548057, 'obj', obj, true, false, false);
                                                return J$.Rt(548033, J$.C(30744, J$.C(30736, J$.C(30728, J$.C(30720, J$.R(547945, 'obj', obj, false, false)) ? J$.B(74394, '===', J$.U(74386, 'typeof', J$.I(typeof Symbol === 'undefined' ? Symbol = J$.R(547953, 'Symbol', undefined, true, true) : Symbol = J$.R(547953, 'Symbol', Symbol, true, true))), J$.T(547961, 'function', 21, false)) : J$._()) ? J$.B(74402, '===', J$.G(547977, J$.R(547969, 'obj', obj, false, false), 'constructor'), J$.I(typeof Symbol === 'undefined' ? Symbol = J$.R(547985, 'Symbol', undefined, true, true) : Symbol = J$.R(547985, 'Symbol', Symbol, true, true))) : J$._()) ? J$.B(74410, '!==', J$.R(547993, 'obj', obj, false, false), J$.G(548009, J$.I(typeof Symbol === 'undefined' ? Symbol = J$.R(548001, 'Symbol', undefined, true, true) : Symbol = J$.R(548001, 'Symbol', Symbol, true, true)), 'prototype')) : J$._()) ? J$.T(548017, 'symbol', 21, false) : J$.U(74418, 'typeof', J$.R(548025, 'obj', obj, false, false)));
                                            } catch (J$e) {
                                                J$.Ex(567817, J$e);
                                            } finally {
                                                if (J$.Fr(567825))
                                                    continue jalangiLabel1;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false), _typeof2, false, true);
                            }
                            return J$.Rt(548105, J$.F(548097, J$.R(548081, '_typeof2', _typeof2, false, true), false)(J$.R(548089, 'obj', obj, false, false)));
                        } catch (J$e) {
                            J$.Ex(567833, J$e);
                        } finally {
                            if (J$.Fr(567841))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function _typeof(obj) {
                jalangiLabel5:
                    while (true) {
                        try {
                            J$.Fe(548449, arguments.callee, this, arguments);
                            arguments = J$.N(548457, 'arguments', arguments, true, false, false);
                            obj = J$.N(548465, 'obj', obj, true, false, false);
                            if (J$.C(30800, J$.C(30760, J$.B(74434, '===', J$.U(74426, 'typeof', J$.I(typeof Symbol === 'undefined' ? Symbol = J$.R(548137, 'Symbol', undefined, true, true) : Symbol = J$.R(548137, 'Symbol', Symbol, true, true))), J$.T(548145, 'function', 21, false))) ? J$.B(74442, '===', J$.F(548177, J$.R(548153, '_typeof2', _typeof2, false, true), false)(J$.G(548169, J$.I(typeof Symbol === 'undefined' ? Symbol = J$.R(548161, 'Symbol', undefined, true, true) : Symbol = J$.R(548161, 'Symbol', Symbol, true, true)), 'iterator')), J$.T(548185, 'symbol', 21, false)) : J$._())) {
                                _typeof = J$.W(548257, '_typeof', J$.T(548249, function _typeof(obj) {
                                    jalangiLabel3:
                                        while (true) {
                                            try {
                                                J$.Fe(548225, arguments.callee, this, arguments);
                                                arguments = J$.N(548233, 'arguments', arguments, true, false, false);
                                                obj = J$.N(548241, 'obj', obj, true, false, false);
                                                return J$.Rt(548217, J$.F(548209, J$.R(548193, '_typeof2', _typeof2, false, true), false)(J$.R(548201, 'obj', obj, false, false)));
                                            } catch (J$e) {
                                                J$.Ex(567849, J$e);
                                            } finally {
                                                if (J$.Fr(567857))
                                                    continue jalangiLabel3;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false), _typeof, false, true);
                            } else {
                                _typeof = J$.W(548409, '_typeof', J$.T(548401, function _typeof(obj) {
                                    jalangiLabel4:
                                        while (true) {
                                            try {
                                                J$.Fe(548377, arguments.callee, this, arguments);
                                                arguments = J$.N(548385, 'arguments', arguments, true, false, false);
                                                obj = J$.N(548393, 'obj', obj, true, false, false);
                                                return J$.Rt(548369, J$.C(30792, J$.C(30784, J$.C(30776, J$.C(30768, J$.R(548265, 'obj', obj, false, false)) ? J$.B(74458, '===', J$.U(74450, 'typeof', J$.I(typeof Symbol === 'undefined' ? Symbol = J$.R(548273, 'Symbol', undefined, true, true) : Symbol = J$.R(548273, 'Symbol', Symbol, true, true))), J$.T(548281, 'function', 21, false)) : J$._()) ? J$.B(74466, '===', J$.G(548297, J$.R(548289, 'obj', obj, false, false), 'constructor'), J$.I(typeof Symbol === 'undefined' ? Symbol = J$.R(548305, 'Symbol', undefined, true, true) : Symbol = J$.R(548305, 'Symbol', Symbol, true, true))) : J$._()) ? J$.B(74474, '!==', J$.R(548313, 'obj', obj, false, false), J$.G(548329, J$.I(typeof Symbol === 'undefined' ? Symbol = J$.R(548321, 'Symbol', undefined, true, true) : Symbol = J$.R(548321, 'Symbol', Symbol, true, true)), 'prototype')) : J$._()) ? J$.T(548337, 'symbol', 21, false) : J$.F(548361, J$.R(548345, '_typeof2', _typeof2, false, true), false)(J$.R(548353, 'obj', obj, false, false)));
                                            } catch (J$e) {
                                                J$.Ex(567865, J$e);
                                            } finally {
                                                if (J$.Fr(567873))
                                                    continue jalangiLabel4;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false), _typeof, false, true);
                            }
                            return J$.Rt(548441, J$.F(548433, J$.R(548417, '_typeof', _typeof, false, true), false)(J$.R(548425, 'obj', obj, false, false)));
                        } catch (J$e) {
                            J$.Ex(567881, J$e);
                        } finally {
                            if (J$.Fr(567889))
                                continue jalangiLabel5;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function _possibleConstructorReturn(self, call) {
                jalangiLabel6:
                    while (true) {
                        try {
                            J$.Fe(548577, arguments.callee, this, arguments);
                            arguments = J$.N(548585, 'arguments', arguments, true, false, false);
                            self = J$.N(548593, 'self', self, true, false, false);
                            call = J$.N(548601, 'call', call, true, false, false);
                            if (J$.C(30824, J$.C(30816, J$.R(548473, 'call', call, false, false)) ? J$.C(30808, J$.B(74482, '===', J$.F(548497, J$.R(548481, '_typeof', _typeof, false, true), false)(J$.R(548489, 'call', call, false, false)), J$.T(548505, 'object', 21, false))) ? J$._() : J$.B(74498, '===', J$.U(74490, 'typeof', J$.R(548513, 'call', call, false, false)), J$.T(548521, 'function', 21, false)) : J$._())) {
                                return J$.Rt(548537, J$.R(548529, 'call', call, false, false));
                            }
                            return J$.Rt(548569, J$.F(548561, J$.R(548545, '_assertThisInitialized', _assertThisInitialized, false, true), false)(J$.R(548553, 'self', self, false, false)));
                        } catch (J$e) {
                            J$.Ex(567897, J$e);
                        } finally {
                            if (J$.Fr(567905))
                                continue jalangiLabel6;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function _getPrototypeOf(o) {
                jalangiLabel8:
                    while (true) {
                        try {
                            J$.Fe(548761, arguments.callee, this, arguments);
                            arguments = J$.N(548769, 'arguments', arguments, true, false, false);
                            o = J$.N(548777, 'o', o, true, false, false);
                            _getPrototypeOf = J$.W(548721, '_getPrototypeOf', J$.C(30840, J$.G(548617, J$.I(typeof Object === 'undefined' ? Object = J$.R(548609, 'Object', undefined, true, true) : Object = J$.R(548609, 'Object', Object, true, true)), 'setPrototypeOf')) ? J$.G(548633, J$.I(typeof Object === 'undefined' ? Object = J$.R(548625, 'Object', undefined, true, true) : Object = J$.R(548625, 'Object', Object, true, true)), 'getPrototypeOf') : J$.T(548713, function _getPrototypeOf(o) {
                                jalangiLabel7:
                                    while (true) {
                                        try {
                                            J$.Fe(548689, arguments.callee, this, arguments);
                                            arguments = J$.N(548697, 'arguments', arguments, true, false, false);
                                            o = J$.N(548705, 'o', o, true, false, false);
                                            return J$.Rt(548681, J$.C(30832, J$.G(548649, J$.R(548641, 'o', o, false, false), '__proto__')) ? J$._() : J$.M(548673, J$.I(typeof Object === 'undefined' ? Object = J$.R(548657, 'Object', undefined, true, true) : Object = J$.R(548657, 'Object', Object, true, true)), 'getPrototypeOf', false)(J$.R(548665, 'o', o, false, false)));
                                        } catch (J$e) {
                                            J$.Ex(567913, J$e);
                                        } finally {
                                            if (J$.Fr(567921))
                                                continue jalangiLabel7;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false), _getPrototypeOf, false, true);
                            return J$.Rt(548753, J$.F(548745, J$.R(548729, '_getPrototypeOf', _getPrototypeOf, false, true), false)(J$.R(548737, 'o', o, false, false)));
                        } catch (J$e) {
                            J$.Ex(567929, J$e);
                        } finally {
                            if (J$.Fr(567937))
                                continue jalangiLabel8;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function _assertThisInitialized(self) {
                jalangiLabel9:
                    while (true) {
                        try {
                            J$.Fe(548841, arguments.callee, this, arguments);
                            arguments = J$.N(548849, 'arguments', arguments, true, false, false);
                            self = J$.N(548857, 'self', self, true, false, false);
                            if (J$.C(30848, J$.B(74506, '===', J$.R(548785, 'self', self, false, false), void J$.T(548793, 0, 22, false)))) {
                                throw J$.F(548817, J$.I(typeof ReferenceError === 'undefined' ? ReferenceError = J$.R(548801, 'ReferenceError', undefined, true, true) : ReferenceError = J$.R(548801, 'ReferenceError', ReferenceError, true, true)), true)(J$.T(548809, 'this hasn\'t been initialised - super() hasn\'t been called', 21, false));
                            }
                            return J$.Rt(548833, J$.R(548825, 'self', self, false, false));
                        } catch (J$e) {
                            J$.Ex(567945, J$e);
                        } finally {
                            if (J$.Fr(567953))
                                continue jalangiLabel9;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function _inherits(subClass, superClass) {
                jalangiLabel10:
                    while (true) {
                        try {
                            J$.Fe(549057, arguments.callee, this, arguments);
                            arguments = J$.N(549065, 'arguments', arguments, true, false, false);
                            subClass = J$.N(549073, 'subClass', subClass, true, false, false);
                            superClass = J$.N(549081, 'superClass', superClass, true, false, false);
                            if (J$.C(30864, J$.C(30856, J$.B(74522, '!==', J$.U(74514, 'typeof', J$.R(548865, 'superClass', superClass, false, false)), J$.T(548873, 'function', 21, false))) ? J$.B(74530, '!==', J$.R(548881, 'superClass', superClass, false, false), J$.T(548889, null, 25, false)) : J$._())) {
                                throw J$.F(548913, J$.I(typeof TypeError === 'undefined' ? TypeError = J$.R(548897, 'TypeError', undefined, true, true) : TypeError = J$.R(548897, 'TypeError', TypeError, true, true)), true)(J$.T(548905, 'Super expression must either be null or a function', 21, false));
                            }
                            J$.P(549009, J$.R(548921, 'subClass', subClass, false, false), 'prototype', J$.M(549001, J$.I(typeof Object === 'undefined' ? Object = J$.R(548929, 'Object', undefined, true, true) : Object = J$.R(548929, 'Object', Object, true, true)), 'create', false)(J$.C(30872, J$.R(548937, 'superClass', superClass, false, false)) ? J$.G(548953, J$.R(548945, 'superClass', superClass, false, false), 'prototype') : J$._(), J$.T(548993, {
                                constructor: J$.T(548985, {
                                    value: J$.R(548961, 'subClass', subClass, false, false),
                                    writable: J$.T(548969, true, 23, false),
                                    configurable: J$.T(548977, true, 23, false)
                                }, 11, false)
                            }, 11, false)));
                            if (J$.C(30880, J$.R(549017, 'superClass', superClass, false, false)))
                                J$.F(549049, J$.R(549025, '_setPrototypeOf', _setPrototypeOf, false, true), false)(J$.R(549033, 'subClass', subClass, false, false), J$.R(549041, 'superClass', superClass, false, false));
                        } catch (J$e) {
                            J$.Ex(567961, J$e);
                        } finally {
                            if (J$.Fr(567969))
                                continue jalangiLabel10;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function _setPrototypeOf(o, p) {
                jalangiLabel12:
                    while (true) {
                        try {
                            J$.Fe(549233, arguments.callee, this, arguments);
                            arguments = J$.N(549241, 'arguments', arguments, true, false, false);
                            o = J$.N(549249, 'o', o, true, false, false);
                            p = J$.N(549257, 'p', p, true, false, false);
                            _setPrototypeOf = J$.W(549185, '_setPrototypeOf', J$.C(30888, J$.G(549097, J$.I(typeof Object === 'undefined' ? Object = J$.R(549089, 'Object', undefined, true, true) : Object = J$.R(549089, 'Object', Object, true, true)), 'setPrototypeOf')) ? J$._() : J$.T(549177, function _setPrototypeOf(o, p) {
                                jalangiLabel11:
                                    while (true) {
                                        try {
                                            J$.Fe(549145, arguments.callee, this, arguments);
                                            arguments = J$.N(549153, 'arguments', arguments, true, false, false);
                                            o = J$.N(549161, 'o', o, true, false, false);
                                            p = J$.N(549169, 'p', p, true, false, false);
                                            J$.P(549121, J$.R(549105, 'o', o, false, false), '__proto__', J$.R(549113, 'p', p, false, false));
                                            return J$.Rt(549137, J$.R(549129, 'o', o, false, false));
                                        } catch (J$e) {
                                            J$.Ex(567977, J$e);
                                        } finally {
                                            if (J$.Fr(567985))
                                                continue jalangiLabel11;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false), _setPrototypeOf, false, true);
                            return J$.Rt(549225, J$.F(549217, J$.R(549193, '_setPrototypeOf', _setPrototypeOf, false, true), false)(J$.R(549201, 'o', o, false, false), J$.R(549209, 'p', p, false, false)));
                        } catch (J$e) {
                            J$.Ex(567993, J$e);
                        } finally {
                            if (J$.Fr(568001))
                                continue jalangiLabel12;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function _defineProperties(target, props) {
                jalangiLabel13:
                    while (true) {
                        try {
                            J$.Fe(549505, arguments.callee, this, arguments);
                            arguments = J$.N(549513, 'arguments', arguments, true, false, false);
                            target = J$.N(549521, 'target', target, true, false, false);
                            props = J$.N(549529, 'props', props, true, false, false);
                            J$.N(549537, 'i', i, false, false, false);
                            J$.N(549545, 'descriptor', descriptor, false, false, false);
                            for (var i = J$.W(549273, 'i', J$.T(549265, 0, 22, false), i, false, false); J$.C(30912, J$.B(74538, '<', J$.R(549281, 'i', i, false, false), J$.G(549297, J$.R(549289, 'props', props, false, false), 'length'))); J$.B(74562, '-', i = J$.W(549313, 'i', J$.B(74554, '+', J$.U(74546, '+', J$.R(549305, 'i', i, false, false)), 1), i, false, false), 1)) {
                                var descriptor = J$.W(549345, 'descriptor', J$.G(549337, J$.R(549321, 'props', props, false, false), J$.R(549329, 'i', i, false, false)), descriptor, false, false);
                                J$.P(549385, J$.R(549353, 'descriptor', descriptor, false, false), 'enumerable', J$.C(30896, J$.G(549369, J$.R(549361, 'descriptor', descriptor, false, false), 'enumerable')) ? J$._() : J$.T(549377, false, 23, false));
                                J$.P(549409, J$.R(549393, 'descriptor', descriptor, false, false), 'configurable', J$.T(549401, true, 23, false));
                                if (J$.C(30904, J$.B(74570, 'in', J$.T(549417, 'value', 21, false), J$.R(549425, 'descriptor', descriptor, false, false))))
                                    J$.P(549449, J$.R(549433, 'descriptor', descriptor, false, false), 'writable', J$.T(549441, true, 23, false));
                                J$.M(549497, J$.I(typeof Object === 'undefined' ? Object = J$.R(549457, 'Object', undefined, true, true) : Object = J$.R(549457, 'Object', Object, true, true)), 'defineProperty', false)(J$.R(549465, 'target', target, false, false), J$.G(549481, J$.R(549473, 'descriptor', descriptor, false, false), 'key'), J$.R(549489, 'descriptor', descriptor, false, false));
                            }
                        } catch (J$e) {
                            J$.Ex(568009, J$e);
                        } finally {
                            if (J$.Fr(568017))
                                continue jalangiLabel13;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function _createClass(Constructor, protoProps, staticProps) {
                jalangiLabel14:
                    while (true) {
                        try {
                            J$.Fe(549657, arguments.callee, this, arguments);
                            arguments = J$.N(549665, 'arguments', arguments, true, false, false);
                            Constructor = J$.N(549673, 'Constructor', Constructor, true, false, false);
                            protoProps = J$.N(549681, 'protoProps', protoProps, true, false, false);
                            staticProps = J$.N(549689, 'staticProps', staticProps, true, false, false);
                            if (J$.C(30920, J$.R(549553, 'protoProps', protoProps, false, false)))
                                J$.F(549593, J$.R(549561, '_defineProperties', _defineProperties, false, true), false)(J$.G(549577, J$.R(549569, 'Constructor', Constructor, false, false), 'prototype'), J$.R(549585, 'protoProps', protoProps, false, false));
                            if (J$.C(30928, J$.R(549601, 'staticProps', staticProps, false, false)))
                                J$.F(549633, J$.R(549609, '_defineProperties', _defineProperties, false, true), false)(J$.R(549617, 'Constructor', Constructor, false, false), J$.R(549625, 'staticProps', staticProps, false, false));
                            return J$.Rt(549649, J$.R(549641, 'Constructor', Constructor, false, false));
                        } catch (J$e) {
                            J$.Ex(568025, J$e);
                        } finally {
                            if (J$.Fr(568033))
                                continue jalangiLabel14;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function _classCallCheck(instance, Constructor) {
                jalangiLabel15:
                    while (true) {
                        try {
                            J$.Fe(549737, arguments.callee, this, arguments);
                            arguments = J$.N(549745, 'arguments', arguments, true, false, false);
                            instance = J$.N(549753, 'instance', instance, true, false, false);
                            Constructor = J$.N(549761, 'Constructor', Constructor, true, false, false);
                            if (J$.C(30936, J$.U(74586, '!', J$.B(74578, 'instanceof', J$.R(549697, 'instance', instance, false, false), J$.R(549705, 'Constructor', Constructor, false, false))))) {
                                throw J$.F(549729, J$.I(typeof TypeError === 'undefined' ? TypeError = J$.R(549713, 'TypeError', undefined, true, true) : TypeError = J$.R(549713, 'TypeError', TypeError, true, true)), true)(J$.T(549721, 'Cannot call a class as a function', 21, false));
                            }
                        } catch (J$e) {
                            J$.Ex(568041, J$e);
                        } finally {
                            if (J$.Fr(568049))
                                continue jalangiLabel15;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function mergeBatchResults(batch, bulkResult, err, result) {
                jalangiLabel52:
                    while (true) {
                        try {
                            J$.Fe(556529, arguments.callee, this, arguments);
                            arguments = J$.N(556537, 'arguments', arguments, true, false, false);
                            batch = J$.N(556545, 'batch', batch, true, false, false);
                            bulkResult = J$.N(556553, 'bulkResult', bulkResult, true, false, false);
                            err = J$.N(556561, 'err', err, true, false, false);
                            result = J$.N(556569, 'result', result, true, false, false);
                            J$.N(556577, 'writeError', writeError, false, false, false);
                            J$.N(556585, 'opTime', opTime, false, false, false);
                            J$.N(556593, 'lastOpTS', lastOpTS, false, false, false);
                            J$.N(556601, 'lastOpT', lastOpT, false, false, false);
                            J$.N(556609, 'opTimeTS', opTimeTS, false, false, false);
                            J$.N(556617, 'opTimeT', opTimeT, false, false, false);
                            J$.N(556625, 'nUpserted', nUpserted, false, false, false);
                            J$.N(556633, 'i', i, false, false, false);
                            J$.N(556641, 'nModified', nModified, false, false, false);
                            J$.N(556649, '_i', _i, false, false, false);
                            J$.N(556657, '_writeError', _writeError, false, false, false);
                            if (J$.C(31008, J$.R(554145, 'err', err, false, false))) {
                                result = J$.W(554161, 'result', J$.R(554153, 'err', err, false, false), result, false, false);
                            } else if (J$.C(31000, J$.C(30984, J$.R(554169, 'result', result, false, false)) ? J$.G(554185, J$.R(554177, 'result', result, false, false), 'result') : J$._())) {
                                result = J$.W(554209, 'result', J$.G(554201, J$.R(554193, 'result', result, false, false), 'result'), result, false, false);
                            } else if (J$.C(30992, J$.B(74690, '==', J$.R(554217, 'result', result, false, false), J$.T(554225, null, 25, false)))) {
                                return J$.Rt(554233, undefined);
                            }
                            if (J$.C(31048, J$.C(31016, J$.B(74698, '===', J$.G(554249, J$.R(554241, 'result', result, false, false), 'ok'), J$.T(554257, 0, 22, false))) ? J$.B(74706, '===', J$.G(554273, J$.R(554265, 'bulkResult', bulkResult, false, false), 'ok'), J$.T(554281, 1, 22, false)) : J$._())) {
                                J$.P(554305, J$.R(554289, 'bulkResult', bulkResult, false, false), 'ok', J$.T(554297, 0, 22, false));
                                var writeError = J$.W(554401, 'writeError', J$.T(554393, {
                                    index: J$.T(554313, 0, 22, false),
                                    code: J$.C(31024, J$.G(554329, J$.R(554321, 'result', result, false, false), 'code')) ? J$._() : J$.T(554337, 0, 22, false),
                                    errmsg: J$.G(554353, J$.R(554345, 'result', result, false, false), 'message'),
                                    op: J$.G(554385, J$.G(554369, J$.R(554361, 'batch', batch, false, false), 'operations'), J$.T(554377, 0, 22, false))
                                }, 11, false), writeError, false, false);
                                J$.M(554449, J$.G(554417, J$.R(554409, 'bulkResult', bulkResult, false, false), 'writeErrors'), 'push', false)(J$.F(554441, J$.R(554425, 'WriteError', WriteError, false, true), true)(J$.R(554433, 'writeError', writeError, false, false)));
                                return J$.Rt(554457, undefined);
                            } else if (J$.C(31040, J$.C(31032, J$.B(74714, '===', J$.G(554473, J$.R(554465, 'result', result, false, false), 'ok'), J$.T(554481, 0, 22, false))) ? J$.B(74722, '===', J$.G(554497, J$.R(554489, 'bulkResult', bulkResult, false, false), 'ok'), J$.T(554505, 0, 22, false)) : J$._())) {
                                return J$.Rt(554513, undefined);
                            }
                            if (J$.C(31176, J$.C(31056, J$.G(554529, J$.R(554521, 'result', result, false, false), 'opTime')) ? J$._() : J$.G(554545, J$.R(554537, 'result', result, false, false), 'lastOp'))) {
                                var opTime = J$.W(554585, 'opTime', J$.C(31064, J$.G(554561, J$.R(554553, 'result', result, false, false), 'lastOp')) ? J$._() : J$.G(554577, J$.R(554569, 'result', result, false, false), 'opTime'), opTime, false, false);
                                var lastOpTS = J$.W(554601, 'lastOpTS', J$.T(554593, null, 25, false), lastOpTS, false, false);
                                var lastOpT = J$.W(554617, 'lastOpT', J$.T(554609, null, 25, false), lastOpT, false, false);
                                if (J$.C(31168, J$.C(31072, J$.R(554625, 'opTime', opTime, false, false)) ? J$.B(74730, '===', J$.G(554641, J$.R(554633, 'opTime', opTime, false, false), '_bsontype'), J$.T(554649, 'Timestamp', 21, false)) : J$._())) {
                                    if (J$.C(31088, J$.B(74738, '==', J$.G(554665, J$.R(554657, 'bulkResult', bulkResult, false, false), 'lastOp'), J$.T(554673, null, 25, false)))) {
                                        J$.P(554697, J$.R(554681, 'bulkResult', bulkResult, false, false), 'lastOp', J$.R(554689, 'opTime', opTime, false, false));
                                    } else if (J$.C(31080, J$.M(554729, J$.R(554705, 'opTime', opTime, false, false), 'greaterThan', false)(J$.G(554721, J$.R(554713, 'bulkResult', bulkResult, false, false), 'lastOp')))) {
                                        J$.P(554753, J$.R(554737, 'bulkResult', bulkResult, false, false), 'lastOp', J$.R(554745, 'opTime', opTime, false, false));
                                    }
                                } else {
                                    if (J$.C(31112, J$.G(554769, J$.R(554761, 'bulkResult', bulkResult, false, false), 'lastOp'))) {
                                        lastOpTS = J$.W(554873, 'lastOpTS', J$.C(31096, J$.B(74754, '===', J$.U(74746, 'typeof', J$.G(554793, J$.G(554785, J$.R(554777, 'bulkResult', bulkResult, false, false), 'lastOp'), 'ts')), J$.T(554801, 'number', 21, false))) ? J$.M(554841, J$.R(554809, 'Long', Long, false, true), 'fromNumber', false)(J$.G(554833, J$.G(554825, J$.R(554817, 'bulkResult', bulkResult, false, false), 'lastOp'), 'ts')) : J$.G(554865, J$.G(554857, J$.R(554849, 'bulkResult', bulkResult, false, false), 'lastOp'), 'ts'), lastOpTS, false, false);
                                        lastOpT = J$.W(554977, 'lastOpT', J$.C(31104, J$.B(74770, '===', J$.U(74762, 'typeof', J$.G(554897, J$.G(554889, J$.R(554881, 'bulkResult', bulkResult, false, false), 'lastOp'), 't')), J$.T(554905, 'number', 21, false))) ? J$.M(554945, J$.R(554913, 'Long', Long, false, true), 'fromNumber', false)(J$.G(554937, J$.G(554929, J$.R(554921, 'bulkResult', bulkResult, false, false), 'lastOp'), 't')) : J$.G(554969, J$.G(554961, J$.R(554953, 'bulkResult', bulkResult, false, false), 'lastOp'), 't'), lastOpT, false, false);
                                    }
                                    var opTimeTS = J$.W(555057, 'opTimeTS', J$.C(31120, J$.B(74786, '===', J$.U(74778, 'typeof', J$.G(554993, J$.R(554985, 'opTime', opTime, false, false), 'ts')), J$.T(555001, 'number', 21, false))) ? J$.M(555033, J$.R(555009, 'Long', Long, false, true), 'fromNumber', false)(J$.G(555025, J$.R(555017, 'opTime', opTime, false, false), 'ts')) : J$.G(555049, J$.R(555041, 'opTime', opTime, false, false), 'ts'), opTimeTS, false, false);
                                    var opTimeT = J$.W(555137, 'opTimeT', J$.C(31128, J$.B(74802, '===', J$.U(74794, 'typeof', J$.G(555073, J$.R(555065, 'opTime', opTime, false, false), 't')), J$.T(555081, 'number', 21, false))) ? J$.M(555113, J$.R(555089, 'Long', Long, false, true), 'fromNumber', false)(J$.G(555105, J$.R(555097, 'opTime', opTime, false, false), 't')) : J$.G(555129, J$.R(555121, 'opTime', opTime, false, false), 't'), opTimeT, false, false);
                                    if (J$.C(31160, J$.B(74810, '==', J$.G(555153, J$.R(555145, 'bulkResult', bulkResult, false, false), 'lastOp'), J$.T(555161, null, 25, false)))) {
                                        J$.P(555185, J$.R(555169, 'bulkResult', bulkResult, false, false), 'lastOp', J$.R(555177, 'opTime', opTime, false, false));
                                    } else if (J$.C(31152, J$.M(555209, J$.R(555193, 'opTimeTS', opTimeTS, false, false), 'greaterThan', false)(J$.R(555201, 'lastOpTS', lastOpTS, false, false)))) {
                                        J$.P(555233, J$.R(555217, 'bulkResult', bulkResult, false, false), 'lastOp', J$.R(555225, 'opTime', opTime, false, false));
                                    } else if (J$.C(31144, J$.M(555257, J$.R(555241, 'opTimeTS', opTimeTS, false, false), 'equals', false)(J$.R(555249, 'lastOpTS', lastOpTS, false, false)))) {
                                        if (J$.C(31136, J$.M(555281, J$.R(555265, 'opTimeT', opTimeT, false, false), 'greaterThan', false)(J$.R(555273, 'lastOpT', lastOpT, false, false)))) {
                                            J$.P(555305, J$.R(555289, 'bulkResult', bulkResult, false, false), 'lastOp', J$.R(555297, 'opTime', opTime, false, false));
                                        }
                                    }
                                }
                            }
                            if (J$.C(31192, J$.C(31184, J$.B(74818, '===', J$.G(555321, J$.R(555313, 'batch', batch, false, false), 'batchType'), J$.R(555329, 'INSERT', INSERT, false, true))) ? J$.G(555345, J$.R(555337, 'result', result, false, false), 'n') : J$._())) {
                                J$.P(555393, J$.R(555353, 'bulkResult', bulkResult, false, false), 'nInserted', J$.B(74826, '+', J$.G(555369, J$.R(555361, 'bulkResult', bulkResult, false, false), 'nInserted'), J$.G(555385, J$.R(555377, 'result', result, false, false), 'n')));
                            }
                            if (J$.C(31208, J$.C(31200, J$.B(74834, '===', J$.G(555409, J$.R(555401, 'batch', batch, false, false), 'batchType'), J$.R(555417, 'REMOVE', REMOVE, false, true))) ? J$.G(555433, J$.R(555425, 'result', result, false, false), 'n') : J$._())) {
                                J$.P(555481, J$.R(555441, 'bulkResult', bulkResult, false, false), 'nRemoved', J$.B(74842, '+', J$.G(555457, J$.R(555449, 'bulkResult', bulkResult, false, false), 'nRemoved'), J$.G(555473, J$.R(555465, 'result', result, false, false), 'n')));
                            }
                            var nUpserted = J$.W(555497, 'nUpserted', J$.T(555489, 0, 22, false), nUpserted, false, false);
                            if (J$.C(31232, J$.M(555529, J$.I(typeof Array === 'undefined' ? Array = J$.R(555505, 'Array', undefined, true, true) : Array = J$.R(555505, 'Array', Array, true, true)), 'isArray', false)(J$.G(555521, J$.R(555513, 'result', result, false, false), 'upserted')))) {
                                nUpserted = J$.W(555561, 'nUpserted', J$.G(555553, J$.G(555545, J$.R(555537, 'result', result, false, false), 'upserted'), 'length'), nUpserted, false, false);
                                for (var i = J$.W(555577, 'i', J$.T(555569, 0, 22, false), i, false, false); J$.C(31216, J$.B(74850, '<', J$.R(555585, 'i', i, false, false), J$.G(555609, J$.G(555601, J$.R(555593, 'result', result, false, false), 'upserted'), 'length'))); J$.B(74874, '-', i = J$.W(555625, 'i', J$.B(74866, '+', J$.U(74858, '+', J$.R(555617, 'i', i, false, false)), 1), i, false, false), 1)) {
                                    J$.M(555753, J$.G(555641, J$.R(555633, 'bulkResult', bulkResult, false, false), 'upserted'), 'push', false)(J$.T(555745, {
                                        index: J$.B(74882, '+', J$.G(555681, J$.G(555673, J$.G(555657, J$.R(555649, 'result', result, false, false), 'upserted'), J$.R(555665, 'i', i, false, false)), 'index'), J$.G(555697, J$.R(555689, 'batch', batch, false, false), 'originalZeroIndex')),
                                        _id: J$.G(555737, J$.G(555729, J$.G(555713, J$.R(555705, 'result', result, false, false), 'upserted'), J$.R(555721, 'i', i, false, false)), '_id')
                                    }, 11, false));
                                }
                            } else if (J$.C(31224, J$.G(555769, J$.R(555761, 'result', result, false, false), 'upserted'))) {
                                nUpserted = J$.W(555785, 'nUpserted', J$.T(555777, 1, 22, false), nUpserted, false, false);
                                J$.M(555849, J$.G(555801, J$.R(555793, 'bulkResult', bulkResult, false, false), 'upserted'), 'push', false)(J$.T(555841, {
                                    index: J$.G(555817, J$.R(555809, 'batch', batch, false, false), 'originalZeroIndex'),
                                    _id: J$.G(555833, J$.R(555825, 'result', result, false, false), 'upserted')
                                }, 11, false));
                            }
                            if (J$.C(31256, J$.C(31240, J$.B(74890, '===', J$.G(555865, J$.R(555857, 'batch', batch, false, false), 'batchType'), J$.R(555873, 'UPDATE', UPDATE, false, true))) ? J$.G(555889, J$.R(555881, 'result', result, false, false), 'n') : J$._())) {
                                var nModified = J$.W(555913, 'nModified', J$.G(555905, J$.R(555897, 'result', result, false, false), 'nModified'), nModified, false, false);
                                J$.P(555953, J$.R(555921, 'bulkResult', bulkResult, false, false), 'nUpserted', J$.B(74898, '+', J$.G(555937, J$.R(555929, 'bulkResult', bulkResult, false, false), 'nUpserted'), J$.R(555945, 'nUpserted', nUpserted, false, false)));
                                J$.P(556009, J$.R(555961, 'bulkResult', bulkResult, false, false), 'nMatched', J$.B(74914, '+', J$.G(555977, J$.R(555969, 'bulkResult', bulkResult, false, false), 'nMatched'), J$.B(74906, '-', J$.G(555993, J$.R(555985, 'result', result, false, false), 'n'), J$.R(556001, 'nUpserted', nUpserted, false, false))));
                                if (J$.C(31248, J$.B(74930, '===', J$.U(74922, 'typeof', J$.R(556017, 'nModified', nModified, false, false)), J$.T(556025, 'number', 21, false)))) {
                                    J$.P(556065, J$.R(556033, 'bulkResult', bulkResult, false, false), 'nModified', J$.B(74938, '+', J$.G(556049, J$.R(556041, 'bulkResult', bulkResult, false, false), 'nModified'), J$.R(556057, 'nModified', nModified, false, false)));
                                } else {
                                    J$.P(556089, J$.R(556073, 'bulkResult', bulkResult, false, false), 'nModified', J$.T(556081, null, 25, false));
                                }
                            }
                            if (J$.C(31272, J$.M(556121, J$.I(typeof Array === 'undefined' ? Array = J$.R(556097, 'Array', undefined, true, true) : Array = J$.R(556097, 'Array', Array, true, true)), 'isArray', false)(J$.G(556113, J$.R(556105, 'result', result, false, false), 'writeErrors')))) {
                                for (var _i = J$.W(556137, '_i', J$.T(556129, 0, 22, false), _i, false, false); J$.C(31264, J$.B(74946, '<', J$.R(556145, '_i', _i, false, false), J$.G(556169, J$.G(556161, J$.R(556153, 'result', result, false, false), 'writeErrors'), 'length'))); J$.B(74970, '-', _i = J$.W(556185, '_i', J$.B(74962, '+', J$.U(74954, '+', J$.R(556177, '_i', _i, false, false)), 1), _i, false, false), 1)) {
                                    var _writeError = J$.W(556401, '_writeError', J$.T(556393, {
                                        index: J$.B(74978, '+', J$.G(556201, J$.R(556193, 'batch', batch, false, false), 'originalZeroIndex'), J$.G(556241, J$.G(556233, J$.G(556217, J$.R(556209, 'result', result, false, false), 'writeErrors'), J$.R(556225, '_i', _i, false, false)), 'index')),
                                        code: J$.G(556281, J$.G(556273, J$.G(556257, J$.R(556249, 'result', result, false, false), 'writeErrors'), J$.R(556265, '_i', _i, false, false)), 'code'),
                                        errmsg: J$.G(556321, J$.G(556313, J$.G(556297, J$.R(556289, 'result', result, false, false), 'writeErrors'), J$.R(556305, '_i', _i, false, false)), 'errmsg'),
                                        op: J$.G(556385, J$.G(556337, J$.R(556329, 'batch', batch, false, false), 'operations'), J$.G(556377, J$.G(556369, J$.G(556353, J$.R(556345, 'result', result, false, false), 'writeErrors'), J$.R(556361, '_i', _i, false, false)), 'index'))
                                    }, 11, false), _writeError, false, false);
                                    J$.M(556449, J$.G(556417, J$.R(556409, 'bulkResult', bulkResult, false, false), 'writeErrors'), 'push', false)(J$.F(556441, J$.R(556425, 'WriteError', WriteError, false, true), true)(J$.R(556433, '_writeError', _writeError, false, false)));
                                }
                            }
                            if (J$.C(31280, J$.G(556465, J$.R(556457, 'result', result, false, false), 'writeConcernError'))) {
                                J$.M(556521, J$.G(556481, J$.R(556473, 'bulkResult', bulkResult, false, false), 'writeConcernErrors'), 'push', false)(J$.F(556513, J$.R(556489, 'WriteConcernError', WriteConcernError, false, true), true)(J$.G(556505, J$.R(556497, 'result', result, false, false), 'writeConcernError')));
                            }
                        } catch (J$e) {
                            J$.Ex(568633, J$e);
                        } finally {
                            if (J$.Fr(568641))
                                continue jalangiLabel52;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function executeCommands(bulkOperation, options, callback) {
                jalangiLabel54:
                    while (true) {
                        try {
                            J$.Fe(557417, arguments.callee, this, arguments);
                            function resultHandler(err, result) {
                                jalangiLabel53:
                                    while (true) {
                                        try {
                                            J$.Fe(557313, arguments.callee, this, arguments);
                                            arguments = J$.N(557321, 'arguments', arguments, true, false, false);
                                            err = J$.N(557329, 'err', err, true, false, false);
                                            result = J$.N(557337, 'result', result, true, false, false);
                                            J$.N(557345, 'writeResult', writeResult, false, false, false);
                                            J$.N(557353, 'mergeResult', mergeResult, false, false, false);
                                            if (J$.C(31328, J$.C(31320, J$.C(31312, J$.C(31296, J$.R(556825, 'err', err, false, false)) ? J$.G(556841, J$.R(556833, 'err', err, false, false), 'driver') : J$._()) ? J$._() : J$.C(31304, J$.R(556849, 'err', err, false, false)) ? J$.G(556865, J$.R(556857, 'err', err, false, false), 'message') : J$._()) ? J$.U(75002, '!', J$.B(74994, 'instanceof', J$.R(556873, 'err', err, false, false), J$.R(556881, 'MongoWriteConcernError', MongoWriteConcernError, false, true))) : J$._())) {
                                                return J$.Rt(556921, J$.F(556913, J$.R(556889, 'handleCallback', handleCallback, false, true), false)(J$.R(556897, 'callback', callback, false, false), J$.R(556905, 'err', err, false, false)));
                                            }
                                            if (J$.C(31336, J$.R(556929, 'err', err, false, false)))
                                                J$.P(556953, J$.R(556937, 'err', err, false, false), 'ok', J$.T(556945, 0, 22, false));
                                            if (J$.C(31344, J$.B(75010, 'instanceof', J$.R(556961, 'err', err, false, false), J$.R(556969, 'MongoWriteConcernError', MongoWriteConcernError, false, true)))) {
                                                return J$.Rt(557041, J$.F(557033, J$.R(556977, 'handleMongoWriteConcernError', handleMongoWriteConcernError, false, true), false)(J$.R(556985, 'batch', batch, false, false), J$.G(557009, J$.G(557001, J$.R(556993, 'bulkOperation', bulkOperation, false, false), 's'), 'bulkResult'), J$.R(557017, 'err', err, false, false), J$.R(557025, 'callback', callback, false, false)));
                                            }
                                            var writeResult = J$.W(557089, 'writeResult', J$.F(557081, J$.R(557049, 'BulkWriteResult', BulkWriteResult, false, true), true)(J$.G(557073, J$.G(557065, J$.R(557057, 'bulkOperation', bulkOperation, false, false), 's'), 'bulkResult')), writeResult, false, false);
                                            var mergeResult = J$.W(557161, 'mergeResult', J$.F(557153, J$.R(557097, 'mergeBatchResults', mergeBatchResults, false, true), false)(J$.R(557105, 'batch', batch, false, false), J$.G(557129, J$.G(557121, J$.R(557113, 'bulkOperation', bulkOperation, false, false), 's'), 'bulkResult'), J$.R(557137, 'err', err, false, false), J$.R(557145, 'result', result, false, false)), mergeResult, false, false);
                                            if (J$.C(31352, J$.B(75018, '!=', J$.R(557169, 'mergeResult', mergeResult, false, false), J$.T(557177, null, 25, false)))) {
                                                return J$.Rt(557225, J$.F(557217, J$.R(557185, 'handleCallback', handleCallback, false, true), false)(J$.R(557193, 'callback', callback, false, false), J$.T(557201, null, 25, false), J$.R(557209, 'writeResult', writeResult, false, false)));
                                            }
                                            if (J$.C(31360, J$.M(557257, J$.R(557233, 'bulkOperation', bulkOperation, false, false), 'handleWriteError', false)(J$.R(557241, 'callback', callback, false, false), J$.R(557249, 'writeResult', writeResult, false, false))))
                                                return J$.Rt(557265, undefined);
                                            J$.F(557305, J$.R(557273, 'executeCommands', executeCommands, false, true), false)(J$.R(557281, 'bulkOperation', bulkOperation, false, false), J$.R(557289, 'options', options, false, false), J$.R(557297, 'callback', callback, false, false));
                                        } catch (J$e) {
                                            J$.Ex(568649, J$e);
                                        } finally {
                                            if (J$.Fr(568657))
                                                continue jalangiLabel53;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }
                            arguments = J$.N(557425, 'arguments', arguments, true, false, false);
                            bulkOperation = J$.N(557433, 'bulkOperation', bulkOperation, true, false, false);
                            options = J$.N(557441, 'options', options, true, false, false);
                            callback = J$.N(557449, 'callback', callback, true, false, false);
                            J$.N(557457, 'batch', batch, false, false, false);
                            resultHandler = J$.N(557473, 'resultHandler', J$.T(557465, resultHandler, 12, false), true, false, false);
                            if (J$.C(31288, J$.B(74986, '===', J$.G(556689, J$.G(556681, J$.G(556673, J$.R(556665, 'bulkOperation', bulkOperation, false, false), 's'), 'batches'), 'length'), J$.T(556697, 0, 22, false)))) {
                                return J$.Rt(556777, J$.F(556769, J$.R(556705, 'handleCallback', handleCallback, false, true), false)(J$.R(556713, 'callback', callback, false, false), J$.T(556721, null, 25, false), J$.F(556761, J$.R(556729, 'BulkWriteResult', BulkWriteResult, false, true), true)(J$.G(556753, J$.G(556745, J$.R(556737, 'bulkOperation', bulkOperation, false, false), 's'), 'bulkResult'))));
                            }
                            var batch = J$.W(556817, 'batch', J$.M(556809, J$.G(556801, J$.G(556793, J$.R(556785, 'bulkOperation', bulkOperation, false, false), 's'), 'batches'), 'shift', false)(), batch, false, false);
                            J$.M(557409, J$.R(557361, 'bulkOperation', bulkOperation, false, false), 'finalOptionsHandler', false)(J$.T(557393, {
                                options: J$.R(557369, 'options', options, false, false),
                                batch: J$.R(557377, 'batch', batch, false, false),
                                resultHandler: J$.R(557385, 'resultHandler', resultHandler, false, false)
                            }, 11, false), J$.R(557401, 'callback', callback, false, false));
                        } catch (J$e) {
                            J$.Ex(568665, J$e);
                        } finally {
                            if (J$.Fr(568673))
                                continue jalangiLabel54;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function handleMongoWriteConcernError(batch, bulkResult, err, callback) {
                jalangiLabel55:
                    while (true) {
                        try {
                            J$.Fe(557737, arguments.callee, this, arguments);
                            arguments = J$.N(557745, 'arguments', arguments, true, false, false);
                            batch = J$.N(557753, 'batch', batch, true, false, false);
                            bulkResult = J$.N(557761, 'bulkResult', bulkResult, true, false, false);
                            err = J$.N(557769, 'err', err, true, false, false);
                            callback = J$.N(557777, 'callback', callback, true, false, false);
                            J$.N(557785, 'wrappedWriteConcernError', wrappedWriteConcernError, false, false, false);
                            J$.F(557529, J$.R(557481, 'mergeBatchResults', mergeBatchResults, false, true), false)(J$.R(557489, 'batch', batch, false, false), J$.R(557497, 'bulkResult', bulkResult, false, false), J$.T(557505, null, 25, false), J$.G(557521, J$.R(557513, 'err', err, false, false), 'result'));
                            var wrappedWriteConcernError = J$.W(557625, 'wrappedWriteConcernError', J$.F(557617, J$.R(557537, 'WriteConcernError', WriteConcernError, false, true), true)(J$.T(557609, {
                                errmsg: J$.G(557569, J$.G(557561, J$.G(557553, J$.R(557545, 'err', err, false, false), 'result'), 'writeConcernError'), 'errmsg'),
                                code: J$.G(557601, J$.G(557593, J$.G(557585, J$.R(557577, 'err', err, false, false), 'result'), 'writeConcernError'), 'result')
                            }, 11, false)), wrappedWriteConcernError, false, false);
                            return J$.Rt(557729, J$.F(557721, J$.R(557633, 'handleCallback', handleCallback, false, true), false)(J$.R(557641, 'callback', callback, false, false), J$.F(557705, J$.R(557649, 'BulkWriteError', BulkWriteError, false, true), true)(J$.F(557673, J$.R(557657, 'toError', toError, false, true), false)(J$.R(557665, 'wrappedWriteConcernError', wrappedWriteConcernError, false, false)), J$.F(557697, J$.R(557681, 'BulkWriteResult', BulkWriteResult, false, true), true)(J$.R(557689, 'bulkResult', bulkResult, false, false))), J$.T(557713, null, 25, false)));
                        } catch (J$e) {
                            J$.Ex(568681, J$e);
                        } finally {
                            if (J$.Fr(568689))
                                continue jalangiLabel55;
                            else
                                return J$.Ra();
                        }
                    }
            }
            _typeof2 = J$.N(567417, '_typeof2', J$.T(567409, _typeof2, 12, false), true, false, false);
            _typeof = J$.N(567433, '_typeof', J$.T(567425, _typeof, 12, false), true, false, false);
            _possibleConstructorReturn = J$.N(567449, '_possibleConstructorReturn', J$.T(567441, _possibleConstructorReturn, 12, false), true, false, false);
            _getPrototypeOf = J$.N(567465, '_getPrototypeOf', J$.T(567457, _getPrototypeOf, 12, false), true, false, false);
            _assertThisInitialized = J$.N(567481, '_assertThisInitialized', J$.T(567473, _assertThisInitialized, 12, false), true, false, false);
            _inherits = J$.N(567497, '_inherits', J$.T(567489, _inherits, 12, false), true, false, false);
            _setPrototypeOf = J$.N(567513, '_setPrototypeOf', J$.T(567505, _setPrototypeOf, 12, false), true, false, false);
            _defineProperties = J$.N(567529, '_defineProperties', J$.T(567521, _defineProperties, 12, false), true, false, false);
            _createClass = J$.N(567545, '_createClass', J$.T(567537, _createClass, 12, false), true, false, false);
            _classCallCheck = J$.N(567561, '_classCallCheck', J$.T(567553, _classCallCheck, 12, false), true, false, false);
            J$.N(567569, 'Long', Long, false, false, false);
            J$.N(567577, 'MongoError', MongoError, false, false, false);
            J$.N(567585, 'ObjectID', ObjectID, false, false, false);
            J$.N(567593, 'BSON', BSON, false, false, false);
            J$.N(567601, 'MongoWriteConcernError', MongoWriteConcernError, false, false, false);
            J$.N(567609, 'toError', toError, false, false, false);
            J$.N(567617, 'handleCallback', handleCallback, false, false, false);
            J$.N(567625, 'applyRetryableWrites', applyRetryableWrites, false, false, false);
            J$.N(567633, 'applyWriteConcern', applyWriteConcern, false, false, false);
            J$.N(567641, 'executeLegacyOperation', executeLegacyOperation, false, false, false);
            J$.N(567649, 'isPromiseLike', isPromiseLike, false, false, false);
            J$.N(567657, 'WRITE_CONCERN_ERROR', WRITE_CONCERN_ERROR, false, false, false);
            J$.N(567665, 'INSERT', INSERT, false, false, false);
            J$.N(567673, 'UPDATE', UPDATE, false, false, false);
            J$.N(567681, 'REMOVE', REMOVE, false, false, false);
            J$.N(567689, 'bson', bson, false, false, false);
            J$.N(567697, 'Batch', Batch, false, false, false);
            J$.N(567705, 'BulkWriteResult', BulkWriteResult, false, false, false);
            J$.N(567713, 'WriteConcernError', WriteConcernError, false, false, false);
            J$.N(567721, 'WriteError', WriteError, false, false, false);
            mergeBatchResults = J$.N(567737, 'mergeBatchResults', J$.T(567729, mergeBatchResults, 12, false), true, false, false);
            executeCommands = J$.N(567753, 'executeCommands', J$.T(567745, executeCommands, 12, false), true, false, false);
            handleMongoWriteConcernError = J$.N(567769, 'handleMongoWriteConcernError', J$.T(567761, handleMongoWriteConcernError, 12, false), true, false, false);
            J$.N(567777, 'BulkWriteError', BulkWriteError, false, false, false);
            J$.N(567785, 'FindOperators', FindOperators, false, false, false);
            J$.N(567793, 'BulkOperationBase', BulkOperationBase, false, false, false);
            J$.T(547841, 'use strict', 21, false);
            var Long = J$.W(549809, 'Long', J$.G(549801, J$.G(549793, J$.F(549785, J$.I(typeof require === 'undefined' ? require = J$.R(549769, 'require', undefined, true, true) : require = J$.R(549769, 'require', require, true, true)), false)(J$.T(549777, '../core', 21, false)), 'BSON'), 'Long'), Long, false, true);
            var MongoError = J$.W(549849, 'MongoError', J$.G(549841, J$.F(549833, J$.I(typeof require === 'undefined' ? require = J$.R(549817, 'require', undefined, true, true) : require = J$.R(549817, 'require', require, true, true)), false)(J$.T(549825, '../core', 21, false)), 'MongoError'), MongoError, false, true);
            var ObjectID = J$.W(549897, 'ObjectID', J$.G(549889, J$.G(549881, J$.F(549873, J$.I(typeof require === 'undefined' ? require = J$.R(549857, 'require', undefined, true, true) : require = J$.R(549857, 'require', require, true, true)), false)(J$.T(549865, '../core', 21, false)), 'BSON'), 'ObjectID'), ObjectID, false, true);
            var BSON = J$.W(549937, 'BSON', J$.G(549929, J$.F(549921, J$.I(typeof require === 'undefined' ? require = J$.R(549905, 'require', undefined, true, true) : require = J$.R(549905, 'require', require, true, true)), false)(J$.T(549913, '../core', 21, false)), 'BSON'), BSON, false, true);
            var MongoWriteConcernError = J$.W(549977, 'MongoWriteConcernError', J$.G(549969, J$.F(549961, J$.I(typeof require === 'undefined' ? require = J$.R(549945, 'require', undefined, true, true) : require = J$.R(549945, 'require', require, true, true)), false)(J$.T(549953, '../core', 21, false)), 'MongoWriteConcernError'), MongoWriteConcernError, false, true);
            var toError = J$.W(550017, 'toError', J$.G(550009, J$.F(550001, J$.I(typeof require === 'undefined' ? require = J$.R(549985, 'require', undefined, true, true) : require = J$.R(549985, 'require', require, true, true)), false)(J$.T(549993, '../utils', 21, false)), 'toError'), toError, false, true);
            var handleCallback = J$.W(550057, 'handleCallback', J$.G(550049, J$.F(550041, J$.I(typeof require === 'undefined' ? require = J$.R(550025, 'require', undefined, true, true) : require = J$.R(550025, 'require', require, true, true)), false)(J$.T(550033, '../utils', 21, false)), 'handleCallback'), handleCallback, false, true);
            var applyRetryableWrites = J$.W(550097, 'applyRetryableWrites', J$.G(550089, J$.F(550081, J$.I(typeof require === 'undefined' ? require = J$.R(550065, 'require', undefined, true, true) : require = J$.R(550065, 'require', require, true, true)), false)(J$.T(550073, '../utils', 21, false)), 'applyRetryableWrites'), applyRetryableWrites, false, true);
            var applyWriteConcern = J$.W(550137, 'applyWriteConcern', J$.G(550129, J$.F(550121, J$.I(typeof require === 'undefined' ? require = J$.R(550105, 'require', undefined, true, true) : require = J$.R(550105, 'require', require, true, true)), false)(J$.T(550113, '../utils', 21, false)), 'applyWriteConcern'), applyWriteConcern, false, true);
            var executeLegacyOperation = J$.W(550177, 'executeLegacyOperation', J$.G(550169, J$.F(550161, J$.I(typeof require === 'undefined' ? require = J$.R(550145, 'require', undefined, true, true) : require = J$.R(550145, 'require', require, true, true)), false)(J$.T(550153, '../utils', 21, false)), 'executeLegacyOperation'), executeLegacyOperation, false, true);
            var isPromiseLike = J$.W(550217, 'isPromiseLike', J$.G(550209, J$.F(550201, J$.I(typeof require === 'undefined' ? require = J$.R(550185, 'require', undefined, true, true) : require = J$.R(550185, 'require', require, true, true)), false)(J$.T(550193, '../utils', 21, false)), 'isPromiseLike'), isPromiseLike, false, true);
            var WRITE_CONCERN_ERROR = J$.W(550233, 'WRITE_CONCERN_ERROR', J$.T(550225, 64, 22, false), WRITE_CONCERN_ERROR, false, true);
            var INSERT = J$.W(550249, 'INSERT', J$.T(550241, 1, 22, false), INSERT, false, true);
            var UPDATE = J$.W(550265, 'UPDATE', J$.T(550257, 2, 22, false), UPDATE, false, true);
            var REMOVE = J$.W(550281, 'REMOVE', J$.T(550273, 3, 22, false), REMOVE, false, true);
            var bson = J$.W(550537, 'bson', J$.F(550529, J$.R(550289, 'BSON', BSON, false, true), true)(J$.T(550521, [
                J$.G(550305, J$.R(550297, 'BSON', BSON, false, true), 'Binary'),
                J$.G(550321, J$.R(550313, 'BSON', BSON, false, true), 'Code'),
                J$.G(550337, J$.R(550329, 'BSON', BSON, false, true), 'DBRef'),
                J$.G(550353, J$.R(550345, 'BSON', BSON, false, true), 'Decimal128'),
                J$.G(550369, J$.R(550361, 'BSON', BSON, false, true), 'Double'),
                J$.G(550385, J$.R(550377, 'BSON', BSON, false, true), 'Int32'),
                J$.G(550401, J$.R(550393, 'BSON', BSON, false, true), 'Long'),
                J$.G(550417, J$.R(550409, 'BSON', BSON, false, true), 'Map'),
                J$.G(550433, J$.R(550425, 'BSON', BSON, false, true), 'MaxKey'),
                J$.G(550449, J$.R(550441, 'BSON', BSON, false, true), 'MinKey'),
                J$.G(550465, J$.R(550457, 'BSON', BSON, false, true), 'ObjectId'),
                J$.G(550481, J$.R(550473, 'BSON', BSON, false, true), 'BSONRegExp'),
                J$.G(550497, J$.R(550489, 'BSON', BSON, false, true), 'Symbol'),
                J$.G(550513, J$.R(550505, 'BSON', BSON, false, true), 'Timestamp')
            ], 10, false)), bson, false, true);
            var Batch = J$.W(550785, 'Batch', J$.T(550777, function Batch(batchType, originalZeroIndex) {
                jalangiLabel16:
                    while (true) {
                        try {
                            J$.Fe(550745, arguments.callee, this, arguments);
                            arguments = J$.N(550753, 'arguments', arguments, true, false, false);
                            batchType = J$.N(550761, 'batchType', batchType, true, false, false);
                            originalZeroIndex = J$.N(550769, 'originalZeroIndex', originalZeroIndex, true, false, false);
                            J$.F(550569, J$.R(550545, '_classCallCheck', _classCallCheck, false, true), false)(J$.R(550553, 'this', this, false, false), J$.R(550561, 'Batch', Batch, false, false));
                            J$.P(550593, J$.R(550577, 'this', this, false, false), 'originalZeroIndex', J$.R(550585, 'originalZeroIndex', originalZeroIndex, false, false));
                            J$.P(550617, J$.R(550601, 'this', this, false, false), 'currentIndex', J$.T(550609, 0, 22, false));
                            J$.P(550641, J$.R(550625, 'this', this, false, false), 'originalIndexes', J$.T(550633, [], 10, false));
                            J$.P(550665, J$.R(550649, 'this', this, false, false), 'batchType', J$.R(550657, 'batchType', batchType, false, false));
                            J$.P(550689, J$.R(550673, 'this', this, false, false), 'operations', J$.T(550681, [], 10, false));
                            J$.P(550713, J$.R(550697, 'this', this, false, false), 'size', J$.T(550705, 0, 22, false));
                            J$.P(550737, J$.R(550721, 'this', this, false, false), 'sizeBytes', J$.T(550729, 0, 22, false));
                        } catch (J$e) {
                            J$.Ex(568057, J$e);
                        } finally {
                            if (J$.Fr(568065))
                                continue jalangiLabel16;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false), Batch, false, true);
            var BulkWriteResult = J$.W(552881, 'BulkWriteResult', J$.F(552873, J$.T(552865, function () {
                jalangiLabel37:
                    while (true) {
                        try {
                            J$.Fe(552833, arguments.callee, this, arguments);
                            function BulkWriteResult(bulkResult) {
                                jalangiLabel17:
                                    while (true) {
                                        try {
                                            J$.Fe(550849, arguments.callee, this, arguments);
                                            arguments = J$.N(550857, 'arguments', arguments, true, false, false);
                                            bulkResult = J$.N(550865, 'bulkResult', bulkResult, true, false, false);
                                            J$.F(550817, J$.R(550793, '_classCallCheck', _classCallCheck, false, true), false)(J$.R(550801, 'this', this, false, false), J$.R(550809, 'BulkWriteResult', BulkWriteResult, false, false));
                                            J$.P(550841, J$.R(550825, 'this', this, false, false), 'result', J$.R(550833, 'bulkResult', bulkResult, false, false));
                                        } catch (J$e) {
                                            J$.Ex(568073, J$e);
                                        } finally {
                                            if (J$.Fr(568081))
                                                continue jalangiLabel17;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }
                            arguments = J$.N(552841, 'arguments', arguments, true, false, false);
                            BulkWriteResult = J$.N(552857, 'BulkWriteResult', J$.T(552849, BulkWriteResult, 12, false), true, false, false);
                            J$.F(552809, J$.R(550873, '_createClass', _createClass, false, true), false)(J$.R(550881, 'BulkWriteResult', BulkWriteResult, false, false), J$.T(552801, [
                                J$.T(550953, {
                                    key: J$.T(550889, 'getInsertedIds', 21, false),
                                    value: J$.T(550945, function getInsertedIds() {
                                        jalangiLabel18:
                                            while (true) {
                                                try {
                                                    J$.Fe(550929, arguments.callee, this, arguments);
                                                    arguments = J$.N(550937, 'arguments', arguments, true, false, false);
                                                    return J$.Rt(550921, J$.G(550913, J$.G(550905, J$.R(550897, 'this', this, false, false), 'result'), 'insertedIds'));
                                                } catch (J$e) {
                                                    J$.Ex(568089, J$e);
                                                } finally {
                                                    if (J$.Fr(568097))
                                                        continue jalangiLabel18;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false)
                                }, 11, false),
                                J$.T(551025, {
                                    key: J$.T(550961, 'getUpsertedIds', 21, false),
                                    value: J$.T(551017, function getUpsertedIds() {
                                        jalangiLabel19:
                                            while (true) {
                                                try {
                                                    J$.Fe(551001, arguments.callee, this, arguments);
                                                    arguments = J$.N(551009, 'arguments', arguments, true, false, false);
                                                    return J$.Rt(550993, J$.G(550985, J$.G(550977, J$.R(550969, 'this', this, false, false), 'result'), 'upserted'));
                                                } catch (J$e) {
                                                    J$.Ex(568105, J$e);
                                                } finally {
                                                    if (J$.Fr(568113))
                                                        continue jalangiLabel19;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false)
                                }, 11, false),
                                J$.T(551121, {
                                    key: J$.T(551033, 'getUpsertedIdAt', 21, false),
                                    value: J$.T(551113, function getUpsertedIdAt(index) {
                                        jalangiLabel20:
                                            while (true) {
                                                try {
                                                    J$.Fe(551089, arguments.callee, this, arguments);
                                                    arguments = J$.N(551097, 'arguments', arguments, true, false, false);
                                                    index = J$.N(551105, 'index', index, true, false, false);
                                                    return J$.Rt(551081, J$.G(551073, J$.G(551057, J$.G(551049, J$.R(551041, 'this', this, false, false), 'result'), 'upserted'), J$.R(551065, 'index', index, false, false)));
                                                } catch (J$e) {
                                                    J$.Ex(568121, J$e);
                                                } finally {
                                                    if (J$.Fr(568129))
                                                        continue jalangiLabel20;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false)
                                }, 11, false),
                                J$.T(551185, {
                                    key: J$.T(551129, 'getRawResponse', 21, false),
                                    value: J$.T(551177, function getRawResponse() {
                                        jalangiLabel21:
                                            while (true) {
                                                try {
                                                    J$.Fe(551161, arguments.callee, this, arguments);
                                                    arguments = J$.N(551169, 'arguments', arguments, true, false, false);
                                                    return J$.Rt(551153, J$.G(551145, J$.R(551137, 'this', this, false, false), 'result'));
                                                } catch (J$e) {
                                                    J$.Ex(568137, J$e);
                                                } finally {
                                                    if (J$.Fr(568145))
                                                        continue jalangiLabel21;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false)
                                }, 11, false),
                                J$.T(551273, {
                                    key: J$.T(551193, 'hasWriteErrors', 21, false),
                                    value: J$.T(551265, function hasWriteErrors() {
                                        jalangiLabel22:
                                            while (true) {
                                                try {
                                                    J$.Fe(551249, arguments.callee, this, arguments);
                                                    arguments = J$.N(551257, 'arguments', arguments, true, false, false);
                                                    return J$.Rt(551241, J$.B(74594, '>', J$.G(551225, J$.G(551217, J$.G(551209, J$.R(551201, 'this', this, false, false), 'result'), 'writeErrors'), 'length'), J$.T(551233, 0, 22, false)));
                                                } catch (J$e) {
                                                    J$.Ex(568153, J$e);
                                                } finally {
                                                    if (J$.Fr(568161))
                                                        continue jalangiLabel22;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false)
                                }, 11, false),
                                J$.T(551353, {
                                    key: J$.T(551281, 'getWriteErrorCount', 21, false),
                                    value: J$.T(551345, function getWriteErrorCount() {
                                        jalangiLabel23:
                                            while (true) {
                                                try {
                                                    J$.Fe(551329, arguments.callee, this, arguments);
                                                    arguments = J$.N(551337, 'arguments', arguments, true, false, false);
                                                    return J$.Rt(551321, J$.G(551313, J$.G(551305, J$.G(551297, J$.R(551289, 'this', this, false, false), 'result'), 'writeErrors'), 'length'));
                                                } catch (J$e) {
                                                    J$.Ex(568169, J$e);
                                                } finally {
                                                    if (J$.Fr(568177))
                                                        continue jalangiLabel23;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false)
                                }, 11, false),
                                J$.T(551505, {
                                    key: J$.T(551361, 'getWriteErrorAt', 21, false),
                                    value: J$.T(551497, function getWriteErrorAt(index) {
                                        jalangiLabel24:
                                            while (true) {
                                                try {
                                                    J$.Fe(551473, arguments.callee, this, arguments);
                                                    arguments = J$.N(551481, 'arguments', arguments, true, false, false);
                                                    index = J$.N(551489, 'index', index, true, false, false);
                                                    if (J$.C(30944, J$.B(74602, '<', J$.R(551369, 'index', index, false, false), J$.G(551401, J$.G(551393, J$.G(551385, J$.R(551377, 'this', this, false, false), 'result'), 'writeErrors'), 'length')))) {
                                                        return J$.Rt(551449, J$.G(551441, J$.G(551425, J$.G(551417, J$.R(551409, 'this', this, false, false), 'result'), 'writeErrors'), J$.R(551433, 'index', index, false, false)));
                                                    }
                                                    return J$.Rt(551465, J$.T(551457, null, 25, false));
                                                } catch (J$e) {
                                                    J$.Ex(568185, J$e);
                                                } finally {
                                                    if (J$.Fr(568193))
                                                        continue jalangiLabel24;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false)
                                }, 11, false),
                                J$.T(551577, {
                                    key: J$.T(551513, 'getWriteErrors', 21, false),
                                    value: J$.T(551569, function getWriteErrors() {
                                        jalangiLabel25:
                                            while (true) {
                                                try {
                                                    J$.Fe(551553, arguments.callee, this, arguments);
                                                    arguments = J$.N(551561, 'arguments', arguments, true, false, false);
                                                    return J$.Rt(551545, J$.G(551537, J$.G(551529, J$.R(551521, 'this', this, false, false), 'result'), 'writeErrors'));
                                                } catch (J$e) {
                                                    J$.Ex(568201, J$e);
                                                } finally {
                                                    if (J$.Fr(568209))
                                                        continue jalangiLabel25;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false)
                                }, 11, false),
                                J$.T(551649, {
                                    key: J$.T(551585, 'getLastOp', 21, false),
                                    value: J$.T(551641, function getLastOp() {
                                        jalangiLabel26:
                                            while (true) {
                                                try {
                                                    J$.Fe(551625, arguments.callee, this, arguments);
                                                    arguments = J$.N(551633, 'arguments', arguments, true, false, false);
                                                    return J$.Rt(551617, J$.G(551609, J$.G(551601, J$.R(551593, 'this', this, false, false), 'result'), 'lastOp'));
                                                } catch (J$e) {
                                                    J$.Ex(568217, J$e);
                                                } finally {
                                                    if (J$.Fr(568225))
                                                        continue jalangiLabel26;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false)
                                }, 11, false),
                                J$.T(552113, {
                                    key: J$.T(551657, 'getWriteConcernError', 21, false),
                                    value: J$.T(552105, function getWriteConcernError() {
                                        jalangiLabel27:
                                            while (true) {
                                                try {
                                                    J$.Fe(552065, arguments.callee, this, arguments);
                                                    arguments = J$.N(552073, 'arguments', arguments, true, false, false);
                                                    J$.N(552081, 'errmsg', errmsg, false, false, false);
                                                    J$.N(552089, 'i', i, false, false, false);
                                                    J$.N(552097, 'err', err, false, false, false);
                                                    if (J$.C(30976, J$.B(74610, '===', J$.G(551689, J$.G(551681, J$.G(551673, J$.R(551665, 'this', this, false, false), 'result'), 'writeConcernErrors'), 'length'), J$.T(551697, 0, 22, false)))) {
                                                        return J$.Rt(551713, J$.T(551705, null, 25, false));
                                                    } else if (J$.C(30968, J$.B(74618, '===', J$.G(551745, J$.G(551737, J$.G(551729, J$.R(551721, 'this', this, false, false), 'result'), 'writeConcernErrors'), 'length'), J$.T(551753, 1, 22, false)))) {
                                                        return J$.Rt(551801, J$.G(551793, J$.G(551777, J$.G(551769, J$.R(551761, 'this', this, false, false), 'result'), 'writeConcernErrors'), J$.T(551785, 0, 22, false)));
                                                    } else {
                                                        var errmsg = J$.W(551817, 'errmsg', J$.T(551809, '', 21, false), errmsg, false, false);
                                                        for (var i = J$.W(551833, 'i', J$.T(551825, 0, 22, false), i, false, false); J$.C(30960, J$.B(74626, '<', J$.R(551841, 'i', i, false, false), J$.G(551873, J$.G(551865, J$.G(551857, J$.R(551849, 'this', this, false, false), 'result'), 'writeConcernErrors'), 'length'))); J$.B(74650, '-', i = J$.W(551889, 'i', J$.B(74642, '+', J$.U(74634, '+', J$.R(551881, 'i', i, false, false)), 1), i, false, false), 1)) {
                                                            var err = J$.W(551937, 'err', J$.G(551929, J$.G(551913, J$.G(551905, J$.R(551897, 'this', this, false, false), 'result'), 'writeConcernErrors'), J$.R(551921, 'i', i, false, false)), err, false, false);
                                                            errmsg = J$.W(551969, 'errmsg', J$.B(74658, '+', J$.R(551945, 'errmsg', errmsg, false, false), J$.G(551961, J$.R(551953, 'err', err, false, false), 'errmsg')), errmsg, false, false);
                                                            if (J$.C(30952, J$.B(74666, '===', J$.R(551977, 'i', i, false, false), J$.T(551985, 0, 22, false))))
                                                                errmsg = J$.W(552009, 'errmsg', J$.B(74674, '+', J$.R(551993, 'errmsg', errmsg, false, false), J$.T(552001, ' and ', 21, false)), errmsg, false, false);
                                                        }
                                                        return J$.Rt(552057, J$.F(552049, J$.R(552017, 'WriteConcernError', WriteConcernError, false, true), true)(J$.T(552041, {
                                                            errmsg: J$.R(552025, 'errmsg', errmsg, false, false),
                                                            code: J$.R(552033, 'WRITE_CONCERN_ERROR', WRITE_CONCERN_ERROR, false, true)
                                                        }, 11, false)));
                                                    }
                                                } catch (J$e) {
                                                    J$.Ex(568233, J$e);
                                                } finally {
                                                    if (J$.Fr(568241))
                                                        continue jalangiLabel27;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false)
                                }, 11, false),
                                J$.T(552177, {
                                    key: J$.T(552121, 'toJSON', 21, false),
                                    value: J$.T(552169, function toJSON() {
                                        jalangiLabel28:
                                            while (true) {
                                                try {
                                                    J$.Fe(552153, arguments.callee, this, arguments);
                                                    arguments = J$.N(552161, 'arguments', arguments, true, false, false);
                                                    return J$.Rt(552145, J$.G(552137, J$.R(552129, 'this', this, false, false), 'result'));
                                                } catch (J$e) {
                                                    J$.Ex(568249, J$e);
                                                } finally {
                                                    if (J$.Fr(568257))
                                                        continue jalangiLabel28;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false)
                                }, 11, false),
                                J$.T(552281, {
                                    key: J$.T(552185, 'toString', 21, false),
                                    value: J$.T(552273, function toString() {
                                        jalangiLabel29:
                                            while (true) {
                                                try {
                                                    J$.Fe(552257, arguments.callee, this, arguments);
                                                    arguments = J$.N(552265, 'arguments', arguments, true, false, false);
                                                    return J$.Rt(552249, J$.M(552241, J$.T(552193, 'BulkWriteResult(', 21, false), 'concat', false)(J$.M(552225, J$.R(552201, 'this', this, false, false), 'toJSON', false)(J$.G(552217, J$.R(552209, 'this', this, false, false), 'result')), J$.T(552233, ')', 21, false)));
                                                } catch (J$e) {
                                                    J$.Ex(568265, J$e);
                                                } finally {
                                                    if (J$.Fr(568273))
                                                        continue jalangiLabel29;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false)
                                }, 11, false),
                                J$.T(552361, {
                                    key: J$.T(552289, 'isOk', 21, false),
                                    value: J$.T(552353, function isOk() {
                                        jalangiLabel30:
                                            while (true) {
                                                try {
                                                    J$.Fe(552337, arguments.callee, this, arguments);
                                                    arguments = J$.N(552345, 'arguments', arguments, true, false, false);
                                                    return J$.Rt(552329, J$.B(74682, '===', J$.G(552313, J$.G(552305, J$.R(552297, 'this', this, false, false), 'result'), 'ok'), J$.T(552321, 1, 22, false)));
                                                } catch (J$e) {
                                                    J$.Ex(568281, J$e);
                                                } finally {
                                                    if (J$.Fr(568289))
                                                        continue jalangiLabel30;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false)
                                }, 11, false),
                                J$.T(552433, {
                                    key: J$.T(552369, 'ok', 21, false),
                                    get: J$.T(552425, function get() {
                                        jalangiLabel31:
                                            while (true) {
                                                try {
                                                    J$.Fe(552409, arguments.callee, this, arguments);
                                                    arguments = J$.N(552417, 'arguments', arguments, true, false, false);
                                                    return J$.Rt(552401, J$.G(552393, J$.G(552385, J$.R(552377, 'this', this, false, false), 'result'), 'ok'));
                                                } catch (J$e) {
                                                    J$.Ex(568297, J$e);
                                                } finally {
                                                    if (J$.Fr(568305))
                                                        continue jalangiLabel31;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false)
                                }, 11, false),
                                J$.T(552505, {
                                    key: J$.T(552441, 'nInserted', 21, false),
                                    get: J$.T(552497, function get() {
                                        jalangiLabel32:
                                            while (true) {
                                                try {
                                                    J$.Fe(552481, arguments.callee, this, arguments);
                                                    arguments = J$.N(552489, 'arguments', arguments, true, false, false);
                                                    return J$.Rt(552473, J$.G(552465, J$.G(552457, J$.R(552449, 'this', this, false, false), 'result'), 'nInserted'));
                                                } catch (J$e) {
                                                    J$.Ex(568313, J$e);
                                                } finally {
                                                    if (J$.Fr(568321))
                                                        continue jalangiLabel32;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false)
                                }, 11, false),
                                J$.T(552577, {
                                    key: J$.T(552513, 'nUpserted', 21, false),
                                    get: J$.T(552569, function get() {
                                        jalangiLabel33:
                                            while (true) {
                                                try {
                                                    J$.Fe(552553, arguments.callee, this, arguments);
                                                    arguments = J$.N(552561, 'arguments', arguments, true, false, false);
                                                    return J$.Rt(552545, J$.G(552537, J$.G(552529, J$.R(552521, 'this', this, false, false), 'result'), 'nUpserted'));
                                                } catch (J$e) {
                                                    J$.Ex(568329, J$e);
                                                } finally {
                                                    if (J$.Fr(568337))
                                                        continue jalangiLabel33;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false)
                                }, 11, false),
                                J$.T(552649, {
                                    key: J$.T(552585, 'nMatched', 21, false),
                                    get: J$.T(552641, function get() {
                                        jalangiLabel34:
                                            while (true) {
                                                try {
                                                    J$.Fe(552625, arguments.callee, this, arguments);
                                                    arguments = J$.N(552633, 'arguments', arguments, true, false, false);
                                                    return J$.Rt(552617, J$.G(552609, J$.G(552601, J$.R(552593, 'this', this, false, false), 'result'), 'nMatched'));
                                                } catch (J$e) {
                                                    J$.Ex(568345, J$e);
                                                } finally {
                                                    if (J$.Fr(568353))
                                                        continue jalangiLabel34;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false)
                                }, 11, false),
                                J$.T(552721, {
                                    key: J$.T(552657, 'nModified', 21, false),
                                    get: J$.T(552713, function get() {
                                        jalangiLabel35:
                                            while (true) {
                                                try {
                                                    J$.Fe(552697, arguments.callee, this, arguments);
                                                    arguments = J$.N(552705, 'arguments', arguments, true, false, false);
                                                    return J$.Rt(552689, J$.G(552681, J$.G(552673, J$.R(552665, 'this', this, false, false), 'result'), 'nModified'));
                                                } catch (J$e) {
                                                    J$.Ex(568361, J$e);
                                                } finally {
                                                    if (J$.Fr(568369))
                                                        continue jalangiLabel35;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false)
                                }, 11, false),
                                J$.T(552793, {
                                    key: J$.T(552729, 'nRemoved', 21, false),
                                    get: J$.T(552785, function get() {
                                        jalangiLabel36:
                                            while (true) {
                                                try {
                                                    J$.Fe(552769, arguments.callee, this, arguments);
                                                    arguments = J$.N(552777, 'arguments', arguments, true, false, false);
                                                    return J$.Rt(552761, J$.G(552753, J$.G(552745, J$.R(552737, 'this', this, false, false), 'result'), 'nRemoved'));
                                                } catch (J$e) {
                                                    J$.Ex(568377, J$e);
                                                } finally {
                                                    if (J$.Fr(568385))
                                                        continue jalangiLabel36;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false)
                                }, 11, false)
                            ], 10, false));
                            return J$.Rt(552825, J$.R(552817, 'BulkWriteResult', BulkWriteResult, false, false));
                        } catch (J$e) {
                            J$.Ex(568393, J$e);
                        } finally {
                            if (J$.Fr(568401))
                                continue jalangiLabel37;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false), false)(), BulkWriteResult, false, true);
            var WriteConcernError = J$.W(553409, 'WriteConcernError', J$.F(553401, J$.T(553393, function () {
                jalangiLabel43:
                    while (true) {
                        try {
                            J$.Fe(553361, arguments.callee, this, arguments);
                            function WriteConcernError(err) {
                                jalangiLabel38:
                                    while (true) {
                                        try {
                                            J$.Fe(552945, arguments.callee, this, arguments);
                                            arguments = J$.N(552953, 'arguments', arguments, true, false, false);
                                            err = J$.N(552961, 'err', err, true, false, false);
                                            J$.F(552913, J$.R(552889, '_classCallCheck', _classCallCheck, false, true), false)(J$.R(552897, 'this', this, false, false), J$.R(552905, 'WriteConcernError', WriteConcernError, false, false));
                                            J$.P(552937, J$.R(552921, 'this', this, false, false), 'err', J$.R(552929, 'err', err, false, false));
                                        } catch (J$e) {
                                            J$.Ex(568409, J$e);
                                        } finally {
                                            if (J$.Fr(568417))
                                                continue jalangiLabel38;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }
                            arguments = J$.N(553369, 'arguments', arguments, true, false, false);
                            WriteConcernError = J$.N(553385, 'WriteConcernError', J$.T(553377, WriteConcernError, 12, false), true, false, false);
                            J$.F(553337, J$.R(552969, '_createClass', _createClass, false, true), false)(J$.R(552977, 'WriteConcernError', WriteConcernError, false, false), J$.T(553329, [
                                J$.T(553081, {
                                    key: J$.T(552985, 'toJSON', 21, false),
                                    value: J$.T(553073, function toJSON() {
                                        jalangiLabel39:
                                            while (true) {
                                                try {
                                                    J$.Fe(553057, arguments.callee, this, arguments);
                                                    arguments = J$.N(553065, 'arguments', arguments, true, false, false);
                                                    return J$.Rt(553049, J$.T(553041, {
                                                        code: J$.G(553009, J$.G(553001, J$.R(552993, 'this', this, false, false), 'err'), 'code'),
                                                        errmsg: J$.G(553033, J$.G(553025, J$.R(553017, 'this', this, false, false), 'err'), 'errmsg')
                                                    }, 11, false));
                                                } catch (J$e) {
                                                    J$.Ex(568425, J$e);
                                                } finally {
                                                    if (J$.Fr(568433))
                                                        continue jalangiLabel39;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false)
                                }, 11, false),
                                J$.T(553177, {
                                    key: J$.T(553089, 'toString', 21, false),
                                    value: J$.T(553169, function toString() {
                                        jalangiLabel40:
                                            while (true) {
                                                try {
                                                    J$.Fe(553153, arguments.callee, this, arguments);
                                                    arguments = J$.N(553161, 'arguments', arguments, true, false, false);
                                                    return J$.Rt(553145, J$.M(553137, J$.T(553097, 'WriteConcernError(', 21, false), 'concat', false)(J$.G(553121, J$.G(553113, J$.R(553105, 'this', this, false, false), 'err'), 'errmsg'), J$.T(553129, ')', 21, false)));
                                                } catch (J$e) {
                                                    J$.Ex(568441, J$e);
                                                } finally {
                                                    if (J$.Fr(568449))
                                                        continue jalangiLabel40;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false)
                                }, 11, false),
                                J$.T(553249, {
                                    key: J$.T(553185, 'code', 21, false),
                                    get: J$.T(553241, function get() {
                                        jalangiLabel41:
                                            while (true) {
                                                try {
                                                    J$.Fe(553225, arguments.callee, this, arguments);
                                                    arguments = J$.N(553233, 'arguments', arguments, true, false, false);
                                                    return J$.Rt(553217, J$.G(553209, J$.G(553201, J$.R(553193, 'this', this, false, false), 'err'), 'code'));
                                                } catch (J$e) {
                                                    J$.Ex(568457, J$e);
                                                } finally {
                                                    if (J$.Fr(568465))
                                                        continue jalangiLabel41;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false)
                                }, 11, false),
                                J$.T(553321, {
                                    key: J$.T(553257, 'errmsg', 21, false),
                                    get: J$.T(553313, function get() {
                                        jalangiLabel42:
                                            while (true) {
                                                try {
                                                    J$.Fe(553297, arguments.callee, this, arguments);
                                                    arguments = J$.N(553305, 'arguments', arguments, true, false, false);
                                                    return J$.Rt(553289, J$.G(553281, J$.G(553273, J$.R(553265, 'this', this, false, false), 'err'), 'errmsg'));
                                                } catch (J$e) {
                                                    J$.Ex(568473, J$e);
                                                } finally {
                                                    if (J$.Fr(568481))
                                                        continue jalangiLabel42;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false)
                                }, 11, false)
                            ], 10, false));
                            return J$.Rt(553353, J$.R(553345, 'WriteConcernError', WriteConcernError, false, false));
                        } catch (J$e) {
                            J$.Ex(568489, J$e);
                        } finally {
                            if (J$.Fr(568497))
                                continue jalangiLabel43;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false), false)(), WriteConcernError, false, true);
            var WriteError = J$.W(554137, 'WriteError', J$.F(554129, J$.T(554121, function () {
                jalangiLabel51:
                    while (true) {
                        try {
                            J$.Fe(554089, arguments.callee, this, arguments);
                            function WriteError(err) {
                                jalangiLabel44:
                                    while (true) {
                                        try {
                                            J$.Fe(553473, arguments.callee, this, arguments);
                                            arguments = J$.N(553481, 'arguments', arguments, true, false, false);
                                            err = J$.N(553489, 'err', err, true, false, false);
                                            J$.F(553441, J$.R(553417, '_classCallCheck', _classCallCheck, false, true), false)(J$.R(553425, 'this', this, false, false), J$.R(553433, 'WriteError', WriteError, false, false));
                                            J$.P(553465, J$.R(553449, 'this', this, false, false), 'err', J$.R(553457, 'err', err, false, false));
                                        } catch (J$e) {
                                            J$.Ex(568505, J$e);
                                        } finally {
                                            if (J$.Fr(568513))
                                                continue jalangiLabel44;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }
                            arguments = J$.N(554097, 'arguments', arguments, true, false, false);
                            WriteError = J$.N(554113, 'WriteError', J$.T(554105, WriteError, 12, false), true, false, false);
                            J$.F(554065, J$.R(553497, '_createClass', _createClass, false, true), false)(J$.R(553505, 'WriteError', WriteError, false, false), J$.T(554057, [
                                J$.T(553577, {
                                    key: J$.T(553513, 'getOperation', 21, false),
                                    value: J$.T(553569, function getOperation() {
                                        jalangiLabel45:
                                            while (true) {
                                                try {
                                                    J$.Fe(553553, arguments.callee, this, arguments);
                                                    arguments = J$.N(553561, 'arguments', arguments, true, false, false);
                                                    return J$.Rt(553545, J$.G(553537, J$.G(553529, J$.R(553521, 'this', this, false, false), 'err'), 'op'));
                                                } catch (J$e) {
                                                    J$.Ex(568521, J$e);
                                                } finally {
                                                    if (J$.Fr(568529))
                                                        continue jalangiLabel45;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false)
                                }, 11, false),
                                J$.T(553729, {
                                    key: J$.T(553585, 'toJSON', 21, false),
                                    value: J$.T(553721, function toJSON() {
                                        jalangiLabel46:
                                            while (true) {
                                                try {
                                                    J$.Fe(553705, arguments.callee, this, arguments);
                                                    arguments = J$.N(553713, 'arguments', arguments, true, false, false);
                                                    return J$.Rt(553697, J$.T(553689, {
                                                        code: J$.G(553609, J$.G(553601, J$.R(553593, 'this', this, false, false), 'err'), 'code'),
                                                        index: J$.G(553633, J$.G(553625, J$.R(553617, 'this', this, false, false), 'err'), 'index'),
                                                        errmsg: J$.G(553657, J$.G(553649, J$.R(553641, 'this', this, false, false), 'err'), 'errmsg'),
                                                        op: J$.G(553681, J$.G(553673, J$.R(553665, 'this', this, false, false), 'err'), 'op')
                                                    }, 11, false));
                                                } catch (J$e) {
                                                    J$.Ex(568537, J$e);
                                                } finally {
                                                    if (J$.Fr(568545))
                                                        continue jalangiLabel46;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false)
                                }, 11, false),
                                J$.T(553833, {
                                    key: J$.T(553737, 'toString', 21, false),
                                    value: J$.T(553825, function toString() {
                                        jalangiLabel47:
                                            while (true) {
                                                try {
                                                    J$.Fe(553809, arguments.callee, this, arguments);
                                                    arguments = J$.N(553817, 'arguments', arguments, true, false, false);
                                                    return J$.Rt(553801, J$.M(553793, J$.T(553745, 'WriteError(', 21, false), 'concat', false)(J$.M(553777, J$.I(typeof JSON === 'undefined' ? JSON = J$.R(553753, 'JSON', undefined, true, true) : JSON = J$.R(553753, 'JSON', JSON, true, true)), 'stringify', false)(J$.M(553769, J$.R(553761, 'this', this, false, false), 'toJSON', false)()), J$.T(553785, ')', 21, false)));
                                                } catch (J$e) {
                                                    J$.Ex(568553, J$e);
                                                } finally {
                                                    if (J$.Fr(568561))
                                                        continue jalangiLabel47;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false)
                                }, 11, false),
                                J$.T(553905, {
                                    key: J$.T(553841, 'code', 21, false),
                                    get: J$.T(553897, function get() {
                                        jalangiLabel48:
                                            while (true) {
                                                try {
                                                    J$.Fe(553881, arguments.callee, this, arguments);
                                                    arguments = J$.N(553889, 'arguments', arguments, true, false, false);
                                                    return J$.Rt(553873, J$.G(553865, J$.G(553857, J$.R(553849, 'this', this, false, false), 'err'), 'code'));
                                                } catch (J$e) {
                                                    J$.Ex(568569, J$e);
                                                } finally {
                                                    if (J$.Fr(568577))
                                                        continue jalangiLabel48;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false)
                                }, 11, false),
                                J$.T(553977, {
                                    key: J$.T(553913, 'index', 21, false),
                                    get: J$.T(553969, function get() {
                                        jalangiLabel49:
                                            while (true) {
                                                try {
                                                    J$.Fe(553953, arguments.callee, this, arguments);
                                                    arguments = J$.N(553961, 'arguments', arguments, true, false, false);
                                                    return J$.Rt(553945, J$.G(553937, J$.G(553929, J$.R(553921, 'this', this, false, false), 'err'), 'index'));
                                                } catch (J$e) {
                                                    J$.Ex(568585, J$e);
                                                } finally {
                                                    if (J$.Fr(568593))
                                                        continue jalangiLabel49;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false)
                                }, 11, false),
                                J$.T(554049, {
                                    key: J$.T(553985, 'errmsg', 21, false),
                                    get: J$.T(554041, function get() {
                                        jalangiLabel50:
                                            while (true) {
                                                try {
                                                    J$.Fe(554025, arguments.callee, this, arguments);
                                                    arguments = J$.N(554033, 'arguments', arguments, true, false, false);
                                                    return J$.Rt(554017, J$.G(554009, J$.G(554001, J$.R(553993, 'this', this, false, false), 'err'), 'errmsg'));
                                                } catch (J$e) {
                                                    J$.Ex(568601, J$e);
                                                } finally {
                                                    if (J$.Fr(568609))
                                                        continue jalangiLabel50;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false)
                                }, 11, false)
                            ], 10, false));
                            return J$.Rt(554081, J$.R(554073, 'WriteError', WriteError, false, false));
                        } catch (J$e) {
                            J$.Ex(568617, J$e);
                        } finally {
                            if (J$.Fr(568625))
                                continue jalangiLabel51;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false), false)(), WriteError, false, true);
            var BulkWriteError = J$.W(558241, 'BulkWriteError', J$.F(558233, J$.T(558217, function (_MongoError) {
                jalangiLabel57:
                    while (true) {
                        try {
                            J$.Fe(558177, arguments.callee, this, arguments);
                            function BulkWriteError(error, result) {
                                jalangiLabel56:
                                    while (true) {
                                        try {
                                            J$.Fe(558113, arguments.callee, this, arguments);
                                            arguments = J$.N(558121, 'arguments', arguments, true, false, false);
                                            error = J$.N(558129, 'error', error, true, false, false);
                                            result = J$.N(558137, 'result', result, true, false, false);
                                            J$.N(558145, '_this', _this, false, false, false);
                                            J$.N(558153, 'message', message, false, false, false);
                                            var _this;
                                            J$.F(557849, J$.R(557825, '_classCallCheck', _classCallCheck, false, true), false)(J$.R(557833, 'this', this, false, false), J$.R(557841, 'BulkWriteError', BulkWriteError, false, false));
                                            var message = J$.W(557913, 'message', J$.C(31384, J$.C(31376, J$.C(31368, J$.G(557865, J$.R(557857, 'error', error, false, false), 'err')) ? J$._() : J$.G(557881, J$.R(557873, 'error', error, false, false), 'errmsg')) ? J$._() : J$.G(557897, J$.R(557889, 'error', error, false, false), 'errMessage')) ? J$._() : J$.R(557905, 'error', error, false, false), message, false, false);
                                            _this = J$.W(557993, '_this', J$.F(557985, J$.R(557921, '_possibleConstructorReturn', _possibleConstructorReturn, false, true), false)(J$.R(557929, 'this', this, false, false), J$.M(557977, J$.F(557953, J$.R(557937, '_getPrototypeOf', _getPrototypeOf, false, true), false)(J$.R(557945, 'BulkWriteError', BulkWriteError, false, false)), 'call', false)(J$.R(557961, 'this', this, false, false), J$.R(557969, 'message', message, false, false))), _this, false, false);
                                            J$.M(558041, J$.I(typeof Object === 'undefined' ? Object = J$.R(558001, 'Object', undefined, true, true) : Object = J$.R(558001, 'Object', Object, true, true)), 'assign', false)(J$.F(558025, J$.R(558009, '_assertThisInitialized', _assertThisInitialized, false, true), false)(J$.R(558017, '_this', _this, false, false)), J$.R(558033, 'error', error, false, false));
                                            J$.P(558065, J$.R(558049, '_this', _this, false, false), 'name', J$.T(558057, 'BulkWriteError', 21, false));
                                            J$.P(558089, J$.R(558073, '_this', _this, false, false), 'result', J$.R(558081, 'result', result, false, false));
                                            return J$.Rt(558105, J$.R(558097, '_this', _this, false, false));
                                        } catch (J$e) {
                                            J$.Ex(568697, J$e);
                                        } finally {
                                            if (J$.Fr(568705))
                                                continue jalangiLabel56;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }
                            arguments = J$.N(558185, 'arguments', arguments, true, false, false);
                            _MongoError = J$.N(558193, '_MongoError', _MongoError, true, false, false);
                            BulkWriteError = J$.N(558209, 'BulkWriteError', J$.T(558201, BulkWriteError, 12, false), true, false, false);
                            J$.F(557817, J$.R(557793, '_inherits', _inherits, false, true), false)(J$.R(557801, 'BulkWriteError', BulkWriteError, false, false), J$.R(557809, '_MongoError', _MongoError, false, false));
                            return J$.Rt(558169, J$.R(558161, 'BulkWriteError', BulkWriteError, false, false));
                        } catch (J$e) {
                            J$.Ex(568713, J$e);
                        } finally {
                            if (J$.Fr(568721))
                                continue jalangiLabel57;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false), false)(J$.R(558225, 'MongoError', MongoError, false, true)), BulkWriteError, false, true);
            var FindOperators = J$.W(559777, 'FindOperators', J$.F(559769, J$.T(559761, function () {
                jalangiLabel67:
                    while (true) {
                        try {
                            J$.Fe(559729, arguments.callee, this, arguments);
                            function FindOperators(bulkOperation) {
                                jalangiLabel58:
                                    while (true) {
                                        try {
                                            J$.Fe(558313, arguments.callee, this, arguments);
                                            arguments = J$.N(558321, 'arguments', arguments, true, false, false);
                                            bulkOperation = J$.N(558329, 'bulkOperation', bulkOperation, true, false, false);
                                            J$.F(558273, J$.R(558249, '_classCallCheck', _classCallCheck, false, true), false)(J$.R(558257, 'this', this, false, false), J$.R(558265, 'FindOperators', FindOperators, false, false));
                                            J$.P(558305, J$.R(558281, 'this', this, false, false), 's', J$.G(558297, J$.R(558289, 'bulkOperation', bulkOperation, false, false), 's'));
                                        } catch (J$e) {
                                            J$.Ex(568729, J$e);
                                        } finally {
                                            if (J$.Fr(568737))
                                                continue jalangiLabel58;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }
                            arguments = J$.N(559737, 'arguments', arguments, true, false, false);
                            FindOperators = J$.N(559753, 'FindOperators', J$.T(559745, FindOperators, 12, false), true, false, false);
                            J$.F(559705, J$.R(558337, '_createClass', _createClass, false, true), false)(J$.R(558345, 'FindOperators', FindOperators, false, false), J$.T(559697, [
                                J$.T(558665, {
                                    key: J$.T(558353, 'update', 21, false),
                                    value: J$.T(558657, function update(updateDocument) {
                                        jalangiLabel59:
                                            while (true) {
                                                try {
                                                    J$.Fe(558617, arguments.callee, this, arguments);
                                                    arguments = J$.N(558625, 'arguments', arguments, true, false, false);
                                                    updateDocument = J$.N(558633, 'updateDocument', updateDocument, true, false, false);
                                                    J$.N(558641, 'upsert', upsert, false, false, false);
                                                    J$.N(558649, 'document', document, false, false, false);
                                                    var upsert = J$.W(558441, 'upsert', J$.C(31392, J$.B(75034, '===', J$.U(75026, 'typeof', J$.G(558385, J$.G(558377, J$.G(558369, J$.R(558361, 'this', this, false, false), 's'), 'currentOp'), 'upsert')), J$.T(558393, 'boolean', 21, false))) ? J$.G(558425, J$.G(558417, J$.G(558409, J$.R(558401, 'this', this, false, false), 's'), 'currentOp'), 'upsert') : J$.T(558433, false, 23, false), upsert, false, false);
                                                    var document = J$.W(558513, 'document', J$.T(558505, {
                                                        q: J$.G(558473, J$.G(558465, J$.G(558457, J$.R(558449, 'this', this, false, false), 's'), 'currentOp'), 'selector'),
                                                        u: J$.R(558481, 'updateDocument', updateDocument, false, false),
                                                        multi: J$.T(558489, true, 23, false),
                                                        upsert: J$.R(558497, 'upsert', upsert, false, false)
                                                    }, 11, false), document, false, false);
                                                    J$.P(558545, J$.G(558529, J$.R(558521, 'this', this, false, false), 's'), 'currentOp', J$.T(558537, null, 25, false));
                                                    return J$.Rt(558609, J$.M(558601, J$.G(558569, J$.G(558561, J$.R(558553, 'this', this, false, false), 's'), 'options'), 'addToOperationsList', false)(J$.R(558577, 'this', this, false, false), J$.R(558585, 'UPDATE', UPDATE, false, true), J$.R(558593, 'document', document, false, false)));
                                                } catch (J$e) {
                                                    J$.Ex(568745, J$e);
                                                } finally {
                                                    if (J$.Fr(568753))
                                                        continue jalangiLabel59;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false)
                                }, 11, false),
                                J$.T(558985, {
                                    key: J$.T(558673, 'updateOne', 21, false),
                                    value: J$.T(558977, function updateOne(updateDocument) {
                                        jalangiLabel60:
                                            while (true) {
                                                try {
                                                    J$.Fe(558937, arguments.callee, this, arguments);
                                                    arguments = J$.N(558945, 'arguments', arguments, true, false, false);
                                                    updateDocument = J$.N(558953, 'updateDocument', updateDocument, true, false, false);
                                                    J$.N(558961, 'upsert', upsert, false, false, false);
                                                    J$.N(558969, 'document', document, false, false, false);
                                                    var upsert = J$.W(558761, 'upsert', J$.C(31400, J$.B(75050, '===', J$.U(75042, 'typeof', J$.G(558705, J$.G(558697, J$.G(558689, J$.R(558681, 'this', this, false, false), 's'), 'currentOp'), 'upsert')), J$.T(558713, 'boolean', 21, false))) ? J$.G(558745, J$.G(558737, J$.G(558729, J$.R(558721, 'this', this, false, false), 's'), 'currentOp'), 'upsert') : J$.T(558753, false, 23, false), upsert, false, false);
                                                    var document = J$.W(558833, 'document', J$.T(558825, {
                                                        q: J$.G(558793, J$.G(558785, J$.G(558777, J$.R(558769, 'this', this, false, false), 's'), 'currentOp'), 'selector'),
                                                        u: J$.R(558801, 'updateDocument', updateDocument, false, false),
                                                        multi: J$.T(558809, false, 23, false),
                                                        upsert: J$.R(558817, 'upsert', upsert, false, false)
                                                    }, 11, false), document, false, false);
                                                    J$.P(558865, J$.G(558849, J$.R(558841, 'this', this, false, false), 's'), 'currentOp', J$.T(558857, null, 25, false));
                                                    return J$.Rt(558929, J$.M(558921, J$.G(558889, J$.G(558881, J$.R(558873, 'this', this, false, false), 's'), 'options'), 'addToOperationsList', false)(J$.R(558897, 'this', this, false, false), J$.R(558905, 'UPDATE', UPDATE, false, true), J$.R(558913, 'document', document, false, false)));
                                                } catch (J$e) {
                                                    J$.Ex(568761, J$e);
                                                } finally {
                                                    if (J$.Fr(568769))
                                                        continue jalangiLabel60;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false)
                                }, 11, false),
                                J$.T(559057, {
                                    key: J$.T(558993, 'replaceOne', 21, false),
                                    value: J$.T(559049, function replaceOne(updateDocument) {
                                        jalangiLabel61:
                                            while (true) {
                                                try {
                                                    J$.Fe(559025, arguments.callee, this, arguments);
                                                    arguments = J$.N(559033, 'arguments', arguments, true, false, false);
                                                    updateDocument = J$.N(559041, 'updateDocument', updateDocument, true, false, false);
                                                    J$.M(559017, J$.R(559001, 'this', this, false, false), 'updateOne', false)(J$.R(559009, 'updateDocument', updateDocument, false, false));
                                                } catch (J$e) {
                                                    J$.Ex(568777, J$e);
                                                } finally {
                                                    if (J$.Fr(568785))
                                                        continue jalangiLabel61;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false)
                                }, 11, false),
                                J$.T(559153, {
                                    key: J$.T(559065, 'upsert', 21, false),
                                    value: J$.T(559145, function upsert() {
                                        jalangiLabel62:
                                            while (true) {
                                                try {
                                                    J$.Fe(559129, arguments.callee, this, arguments);
                                                    arguments = J$.N(559137, 'arguments', arguments, true, false, false);
                                                    J$.P(559105, J$.G(559089, J$.G(559081, J$.R(559073, 'this', this, false, false), 's'), 'currentOp'), 'upsert', J$.T(559097, true, 23, false));
                                                    return J$.Rt(559121, J$.R(559113, 'this', this, false, false));
                                                } catch (J$e) {
                                                    J$.Ex(568793, J$e);
                                                } finally {
                                                    if (J$.Fr(568801))
                                                        continue jalangiLabel62;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false)
                                }, 11, false),
                                J$.T(559353, {
                                    key: J$.T(559161, 'deleteOne', 21, false),
                                    value: J$.T(559345, function deleteOne() {
                                        jalangiLabel63:
                                            while (true) {
                                                try {
                                                    J$.Fe(559321, arguments.callee, this, arguments);
                                                    arguments = J$.N(559329, 'arguments', arguments, true, false, false);
                                                    J$.N(559337, 'document', document, false, false, false);
                                                    var document = J$.W(559217, 'document', J$.T(559209, {
                                                        q: J$.G(559193, J$.G(559185, J$.G(559177, J$.R(559169, 'this', this, false, false), 's'), 'currentOp'), 'selector'),
                                                        limit: J$.T(559201, 1, 22, false)
                                                    }, 11, false), document, false, false);
                                                    J$.P(559249, J$.G(559233, J$.R(559225, 'this', this, false, false), 's'), 'currentOp', J$.T(559241, null, 25, false));
                                                    return J$.Rt(559313, J$.M(559305, J$.G(559273, J$.G(559265, J$.R(559257, 'this', this, false, false), 's'), 'options'), 'addToOperationsList', false)(J$.R(559281, 'this', this, false, false), J$.R(559289, 'REMOVE', REMOVE, false, true), J$.R(559297, 'document', document, false, false)));
                                                } catch (J$e) {
                                                    J$.Ex(568809, J$e);
                                                } finally {
                                                    if (J$.Fr(568817))
                                                        continue jalangiLabel63;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false)
                                }, 11, false),
                                J$.T(559553, {
                                    key: J$.T(559361, 'delete', 21, false),
                                    value: J$.T(559545, function _delete() {
                                        jalangiLabel64:
                                            while (true) {
                                                try {
                                                    J$.Fe(559521, arguments.callee, this, arguments);
                                                    arguments = J$.N(559529, 'arguments', arguments, true, false, false);
                                                    J$.N(559537, 'document', document, false, false, false);
                                                    var document = J$.W(559417, 'document', J$.T(559409, {
                                                        q: J$.G(559393, J$.G(559385, J$.G(559377, J$.R(559369, 'this', this, false, false), 's'), 'currentOp'), 'selector'),
                                                        limit: J$.T(559401, 0, 22, false)
                                                    }, 11, false), document, false, false);
                                                    J$.P(559449, J$.G(559433, J$.R(559425, 'this', this, false, false), 's'), 'currentOp', J$.T(559441, null, 25, false));
                                                    return J$.Rt(559513, J$.M(559505, J$.G(559473, J$.G(559465, J$.R(559457, 'this', this, false, false), 's'), 'options'), 'addToOperationsList', false)(J$.R(559481, 'this', this, false, false), J$.R(559489, 'REMOVE', REMOVE, false, true), J$.R(559497, 'document', document, false, false)));
                                                } catch (J$e) {
                                                    J$.Ex(568825, J$e);
                                                } finally {
                                                    if (J$.Fr(568833))
                                                        continue jalangiLabel64;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false)
                                }, 11, false),
                                J$.T(559617, {
                                    key: J$.T(559561, 'removeOne', 21, false),
                                    value: J$.T(559609, function removeOne() {
                                        jalangiLabel65:
                                            while (true) {
                                                try {
                                                    J$.Fe(559593, arguments.callee, this, arguments);
                                                    arguments = J$.N(559601, 'arguments', arguments, true, false, false);
                                                    return J$.Rt(559585, J$.M(559577, J$.R(559569, 'this', this, false, false), 'deleteOne', false)());
                                                } catch (J$e) {
                                                    J$.Ex(568841, J$e);
                                                } finally {
                                                    if (J$.Fr(568849))
                                                        continue jalangiLabel65;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false)
                                }, 11, false),
                                J$.T(559689, {
                                    key: J$.T(559625, 'remove', 21, false),
                                    value: J$.T(559681, function remove() {
                                        jalangiLabel66:
                                            while (true) {
                                                try {
                                                    J$.Fe(559665, arguments.callee, this, arguments);
                                                    arguments = J$.N(559673, 'arguments', arguments, true, false, false);
                                                    return J$.Rt(559657, J$.M(559649, J$.R(559633, 'this', this, false, false), J$.T(559641, 'delete', 21, false), false)());
                                                } catch (J$e) {
                                                    J$.Ex(568857, J$e);
                                                } finally {
                                                    if (J$.Fr(568865))
                                                        continue jalangiLabel66;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false)
                                }, 11, false)
                            ], 10, false));
                            return J$.Rt(559721, J$.R(559713, 'FindOperators', FindOperators, false, false));
                        } catch (J$e) {
                            J$.Ex(568873, J$e);
                        } finally {
                            if (J$.Fr(568881))
                                continue jalangiLabel67;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false), false)(), FindOperators, false, true);
            var BulkOperationBase = J$.W(567201, 'BulkOperationBase', J$.F(567193, J$.T(567185, function () {
                jalangiLabel79:
                    while (true) {
                        try {
                            J$.Fe(567153, arguments.callee, this, arguments);
                            function BulkOperationBase(topology, collection, options, isOrdered) {
                                jalangiLabel68:
                                    while (true) {
                                        try {
                                            J$.Fe(560785, arguments.callee, this, arguments);
                                            arguments = J$.N(560793, 'arguments', arguments, true, false, false);
                                            topology = J$.N(560801, 'topology', topology, true, false, false);
                                            collection = J$.N(560809, 'collection', collection, true, false, false);
                                            options = J$.N(560817, 'options', options, true, false, false);
                                            isOrdered = J$.N(560825, 'isOrdered', isOrdered, true, false, false);
                                            J$.N(560833, 'namespace', namespace, false, false, false);
                                            J$.N(560841, 'executed', executed, false, false, false);
                                            J$.N(560849, 'currentOp', currentOp, false, false, false);
                                            J$.N(560857, 'bson', bson, false, false, false);
                                            J$.N(560865, 'isMaster', isMaster, false, false, false);
                                            J$.N(560873, 'maxBatchSizeBytes', maxBatchSizeBytes, false, false, false);
                                            J$.N(560881, 'maxWriteBatchSize', maxWriteBatchSize, false, false, false);
                                            J$.N(560889, 'maxKeySize', maxKeySize, false, false, false);
                                            J$.N(560897, 'finalOptions', finalOptions, false, false, false);
                                            J$.N(560905, 'writeConcern', writeConcern, false, false, false);
                                            J$.N(560913, 'promiseLibrary', promiseLibrary, false, false, false);
                                            J$.N(560921, 'bulkResult', bulkResult, false, false, false);
                                            J$.F(559809, J$.R(559785, '_classCallCheck', _classCallCheck, false, true), false)(J$.R(559793, 'this', this, false, false), J$.R(559801, 'BulkOperationBase', BulkOperationBase, false, false));
                                            J$.P(559833, J$.R(559817, 'this', this, false, false), 'isOrdered', J$.R(559825, 'isOrdered', isOrdered, false, false));
                                            options = J$.W(559873, 'options', J$.C(31408, J$.B(75058, '==', J$.R(559841, 'options', options, false, false), J$.T(559849, null, 25, false))) ? J$.T(559857, {}, 11, false) : J$.R(559865, 'options', options, false, false), options, false, false);
                                            var namespace = J$.W(559905, 'namespace', J$.G(559897, J$.G(559889, J$.R(559881, 'collection', collection, false, false), 's'), 'namespace'), namespace, false, false);
                                            var executed = J$.W(559921, 'executed', J$.T(559913, false, 23, false), executed, false, false);
                                            var currentOp = J$.W(559937, 'currentOp', J$.T(559929, null, 25, false), currentOp, false, false);
                                            var bson = J$.W(559961, 'bson', J$.G(559953, J$.R(559945, 'topology', topology, false, false), 'bson'), bson, false, false);
                                            var isMaster = J$.W(559985, 'isMaster', J$.M(559977, J$.R(559969, 'topology', topology, false, false), 'lastIsMaster', false)(), isMaster, false, false);
                                            var maxBatchSizeBytes = J$.W(560057, 'maxBatchSizeBytes', J$.C(31424, J$.C(31416, J$.R(559993, 'isMaster', isMaster, false, false)) ? J$.G(560009, J$.R(560001, 'isMaster', isMaster, false, false), 'maxBsonObjectSize') : J$._()) ? J$.G(560025, J$.R(560017, 'isMaster', isMaster, false, false), 'maxBsonObjectSize') : J$.B(75074, '*', J$.B(75066, '*', J$.T(560033, 1024, 22, false), J$.T(560041, 1024, 22, false)), J$.T(560049, 16, 22, false)), maxBatchSizeBytes, false, false);
                                            var maxWriteBatchSize = J$.W(560113, 'maxWriteBatchSize', J$.C(31440, J$.C(31432, J$.R(560065, 'isMaster', isMaster, false, false)) ? J$.G(560081, J$.R(560073, 'isMaster', isMaster, false, false), 'maxWriteBatchSize') : J$._()) ? J$.G(560097, J$.R(560089, 'isMaster', isMaster, false, false), 'maxWriteBatchSize') : J$.T(560105, 1000, 22, false), maxWriteBatchSize, false, false);
                                            var maxKeySize = J$.W(560169, 'maxKeySize', J$.B(75090, '+', J$.G(560153, J$.M(560145, J$.B(75082, '-', J$.R(560121, 'maxWriteBatchSize', maxWriteBatchSize, false, false), J$.T(560129, 1, 22, false)), 'toString', false)(J$.T(560137, 10, 22, false)), 'length'), J$.T(560161, 2, 22, false)), maxKeySize, false, false);
                                            var finalOptions = J$.W(560209, 'finalOptions', J$.M(560201, J$.I(typeof Object === 'undefined' ? Object = J$.R(560177, 'Object', undefined, true, true) : Object = J$.R(560177, 'Object', Object, true, true)), 'assign', false)(J$.T(560185, {}, 11, false), J$.R(560193, 'options', options, false, false)), finalOptions, false, false);
                                            finalOptions = J$.W(560265, 'finalOptions', J$.F(560257, J$.R(560217, 'applyRetryableWrites', applyRetryableWrites, false, true), false)(J$.R(560225, 'finalOptions', finalOptions, false, false), J$.G(560249, J$.G(560241, J$.R(560233, 'collection', collection, false, false), 's'), 'db')), finalOptions, false, false);
                                            finalOptions = J$.W(560321, 'finalOptions', J$.F(560313, J$.R(560273, 'applyWriteConcern', applyWriteConcern, false, true), false)(J$.R(560281, 'finalOptions', finalOptions, false, false), J$.T(560297, { collection: J$.R(560289, 'collection', collection, false, false) }, 11, false), J$.R(560305, 'options', options, false, false)), finalOptions, false, false);
                                            var writeConcern = J$.W(560345, 'writeConcern', J$.G(560337, J$.R(560329, 'finalOptions', finalOptions, false, false), 'writeConcern'), writeConcern, false, false);
                                            var promiseLibrary = J$.W(560377, 'promiseLibrary', J$.C(31448, J$.G(560361, J$.R(560353, 'options', options, false, false), 'promiseLibrary')) ? J$._() : J$.I(typeof Promise === 'undefined' ? Promise = J$.R(560369, 'Promise', undefined, true, true) : Promise = J$.R(560369, 'Promise', Promise, true, true)), promiseLibrary, false, false);
                                            var bulkResult = J$.W(560473, 'bulkResult', J$.T(560465, {
                                                ok: J$.T(560385, 1, 22, false),
                                                writeErrors: J$.T(560393, [], 10, false),
                                                writeConcernErrors: J$.T(560401, [], 10, false),
                                                insertedIds: J$.T(560409, [], 10, false),
                                                nInserted: J$.T(560417, 0, 22, false),
                                                nUpserted: J$.T(560425, 0, 22, false),
                                                nMatched: J$.T(560433, 0, 22, false),
                                                nModified: J$.T(560441, 0, 22, false),
                                                nRemoved: J$.T(560449, 0, 22, false),
                                                upserted: J$.T(560457, [], 10, false)
                                            }, 11, false), bulkResult, false, false);
                                            J$.P(560721, J$.R(560481, 'this', this, false, false), 's', J$.T(560713, {
                                                bulkResult: J$.R(560489, 'bulkResult', bulkResult, false, false),
                                                currentBatch: J$.T(560497, null, 25, false),
                                                currentIndex: J$.T(560505, 0, 22, false),
                                                currentBatchSize: J$.T(560513, 0, 22, false),
                                                currentBatchSizeBytes: J$.T(560521, 0, 22, false),
                                                currentInsertBatch: J$.T(560529, null, 25, false),
                                                currentUpdateBatch: J$.T(560537, null, 25, false),
                                                currentRemoveBatch: J$.T(560545, null, 25, false),
                                                batches: J$.T(560553, [], 10, false),
                                                writeConcern: J$.R(560561, 'writeConcern', writeConcern, false, false),
                                                maxBatchSizeBytes: J$.R(560569, 'maxBatchSizeBytes', maxBatchSizeBytes, false, false),
                                                maxWriteBatchSize: J$.R(560577, 'maxWriteBatchSize', maxWriteBatchSize, false, false),
                                                maxKeySize: J$.R(560585, 'maxKeySize', maxKeySize, false, false),
                                                namespace: J$.R(560593, 'namespace', namespace, false, false),
                                                bson: J$.R(560601, 'bson', bson, false, false),
                                                topology: J$.R(560609, 'topology', topology, false, false),
                                                options: J$.R(560617, 'finalOptions', finalOptions, false, false),
                                                currentOp: J$.R(560625, 'currentOp', currentOp, false, false),
                                                executed: J$.R(560633, 'executed', executed, false, false),
                                                collection: J$.R(560641, 'collection', collection, false, false),
                                                promiseLibrary: J$.R(560649, 'promiseLibrary', promiseLibrary, false, false),
                                                err: J$.T(560657, null, 25, false),
                                                checkKeys: J$.C(31456, J$.B(75106, '===', J$.U(75098, 'typeof', J$.G(560673, J$.R(560665, 'options', options, false, false), 'checkKeys')), J$.T(560681, 'boolean', 21, false))) ? J$.G(560697, J$.R(560689, 'options', options, false, false), 'checkKeys') : J$.T(560705, true, 23, false)
                                            }, 11, false));
                                            if (J$.C(31464, J$.B(75114, '===', J$.G(560737, J$.R(560729, 'options', options, false, false), 'bypassDocumentValidation'), J$.T(560745, true, 23, false)))) {
                                                J$.P(560777, J$.G(560761, J$.R(560753, 'this', this, false, false), 's'), 'bypassDocumentValidation', J$.T(560769, true, 23, false));
                                            }
                                        } catch (J$e) {
                                            J$.Ex(568889, J$e);
                                        } finally {
                                            if (J$.Fr(568897))
                                                continue jalangiLabel68;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }
                            arguments = J$.N(567161, 'arguments', arguments, true, false, false);
                            BulkOperationBase = J$.N(567177, 'BulkOperationBase', J$.T(567169, BulkOperationBase, 12, false), true, false, false);
                            J$.F(567129, J$.R(560929, '_createClass', _createClass, false, true), false)(J$.R(560937, 'BulkOperationBase', BulkOperationBase, false, false), J$.T(567121, [
                                J$.T(561169, {
                                    key: J$.T(560945, 'insert', 21, false),
                                    value: J$.T(561161, function insert(document) {
                                        jalangiLabel69:
                                            while (true) {
                                                try {
                                                    J$.Fe(561137, arguments.callee, this, arguments);
                                                    arguments = J$.N(561145, 'arguments', arguments, true, false, false);
                                                    document = J$.N(561153, 'document', document, true, false, false);
                                                    if (J$.C(31480, J$.C(31472, J$.B(75122, '!==', J$.G(561001, J$.G(560993, J$.G(560985, J$.G(560977, J$.G(560969, J$.G(560961, J$.R(560953, 'this', this, false, false), 's'), 'collection'), 's'), 'db'), 'options'), 'forceServerObjectId'), J$.T(561009, true, 23, false))) ? J$.B(75130, '==', J$.G(561025, J$.R(561017, 'document', document, false, false), '_id'), J$.T(561033, null, 25, false)) : J$._()))
                                                        J$.P(561065, J$.R(561041, 'document', document, false, false), '_id', J$.F(561057, J$.R(561049, 'ObjectID', ObjectID, false, true), true)());
                                                    return J$.Rt(561129, J$.M(561121, J$.G(561089, J$.G(561081, J$.R(561073, 'this', this, false, false), 's'), 'options'), 'addToOperationsList', false)(J$.R(561097, 'this', this, false, false), J$.R(561105, 'INSERT', INSERT, false, true), J$.R(561113, 'document', document, false, false)));
                                                } catch (J$e) {
                                                    J$.Ex(568905, J$e);
                                                } finally {
                                                    if (J$.Fr(568913))
                                                        continue jalangiLabel69;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false)
                                }, 11, false),
                                J$.T(561321, {
                                    key: J$.T(561177, 'find', 21, false),
                                    value: J$.T(561313, function find(selector) {
                                        jalangiLabel70:
                                            while (true) {
                                                try {
                                                    J$.Fe(561289, arguments.callee, this, arguments);
                                                    arguments = J$.N(561297, 'arguments', arguments, true, false, false);
                                                    selector = J$.N(561305, 'selector', selector, true, false, false);
                                                    if (J$.C(31488, J$.U(75138, '!', J$.R(561185, 'selector', selector, false, false)))) {
                                                        throw J$.F(561209, J$.R(561193, 'toError', toError, false, true), false)(J$.T(561201, 'Bulk find operation must specify a selector', 21, false));
                                                    }
                                                    J$.P(561249, J$.G(561225, J$.R(561217, 'this', this, false, false), 's'), 'currentOp', J$.T(561241, { selector: J$.R(561233, 'selector', selector, false, false) }, 11, false));
                                                    return J$.Rt(561281, J$.F(561273, J$.R(561257, 'FindOperators', FindOperators, false, true), true)(J$.R(561265, 'this', this, false, false)));
                                                } catch (J$e) {
                                                    J$.Ex(568921, J$e);
                                                } finally {
                                                    if (J$.Fr(568929))
                                                        continue jalangiLabel70;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false)
                                }, 11, false),
                                J$.T(563697, {
                                    key: J$.T(561329, 'raw', 21, false),
                                    value: J$.T(563689, function raw(op) {
                                        jalangiLabel71:
                                            while (true) {
                                                try {
                                                    J$.Fe(563609, arguments.callee, this, arguments);
                                                    arguments = J$.N(563617, 'arguments', arguments, true, false, false);
                                                    op = J$.N(563625, 'op', op, true, false, false);
                                                    J$.N(563633, 'key', key, false, false, false);
                                                    J$.N(563641, 'forceServerObjectId', forceServerObjectId, false, false, false);
                                                    J$.N(563649, 'multi', multi, false, false, false);
                                                    J$.N(563657, 'operation', operation, false, false, false);
                                                    J$.N(563665, 'limit', limit, false, false, false);
                                                    J$.N(563673, '_operation', _operation, false, false, false);
                                                    J$.N(563681, 'i', i, false, false, false);
                                                    var key = J$.W(561377, 'key', J$.G(561369, J$.M(561353, J$.I(typeof Object === 'undefined' ? Object = J$.R(561337, 'Object', undefined, true, true) : Object = J$.R(561337, 'Object', Object, true, true)), 'keys', false)(J$.R(561345, 'op', op, false, false)), J$.T(561361, 0, 22, false)), key, false, false);
                                                    var forceServerObjectId = J$.W(561513, 'forceServerObjectId', J$.C(31496, J$.B(75154, '===', J$.U(75146, 'typeof', J$.G(561409, J$.G(561401, J$.G(561393, J$.R(561385, 'this', this, false, false), 's'), 'options'), 'forceServerObjectId')), J$.T(561417, 'boolean', 21, false))) ? J$.G(561449, J$.G(561441, J$.G(561433, J$.R(561425, 'this', this, false, false), 's'), 'options'), 'forceServerObjectId') : J$.G(561505, J$.G(561497, J$.G(561489, J$.G(561481, J$.G(561473, J$.G(561465, J$.R(561457, 'this', this, false, false), 's'), 'collection'), 's'), 'db'), 'options'), 'forceServerObjectId'), forceServerObjectId, false, false);
                                                    if (J$.C(31560, J$.C(31536, J$.C(31520, J$.C(31504, J$.G(561529, J$.R(561521, 'op', op, false, false), 'updateOne')) ? J$.G(561553, J$.G(561545, J$.R(561537, 'op', op, false, false), 'updateOne'), 'q') : J$._()) ? J$._() : J$.C(31512, J$.G(561569, J$.R(561561, 'op', op, false, false), 'updateMany')) ? J$.G(561593, J$.G(561585, J$.R(561577, 'op', op, false, false), 'updateMany'), 'q') : J$._()) ? J$._() : J$.C(31528, J$.G(561609, J$.R(561601, 'op', op, false, false), 'replaceOne')) ? J$.G(561633, J$.G(561625, J$.R(561617, 'op', op, false, false), 'replaceOne'), 'q') : J$._())) {
                                                        J$.P(561713, J$.G(561657, J$.R(561641, 'op', op, false, false), J$.R(561649, 'key', key, false, false)), 'multi', J$.C(31552, J$.C(31544, J$.G(561673, J$.R(561665, 'op', op, false, false), 'updateOne')) ? J$._() : J$.G(561689, J$.R(561681, 'op', op, false, false), 'replaceOne')) ? J$.T(561697, false, 23, false) : J$.T(561705, true, 23, false));
                                                        return J$.Rt(561793, J$.M(561785, J$.G(561737, J$.G(561729, J$.R(561721, 'this', this, false, false), 's'), 'options'), 'addToOperationsList', false)(J$.R(561745, 'this', this, false, false), J$.R(561753, 'UPDATE', UPDATE, false, true), J$.G(561777, J$.R(561761, 'op', op, false, false), J$.R(561769, 'key', key, false, false))));
                                                    }
                                                    if (J$.C(31648, J$.C(31576, J$.C(31568, J$.G(561809, J$.R(561801, 'op', op, false, false), 'updateOne')) ? J$._() : J$.G(561825, J$.R(561817, 'op', op, false, false), 'updateMany')) ? J$._() : J$.G(561841, J$.R(561833, 'op', op, false, false), 'replaceOne'))) {
                                                        var multi = J$.W(561897, 'multi', J$.C(31592, J$.C(31584, J$.G(561857, J$.R(561849, 'op', op, false, false), 'updateOne')) ? J$._() : J$.G(561873, J$.R(561865, 'op', op, false, false), 'replaceOne')) ? J$.T(561881, false, 23, false) : J$.T(561889, true, 23, false), multi, false, false);
                                                        var operation = J$.W(562017, 'operation', J$.T(562009, {
                                                            q: J$.G(561929, J$.G(561921, J$.R(561905, 'op', op, false, false), J$.R(561913, 'key', key, false, false)), 'filter'),
                                                            u: J$.C(31600, J$.G(561961, J$.G(561953, J$.R(561937, 'op', op, false, false), J$.R(561945, 'key', key, false, false)), 'update')) ? J$._() : J$.G(561993, J$.G(561985, J$.R(561969, 'op', op, false, false), J$.R(561977, 'key', key, false, false)), 'replacement'),
                                                            multi: J$.R(562001, 'multi', multi, false, false)
                                                        }, 11, false), operation, false, false);
                                                        if (J$.C(31632, J$.G(562033, J$.R(562025, 'this', this, false, false), 'isOrdered'))) {
                                                            J$.P(562097, J$.R(562041, 'operation', operation, false, false), 'upsert', J$.C(31608, J$.G(562073, J$.G(562065, J$.R(562049, 'op', op, false, false), J$.R(562057, 'key', key, false, false)), 'upsert')) ? J$.T(562081, true, 23, false) : J$.T(562089, false, 23, false));
                                                            if (J$.C(31616, J$.G(562113, J$.R(562105, 'op', op, false, false), 'collation')))
                                                                J$.P(562145, J$.R(562121, 'operation', operation, false, false), 'collation', J$.G(562137, J$.R(562129, 'op', op, false, false), 'collation'));
                                                        } else {
                                                            if (J$.C(31624, J$.G(562177, J$.G(562169, J$.R(562153, 'op', op, false, false), J$.R(562161, 'key', key, false, false)), 'upsert')))
                                                                J$.P(562201, J$.R(562185, 'operation', operation, false, false), 'upsert', J$.T(562193, true, 23, false));
                                                        }
                                                        if (J$.C(31640, J$.G(562233, J$.G(562225, J$.R(562209, 'op', op, false, false), J$.R(562217, 'key', key, false, false)), 'arrayFilters')))
                                                            J$.P(562281, J$.R(562241, 'operation', operation, false, false), 'arrayFilters', J$.G(562273, J$.G(562265, J$.R(562249, 'op', op, false, false), J$.R(562257, 'key', key, false, false)), 'arrayFilters'));
                                                        return J$.Rt(562345, J$.M(562337, J$.G(562305, J$.G(562297, J$.R(562289, 'this', this, false, false), 's'), 'options'), 'addToOperationsList', false)(J$.R(562313, 'this', this, false, false), J$.R(562321, 'UPDATE', UPDATE, false, true), J$.R(562329, 'operation', operation, false, false)));
                                                    }
                                                    if (J$.C(31704, J$.C(31688, J$.C(31672, J$.C(31656, J$.G(562361, J$.R(562353, 'op', op, false, false), 'removeOne')) ? J$._() : J$.G(562377, J$.R(562369, 'op', op, false, false), 'removeMany')) ? J$._() : J$.C(31664, J$.G(562393, J$.R(562385, 'op', op, false, false), 'deleteOne')) ? J$.G(562417, J$.G(562409, J$.R(562401, 'op', op, false, false), 'deleteOne'), 'q') : J$._()) ? J$._() : J$.C(31680, J$.G(562433, J$.R(562425, 'op', op, false, false), 'deleteMany')) ? J$.G(562457, J$.G(562449, J$.R(562441, 'op', op, false, false), 'deleteMany'), 'q') : J$._())) {
                                                        J$.P(562521, J$.G(562481, J$.R(562465, 'op', op, false, false), J$.R(562473, 'key', key, false, false)), 'limit', J$.C(31696, J$.G(562497, J$.R(562489, 'op', op, false, false), 'removeOne')) ? J$.T(562505, 1, 22, false) : J$.T(562513, 0, 22, false));
                                                        return J$.Rt(562601, J$.M(562593, J$.G(562545, J$.G(562537, J$.R(562529, 'this', this, false, false), 's'), 'options'), 'addToOperationsList', false)(J$.R(562553, 'this', this, false, false), J$.R(562561, 'REMOVE', REMOVE, false, true), J$.G(562585, J$.R(562569, 'op', op, false, false), J$.R(562577, 'key', key, false, false))));
                                                    }
                                                    if (J$.C(31744, J$.C(31712, J$.G(562617, J$.R(562609, 'op', op, false, false), 'deleteOne')) ? J$._() : J$.G(562633, J$.R(562625, 'op', op, false, false), 'deleteMany'))) {
                                                        var limit = J$.W(562673, 'limit', J$.C(31720, J$.G(562649, J$.R(562641, 'op', op, false, false), 'deleteOne')) ? J$.T(562657, 1, 22, false) : J$.T(562665, 0, 22, false), limit, false, false);
                                                        var _operation = J$.W(562729, '_operation', J$.T(562721, {
                                                            q: J$.G(562705, J$.G(562697, J$.R(562681, 'op', op, false, false), J$.R(562689, 'key', key, false, false)), 'filter'),
                                                            limit: J$.R(562713, 'limit', limit, false, false)
                                                        }, 11, false), _operation, false, false);
                                                        if (J$.C(31736, J$.G(562745, J$.R(562737, 'this', this, false, false), 'isOrdered'))) {
                                                            if (J$.C(31728, J$.G(562761, J$.R(562753, 'op', op, false, false), 'collation')))
                                                                J$.P(562793, J$.R(562769, '_operation', _operation, false, false), 'collation', J$.G(562785, J$.R(562777, 'op', op, false, false), 'collation'));
                                                        }
                                                        return J$.Rt(562857, J$.M(562849, J$.G(562817, J$.G(562809, J$.R(562801, 'this', this, false, false), 's'), 'options'), 'addToOperationsList', false)(J$.R(562825, 'this', this, false, false), J$.R(562833, 'REMOVE', REMOVE, false, true), J$.R(562841, '_operation', _operation, false, false)));
                                                    }
                                                    if (J$.C(31808, J$.C(31752, J$.G(562873, J$.R(562865, 'op', op, false, false), 'insertOne')) ? J$.B(75162, '==', J$.G(562897, J$.G(562889, J$.R(562881, 'op', op, false, false), 'insertOne'), 'document'), J$.T(562905, null, 25, false)) : J$._())) {
                                                        if (J$.C(31768, J$.C(31760, J$.B(75170, '!==', J$.R(562913, 'forceServerObjectId', forceServerObjectId, false, false), J$.T(562921, true, 23, false))) ? J$.B(75178, '==', J$.G(562945, J$.G(562937, J$.R(562929, 'op', op, false, false), 'insertOne'), '_id'), J$.T(562953, null, 25, false)) : J$._()))
                                                            J$.P(562993, J$.G(562969, J$.R(562961, 'op', op, false, false), 'insertOne'), '_id', J$.F(562985, J$.R(562977, 'ObjectID', ObjectID, false, true), true)());
                                                        return J$.Rt(563065, J$.M(563057, J$.G(563017, J$.G(563009, J$.R(563001, 'this', this, false, false), 's'), 'options'), 'addToOperationsList', false)(J$.R(563025, 'this', this, false, false), J$.R(563033, 'INSERT', INSERT, false, true), J$.G(563049, J$.R(563041, 'op', op, false, false), 'insertOne')));
                                                    } else if (J$.C(31800, J$.C(31776, J$.G(563081, J$.R(563073, 'op', op, false, false), 'insertOne')) ? J$.G(563105, J$.G(563097, J$.R(563089, 'op', op, false, false), 'insertOne'), 'document') : J$._())) {
                                                        if (J$.C(31792, J$.C(31784, J$.B(75186, '!==', J$.R(563113, 'forceServerObjectId', forceServerObjectId, false, false), J$.T(563121, true, 23, false))) ? J$.B(75194, '==', J$.G(563153, J$.G(563145, J$.G(563137, J$.R(563129, 'op', op, false, false), 'insertOne'), 'document'), '_id'), J$.T(563161, null, 25, false)) : J$._()))
                                                            J$.P(563209, J$.G(563185, J$.G(563177, J$.R(563169, 'op', op, false, false), 'insertOne'), 'document'), '_id', J$.F(563201, J$.R(563193, 'ObjectID', ObjectID, false, true), true)());
                                                        return J$.Rt(563289, J$.M(563281, J$.G(563233, J$.G(563225, J$.R(563217, 'this', this, false, false), 's'), 'options'), 'addToOperationsList', false)(J$.R(563241, 'this', this, false, false), J$.R(563249, 'INSERT', INSERT, false, true), J$.G(563273, J$.G(563265, J$.R(563257, 'op', op, false, false), 'insertOne'), 'document')));
                                                    }
                                                    if (J$.C(31840, J$.G(563305, J$.R(563297, 'op', op, false, false), 'insertMany'))) {
                                                        for (var i = J$.W(563321, 'i', J$.T(563313, 0, 22, false), i, false, false); J$.C(31832, J$.B(75202, '<', J$.R(563329, 'i', i, false, false), J$.G(563353, J$.G(563345, J$.R(563337, 'op', op, false, false), 'insertMany'), 'length'))); J$.B(75226, '-', i = J$.W(563369, 'i', J$.B(75218, '+', J$.U(75210, '+', J$.R(563361, 'i', i, false, false)), 1), i, false, false), 1)) {
                                                            if (J$.C(31824, J$.C(31816, J$.B(75234, '!==', J$.R(563377, 'forceServerObjectId', forceServerObjectId, false, false), J$.T(563385, true, 23, false))) ? J$.B(75242, '==', J$.G(563425, J$.G(563417, J$.G(563401, J$.R(563393, 'op', op, false, false), 'insertMany'), J$.R(563409, 'i', i, false, false)), '_id'), J$.T(563433, null, 25, false)) : J$._()))
                                                                J$.P(563489, J$.G(563465, J$.G(563449, J$.R(563441, 'op', op, false, false), 'insertMany'), J$.R(563457, 'i', i, false, false)), '_id', J$.F(563481, J$.R(563473, 'ObjectID', ObjectID, false, true), true)());
                                                            J$.M(563569, J$.G(563513, J$.G(563505, J$.R(563497, 'this', this, false, false), 's'), 'options'), 'addToOperationsList', false)(J$.R(563521, 'this', this, false, false), J$.R(563529, 'INSERT', INSERT, false, true), J$.G(563561, J$.G(563545, J$.R(563537, 'op', op, false, false), 'insertMany'), J$.R(563553, 'i', i, false, false)));
                                                        }
                                                        return J$.Rt(563577, undefined);
                                                    }
                                                    throw J$.F(563601, J$.R(563585, 'toError', toError, false, true), false)(J$.T(563593, 'bulkWrite only supports insertOne, insertMany, updateOne, updateMany, removeOne, removeMany, deleteOne, deleteMany', 21, false));
                                                } catch (J$e) {
                                                    J$.Ex(568937, J$e);
                                                } finally {
                                                    if (J$.Fr(568945))
                                                        continue jalangiLabel71;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false)
                                }, 11, false),
                                J$.T(563857, {
                                    key: J$.T(563705, '_handleEarlyError', 21, false),
                                    value: J$.T(563849, function _handleEarlyError(err, callback) {
                                        jalangiLabel72:
                                            while (true) {
                                                try {
                                                    J$.Fe(563817, arguments.callee, this, arguments);
                                                    arguments = J$.N(563825, 'arguments', arguments, true, false, false);
                                                    err = J$.N(563833, 'err', err, true, false, false);
                                                    callback = J$.N(563841, 'callback', callback, true, false, false);
                                                    if (J$.C(31848, J$.B(75258, '===', J$.U(75250, 'typeof', J$.R(563713, 'callback', callback, false, false)), J$.T(563721, 'function', 21, false)))) {
                                                        J$.F(563753, J$.R(563729, 'callback', callback, false, false), false)(J$.R(563737, 'err', err, false, false), J$.T(563745, null, 25, false));
                                                        return J$.Rt(563761, undefined);
                                                    }
                                                    return J$.Rt(563809, J$.M(563801, J$.G(563785, J$.G(563777, J$.R(563769, 'this', this, false, false), 's'), 'promiseLibrary'), 'reject', false)(J$.R(563793, 'err', err, false, false)));
                                                } catch (J$e) {
                                                    J$.Ex(568953, J$e);
                                                } finally {
                                                    if (J$.Fr(568961))
                                                        continue jalangiLabel72;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false)
                                }, 11, false),
                                J$.T(564689, {
                                    key: J$.T(563865, 'bulkExecute', 21, false),
                                    value: J$.T(564681, function bulkExecute(_writeConcern, options, callback) {
                                        jalangiLabel73:
                                            while (true) {
                                                try {
                                                    J$.Fe(564625, arguments.callee, this, arguments);
                                                    arguments = J$.N(564633, 'arguments', arguments, true, false, false);
                                                    _writeConcern = J$.N(564641, '_writeConcern', _writeConcern, true, false, false);
                                                    options = J$.N(564649, 'options', options, true, false, false);
                                                    callback = J$.N(564657, 'callback', callback, true, false, false);
                                                    J$.N(564665, 'executedError', executedError, false, false, false);
                                                    J$.N(564673, 'emptyBatchError', emptyBatchError, false, false, false);
                                                    if (J$.C(31856, J$.B(75274, '===', J$.U(75266, 'typeof', J$.R(563873, 'options', options, false, false)), J$.T(563881, 'function', 21, false))))
                                                        callback = J$.W(563897, 'callback', J$.R(563889, 'options', options, false, false), callback, false, false), options = J$.W(563913, 'options', J$.T(563905, {}, 11, false), options, false, false);
                                                    options = J$.W(563937, 'options', J$.C(31864, J$.R(563921, 'options', options, false, false)) ? J$._() : J$.T(563929, {}, 11, false), options, false, false);
                                                    if (J$.C(31888, J$.B(75290, '===', J$.U(75282, 'typeof', J$.R(563945, '_writeConcern', _writeConcern, false, false)), J$.T(563953, 'function', 21, false)))) {
                                                        callback = J$.W(563969, 'callback', J$.R(563961, '_writeConcern', _writeConcern, false, false), callback, false, false);
                                                    } else if (J$.C(31880, J$.C(31872, J$.R(563977, '_writeConcern', _writeConcern, false, false)) ? J$.B(75298, '===', J$.F(564001, J$.R(563985, '_typeof', _typeof, false, true), false)(J$.R(563993, '_writeConcern', _writeConcern, false, false)), J$.T(564009, 'object', 21, false)) : J$._())) {
                                                        J$.P(564041, J$.G(564025, J$.R(564017, 'this', this, false, false), 's'), 'writeConcern', J$.R(564033, '_writeConcern', _writeConcern, false, false));
                                                    }
                                                    if (J$.C(31896, J$.G(564065, J$.G(564057, J$.R(564049, 'this', this, false, false), 's'), 'executed'))) {
                                                        var executedError = J$.W(564097, 'executedError', J$.F(564089, J$.R(564073, 'toError', toError, false, true), false)(J$.T(564081, 'batch cannot be re-executed', 21, false)), executedError, false, false);
                                                        return J$.Rt(564137, J$.M(564129, J$.R(564105, 'this', this, false, false), '_handleEarlyError', false)(J$.R(564113, 'executedError', executedError, false, false), J$.R(564121, 'callback', callback, false, false)));
                                                    }
                                                    if (J$.C(31936, J$.G(564153, J$.R(564145, 'this', this, false, false), 'isOrdered'))) {
                                                        if (J$.C(31904, J$.G(564177, J$.G(564169, J$.R(564161, 'this', this, false, false), 's'), 'currentBatch')))
                                                            J$.M(564233, J$.G(564201, J$.G(564193, J$.R(564185, 'this', this, false, false), 's'), 'batches'), 'push', false)(J$.G(564225, J$.G(564217, J$.R(564209, 'this', this, false, false), 's'), 'currentBatch'));
                                                    } else {
                                                        if (J$.C(31912, J$.G(564257, J$.G(564249, J$.R(564241, 'this', this, false, false), 's'), 'currentInsertBatch')))
                                                            J$.M(564313, J$.G(564281, J$.G(564273, J$.R(564265, 'this', this, false, false), 's'), 'batches'), 'push', false)(J$.G(564305, J$.G(564297, J$.R(564289, 'this', this, false, false), 's'), 'currentInsertBatch'));
                                                        if (J$.C(31920, J$.G(564337, J$.G(564329, J$.R(564321, 'this', this, false, false), 's'), 'currentUpdateBatch')))
                                                            J$.M(564393, J$.G(564361, J$.G(564353, J$.R(564345, 'this', this, false, false), 's'), 'batches'), 'push', false)(J$.G(564385, J$.G(564377, J$.R(564369, 'this', this, false, false), 's'), 'currentUpdateBatch'));
                                                        if (J$.C(31928, J$.G(564417, J$.G(564409, J$.R(564401, 'this', this, false, false), 's'), 'currentRemoveBatch')))
                                                            J$.M(564473, J$.G(564441, J$.G(564433, J$.R(564425, 'this', this, false, false), 's'), 'batches'), 'push', false)(J$.G(564465, J$.G(564457, J$.R(564449, 'this', this, false, false), 's'), 'currentRemoveBatch'));
                                                    }
                                                    if (J$.C(31944, J$.B(75306, '===', J$.G(564505, J$.G(564497, J$.G(564489, J$.R(564481, 'this', this, false, false), 's'), 'batches'), 'length'), J$.T(564513, 0, 22, false)))) {
                                                        var emptyBatchError = J$.W(564545, 'emptyBatchError', J$.F(564537, J$.R(564521, 'toError', toError, false, true), false)(J$.T(564529, 'Invalid Operation, no operations specified', 21, false)), emptyBatchError, false, false);
                                                        return J$.Rt(564585, J$.M(564577, J$.R(564553, 'this', this, false, false), '_handleEarlyError', false)(J$.R(564561, 'emptyBatchError', emptyBatchError, false, false), J$.R(564569, 'callback', callback, false, false)));
                                                    }
                                                    return J$.Rt(564617, J$.T(564609, {
                                                        options: J$.R(564593, 'options', options, false, false),
                                                        callback: J$.R(564601, 'callback', callback, false, false)
                                                    }, 11, false));
                                                } catch (J$e) {
                                                    J$.Ex(568969, J$e);
                                                } finally {
                                                    if (J$.Fr(568977))
                                                        continue jalangiLabel73;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false)
                                }, 11, false),
                                J$.T(564993, {
                                    key: J$.T(564697, 'execute', 21, false),
                                    value: J$.T(564985, function execute(_writeConcern, options, callback) {
                                        jalangiLabel74:
                                            while (true) {
                                                try {
                                                    J$.Fe(564937, arguments.callee, this, arguments);
                                                    arguments = J$.N(564945, 'arguments', arguments, true, false, false);
                                                    _writeConcern = J$.N(564953, '_writeConcern', _writeConcern, true, false, false);
                                                    options = J$.N(564961, 'options', options, true, false, false);
                                                    callback = J$.N(564969, 'callback', callback, true, false, false);
                                                    J$.N(564977, 'ret', ret, false, false, false);
                                                    var ret = J$.W(564745, 'ret', J$.M(564737, J$.R(564705, 'this', this, false, false), 'bulkExecute', false)(J$.R(564713, '_writeConcern', _writeConcern, false, false), J$.R(564721, 'options', options, false, false), J$.R(564729, 'callback', callback, false, false)), ret, false, false);
                                                    if (J$.C(31960, J$.C(31952, J$.U(75314, '!', J$.R(564753, 'ret', ret, false, false))) ? J$._() : J$.F(564777, J$.R(564761, 'isPromiseLike', isPromiseLike, false, true), false)(J$.R(564769, 'ret', ret, false, false)))) {
                                                        return J$.Rt(564793, J$.R(564785, 'ret', ret, false, false));
                                                    }
                                                    options = J$.W(564817, 'options', J$.G(564809, J$.R(564801, 'ret', ret, false, false), 'options'), options, false, false);
                                                    callback = J$.W(564841, 'callback', J$.G(564833, J$.R(564825, 'ret', ret, false, false), 'callback'), callback, false, false);
                                                    return J$.Rt(564929, J$.F(564921, J$.R(564849, 'executeLegacyOperation', executeLegacyOperation, false, true), false)(J$.G(564873, J$.G(564865, J$.R(564857, 'this', this, false, false), 's'), 'topology'), J$.R(564881, 'executeCommands', executeCommands, false, true), J$.T(564913, [
                                                        J$.R(564889, 'this', this, false, false),
                                                        J$.R(564897, 'options', options, false, false),
                                                        J$.R(564905, 'callback', callback, false, false)
                                                    ], 10, false)));
                                                } catch (J$e) {
                                                    J$.Ex(568985, J$e);
                                                } finally {
                                                    if (J$.Fr(568993))
                                                        continue jalangiLabel74;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false)
                                }, 11, false),
                                J$.T(566377, {
                                    key: J$.T(565001, 'finalOptionsHandler', 21, false),
                                    value: J$.T(566369, function finalOptionsHandler(config, callback) {
                                        jalangiLabel77:
                                            while (true) {
                                                try {
                                                    J$.Fe(566329, arguments.callee, this, arguments);
                                                    arguments = J$.N(566337, 'arguments', arguments, true, false, false);
                                                    config = J$.N(566345, 'config', config, true, false, false);
                                                    callback = J$.N(566353, 'callback', callback, true, false, false);
                                                    J$.N(566361, 'finalOptions', finalOptions, false, false, false);
                                                    var finalOptions = J$.W(565065, 'finalOptions', J$.M(565057, J$.I(typeof Object === 'undefined' ? Object = J$.R(565009, 'Object', undefined, true, true) : Object = J$.R(565009, 'Object', Object, true, true)), 'assign', false)(J$.T(565033, { ordered: J$.G(565025, J$.R(565017, 'this', this, false, false), 'isOrdered') }, 11, false), J$.G(565049, J$.R(565041, 'config', config, false, false), 'options')), finalOptions, false, false);
                                                    if (J$.C(31968, J$.B(75322, '!=', J$.G(565089, J$.G(565081, J$.R(565073, 'this', this, false, false), 's'), 'writeConcern'), J$.T(565097, null, 25, false)))) {
                                                        J$.P(565137, J$.R(565105, 'finalOptions', finalOptions, false, false), 'writeConcern', J$.G(565129, J$.G(565121, J$.R(565113, 'this', this, false, false), 's'), 'writeConcern'));
                                                    }
                                                    if (J$.C(31976, J$.B(75330, '!==', J$.G(565153, J$.R(565145, 'finalOptions', finalOptions, false, false), 'bypassDocumentValidation'), J$.T(565161, true, 23, false)))) {
                                                        J$.B(75338, 'delete', J$.R(565169, 'finalOptions', finalOptions, false, false), 'bypassDocumentValidation');
                                                    }
                                                    if (J$.C(31984, J$.G(565185, J$.R(565177, 'this', this, false, false), 'operationId'))) {
                                                        J$.P(565225, J$.G(565201, J$.R(565193, 'config', config, false, false), 'resultHandler'), 'operationId', J$.G(565217, J$.R(565209, 'this', this, false, false), 'operationId'));
                                                    }
                                                    if (J$.C(31992, J$.G(565257, J$.G(565249, J$.G(565241, J$.R(565233, 'this', this, false, false), 's'), 'options'), 'serializeFunctions'))) {
                                                        J$.P(565281, J$.R(565265, 'finalOptions', finalOptions, false, false), 'serializeFunctions', J$.T(565273, true, 23, false));
                                                    }
                                                    if (J$.C(32000, J$.G(565313, J$.G(565305, J$.G(565297, J$.R(565289, 'this', this, false, false), 's'), 'options'), 'ignoreUndefined'))) {
                                                        J$.P(565337, J$.R(565321, 'finalOptions', finalOptions, false, false), 'ignoreUndefined', J$.T(565329, true, 23, false));
                                                    }
                                                    if (J$.C(32008, J$.B(75346, '===', J$.G(565361, J$.G(565353, J$.R(565345, 'this', this, false, false), 's'), 'bypassDocumentValidation'), J$.T(565369, true, 23, false)))) {
                                                        J$.P(565393, J$.R(565377, 'finalOptions', finalOptions, false, false), 'bypassDocumentValidation', J$.T(565385, true, 23, false));
                                                    }
                                                    if (J$.C(32016, J$.B(75354, '===', J$.G(565417, J$.G(565409, J$.R(565401, 'this', this, false, false), 's'), 'checkKeys'), J$.T(565425, false, 23, false)))) {
                                                        J$.P(565449, J$.R(565433, 'finalOptions', finalOptions, false, false), 'checkKeys', J$.T(565441, false, 23, false));
                                                    }
                                                    if (J$.C(32056, J$.G(565465, J$.R(565457, 'finalOptions', finalOptions, false, false), 'retryWrites'))) {
                                                        if (J$.C(32032, J$.B(75362, '===', J$.G(565489, J$.G(565481, J$.R(565473, 'config', config, false, false), 'batch'), 'batchType'), J$.R(565497, 'UPDATE', UPDATE, false, true)))) {
                                                            J$.P(565617, J$.R(565505, 'finalOptions', finalOptions, false, false), 'retryWrites', J$.C(32024, J$.G(565521, J$.R(565513, 'finalOptions', finalOptions, false, false), 'retryWrites')) ? J$.U(75370, '!', J$.M(565609, J$.G(565545, J$.G(565537, J$.R(565529, 'config', config, false, false), 'batch'), 'operations'), 'some', false)(J$.T(565601, function (op) {
                                                                jalangiLabel75:
                                                                    while (true) {
                                                                        try {
                                                                            J$.Fe(565577, arguments.callee, this, arguments);
                                                                            arguments = J$.N(565585, 'arguments', arguments, true, false, false);
                                                                            op = J$.N(565593, 'op', op, true, false, false);
                                                                            return J$.Rt(565569, J$.G(565561, J$.R(565553, 'op', op, false, false), 'multi'));
                                                                        } catch (J$e) {
                                                                            J$.Ex(569001, J$e);
                                                                        } finally {
                                                                            if (J$.Fr(569009))
                                                                                continue jalangiLabel75;
                                                                            else
                                                                                return J$.Ra();
                                                                        }
                                                                    }
                                                            }, 12, false))) : J$._());
                                                        }
                                                        if (J$.C(32048, J$.B(75378, '===', J$.G(565641, J$.G(565633, J$.R(565625, 'config', config, false, false), 'batch'), 'batchType'), J$.R(565649, 'REMOVE', REMOVE, false, true)))) {
                                                            J$.P(565777, J$.R(565657, 'finalOptions', finalOptions, false, false), 'retryWrites', J$.C(32040, J$.G(565673, J$.R(565665, 'finalOptions', finalOptions, false, false), 'retryWrites')) ? J$.U(75394, '!', J$.M(565769, J$.G(565697, J$.G(565689, J$.R(565681, 'config', config, false, false), 'batch'), 'operations'), 'some', false)(J$.T(565761, function (op) {
                                                                jalangiLabel76:
                                                                    while (true) {
                                                                        try {
                                                                            J$.Fe(565737, arguments.callee, this, arguments);
                                                                            arguments = J$.N(565745, 'arguments', arguments, true, false, false);
                                                                            op = J$.N(565753, 'op', op, true, false, false);
                                                                            return J$.Rt(565729, J$.B(75386, '===', J$.G(565713, J$.R(565705, 'op', op, false, false), 'limit'), J$.T(565721, 0, 22, false)));
                                                                        } catch (J$e) {
                                                                            J$.Ex(569017, J$e);
                                                                        } finally {
                                                                            if (J$.Fr(569025))
                                                                                continue jalangiLabel76;
                                                                            else
                                                                                return J$.Ra();
                                                                        }
                                                                    }
                                                            }, 12, false))) : J$._());
                                                        }
                                                    }
                                                    try {
                                                        if (J$.C(32080, J$.B(75402, '===', J$.G(565801, J$.G(565793, J$.R(565785, 'config', config, false, false), 'batch'), 'batchType'), J$.R(565809, 'INSERT', INSERT, false, true)))) {
                                                            J$.M(565913, J$.G(565833, J$.G(565825, J$.R(565817, 'this', this, false, false), 's'), 'topology'), 'insert', false)(J$.G(565857, J$.G(565849, J$.R(565841, 'this', this, false, false), 's'), 'namespace'), J$.G(565881, J$.G(565873, J$.R(565865, 'config', config, false, false), 'batch'), 'operations'), J$.R(565889, 'finalOptions', finalOptions, false, false), J$.G(565905, J$.R(565897, 'config', config, false, false), 'resultHandler'));
                                                        } else if (J$.C(32072, J$.B(75410, '===', J$.G(565937, J$.G(565929, J$.R(565921, 'config', config, false, false), 'batch'), 'batchType'), J$.R(565945, 'UPDATE', UPDATE, false, true)))) {
                                                            J$.M(566049, J$.G(565969, J$.G(565961, J$.R(565953, 'this', this, false, false), 's'), 'topology'), 'update', false)(J$.G(565993, J$.G(565985, J$.R(565977, 'this', this, false, false), 's'), 'namespace'), J$.G(566017, J$.G(566009, J$.R(566001, 'config', config, false, false), 'batch'), 'operations'), J$.R(566025, 'finalOptions', finalOptions, false, false), J$.G(566041, J$.R(566033, 'config', config, false, false), 'resultHandler'));
                                                        } else if (J$.C(32064, J$.B(75418, '===', J$.G(566073, J$.G(566065, J$.R(566057, 'config', config, false, false), 'batch'), 'batchType'), J$.R(566081, 'REMOVE', REMOVE, false, true)))) {
                                                            J$.M(566185, J$.G(566105, J$.G(566097, J$.R(566089, 'this', this, false, false), 's'), 'topology'), 'remove', false)(J$.G(566129, J$.G(566121, J$.R(566113, 'this', this, false, false), 's'), 'namespace'), J$.G(566153, J$.G(566145, J$.R(566137, 'config', config, false, false), 'batch'), 'operations'), J$.R(566161, 'finalOptions', finalOptions, false, false), J$.G(566177, J$.R(566169, 'config', config, false, false), 'resultHandler'));
                                                        }
                                                    } catch (err) {
                                                        J$.N(566321, 'err', err, false, false, true);
                                                        J$.P(566209, J$.R(566193, 'err', err, false, false), 'ok', J$.T(566201, 0, 22, false));
                                                        J$.F(566313, J$.R(566217, 'handleCallback', handleCallback, false, true), false)(J$.R(566225, 'callback', callback, false, false), J$.T(566233, null, 25, false), J$.F(566305, J$.R(566241, 'mergeBatchResults', mergeBatchResults, false, true), false)(J$.G(566257, J$.R(566249, 'config', config, false, false), 'batch'), J$.G(566281, J$.G(566273, J$.R(566265, 'this', this, false, false), 's'), 'bulkResult'), J$.R(566289, 'err', err, false, false), J$.T(566297, null, 25, false)));
                                                    }
                                                } catch (J$e) {
                                                    J$.Ex(569033, J$e);
                                                } finally {
                                                    if (J$.Fr(569041))
                                                        continue jalangiLabel77;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false)
                                }, 11, false),
                                J$.T(567113, {
                                    key: J$.T(566385, 'handleWriteError', 21, false),
                                    value: J$.T(567105, function handleWriteError(callback, writeResult) {
                                        jalangiLabel78:
                                            while (true) {
                                                try {
                                                    J$.Fe(567065, arguments.callee, this, arguments);
                                                    arguments = J$.N(567073, 'arguments', arguments, true, false, false);
                                                    callback = J$.N(567081, 'callback', callback, true, false, false);
                                                    writeResult = J$.N(567089, 'writeResult', writeResult, true, false, false);
                                                    J$.N(567097, 'msg', msg, false, false, false);
                                                    if (J$.C(32112, J$.B(75426, '>', J$.G(566425, J$.G(566417, J$.G(566409, J$.G(566401, J$.R(566393, 'this', this, false, false), 's'), 'bulkResult'), 'writeErrors'), 'length'), J$.T(566433, 0, 22, false)))) {
                                                        if (J$.C(32088, J$.B(75434, '===', J$.G(566473, J$.G(566465, J$.G(566457, J$.G(566449, J$.R(566441, 'this', this, false, false), 's'), 'bulkResult'), 'writeErrors'), 'length'), J$.T(566481, 1, 22, false)))) {
                                                            J$.F(566601, J$.R(566489, 'handleCallback', handleCallback, false, true), false)(J$.R(566497, 'callback', callback, false, false), J$.F(566585, J$.R(566505, 'BulkWriteError', BulkWriteError, false, true), true)(J$.F(566569, J$.R(566513, 'toError', toError, false, true), false)(J$.G(566561, J$.G(566545, J$.G(566537, J$.G(566529, J$.R(566521, 'this', this, false, false), 's'), 'bulkResult'), 'writeErrors'), J$.T(566553, 0, 22, false))), J$.R(566577, 'writeResult', writeResult, false, false)), J$.T(566593, null, 25, false));
                                                            return J$.Rt(566617, J$.T(566609, true, 23, false));
                                                        }
                                                        var msg = J$.W(566745, 'msg', J$.C(32096, J$.G(566673, J$.G(566665, J$.G(566649, J$.G(566641, J$.G(566633, J$.R(566625, 'this', this, false, false), 's'), 'bulkResult'), 'writeErrors'), J$.T(566657, 0, 22, false)), 'errmsg')) ? J$.G(566729, J$.G(566721, J$.G(566705, J$.G(566697, J$.G(566689, J$.R(566681, 'this', this, false, false), 's'), 'bulkResult'), 'writeErrors'), J$.T(566713, 0, 22, false)), 'errmsg') : J$.T(566737, 'write operation failed', 21, false), msg, false, false);
                                                        J$.F(566921, J$.R(566753, 'handleCallback', handleCallback, false, true), false)(J$.R(566761, 'callback', callback, false, false), J$.F(566905, J$.R(566769, 'BulkWriteError', BulkWriteError, false, true), true)(J$.F(566889, J$.R(566777, 'toError', toError, false, true), false)(J$.T(566881, {
                                                            message: J$.R(566785, 'msg', msg, false, false),
                                                            code: J$.G(566841, J$.G(566833, J$.G(566817, J$.G(566809, J$.G(566801, J$.R(566793, 'this', this, false, false), 's'), 'bulkResult'), 'writeErrors'), J$.T(566825, 0, 22, false)), 'code'),
                                                            writeErrors: J$.G(566873, J$.G(566865, J$.G(566857, J$.R(566849, 'this', this, false, false), 's'), 'bulkResult'), 'writeErrors')
                                                        }, 11, false)), J$.R(566897, 'writeResult', writeResult, false, false)), J$.T(566913, null, 25, false));
                                                        return J$.Rt(566937, J$.T(566929, true, 23, false));
                                                    } else if (J$.C(32104, J$.M(566953, J$.R(566945, 'writeResult', writeResult, false, false), 'getWriteConcernError', false)())) {
                                                        J$.F(567041, J$.R(566961, 'handleCallback', handleCallback, false, true), false)(J$.R(566969, 'callback', callback, false, false), J$.F(567025, J$.R(566977, 'BulkWriteError', BulkWriteError, false, true), true)(J$.F(567009, J$.R(566985, 'toError', toError, false, true), false)(J$.M(567001, J$.R(566993, 'writeResult', writeResult, false, false), 'getWriteConcernError', false)()), J$.R(567017, 'writeResult', writeResult, false, false)), J$.T(567033, null, 25, false));
                                                        return J$.Rt(567057, J$.T(567049, true, 23, false));
                                                    }
                                                } catch (J$e) {
                                                    J$.Ex(569049, J$e);
                                                } finally {
                                                    if (J$.Fr(569057))
                                                        continue jalangiLabel78;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false)
                                }, 11, false)
                            ], 10, false));
                            return J$.Rt(567145, J$.R(567137, 'BulkOperationBase', BulkOperationBase, false, false));
                        } catch (J$e) {
                            J$.Ex(569065, J$e);
                        } finally {
                            if (J$.Fr(569073))
                                continue jalangiLabel79;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false), false)(), BulkOperationBase, false, true);
            J$.M(567313, J$.I(typeof Object === 'undefined' ? Object = J$.R(567209, 'Object', undefined, true, true) : Object = J$.R(567209, 'Object', Object, true, true)), 'defineProperty', false)(J$.G(567225, J$.R(567217, 'BulkOperationBase', BulkOperationBase, false, true), 'prototype'), J$.T(567233, 'length', 21, false), J$.T(567305, {
                enumerable: J$.T(567241, true, 23, false),
                get: J$.T(567297, function get() {
                    jalangiLabel80:
                        while (true) {
                            try {
                                J$.Fe(567281, arguments.callee, this, arguments);
                                arguments = J$.N(567289, 'arguments', arguments, true, false, false);
                                return J$.Rt(567273, J$.G(567265, J$.G(567257, J$.R(567249, 'this', this, false, false), 's'), 'currentIndex'));
                            } catch (J$e) {
                                J$.Ex(569081, J$e);
                            } finally {
                                if (J$.Fr(569089))
                                    continue jalangiLabel80;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false)
            }, 11, false));
            J$.P(567393, J$.I(typeof module === 'undefined' ? module = J$.R(567321, 'module', undefined, true, true) : module = J$.R(567321, 'module', module, true, true)), 'exports', J$.T(567385, {
                Batch: J$.R(567329, 'Batch', Batch, false, true),
                BulkOperationBase: J$.R(567337, 'BulkOperationBase', BulkOperationBase, false, true),
                bson: J$.R(567345, 'bson', bson, false, true),
                INSERT: J$.R(567353, 'INSERT', INSERT, false, true),
                UPDATE: J$.R(567361, 'UPDATE', UPDATE, false, true),
                REMOVE: J$.R(567369, 'REMOVE', REMOVE, false, true),
                BulkWriteError: J$.R(567377, 'BulkWriteError', BulkWriteError, false, true)
            }, 11, false));
        } catch (J$e) {
            J$.Ex(569097, J$e);
        } finally {
            if (J$.Sr(569105))
                continue jalangiLabel81;
            else
                break jalangiLabel81;
        }
    }
// JALANGI DO NOT INSTRUMENT

