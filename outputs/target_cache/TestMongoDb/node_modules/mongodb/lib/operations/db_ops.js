J$.noInstrEval = false;
jalangiLabel50:
    while (true) {
        try {
            J$.Se(1169177, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestMongoDb/node_modules/mongodb/lib/operations/db_ops.js');
            function _typeof2(obj) {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(1154081, arguments.callee, this, arguments);
                            arguments = J$.N(1154089, 'arguments', arguments, true, false, false);
                            obj = J$.N(1154097, 'obj', obj, true, false, false);
                            if (J$.C(71112, J$.C(71072, J$.B(113730, '===', J$.U(113722, 'typeof', J$.I(typeof Symbol === 'undefined' ? Symbol = J$.R(1153817, 'Symbol', undefined, true, true) : Symbol = J$.R(1153817, 'Symbol', Symbol, true, true))), J$.T(1153825, 'function', 21, false))) ? J$.B(113746, '===', J$.U(113738, 'typeof', J$.G(1153841, J$.I(typeof Symbol === 'undefined' ? Symbol = J$.R(1153833, 'Symbol', undefined, true, true) : Symbol = J$.R(1153833, 'Symbol', Symbol, true, true)), 'iterator')), J$.T(1153849, 'symbol', 21, false)) : J$._())) {
                                _typeof2 = J$.W(1153905, '_typeof2', J$.T(1153897, function _typeof2(obj) {
                                    jalangiLabel0:
                                        while (true) {
                                            try {
                                                J$.Fe(1153873, arguments.callee, this, arguments);
                                                arguments = J$.N(1153881, 'arguments', arguments, true, false, false);
                                                obj = J$.N(1153889, 'obj', obj, true, false, false);
                                                return J$.Rt(1153865, J$.U(113754, 'typeof', J$.R(1153857, 'obj', obj, false, false)));
                                            } catch (J$e) {
                                                J$.Ex(1169689, J$e);
                                            } finally {
                                                if (J$.Fr(1169697))
                                                    continue jalangiLabel0;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false), _typeof2, false, true);
                            } else {
                                _typeof2 = J$.W(1154041, '_typeof2', J$.T(1154033, function _typeof2(obj) {
                                    jalangiLabel1:
                                        while (true) {
                                            try {
                                                J$.Fe(1154009, arguments.callee, this, arguments);
                                                arguments = J$.N(1154017, 'arguments', arguments, true, false, false);
                                                obj = J$.N(1154025, 'obj', obj, true, false, false);
                                                return J$.Rt(1154001, J$.C(71104, J$.C(71096, J$.C(71088, J$.C(71080, J$.R(1153913, 'obj', obj, false, false)) ? J$.B(113770, '===', J$.U(113762, 'typeof', J$.I(typeof Symbol === 'undefined' ? Symbol = J$.R(1153921, 'Symbol', undefined, true, true) : Symbol = J$.R(1153921, 'Symbol', Symbol, true, true))), J$.T(1153929, 'function', 21, false)) : J$._()) ? J$.B(113778, '===', J$.G(1153945, J$.R(1153937, 'obj', obj, false, false), 'constructor'), J$.I(typeof Symbol === 'undefined' ? Symbol = J$.R(1153953, 'Symbol', undefined, true, true) : Symbol = J$.R(1153953, 'Symbol', Symbol, true, true))) : J$._()) ? J$.B(113786, '!==', J$.R(1153961, 'obj', obj, false, false), J$.G(1153977, J$.I(typeof Symbol === 'undefined' ? Symbol = J$.R(1153969, 'Symbol', undefined, true, true) : Symbol = J$.R(1153969, 'Symbol', Symbol, true, true)), 'prototype')) : J$._()) ? J$.T(1153985, 'symbol', 21, false) : J$.U(113794, 'typeof', J$.R(1153993, 'obj', obj, false, false)));
                                            } catch (J$e) {
                                                J$.Ex(1169705, J$e);
                                            } finally {
                                                if (J$.Fr(1169713))
                                                    continue jalangiLabel1;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false), _typeof2, false, true);
                            }
                            return J$.Rt(1154073, J$.F(1154065, J$.R(1154049, '_typeof2', _typeof2, false, true), false)(J$.R(1154057, 'obj', obj, false, false)));
                        } catch (J$e) {
                            J$.Ex(1169721, J$e);
                        } finally {
                            if (J$.Fr(1169729))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function _typeof(obj) {
                jalangiLabel5:
                    while (true) {
                        try {
                            J$.Fe(1154417, arguments.callee, this, arguments);
                            arguments = J$.N(1154425, 'arguments', arguments, true, false, false);
                            obj = J$.N(1154433, 'obj', obj, true, false, false);
                            if (J$.C(71160, J$.C(71120, J$.B(113810, '===', J$.U(113802, 'typeof', J$.I(typeof Symbol === 'undefined' ? Symbol = J$.R(1154105, 'Symbol', undefined, true, true) : Symbol = J$.R(1154105, 'Symbol', Symbol, true, true))), J$.T(1154113, 'function', 21, false))) ? J$.B(113818, '===', J$.F(1154145, J$.R(1154121, '_typeof2', _typeof2, false, true), false)(J$.G(1154137, J$.I(typeof Symbol === 'undefined' ? Symbol = J$.R(1154129, 'Symbol', undefined, true, true) : Symbol = J$.R(1154129, 'Symbol', Symbol, true, true)), 'iterator')), J$.T(1154153, 'symbol', 21, false)) : J$._())) {
                                _typeof = J$.W(1154225, '_typeof', J$.T(1154217, function _typeof(obj) {
                                    jalangiLabel3:
                                        while (true) {
                                            try {
                                                J$.Fe(1154193, arguments.callee, this, arguments);
                                                arguments = J$.N(1154201, 'arguments', arguments, true, false, false);
                                                obj = J$.N(1154209, 'obj', obj, true, false, false);
                                                return J$.Rt(1154185, J$.F(1154177, J$.R(1154161, '_typeof2', _typeof2, false, true), false)(J$.R(1154169, 'obj', obj, false, false)));
                                            } catch (J$e) {
                                                J$.Ex(1169737, J$e);
                                            } finally {
                                                if (J$.Fr(1169745))
                                                    continue jalangiLabel3;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false), _typeof, false, true);
                            } else {
                                _typeof = J$.W(1154377, '_typeof', J$.T(1154369, function _typeof(obj) {
                                    jalangiLabel4:
                                        while (true) {
                                            try {
                                                J$.Fe(1154345, arguments.callee, this, arguments);
                                                arguments = J$.N(1154353, 'arguments', arguments, true, false, false);
                                                obj = J$.N(1154361, 'obj', obj, true, false, false);
                                                return J$.Rt(1154337, J$.C(71152, J$.C(71144, J$.C(71136, J$.C(71128, J$.R(1154233, 'obj', obj, false, false)) ? J$.B(113834, '===', J$.U(113826, 'typeof', J$.I(typeof Symbol === 'undefined' ? Symbol = J$.R(1154241, 'Symbol', undefined, true, true) : Symbol = J$.R(1154241, 'Symbol', Symbol, true, true))), J$.T(1154249, 'function', 21, false)) : J$._()) ? J$.B(113842, '===', J$.G(1154265, J$.R(1154257, 'obj', obj, false, false), 'constructor'), J$.I(typeof Symbol === 'undefined' ? Symbol = J$.R(1154273, 'Symbol', undefined, true, true) : Symbol = J$.R(1154273, 'Symbol', Symbol, true, true))) : J$._()) ? J$.B(113850, '!==', J$.R(1154281, 'obj', obj, false, false), J$.G(1154297, J$.I(typeof Symbol === 'undefined' ? Symbol = J$.R(1154289, 'Symbol', undefined, true, true) : Symbol = J$.R(1154289, 'Symbol', Symbol, true, true)), 'prototype')) : J$._()) ? J$.T(1154305, 'symbol', 21, false) : J$.F(1154329, J$.R(1154313, '_typeof2', _typeof2, false, true), false)(J$.R(1154321, 'obj', obj, false, false)));
                                            } catch (J$e) {
                                                J$.Ex(1169753, J$e);
                                            } finally {
                                                if (J$.Fr(1169761))
                                                    continue jalangiLabel4;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false), _typeof, false, true);
                            }
                            return J$.Rt(1154409, J$.F(1154401, J$.R(1154385, '_typeof', _typeof, false, true), false)(J$.R(1154393, 'obj', obj, false, false)));
                        } catch (J$e) {
                            J$.Ex(1169769, J$e);
                        } finally {
                            if (J$.Fr(1169777))
                                continue jalangiLabel5;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function loadCollection() {
                jalangiLabel6:
                    while (true) {
                        try {
                            J$.Fe(1155129, arguments.callee, this, arguments);
                            arguments = J$.N(1155137, 'arguments', arguments, true, false, false);
                            if (J$.C(71168, J$.U(113858, '!', J$.R(1155073, 'collection', collection, false, true)))) {
                                collection = J$.W(1155105, 'collection', J$.F(1155097, J$.I(typeof require === 'undefined' ? require = J$.R(1155081, 'require', undefined, true, true) : require = J$.R(1155081, 'require', require, true, true)), false)(J$.T(1155089, '../collection', 21, false)), collection, false, true);
                            }
                            return J$.Rt(1155121, J$.R(1155113, 'collection', collection, false, true));
                        } catch (J$e) {
                            J$.Ex(1169785, J$e);
                        } finally {
                            if (J$.Fr(1169793))
                                continue jalangiLabel6;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function loadDb() {
                jalangiLabel7:
                    while (true) {
                        try {
                            J$.Fe(1155201, arguments.callee, this, arguments);
                            arguments = J$.N(1155209, 'arguments', arguments, true, false, false);
                            if (J$.C(71176, J$.U(113866, '!', J$.R(1155145, 'db', db, false, true)))) {
                                db = J$.W(1155177, 'db', J$.F(1155169, J$.I(typeof require === 'undefined' ? require = J$.R(1155153, 'require', undefined, true, true) : require = J$.R(1155153, 'require', require, true, true)), false)(J$.T(1155161, '../db', 21, false)), db, false, true);
                            }
                            return J$.Rt(1155193, J$.R(1155185, 'db', db, false, true));
                        } catch (J$e) {
                            J$.Ex(1169801, J$e);
                        } finally {
                            if (J$.Fr(1169809))
                                continue jalangiLabel7;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function addUser(db, username, password, options, callback) {
                jalangiLabel12:
                    while (true) {
                        try {
                            J$.Fe(1156793, arguments.callee, this, arguments);
                            arguments = J$.N(1156801, 'arguments', arguments, true, false, false);
                            db = J$.N(1156809, 'db', db, true, false, false);
                            username = J$.N(1156817, 'username', username, true, false, false);
                            password = J$.N(1156825, 'password', password, true, false, false);
                            options = J$.N(1156833, 'options', options, true, false, false);
                            callback = J$.N(1156841, 'callback', callback, true, false, false);
                            J$.N(1156849, 'Db', Db, false, false, false);
                            var Db = J$.W(1155401, 'Db', J$.F(1155393, J$.R(1155385, 'loadDb', loadDb, false, true), false)(), Db, false, false);
                            if (J$.C(71192, J$.C(71184, J$.G(1155417, J$.R(1155409, 'db', db, false, false), 'serverConfig')) ? J$.M(1155441, J$.G(1155433, J$.R(1155425, 'db', db, false, false), 'serverConfig'), 'isDestroyed', false)() : J$._()))
                                return J$.Rt(1155489, J$.F(1155481, J$.R(1155449, 'callback', callback, false, false), false)(J$.F(1155473, J$.R(1155457, 'MongoError', MongoError, false, true), true)(J$.T(1155465, 'topology was destroyed', 21, false))));
                            J$.F(1156785, J$.R(1155497, 'executeAuthCreateUserCommand', executeAuthCreateUserCommand, false, true), false)(J$.R(1155505, 'db', db, false, false), J$.R(1155513, 'username', username, false, false), J$.R(1155521, 'password', password, false, false), J$.R(1155529, 'options', options, false, false), J$.T(1156777, function (err, r) {
                                jalangiLabel11:
                                    while (true) {
                                        try {
                                            J$.Fe(1156705, arguments.callee, this, arguments);
                                            arguments = J$.N(1156713, 'arguments', arguments, true, false, false);
                                            err = J$.N(1156721, 'err', err, true, false, false);
                                            r = J$.N(1156729, 'r', r, true, false, false);
                                            J$.N(1156737, 'finalOptions', finalOptions, false, false, false);
                                            J$.N(1156745, 'md5', md5, false, false, false);
                                            J$.N(1156753, 'userPassword', userPassword, false, false, false);
                                            J$.N(1156761, 'dbToUse', dbToUse, false, false, false);
                                            J$.N(1156769, '_collection', _collection, false, false, false);
                                            if (J$.C(71256, J$.C(71200, J$.R(1155537, 'err', err, false, false)) ? J$.B(113882, '===', J$.G(1155553, J$.R(1155545, 'err', err, false, false), 'code'), J$.U(113874, '-', J$.T(1155561, 5000, 22, false))) : J$._())) {
                                                var finalOptions = J$.W(1155641, 'finalOptions', J$.F(1155633, J$.R(1155569, 'applyWriteConcern', applyWriteConcern, false, true), false)(J$.M(1155601, J$.I(typeof Object === 'undefined' ? Object = J$.R(1155577, 'Object', undefined, true, true) : Object = J$.R(1155577, 'Object', Object, true, true)), 'assign', false)(J$.T(1155585, {}, 11, false), J$.R(1155593, 'options', options, false, false)), J$.T(1155617, { db: J$.R(1155609, 'db', db, false, false) }, 11, false), J$.R(1155625, 'options', options, false, false)), finalOptions, false, false);
                                                var md5 = J$.W(1155673, 'md5', J$.M(1155665, J$.R(1155649, 'crypto', crypto, false, true), 'createHash', false)(J$.T(1155657, 'md5', 21, false)), md5, false, false);
                                                J$.M(1155713, J$.R(1155681, 'md5', md5, false, false), 'update', false)(J$.B(113898, '+', J$.B(113890, '+', J$.R(1155689, 'username', username, false, false), J$.T(1155697, ':mongo:', 21, false)), J$.R(1155705, 'password', password, false, false)));
                                                var userPassword = J$.W(1155745, 'userPassword', J$.M(1155737, J$.R(1155721, 'md5', md5, false, false), 'digest', false)(J$.T(1155729, 'hex', 21, false)), userPassword, false, false);
                                                var dbToUse = J$.W(1155857, 'dbToUse', J$.C(71208, J$.G(1155761, J$.R(1155753, 'options', options, false, false), 'dbName')) ? J$.F(1155841, J$.R(1155769, 'Db', Db, false, false), true)(J$.G(1155785, J$.R(1155777, 'options', options, false, false), 'dbName'), J$.G(1155809, J$.G(1155801, J$.R(1155793, 'db', db, false, false), 's'), 'topology'), J$.G(1155833, J$.G(1155825, J$.R(1155817, 'db', db, false, false), 's'), 'options')) : J$.R(1155849, 'db', db, false, false), dbToUse, false, false);
                                                var _collection = J$.W(1155897, '_collection', J$.M(1155889, J$.R(1155865, 'dbToUse', dbToUse, false, false), 'collection', false)(J$.G(1155881, J$.R(1155873, 'CONSTANTS', CONSTANTS, false, true), 'SYSTEM_USER_COLLECTION')), _collection, false, false);
                                                J$.F(1156601, J$.R(1155905, 'count', count, false, true), false)(J$.R(1155913, '_collection', _collection, false, false), J$.T(1155921, {}, 11, false), J$.R(1155929, 'finalOptions', finalOptions, false, false), J$.T(1156593, function (err, count) {
                                                    jalangiLabel10:
                                                        while (true) {
                                                            try {
                                                                J$.Fe(1156553, arguments.callee, this, arguments);
                                                                arguments = J$.N(1156561, 'arguments', arguments, true, false, false);
                                                                err = J$.N(1156569, 'err', err, true, false, false);
                                                                count = J$.N(1156577, 'count', count, true, false, false);
                                                                J$.N(1156585, 'findOptions', findOptions, false, false, false);
                                                                if (J$.C(71216, J$.B(113906, '!=', J$.R(1155937, 'err', err, false, false), J$.T(1155945, null, 25, false))))
                                                                    return J$.Rt(1155993, J$.F(1155985, J$.R(1155953, 'handleCallback', handleCallback, false, true), false)(J$.R(1155961, 'callback', callback, false, false), J$.R(1155969, 'err', err, false, false), J$.T(1155977, null, 25, false)));
                                                                var findOptions = J$.W(1156049, 'findOptions', J$.M(1156041, J$.I(typeof Object === 'undefined' ? Object = J$.R(1156001, 'Object', undefined, true, true) : Object = J$.R(1156001, 'Object', Object, true, true)), 'assign', false)(J$.T(1156025, { projection: J$.T(1156017, { dbName: J$.T(1156009, 1, 22, false) }, 11, false) }, 11, false), J$.R(1156033, 'finalOptions', finalOptions, false, false)), findOptions, false, false);
                                                                J$.M(1156545, J$.M(1156089, J$.R(1156057, '_collection', _collection, false, false), 'find', false)(J$.T(1156073, { user: J$.R(1156065, 'username', username, false, false) }, 11, false), J$.R(1156081, 'findOptions', findOptions, false, false)), 'toArray', false)(J$.T(1156537, function (err) {
                                                                    jalangiLabel9:
                                                                        while (true) {
                                                                            try {
                                                                                J$.Fe(1156513, arguments.callee, this, arguments);
                                                                                arguments = J$.N(1156521, 'arguments', arguments, true, false, false);
                                                                                err = J$.N(1156529, 'err', err, true, false, false);
                                                                                if (J$.C(71224, J$.B(113914, '!=', J$.R(1156097, 'err', err, false, false), J$.T(1156105, null, 25, false))))
                                                                                    return J$.Rt(1156153, J$.F(1156145, J$.R(1156113, 'handleCallback', handleCallback, false, true), false)(J$.R(1156121, 'callback', callback, false, false), J$.R(1156129, 'err', err, false, false), J$.T(1156137, null, 25, false)));
                                                                                J$.P(1156177, J$.R(1156161, 'finalOptions', finalOptions, false, false), 'upsert', J$.T(1156169, true, 23, false));
                                                                                J$.F(1156505, J$.R(1156185, 'updateOne', updateOne, false, true), false)(J$.R(1156193, '_collection', _collection, false, false), J$.T(1156209, { user: J$.R(1156201, 'username', username, false, false) }, 11, false), J$.T(1156241, {
                                                                                    $set: J$.T(1156233, {
                                                                                        user: J$.R(1156217, 'username', username, false, false),
                                                                                        pwd: J$.R(1156225, 'userPassword', userPassword, false, false)
                                                                                    }, 11, false)
                                                                                }, 11, false), J$.R(1156249, 'finalOptions', finalOptions, false, false), J$.T(1156497, function (err) {
                                                                                    jalangiLabel8:
                                                                                        while (true) {
                                                                                            try {
                                                                                                J$.Fe(1156473, arguments.callee, this, arguments);
                                                                                                arguments = J$.N(1156481, 'arguments', arguments, true, false, false);
                                                                                                err = J$.N(1156489, 'err', err, true, false, false);
                                                                                                if (J$.C(71240, J$.C(71232, J$.B(113922, '===', J$.R(1156257, 'count', count, false, false), J$.T(1156265, 0, 22, false))) ? J$.R(1156273, 'err', err, false, false) : J$._()))
                                                                                                    return J$.Rt(1156345, J$.F(1156337, J$.R(1156281, 'handleCallback', handleCallback, false, true), false)(J$.R(1156289, 'callback', callback, false, false), J$.T(1156297, null, 25, false), J$.T(1156329, [J$.T(1156321, {
                                                                                                            user: J$.R(1156305, 'username', username, false, false),
                                                                                                            pwd: J$.R(1156313, 'userPassword', userPassword, false, false)
                                                                                                        }, 11, false)], 10, false)));
                                                                                                if (J$.C(71248, J$.R(1156353, 'err', err, false, false)))
                                                                                                    return J$.Rt(1156401, J$.F(1156393, J$.R(1156361, 'handleCallback', handleCallback, false, true), false)(J$.R(1156369, 'callback', callback, false, false), J$.R(1156377, 'err', err, false, false), J$.T(1156385, null, 25, false)));
                                                                                                J$.F(1156465, J$.R(1156409, 'handleCallback', handleCallback, false, true), false)(J$.R(1156417, 'callback', callback, false, false), J$.T(1156425, null, 25, false), J$.T(1156457, [J$.T(1156449, {
                                                                                                        user: J$.R(1156433, 'username', username, false, false),
                                                                                                        pwd: J$.R(1156441, 'userPassword', userPassword, false, false)
                                                                                                    }, 11, false)], 10, false));
                                                                                            } catch (J$e) {
                                                                                                J$.Ex(1169817, J$e);
                                                                                            } finally {
                                                                                                if (J$.Fr(1169825))
                                                                                                    continue jalangiLabel8;
                                                                                                else
                                                                                                    return J$.Ra();
                                                                                            }
                                                                                        }
                                                                                }, 12, false));
                                                                            } catch (J$e) {
                                                                                J$.Ex(1169833, J$e);
                                                                            } finally {
                                                                                if (J$.Fr(1169841))
                                                                                    continue jalangiLabel9;
                                                                                else
                                                                                    return J$.Ra();
                                                                            }
                                                                        }
                                                                }, 12, false));
                                                            } catch (J$e) {
                                                                J$.Ex(1169849, J$e);
                                                            } finally {
                                                                if (J$.Fr(1169857))
                                                                    continue jalangiLabel10;
                                                                else
                                                                    return J$.Ra();
                                                            }
                                                        }
                                                }, 12, false));
                                                return J$.Rt(1156609, undefined);
                                            }
                                            if (J$.C(71264, J$.R(1156617, 'err', err, false, false)))
                                                return J$.Rt(1156657, J$.F(1156649, J$.R(1156625, 'handleCallback', handleCallback, false, true), false)(J$.R(1156633, 'callback', callback, false, false), J$.R(1156641, 'err', err, false, false)));
                                            J$.F(1156697, J$.R(1156665, 'handleCallback', handleCallback, false, true), false)(J$.R(1156673, 'callback', callback, false, false), J$.R(1156681, 'err', err, false, false), J$.R(1156689, 'r', r, false, false));
                                        } catch (J$e) {
                                            J$.Ex(1169865, J$e);
                                        } finally {
                                            if (J$.Fr(1169873))
                                                continue jalangiLabel11;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                        } catch (J$e) {
                            J$.Ex(1169881, J$e);
                        } finally {
                            if (J$.Fr(1169889))
                                continue jalangiLabel12;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function collections(db, options, callback) {
                jalangiLabel16:
                    while (true) {
                        try {
                            J$.Fe(1157401, arguments.callee, this, arguments);
                            arguments = J$.N(1157409, 'arguments', arguments, true, false, false);
                            db = J$.N(1157417, 'db', db, true, false, false);
                            options = J$.N(1157425, 'options', options, true, false, false);
                            callback = J$.N(1157433, 'callback', callback, true, false, false);
                            J$.N(1157441, 'Collection', Collection, false, false, false);
                            var Collection = J$.W(1156873, 'Collection', J$.F(1156865, J$.R(1156857, 'loadCollection', loadCollection, false, true), false)(), Collection, false, false);
                            options = J$.W(1156929, 'options', J$.M(1156921, J$.I(typeof Object === 'undefined' ? Object = J$.R(1156881, 'Object', undefined, true, true) : Object = J$.R(1156881, 'Object', Object, true, true)), 'assign', false)(J$.T(1156889, {}, 11, false), J$.R(1156897, 'options', options, false, false), J$.T(1156913, { nameOnly: J$.T(1156905, true, 23, false) }, 11, false)), options, false, false);
                            J$.M(1157393, J$.M(1156961, J$.R(1156937, 'db', db, false, false), 'listCollections', false)(J$.T(1156945, {}, 11, false), J$.R(1156953, 'options', options, false, false)), 'toArray', false)(J$.T(1157385, function (err, documents) {
                                jalangiLabel15:
                                    while (true) {
                                        try {
                                            J$.Fe(1157353, arguments.callee, this, arguments);
                                            arguments = J$.N(1157361, 'arguments', arguments, true, false, false);
                                            err = J$.N(1157369, 'err', err, true, false, false);
                                            documents = J$.N(1157377, 'documents', documents, true, false, false);
                                            if (J$.C(71272, J$.B(113930, '!=', J$.R(1156969, 'err', err, false, false), J$.T(1156977, null, 25, false))))
                                                return J$.Rt(1157025, J$.F(1157017, J$.R(1156985, 'handleCallback', handleCallback, false, true), false)(J$.R(1156993, 'callback', callback, false, false), J$.R(1157001, 'err', err, false, false), J$.T(1157009, null, 25, false)));
                                            documents = J$.W(1157129, 'documents', J$.M(1157121, J$.R(1157033, 'documents', documents, false, false), 'filter', false)(J$.T(1157113, function (doc) {
                                                jalangiLabel13:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(1157089, arguments.callee, this, arguments);
                                                            arguments = J$.N(1157097, 'arguments', arguments, true, false, false);
                                                            doc = J$.N(1157105, 'doc', doc, true, false, false);
                                                            return J$.Rt(1157081, J$.B(113946, '===', J$.M(1157065, J$.G(1157049, J$.R(1157041, 'doc', doc, false, false), 'name'), 'indexOf', false)(J$.T(1157057, '$', 21, false)), J$.U(113938, '-', J$.T(1157073, 1, 22, false))));
                                                        } catch (J$e) {
                                                            J$.Ex(1169897, J$e);
                                                        } finally {
                                                            if (J$.Fr(1169905))
                                                                continue jalangiLabel13;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false)), documents, false, false);
                                            J$.F(1157345, J$.R(1157137, 'handleCallback', handleCallback, false, true), false)(J$.R(1157145, 'callback', callback, false, false), J$.T(1157153, null, 25, false), J$.M(1157337, J$.R(1157161, 'documents', documents, false, false), 'map', false)(J$.T(1157329, function (d) {
                                                jalangiLabel14:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(1157305, arguments.callee, this, arguments);
                                                            arguments = J$.N(1157313, 'arguments', arguments, true, false, false);
                                                            d = J$.N(1157321, 'd', d, true, false, false);
                                                            return J$.Rt(1157297, J$.F(1157289, J$.R(1157169, 'Collection', Collection, false, false), true)(J$.R(1157177, 'db', db, false, false), J$.G(1157201, J$.G(1157193, J$.R(1157185, 'db', db, false, false), 's'), 'topology'), J$.G(1157217, J$.R(1157209, 'db', db, false, false), 'databaseName'), J$.G(1157233, J$.R(1157225, 'd', d, false, false), 'name'), J$.G(1157257, J$.G(1157249, J$.R(1157241, 'db', db, false, false), 's'), 'pkFactory'), J$.G(1157281, J$.G(1157273, J$.R(1157265, 'db', db, false, false), 's'), 'options')));
                                                        } catch (J$e) {
                                                            J$.Ex(1169913, J$e);
                                                        } finally {
                                                            if (J$.Fr(1169921))
                                                                continue jalangiLabel14;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false)));
                                        } catch (J$e) {
                                            J$.Ex(1169929, J$e);
                                        } finally {
                                            if (J$.Fr(1169937))
                                                continue jalangiLabel15;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                        } catch (J$e) {
                            J$.Ex(1169945, J$e);
                        } finally {
                            if (J$.Fr(1169953))
                                continue jalangiLabel16;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function createIndex(db, name, fieldOrSpec, options, callback) {
                jalangiLabel19:
                    while (true) {
                        try {
                            J$.Fe(1158601, arguments.callee, this, arguments);
                            arguments = J$.N(1158609, 'arguments', arguments, true, false, false);
                            db = J$.N(1158617, 'db', db, true, false, false);
                            name = J$.N(1158625, 'name', name, true, false, false);
                            fieldOrSpec = J$.N(1158633, 'fieldOrSpec', fieldOrSpec, true, false, false);
                            options = J$.N(1158641, 'options', options, true, false, false);
                            callback = J$.N(1158649, 'callback', callback, true, false, false);
                            J$.N(1158657, 'finalOptions', finalOptions, false, false, false);
                            var finalOptions = J$.W(1157505, 'finalOptions', J$.M(1157497, J$.I(typeof Object === 'undefined' ? Object = J$.R(1157449, 'Object', undefined, true, true) : Object = J$.R(1157449, 'Object', Object, true, true)), 'assign', false)(J$.T(1157457, {}, 11, false), J$.T(1157481, { readPreference: J$.G(1157473, J$.R(1157465, 'ReadPreference', ReadPreference, false, true), 'PRIMARY') }, 11, false), J$.R(1157489, 'options', options, false, false)), finalOptions, false, false);
                            finalOptions = J$.W(1157561, 'finalOptions', J$.F(1157553, J$.R(1157513, 'applyWriteConcern', applyWriteConcern, false, true), false)(J$.R(1157521, 'finalOptions', finalOptions, false, false), J$.T(1157537, { db: J$.R(1157529, 'db', db, false, false) }, 11, false), J$.R(1157545, 'options', options, false, false)), finalOptions, false, false);
                            if (J$.C(71288, J$.C(71280, J$.G(1157577, J$.R(1157569, 'finalOptions', finalOptions, false, false), 'writeConcern')) ? J$.B(113962, '!==', J$.U(113954, 'typeof', J$.R(1157585, 'callback', callback, false, false)), J$.T(1157593, 'function', 21, false)) : J$._())) {
                                throw J$.M(1157633, J$.R(1157601, 'MongoError', MongoError, false, true), 'create', false)(J$.T(1157625, {
                                    message: J$.T(1157609, 'Cannot use a writeConcern without a provided callback', 21, false),
                                    driver: J$.T(1157617, true, 23, false)
                                }, 11, false));
                            }
                            if (J$.C(71304, J$.C(71296, J$.G(1157649, J$.R(1157641, 'db', db, false, false), 'serverConfig')) ? J$.M(1157673, J$.G(1157665, J$.R(1157657, 'db', db, false, false), 'serverConfig'), 'isDestroyed', false)() : J$._()))
                                return J$.Rt(1157721, J$.F(1157713, J$.R(1157681, 'callback', callback, false, false), false)(J$.F(1157705, J$.R(1157689, 'MongoError', MongoError, false, true), true)(J$.T(1157697, 'topology was destroyed', 21, false))));
                            J$.F(1158593, J$.R(1157729, 'createIndexUsingCreateIndexes', createIndexUsingCreateIndexes, false, true), false)(J$.R(1157737, 'db', db, false, false), J$.R(1157745, 'name', name, false, false), J$.R(1157753, 'fieldOrSpec', fieldOrSpec, false, false), J$.R(1157761, 'finalOptions', finalOptions, false, false), J$.T(1158585, function (err, result) {
                                jalangiLabel18:
                                    while (true) {
                                        try {
                                            J$.Fe(1158545, arguments.callee, this, arguments);
                                            arguments = J$.N(1158553, 'arguments', arguments, true, false, false);
                                            err = J$.N(1158561, 'err', err, true, false, false);
                                            result = J$.N(1158569, 'result', result, true, false, false);
                                            J$.N(1158577, 'doc', doc, false, false, false);
                                            if (J$.C(71312, J$.B(113970, '==', J$.R(1157769, 'err', err, false, false), J$.T(1157777, null, 25, false))))
                                                return J$.Rt(1157825, J$.F(1157817, J$.R(1157785, 'handleCallback', handleCallback, false, true), false)(J$.R(1157793, 'callback', callback, false, false), J$.R(1157801, 'err', err, false, false), J$.R(1157809, 'result', result, false, false)));
                                            if (J$.C(71360, J$.C(71352, J$.C(71344, J$.C(71336, J$.C(71328, J$.C(71320, J$.B(113978, '===', J$.G(1157841, J$.R(1157833, 'err', err, false, false), 'code'), J$.T(1157849, 67, 22, false))) ? J$._() : J$.B(113986, '===', J$.G(1157865, J$.R(1157857, 'err', err, false, false), 'code'), J$.T(1157873, 11000, 22, false))) ? J$._() : J$.B(113994, '===', J$.G(1157889, J$.R(1157881, 'err', err, false, false), 'code'), J$.T(1157897, 85, 22, false))) ? J$._() : J$.B(114002, '===', J$.G(1157913, J$.R(1157905, 'err', err, false, false), 'code'), J$.T(1157921, 86, 22, false))) ? J$._() : J$.B(114010, '===', J$.G(1157937, J$.R(1157929, 'err', err, false, false), 'code'), J$.T(1157945, 11600, 22, false))) ? J$._() : J$.B(114018, '===', J$.G(1157961, J$.R(1157953, 'err', err, false, false), 'code'), J$.T(1157969, 197, 22, false)))) {
                                                return J$.Rt(1158017, J$.F(1158009, J$.R(1157977, 'handleCallback', handleCallback, false, true), false)(J$.R(1157985, 'callback', callback, false, false), J$.R(1157993, 'err', err, false, false), J$.R(1158001, 'result', result, false, false)));
                                            }
                                            var doc = J$.W(1158073, 'doc', J$.F(1158065, J$.R(1158025, 'createCreateIndexCommand', createCreateIndexCommand, false, true), false)(J$.R(1158033, 'db', db, false, false), J$.R(1158041, 'name', name, false, false), J$.R(1158049, 'fieldOrSpec', fieldOrSpec, false, false), J$.R(1158057, 'options', options, false, false)), doc, false, false);
                                            J$.P(1158097, J$.R(1158081, 'finalOptions', finalOptions, false, false), 'checkKeys', J$.T(1158089, false, 23, false));
                                            J$.M(1158537, J$.G(1158121, J$.G(1158113, J$.R(1158105, 'db', db, false, false), 's'), 'topology'), 'insert', false)(J$.M(1158169, J$.G(1158145, J$.G(1158137, J$.R(1158129, 'db', db, false, false), 's'), 'namespace'), 'withCollection', false)(J$.G(1158161, J$.R(1158153, 'CONSTANTS', CONSTANTS, false, true), 'SYSTEM_INDEX_COLLECTION')), J$.R(1158177, 'doc', doc, false, false), J$.R(1158185, 'finalOptions', finalOptions, false, false), J$.T(1158529, function (err, result) {
                                                jalangiLabel17:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(1158497, arguments.callee, this, arguments);
                                                            arguments = J$.N(1158505, 'arguments', arguments, true, false, false);
                                                            err = J$.N(1158513, 'err', err, true, false, false);
                                                            result = J$.N(1158521, 'result', result, true, false, false);
                                                            if (J$.C(71368, J$.B(114026, '==', J$.R(1158193, 'callback', callback, false, false), J$.T(1158201, null, 25, false))))
                                                                return J$.Rt(1158209, undefined);
                                                            if (J$.C(71376, J$.R(1158217, 'err', err, false, false)))
                                                                return J$.Rt(1158257, J$.F(1158249, J$.R(1158225, 'handleCallback', handleCallback, false, true), false)(J$.R(1158233, 'callback', callback, false, false), J$.R(1158241, 'err', err, false, false)));
                                                            if (J$.C(71384, J$.B(114034, '==', J$.R(1158265, 'result', result, false, false), J$.T(1158273, null, 25, false))))
                                                                return J$.Rt(1158321, J$.F(1158313, J$.R(1158281, 'handleCallback', handleCallback, false, true), false)(J$.R(1158289, 'callback', callback, false, false), J$.T(1158297, null, 25, false), J$.T(1158305, null, 25, false)));
                                                            if (J$.C(71392, J$.G(1158345, J$.G(1158337, J$.R(1158329, 'result', result, false, false), 'result'), 'writeErrors')))
                                                                return J$.Rt(1158441, J$.F(1158433, J$.R(1158353, 'handleCallback', handleCallback, false, true), false)(J$.R(1158361, 'callback', callback, false, false), J$.M(1158417, J$.R(1158369, 'MongoError', MongoError, false, true), 'create', false)(J$.G(1158409, J$.G(1158393, J$.G(1158385, J$.R(1158377, 'result', result, false, false), 'result'), 'writeErrors'), J$.T(1158401, 0, 22, false))), J$.T(1158425, null, 25, false)));
                                                            J$.F(1158489, J$.R(1158449, 'handleCallback', handleCallback, false, true), false)(J$.R(1158457, 'callback', callback, false, false), J$.T(1158465, null, 25, false), J$.G(1158481, J$.R(1158473, 'doc', doc, false, false), 'name'));
                                                        } catch (J$e) {
                                                            J$.Ex(1169961, J$e);
                                                        } finally {
                                                            if (J$.Fr(1169969))
                                                                continue jalangiLabel17;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false));
                                        } catch (J$e) {
                                            J$.Ex(1169977, J$e);
                                        } finally {
                                            if (J$.Fr(1169985))
                                                continue jalangiLabel18;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                        } catch (J$e) {
                            J$.Ex(1169993, J$e);
                        } finally {
                            if (J$.Fr(1170001))
                                continue jalangiLabel19;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function createListener(db, e, object) {
                jalangiLabel21:
                    while (true) {
                        try {
                            J$.Fe(1158969, arguments.callee, this, arguments);
                            function listener(err) {
                                jalangiLabel20:
                                    while (true) {
                                        try {
                                            J$.Fe(1158921, arguments.callee, this, arguments);
                                            arguments = J$.N(1158929, 'arguments', arguments, true, false, false);
                                            err = J$.N(1158937, 'err', err, true, false, false);
                                            J$.N(1158945, 'i', i, false, false, false);
                                            if (J$.C(71408, J$.B(114042, '>', J$.G(1158689, J$.M(1158681, J$.R(1158665, 'object', object, false, false), 'listeners', false)(J$.R(1158673, 'e', e, false, false)), 'length'), J$.T(1158697, 0, 22, false)))) {
                                                J$.M(1158737, J$.R(1158705, 'object', object, false, false), 'emit', false)(J$.R(1158713, 'e', e, false, false), J$.R(1158721, 'err', err, false, false), J$.R(1158729, 'db', db, false, false));
                                                for (var i = J$.W(1158753, 'i', J$.T(1158745, 0, 22, false), i, false, false); J$.C(71400, J$.B(114050, '<', J$.R(1158761, 'i', i, false, false), J$.G(1158793, J$.G(1158785, J$.G(1158777, J$.R(1158769, 'db', db, false, false), 's'), 'children'), 'length'))); J$.B(114074, '-', i = J$.W(1158809, 'i', J$.B(114066, '+', J$.U(114058, '+', J$.R(1158801, 'i', i, false, false)), 1), i, false, false), 1)) {
                                                    J$.M(1158913, J$.G(1158849, J$.G(1158833, J$.G(1158825, J$.R(1158817, 'db', db, false, false), 's'), 'children'), J$.R(1158841, 'i', i, false, false)), 'emit', false)(J$.R(1158857, 'e', e, false, false), J$.R(1158865, 'err', err, false, false), J$.G(1158905, J$.G(1158889, J$.G(1158881, J$.R(1158873, 'db', db, false, false), 's'), 'children'), J$.R(1158897, 'i', i, false, false)));
                                                }
                                            }
                                        } catch (J$e) {
                                            J$.Ex(1170009, J$e);
                                        } finally {
                                            if (J$.Fr(1170017))
                                                continue jalangiLabel20;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }
                            arguments = J$.N(1158977, 'arguments', arguments, true, false, false);
                            db = J$.N(1158985, 'db', db, true, false, false);
                            e = J$.N(1158993, 'e', e, true, false, false);
                            object = J$.N(1159001, 'object', object, true, false, false);
                            listener = J$.N(1159017, 'listener', J$.T(1159009, listener, 12, false), true, false, false);
                            return J$.Rt(1158961, J$.R(1158953, 'listener', listener, false, false));
                        } catch (J$e) {
                            J$.Ex(1170025, J$e);
                        } finally {
                            if (J$.Fr(1170033))
                                continue jalangiLabel21;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function dropCollection(db, name, options, callback) {
                jalangiLabel23:
                    while (true) {
                        try {
                            J$.Fe(1159345, arguments.callee, this, arguments);
                            arguments = J$.N(1159353, 'arguments', arguments, true, false, false);
                            db = J$.N(1159361, 'db', db, true, false, false);
                            name = J$.N(1159369, 'name', name, true, false, false);
                            options = J$.N(1159377, 'options', options, true, false, false);
                            callback = J$.N(1159385, 'callback', callback, true, false, false);
                            J$.F(1159337, J$.R(1159025, 'executeCommand', executeCommand, false, true), false)(J$.R(1159033, 'db', db, false, false), J$.R(1159041, 'name', name, false, false), J$.R(1159049, 'options', options, false, false), J$.T(1159329, function (err, result) {
                                jalangiLabel22:
                                    while (true) {
                                        try {
                                            J$.Fe(1159297, arguments.callee, this, arguments);
                                            arguments = J$.N(1159305, 'arguments', arguments, true, false, false);
                                            err = J$.N(1159313, 'err', err, true, false, false);
                                            result = J$.N(1159321, 'result', result, true, false, false);
                                            if (J$.C(71424, J$.C(71416, J$.G(1159065, J$.R(1159057, 'db', db, false, false), 'serverConfig')) ? J$.M(1159089, J$.G(1159081, J$.R(1159073, 'db', db, false, false), 'serverConfig'), 'isDestroyed', false)() : J$._())) {
                                                return J$.Rt(1159137, J$.F(1159129, J$.R(1159097, 'callback', callback, false, false), false)(J$.F(1159121, J$.R(1159105, 'MongoError', MongoError, false, true), true)(J$.T(1159113, 'topology was destroyed', 21, false))));
                                            }
                                            if (J$.C(71432, J$.R(1159145, 'err', err, false, false)))
                                                return J$.Rt(1159185, J$.F(1159177, J$.R(1159153, 'handleCallback', handleCallback, false, true), false)(J$.R(1159161, 'callback', callback, false, false), J$.R(1159169, 'err', err, false, false)));
                                            if (J$.C(71440, J$.G(1159201, J$.R(1159193, 'result', result, false, false), 'ok')))
                                                return J$.Rt(1159249, J$.F(1159241, J$.R(1159209, 'handleCallback', handleCallback, false, true), false)(J$.R(1159217, 'callback', callback, false, false), J$.T(1159225, null, 25, false), J$.T(1159233, true, 23, false)));
                                            J$.F(1159289, J$.R(1159257, 'handleCallback', handleCallback, false, true), false)(J$.R(1159265, 'callback', callback, false, false), J$.T(1159273, null, 25, false), J$.T(1159281, false, 23, false));
                                        } catch (J$e) {
                                            J$.Ex(1170041, J$e);
                                        } finally {
                                            if (J$.Fr(1170049))
                                                continue jalangiLabel22;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                        } catch (J$e) {
                            J$.Ex(1170057, J$e);
                        } finally {
                            if (J$.Fr(1170065))
                                continue jalangiLabel23;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function dropDatabase(db, cmd, options, callback) {
                jalangiLabel25:
                    while (true) {
                        try {
                            J$.Fe(1159705, arguments.callee, this, arguments);
                            arguments = J$.N(1159713, 'arguments', arguments, true, false, false);
                            db = J$.N(1159721, 'db', db, true, false, false);
                            cmd = J$.N(1159729, 'cmd', cmd, true, false, false);
                            options = J$.N(1159737, 'options', options, true, false, false);
                            callback = J$.N(1159745, 'callback', callback, true, false, false);
                            J$.F(1159697, J$.R(1159393, 'executeCommand', executeCommand, false, true), false)(J$.R(1159401, 'db', db, false, false), J$.R(1159409, 'cmd', cmd, false, false), J$.R(1159417, 'options', options, false, false), J$.T(1159689, function (err, result) {
                                jalangiLabel24:
                                    while (true) {
                                        try {
                                            J$.Fe(1159657, arguments.callee, this, arguments);
                                            arguments = J$.N(1159665, 'arguments', arguments, true, false, false);
                                            err = J$.N(1159673, 'err', err, true, false, false);
                                            result = J$.N(1159681, 'result', result, true, false, false);
                                            if (J$.C(71456, J$.C(71448, J$.G(1159433, J$.R(1159425, 'db', db, false, false), 'serverConfig')) ? J$.M(1159457, J$.G(1159449, J$.R(1159441, 'db', db, false, false), 'serverConfig'), 'isDestroyed', false)() : J$._())) {
                                                return J$.Rt(1159505, J$.F(1159497, J$.R(1159465, 'callback', callback, false, false), false)(J$.F(1159489, J$.R(1159473, 'MongoError', MongoError, false, true), true)(J$.T(1159481, 'topology was destroyed', 21, false))));
                                            }
                                            if (J$.C(71464, J$.B(114082, '==', J$.R(1159513, 'callback', callback, false, false), J$.T(1159521, null, 25, false))))
                                                return J$.Rt(1159529, undefined);
                                            if (J$.C(71472, J$.R(1159537, 'err', err, false, false)))
                                                return J$.Rt(1159585, J$.F(1159577, J$.R(1159545, 'handleCallback', handleCallback, false, true), false)(J$.R(1159553, 'callback', callback, false, false), J$.R(1159561, 'err', err, false, false), J$.T(1159569, null, 25, false)));
                                            J$.F(1159649, J$.R(1159593, 'handleCallback', handleCallback, false, true), false)(J$.R(1159601, 'callback', callback, false, false), J$.T(1159609, null, 25, false), J$.C(71480, J$.G(1159625, J$.R(1159617, 'result', result, false, false), 'ok')) ? J$.T(1159633, true, 23, false) : J$.T(1159641, false, 23, false));
                                        } catch (J$e) {
                                            J$.Ex(1170073, J$e);
                                        } finally {
                                            if (J$.Fr(1170081))
                                                continue jalangiLabel24;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                        } catch (J$e) {
                            J$.Ex(1170089, J$e);
                        } finally {
                            if (J$.Fr(1170097))
                                continue jalangiLabel25;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function ensureIndex(db, name, fieldOrSpec, options, callback) {
                jalangiLabel27:
                    while (true) {
                        try {
                            J$.Fe(1160337, arguments.callee, this, arguments);
                            arguments = J$.N(1160345, 'arguments', arguments, true, false, false);
                            db = J$.N(1160353, 'db', db, true, false, false);
                            name = J$.N(1160361, 'name', name, true, false, false);
                            fieldOrSpec = J$.N(1160369, 'fieldOrSpec', fieldOrSpec, true, false, false);
                            options = J$.N(1160377, 'options', options, true, false, false);
                            callback = J$.N(1160385, 'callback', callback, true, false, false);
                            J$.N(1160393, 'finalOptions', finalOptions, false, false, false);
                            J$.N(1160401, 'selector', selector, false, false, false);
                            J$.N(1160409, 'index_name', index_name, false, false, false);
                            var finalOptions = J$.W(1159801, 'finalOptions', J$.F(1159793, J$.R(1159753, 'applyWriteConcern', applyWriteConcern, false, true), false)(J$.T(1159761, {}, 11, false), J$.T(1159777, { db: J$.R(1159769, 'db', db, false, false) }, 11, false), J$.R(1159785, 'options', options, false, false)), finalOptions, false, false);
                            var selector = J$.W(1159857, 'selector', J$.F(1159849, J$.R(1159809, 'createCreateIndexCommand', createCreateIndexCommand, false, true), false)(J$.R(1159817, 'db', db, false, false), J$.R(1159825, 'name', name, false, false), J$.R(1159833, 'fieldOrSpec', fieldOrSpec, false, false), J$.R(1159841, 'options', options, false, false)), selector, false, false);
                            var index_name = J$.W(1159881, 'index_name', J$.G(1159873, J$.R(1159865, 'selector', selector, false, false), 'name'), index_name, false, false);
                            if (J$.C(71496, J$.C(71488, J$.G(1159897, J$.R(1159889, 'db', db, false, false), 'serverConfig')) ? J$.M(1159921, J$.G(1159913, J$.R(1159905, 'db', db, false, false), 'serverConfig'), 'isDestroyed', false)() : J$._()))
                                return J$.Rt(1159969, J$.F(1159961, J$.R(1159929, 'callback', callback, false, false), false)(J$.F(1159953, J$.R(1159937, 'MongoError', MongoError, false, true), true)(J$.T(1159945, 'topology was destroyed', 21, false))));
                            J$.P(1160001, J$.R(1159977, 'finalOptions', finalOptions, false, false), 'readPreference', J$.G(1159993, J$.R(1159985, 'ReadPreference', ReadPreference, false, true), 'PRIMARY'));
                            J$.F(1160329, J$.R(1160009, 'indexInformation', indexInformation, false, true), false)(J$.R(1160017, 'db', db, false, false), J$.R(1160025, 'name', name, false, false), J$.R(1160033, 'finalOptions', finalOptions, false, false), J$.T(1160321, function (err, indexInformation) {
                                jalangiLabel26:
                                    while (true) {
                                        try {
                                            J$.Fe(1160289, arguments.callee, this, arguments);
                                            arguments = J$.N(1160297, 'arguments', arguments, true, false, false);
                                            err = J$.N(1160305, 'err', err, true, false, false);
                                            indexInformation = J$.N(1160313, 'indexInformation', indexInformation, true, false, false);
                                            if (J$.C(71512, J$.C(71504, J$.B(114090, '!=', J$.R(1160041, 'err', err, false, false), J$.T(1160049, null, 25, false))) ? J$.B(114098, '!==', J$.G(1160065, J$.R(1160057, 'err', err, false, false), 'code'), J$.T(1160073, 26, 22, false)) : J$._()))
                                                return J$.Rt(1160121, J$.F(1160113, J$.R(1160081, 'handleCallback', handleCallback, false, true), false)(J$.R(1160089, 'callback', callback, false, false), J$.R(1160097, 'err', err, false, false), J$.T(1160105, null, 25, false)));
                                            if (J$.C(71536, J$.C(71520, J$.B(114106, '==', J$.R(1160129, 'indexInformation', indexInformation, false, false), J$.T(1160137, null, 25, false))) ? J$._() : J$.U(114114, '!', J$.G(1160161, J$.R(1160145, 'indexInformation', indexInformation, false, false), J$.R(1160153, 'index_name', index_name, false, false))))) {
                                                J$.F(1160217, J$.R(1160169, 'createIndex', createIndex, false, true), false)(J$.R(1160177, 'db', db, false, false), J$.R(1160185, 'name', name, false, false), J$.R(1160193, 'fieldOrSpec', fieldOrSpec, false, false), J$.R(1160201, 'options', options, false, false), J$.R(1160209, 'callback', callback, false, false));
                                            } else {
                                                if (J$.C(71528, J$.B(114130, '===', J$.U(114122, 'typeof', J$.R(1160225, 'callback', callback, false, false)), J$.T(1160233, 'function', 21, false))))
                                                    return J$.Rt(1160281, J$.F(1160273, J$.R(1160241, 'handleCallback', handleCallback, false, true), false)(J$.R(1160249, 'callback', callback, false, false), J$.T(1160257, null, 25, false), J$.R(1160265, 'index_name', index_name, false, false)));
                                            }
                                        } catch (J$e) {
                                            J$.Ex(1170105, J$e);
                                        } finally {
                                            if (J$.Fr(1170113))
                                                continue jalangiLabel26;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                        } catch (J$e) {
                            J$.Ex(1170121, J$e);
                        } finally {
                            if (J$.Fr(1170129))
                                continue jalangiLabel27;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function evaluate(db, code, parameters, options, callback) {
                jalangiLabel29:
                    while (true) {
                        try {
                            J$.Fe(1161281, arguments.callee, this, arguments);
                            arguments = J$.N(1161289, 'arguments', arguments, true, false, false);
                            db = J$.N(1161297, 'db', db, true, false, false);
                            code = J$.N(1161305, 'code', code, true, false, false);
                            parameters = J$.N(1161313, 'parameters', parameters, true, false, false);
                            options = J$.N(1161321, 'options', options, true, false, false);
                            callback = J$.N(1161329, 'callback', callback, true, false, false);
                            J$.N(1161337, 'finalCode', finalCode, false, false, false);
                            J$.N(1161345, 'finalParameters', finalParameters, false, false, false);
                            J$.N(1161353, 'cmd', cmd, false, false, false);
                            var finalCode = J$.W(1160425, 'finalCode', J$.R(1160417, 'code', code, false, false), finalCode, false, false);
                            var finalParameters = J$.W(1160441, 'finalParameters', J$.T(1160433, [], 10, false), finalParameters, false, false);
                            if (J$.C(71552, J$.C(71544, J$.G(1160457, J$.R(1160449, 'db', db, false, false), 'serverConfig')) ? J$.M(1160481, J$.G(1160473, J$.R(1160465, 'db', db, false, false), 'serverConfig'), 'isDestroyed', false)() : J$._()))
                                return J$.Rt(1160529, J$.F(1160521, J$.R(1160489, 'callback', callback, false, false), false)(J$.F(1160513, J$.R(1160497, 'MongoError', MongoError, false, true), true)(J$.T(1160505, 'topology was destroyed', 21, false))));
                            if (J$.C(71568, J$.U(114146, '!', J$.C(71560, J$.R(1160537, 'finalCode', finalCode, false, false)) ? J$.B(114138, '===', J$.G(1160553, J$.R(1160545, 'finalCode', finalCode, false, false), '_bsontype'), J$.T(1160561, 'Code', 21, false)) : J$._())))
                                finalCode = J$.W(1160593, 'finalCode', J$.F(1160585, J$.R(1160569, 'Code', Code, false, true), true)(J$.R(1160577, 'finalCode', finalCode, false, false)), finalCode, false, false);
                            if (J$.C(71616, J$.C(71584, J$.C(71576, J$.B(114154, '!=', J$.R(1160601, 'parameters', parameters, false, false), J$.T(1160609, null, 25, false))) ? J$.U(114162, '!', J$.M(1160633, J$.I(typeof Array === 'undefined' ? Array = J$.R(1160617, 'Array', undefined, true, true) : Array = J$.R(1160617, 'Array', Array, true, true)), 'isArray', false)(J$.R(1160625, 'parameters', parameters, false, false))) : J$._()) ? J$.B(114178, '!==', J$.U(114170, 'typeof', J$.R(1160641, 'parameters', parameters, false, false)), J$.T(1160649, 'function', 21, false)) : J$._())) {
                                finalParameters = J$.W(1160673, 'finalParameters', J$.T(1160665, [J$.R(1160657, 'parameters', parameters, false, false)], 10, false), finalParameters, false, false);
                            } else if (J$.C(71608, J$.C(71600, J$.C(71592, J$.B(114186, '!=', J$.R(1160681, 'parameters', parameters, false, false), J$.T(1160689, null, 25, false))) ? J$.M(1160713, J$.I(typeof Array === 'undefined' ? Array = J$.R(1160697, 'Array', undefined, true, true) : Array = J$.R(1160697, 'Array', Array, true, true)), 'isArray', false)(J$.R(1160705, 'parameters', parameters, false, false)) : J$._()) ? J$.B(114202, '!==', J$.U(114194, 'typeof', J$.R(1160721, 'parameters', parameters, false, false)), J$.T(1160729, 'function', 21, false)) : J$._())) {
                                finalParameters = J$.W(1160745, 'finalParameters', J$.R(1160737, 'parameters', parameters, false, false), finalParameters, false, false);
                            }
                            var cmd = J$.W(1160777, 'cmd', J$.T(1160769, {
                                $eval: J$.R(1160753, 'finalCode', finalCode, false, false),
                                args: J$.R(1160761, 'finalParameters', finalParameters, false, false)
                            }, 11, false), cmd, false, false);
                            if (J$.C(71624, J$.G(1160801, J$.R(1160785, 'options', options, false, false), J$.T(1160793, 'nolock', 21, false)))) {
                                J$.P(1160849, J$.R(1160809, 'cmd', cmd, false, false), J$.T(1160817, 'nolock', 21, false), J$.G(1160841, J$.R(1160825, 'options', options, false, false), J$.T(1160833, 'nolock', 21, false)));
                            }
                            J$.P(1160897, J$.R(1160857, 'options', options, false, false), 'readPreference', J$.F(1160889, J$.R(1160865, 'ReadPreference', ReadPreference, false, true), true)(J$.G(1160881, J$.R(1160873, 'ReadPreference', ReadPreference, false, true), 'PRIMARY')));
                            J$.F(1161273, J$.R(1160905, 'executeCommand', executeCommand, false, true), false)(J$.R(1160913, 'db', db, false, false), J$.R(1160921, 'cmd', cmd, false, false), J$.R(1160929, 'options', options, false, false), J$.T(1161265, function (err, result) {
                                jalangiLabel28:
                                    while (true) {
                                        try {
                                            J$.Fe(1161233, arguments.callee, this, arguments);
                                            arguments = J$.N(1161241, 'arguments', arguments, true, false, false);
                                            err = J$.N(1161249, 'err', err, true, false, false);
                                            result = J$.N(1161257, 'result', result, true, false, false);
                                            if (J$.C(71632, J$.R(1160937, 'err', err, false, false)))
                                                return J$.Rt(1160985, J$.F(1160977, J$.R(1160945, 'handleCallback', handleCallback, false, true), false)(J$.R(1160953, 'callback', callback, false, false), J$.R(1160961, 'err', err, false, false), J$.T(1160969, null, 25, false)));
                                            if (J$.C(71648, J$.C(71640, J$.R(1160993, 'result', result, false, false)) ? J$.B(114210, '===', J$.G(1161009, J$.R(1161001, 'result', result, false, false), 'ok'), J$.T(1161017, 1, 22, false)) : J$._()))
                                                return J$.Rt(1161073, J$.F(1161065, J$.R(1161025, 'handleCallback', handleCallback, false, true), false)(J$.R(1161033, 'callback', callback, false, false), J$.T(1161041, null, 25, false), J$.G(1161057, J$.R(1161049, 'result', result, false, false), 'retval')));
                                            if (J$.C(71656, J$.R(1161081, 'result', result, false, false)))
                                                return J$.Rt(1161185, J$.F(1161177, J$.R(1161089, 'handleCallback', handleCallback, false, true), false)(J$.R(1161097, 'callback', callback, false, false), J$.M(1161161, J$.R(1161105, 'MongoError', MongoError, false, true), 'create', false)(J$.T(1161153, {
                                                    message: J$.M(1161137, J$.T(1161113, 'eval failed: ', 21, false), 'concat', false)(J$.G(1161129, J$.R(1161121, 'result', result, false, false), 'errmsg')),
                                                    driver: J$.T(1161145, true, 23, false)
                                                }, 11, false)), J$.T(1161169, null, 25, false)));
                                            J$.F(1161225, J$.R(1161193, 'handleCallback', handleCallback, false, true), false)(J$.R(1161201, 'callback', callback, false, false), J$.R(1161209, 'err', err, false, false), J$.R(1161217, 'result', result, false, false));
                                        } catch (J$e) {
                                            J$.Ex(1170137, J$e);
                                        } finally {
                                            if (J$.Fr(1170145))
                                                continue jalangiLabel28;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                        } catch (J$e) {
                            J$.Ex(1170153, J$e);
                        } finally {
                            if (J$.Fr(1170161))
                                continue jalangiLabel29;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function executeCommand(db, command, options, callback) {
                jalangiLabel31:
                    while (true) {
                        try {
                            J$.Fe(1162041, arguments.callee, this, arguments);
                            arguments = J$.N(1162049, 'arguments', arguments, true, false, false);
                            db = J$.N(1162057, 'db', db, true, false, false);
                            command = J$.N(1162065, 'command', command, true, false, false);
                            options = J$.N(1162073, 'options', options, true, false, false);
                            callback = J$.N(1162081, 'callback', callback, true, false, false);
                            J$.N(1162089, 'dbName', dbName, false, false, false);
                            if (J$.C(71672, J$.C(71664, J$.G(1161369, J$.R(1161361, 'db', db, false, false), 'serverConfig')) ? J$.M(1161393, J$.G(1161385, J$.R(1161377, 'db', db, false, false), 'serverConfig'), 'isDestroyed', false)() : J$._()))
                                return J$.Rt(1161441, J$.F(1161433, J$.R(1161401, 'callback', callback, false, false), false)(J$.F(1161425, J$.R(1161409, 'MongoError', MongoError, false, true), true)(J$.T(1161417, 'topology was destroyed', 21, false))));
                            var dbName = J$.W(1161497, 'dbName', J$.C(71688, J$.C(71680, J$.G(1161457, J$.R(1161449, 'options', options, false, false), 'dbName')) ? J$._() : J$.G(1161473, J$.R(1161465, 'options', options, false, false), 'authdb')) ? J$._() : J$.G(1161489, J$.R(1161481, 'db', db, false, false), 'databaseName'), dbName, false, false);
                            J$.P(1161545, J$.R(1161505, 'options', options, false, false), 'readPreference', J$.F(1161537, J$.R(1161513, 'resolveReadPreference', resolveReadPreference, false, true), false)(J$.R(1161521, 'db', db, false, false), J$.R(1161529, 'options', options, false, false)));
                            if (J$.C(71696, J$.M(1161577, J$.G(1161569, J$.G(1161561, J$.R(1161553, 'db', db, false, false), 's'), 'logger'), 'isDebug', false)()))
                                J$.M(1161745, J$.G(1161601, J$.G(1161593, J$.R(1161585, 'db', db, false, false), 's'), 'logger'), 'debug', false)(J$.M(1161737, J$.M(1161673, J$.M(1161649, J$.T(1161609, 'executing command ', 21, false), 'concat', false)(J$.M(1161633, J$.I(typeof JSON === 'undefined' ? JSON = J$.R(1161617, 'JSON', undefined, true, true) : JSON = J$.R(1161617, 'JSON', JSON, true, true)), 'stringify', false)(J$.R(1161625, 'command', command, false, false)), J$.T(1161641, ' against ', 21, false)), 'concat', false)(J$.R(1161657, 'dbName', dbName, false, false), J$.T(1161665, '.$cmd with options [', 21, false)), 'concat', false)(J$.M(1161721, J$.I(typeof JSON === 'undefined' ? JSON = J$.R(1161681, 'JSON', undefined, true, true) : JSON = J$.R(1161681, 'JSON', JSON, true, true)), 'stringify', false)(J$.F(1161713, J$.R(1161689, 'debugOptions', debugOptions, false, true), false)(J$.R(1161697, 'debugFields', debugFields, false, true), J$.R(1161705, 'options', options, false, false))), J$.T(1161729, ']', 21, false)));
                            J$.M(1162033, J$.G(1161769, J$.G(1161761, J$.R(1161753, 'db', db, false, false), 's'), 'topology'), 'command', false)(J$.M(1161809, J$.G(1161793, J$.G(1161785, J$.R(1161777, 'db', db, false, false), 's'), 'namespace'), 'withCollection', false)(J$.T(1161801, '$cmd', 21, false)), J$.R(1161817, 'command', command, false, false), J$.R(1161825, 'options', options, false, false), J$.T(1162025, function (err, result) {
                                jalangiLabel30:
                                    while (true) {
                                        try {
                                            J$.Fe(1161993, arguments.callee, this, arguments);
                                            arguments = J$.N(1162001, 'arguments', arguments, true, false, false);
                                            err = J$.N(1162009, 'err', err, true, false, false);
                                            result = J$.N(1162017, 'result', result, true, false, false);
                                            if (J$.C(71704, J$.R(1161833, 'err', err, false, false)))
                                                return J$.Rt(1161873, J$.F(1161865, J$.R(1161841, 'handleCallback', handleCallback, false, true), false)(J$.R(1161849, 'callback', callback, false, false), J$.R(1161857, 'err', err, false, false)));
                                            if (J$.C(71712, J$.G(1161889, J$.R(1161881, 'options', options, false, false), 'full')))
                                                return J$.Rt(1161937, J$.F(1161929, J$.R(1161897, 'handleCallback', handleCallback, false, true), false)(J$.R(1161905, 'callback', callback, false, false), J$.T(1161913, null, 25, false), J$.R(1161921, 'result', result, false, false)));
                                            J$.F(1161985, J$.R(1161945, 'handleCallback', handleCallback, false, true), false)(J$.R(1161953, 'callback', callback, false, false), J$.T(1161961, null, 25, false), J$.G(1161977, J$.R(1161969, 'result', result, false, false), 'result'));
                                        } catch (J$e) {
                                            J$.Ex(1170169, J$e);
                                        } finally {
                                            if (J$.Fr(1170177))
                                                continue jalangiLabel30;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                        } catch (J$e) {
                            J$.Ex(1170185, J$e);
                        } finally {
                            if (J$.Fr(1170193))
                                continue jalangiLabel31;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function executeDbAdminCommand(db, command, options, callback) {
                jalangiLabel33:
                    while (true) {
                        try {
                            J$.Fe(1162417, arguments.callee, this, arguments);
                            arguments = J$.N(1162425, 'arguments', arguments, true, false, false);
                            db = J$.N(1162433, 'db', db, true, false, false);
                            command = J$.N(1162441, 'command', command, true, false, false);
                            options = J$.N(1162449, 'options', options, true, false, false);
                            callback = J$.N(1162457, 'callback', callback, true, false, false);
                            J$.N(1162465, 'namespace', namespace, false, false, false);
                            var namespace = J$.W(1162129, 'namespace', J$.F(1162121, J$.R(1162097, 'MongoDBNamespace', MongoDBNamespace, false, true), true)(J$.T(1162105, 'admin', 21, false), J$.T(1162113, '$cmd', 21, false)), namespace, false, false);
                            J$.M(1162409, J$.G(1162153, J$.G(1162145, J$.R(1162137, 'db', db, false, false), 's'), 'topology'), 'command', false)(J$.R(1162161, 'namespace', namespace, false, false), J$.R(1162169, 'command', command, false, false), J$.R(1162177, 'options', options, false, false), J$.T(1162401, function (err, result) {
                                jalangiLabel32:
                                    while (true) {
                                        try {
                                            J$.Fe(1162369, arguments.callee, this, arguments);
                                            arguments = J$.N(1162377, 'arguments', arguments, true, false, false);
                                            err = J$.N(1162385, 'err', err, true, false, false);
                                            result = J$.N(1162393, 'result', result, true, false, false);
                                            if (J$.C(71728, J$.C(71720, J$.G(1162193, J$.R(1162185, 'db', db, false, false), 'serverConfig')) ? J$.M(1162217, J$.G(1162209, J$.R(1162201, 'db', db, false, false), 'serverConfig'), 'isDestroyed', false)() : J$._())) {
                                                return J$.Rt(1162265, J$.F(1162257, J$.R(1162225, 'callback', callback, false, false), false)(J$.F(1162249, J$.R(1162233, 'MongoError', MongoError, false, true), true)(J$.T(1162241, 'topology was destroyed', 21, false))));
                                            }
                                            if (J$.C(71736, J$.R(1162273, 'err', err, false, false)))
                                                return J$.Rt(1162313, J$.F(1162305, J$.R(1162281, 'handleCallback', handleCallback, false, true), false)(J$.R(1162289, 'callback', callback, false, false), J$.R(1162297, 'err', err, false, false)));
                                            J$.F(1162361, J$.R(1162321, 'handleCallback', handleCallback, false, true), false)(J$.R(1162329, 'callback', callback, false, false), J$.T(1162337, null, 25, false), J$.G(1162353, J$.R(1162345, 'result', result, false, false), 'result'));
                                        } catch (J$e) {
                                            J$.Ex(1170201, J$e);
                                        } finally {
                                            if (J$.Fr(1170209))
                                                continue jalangiLabel32;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                        } catch (J$e) {
                            J$.Ex(1170217, J$e);
                        } finally {
                            if (J$.Fr(1170225))
                                continue jalangiLabel33;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function indexInformation(db, name, options, callback) {
                jalangiLabel36:
                    while (true) {
                        try {
                            J$.Fe(1163297, arguments.callee, this, arguments);
                            function processResults(indexes) {
                                jalangiLabel34:
                                    while (true) {
                                        try {
                                            J$.Fe(1162913, arguments.callee, this, arguments);
                                            arguments = J$.N(1162921, 'arguments', arguments, true, false, false);
                                            indexes = J$.N(1162929, 'indexes', indexes, true, false, false);
                                            J$.N(1162937, 'info', info, false, false, false);
                                            J$.N(1162945, 'i', i, false, false, false);
                                            J$.N(1162953, 'index', index, false, false, false);
                                            J$.N(1162961, '_name', _name, false, false, false);
                                            var info = J$.W(1162641, 'info', J$.T(1162633, {}, 11, false), info, false, false);
                                            for (var i = J$.W(1162657, 'i', J$.T(1162649, 0, 22, false), i, false, false); J$.C(71768, J$.B(114226, '<', J$.R(1162665, 'i', i, false, false), J$.G(1162681, J$.R(1162673, 'indexes', indexes, false, false), 'length'))); J$.B(114250, '-', i = J$.W(1162697, 'i', J$.B(114242, '+', J$.U(114234, '+', J$.R(1162689, 'i', i, false, false)), 1), i, false, false), 1)) {
                                                var index = J$.W(1162729, 'index', J$.G(1162721, J$.R(1162705, 'indexes', indexes, false, false), J$.R(1162713, 'i', i, false, false)), index, false, false);
                                                J$.P(1162769, J$.R(1162737, 'info', info, false, false), J$.G(1162753, J$.R(1162745, 'index', index, false, false), 'name'), J$.T(1162761, [], 10, false));
                                                for (var _name in J$.H(1162881, J$.G(1162785, J$.R(1162777, 'index', index, false, false), 'key'))) {
                                                    J$.N(1162889, '_name', _name, false, true, false);
                                                    {
                                                        {
                                                            J$.M(1162873, J$.G(1162817, J$.R(1162793, 'info', info, false, false), J$.G(1162809, J$.R(1162801, 'index', index, false, false), 'name')), 'push', false)(J$.T(1162865, [
                                                                J$.R(1162825, '_name', _name, false, false),
                                                                J$.G(1162857, J$.G(1162841, J$.R(1162833, 'index', index, false, false), 'key'), J$.R(1162849, '_name', _name, false, false))
                                                            ], 10, false));
                                                        }
                                                    }
                                                }
                                            }
                                            return J$.Rt(1162905, J$.R(1162897, 'info', info, false, false));
                                        } catch (J$e) {
                                            J$.Ex(1170233, J$e);
                                        } finally {
                                            if (J$.Fr(1170241))
                                                continue jalangiLabel34;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }
                            arguments = J$.N(1163305, 'arguments', arguments, true, false, false);
                            db = J$.N(1163313, 'db', db, true, false, false);
                            name = J$.N(1163321, 'name', name, true, false, false);
                            options = J$.N(1163329, 'options', options, true, false, false);
                            callback = J$.N(1163337, 'callback', callback, true, false, false);
                            J$.N(1163345, 'full', full, false, false, false);
                            processResults = J$.N(1163361, 'processResults', J$.T(1163353, processResults, 12, false), true, false, false);
                            var full = J$.W(1162537, 'full', J$.C(71744, J$.B(114218, '==', J$.G(1162489, J$.R(1162473, 'options', options, false, false), J$.T(1162481, 'full', 21, false)), J$.T(1162497, null, 25, false))) ? J$.T(1162505, false, 23, false) : J$.G(1162529, J$.R(1162513, 'options', options, false, false), J$.T(1162521, 'full', 21, false)), full, false, false);
                            if (J$.C(71760, J$.C(71752, J$.G(1162553, J$.R(1162545, 'db', db, false, false), 'serverConfig')) ? J$.M(1162577, J$.G(1162569, J$.R(1162561, 'db', db, false, false), 'serverConfig'), 'isDestroyed', false)() : J$._()))
                                return J$.Rt(1162625, J$.F(1162617, J$.R(1162585, 'callback', callback, false, false), false)(J$.F(1162609, J$.R(1162593, 'MongoError', MongoError, false, true), true)(J$.T(1162601, 'topology was destroyed', 21, false))));
                            J$.M(1163289, J$.M(1163001, J$.M(1162985, J$.R(1162969, 'db', db, false, false), 'collection', false)(J$.R(1162977, 'name', name, false, false)), 'listIndexes', false)(J$.R(1162993, 'options', options, false, false)), 'toArray', false)(J$.T(1163281, function (err, indexes) {
                                jalangiLabel35:
                                    while (true) {
                                        try {
                                            J$.Fe(1163249, arguments.callee, this, arguments);
                                            arguments = J$.N(1163257, 'arguments', arguments, true, false, false);
                                            err = J$.N(1163265, 'err', err, true, false, false);
                                            indexes = J$.N(1163273, 'indexes', indexes, true, false, false);
                                            if (J$.C(71776, J$.R(1163009, 'err', err, false, false)))
                                                return J$.Rt(1163057, J$.F(1163049, J$.R(1163017, 'callback', callback, false, false), false)(J$.F(1163041, J$.R(1163025, 'toError', toError, false, true), false)(J$.R(1163033, 'err', err, false, false))));
                                            if (J$.C(71784, J$.U(114258, '!', J$.M(1163081, J$.I(typeof Array === 'undefined' ? Array = J$.R(1163065, 'Array', undefined, true, true) : Array = J$.R(1163065, 'Array', Array, true, true)), 'isArray', false)(J$.R(1163073, 'indexes', indexes, false, false)))))
                                                return J$.Rt(1163129, J$.F(1163121, J$.R(1163089, 'handleCallback', handleCallback, false, true), false)(J$.R(1163097, 'callback', callback, false, false), J$.T(1163105, null, 25, false), J$.T(1163113, [], 10, false)));
                                            if (J$.C(71792, J$.R(1163137, 'full', full, false, false)))
                                                return J$.Rt(1163185, J$.F(1163177, J$.R(1163145, 'handleCallback', handleCallback, false, true), false)(J$.R(1163153, 'callback', callback, false, false), J$.T(1163161, null, 25, false), J$.R(1163169, 'indexes', indexes, false, false)));
                                            J$.F(1163241, J$.R(1163193, 'handleCallback', handleCallback, false, true), false)(J$.R(1163201, 'callback', callback, false, false), J$.T(1163209, null, 25, false), J$.F(1163233, J$.R(1163217, 'processResults', processResults, false, false), false)(J$.R(1163225, 'indexes', indexes, false, false)));
                                        } catch (J$e) {
                                            J$.Ex(1170249, J$e);
                                        } finally {
                                            if (J$.Fr(1170257))
                                                continue jalangiLabel35;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                        } catch (J$e) {
                            J$.Ex(1170265, J$e);
                        } finally {
                            if (J$.Fr(1170273))
                                continue jalangiLabel36;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function profilingInfo(db, options, callback) {
                jalangiLabel37:
                    while (true) {
                        try {
                            J$.Fe(1163481, arguments.callee, this, arguments);
                            arguments = J$.N(1163489, 'arguments', arguments, true, false, false);
                            db = J$.N(1163497, 'db', db, true, false, false);
                            options = J$.N(1163505, 'options', options, true, false, false);
                            callback = J$.N(1163513, 'callback', callback, true, false, false);
                            try {
                                J$.M(1163425, J$.M(1163409, J$.M(1163385, J$.R(1163369, 'db', db, false, false), 'collection', false)(J$.T(1163377, 'system.profile', 21, false)), 'find', false)(J$.T(1163393, {}, 11, false), J$.R(1163401, 'options', options, false, false)), 'toArray', false)(J$.R(1163417, 'callback', callback, false, false));
                            } catch (err) {
                                J$.N(1163473, 'err', err, false, false, true);
                                return J$.Rt(1163465, J$.F(1163457, J$.R(1163433, 'callback', callback, false, false), false)(J$.R(1163441, 'err', err, false, false), J$.T(1163449, null, 25, false)));
                            }
                        } catch (J$e) {
                            J$.Ex(1170281, J$e);
                        } finally {
                            if (J$.Fr(1170289))
                                continue jalangiLabel37;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function removeUser(db, username, options, callback) {
                jalangiLabel41:
                    while (true) {
                        try {
                            J$.Fe(1164281, arguments.callee, this, arguments);
                            arguments = J$.N(1164289, 'arguments', arguments, true, false, false);
                            db = J$.N(1164297, 'db', db, true, false, false);
                            username = J$.N(1164305, 'username', username, true, false, false);
                            options = J$.N(1164313, 'options', options, true, false, false);
                            callback = J$.N(1164321, 'callback', callback, true, false, false);
                            J$.N(1164329, 'Db', Db, false, false, false);
                            var Db = J$.W(1163537, 'Db', J$.F(1163529, J$.R(1163521, 'loadDb', loadDb, false, true), false)(), Db, false, false);
                            J$.F(1164273, J$.R(1163545, 'executeAuthRemoveUserCommand', executeAuthRemoveUserCommand, false, true), false)(J$.R(1163553, 'db', db, false, false), J$.R(1163561, 'username', username, false, false), J$.R(1163569, 'options', options, false, false), J$.T(1164265, function (err, result) {
                                jalangiLabel40:
                                    while (true) {
                                        try {
                                            J$.Fe(1164209, arguments.callee, this, arguments);
                                            arguments = J$.N(1164217, 'arguments', arguments, true, false, false);
                                            err = J$.N(1164225, 'err', err, true, false, false);
                                            result = J$.N(1164233, 'result', result, true, false, false);
                                            J$.N(1164241, 'finalOptions', finalOptions, false, false, false);
                                            J$.N(1164249, '_db', _db, false, false, false);
                                            J$.N(1164257, '_collection2', _collection2, false, false, false);
                                            if (J$.C(71824, J$.C(71800, J$.R(1163577, 'err', err, false, false)) ? J$.B(114274, '===', J$.G(1163593, J$.R(1163585, 'err', err, false, false), 'code'), J$.U(114266, '-', J$.T(1163601, 5000, 22, false))) : J$._())) {
                                                var finalOptions = J$.W(1163681, 'finalOptions', J$.F(1163673, J$.R(1163609, 'applyWriteConcern', applyWriteConcern, false, true), false)(J$.M(1163641, J$.I(typeof Object === 'undefined' ? Object = J$.R(1163617, 'Object', undefined, true, true) : Object = J$.R(1163617, 'Object', Object, true, true)), 'assign', false)(J$.T(1163625, {}, 11, false), J$.R(1163633, 'options', options, false, false)), J$.T(1163657, { db: J$.R(1163649, '_db', _db, false, false) }, 11, false), J$.R(1163665, 'options', options, false, false)), finalOptions, false, false);
                                                var _db = J$.W(1163793, '_db', J$.C(71808, J$.G(1163697, J$.R(1163689, 'options', options, false, false), 'dbName')) ? J$.F(1163777, J$.R(1163705, 'Db', Db, false, false), true)(J$.G(1163721, J$.R(1163713, 'options', options, false, false), 'dbName'), J$.G(1163745, J$.G(1163737, J$.R(1163729, '_db', _db, false, false), 's'), 'topology'), J$.G(1163769, J$.G(1163761, J$.R(1163753, '_db', _db, false, false), 's'), 'options')) : J$.R(1163785, '_db', _db, false, false), _db, false, false);
                                                var _collection2 = J$.W(1163833, '_collection2', J$.M(1163825, J$.R(1163801, '_db', _db, false, false), 'collection', false)(J$.G(1163817, J$.R(1163809, 'CONSTANTS', CONSTANTS, false, true), 'SYSTEM_USER_COLLECTION')), _collection2, false, false);
                                                J$.F(1164105, J$.R(1163841, 'findOne', findOne, false, true), false)(J$.R(1163849, '_collection2', _collection2, false, false), J$.T(1163865, { user: J$.R(1163857, 'username', username, false, false) }, 11, false), J$.R(1163873, 'finalOptions', finalOptions, false, false), J$.T(1164097, function (err, user) {
                                                    jalangiLabel39:
                                                        while (true) {
                                                            try {
                                                                J$.Fe(1164065, arguments.callee, this, arguments);
                                                                arguments = J$.N(1164073, 'arguments', arguments, true, false, false);
                                                                err = J$.N(1164081, 'err', err, true, false, false);
                                                                user = J$.N(1164089, 'user', user, true, false, false);
                                                                if (J$.C(71816, J$.B(114282, '==', J$.R(1163881, 'user', user, false, false), J$.T(1163889, null, 25, false))))
                                                                    return J$.Rt(1163937, J$.F(1163929, J$.R(1163897, 'handleCallback', handleCallback, false, true), false)(J$.R(1163905, 'callback', callback, false, false), J$.R(1163913, 'err', err, false, false), J$.T(1163921, false, 23, false)));
                                                                J$.F(1164057, J$.R(1163945, 'remove', remove, false, true), false)(J$.R(1163953, '_collection2', _collection2, false, false), J$.T(1163969, { user: J$.R(1163961, 'username', username, false, false) }, 11, false), J$.R(1163977, 'finalOptions', finalOptions, false, false), J$.T(1164049, function (err) {
                                                                    jalangiLabel38:
                                                                        while (true) {
                                                                            try {
                                                                                J$.Fe(1164025, arguments.callee, this, arguments);
                                                                                arguments = J$.N(1164033, 'arguments', arguments, true, false, false);
                                                                                err = J$.N(1164041, 'err', err, true, false, false);
                                                                                J$.F(1164017, J$.R(1163985, 'handleCallback', handleCallback, false, true), false)(J$.R(1163993, 'callback', callback, false, false), J$.R(1164001, 'err', err, false, false), J$.T(1164009, true, 23, false));
                                                                            } catch (J$e) {
                                                                                J$.Ex(1170297, J$e);
                                                                            } finally {
                                                                                if (J$.Fr(1170305))
                                                                                    continue jalangiLabel38;
                                                                                else
                                                                                    return J$.Ra();
                                                                            }
                                                                        }
                                                                }, 12, false));
                                                            } catch (J$e) {
                                                                J$.Ex(1170313, J$e);
                                                            } finally {
                                                                if (J$.Fr(1170321))
                                                                    continue jalangiLabel39;
                                                                else
                                                                    return J$.Ra();
                                                            }
                                                        }
                                                }, 12, false));
                                                return J$.Rt(1164113, undefined);
                                            }
                                            if (J$.C(71832, J$.R(1164121, 'err', err, false, false)))
                                                return J$.Rt(1164161, J$.F(1164153, J$.R(1164129, 'handleCallback', handleCallback, false, true), false)(J$.R(1164137, 'callback', callback, false, false), J$.R(1164145, 'err', err, false, false)));
                                            J$.F(1164201, J$.R(1164169, 'handleCallback', handleCallback, false, true), false)(J$.R(1164177, 'callback', callback, false, false), J$.R(1164185, 'err', err, false, false), J$.R(1164193, 'result', result, false, false));
                                        } catch (J$e) {
                                            J$.Ex(1170329, J$e);
                                        } finally {
                                            if (J$.Fr(1170337))
                                                continue jalangiLabel40;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                        } catch (J$e) {
                            J$.Ex(1170345, J$e);
                        } finally {
                            if (J$.Fr(1170353))
                                continue jalangiLabel41;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function validateDatabaseName(databaseName) {
                jalangiLabel42:
                    while (true) {
                        try {
                            J$.Fe(1164713, arguments.callee, this, arguments);
                            arguments = J$.N(1164721, 'arguments', arguments, true, false, false);
                            databaseName = J$.N(1164729, 'databaseName', databaseName, true, false, false);
                            J$.N(1164737, 'invalidChars', invalidChars, false, false, false);
                            J$.N(1164745, 'i', i, false, false, false);
                            if (J$.C(71840, J$.B(114298, '!==', J$.U(114290, 'typeof', J$.R(1164337, 'databaseName', databaseName, false, false)), J$.T(1164345, 'string', 21, false))))
                                throw J$.M(1164385, J$.R(1164353, 'MongoError', MongoError, false, true), 'create', false)(J$.T(1164377, {
                                    message: J$.T(1164361, 'database name must be a string', 21, false),
                                    driver: J$.T(1164369, true, 23, false)
                                }, 11, false));
                            if (J$.C(71848, J$.B(114306, '===', J$.G(1164401, J$.R(1164393, 'databaseName', databaseName, false, false), 'length'), J$.T(1164409, 0, 22, false))))
                                throw J$.M(1164449, J$.R(1164417, 'MongoError', MongoError, false, true), 'create', false)(J$.T(1164441, {
                                    message: J$.T(1164425, 'database name cannot be the empty string', 21, false),
                                    driver: J$.T(1164433, true, 23, false)
                                }, 11, false));
                            if (J$.C(71856, J$.B(114314, '===', J$.R(1164457, 'databaseName', databaseName, false, false), J$.T(1164465, '$external', 21, false))))
                                return J$.Rt(1164473, undefined);
                            var invalidChars = J$.W(1164529, 'invalidChars', J$.T(1164521, [
                                J$.T(1164481, ' ', 21, false),
                                J$.T(1164489, '.', 21, false),
                                J$.T(1164497, '$', 21, false),
                                J$.T(1164505, '/', 21, false),
                                J$.T(1164513, '\\', 21, false)
                            ], 10, false), invalidChars, false, false);
                            for (var i = J$.W(1164545, 'i', J$.T(1164537, 0, 22, false), i, false, false); J$.C(71872, J$.B(114322, '<', J$.R(1164553, 'i', i, false, false), J$.G(1164569, J$.R(1164561, 'invalidChars', invalidChars, false, false), 'length'))); J$.B(114346, '-', i = J$.W(1164585, 'i', J$.B(114338, '+', J$.U(114330, '+', J$.R(1164577, 'i', i, false, false)), 1), i, false, false), 1)) {
                                if (J$.C(71864, J$.B(114362, '!==', J$.M(1164625, J$.R(1164593, 'databaseName', databaseName, false, false), 'indexOf', false)(J$.G(1164617, J$.R(1164601, 'invalidChars', invalidChars, false, false), J$.R(1164609, 'i', i, false, false))), J$.U(114354, '-', J$.T(1164633, 1, 22, false)))))
                                    throw J$.M(1164705, J$.R(1164641, 'MongoError', MongoError, false, true), 'create', false)(J$.T(1164697, {
                                        message: J$.B(114378, '+', J$.B(114370, '+', J$.T(1164649, 'database names cannot contain the character \'', 21, false), J$.G(1164673, J$.R(1164657, 'invalidChars', invalidChars, false, false), J$.R(1164665, 'i', i, false, false))), J$.T(1164681, '\'', 21, false)),
                                        driver: J$.T(1164689, true, 23, false)
                                    }, 11, false));
                            }
                        } catch (J$e) {
                            J$.Ex(1170361, J$e);
                        } finally {
                            if (J$.Fr(1170369))
                                continue jalangiLabel42;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function createCreateIndexCommand(db, name, fieldOrSpec, options) {
                jalangiLabel43:
                    while (true) {
                        try {
                            J$.Fe(1165449, arguments.callee, this, arguments);
                            arguments = J$.N(1165457, 'arguments', arguments, true, false, false);
                            db = J$.N(1165465, 'db', db, true, false, false);
                            name = J$.N(1165473, 'name', name, true, false, false);
                            fieldOrSpec = J$.N(1165481, 'fieldOrSpec', fieldOrSpec, true, false, false);
                            options = J$.N(1165489, 'options', options, true, false, false);
                            J$.N(1165497, 'indexParameters', indexParameters, false, false, false);
                            J$.N(1165505, 'fieldHash', fieldHash, false, false, false);
                            J$.N(1165513, 'indexName', indexName, false, false, false);
                            J$.N(1165521, 'selector', selector, false, false, false);
                            J$.N(1165529, 'finalUnique', finalUnique, false, false, false);
                            J$.N(1165537, 'keysToOmit', keysToOmit, false, false, false);
                            J$.N(1165545, 'optionName', optionName, false, false, false);
                            J$.N(1165553, 'removeKeys', removeKeys, false, false, false);
                            J$.N(1165561, 'i', i, false, false, false);
                            var indexParameters = J$.W(1164777, 'indexParameters', J$.F(1164769, J$.R(1164753, 'parseIndexOptions', parseIndexOptions, false, true), false)(J$.R(1164761, 'fieldOrSpec', fieldOrSpec, false, false)), indexParameters, false, false);
                            var fieldHash = J$.W(1164801, 'fieldHash', J$.G(1164793, J$.R(1164785, 'indexParameters', indexParameters, false, false), 'fieldHash'), fieldHash, false, false);
                            var indexName = J$.W(1164865, 'indexName', J$.C(71880, J$.B(114394, '===', J$.U(114386, 'typeof', J$.G(1164817, J$.R(1164809, 'options', options, false, false), 'name')), J$.T(1164825, 'string', 21, false))) ? J$.G(1164841, J$.R(1164833, 'options', options, false, false), 'name') : J$.G(1164857, J$.R(1164849, 'indexParameters', indexParameters, false, false), 'name'), indexName, false, false);
                            var selector = J$.W(1164945, 'selector', J$.T(1164937, {
                                ns: J$.M(1164913, J$.M(1164905, J$.G(1164889, J$.G(1164881, J$.R(1164873, 'db', db, false, false), 's'), 'namespace'), 'withCollection', false)(J$.R(1164897, 'name', name, false, false)), 'toString', false)(),
                                key: J$.R(1164921, 'fieldHash', fieldHash, false, false),
                                name: J$.R(1164929, 'indexName', indexName, false, false)
                            }, 11, false), selector, false, false);
                            var finalUnique = J$.W(1165017, 'finalUnique', J$.C(71896, J$.C(71888, J$.B(114402, '==', J$.R(1164953, 'options', options, false, false), J$.T(1164961, null, 25, false))) ? J$._() : J$.B(114410, '===', J$.T(1164969, 'object', 21, false), J$.F(1164993, J$.R(1164977, '_typeof', _typeof, false, true), false)(J$.R(1164985, 'options', options, false, false)))) ? J$.T(1165001, false, 23, false) : J$.R(1165009, 'options', options, false, false), finalUnique, false, false);
                            options = J$.W(1165073, 'options', J$.C(71912, J$.C(71904, J$.B(114418, '==', J$.R(1165025, 'options', options, false, false), J$.T(1165033, null, 25, false))) ? J$._() : J$.B(114434, '===', J$.U(114426, 'typeof', J$.R(1165041, 'options', options, false, false)), J$.T(1165049, 'boolean', 21, false))) ? J$.T(1165057, {}, 11, false) : J$.R(1165065, 'options', options, false, false), options, false, false);
                            var keysToOmit = J$.W(1165105, 'keysToOmit', J$.M(1165097, J$.I(typeof Object === 'undefined' ? Object = J$.R(1165081, 'Object', undefined, true, true) : Object = J$.R(1165081, 'Object', Object, true, true)), 'keys', false)(J$.R(1165089, 'selector', selector, false, false)), keysToOmit, false, false);
                            for (var optionName in J$.H(1165201, J$.R(1165113, 'options', options, false, false))) {
                                J$.N(1165209, 'optionName', optionName, false, true, false);
                                {
                                    {
                                        if (J$.C(71920, J$.B(114450, '===', J$.M(1165137, J$.R(1165121, 'keysToOmit', keysToOmit, false, false), 'indexOf', false)(J$.R(1165129, 'optionName', optionName, false, false)), J$.U(114442, '-', J$.T(1165145, 1, 22, false))))) {
                                            J$.P(1165193, J$.R(1165153, 'selector', selector, false, false), J$.R(1165161, 'optionName', optionName, false, false), J$.G(1165185, J$.R(1165169, 'options', options, false, false), J$.R(1165177, 'optionName', optionName, false, false)));
                                        }
                                    }
                                }
                            }
                            if (J$.C(71928, J$.B(114458, '==', J$.G(1165233, J$.R(1165217, 'selector', selector, false, false), J$.T(1165225, 'unique', 21, false)), J$.T(1165241, null, 25, false))))
                                J$.P(1165273, J$.R(1165249, 'selector', selector, false, false), J$.T(1165257, 'unique', 21, false), J$.R(1165265, 'finalUnique', finalUnique, false, false));
                            var removeKeys = J$.W(1165337, 'removeKeys', J$.T(1165329, [
                                J$.T(1165281, 'w', 21, false),
                                J$.T(1165289, 'wtimeout', 21, false),
                                J$.T(1165297, 'j', 21, false),
                                J$.T(1165305, 'fsync', 21, false),
                                J$.T(1165313, 'readPreference', 21, false),
                                J$.T(1165321, 'session', 21, false)
                            ], 10, false), removeKeys, false, false);
                            for (var i = J$.W(1165353, 'i', J$.T(1165345, 0, 22, false), i, false, false); J$.C(71936, J$.B(114466, '<', J$.R(1165361, 'i', i, false, false), J$.G(1165377, J$.R(1165369, 'removeKeys', removeKeys, false, false), 'length'))); J$.B(114490, '-', i = J$.W(1165393, 'i', J$.B(114482, '+', J$.U(114474, '+', J$.R(1165385, 'i', i, false, false)), 1), i, false, false), 1)) {
                                J$.B(114498, 'delete', J$.R(1165401, 'selector', selector, false, false), J$.G(1165425, J$.R(1165409, 'removeKeys', removeKeys, false, false), J$.R(1165417, 'i', i, false, false)));
                            }
                            return J$.Rt(1165441, J$.R(1165433, 'selector', selector, false, false));
                        } catch (J$e) {
                            J$.Ex(1170377, J$e);
                        } finally {
                            if (J$.Fr(1170385))
                                continue jalangiLabel43;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function createIndexUsingCreateIndexes(db, name, fieldOrSpec, options, callback) {
                jalangiLabel45:
                    while (true) {
                        try {
                            J$.Fe(1166505, arguments.callee, this, arguments);
                            arguments = J$.N(1166513, 'arguments', arguments, true, false, false);
                            db = J$.N(1166521, 'db', db, true, false, false);
                            name = J$.N(1166529, 'name', name, true, false, false);
                            fieldOrSpec = J$.N(1166537, 'fieldOrSpec', fieldOrSpec, true, false, false);
                            options = J$.N(1166545, 'options', options, true, false, false);
                            callback = J$.N(1166553, 'callback', callback, true, false, false);
                            J$.N(1166561, 'indexParameters', indexParameters, false, false, false);
                            J$.N(1166569, 'indexName', indexName, false, false, false);
                            J$.N(1166577, 'indexes', indexes, false, false, false);
                            J$.N(1166585, 'keysToOmit', keysToOmit, false, false, false);
                            J$.N(1166593, 'optionName', optionName, false, false, false);
                            J$.N(1166601, 'capabilities', capabilities, false, false, false);
                            J$.N(1166609, 'error', error, false, false, false);
                            J$.N(1166617, 'cmd', cmd, false, false, false);
                            var indexParameters = J$.W(1165593, 'indexParameters', J$.F(1165585, J$.R(1165569, 'parseIndexOptions', parseIndexOptions, false, true), false)(J$.R(1165577, 'fieldOrSpec', fieldOrSpec, false, false)), indexParameters, false, false);
                            var indexName = J$.W(1165657, 'indexName', J$.C(71944, J$.B(114514, '===', J$.U(114506, 'typeof', J$.G(1165609, J$.R(1165601, 'options', options, false, false), 'name')), J$.T(1165617, 'string', 21, false))) ? J$.G(1165633, J$.R(1165625, 'options', options, false, false), 'name') : J$.G(1165649, J$.R(1165641, 'indexParameters', indexParameters, false, false), 'name'), indexName, false, false);
                            var indexes = J$.W(1165705, 'indexes', J$.T(1165697, [J$.T(1165689, {
                                    name: J$.R(1165665, 'indexName', indexName, false, false),
                                    key: J$.G(1165681, J$.R(1165673, 'indexParameters', indexParameters, false, false), 'fieldHash')
                                }, 11, false)], 10, false), indexes, false, false);
                            var keysToOmit = J$.W(1165825, 'keysToOmit', J$.M(1165817, J$.M(1165745, J$.I(typeof Object === 'undefined' ? Object = J$.R(1165713, 'Object', undefined, true, true) : Object = J$.R(1165713, 'Object', Object, true, true)), 'keys', false)(J$.G(1165737, J$.R(1165721, 'indexes', indexes, false, false), J$.T(1165729, 0, 22, false))), 'concat', false)(J$.T(1165809, [
                                J$.T(1165753, 'writeConcern', 21, false),
                                J$.T(1165761, 'w', 21, false),
                                J$.T(1165769, 'wtimeout', 21, false),
                                J$.T(1165777, 'j', 21, false),
                                J$.T(1165785, 'fsync', 21, false),
                                J$.T(1165793, 'readPreference', 21, false),
                                J$.T(1165801, 'session', 21, false)
                            ], 10, false)), keysToOmit, false, false);
                            for (var optionName in J$.H(1165937, J$.R(1165833, 'options', options, false, false))) {
                                J$.N(1165945, 'optionName', optionName, false, true, false);
                                {
                                    {
                                        if (J$.C(71952, J$.B(114530, '===', J$.M(1165857, J$.R(1165841, 'keysToOmit', keysToOmit, false, false), 'indexOf', false)(J$.R(1165849, 'optionName', optionName, false, false)), J$.U(114522, '-', J$.T(1165865, 1, 22, false))))) {
                                            J$.P(1165929, J$.G(1165889, J$.R(1165873, 'indexes', indexes, false, false), J$.T(1165881, 0, 22, false)), J$.R(1165897, 'optionName', optionName, false, false), J$.G(1165921, J$.R(1165905, 'options', options, false, false), J$.R(1165913, 'optionName', optionName, false, false)));
                                        }
                                    }
                                }
                            }
                            var capabilities = J$.W(1165985, 'capabilities', J$.M(1165977, J$.G(1165969, J$.G(1165961, J$.R(1165953, 'db', db, false, false), 's'), 'topology'), 'capabilities', false)(), capabilities, false, false);
                            if (J$.C(71976, J$.C(71968, J$.C(71960, J$.G(1166017, J$.G(1166009, J$.R(1165993, 'indexes', indexes, false, false), J$.T(1166001, 0, 22, false)), 'collation')) ? J$.R(1166025, 'capabilities', capabilities, false, false) : J$._()) ? J$.U(114538, '!', J$.G(1166041, J$.R(1166033, 'capabilities', capabilities, false, false), 'commandsTakeCollation')) : J$._())) {
                                var error = J$.W(1166073, 'error', J$.F(1166065, J$.R(1166049, 'MongoError', MongoError, false, true), true)(J$.T(1166057, 'server/primary/mongos does not support collation', 21, false)), error, false, false);
                                J$.P(1166097, J$.R(1166081, 'error', error, false, false), 'code', J$.T(1166089, 67, 22, false));
                                return J$.Rt(1166129, J$.F(1166121, J$.R(1166105, 'callback', callback, false, false), false)(J$.R(1166113, 'error', error, false, false)));
                            }
                            var cmd = J$.W(1166201, 'cmd', J$.F(1166193, J$.R(1166137, 'applyWriteConcern', applyWriteConcern, false, true), false)(J$.T(1166161, {
                                createIndexes: J$.R(1166145, 'name', name, false, false),
                                indexes: J$.R(1166153, 'indexes', indexes, false, false)
                            }, 11, false), J$.T(1166177, { db: J$.R(1166169, 'db', db, false, false) }, 11, false), J$.R(1166185, 'options', options, false, false)), cmd, false, false);
                            J$.P(1166233, J$.R(1166209, 'options', options, false, false), 'readPreference', J$.G(1166225, J$.R(1166217, 'ReadPreference', ReadPreference, false, true), 'PRIMARY'));
                            J$.F(1166497, J$.R(1166241, 'executeCommand', executeCommand, false, true), false)(J$.R(1166249, 'db', db, false, false), J$.R(1166257, 'cmd', cmd, false, false), J$.R(1166265, 'options', options, false, false), J$.T(1166489, function (err, result) {
                                jalangiLabel44:
                                    while (true) {
                                        try {
                                            J$.Fe(1166457, arguments.callee, this, arguments);
                                            arguments = J$.N(1166465, 'arguments', arguments, true, false, false);
                                            err = J$.N(1166473, 'err', err, true, false, false);
                                            result = J$.N(1166481, 'result', result, true, false, false);
                                            if (J$.C(71984, J$.R(1166273, 'err', err, false, false)))
                                                return J$.Rt(1166321, J$.F(1166313, J$.R(1166281, 'handleCallback', handleCallback, false, true), false)(J$.R(1166289, 'callback', callback, false, false), J$.R(1166297, 'err', err, false, false), J$.T(1166305, null, 25, false)));
                                            if (J$.C(71992, J$.B(114546, '===', J$.G(1166337, J$.R(1166329, 'result', result, false, false), 'ok'), J$.T(1166345, 0, 22, false))))
                                                return J$.Rt(1166409, J$.F(1166401, J$.R(1166353, 'handleCallback', handleCallback, false, true), false)(J$.R(1166361, 'callback', callback, false, false), J$.F(1166385, J$.R(1166369, 'toError', toError, false, true), false)(J$.R(1166377, 'result', result, false, false)), J$.T(1166393, null, 25, false)));
                                            J$.F(1166449, J$.R(1166417, 'handleCallback', handleCallback, false, true), false)(J$.R(1166425, 'callback', callback, false, false), J$.T(1166433, null, 25, false), J$.R(1166441, 'indexName', indexName, false, false));
                                        } catch (J$e) {
                                            J$.Ex(1170393, J$e);
                                        } finally {
                                            if (J$.Fr(1170401))
                                                continue jalangiLabel44;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                        } catch (J$e) {
                            J$.Ex(1170409, J$e);
                        } finally {
                            if (J$.Fr(1170417))
                                continue jalangiLabel45;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function executeAuthCreateUserCommand(db, username, password, options, callback) {
                jalangiLabel47:
                    while (true) {
                        try {
                            J$.Fe(1168097, arguments.callee, this, arguments);
                            arguments = J$.N(1168105, 'arguments', arguments, true, false, false);
                            db = J$.N(1168113, 'db', db, true, false, false);
                            username = J$.N(1168121, 'username', username, true, false, false);
                            password = J$.N(1168129, 'password', password, true, false, false);
                            options = J$.N(1168137, 'options', options, true, false, false);
                            callback = J$.N(1168145, 'callback', callback, true, false, false);
                            J$.N(1168153, 'customData', customData, false, false, false);
                            J$.N(1168161, 'roles', roles, false, false, false);
                            J$.N(1168169, 'maxTimeMS', maxTimeMS, false, false, false);
                            J$.N(1168177, 'commandOptions', commandOptions, false, false, false);
                            J$.N(1168185, 'digestPassword', digestPassword, false, false, false);
                            J$.N(1168193, 'command', command, false, false, false);
                            J$.N(1168201, 'userPassword', userPassword, false, false, false);
                            J$.N(1168209, 'md5', md5, false, false, false);
                            if (J$.C(72016, J$.C(72008, J$.C(72000, J$.B(114562, '===', J$.U(114554, 'typeof', J$.R(1166625, 'username', username, false, false)), J$.T(1166633, 'string', 21, false))) ? J$.B(114570, '!=', J$.R(1166641, 'password', password, false, false), J$.T(1166649, null, 25, false)) : J$._()) ? J$.B(114578, '===', J$.F(1166673, J$.R(1166657, '_typeof', _typeof, false, true), false)(J$.R(1166665, 'password', password, false, false)), J$.T(1166681, 'object', 21, false)) : J$._())) {
                                options = J$.W(1166697, 'options', J$.R(1166689, 'password', password, false, false), options, false, false);
                                password = J$.W(1166713, 'password', J$.T(1166705, null, 25, false), password, false, false);
                            }
                            if (J$.C(72024, J$.B(114594, '===', J$.U(114586, 'typeof', J$.R(1166721, 'options', options, false, false)), J$.T(1166729, 'function', 21, false)))) {
                                callback = J$.W(1166745, 'callback', J$.R(1166737, 'options', options, false, false), callback, false, false);
                                options = J$.W(1166761, 'options', J$.T(1166753, {}, 11, false), options, false, false);
                            }
                            if (J$.C(72032, J$.B(114602, '!=', J$.G(1166777, J$.R(1166769, 'options', options, false, false), 'digestPassword'), J$.T(1166785, null, 25, false)))) {
                                return J$.Rt(1166833, J$.F(1166825, J$.R(1166793, 'callback', callback, false, false), false)(J$.F(1166817, J$.R(1166801, 'toError', toError, false, true), false)(J$.T(1166809, 'The digestPassword option is not supported via add_user. Please use db.command(\'createUser\', ...) instead for this option.', 21, false))));
                            }
                            var customData = J$.W(1166889, 'customData', J$.C(72040, J$.B(114610, '!=', J$.G(1166849, J$.R(1166841, 'options', options, false, false), 'customData'), J$.T(1166857, null, 25, false))) ? J$.G(1166873, J$.R(1166865, 'options', options, false, false), 'customData') : J$.T(1166881, {}, 11, false), customData, false, false);
                            var roles = J$.W(1166953, 'roles', J$.C(72048, J$.M(1166921, J$.I(typeof Array === 'undefined' ? Array = J$.R(1166897, 'Array', undefined, true, true) : Array = J$.R(1166897, 'Array', Array, true, true)), 'isArray', false)(J$.G(1166913, J$.R(1166905, 'options', options, false, false), 'roles'))) ? J$.G(1166937, J$.R(1166929, 'options', options, false, false), 'roles') : J$.T(1166945, [], 10, false), roles, false, false);
                            var maxTimeMS = J$.W(1167009, 'maxTimeMS', J$.C(72056, J$.B(114626, '===', J$.U(114618, 'typeof', J$.G(1166969, J$.R(1166961, 'options', options, false, false), 'maxTimeMS')), J$.T(1166977, 'number', 21, false))) ? J$.G(1166993, J$.R(1166985, 'options', options, false, false), 'maxTimeMS') : J$.T(1167001, null, 25, false), maxTimeMS, false, false);
                            if (J$.C(72064, J$.B(114634, '===', J$.G(1167025, J$.R(1167017, 'roles', roles, false, false), 'length'), J$.T(1167033, 0, 22, false)))) {
                                J$.M(1167057, J$.I(typeof console === 'undefined' ? console = J$.R(1167041, 'console', undefined, true, true) : console = J$.R(1167041, 'console', console, true, true)), 'log', false)(J$.T(1167049, 'Creating a user without roles is deprecated in MongoDB >= 2.6', 21, false));
                            }
                            var commandOptions = J$.W(1167081, 'commandOptions', J$.T(1167073, { writeCommand: J$.T(1167065, true, 23, false) }, 11, false), commandOptions, false, false);
                            if (J$.C(72072, J$.G(1167105, J$.R(1167089, 'options', options, false, false), J$.T(1167097, 'dbName', 21, false))))
                                J$.P(1167145, J$.R(1167113, 'commandOptions', commandOptions, false, false), 'dbName', J$.G(1167137, J$.R(1167121, 'options', options, false, false), J$.T(1167129, 'dbName', 21, false)));
                            if (J$.C(72080, J$.B(114642, '!=', J$.R(1167153, 'maxTimeMS', maxTimeMS, false, false), J$.T(1167161, null, 25, false))))
                                J$.P(1167185, J$.R(1167169, 'commandOptions', commandOptions, false, false), 'maxTimeMS', J$.R(1167177, 'maxTimeMS', maxTimeMS, false, false));
                            if (J$.C(72112, J$.C(72096, J$.C(72088, J$.B(114650, '===', J$.M(1167209, J$.G(1167201, J$.R(1167193, 'db', db, false, false), 'databaseName'), 'toLowerCase', false)(), J$.T(1167217, 'admin', 21, false))) ? J$._() : J$.B(114658, '===', J$.G(1167233, J$.R(1167225, 'options', options, false, false), 'dbName'), J$.T(1167241, 'admin', 21, false))) ? J$.U(114666, '!', J$.M(1167273, J$.I(typeof Array === 'undefined' ? Array = J$.R(1167249, 'Array', undefined, true, true) : Array = J$.R(1167249, 'Array', Array, true, true)), 'isArray', false)(J$.G(1167265, J$.R(1167257, 'options', options, false, false), 'roles'))) : J$._())) {
                                roles = J$.W(1167297, 'roles', J$.T(1167289, [J$.T(1167281, 'root', 21, false)], 10, false), roles, false, false);
                            } else if (J$.C(72104, J$.U(114674, '!', J$.M(1167329, J$.I(typeof Array === 'undefined' ? Array = J$.R(1167305, 'Array', undefined, true, true) : Array = J$.R(1167305, 'Array', Array, true, true)), 'isArray', false)(J$.G(1167321, J$.R(1167313, 'options', options, false, false), 'roles'))))) {
                                roles = J$.W(1167353, 'roles', J$.T(1167345, [J$.T(1167337, 'dbOwner', 21, false)], 10, false), roles, false, false);
                            }
                            var digestPassword = J$.W(1167409, 'digestPassword', J$.B(114682, '>=', J$.G(1167393, J$.M(1167385, J$.G(1167377, J$.G(1167369, J$.R(1167361, 'db', db, false, false), 's'), 'topology'), 'lastIsMaster', false)(), 'maxWireVersion'), J$.T(1167401, 7, 22, false)), digestPassword, false, false);
                            var command = J$.W(1167457, 'command', J$.T(1167449, {
                                createUser: J$.R(1167417, 'username', username, false, false),
                                customData: J$.R(1167425, 'customData', customData, false, false),
                                roles: J$.R(1167433, 'roles', roles, false, false),
                                digestPassword: J$.R(1167441, 'digestPassword', digestPassword, false, false)
                            }, 11, false), command, false, false);
                            command = J$.W(1167513, 'command', J$.F(1167505, J$.R(1167465, 'applyWriteConcern', applyWriteConcern, false, true), false)(J$.R(1167473, 'command', command, false, false), J$.T(1167489, { db: J$.R(1167481, 'db', db, false, false) }, 11, false), J$.R(1167497, 'options', options, false, false)), command, false, false);
                            var userPassword = J$.W(1167529, 'userPassword', J$.R(1167521, 'password', password, false, false), userPassword, false, false);
                            if (J$.C(72120, J$.U(114690, '!', J$.R(1167537, 'digestPassword', digestPassword, false, false)))) {
                                var md5 = J$.W(1167569, 'md5', J$.M(1167561, J$.R(1167545, 'crypto', crypto, false, true), 'createHash', false)(J$.T(1167553, 'md5', 21, false)), md5, false, false);
                                J$.M(1167609, J$.R(1167577, 'md5', md5, false, false), 'update', false)(J$.B(114706, '+', J$.B(114698, '+', J$.R(1167585, 'username', username, false, false), J$.T(1167593, ':mongo:', 21, false)), J$.R(1167601, 'password', password, false, false)));
                                userPassword = J$.W(1167641, 'userPassword', J$.M(1167633, J$.R(1167617, 'md5', md5, false, false), 'digest', false)(J$.T(1167625, 'hex', 21, false)), userPassword, false, false);
                            }
                            if (J$.C(72128, J$.B(114722, '===', J$.U(114714, 'typeof', J$.R(1167649, 'password', password, false, false)), J$.T(1167657, 'string', 21, false)))) {
                                J$.P(1167681, J$.R(1167665, 'command', command, false, false), 'pwd', J$.R(1167673, 'userPassword', userPassword, false, false));
                            }
                            J$.P(1167713, J$.R(1167689, 'commandOptions', commandOptions, false, false), 'readPreference', J$.G(1167705, J$.R(1167697, 'ReadPreference', ReadPreference, false, true), 'primary'));
                            J$.F(1168089, J$.R(1167721, 'executeCommand', executeCommand, false, true), false)(J$.R(1167729, 'db', db, false, false), J$.R(1167737, 'command', command, false, false), J$.R(1167745, 'commandOptions', commandOptions, false, false), J$.T(1168081, function (err, result) {
                                jalangiLabel46:
                                    while (true) {
                                        try {
                                            J$.Fe(1168049, arguments.callee, this, arguments);
                                            arguments = J$.N(1168057, 'arguments', arguments, true, false, false);
                                            err = J$.N(1168065, 'err', err, true, false, false);
                                            result = J$.N(1168073, 'result', result, true, false, false);
                                            if (J$.C(72152, J$.C(72144, J$.C(72136, J$.R(1167753, 'err', err, false, false)) ? J$.B(114730, '===', J$.G(1167769, J$.R(1167761, 'err', err, false, false), 'ok'), J$.T(1167777, 0, 22, false)) : J$._()) ? J$.B(114738, '===', J$.G(1167793, J$.R(1167785, 'err', err, false, false), 'code'), J$.T(1167801, undefined, 24, false)) : J$._()))
                                                return J$.Rt(1167857, J$.F(1167849, J$.R(1167809, 'handleCallback', handleCallback, false, true), false)(J$.R(1167817, 'callback', callback, false, false), J$.T(1167833, { code: J$.U(114746, '-', J$.T(1167825, 5000, 22, false)) }, 11, false), J$.T(1167841, null, 25, false)));
                                            if (J$.C(72160, J$.R(1167865, 'err', err, false, false)))
                                                return J$.Rt(1167913, J$.F(1167905, J$.R(1167873, 'handleCallback', handleCallback, false, true), false)(J$.R(1167881, 'callback', callback, false, false), J$.R(1167889, 'err', err, false, false), J$.T(1167897, null, 25, false)));
                                            J$.F(1168041, J$.R(1167921, 'handleCallback', handleCallback, false, true), false)(J$.R(1167929, 'callback', callback, false, false), J$.C(72168, J$.U(114754, '!', J$.G(1167945, J$.R(1167937, 'result', result, false, false), 'ok'))) ? J$.F(1167969, J$.R(1167953, 'toError', toError, false, true), false)(J$.R(1167961, 'result', result, false, false)) : J$.T(1167977, null, 25, false), J$.C(72176, J$.G(1167993, J$.R(1167985, 'result', result, false, false), 'ok')) ? J$.T(1168025, [J$.T(1168017, {
                                                    user: J$.R(1168001, 'username', username, false, false),
                                                    pwd: J$.T(1168009, '', 21, false)
                                                }, 11, false)], 10, false) : J$.T(1168033, null, 25, false));
                                        } catch (J$e) {
                                            J$.Ex(1170425, J$e);
                                        } finally {
                                            if (J$.Fr(1170433))
                                                continue jalangiLabel46;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                        } catch (J$e) {
                            J$.Ex(1170441, J$e);
                        } finally {
                            if (J$.Fr(1170449))
                                continue jalangiLabel47;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function executeAuthRemoveUserCommand(db, username, options, callback) {
                jalangiLabel49:
                    while (true) {
                        try {
                            J$.Fe(1168969, arguments.callee, this, arguments);
                            arguments = J$.N(1168977, 'arguments', arguments, true, false, false);
                            db = J$.N(1168985, 'db', db, true, false, false);
                            username = J$.N(1168993, 'username', username, true, false, false);
                            options = J$.N(1169001, 'options', options, true, false, false);
                            callback = J$.N(1169009, 'callback', callback, true, false, false);
                            J$.N(1169017, 'commandOptions', commandOptions, false, false, false);
                            J$.N(1169025, 'maxTimeMS', maxTimeMS, false, false, false);
                            J$.N(1169033, 'command', command, false, false, false);
                            if (J$.C(72184, J$.B(114770, '===', J$.U(114762, 'typeof', J$.R(1168217, 'options', options, false, false)), J$.T(1168225, 'function', 21, false))))
                                callback = J$.W(1168241, 'callback', J$.R(1168233, 'options', options, false, false), callback, false, false), options = J$.W(1168257, 'options', J$.T(1168249, {}, 11, false), options, false, false);
                            options = J$.W(1168281, 'options', J$.C(72192, J$.R(1168265, 'options', options, false, false)) ? J$._() : J$.T(1168273, {}, 11, false), options, false, false);
                            if (J$.C(72208, J$.C(72200, J$.G(1168297, J$.R(1168289, 'db', db, false, false), 'serverConfig')) ? J$.M(1168321, J$.G(1168313, J$.R(1168305, 'db', db, false, false), 'serverConfig'), 'isDestroyed', false)() : J$._()))
                                return J$.Rt(1168369, J$.F(1168361, J$.R(1168329, 'callback', callback, false, false), false)(J$.F(1168353, J$.R(1168337, 'MongoError', MongoError, false, true), true)(J$.T(1168345, 'topology was destroyed', 21, false))));
                            var commandOptions = J$.W(1168393, 'commandOptions', J$.T(1168385, { writeCommand: J$.T(1168377, true, 23, false) }, 11, false), commandOptions, false, false);
                            if (J$.C(72216, J$.G(1168417, J$.R(1168401, 'options', options, false, false), J$.T(1168409, 'dbName', 21, false))))
                                J$.P(1168457, J$.R(1168425, 'commandOptions', commandOptions, false, false), 'dbName', J$.G(1168449, J$.R(1168433, 'options', options, false, false), J$.T(1168441, 'dbName', 21, false)));
                            var maxTimeMS = J$.W(1168513, 'maxTimeMS', J$.C(72224, J$.B(114786, '===', J$.U(114778, 'typeof', J$.G(1168473, J$.R(1168465, 'options', options, false, false), 'maxTimeMS')), J$.T(1168481, 'number', 21, false))) ? J$.G(1168497, J$.R(1168489, 'options', options, false, false), 'maxTimeMS') : J$.T(1168505, null, 25, false), maxTimeMS, false, false);
                            if (J$.C(72232, J$.B(114794, '!=', J$.R(1168521, 'maxTimeMS', maxTimeMS, false, false), J$.T(1168529, null, 25, false))))
                                J$.P(1168553, J$.R(1168537, 'commandOptions', commandOptions, false, false), 'maxTimeMS', J$.R(1168545, 'maxTimeMS', maxTimeMS, false, false));
                            var command = J$.W(1168577, 'command', J$.T(1168569, { dropUser: J$.R(1168561, 'username', username, false, false) }, 11, false), command, false, false);
                            command = J$.W(1168633, 'command', J$.F(1168625, J$.R(1168585, 'applyWriteConcern', applyWriteConcern, false, true), false)(J$.R(1168593, 'command', command, false, false), J$.T(1168609, { db: J$.R(1168601, 'db', db, false, false) }, 11, false), J$.R(1168617, 'options', options, false, false)), command, false, false);
                            J$.P(1168665, J$.R(1168641, 'commandOptions', commandOptions, false, false), 'readPreference', J$.G(1168657, J$.R(1168649, 'ReadPreference', ReadPreference, false, true), 'primary'));
                            J$.F(1168961, J$.R(1168673, 'executeCommand', executeCommand, false, true), false)(J$.R(1168681, 'db', db, false, false), J$.R(1168689, 'command', command, false, false), J$.R(1168697, 'commandOptions', commandOptions, false, false), J$.T(1168953, function (err, result) {
                                jalangiLabel48:
                                    while (true) {
                                        try {
                                            J$.Fe(1168921, arguments.callee, this, arguments);
                                            arguments = J$.N(1168929, 'arguments', arguments, true, false, false);
                                            err = J$.N(1168937, 'err', err, true, false, false);
                                            result = J$.N(1168945, 'result', result, true, false, false);
                                            if (J$.C(72256, J$.C(72248, J$.C(72240, J$.R(1168705, 'err', err, false, false)) ? J$.U(114802, '!', J$.G(1168721, J$.R(1168713, 'err', err, false, false), 'ok')) : J$._()) ? J$.B(114810, '===', J$.G(1168737, J$.R(1168729, 'err', err, false, false), 'code'), J$.T(1168745, undefined, 24, false)) : J$._()))
                                                return J$.Rt(1168793, J$.F(1168785, J$.R(1168753, 'handleCallback', handleCallback, false, true), false)(J$.R(1168761, 'callback', callback, false, false), J$.T(1168777, { code: J$.U(114818, '-', J$.T(1168769, 5000, 22, false)) }, 11, false)));
                                            if (J$.C(72264, J$.R(1168801, 'err', err, false, false)))
                                                return J$.Rt(1168849, J$.F(1168841, J$.R(1168809, 'handleCallback', handleCallback, false, true), false)(J$.R(1168817, 'callback', callback, false, false), J$.R(1168825, 'err', err, false, false), J$.T(1168833, null, 25, false)));
                                            J$.F(1168913, J$.R(1168857, 'handleCallback', handleCallback, false, true), false)(J$.R(1168865, 'callback', callback, false, false), J$.T(1168873, null, 25, false), J$.C(72272, J$.G(1168889, J$.R(1168881, 'result', result, false, false), 'ok')) ? J$.T(1168897, true, 23, false) : J$.T(1168905, false, 23, false));
                                        } catch (J$e) {
                                            J$.Ex(1170457, J$e);
                                        } finally {
                                            if (J$.Fr(1170465))
                                                continue jalangiLabel48;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                        } catch (J$e) {
                            J$.Ex(1170473, J$e);
                        } finally {
                            if (J$.Fr(1170481))
                                continue jalangiLabel49;
                            else
                                return J$.Ra();
                        }
                    }
            }
            _typeof2 = J$.N(1169193, '_typeof2', J$.T(1169185, _typeof2, 12, false), true, false, false);
            _typeof = J$.N(1169209, '_typeof', J$.T(1169201, _typeof, 12, false), true, false, false);
            J$.N(1169217, 'applyWriteConcern', applyWriteConcern, false, false, false);
            J$.N(1169225, 'Code', Code, false, false, false);
            J$.N(1169233, 'resolveReadPreference', resolveReadPreference, false, false, false);
            J$.N(1169241, 'crypto', crypto, false, false, false);
            J$.N(1169249, 'debugOptions', debugOptions, false, false, false);
            J$.N(1169257, 'handleCallback', handleCallback, false, false, false);
            J$.N(1169265, 'MongoError', MongoError, false, false, false);
            J$.N(1169273, 'parseIndexOptions', parseIndexOptions, false, false, false);
            J$.N(1169281, 'ReadPreference', ReadPreference, false, false, false);
            J$.N(1169289, 'toError', toError, false, false, false);
            J$.N(1169297, 'CONSTANTS', CONSTANTS, false, false, false);
            J$.N(1169305, 'MongoDBNamespace', MongoDBNamespace, false, false, false);
            J$.N(1169313, 'count', count, false, false, false);
            J$.N(1169321, 'findOne', findOne, false, false, false);
            J$.N(1169329, 'remove', remove, false, false, false);
            J$.N(1169337, 'updateOne', updateOne, false, false, false);
            J$.N(1169345, 'collection', collection, false, false, false);
            loadCollection = J$.N(1169361, 'loadCollection', J$.T(1169353, loadCollection, 12, false), true, false, false);
            J$.N(1169369, 'db', db, false, false, false);
            loadDb = J$.N(1169385, 'loadDb', J$.T(1169377, loadDb, 12, false), true, false, false);
            J$.N(1169393, 'debugFields', debugFields, false, false, false);
            addUser = J$.N(1169409, 'addUser', J$.T(1169401, addUser, 12, false), true, false, false);
            collections = J$.N(1169425, 'collections', J$.T(1169417, collections, 12, false), true, false, false);
            createIndex = J$.N(1169441, 'createIndex', J$.T(1169433, createIndex, 12, false), true, false, false);
            createListener = J$.N(1169457, 'createListener', J$.T(1169449, createListener, 12, false), true, false, false);
            dropCollection = J$.N(1169473, 'dropCollection', J$.T(1169465, dropCollection, 12, false), true, false, false);
            dropDatabase = J$.N(1169489, 'dropDatabase', J$.T(1169481, dropDatabase, 12, false), true, false, false);
            ensureIndex = J$.N(1169505, 'ensureIndex', J$.T(1169497, ensureIndex, 12, false), true, false, false);
            evaluate = J$.N(1169521, 'evaluate', J$.T(1169513, evaluate, 12, false), true, false, false);
            executeCommand = J$.N(1169537, 'executeCommand', J$.T(1169529, executeCommand, 12, false), true, false, false);
            executeDbAdminCommand = J$.N(1169553, 'executeDbAdminCommand', J$.T(1169545, executeDbAdminCommand, 12, false), true, false, false);
            indexInformation = J$.N(1169569, 'indexInformation', J$.T(1169561, indexInformation, 12, false), true, false, false);
            profilingInfo = J$.N(1169585, 'profilingInfo', J$.T(1169577, profilingInfo, 12, false), true, false, false);
            removeUser = J$.N(1169601, 'removeUser', J$.T(1169593, removeUser, 12, false), true, false, false);
            validateDatabaseName = J$.N(1169617, 'validateDatabaseName', J$.T(1169609, validateDatabaseName, 12, false), true, false, false);
            createCreateIndexCommand = J$.N(1169633, 'createCreateIndexCommand', J$.T(1169625, createCreateIndexCommand, 12, false), true, false, false);
            createIndexUsingCreateIndexes = J$.N(1169649, 'createIndexUsingCreateIndexes', J$.T(1169641, createIndexUsingCreateIndexes, 12, false), true, false, false);
            executeAuthCreateUserCommand = J$.N(1169665, 'executeAuthCreateUserCommand', J$.T(1169657, executeAuthCreateUserCommand, 12, false), true, false, false);
            executeAuthRemoveUserCommand = J$.N(1169681, 'executeAuthRemoveUserCommand', J$.T(1169673, executeAuthRemoveUserCommand, 12, false), true, false, false);
            J$.T(1153809, 'use strict', 21, false);
            var applyWriteConcern = J$.W(1154473, 'applyWriteConcern', J$.G(1154465, J$.F(1154457, J$.I(typeof require === 'undefined' ? require = J$.R(1154441, 'require', undefined, true, true) : require = J$.R(1154441, 'require', require, true, true)), false)(J$.T(1154449, '../utils', 21, false)), 'applyWriteConcern'), applyWriteConcern, false, true);
            var Code = J$.W(1154521, 'Code', J$.G(1154513, J$.G(1154505, J$.F(1154497, J$.I(typeof require === 'undefined' ? require = J$.R(1154481, 'require', undefined, true, true) : require = J$.R(1154481, 'require', require, true, true)), false)(J$.T(1154489, '../core', 21, false)), 'BSON'), 'Code'), Code, false, true);
            var resolveReadPreference = J$.W(1154561, 'resolveReadPreference', J$.G(1154553, J$.F(1154545, J$.I(typeof require === 'undefined' ? require = J$.R(1154529, 'require', undefined, true, true) : require = J$.R(1154529, 'require', require, true, true)), false)(J$.T(1154537, '../utils', 21, false)), 'resolveReadPreference'), resolveReadPreference, false, true);
            var crypto = J$.W(1154593, 'crypto', J$.F(1154585, J$.I(typeof require === 'undefined' ? require = J$.R(1154569, 'require', undefined, true, true) : require = J$.R(1154569, 'require', require, true, true)), false)(J$.T(1154577, 'crypto', 21, false)), crypto, false, true);
            var debugOptions = J$.W(1154633, 'debugOptions', J$.G(1154625, J$.F(1154617, J$.I(typeof require === 'undefined' ? require = J$.R(1154601, 'require', undefined, true, true) : require = J$.R(1154601, 'require', require, true, true)), false)(J$.T(1154609, '../utils', 21, false)), 'debugOptions'), debugOptions, false, true);
            var handleCallback = J$.W(1154673, 'handleCallback', J$.G(1154665, J$.F(1154657, J$.I(typeof require === 'undefined' ? require = J$.R(1154641, 'require', undefined, true, true) : require = J$.R(1154641, 'require', require, true, true)), false)(J$.T(1154649, '../utils', 21, false)), 'handleCallback'), handleCallback, false, true);
            var MongoError = J$.W(1154713, 'MongoError', J$.G(1154705, J$.F(1154697, J$.I(typeof require === 'undefined' ? require = J$.R(1154681, 'require', undefined, true, true) : require = J$.R(1154681, 'require', require, true, true)), false)(J$.T(1154689, '../core', 21, false)), 'MongoError'), MongoError, false, true);
            var parseIndexOptions = J$.W(1154753, 'parseIndexOptions', J$.G(1154745, J$.F(1154737, J$.I(typeof require === 'undefined' ? require = J$.R(1154721, 'require', undefined, true, true) : require = J$.R(1154721, 'require', require, true, true)), false)(J$.T(1154729, '../utils', 21, false)), 'parseIndexOptions'), parseIndexOptions, false, true);
            var ReadPreference = J$.W(1154793, 'ReadPreference', J$.G(1154785, J$.F(1154777, J$.I(typeof require === 'undefined' ? require = J$.R(1154761, 'require', undefined, true, true) : require = J$.R(1154761, 'require', require, true, true)), false)(J$.T(1154769, '../core', 21, false)), 'ReadPreference'), ReadPreference, false, true);
            var toError = J$.W(1154833, 'toError', J$.G(1154825, J$.F(1154817, J$.I(typeof require === 'undefined' ? require = J$.R(1154801, 'require', undefined, true, true) : require = J$.R(1154801, 'require', require, true, true)), false)(J$.T(1154809, '../utils', 21, false)), 'toError'), toError, false, true);
            var CONSTANTS = J$.W(1154865, 'CONSTANTS', J$.F(1154857, J$.I(typeof require === 'undefined' ? require = J$.R(1154841, 'require', undefined, true, true) : require = J$.R(1154841, 'require', require, true, true)), false)(J$.T(1154849, '../constants', 21, false)), CONSTANTS, false, true);
            var MongoDBNamespace = J$.W(1154905, 'MongoDBNamespace', J$.G(1154897, J$.F(1154889, J$.I(typeof require === 'undefined' ? require = J$.R(1154873, 'require', undefined, true, true) : require = J$.R(1154873, 'require', require, true, true)), false)(J$.T(1154881, '../utils', 21, false)), 'MongoDBNamespace'), MongoDBNamespace, false, true);
            var count = J$.W(1154945, 'count', J$.G(1154937, J$.F(1154929, J$.I(typeof require === 'undefined' ? require = J$.R(1154913, 'require', undefined, true, true) : require = J$.R(1154913, 'require', require, true, true)), false)(J$.T(1154921, './collection_ops', 21, false)), 'count'), count, false, true);
            var findOne = J$.W(1154985, 'findOne', J$.G(1154977, J$.F(1154969, J$.I(typeof require === 'undefined' ? require = J$.R(1154953, 'require', undefined, true, true) : require = J$.R(1154953, 'require', require, true, true)), false)(J$.T(1154961, './collection_ops', 21, false)), 'findOne'), findOne, false, true);
            var remove = J$.W(1155025, 'remove', J$.G(1155017, J$.F(1155009, J$.I(typeof require === 'undefined' ? require = J$.R(1154993, 'require', undefined, true, true) : require = J$.R(1154993, 'require', require, true, true)), false)(J$.T(1155001, './collection_ops', 21, false)), 'remove'), remove, false, true);
            var updateOne = J$.W(1155065, 'updateOne', J$.G(1155057, J$.F(1155049, J$.I(typeof require === 'undefined' ? require = J$.R(1155033, 'require', undefined, true, true) : require = J$.R(1155033, 'require', require, true, true)), false)(J$.T(1155041, './collection_ops', 21, false)), 'updateOne'), updateOne, false, true);
            var collection;
            var db;
            var debugFields = J$.W(1155377, 'debugFields', J$.T(1155369, [
                J$.T(1155217, 'authSource', 21, false),
                J$.T(1155225, 'w', 21, false),
                J$.T(1155233, 'wtimeout', 21, false),
                J$.T(1155241, 'j', 21, false),
                J$.T(1155249, 'native_parser', 21, false),
                J$.T(1155257, 'forceServerObjectId', 21, false),
                J$.T(1155265, 'serializeFunctions', 21, false),
                J$.T(1155273, 'raw', 21, false),
                J$.T(1155281, 'promoteLongs', 21, false),
                J$.T(1155289, 'promoteValues', 21, false),
                J$.T(1155297, 'promoteBuffers', 21, false),
                J$.T(1155305, 'bufferMaxEntries', 21, false),
                J$.T(1155313, 'numberOfRetries', 21, false),
                J$.T(1155321, 'retryMiliSeconds', 21, false),
                J$.T(1155329, 'readPreference', 21, false),
                J$.T(1155337, 'pkFactory', 21, false),
                J$.T(1155345, 'parentDb', 21, false),
                J$.T(1155353, 'promiseLibrary', 21, false),
                J$.T(1155361, 'noListener', 21, false)
            ], 10, false), debugFields, false, true);
            J$.P(1169169, J$.I(typeof module === 'undefined' ? module = J$.R(1169041, 'module', undefined, true, true) : module = J$.R(1169041, 'module', module, true, true)), 'exports', J$.T(1169161, {
                addUser: J$.R(1169049, 'addUser', addUser, false, true),
                collections: J$.R(1169057, 'collections', collections, false, true),
                createListener: J$.R(1169065, 'createListener', createListener, false, true),
                createIndex: J$.R(1169073, 'createIndex', createIndex, false, true),
                dropCollection: J$.R(1169081, 'dropCollection', dropCollection, false, true),
                dropDatabase: J$.R(1169089, 'dropDatabase', dropDatabase, false, true),
                ensureIndex: J$.R(1169097, 'ensureIndex', ensureIndex, false, true),
                evaluate: J$.R(1169105, 'evaluate', evaluate, false, true),
                executeCommand: J$.R(1169113, 'executeCommand', executeCommand, false, true),
                executeDbAdminCommand: J$.R(1169121, 'executeDbAdminCommand', executeDbAdminCommand, false, true),
                indexInformation: J$.R(1169129, 'indexInformation', indexInformation, false, true),
                profilingInfo: J$.R(1169137, 'profilingInfo', profilingInfo, false, true),
                removeUser: J$.R(1169145, 'removeUser', removeUser, false, true),
                validateDatabaseName: J$.R(1169153, 'validateDatabaseName', validateDatabaseName, false, true)
            }, 11, false));
        } catch (J$e) {
            J$.Ex(1170489, J$e);
        } finally {
            if (J$.Sr(1170497))
                continue jalangiLabel50;
            else
                break jalangiLabel50;
        }
    }
// JALANGI DO NOT INSTRUMENT

