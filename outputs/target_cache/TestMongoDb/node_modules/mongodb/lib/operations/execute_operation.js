J$.noInstrEval = false;
jalangiLabel16:
    while (true) {
        try {
            J$.Se(1205905, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestMongoDb/node_modules/mongodb/lib/operations/execute_operation.js');
            function executeOperation(topology, operation, callback) {
                jalangiLabel6:
                    while (true) {
                        try {
                            J$.Fe(1204321, arguments.callee, this, arguments);
                            arguments = J$.N(1204329, 'arguments', arguments, true, false, false);
                            topology = J$.N(1204337, 'topology', topology, true, false, false);
                            operation = J$.N(1204345, 'operation', operation, true, false, false);
                            callback = J$.N(1204353, 'callback', callback, true, false, false);
                            J$.N(1204361, 'Promise', Promise, false, false, false);
                            J$.N(1204369, 'session', session, false, false, false);
                            J$.N(1204377, 'owner', owner, false, false, false);
                            J$.N(1204385, 'makeExecuteCallback', makeExecuteCallback, false, false, false);
                            J$.N(1204393, 'handler', handler, false, false, false);
                            if (J$.C(74568, J$.B(117090, '==', J$.R(1202953, 'topology', topology, false, false), J$.T(1202961, null, 25, false)))) {
                                throw J$.F(1202985, J$.I(typeof TypeError === 'undefined' ? TypeError = J$.R(1202969, 'TypeError', undefined, true, true) : TypeError = J$.R(1202969, 'TypeError', TypeError, true, true)), true)(J$.T(1202977, 'This method requires a valid topology instance', 21, false));
                            }
                            if (J$.C(74576, J$.U(117106, '!', J$.B(117098, 'instanceof', J$.R(1202993, 'operation', operation, false, false), J$.R(1203001, 'OperationBase', OperationBase, false, true))))) {
                                throw J$.F(1203025, J$.I(typeof TypeError === 'undefined' ? TypeError = J$.R(1203009, 'TypeError', undefined, true, true) : TypeError = J$.R(1203009, 'TypeError', TypeError, true, true)), true)(J$.T(1203017, 'This method requires a valid operation instance', 21, false));
                            }
                            if (J$.C(74600, J$.C(74592, J$.C(74584, J$.F(1203049, J$.R(1203033, 'isUnifiedTopology', isUnifiedTopology, false, true), false)(J$.R(1203041, 'topology', topology, false, false))) ? J$.U(117114, '!', J$.M(1203081, J$.R(1203057, 'operation', operation, false, false), 'hasAspect', false)(J$.G(1203073, J$.R(1203065, 'Aspect', Aspect, false, true), 'SKIP_SESSION'))) : J$._()) ? J$.M(1203097, J$.R(1203089, 'topology', topology, false, false), 'shouldCheckForSessionSupport', false)() : J$._())) {
                                return J$.Rt(1203145, J$.F(1203137, J$.R(1203105, 'selectServerForSessionSupport', selectServerForSessionSupport, false, true), false)(J$.R(1203113, 'topology', topology, false, false), J$.R(1203121, 'operation', operation, false, false), J$.R(1203129, 'callback', callback, false, false)));
                            }
                            var Promise = J$.W(1203177, 'Promise', J$.G(1203169, J$.G(1203161, J$.R(1203153, 'topology', topology, false, false), 's'), 'promiseLibrary'), Promise, false, false);
                            var session, owner;
                            if (J$.C(74632, J$.C(74608, J$.U(117122, '!', J$.M(1203209, J$.R(1203185, 'operation', operation, false, false), 'hasAspect', false)(J$.G(1203201, J$.R(1203193, 'Aspect', Aspect, false, true), 'SKIP_SESSION')))) ? J$.M(1203225, J$.R(1203217, 'topology', topology, false, false), 'hasSessionSupport', false)() : J$._())) {
                                if (J$.C(74624, J$.B(117130, '==', J$.G(1203241, J$.R(1203233, 'operation', operation, false, false), 'session'), J$.T(1203249, null, 25, false)))) {
                                    owner = J$.W(1203273, 'owner', J$.F(1203265, J$.I(typeof Symbol === 'undefined' ? Symbol = J$.R(1203257, 'Symbol', undefined, true, true) : Symbol = J$.R(1203257, 'Symbol', Symbol, true, true)), false)(), owner, false, false);
                                    session = J$.W(1203313, 'session', J$.M(1203305, J$.R(1203281, 'topology', topology, false, false), 'startSession', false)(J$.T(1203297, { owner: J$.R(1203289, 'owner', owner, false, false) }, 11, false)), session, false, false);
                                    J$.P(1203337, J$.R(1203321, 'operation', operation, false, false), 'session', J$.R(1203329, 'session', session, false, false));
                                } else if (J$.C(74616, J$.G(1203361, J$.G(1203353, J$.R(1203345, 'operation', operation, false, false), 'session'), 'hasEnded'))) {
                                    throw J$.F(1203385, J$.R(1203369, 'MongoError', MongoError, false, true), true)(J$.T(1203377, 'Use of expired sessions is not permitted', 21, false));
                                }
                            }
                            var makeExecuteCallback = J$.W(1203721, 'makeExecuteCallback', J$.T(1203713, function makeExecuteCallback(resolve, reject) {
                                jalangiLabel2:
                                    while (true) {
                                        try {
                                            J$.Fe(1203681, arguments.callee, this, arguments);
                                            arguments = J$.N(1203689, 'arguments', arguments, true, false, false);
                                            resolve = J$.N(1203697, 'resolve', resolve, true, false, false);
                                            reject = J$.N(1203705, 'reject', reject, true, false, false);
                                            return J$.Rt(1203673, J$.T(1203665, function executeCallback(err, result) {
                                                jalangiLabel1:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(1203633, arguments.callee, this, arguments);
                                                            arguments = J$.N(1203641, 'arguments', arguments, true, false, false);
                                                            err = J$.N(1203649, 'err', err, true, false, false);
                                                            result = J$.N(1203657, 'result', result, true, false, false);
                                                            if (J$.C(74672, J$.C(74640, J$.R(1203393, 'session', session, false, false)) ? J$.B(117138, '===', J$.G(1203409, J$.R(1203401, 'session', session, false, false), 'owner'), J$.R(1203417, 'owner', owner, false, false)) : J$._())) {
                                                                J$.M(1203561, J$.R(1203425, 'session', session, false, false), 'endSession', false)(J$.T(1203553, function () {
                                                                    jalangiLabel0:
                                                                        while (true) {
                                                                            try {
                                                                                J$.Fe(1203537, arguments.callee, this, arguments);
                                                                                arguments = J$.N(1203545, 'arguments', arguments, true, false, false);
                                                                                if (J$.C(74648, J$.B(117146, '===', J$.G(1203441, J$.R(1203433, 'operation', operation, false, false), 'session'), J$.R(1203449, 'session', session, false, false)))) {
                                                                                    J$.M(1203465, J$.R(1203457, 'operation', operation, false, false), 'clearSession', false)();
                                                                                }
                                                                                if (J$.C(74656, J$.R(1203473, 'err', err, false, false)))
                                                                                    return J$.Rt(1203505, J$.F(1203497, J$.R(1203481, 'reject', reject, false, false), false)(J$.R(1203489, 'err', err, false, false)));
                                                                                J$.F(1203529, J$.R(1203513, 'resolve', resolve, false, false), false)(J$.R(1203521, 'result', result, false, false));
                                                                            } catch (J$e) {
                                                                                J$.Ex(1206033, J$e);
                                                                            } finally {
                                                                                if (J$.Fr(1206041))
                                                                                    continue jalangiLabel0;
                                                                                else
                                                                                    return J$.Ra();
                                                                            }
                                                                        }
                                                                }, 12, false));
                                                            } else {
                                                                if (J$.C(74664, J$.R(1203569, 'err', err, false, false)))
                                                                    return J$.Rt(1203601, J$.F(1203593, J$.R(1203577, 'reject', reject, false, false), false)(J$.R(1203585, 'err', err, false, false)));
                                                                J$.F(1203625, J$.R(1203609, 'resolve', resolve, false, false), false)(J$.R(1203617, 'result', result, false, false));
                                                            }
                                                        } catch (J$e) {
                                                            J$.Ex(1206049, J$e);
                                                        } finally {
                                                            if (J$.Fr(1206057))
                                                                continue jalangiLabel1;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false));
                                        } catch (J$e) {
                                            J$.Ex(1206065, J$e);
                                        } finally {
                                            if (J$.Fr(1206073))
                                                continue jalangiLabel2;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false), makeExecuteCallback, false, false);
                            if (J$.C(74688, J$.B(117162, '===', J$.U(117154, 'typeof', J$.R(1203729, 'callback', callback, false, false)), J$.T(1203737, 'function', 21, false)))) {
                                var handler = J$.W(1203905, 'handler', J$.F(1203897, J$.R(1203745, 'makeExecuteCallback', makeExecuteCallback, false, false), false)(J$.T(1203817, function (result) {
                                    jalangiLabel3:
                                        while (true) {
                                            try {
                                                J$.Fe(1203793, arguments.callee, this, arguments);
                                                arguments = J$.N(1203801, 'arguments', arguments, true, false, false);
                                                result = J$.N(1203809, 'result', result, true, false, false);
                                                return J$.Rt(1203785, J$.F(1203777, J$.R(1203753, 'callback', callback, false, false), false)(J$.T(1203761, null, 25, false), J$.R(1203769, 'result', result, false, false)));
                                            } catch (J$e) {
                                                J$.Ex(1206081, J$e);
                                            } finally {
                                                if (J$.Fr(1206089))
                                                    continue jalangiLabel3;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false), J$.T(1203889, function (err) {
                                    jalangiLabel4:
                                        while (true) {
                                            try {
                                                J$.Fe(1203865, arguments.callee, this, arguments);
                                                arguments = J$.N(1203873, 'arguments', arguments, true, false, false);
                                                err = J$.N(1203881, 'err', err, true, false, false);
                                                return J$.Rt(1203857, J$.F(1203849, J$.R(1203825, 'callback', callback, false, false), false)(J$.R(1203833, 'err', err, false, false), J$.T(1203841, null, 25, false)));
                                            } catch (J$e) {
                                                J$.Ex(1206097, J$e);
                                            } finally {
                                                if (J$.Fr(1206105))
                                                    continue jalangiLabel4;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false)), handler, false, false);
                                try {
                                    if (J$.C(74680, J$.M(1203937, J$.R(1203913, 'operation', operation, false, false), 'hasAspect', false)(J$.G(1203929, J$.R(1203921, 'Aspect', Aspect, false, true), 'EXECUTE_WITH_SELECTION')))) {
                                        return J$.Rt(1203985, J$.F(1203977, J$.R(1203945, 'executeWithServerSelection', executeWithServerSelection, false, true), false)(J$.R(1203953, 'topology', topology, false, false), J$.R(1203961, 'operation', operation, false, false), J$.R(1203969, 'handler', handler, false, false)));
                                    } else {
                                        return J$.Rt(1204017, J$.M(1204009, J$.R(1203993, 'operation', operation, false, false), 'execute', false)(J$.R(1204001, 'handler', handler, false, false)));
                                    }
                                } catch (e) {
                                    J$.N(1204057, 'e', e, false, false, true);
                                    J$.F(1204041, J$.R(1204025, 'handler', handler, false, false), false)(J$.R(1204033, 'e', e, false, false));
                                    throw J$.R(1204049, 'e', e, false, false);
                                }
                            }
                            return J$.Rt(1204313, J$.F(1204305, J$.R(1204065, 'Promise', Promise, false, false), true)(J$.T(1204297, function (resolve, reject) {
                                jalangiLabel5:
                                    while (true) {
                                        try {
                                            J$.Fe(1204257, arguments.callee, this, arguments);
                                            arguments = J$.N(1204265, 'arguments', arguments, true, false, false);
                                            resolve = J$.N(1204273, 'resolve', resolve, true, false, false);
                                            reject = J$.N(1204281, 'reject', reject, true, false, false);
                                            J$.N(1204289, 'handler', handler, false, false, false);
                                            var handler = J$.W(1204105, 'handler', J$.F(1204097, J$.R(1204073, 'makeExecuteCallback', makeExecuteCallback, false, false), false)(J$.R(1204081, 'resolve', resolve, false, false), J$.R(1204089, 'reject', reject, false, false)), handler, false, false);
                                            try {
                                                if (J$.C(74696, J$.M(1204137, J$.R(1204113, 'operation', operation, false, false), 'hasAspect', false)(J$.G(1204129, J$.R(1204121, 'Aspect', Aspect, false, true), 'EXECUTE_WITH_SELECTION')))) {
                                                    return J$.Rt(1204185, J$.F(1204177, J$.R(1204145, 'executeWithServerSelection', executeWithServerSelection, false, true), false)(J$.R(1204153, 'topology', topology, false, false), J$.R(1204161, 'operation', operation, false, false), J$.R(1204169, 'handler', handler, false, false)));
                                                } else {
                                                    return J$.Rt(1204217, J$.M(1204209, J$.R(1204193, 'operation', operation, false, false), 'execute', false)(J$.R(1204201, 'handler', handler, false, false)));
                                                }
                                            } catch (e) {
                                                J$.N(1204249, 'e', e, false, false, true);
                                                J$.F(1204241, J$.R(1204225, 'handler', handler, false, false), false)(J$.R(1204233, 'e', e, false, false));
                                            }
                                        } catch (J$e) {
                                            J$.Ex(1206113, J$e);
                                        } finally {
                                            if (J$.Fr(1206121))
                                                continue jalangiLabel5;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false)));
                        } catch (J$e) {
                            J$.Ex(1206129, J$e);
                        } finally {
                            if (J$.Fr(1206137))
                                continue jalangiLabel6;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function supportsRetryableReads(server) {
                jalangiLabel7:
                    while (true) {
                        try {
                            J$.Fe(1204441, arguments.callee, this, arguments);
                            arguments = J$.N(1204449, 'arguments', arguments, true, false, false);
                            server = J$.N(1204457, 'server', server, true, false, false);
                            return J$.Rt(1204433, J$.B(117170, '>=', J$.F(1204417, J$.R(1204401, 'maxWireVersion', maxWireVersion, false, true), false)(J$.R(1204409, 'server', server, false, false)), J$.T(1204425, 6, 22, false)));
                        } catch (J$e) {
                            J$.Ex(1206145, J$e);
                        } finally {
                            if (J$.Fr(1206153))
                                continue jalangiLabel7;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function executeWithServerSelection(topology, operation, callback) {
                jalangiLabel11:
                    while (true) {
                        try {
                            J$.Fe(1205361, arguments.callee, this, arguments);
                            function callbackWithRetry(err, result) {
                                jalangiLabel9:
                                    while (true) {
                                        try {
                                            J$.Fe(1204985, arguments.callee, this, arguments);
                                            arguments = J$.N(1204993, 'arguments', arguments, true, false, false);
                                            err = J$.N(1205001, 'err', err, true, false, false);
                                            result = J$.N(1205009, 'result', result, true, false, false);
                                            if (J$.C(74736, J$.B(117186, '==', J$.R(1204705, 'err', err, false, false), J$.T(1204713, null, 25, false)))) {
                                                return J$.Rt(1204753, J$.F(1204745, J$.R(1204721, 'callback', callback, false, false), false)(J$.T(1204729, null, 25, false), J$.R(1204737, 'result', result, false, false)));
                                            }
                                            if (J$.C(74744, J$.U(117194, '!', J$.F(1204777, J$.R(1204761, 'isRetryableError', isRetryableError, false, true), false)(J$.R(1204769, 'err', err, false, false))))) {
                                                return J$.Rt(1204809, J$.F(1204801, J$.R(1204785, 'callback', callback, false, false), false)(J$.R(1204793, 'err', err, false, false)));
                                            }
                                            J$.M(1204977, J$.R(1204817, 'topology', topology, false, false), 'selectServer', false)(J$.R(1204825, 'serverSelectionOptions', serverSelectionOptions, false, false), J$.T(1204969, function (err, server) {
                                                jalangiLabel8:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(1204937, arguments.callee, this, arguments);
                                                            arguments = J$.N(1204945, 'arguments', arguments, true, false, false);
                                                            err = J$.N(1204953, 'err', err, true, false, false);
                                                            server = J$.N(1204961, 'server', server, true, false, false);
                                                            if (J$.C(74760, J$.C(74752, J$.R(1204833, 'err', err, false, false)) ? J$._() : J$.U(117202, '!', J$.F(1204857, J$.R(1204841, 'supportsRetryableReads', supportsRetryableReads, false, true), false)(J$.R(1204849, 'server', server, false, false))))) {
                                                                J$.F(1204889, J$.R(1204865, 'callback', callback, false, false), false)(J$.R(1204873, 'err', err, false, false), J$.T(1204881, null, 25, false));
                                                                return J$.Rt(1204897, undefined);
                                                            }
                                                            J$.M(1204929, J$.R(1204905, 'operation', operation, false, false), 'execute', false)(J$.R(1204913, 'server', server, false, false), J$.R(1204921, 'callback', callback, false, false));
                                                        } catch (J$e) {
                                                            J$.Ex(1206161, J$e);
                                                        } finally {
                                                            if (J$.Fr(1206169))
                                                                continue jalangiLabel8;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false));
                                        } catch (J$e) {
                                            J$.Ex(1206177, J$e);
                                        } finally {
                                            if (J$.Fr(1206185))
                                                continue jalangiLabel9;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }
                            arguments = J$.N(1205369, 'arguments', arguments, true, false, false);
                            topology = J$.N(1205377, 'topology', topology, true, false, false);
                            operation = J$.N(1205385, 'operation', operation, true, false, false);
                            callback = J$.N(1205393, 'callback', callback, true, false, false);
                            J$.N(1205401, 'readPreference', readPreference, false, false, false);
                            J$.N(1205409, 'inTransaction', inTransaction, false, false, false);
                            J$.N(1205417, 'serverSelectionOptions', serverSelectionOptions, false, false, false);
                            callbackWithRetry = J$.N(1205433, 'callbackWithRetry', J$.T(1205425, callbackWithRetry, 12, false), true, false, false);
                            var readPreference = J$.W(1204497, 'readPreference', J$.C(74704, J$.G(1204473, J$.R(1204465, 'operation', operation, false, false), 'readPreference')) ? J$._() : J$.G(1204489, J$.R(1204481, 'ReadPreference', ReadPreference, false, true), 'primary'), readPreference, false, false);
                            var inTransaction = J$.W(1204545, 'inTransaction', J$.C(74712, J$.G(1204513, J$.R(1204505, 'operation', operation, false, false), 'session')) ? J$.M(1204537, J$.G(1204529, J$.R(1204521, 'operation', operation, false, false), 'session'), 'inTransaction', false)() : J$._(), inTransaction, false, false);
                            if (J$.C(74728, J$.C(74720, J$.R(1204553, 'inTransaction', inTransaction, false, false)) ? J$.U(117178, '!', J$.M(1204585, J$.R(1204561, 'readPreference', readPreference, false, false), 'equals', false)(J$.G(1204577, J$.R(1204569, 'ReadPreference', ReadPreference, false, true), 'primary'))) : J$._())) {
                                J$.F(1204649, J$.R(1204593, 'callback', callback, false, false), false)(J$.F(1204641, J$.R(1204601, 'MongoError', MongoError, false, true), true)(J$.M(1204633, J$.T(1204609, 'Read preference in a transaction must be primary, not: ', 21, false), 'concat', false)(J$.G(1204625, J$.R(1204617, 'readPreference', readPreference, false, false), 'mode'))));
                                return J$.Rt(1204657, undefined);
                            }
                            var serverSelectionOptions = J$.W(1204697, 'serverSelectionOptions', J$.T(1204689, {
                                readPreference: J$.R(1204665, 'readPreference', readPreference, false, false),
                                session: J$.G(1204681, J$.R(1204673, 'operation', operation, false, false), 'session')
                            }, 11, false), serverSelectionOptions, false, false);
                            J$.M(1205353, J$.R(1205017, 'topology', topology, false, false), 'selectServer', false)(J$.R(1205025, 'serverSelectionOptions', serverSelectionOptions, false, false), J$.T(1205345, function (err, server) {
                                jalangiLabel10:
                                    while (true) {
                                        try {
                                            J$.Fe(1205305, arguments.callee, this, arguments);
                                            arguments = J$.N(1205313, 'arguments', arguments, true, false, false);
                                            err = J$.N(1205321, 'err', err, true, false, false);
                                            server = J$.N(1205329, 'server', server, true, false, false);
                                            J$.N(1205337, 'shouldRetryReads', shouldRetryReads, false, false, false);
                                            if (J$.C(74768, J$.R(1205033, 'err', err, false, false))) {
                                                J$.F(1205065, J$.R(1205041, 'callback', callback, false, false), false)(J$.R(1205049, 'err', err, false, false), J$.T(1205057, null, 25, false));
                                                return J$.Rt(1205073, undefined);
                                            }
                                            var shouldRetryReads = J$.W(1205185, 'shouldRetryReads', J$.C(74800, J$.C(74792, J$.C(74784, J$.C(74776, J$.B(117210, '!==', J$.G(1205105, J$.G(1205097, J$.G(1205089, J$.R(1205081, 'topology', topology, false, false), 's'), 'options'), 'retryReads'), J$.T(1205113, false, 23, false))) ? J$.G(1205129, J$.R(1205121, 'operation', operation, false, false), 'session') : J$._()) ? J$.U(117218, '!', J$.R(1205137, 'inTransaction', inTransaction, false, false)) : J$._()) ? J$.F(1205161, J$.R(1205145, 'supportsRetryableReads', supportsRetryableReads, false, true), false)(J$.R(1205153, 'server', server, false, false)) : J$._()) ? J$.G(1205177, J$.R(1205169, 'operation', operation, false, false), 'canRetryRead') : J$._(), shouldRetryReads, false, false);
                                            if (J$.C(74816, J$.C(74808, J$.M(1205217, J$.R(1205193, 'operation', operation, false, false), 'hasAspect', false)(J$.G(1205209, J$.R(1205201, 'Aspect', Aspect, false, true), 'RETRYABLE'))) ? J$.R(1205225, 'shouldRetryReads', shouldRetryReads, false, false) : J$._())) {
                                                J$.M(1205257, J$.R(1205233, 'operation', operation, false, false), 'execute', false)(J$.R(1205241, 'server', server, false, false), J$.R(1205249, 'callbackWithRetry', callbackWithRetry, false, false));
                                                return J$.Rt(1205265, undefined);
                                            }
                                            J$.M(1205297, J$.R(1205273, 'operation', operation, false, false), 'execute', false)(J$.R(1205281, 'server', server, false, false), J$.R(1205289, 'callback', callback, false, false));
                                        } catch (J$e) {
                                            J$.Ex(1206193, J$e);
                                        } finally {
                                            if (J$.Fr(1206201))
                                                continue jalangiLabel10;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                        } catch (J$e) {
                            J$.Ex(1206209, J$e);
                        } finally {
                            if (J$.Fr(1206217))
                                continue jalangiLabel11;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function selectServerForSessionSupport(topology, operation, callback) {
                jalangiLabel15:
                    while (true) {
                        try {
                            J$.Fe(1205825, arguments.callee, this, arguments);
                            arguments = J$.N(1205833, 'arguments', arguments, true, false, false);
                            topology = J$.N(1205841, 'topology', topology, true, false, false);
                            operation = J$.N(1205849, 'operation', operation, true, false, false);
                            callback = J$.N(1205857, 'callback', callback, true, false, false);
                            J$.N(1205865, 'Promise', Promise, false, false, false);
                            J$.N(1205873, 'result', result, false, false, false);
                            var Promise = J$.W(1205465, 'Promise', J$.G(1205457, J$.G(1205449, J$.R(1205441, 'topology', topology, false, false), 's'), 'promiseLibrary'), Promise, false, false);
                            var result;
                            if (J$.C(74832, J$.B(117234, '!==', J$.U(117226, 'typeof', J$.R(1205473, 'callback', callback, false, false)), J$.T(1205481, 'function', 21, false)))) {
                                result = J$.W(1205657, 'result', J$.F(1205649, J$.R(1205489, 'Promise', Promise, false, false), true)(J$.T(1205641, function (resolve, reject) {
                                    jalangiLabel13:
                                        while (true) {
                                            try {
                                                J$.Fe(1205609, arguments.callee, this, arguments);
                                                arguments = J$.N(1205617, 'arguments', arguments, true, false, false);
                                                resolve = J$.N(1205625, 'resolve', resolve, true, false, false);
                                                reject = J$.N(1205633, 'reject', reject, true, false, false);
                                                callback = J$.W(1205601, 'callback', J$.T(1205593, function callback(err, result) {
                                                    jalangiLabel12:
                                                        while (true) {
                                                            try {
                                                                J$.Fe(1205561, arguments.callee, this, arguments);
                                                                arguments = J$.N(1205569, 'arguments', arguments, true, false, false);
                                                                err = J$.N(1205577, 'err', err, true, false, false);
                                                                result = J$.N(1205585, 'result', result, true, false, false);
                                                                if (J$.C(74824, J$.R(1205497, 'err', err, false, false)))
                                                                    return J$.Rt(1205529, J$.F(1205521, J$.R(1205505, 'reject', reject, false, false), false)(J$.R(1205513, 'err', err, false, false)));
                                                                J$.F(1205553, J$.R(1205537, 'resolve', resolve, false, false), false)(J$.R(1205545, 'result', result, false, false));
                                                            } catch (J$e) {
                                                                J$.Ex(1206225, J$e);
                                                            } finally {
                                                                if (J$.Fr(1206233))
                                                                    continue jalangiLabel12;
                                                                else
                                                                    return J$.Ra();
                                                            }
                                                        }
                                                }, 12, false), callback, false, false);
                                            } catch (J$e) {
                                                J$.Ex(1206241, J$e);
                                            } finally {
                                                if (J$.Fr(1206249))
                                                    continue jalangiLabel13;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false)), result, false, false);
                            }
                            J$.M(1205801, J$.R(1205665, 'topology', topology, false, false), 'selectServer', false)(J$.G(1205681, J$.R(1205673, 'ReadPreference', ReadPreference, false, true), 'primaryPreferred'), J$.T(1205793, function (err) {
                                jalangiLabel14:
                                    while (true) {
                                        try {
                                            J$.Fe(1205769, arguments.callee, this, arguments);
                                            arguments = J$.N(1205777, 'arguments', arguments, true, false, false);
                                            err = J$.N(1205785, 'err', err, true, false, false);
                                            if (J$.C(74840, J$.R(1205689, 'err', err, false, false))) {
                                                J$.F(1205713, J$.R(1205697, 'callback', callback, false, false), false)(J$.R(1205705, 'err', err, false, false));
                                                return J$.Rt(1205721, undefined);
                                            }
                                            J$.F(1205761, J$.R(1205729, 'executeOperation', executeOperation, false, true), false)(J$.R(1205737, 'topology', topology, false, false), J$.R(1205745, 'operation', operation, false, false), J$.R(1205753, 'callback', callback, false, false));
                                        } catch (J$e) {
                                            J$.Ex(1206257, J$e);
                                        } finally {
                                            if (J$.Fr(1206265))
                                                continue jalangiLabel14;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            return J$.Rt(1205817, J$.R(1205809, 'result', result, false, false));
                        } catch (J$e) {
                            J$.Ex(1206273, J$e);
                        } finally {
                            if (J$.Fr(1206281))
                                continue jalangiLabel15;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(1205913, 'MongoError', MongoError, false, false, false);
            J$.N(1205921, 'Aspect', Aspect, false, false, false);
            J$.N(1205929, 'OperationBase', OperationBase, false, false, false);
            J$.N(1205937, 'ReadPreference', ReadPreference, false, false, false);
            J$.N(1205945, 'isRetryableError', isRetryableError, false, false, false);
            J$.N(1205953, 'maxWireVersion', maxWireVersion, false, false, false);
            J$.N(1205961, 'isUnifiedTopology', isUnifiedTopology, false, false, false);
            executeOperation = J$.N(1205977, 'executeOperation', J$.T(1205969, executeOperation, 12, false), true, false, false);
            supportsRetryableReads = J$.N(1205993, 'supportsRetryableReads', J$.T(1205985, supportsRetryableReads, 12, false), true, false, false);
            executeWithServerSelection = J$.N(1206009, 'executeWithServerSelection', J$.T(1206001, executeWithServerSelection, 12, false), true, false, false);
            selectServerForSessionSupport = J$.N(1206025, 'selectServerForSessionSupport', J$.T(1206017, selectServerForSessionSupport, 12, false), true, false, false);
            J$.T(1202673, 'use strict', 21, false);
            var MongoError = J$.W(1202713, 'MongoError', J$.G(1202705, J$.F(1202697, J$.I(typeof require === 'undefined' ? require = J$.R(1202681, 'require', undefined, true, true) : require = J$.R(1202681, 'require', require, true, true)), false)(J$.T(1202689, '../core/error', 21, false)), 'MongoError'), MongoError, false, true);
            var Aspect = J$.W(1202753, 'Aspect', J$.G(1202745, J$.F(1202737, J$.I(typeof require === 'undefined' ? require = J$.R(1202721, 'require', undefined, true, true) : require = J$.R(1202721, 'require', require, true, true)), false)(J$.T(1202729, './operation', 21, false)), 'Aspect'), Aspect, false, true);
            var OperationBase = J$.W(1202793, 'OperationBase', J$.G(1202785, J$.F(1202777, J$.I(typeof require === 'undefined' ? require = J$.R(1202761, 'require', undefined, true, true) : require = J$.R(1202761, 'require', require, true, true)), false)(J$.T(1202769, './operation', 21, false)), 'OperationBase'), OperationBase, false, true);
            var ReadPreference = J$.W(1202825, 'ReadPreference', J$.F(1202817, J$.I(typeof require === 'undefined' ? require = J$.R(1202801, 'require', undefined, true, true) : require = J$.R(1202801, 'require', require, true, true)), false)(J$.T(1202809, '../core/topologies/read_preference', 21, false)), ReadPreference, false, true);
            var isRetryableError = J$.W(1202865, 'isRetryableError', J$.G(1202857, J$.F(1202849, J$.I(typeof require === 'undefined' ? require = J$.R(1202833, 'require', undefined, true, true) : require = J$.R(1202833, 'require', require, true, true)), false)(J$.T(1202841, '../core/error', 21, false)), 'isRetryableError'), isRetryableError, false, true);
            var maxWireVersion = J$.W(1202905, 'maxWireVersion', J$.G(1202897, J$.F(1202889, J$.I(typeof require === 'undefined' ? require = J$.R(1202873, 'require', undefined, true, true) : require = J$.R(1202873, 'require', require, true, true)), false)(J$.T(1202881, '../core/utils', 21, false)), 'maxWireVersion'), maxWireVersion, false, true);
            var isUnifiedTopology = J$.W(1202945, 'isUnifiedTopology', J$.G(1202937, J$.F(1202929, J$.I(typeof require === 'undefined' ? require = J$.R(1202913, 'require', undefined, true, true) : require = J$.R(1202913, 'require', require, true, true)), false)(J$.T(1202921, '../core/utils', 21, false)), 'isUnifiedTopology'), isUnifiedTopology, false, true);
            J$.P(1205897, J$.I(typeof module === 'undefined' ? module = J$.R(1205881, 'module', undefined, true, true) : module = J$.R(1205881, 'module', module, true, true)), 'exports', J$.R(1205889, 'executeOperation', executeOperation, false, true));
        } catch (J$e) {
            J$.Ex(1206289, J$e);
        } finally {
            if (J$.Sr(1206297))
                continue jalangiLabel16;
            else
                break jalangiLabel16;
        }
    }
// JALANGI DO NOT INSTRUMENT

