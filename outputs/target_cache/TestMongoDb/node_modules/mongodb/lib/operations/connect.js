J$.noInstrEval = false;
jalangiLabel53:
    while (true) {
        try {
            J$.Se(1124969, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestMongoDb/node_modules/mongodb/lib/operations/connect.js');
            function _typeof2(obj) {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(1111209, arguments.callee, this, arguments);
                            arguments = J$.N(1111217, 'arguments', arguments, true, false, false);
                            obj = J$.N(1111225, 'obj', obj, true, false, false);
                            if (J$.C(68200, J$.C(68160, J$.B(111170, '===', J$.U(111162, 'typeof', J$.I(typeof Symbol === 'undefined' ? Symbol = J$.R(1110945, 'Symbol', undefined, true, true) : Symbol = J$.R(1110945, 'Symbol', Symbol, true, true))), J$.T(1110953, 'function', 21, false))) ? J$.B(111186, '===', J$.U(111178, 'typeof', J$.G(1110969, J$.I(typeof Symbol === 'undefined' ? Symbol = J$.R(1110961, 'Symbol', undefined, true, true) : Symbol = J$.R(1110961, 'Symbol', Symbol, true, true)), 'iterator')), J$.T(1110977, 'symbol', 21, false)) : J$._())) {
                                _typeof2 = J$.W(1111033, '_typeof2', J$.T(1111025, function _typeof2(obj) {
                                    jalangiLabel0:
                                        while (true) {
                                            try {
                                                J$.Fe(1111001, arguments.callee, this, arguments);
                                                arguments = J$.N(1111009, 'arguments', arguments, true, false, false);
                                                obj = J$.N(1111017, 'obj', obj, true, false, false);
                                                return J$.Rt(1110993, J$.U(111194, 'typeof', J$.R(1110985, 'obj', obj, false, false)));
                                            } catch (J$e) {
                                                J$.Ex(1125649, J$e);
                                            } finally {
                                                if (J$.Fr(1125657))
                                                    continue jalangiLabel0;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false), _typeof2, false, true);
                            } else {
                                _typeof2 = J$.W(1111169, '_typeof2', J$.T(1111161, function _typeof2(obj) {
                                    jalangiLabel1:
                                        while (true) {
                                            try {
                                                J$.Fe(1111137, arguments.callee, this, arguments);
                                                arguments = J$.N(1111145, 'arguments', arguments, true, false, false);
                                                obj = J$.N(1111153, 'obj', obj, true, false, false);
                                                return J$.Rt(1111129, J$.C(68192, J$.C(68184, J$.C(68176, J$.C(68168, J$.R(1111041, 'obj', obj, false, false)) ? J$.B(111210, '===', J$.U(111202, 'typeof', J$.I(typeof Symbol === 'undefined' ? Symbol = J$.R(1111049, 'Symbol', undefined, true, true) : Symbol = J$.R(1111049, 'Symbol', Symbol, true, true))), J$.T(1111057, 'function', 21, false)) : J$._()) ? J$.B(111218, '===', J$.G(1111073, J$.R(1111065, 'obj', obj, false, false), 'constructor'), J$.I(typeof Symbol === 'undefined' ? Symbol = J$.R(1111081, 'Symbol', undefined, true, true) : Symbol = J$.R(1111081, 'Symbol', Symbol, true, true))) : J$._()) ? J$.B(111226, '!==', J$.R(1111089, 'obj', obj, false, false), J$.G(1111105, J$.I(typeof Symbol === 'undefined' ? Symbol = J$.R(1111097, 'Symbol', undefined, true, true) : Symbol = J$.R(1111097, 'Symbol', Symbol, true, true)), 'prototype')) : J$._()) ? J$.T(1111113, 'symbol', 21, false) : J$.U(111234, 'typeof', J$.R(1111121, 'obj', obj, false, false)));
                                            } catch (J$e) {
                                                J$.Ex(1125665, J$e);
                                            } finally {
                                                if (J$.Fr(1125673))
                                                    continue jalangiLabel1;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false), _typeof2, false, true);
                            }
                            return J$.Rt(1111201, J$.F(1111193, J$.R(1111177, '_typeof2', _typeof2, false, true), false)(J$.R(1111185, 'obj', obj, false, false)));
                        } catch (J$e) {
                            J$.Ex(1125681, J$e);
                        } finally {
                            if (J$.Fr(1125689))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function _typeof(obj) {
                jalangiLabel5:
                    while (true) {
                        try {
                            J$.Fe(1111545, arguments.callee, this, arguments);
                            arguments = J$.N(1111553, 'arguments', arguments, true, false, false);
                            obj = J$.N(1111561, 'obj', obj, true, false, false);
                            if (J$.C(68248, J$.C(68208, J$.B(111250, '===', J$.U(111242, 'typeof', J$.I(typeof Symbol === 'undefined' ? Symbol = J$.R(1111233, 'Symbol', undefined, true, true) : Symbol = J$.R(1111233, 'Symbol', Symbol, true, true))), J$.T(1111241, 'function', 21, false))) ? J$.B(111258, '===', J$.F(1111273, J$.R(1111249, '_typeof2', _typeof2, false, true), false)(J$.G(1111265, J$.I(typeof Symbol === 'undefined' ? Symbol = J$.R(1111257, 'Symbol', undefined, true, true) : Symbol = J$.R(1111257, 'Symbol', Symbol, true, true)), 'iterator')), J$.T(1111281, 'symbol', 21, false)) : J$._())) {
                                _typeof = J$.W(1111353, '_typeof', J$.T(1111345, function _typeof(obj) {
                                    jalangiLabel3:
                                        while (true) {
                                            try {
                                                J$.Fe(1111321, arguments.callee, this, arguments);
                                                arguments = J$.N(1111329, 'arguments', arguments, true, false, false);
                                                obj = J$.N(1111337, 'obj', obj, true, false, false);
                                                return J$.Rt(1111313, J$.F(1111305, J$.R(1111289, '_typeof2', _typeof2, false, true), false)(J$.R(1111297, 'obj', obj, false, false)));
                                            } catch (J$e) {
                                                J$.Ex(1125697, J$e);
                                            } finally {
                                                if (J$.Fr(1125705))
                                                    continue jalangiLabel3;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false), _typeof, false, true);
                            } else {
                                _typeof = J$.W(1111505, '_typeof', J$.T(1111497, function _typeof(obj) {
                                    jalangiLabel4:
                                        while (true) {
                                            try {
                                                J$.Fe(1111473, arguments.callee, this, arguments);
                                                arguments = J$.N(1111481, 'arguments', arguments, true, false, false);
                                                obj = J$.N(1111489, 'obj', obj, true, false, false);
                                                return J$.Rt(1111465, J$.C(68240, J$.C(68232, J$.C(68224, J$.C(68216, J$.R(1111361, 'obj', obj, false, false)) ? J$.B(111274, '===', J$.U(111266, 'typeof', J$.I(typeof Symbol === 'undefined' ? Symbol = J$.R(1111369, 'Symbol', undefined, true, true) : Symbol = J$.R(1111369, 'Symbol', Symbol, true, true))), J$.T(1111377, 'function', 21, false)) : J$._()) ? J$.B(111282, '===', J$.G(1111393, J$.R(1111385, 'obj', obj, false, false), 'constructor'), J$.I(typeof Symbol === 'undefined' ? Symbol = J$.R(1111401, 'Symbol', undefined, true, true) : Symbol = J$.R(1111401, 'Symbol', Symbol, true, true))) : J$._()) ? J$.B(111290, '!==', J$.R(1111409, 'obj', obj, false, false), J$.G(1111425, J$.I(typeof Symbol === 'undefined' ? Symbol = J$.R(1111417, 'Symbol', undefined, true, true) : Symbol = J$.R(1111417, 'Symbol', Symbol, true, true)), 'prototype')) : J$._()) ? J$.T(1111433, 'symbol', 21, false) : J$.F(1111457, J$.R(1111441, '_typeof2', _typeof2, false, true), false)(J$.R(1111449, 'obj', obj, false, false)));
                                            } catch (J$e) {
                                                J$.Ex(1125713, J$e);
                                            } finally {
                                                if (J$.Fr(1125721))
                                                    continue jalangiLabel4;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false), _typeof, false, true);
                            }
                            return J$.Rt(1111537, J$.F(1111529, J$.R(1111513, '_typeof', _typeof, false, true), false)(J$.R(1111521, 'obj', obj, false, false)));
                        } catch (J$e) {
                            J$.Ex(1125729, J$e);
                        } finally {
                            if (J$.Fr(1125737))
                                continue jalangiLabel5;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function _classCallCheck(instance, Constructor) {
                jalangiLabel6:
                    while (true) {
                        try {
                            J$.Fe(1111609, arguments.callee, this, arguments);
                            arguments = J$.N(1111617, 'arguments', arguments, true, false, false);
                            instance = J$.N(1111625, 'instance', instance, true, false, false);
                            Constructor = J$.N(1111633, 'Constructor', Constructor, true, false, false);
                            if (J$.C(68256, J$.U(111306, '!', J$.B(111298, 'instanceof', J$.R(1111569, 'instance', instance, false, false), J$.R(1111577, 'Constructor', Constructor, false, false))))) {
                                throw J$.F(1111601, J$.I(typeof TypeError === 'undefined' ? TypeError = J$.R(1111585, 'TypeError', undefined, true, true) : TypeError = J$.R(1111585, 'TypeError', TypeError, true, true)), true)(J$.T(1111593, 'Cannot call a class as a function', 21, false));
                            }
                        } catch (J$e) {
                            J$.Ex(1125745, J$e);
                        } finally {
                            if (J$.Fr(1125753))
                                continue jalangiLabel6;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function _defineProperties(target, props) {
                jalangiLabel7:
                    while (true) {
                        try {
                            J$.Fe(1111881, arguments.callee, this, arguments);
                            arguments = J$.N(1111889, 'arguments', arguments, true, false, false);
                            target = J$.N(1111897, 'target', target, true, false, false);
                            props = J$.N(1111905, 'props', props, true, false, false);
                            J$.N(1111913, 'i', i, false, false, false);
                            J$.N(1111921, 'descriptor', descriptor, false, false, false);
                            for (var i = J$.W(1111649, 'i', J$.T(1111641, 0, 22, false), i, false, false); J$.C(68280, J$.B(111314, '<', J$.R(1111657, 'i', i, false, false), J$.G(1111673, J$.R(1111665, 'props', props, false, false), 'length'))); J$.B(111338, '-', i = J$.W(1111689, 'i', J$.B(111330, '+', J$.U(111322, '+', J$.R(1111681, 'i', i, false, false)), 1), i, false, false), 1)) {
                                var descriptor = J$.W(1111721, 'descriptor', J$.G(1111713, J$.R(1111697, 'props', props, false, false), J$.R(1111705, 'i', i, false, false)), descriptor, false, false);
                                J$.P(1111761, J$.R(1111729, 'descriptor', descriptor, false, false), 'enumerable', J$.C(68264, J$.G(1111745, J$.R(1111737, 'descriptor', descriptor, false, false), 'enumerable')) ? J$._() : J$.T(1111753, false, 23, false));
                                J$.P(1111785, J$.R(1111769, 'descriptor', descriptor, false, false), 'configurable', J$.T(1111777, true, 23, false));
                                if (J$.C(68272, J$.B(111346, 'in', J$.T(1111793, 'value', 21, false), J$.R(1111801, 'descriptor', descriptor, false, false))))
                                    J$.P(1111825, J$.R(1111809, 'descriptor', descriptor, false, false), 'writable', J$.T(1111817, true, 23, false));
                                J$.M(1111873, J$.I(typeof Object === 'undefined' ? Object = J$.R(1111833, 'Object', undefined, true, true) : Object = J$.R(1111833, 'Object', Object, true, true)), 'defineProperty', false)(J$.R(1111841, 'target', target, false, false), J$.G(1111857, J$.R(1111849, 'descriptor', descriptor, false, false), 'key'), J$.R(1111865, 'descriptor', descriptor, false, false));
                            }
                        } catch (J$e) {
                            J$.Ex(1125761, J$e);
                        } finally {
                            if (J$.Fr(1125769))
                                continue jalangiLabel7;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function _createClass(Constructor, protoProps, staticProps) {
                jalangiLabel8:
                    while (true) {
                        try {
                            J$.Fe(1112033, arguments.callee, this, arguments);
                            arguments = J$.N(1112041, 'arguments', arguments, true, false, false);
                            Constructor = J$.N(1112049, 'Constructor', Constructor, true, false, false);
                            protoProps = J$.N(1112057, 'protoProps', protoProps, true, false, false);
                            staticProps = J$.N(1112065, 'staticProps', staticProps, true, false, false);
                            if (J$.C(68288, J$.R(1111929, 'protoProps', protoProps, false, false)))
                                J$.F(1111969, J$.R(1111937, '_defineProperties', _defineProperties, false, true), false)(J$.G(1111953, J$.R(1111945, 'Constructor', Constructor, false, false), 'prototype'), J$.R(1111961, 'protoProps', protoProps, false, false));
                            if (J$.C(68296, J$.R(1111977, 'staticProps', staticProps, false, false)))
                                J$.F(1112009, J$.R(1111985, '_defineProperties', _defineProperties, false, true), false)(J$.R(1111993, 'Constructor', Constructor, false, false), J$.R(1112001, 'staticProps', staticProps, false, false));
                            return J$.Rt(1112025, J$.R(1112017, 'Constructor', Constructor, false, false));
                        } catch (J$e) {
                            J$.Ex(1125777, J$e);
                        } finally {
                            if (J$.Fr(1125785))
                                continue jalangiLabel8;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function _possibleConstructorReturn(self, call) {
                jalangiLabel9:
                    while (true) {
                        try {
                            J$.Fe(1112177, arguments.callee, this, arguments);
                            arguments = J$.N(1112185, 'arguments', arguments, true, false, false);
                            self = J$.N(1112193, 'self', self, true, false, false);
                            call = J$.N(1112201, 'call', call, true, false, false);
                            if (J$.C(68320, J$.C(68312, J$.R(1112073, 'call', call, false, false)) ? J$.C(68304, J$.B(111354, '===', J$.F(1112097, J$.R(1112081, '_typeof', _typeof, false, true), false)(J$.R(1112089, 'call', call, false, false)), J$.T(1112105, 'object', 21, false))) ? J$._() : J$.B(111370, '===', J$.U(111362, 'typeof', J$.R(1112113, 'call', call, false, false)), J$.T(1112121, 'function', 21, false)) : J$._())) {
                                return J$.Rt(1112137, J$.R(1112129, 'call', call, false, false));
                            }
                            return J$.Rt(1112169, J$.F(1112161, J$.R(1112145, '_assertThisInitialized', _assertThisInitialized, false, true), false)(J$.R(1112153, 'self', self, false, false)));
                        } catch (J$e) {
                            J$.Ex(1125793, J$e);
                        } finally {
                            if (J$.Fr(1125801))
                                continue jalangiLabel9;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function _assertThisInitialized(self) {
                jalangiLabel10:
                    while (true) {
                        try {
                            J$.Fe(1112265, arguments.callee, this, arguments);
                            arguments = J$.N(1112273, 'arguments', arguments, true, false, false);
                            self = J$.N(1112281, 'self', self, true, false, false);
                            if (J$.C(68328, J$.B(111378, '===', J$.R(1112209, 'self', self, false, false), void J$.T(1112217, 0, 22, false)))) {
                                throw J$.F(1112241, J$.I(typeof ReferenceError === 'undefined' ? ReferenceError = J$.R(1112225, 'ReferenceError', undefined, true, true) : ReferenceError = J$.R(1112225, 'ReferenceError', ReferenceError, true, true)), true)(J$.T(1112233, 'this hasn\'t been initialised - super() hasn\'t been called', 21, false));
                            }
                            return J$.Rt(1112257, J$.R(1112249, 'self', self, false, false));
                        } catch (J$e) {
                            J$.Ex(1125809, J$e);
                        } finally {
                            if (J$.Fr(1125817))
                                continue jalangiLabel10;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function _getPrototypeOf(o) {
                jalangiLabel12:
                    while (true) {
                        try {
                            J$.Fe(1112441, arguments.callee, this, arguments);
                            arguments = J$.N(1112449, 'arguments', arguments, true, false, false);
                            o = J$.N(1112457, 'o', o, true, false, false);
                            _getPrototypeOf = J$.W(1112401, '_getPrototypeOf', J$.C(68344, J$.G(1112297, J$.I(typeof Object === 'undefined' ? Object = J$.R(1112289, 'Object', undefined, true, true) : Object = J$.R(1112289, 'Object', Object, true, true)), 'setPrototypeOf')) ? J$.G(1112313, J$.I(typeof Object === 'undefined' ? Object = J$.R(1112305, 'Object', undefined, true, true) : Object = J$.R(1112305, 'Object', Object, true, true)), 'getPrototypeOf') : J$.T(1112393, function _getPrototypeOf(o) {
                                jalangiLabel11:
                                    while (true) {
                                        try {
                                            J$.Fe(1112369, arguments.callee, this, arguments);
                                            arguments = J$.N(1112377, 'arguments', arguments, true, false, false);
                                            o = J$.N(1112385, 'o', o, true, false, false);
                                            return J$.Rt(1112361, J$.C(68336, J$.G(1112329, J$.R(1112321, 'o', o, false, false), '__proto__')) ? J$._() : J$.M(1112353, J$.I(typeof Object === 'undefined' ? Object = J$.R(1112337, 'Object', undefined, true, true) : Object = J$.R(1112337, 'Object', Object, true, true)), 'getPrototypeOf', false)(J$.R(1112345, 'o', o, false, false)));
                                        } catch (J$e) {
                                            J$.Ex(1125825, J$e);
                                        } finally {
                                            if (J$.Fr(1125833))
                                                continue jalangiLabel11;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false), _getPrototypeOf, false, true);
                            return J$.Rt(1112433, J$.F(1112425, J$.R(1112409, '_getPrototypeOf', _getPrototypeOf, false, true), false)(J$.R(1112417, 'o', o, false, false)));
                        } catch (J$e) {
                            J$.Ex(1125841, J$e);
                        } finally {
                            if (J$.Fr(1125849))
                                continue jalangiLabel12;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function _inherits(subClass, superClass) {
                jalangiLabel13:
                    while (true) {
                        try {
                            J$.Fe(1112657, arguments.callee, this, arguments);
                            arguments = J$.N(1112665, 'arguments', arguments, true, false, false);
                            subClass = J$.N(1112673, 'subClass', subClass, true, false, false);
                            superClass = J$.N(1112681, 'superClass', superClass, true, false, false);
                            if (J$.C(68360, J$.C(68352, J$.B(111394, '!==', J$.U(111386, 'typeof', J$.R(1112465, 'superClass', superClass, false, false)), J$.T(1112473, 'function', 21, false))) ? J$.B(111402, '!==', J$.R(1112481, 'superClass', superClass, false, false), J$.T(1112489, null, 25, false)) : J$._())) {
                                throw J$.F(1112513, J$.I(typeof TypeError === 'undefined' ? TypeError = J$.R(1112497, 'TypeError', undefined, true, true) : TypeError = J$.R(1112497, 'TypeError', TypeError, true, true)), true)(J$.T(1112505, 'Super expression must either be null or a function', 21, false));
                            }
                            J$.P(1112609, J$.R(1112521, 'subClass', subClass, false, false), 'prototype', J$.M(1112601, J$.I(typeof Object === 'undefined' ? Object = J$.R(1112529, 'Object', undefined, true, true) : Object = J$.R(1112529, 'Object', Object, true, true)), 'create', false)(J$.C(68368, J$.R(1112537, 'superClass', superClass, false, false)) ? J$.G(1112553, J$.R(1112545, 'superClass', superClass, false, false), 'prototype') : J$._(), J$.T(1112593, {
                                constructor: J$.T(1112585, {
                                    value: J$.R(1112561, 'subClass', subClass, false, false),
                                    writable: J$.T(1112569, true, 23, false),
                                    configurable: J$.T(1112577, true, 23, false)
                                }, 11, false)
                            }, 11, false)));
                            if (J$.C(68376, J$.R(1112617, 'superClass', superClass, false, false)))
                                J$.F(1112649, J$.R(1112625, '_setPrototypeOf', _setPrototypeOf, false, true), false)(J$.R(1112633, 'subClass', subClass, false, false), J$.R(1112641, 'superClass', superClass, false, false));
                        } catch (J$e) {
                            J$.Ex(1125857, J$e);
                        } finally {
                            if (J$.Fr(1125865))
                                continue jalangiLabel13;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function _setPrototypeOf(o, p) {
                jalangiLabel15:
                    while (true) {
                        try {
                            J$.Fe(1112833, arguments.callee, this, arguments);
                            arguments = J$.N(1112841, 'arguments', arguments, true, false, false);
                            o = J$.N(1112849, 'o', o, true, false, false);
                            p = J$.N(1112857, 'p', p, true, false, false);
                            _setPrototypeOf = J$.W(1112785, '_setPrototypeOf', J$.C(68384, J$.G(1112697, J$.I(typeof Object === 'undefined' ? Object = J$.R(1112689, 'Object', undefined, true, true) : Object = J$.R(1112689, 'Object', Object, true, true)), 'setPrototypeOf')) ? J$._() : J$.T(1112777, function _setPrototypeOf(o, p) {
                                jalangiLabel14:
                                    while (true) {
                                        try {
                                            J$.Fe(1112745, arguments.callee, this, arguments);
                                            arguments = J$.N(1112753, 'arguments', arguments, true, false, false);
                                            o = J$.N(1112761, 'o', o, true, false, false);
                                            p = J$.N(1112769, 'p', p, true, false, false);
                                            J$.P(1112721, J$.R(1112705, 'o', o, false, false), '__proto__', J$.R(1112713, 'p', p, false, false));
                                            return J$.Rt(1112737, J$.R(1112729, 'o', o, false, false));
                                        } catch (J$e) {
                                            J$.Ex(1125873, J$e);
                                        } finally {
                                            if (J$.Fr(1125881))
                                                continue jalangiLabel14;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false), _setPrototypeOf, false, true);
                            return J$.Rt(1112825, J$.F(1112817, J$.R(1112793, '_setPrototypeOf', _setPrototypeOf, false, true), false)(J$.R(1112801, 'o', o, false, false), J$.R(1112809, 'p', p, false, false)));
                        } catch (J$e) {
                            J$.Ex(1125889, J$e);
                        } finally {
                            if (J$.Fr(1125897))
                                continue jalangiLabel15;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function loadClient() {
                jalangiLabel16:
                    while (true) {
                        try {
                            J$.Fe(1113489, arguments.callee, this, arguments);
                            arguments = J$.N(1113497, 'arguments', arguments, true, false, false);
                            if (J$.C(68392, J$.U(111410, '!', J$.R(1113433, 'client', client, false, true)))) {
                                client = J$.W(1113465, 'client', J$.F(1113457, J$.I(typeof require === 'undefined' ? require = J$.R(1113441, 'require', undefined, true, true) : require = J$.R(1113441, 'require', require, true, true)), false)(J$.T(1113449, '../mongo_client', 21, false)), client, false, true);
                            }
                            return J$.Rt(1113481, J$.R(1113473, 'client', client, false, true));
                        } catch (J$e) {
                            J$.Ex(1125905, J$e);
                        } finally {
                            if (J$.Fr(1125913))
                                continue jalangiLabel16;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function validOptions(options) {
                jalangiLabel17:
                    while (true) {
                        try {
                            J$.Fe(1114841, arguments.callee, this, arguments);
                            arguments = J$.N(1114849, 'arguments', arguments, true, false, false);
                            options = J$.N(1114857, 'options', options, true, false, false);
                            J$.N(1114865, '_validOptions', _validOptions, false, false, false);
                            J$.N(1114873, 'name', name, false, false, false);
                            var _validOptions = J$.W(1114537, '_validOptions', J$.M(1114529, J$.R(1114513, 'validOptionNames', validOptionNames, false, true), 'concat', false)(J$.R(1114521, 'legacyOptionNames', legacyOptionNames, false, true)), _validOptions, false, false);
                            for (var name in J$.H(1114825, J$.R(1114545, 'options', options, false, false))) {
                                J$.N(1114833, 'name', name, false, true, false);
                                {
                                    {
                                        if (J$.C(68400, J$.B(111434, '!==', J$.M(1114569, J$.R(1114553, 'ignoreOptionNames', ignoreOptionNames, false, true), 'indexOf', false)(J$.R(1114561, 'name', name, false, false)), J$.U(111426, '-', J$.T(1114577, 1, 22, false))))) {
                                            continue;
                                        }
                                        if (J$.C(68416, J$.B(111450, '===', J$.M(1114601, J$.R(1114585, '_validOptions', _validOptions, false, false), 'indexOf', false)(J$.R(1114593, 'name', name, false, false)), J$.U(111442, '-', J$.T(1114609, 1, 22, false))))) {
                                            if (J$.C(68408, J$.G(1114625, J$.R(1114617, 'options', options, false, false), 'validateOptions'))) {
                                                return J$.Rt(1114681, J$.F(1114673, J$.R(1114633, 'MongoError', MongoError, false, true), true)(J$.M(1114665, J$.T(1114641, 'option ', 21, false), 'concat', false)(J$.R(1114649, 'name', name, false, false), J$.T(1114657, ' is not supported', 21, false))));
                                            } else {
                                                J$.M(1114729, J$.I(typeof console === 'undefined' ? console = J$.R(1114689, 'console', undefined, true, true) : console = J$.R(1114689, 'console', console, true, true)), 'warn', false)(J$.M(1114721, J$.T(1114697, 'the options [', 21, false), 'concat', false)(J$.R(1114705, 'name', name, false, false), J$.T(1114713, '] is not supported', 21, false)));
                                            }
                                        }
                                        if (J$.C(68424, J$.B(111466, '!==', J$.M(1114753, J$.R(1114737, 'legacyOptionNames', legacyOptionNames, false, true), 'indexOf', false)(J$.R(1114745, 'name', name, false, false)), J$.U(111458, '-', J$.T(1114761, 1, 22, false))))) {
                                            J$.M(1114817, J$.I(typeof console === 'undefined' ? console = J$.R(1114769, 'console', undefined, true, true) : console = J$.R(1114769, 'console', console, true, true)), 'warn', false)(J$.B(111474, '+', J$.T(1114777, 'the server/replset/mongos/db options are deprecated, ', 21, false), J$.M(1114809, J$.T(1114785, 'all their options are supported at the top level of the options object [', 21, false), 'concat', false)(J$.R(1114793, 'validOptionNames', validOptionNames, false, true), J$.T(1114801, ']', 21, false))));
                                        }
                                    }
                                }
                            }
                        } catch (J$e) {
                            J$.Ex(1125921, J$e);
                        } finally {
                            if (J$.Fr(1125929))
                                continue jalangiLabel17;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function addListeners(mongoClient, topology) {
                jalangiLabel23:
                    while (true) {
                        try {
                            J$.Fe(1116241, arguments.callee, this, arguments);
                            arguments = J$.N(1116249, 'arguments', arguments, true, false, false);
                            mongoClient = J$.N(1116257, 'mongoClient', mongoClient, true, false, false);
                            topology = J$.N(1116265, 'topology', topology, true, false, false);
                            J$.M(1115785, J$.R(1115737, 'topology', topology, false, false), 'on', false)(J$.T(1115745, 'authenticated', 21, false), J$.F(1115777, J$.R(1115753, 'createListener', createListener, false, true), false)(J$.R(1115761, 'mongoClient', mongoClient, false, false), J$.T(1115769, 'authenticated', 21, false)));
                            J$.M(1115841, J$.R(1115793, 'topology', topology, false, false), 'on', false)(J$.T(1115801, 'error', 21, false), J$.F(1115833, J$.R(1115809, 'createListener', createListener, false, true), false)(J$.R(1115817, 'mongoClient', mongoClient, false, false), J$.T(1115825, 'error', 21, false)));
                            J$.M(1115897, J$.R(1115849, 'topology', topology, false, false), 'on', false)(J$.T(1115857, 'timeout', 21, false), J$.F(1115889, J$.R(1115865, 'createListener', createListener, false, true), false)(J$.R(1115873, 'mongoClient', mongoClient, false, false), J$.T(1115881, 'timeout', 21, false)));
                            J$.M(1115953, J$.R(1115905, 'topology', topology, false, false), 'on', false)(J$.T(1115913, 'close', 21, false), J$.F(1115945, J$.R(1115921, 'createListener', createListener, false, true), false)(J$.R(1115929, 'mongoClient', mongoClient, false, false), J$.T(1115937, 'close', 21, false)));
                            J$.M(1116009, J$.R(1115961, 'topology', topology, false, false), 'on', false)(J$.T(1115969, 'parseError', 21, false), J$.F(1116001, J$.R(1115977, 'createListener', createListener, false, true), false)(J$.R(1115985, 'mongoClient', mongoClient, false, false), J$.T(1115993, 'parseError', 21, false)));
                            J$.M(1116065, J$.R(1116017, 'topology', topology, false, false), 'once', false)(J$.T(1116025, 'open', 21, false), J$.F(1116057, J$.R(1116033, 'createListener', createListener, false, true), false)(J$.R(1116041, 'mongoClient', mongoClient, false, false), J$.T(1116049, 'open', 21, false)));
                            J$.M(1116121, J$.R(1116073, 'topology', topology, false, false), 'once', false)(J$.T(1116081, 'fullsetup', 21, false), J$.F(1116113, J$.R(1116089, 'createListener', createListener, false, true), false)(J$.R(1116097, 'mongoClient', mongoClient, false, false), J$.T(1116105, 'fullsetup', 21, false)));
                            J$.M(1116177, J$.R(1116129, 'topology', topology, false, false), 'once', false)(J$.T(1116137, 'all', 21, false), J$.F(1116169, J$.R(1116145, 'createListener', createListener, false, true), false)(J$.R(1116153, 'mongoClient', mongoClient, false, false), J$.T(1116161, 'all', 21, false)));
                            J$.M(1116233, J$.R(1116185, 'topology', topology, false, false), 'on', false)(J$.T(1116193, 'reconnect', 21, false), J$.F(1116225, J$.R(1116201, 'createListener', createListener, false, true), false)(J$.R(1116209, 'mongoClient', mongoClient, false, false), J$.T(1116217, 'reconnect', 21, false)));
                        } catch (J$e) {
                            J$.Ex(1126017, J$e);
                        } finally {
                            if (J$.Fr(1126025))
                                continue jalangiLabel23;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function assignTopology(client, topology) {
                jalangiLabel24:
                    while (true) {
                        try {
                            J$.Fe(1116401, arguments.callee, this, arguments);
                            arguments = J$.N(1116409, 'arguments', arguments, true, false, false);
                            client = J$.N(1116417, 'client', client, true, false, false);
                            topology = J$.N(1116425, 'topology', topology, true, false, false);
                            J$.P(1116289, J$.R(1116273, 'client', client, false, false), 'topology', J$.R(1116281, 'topology', topology, false, false));
                            J$.P(1116393, J$.G(1116305, J$.R(1116297, 'topology', topology, false, false), 's'), 'sessionPool', J$.C(68448, J$.B(111482, 'instanceof', J$.R(1116313, 'topology', topology, false, false), J$.R(1116321, 'NativeTopology', NativeTopology, false, true))) ? J$.F(1116345, J$.R(1116329, 'ServerSessionPool', ServerSessionPool, false, true), true)(J$.R(1116337, 'topology', topology, false, false)) : J$.F(1116385, J$.R(1116353, 'ServerSessionPool', ServerSessionPool, false, true), true)(J$.G(1116377, J$.G(1116369, J$.R(1116361, 'topology', topology, false, false), 's'), 'coreTopology')));
                        } catch (J$e) {
                            J$.Ex(1126033, J$e);
                        } finally {
                            if (J$.Fr(1126041))
                                continue jalangiLabel24;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function clearAllEvents(topology) {
                jalangiLabel26:
                    while (true) {
                        try {
                            J$.Fe(1116513, arguments.callee, this, arguments);
                            arguments = J$.N(1116521, 'arguments', arguments, true, false, false);
                            topology = J$.N(1116529, 'topology', topology, true, false, false);
                            J$.M(1116505, J$.R(1116433, 'monitoringEvents', monitoringEvents, false, true), 'forEach', false)(J$.T(1116497, function (event) {
                                jalangiLabel25:
                                    while (true) {
                                        try {
                                            J$.Fe(1116473, arguments.callee, this, arguments);
                                            arguments = J$.N(1116481, 'arguments', arguments, true, false, false);
                                            event = J$.N(1116489, 'event', event, true, false, false);
                                            return J$.Rt(1116465, J$.M(1116457, J$.R(1116441, 'topology', topology, false, false), 'removeAllListeners', false)(J$.R(1116449, 'event', event, false, false)));
                                        } catch (J$e) {
                                            J$.Ex(1126049, J$e);
                                        } finally {
                                            if (J$.Fr(1126057))
                                                continue jalangiLabel25;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                        } catch (J$e) {
                            J$.Ex(1126065, J$e);
                        } finally {
                            if (J$.Fr(1126073))
                                continue jalangiLabel26;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function collectEvents(mongoClient, topology) {
                jalangiLabel29:
                    while (true) {
                        try {
                            J$.Fe(1116825, arguments.callee, this, arguments);
                            arguments = J$.N(1116833, 'arguments', arguments, true, false, false);
                            mongoClient = J$.N(1116841, 'mongoClient', mongoClient, true, false, false);
                            topology = J$.N(1116849, 'topology', topology, true, false, false);
                            J$.N(1116857, 'MongoClient', MongoClient, false, false, false);
                            J$.N(1116865, 'collectedEvents', collectedEvents, false, false, false);
                            var MongoClient = J$.W(1116553, 'MongoClient', J$.F(1116545, J$.R(1116537, 'loadClient', loadClient, false, true), false)(), MongoClient, false, false);
                            var collectedEvents = J$.W(1116569, 'collectedEvents', J$.T(1116561, [], 10, false), collectedEvents, false, false);
                            if (J$.C(68464, J$.B(111490, 'instanceof', J$.R(1116577, 'mongoClient', mongoClient, false, false), J$.R(1116585, 'MongoClient', MongoClient, false, false)))) {
                                J$.M(1116801, J$.R(1116593, 'monitoringEvents', monitoringEvents, false, true), 'forEach', false)(J$.T(1116793, function (event) {
                                    jalangiLabel28:
                                        while (true) {
                                            try {
                                                J$.Fe(1116769, arguments.callee, this, arguments);
                                                arguments = J$.N(1116777, 'arguments', arguments, true, false, false);
                                                event = J$.N(1116785, 'event', event, true, false, false);
                                                J$.M(1116761, J$.R(1116601, 'topology', topology, false, false), 'on', false)(J$.R(1116609, 'event', event, false, false), J$.T(1116753, function (object1, object2) {
                                                    jalangiLabel27:
                                                        while (true) {
                                                            try {
                                                                J$.Fe(1116721, arguments.callee, this, arguments);
                                                                arguments = J$.N(1116729, 'arguments', arguments, true, false, false);
                                                                object1 = J$.N(1116737, 'object1', object1, true, false, false);
                                                                object2 = J$.N(1116745, 'object2', object2, true, false, false);
                                                                if (J$.C(68456, J$.B(111498, '===', J$.R(1116617, 'event', event, false, false), J$.T(1116625, 'open', 21, false)))) {
                                                                    J$.M(1116665, J$.R(1116633, 'collectedEvents', collectedEvents, false, false), 'push', false)(J$.T(1116657, {
                                                                        event: J$.R(1116641, 'event', event, false, false),
                                                                        object1: J$.R(1116649, 'mongoClient', mongoClient, false, false)
                                                                    }, 11, false));
                                                                } else {
                                                                    J$.M(1116713, J$.R(1116673, 'collectedEvents', collectedEvents, false, false), 'push', false)(J$.T(1116705, {
                                                                        event: J$.R(1116681, 'event', event, false, false),
                                                                        object1: J$.R(1116689, 'object1', object1, false, false),
                                                                        object2: J$.R(1116697, 'object2', object2, false, false)
                                                                    }, 11, false));
                                                                }
                                                            } catch (J$e) {
                                                                J$.Ex(1126081, J$e);
                                                            } finally {
                                                                if (J$.Fr(1126089))
                                                                    continue jalangiLabel27;
                                                                else
                                                                    return J$.Ra();
                                                            }
                                                        }
                                                }, 12, false));
                                            } catch (J$e) {
                                                J$.Ex(1126097, J$e);
                                            } finally {
                                                if (J$.Fr(1126105))
                                                    continue jalangiLabel28;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false));
                            }
                            return J$.Rt(1116817, J$.R(1116809, 'collectedEvents', collectedEvents, false, false));
                        } catch (J$e) {
                            J$.Ex(1126113, J$e);
                        } finally {
                            if (J$.Fr(1126121))
                                continue jalangiLabel29;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function connect(mongoClient, url, options, callback) {
                jalangiLabel33:
                    while (true) {
                        try {
                            J$.Fe(1118633, arguments.callee, this, arguments);
                            function connectCallback(err, topology) {
                                jalangiLabel32:
                                    while (true) {
                                        try {
                                            J$.Fe(1118593, arguments.callee, this, arguments);
                                            arguments = J$.N(1118601, 'arguments', arguments, true, false, false);
                                            err = J$.N(1118609, 'err', err, true, false, false);
                                            topology = J$.N(1118617, 'topology', topology, true, false, false);
                                            J$.N(1118625, 'warningMessage', warningMessage, false, false, false);
                                            var warningMessage = J$.W(1118385, 'warningMessage', J$.T(1118377, 'seed list contains no mongos proxies, replicaset connections requires the parameter replicaSet to be supplied in the URI or options object, mongodb://server:port/db?replicaSet=name', 21, false), warningMessage, false, false);
                                            if (J$.C(68656, J$.C(68640, J$.R(1118393, 'err', err, false, false)) ? J$.B(111626, '===', J$.G(1118409, J$.R(1118401, 'err', err, false, false), 'message'), J$.T(1118417, 'no mongos proxies found in seed list', 21, false)) : J$._())) {
                                                if (J$.C(68648, J$.M(1118433, J$.R(1118425, 'logger', logger, false, false), 'isWarn', false)())) {
                                                    J$.M(1118457, J$.R(1118441, 'logger', logger, false, false), 'warn', false)(J$.R(1118449, 'warningMessage', warningMessage, false, false));
                                                }
                                                return J$.Rt(1118505, J$.F(1118497, J$.R(1118465, 'callback', callback, false, false), false)(J$.F(1118489, J$.R(1118473, 'MongoError', MongoError, false, true), true)(J$.R(1118481, 'warningMessage', warningMessage, false, false))));
                                            }
                                            if (J$.C(68664, J$.R(1118513, 'didRequestAuthentication', didRequestAuthentication, false, false))) {
                                                J$.M(1118553, J$.R(1118521, 'mongoClient', mongoClient, false, false), 'emit', false)(J$.T(1118529, 'authenticated', 21, false), J$.T(1118537, null, 25, false), J$.T(1118545, true, 23, false));
                                            }
                                            J$.F(1118585, J$.R(1118561, 'callback', callback, false, false), false)(J$.R(1118569, 'err', err, false, false), J$.R(1118577, 'topology', topology, false, false));
                                        } catch (J$e) {
                                            J$.Ex(1126161, J$e);
                                        } finally {
                                            if (J$.Fr(1126169))
                                                continue jalangiLabel32;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }
                            arguments = J$.N(1118641, 'arguments', arguments, true, false, false);
                            mongoClient = J$.N(1118649, 'mongoClient', mongoClient, true, false, false);
                            url = J$.N(1118657, 'url', url, true, false, false);
                            options = J$.N(1118665, 'options', options, true, false, false);
                            callback = J$.N(1118673, 'callback', callback, true, false, false);
                            J$.N(1118681, 'didRequestAuthentication', didRequestAuthentication, false, false, false);
                            J$.N(1118689, 'logger', logger, false, false, false);
                            J$.N(1118697, 'useNewUrlParser', useNewUrlParser, false, false, false);
                            J$.N(1118705, 'parseFn', parseFn, false, false, false);
                            J$.N(1118713, 'transform', transform, false, false, false);
                            connectCallback = J$.N(1118729, 'connectCallback', J$.T(1118721, connectCallback, 12, false), true, false, false);
                            options = J$.W(1116969, 'options', J$.M(1116961, J$.I(typeof Object === 'undefined' ? Object = J$.R(1116937, 'Object', undefined, true, true) : Object = J$.R(1116937, 'Object', Object, true, true)), 'assign', false)(J$.T(1116945, {}, 11, false), J$.R(1116953, 'options', options, false, false)), options, false, false);
                            if (J$.C(68472, J$.B(111514, '==', J$.R(1116977, 'callback', callback, false, false), J$.T(1116985, null, 25, false)))) {
                                throw J$.F(1117009, J$.I(typeof Error === 'undefined' ? Error = J$.R(1116993, 'Error', undefined, true, true) : Error = J$.R(1116993, 'Error', Error, true, true)), true)(J$.T(1117001, 'no callback function provided', 21, false));
                            }
                            var didRequestAuthentication = J$.W(1117025, 'didRequestAuthentication', J$.T(1117017, false, 23, false), didRequestAuthentication, false, false);
                            var logger = J$.W(1117065, 'logger', J$.F(1117057, J$.R(1117033, 'Logger', Logger, false, true), false)(J$.T(1117041, 'MongoClient', 21, false), J$.R(1117049, 'options', options, false, false)), logger, false, false);
                            if (J$.C(68496, J$.C(68488, J$.C(68480, J$.B(111522, 'instanceof', J$.R(1117073, 'url', url, false, false), J$.R(1117081, 'Server', Server, false, true))) ? J$._() : J$.B(111530, 'instanceof', J$.R(1117089, 'url', url, false, false), J$.R(1117097, 'ReplSet', ReplSet, false, true))) ? J$._() : J$.B(111538, 'instanceof', J$.R(1117105, 'url', url, false, false), J$.R(1117113, 'Mongos', Mongos, false, true)))) {
                                return J$.Rt(1117169, J$.F(1117161, J$.R(1117121, 'connectWithUrl', connectWithUrl, false, true), false)(J$.R(1117129, 'mongoClient', mongoClient, false, false), J$.R(1117137, 'url', url, false, false), J$.R(1117145, 'options', options, false, false), J$.R(1117153, 'connectCallback', connectCallback, false, false)));
                            }
                            var useNewUrlParser = J$.W(1117201, 'useNewUrlParser', J$.B(111546, '!==', J$.G(1117185, J$.R(1117177, 'options', options, false, false), 'useNewUrlParser'), J$.T(1117193, false, 23, false)), useNewUrlParser, false, false);
                            var parseFn = J$.W(1117233, 'parseFn', J$.C(68504, J$.R(1117209, 'useNewUrlParser', useNewUrlParser, false, false)) ? J$.R(1117217, 'parse', parse, false, true) : J$.R(1117225, 'legacyParse', legacyParse, false, true), parseFn, false, false);
                            var transform = J$.W(1117265, 'transform', J$.C(68512, J$.R(1117241, 'useNewUrlParser', useNewUrlParser, false, false)) ? J$.R(1117249, 'transformUrlOptions', transformUrlOptions, false, true) : J$.R(1117257, 'legacyTransformUrlOptions', legacyTransformUrlOptions, false, true), transform, false, false);
                            J$.F(1118369, J$.R(1117273, 'parseFn', parseFn, false, false), false)(J$.R(1117281, 'url', url, false, false), J$.R(1117289, 'options', options, false, false), J$.T(1118361, function (err, _object) {
                                jalangiLabel31:
                                    while (true) {
                                        try {
                                            J$.Fe(1118313, arguments.callee, this, arguments);
                                            arguments = J$.N(1118321, 'arguments', arguments, true, false, false);
                                            err = J$.N(1118329, 'err', err, true, false, false);
                                            _object = J$.N(1118337, '_object', _object, true, false, false);
                                            J$.N(1118345, 'object', object, false, false, false);
                                            J$.N(1118353, '_finalOptions', _finalOptions, false, false, false);
                                            if (J$.C(68520, J$.R(1117297, 'err', err, false, false)))
                                                return J$.Rt(1117329, J$.F(1117321, J$.R(1117305, 'callback', callback, false, false), false)(J$.R(1117313, 'err', err, false, false)));
                                            var object = J$.W(1117361, 'object', J$.F(1117353, J$.R(1117337, 'transform', transform, false, false), false)(J$.R(1117345, '_object', _object, false, false)), object, false, false);
                                            var _finalOptions = J$.W(1117401, '_finalOptions', J$.F(1117393, J$.R(1117369, 'createUnifiedOptions', createUnifiedOptions, false, true), false)(J$.R(1117377, 'object', object, false, false), J$.R(1117385, 'options', options, false, false)), _finalOptions, false, false);
                                            if (J$.C(68528, J$.B(111554, '==', J$.G(1117417, J$.R(1117409, '_finalOptions', _finalOptions, false, false), 'socketTimeoutMS'), J$.T(1117425, null, 25, false))))
                                                J$.P(1117449, J$.R(1117433, '_finalOptions', _finalOptions, false, false), 'socketTimeoutMS', J$.T(1117441, 360000, 22, false));
                                            if (J$.C(68536, J$.B(111562, '==', J$.G(1117465, J$.R(1117457, '_finalOptions', _finalOptions, false, false), 'connectTimeoutMS'), J$.T(1117473, null, 25, false))))
                                                J$.P(1117497, J$.R(1117481, '_finalOptions', _finalOptions, false, false), 'connectTimeoutMS', J$.T(1117489, 30000, 22, false));
                                            if (J$.C(68544, J$.B(111570, '==', J$.G(1117513, J$.R(1117505, '_finalOptions', _finalOptions, false, false), 'retryWrites'), J$.T(1117521, null, 25, false))))
                                                J$.P(1117545, J$.R(1117529, '_finalOptions', _finalOptions, false, false), 'retryWrites', J$.T(1117537, true, 23, false));
                                            if (J$.C(68552, J$.B(111578, '==', J$.G(1117561, J$.R(1117553, '_finalOptions', _finalOptions, false, false), 'useRecoveryToken'), J$.T(1117569, null, 25, false))))
                                                J$.P(1117593, J$.R(1117577, '_finalOptions', _finalOptions, false, false), 'useRecoveryToken', J$.T(1117585, true, 23, false));
                                            if (J$.C(68560, J$.B(111586, '==', J$.G(1117609, J$.R(1117601, '_finalOptions', _finalOptions, false, false), 'readPreference'), J$.T(1117617, null, 25, false))))
                                                J$.P(1117641, J$.R(1117625, '_finalOptions', _finalOptions, false, false), 'readPreference', J$.T(1117633, 'primary', 21, false));
                                            if (J$.C(68576, J$.C(68568, J$.G(1117657, J$.R(1117649, '_finalOptions', _finalOptions, false, false), 'db_options')) ? J$.G(1117681, J$.G(1117673, J$.R(1117665, '_finalOptions', _finalOptions, false, false), 'db_options'), 'auth') : J$._())) {
                                                J$.B(111594, 'delete', J$.G(1117697, J$.R(1117689, '_finalOptions', _finalOptions, false, false), 'db_options'), 'auth');
                                            }
                                            J$.P(1117729, J$.G(1117713, J$.R(1117705, 'mongoClient', mongoClient, false, false), 's'), 'options', J$.R(1117721, '_finalOptions', _finalOptions, false, false));
                                            if (J$.C(68584, J$.B(111602, '===', J$.G(1117753, J$.G(1117745, J$.R(1117737, 'object', object, false, false), 'servers'), 'length'), J$.T(1117761, 0, 22, false)))) {
                                                return J$.Rt(1117809, J$.F(1117801, J$.R(1117769, 'callback', callback, false, false), false)(J$.F(1117793, J$.I(typeof Error === 'undefined' ? Error = J$.R(1117777, 'Error', undefined, true, true) : Error = J$.R(1117777, 'Error', Error, true, true)), true)(J$.T(1117785, 'connection string must contain at least one seed host', 21, false))));
                                            }
                                            if (J$.C(68600, J$.C(68592, J$.G(1117825, J$.R(1117817, '_finalOptions', _finalOptions, false, false), 'auth')) ? J$.U(111610, '!', J$.G(1117841, J$.R(1117833, '_finalOptions', _finalOptions, false, false), 'credentials')) : J$._())) {
                                                try {
                                                    didRequestAuthentication = J$.W(1117857, 'didRequestAuthentication', J$.T(1117849, true, 23, false), didRequestAuthentication, false, false);
                                                    J$.P(1117953, J$.R(1117865, '_finalOptions', _finalOptions, false, false), 'credentials', J$.F(1117945, J$.R(1117873, 'generateCredentials', generateCredentials, false, true), false)(J$.R(1117881, 'mongoClient', mongoClient, false, false), J$.G(1117905, J$.G(1117897, J$.R(1117889, '_finalOptions', _finalOptions, false, false), 'auth'), 'user'), J$.G(1117929, J$.G(1117921, J$.R(1117913, '_finalOptions', _finalOptions, false, false), 'auth'), 'password'), J$.R(1117937, '_finalOptions', _finalOptions, false, false)));
                                                } catch (err) {
                                                    J$.N(1117993, 'err', err, false, false, true);
                                                    return J$.Rt(1117985, J$.F(1117977, J$.R(1117961, 'callback', callback, false, false), false)(J$.R(1117969, 'err', err, false, false)));
                                                }
                                            }
                                            if (J$.C(68608, J$.G(1118009, J$.R(1118001, '_finalOptions', _finalOptions, false, false), 'useUnifiedTopology'))) {
                                                return J$.Rt(1118065, J$.F(1118057, J$.R(1118017, 'createTopology', createTopology, false, true), false)(J$.R(1118025, 'mongoClient', mongoClient, false, false), J$.T(1118033, 'unified', 21, false), J$.R(1118041, '_finalOptions', _finalOptions, false, false), J$.R(1118049, 'connectCallback', connectCallback, false, false)));
                                            }
                                            J$.F(1118081, J$.R(1118073, 'emitDeprecationForNonUnifiedTopology', emitDeprecationForNonUnifiedTopology, false, true), false)();
                                            if (J$.C(68632, J$.C(68616, J$.G(1118097, J$.R(1118089, '_finalOptions', _finalOptions, false, false), 'replicaSet')) ? J$._() : J$.G(1118113, J$.R(1118105, '_finalOptions', _finalOptions, false, false), 'rs_name'))) {
                                                return J$.Rt(1118169, J$.F(1118161, J$.R(1118121, 'createTopology', createTopology, false, true), false)(J$.R(1118129, 'mongoClient', mongoClient, false, false), J$.T(1118137, 'replicaset', 21, false), J$.R(1118145, '_finalOptions', _finalOptions, false, false), J$.R(1118153, 'connectCallback', connectCallback, false, false)));
                                            } else if (J$.C(68624, J$.B(111618, '>', J$.G(1118193, J$.G(1118185, J$.R(1118177, 'object', object, false, false), 'servers'), 'length'), J$.T(1118201, 1, 22, false)))) {
                                                return J$.Rt(1118257, J$.F(1118249, J$.R(1118209, 'createTopology', createTopology, false, true), false)(J$.R(1118217, 'mongoClient', mongoClient, false, false), J$.T(1118225, 'mongos', 21, false), J$.R(1118233, '_finalOptions', _finalOptions, false, false), J$.R(1118241, 'connectCallback', connectCallback, false, false)));
                                            } else {
                                                return J$.Rt(1118305, J$.F(1118297, J$.R(1118265, 'createServer', createServer, false, true), false)(J$.R(1118273, 'mongoClient', mongoClient, false, false), J$.R(1118281, '_finalOptions', _finalOptions, false, false), J$.R(1118289, 'connectCallback', connectCallback, false, false)));
                                            }
                                        } catch (J$e) {
                                            J$.Ex(1126145, J$e);
                                        } finally {
                                            if (J$.Fr(1126153))
                                                continue jalangiLabel31;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                        } catch (J$e) {
                            J$.Ex(1126177, J$e);
                        } finally {
                            if (J$.Fr(1126185))
                                continue jalangiLabel33;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function connectWithUrl(mongoClient, url, options, connectCallback) {
                jalangiLabel34:
                    while (true) {
                        try {
                            J$.Fe(1119233, arguments.callee, this, arguments);
                            arguments = J$.N(1119241, 'arguments', arguments, true, false, false);
                            mongoClient = J$.N(1119249, 'mongoClient', mongoClient, true, false, false);
                            url = J$.N(1119257, 'url', url, true, false, false);
                            options = J$.N(1119265, 'options', options, true, false, false);
                            connectCallback = J$.N(1119273, 'connectCallback', connectCallback, true, false, false);
                            J$.N(1119281, 'finalOptions', finalOptions, false, false, false);
                            J$.N(1119289, 'isDoingAuth', isDoingAuth, false, false, false);
                            J$.F(1118761, J$.R(1118737, 'assignTopology', assignTopology, false, true), false)(J$.R(1118745, 'mongoClient', mongoClient, false, false), J$.R(1118753, 'url', url, false, false));
                            J$.F(1118793, J$.R(1118769, 'addListeners', addListeners, false, true), false)(J$.R(1118777, 'mongoClient', mongoClient, false, false), J$.R(1118785, 'url', url, false, false));
                            J$.F(1118825, J$.R(1118801, 'relayEvents', relayEvents, false, true), false)(J$.R(1118809, 'mongoClient', mongoClient, false, false), J$.R(1118817, 'url', url, false, false));
                            var finalOptions = J$.W(1118865, 'finalOptions', J$.M(1118857, J$.I(typeof Object === 'undefined' ? Object = J$.R(1118833, 'Object', undefined, true, true) : Object = J$.R(1118833, 'Object', Object, true, true)), 'assign', false)(J$.T(1118841, {}, 11, false), J$.R(1118849, 'options', options, false, false)), finalOptions, false, false);
                            if (J$.C(68688, J$.C(68672, J$.B(111642, '===', J$.U(111634, 'typeof', J$.G(1118881, J$.R(1118873, 'options', options, false, false), 'readPreference')), J$.T(1118889, 'string', 21, false))) ? J$._() : J$.B(111658, '===', J$.U(111650, 'typeof', J$.G(1118905, J$.R(1118897, 'options', options, false, false), 'read_preference')), J$.T(1118913, 'string', 21, false)))) {
                                J$.P(1118977, J$.R(1118921, 'finalOptions', finalOptions, false, false), 'readPreference', J$.F(1118969, J$.R(1118929, 'ReadPreference', ReadPreference, false, true), true)(J$.C(68680, J$.G(1118945, J$.R(1118937, 'options', options, false, false), 'readPreference')) ? J$._() : J$.G(1118961, J$.R(1118953, 'options', options, false, false), 'read_preference')));
                            }
                            var isDoingAuth = J$.W(1119033, 'isDoingAuth', J$.C(68704, J$.C(68696, J$.G(1118993, J$.R(1118985, 'finalOptions', finalOptions, false, false), 'user')) ? J$._() : J$.G(1119009, J$.R(1119001, 'finalOptions', finalOptions, false, false), 'password')) ? J$._() : J$.G(1119025, J$.R(1119017, 'finalOptions', finalOptions, false, false), 'authMechanism'), isDoingAuth, false, false);
                            if (J$.C(68720, J$.C(68712, J$.R(1119041, 'isDoingAuth', isDoingAuth, false, false)) ? J$.U(111666, '!', J$.G(1119057, J$.R(1119049, 'finalOptions', finalOptions, false, false), 'credentials')) : J$._())) {
                                try {
                                    J$.P(1119137, J$.R(1119065, 'finalOptions', finalOptions, false, false), 'credentials', J$.F(1119129, J$.R(1119073, 'generateCredentials', generateCredentials, false, true), false)(J$.R(1119081, 'mongoClient', mongoClient, false, false), J$.G(1119097, J$.R(1119089, 'finalOptions', finalOptions, false, false), 'user'), J$.G(1119113, J$.R(1119105, 'finalOptions', finalOptions, false, false), 'password'), J$.R(1119121, 'finalOptions', finalOptions, false, false)));
                                } catch (err) {
                                    J$.N(1119185, 'err', err, false, false, true);
                                    return J$.Rt(1119177, J$.F(1119169, J$.R(1119145, 'connectCallback', connectCallback, false, false), false)(J$.R(1119153, 'err', err, false, false), J$.R(1119161, 'url', url, false, false)));
                                }
                            }
                            return J$.Rt(1119225, J$.M(1119217, J$.R(1119193, 'url', url, false, false), 'connect', false)(J$.R(1119201, 'finalOptions', finalOptions, false, false), J$.R(1119209, 'connectCallback', connectCallback, false, false)));
                        } catch (J$e) {
                            J$.Ex(1126193, J$e);
                        } finally {
                            if (J$.Fr(1126201))
                                continue jalangiLabel34;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function createListener(mongoClient, event) {
                jalangiLabel36:
                    while (true) {
                        try {
                            J$.Fe(1119513, arguments.callee, this, arguments);
                            arguments = J$.N(1119521, 'arguments', arguments, true, false, false);
                            mongoClient = J$.N(1119529, 'mongoClient', mongoClient, true, false, false);
                            event = J$.N(1119537, 'event', event, true, false, false);
                            J$.N(1119545, 'eventSet', eventSet, false, false, false);
                            var eventSet = J$.W(1119353, 'eventSet', J$.F(1119345, J$.I(typeof Set === 'undefined' ? Set = J$.R(1119297, 'Set', undefined, true, true) : Set = J$.R(1119297, 'Set', Set, true, true)), true)(J$.T(1119337, [
                                J$.T(1119305, 'all', 21, false),
                                J$.T(1119313, 'fullsetup', 21, false),
                                J$.T(1119321, 'open', 21, false),
                                J$.T(1119329, 'reconnect', 21, false)
                            ], 10, false)), eventSet, false, false);
                            return J$.Rt(1119505, J$.T(1119497, function (v1, v2) {
                                jalangiLabel35:
                                    while (true) {
                                        try {
                                            J$.Fe(1119465, arguments.callee, this, arguments);
                                            arguments = J$.N(1119473, 'arguments', arguments, true, false, false);
                                            v1 = J$.N(1119481, 'v1', v1, true, false, false);
                                            v2 = J$.N(1119489, 'v2', v2, true, false, false);
                                            if (J$.C(68728, J$.M(1119377, J$.R(1119361, 'eventSet', eventSet, false, false), 'has', false)(J$.R(1119369, 'event', event, false, false)))) {
                                                return J$.Rt(1119417, J$.M(1119409, J$.R(1119385, 'mongoClient', mongoClient, false, false), 'emit', false)(J$.R(1119393, 'event', event, false, false), J$.R(1119401, 'mongoClient', mongoClient, false, false)));
                                            }
                                            J$.M(1119457, J$.R(1119425, 'mongoClient', mongoClient, false, false), 'emit', false)(J$.R(1119433, 'event', event, false, false), J$.R(1119441, 'v1', v1, false, false), J$.R(1119449, 'v2', v2, false, false));
                                        } catch (J$e) {
                                            J$.Ex(1126209, J$e);
                                        } finally {
                                            if (J$.Fr(1126217))
                                                continue jalangiLabel35;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                        } catch (J$e) {
                            J$.Ex(1126225, J$e);
                        } finally {
                            if (J$.Fr(1126233))
                                continue jalangiLabel36;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function createServer(mongoClient, options, callback) {
                jalangiLabel38:
                    while (true) {
                        try {
                            J$.Fe(1120145, arguments.callee, this, arguments);
                            arguments = J$.N(1120153, 'arguments', arguments, true, false, false);
                            mongoClient = J$.N(1120161, 'mongoClient', mongoClient, true, false, false);
                            options = J$.N(1120169, 'options', options, true, false, false);
                            callback = J$.N(1120177, 'callback', callback, true, false, false);
                            J$.N(1120185, 'servers', servers, false, false, false);
                            J$.N(1120193, 'server', server, false, false, false);
                            J$.N(1120201, 'collectedEvents', collectedEvents, false, false, false);
                            J$.P(1119585, J$.R(1119553, 'options', options, false, false), 'promiseLibrary', J$.G(1119577, J$.G(1119569, J$.R(1119561, 'mongoClient', mongoClient, false, false), 's'), 'promiseLibrary'));
                            var servers = J$.W(1119617, 'servers', J$.F(1119609, J$.R(1119593, 'translateOptions', translateOptions, false, true), false)(J$.R(1119601, 'options', options, false, false)), servers, false, false);
                            var server = J$.W(1119649, 'server', J$.G(1119641, J$.R(1119625, 'servers', servers, false, false), J$.T(1119633, 0, 22, false)), server, false, false);
                            var collectedEvents = J$.W(1119689, 'collectedEvents', J$.F(1119681, J$.R(1119657, 'collectEvents', collectEvents, false, true), false)(J$.R(1119665, 'mongoClient', mongoClient, false, false), J$.R(1119673, 'server', server, false, false)), collectedEvents, false, false);
                            J$.M(1120137, J$.R(1119697, 'server', server, false, false), 'connect', false)(J$.R(1119705, 'options', options, false, false), J$.T(1120129, function (err, topology) {
                                jalangiLabel37:
                                    while (true) {
                                        try {
                                            J$.Fe(1120089, arguments.callee, this, arguments);
                                            arguments = J$.N(1120097, 'arguments', arguments, true, false, false);
                                            err = J$.N(1120105, 'err', err, true, false, false);
                                            topology = J$.N(1120113, 'topology', topology, true, false, false);
                                            J$.N(1120121, 'ismaster', ismaster, false, false, false);
                                            if (J$.C(68736, J$.R(1119713, 'err', err, false, false))) {
                                                J$.M(1119737, J$.R(1119721, 'server', server, false, false), 'close', false)(J$.T(1119729, true, 23, false));
                                                return J$.Rt(1119769, J$.F(1119761, J$.R(1119745, 'callback', callback, false, false), false)(J$.R(1119753, 'err', err, false, false)));
                                            }
                                            J$.F(1119793, J$.R(1119777, 'clearAllEvents', clearAllEvents, false, true), false)(J$.R(1119785, 'server', server, false, false));
                                            J$.F(1119825, J$.R(1119801, 'relayEvents', relayEvents, false, true), false)(J$.R(1119809, 'mongoClient', mongoClient, false, false), J$.R(1119817, 'server', server, false, false));
                                            J$.F(1119857, J$.R(1119833, 'addListeners', addListeners, false, true), false)(J$.R(1119841, 'mongoClient', mongoClient, false, false), J$.R(1119849, 'server', server, false, false));
                                            var ismaster = J$.W(1119881, 'ismaster', J$.M(1119873, J$.R(1119865, 'topology', topology, false, false), 'lastIsMaster', false)(), ismaster, false, false);
                                            J$.F(1119913, J$.R(1119889, 'assignTopology', assignTopology, false, true), false)(J$.R(1119897, 'mongoClient', mongoClient, false, false), J$.R(1119905, 'topology', topology, false, false));
                                            if (J$.C(68752, J$.C(68744, J$.R(1119921, 'ismaster', ismaster, false, false)) ? J$.B(111674, '===', J$.G(1119937, J$.R(1119929, 'ismaster', ismaster, false, false), 'msg'), J$.T(1119945, 'isdbgrid', 21, false)) : J$._())) {
                                                J$.M(1119961, J$.R(1119953, 'topology', topology, false, false), 'close', false)();
                                                return J$.Rt(1120017, J$.F(1120009, J$.R(1119969, 'createTopology', createTopology, false, true), false)(J$.R(1119977, 'mongoClient', mongoClient, false, false), J$.T(1119985, 'mongos', 21, false), J$.R(1119993, 'options', options, false, false), J$.R(1120001, 'callback', callback, false, false)));
                                            }
                                            J$.F(1120049, J$.R(1120025, 'replayEvents', replayEvents, false, true), false)(J$.R(1120033, 'mongoClient', mongoClient, false, false), J$.R(1120041, 'collectedEvents', collectedEvents, false, false));
                                            J$.F(1120081, J$.R(1120057, 'callback', callback, false, false), false)(J$.R(1120065, 'err', err, false, false), J$.R(1120073, 'topology', topology, false, false));
                                        } catch (J$e) {
                                            J$.Ex(1126241, J$e);
                                        } finally {
                                            if (J$.Fr(1126249))
                                                continue jalangiLabel37;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                        } catch (J$e) {
                            J$.Ex(1126257, J$e);
                        } finally {
                            if (J$.Fr(1126265))
                                continue jalangiLabel38;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function createTopology(mongoClient, topologyType, options, callback) {
                jalangiLabel41:
                    while (true) {
                        try {
                            J$.Fe(1121273, arguments.callee, this, arguments);
                            arguments = J$.N(1121281, 'arguments', arguments, true, false, false);
                            mongoClient = J$.N(1121289, 'mongoClient', mongoClient, true, false, false);
                            topologyType = J$.N(1121297, 'topologyType', topologyType, true, false, false);
                            options = J$.N(1121305, 'options', options, true, false, false);
                            callback = J$.N(1121313, 'callback', callback, true, false, false);
                            J$.N(1121321, 'translationOptions', translationOptions, false, false, false);
                            J$.N(1121329, 'servers', servers, false, false, false);
                            J$.N(1121337, 'topology', topology, false, false, false);
                            J$.P(1120241, J$.R(1120209, 'options', options, false, false), 'promiseLibrary', J$.G(1120233, J$.G(1120225, J$.R(1120217, 'mongoClient', mongoClient, false, false), 's'), 'promiseLibrary'));
                            var translationOptions = J$.W(1120257, 'translationOptions', J$.T(1120249, {}, 11, false), translationOptions, false, false);
                            if (J$.C(68760, J$.B(111682, '===', J$.R(1120265, 'topologyType', topologyType, false, false), J$.T(1120273, 'unified', 21, false))))
                                J$.P(1120297, J$.R(1120281, 'translationOptions', translationOptions, false, false), 'createServers', J$.T(1120289, false, 23, false));
                            var servers = J$.W(1120337, 'servers', J$.F(1120329, J$.R(1120305, 'translateOptions', translateOptions, false, true), false)(J$.R(1120313, 'options', options, false, false), J$.R(1120321, 'translationOptions', translationOptions, false, false)), servers, false, false);
                            var topology;
                            if (J$.C(68784, J$.B(111690, '===', J$.R(1120345, 'topologyType', topologyType, false, false), J$.T(1120353, 'mongos', 21, false)))) {
                                topology = J$.W(1120393, 'topology', J$.F(1120385, J$.R(1120361, 'Mongos', Mongos, false, true), true)(J$.R(1120369, 'servers', servers, false, false), J$.R(1120377, 'options', options, false, false)), topology, false, false);
                            } else if (J$.C(68776, J$.B(111698, '===', J$.R(1120401, 'topologyType', topologyType, false, false), J$.T(1120409, 'replicaset', 21, false)))) {
                                topology = J$.W(1120449, 'topology', J$.F(1120441, J$.R(1120417, 'ReplSet', ReplSet, false, true), true)(J$.R(1120425, 'servers', servers, false, false), J$.R(1120433, 'options', options, false, false)), topology, false, false);
                            } else if (J$.C(68768, J$.B(111706, '===', J$.R(1120457, 'topologyType', topologyType, false, false), J$.T(1120465, 'unified', 21, false)))) {
                                topology = J$.W(1120513, 'topology', J$.F(1120505, J$.R(1120473, 'NativeTopology', NativeTopology, false, true), true)(J$.G(1120489, J$.R(1120481, 'options', options, false, false), 'servers'), J$.R(1120497, 'options', options, false, false)), topology, false, false);
                            }
                            J$.F(1120545, J$.R(1120521, 'addListeners', addListeners, false, true), false)(J$.R(1120529, 'mongoClient', mongoClient, false, false), J$.R(1120537, 'topology', topology, false, false));
                            J$.F(1120577, J$.R(1120553, 'relayEvents', relayEvents, false, true), false)(J$.R(1120561, 'mongoClient', mongoClient, false, false), J$.R(1120569, 'topology', topology, false, false));
                            J$.F(1120609, J$.R(1120585, 'assignTopology', assignTopology, false, true), false)(J$.R(1120593, 'mongoClient', mongoClient, false, false), J$.R(1120601, 'topology', topology, false, false));
                            J$.M(1121265, J$.R(1120617, 'topology', topology, false, false), 'connect', false)(J$.R(1120625, 'options', options, false, false), J$.T(1121257, function (err) {
                                jalangiLabel40:
                                    while (true) {
                                        try {
                                            J$.Fe(1121217, arguments.callee, this, arguments);
                                            arguments = J$.N(1121225, 'arguments', arguments, true, false, false);
                                            err = J$.N(1121233, 'err', err, true, false, false);
                                            J$.N(1121241, 'AutoEncrypter', AutoEncrypter, false, false, false);
                                            J$.N(1121249, 'mongoCryptOptions', mongoCryptOptions, false, false, false);
                                            if (J$.C(68792, J$.R(1120633, 'err', err, false, false))) {
                                                J$.M(1120657, J$.R(1120641, 'topology', topology, false, false), 'close', false)(J$.T(1120649, true, 23, false));
                                                return J$.Rt(1120689, J$.F(1120681, J$.R(1120665, 'callback', callback, false, false), false)(J$.R(1120673, 'err', err, false, false)));
                                            }
                                            if (J$.C(68800, J$.B(111714, '==', J$.G(1120705, J$.R(1120697, 'options', options, false, false), 'autoEncryption'), J$.T(1120713, null, 25, false)))) {
                                                J$.F(1120745, J$.R(1120721, 'callback', callback, false, false), false)(J$.T(1120729, null, 25, false), J$.R(1120737, 'topology', topology, false, false));
                                                return J$.Rt(1120753, undefined);
                                            }
                                            var AutoEncrypter;
                                            try {
                                                J$.M(1120777, J$.I(typeof require === 'undefined' ? require = J$.R(1120761, 'require', undefined, true, true) : require = J$.R(1120761, 'require', require, true, true)), 'resolve', false)(J$.T(1120769, 'mongodb-client-encryption', 21, false));
                                            } catch (err) {
                                                J$.N(1120833, 'err', err, false, false, true);
                                                J$.F(1120817, J$.R(1120785, 'callback', callback, false, false), false)(J$.F(1120809, J$.R(1120793, 'MongoError', MongoError, false, true), true)(J$.T(1120801, 'Auto-encryption requested, but the module is not installed. Please add `mongodb-client-encryption` as a dependency of your project', 21, false)));
                                                return J$.Rt(1120825, undefined);
                                            }
                                            try {
                                                AutoEncrypter = J$.W(1120905, 'AutoEncrypter', J$.G(1120897, J$.F(1120889, J$.F(1120857, J$.I(typeof require === 'undefined' ? require = J$.R(1120841, 'require', undefined, true, true) : require = J$.R(1120841, 'require', require, true, true)), false)(J$.T(1120849, 'mongodb-client-encryption', 21, false)), false)(J$.F(1120881, J$.I(typeof require === 'undefined' ? require = J$.R(1120865, 'require', undefined, true, true) : require = J$.R(1120865, 'require', require, true, true)), false)(J$.T(1120873, '../../index', 21, false))), 'AutoEncrypter'), AutoEncrypter, false, false);
                                            } catch (err) {
                                                J$.N(1120945, 'err', err, false, false, true);
                                                J$.F(1120929, J$.R(1120913, 'callback', callback, false, false), false)(J$.R(1120921, 'err', err, false, false));
                                                return J$.Rt(1120937, undefined);
                                            }
                                            var mongoCryptOptions = J$.W(1120993, 'mongoCryptOptions', J$.M(1120985, J$.I(typeof Object === 'undefined' ? Object = J$.R(1120953, 'Object', undefined, true, true) : Object = J$.R(1120953, 'Object', Object, true, true)), 'assign', false)(J$.T(1120961, {}, 11, false), J$.G(1120977, J$.R(1120969, 'options', options, false, false), 'autoEncryption')), mongoCryptOptions, false, false);
                                            J$.P(1121057, J$.G(1121017, J$.G(1121009, J$.R(1121001, 'topology', topology, false, false), 's'), 'options'), 'autoEncrypter', J$.F(1121049, J$.R(1121025, 'AutoEncrypter', AutoEncrypter, false, false), true)(J$.R(1121033, 'mongoClient', mongoClient, false, false), J$.R(1121041, 'mongoCryptOptions', mongoCryptOptions, false, false)));
                                            J$.M(1121209, J$.G(1121089, J$.G(1121081, J$.G(1121073, J$.R(1121065, 'topology', topology, false, false), 's'), 'options'), 'autoEncrypter'), 'init', false)(J$.T(1121201, function (err) {
                                                jalangiLabel39:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(1121177, arguments.callee, this, arguments);
                                                            arguments = J$.N(1121185, 'arguments', arguments, true, false, false);
                                                            err = J$.N(1121193, 'err', err, true, false, false);
                                                            if (J$.C(68808, J$.R(1121097, 'err', err, false, false)))
                                                                return J$.Rt(1121137, J$.F(1121129, J$.R(1121105, 'callback', callback, false, false), false)(J$.R(1121113, 'err', err, false, false), J$.T(1121121, null, 25, false)));
                                                            J$.F(1121169, J$.R(1121145, 'callback', callback, false, false), false)(J$.T(1121153, null, 25, false), J$.R(1121161, 'topology', topology, false, false));
                                                        } catch (J$e) {
                                                            J$.Ex(1126273, J$e);
                                                        } finally {
                                                            if (J$.Fr(1126281))
                                                                continue jalangiLabel39;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false));
                                        } catch (J$e) {
                                            J$.Ex(1126289, J$e);
                                        } finally {
                                            if (J$.Fr(1126297))
                                                continue jalangiLabel40;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                        } catch (J$e) {
                            J$.Ex(1126305, J$e);
                        } finally {
                            if (J$.Fr(1126313))
                                continue jalangiLabel41;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function createUnifiedOptions(finalOptions, options) {
                jalangiLabel42:
                    while (true) {
                        try {
                            J$.Fe(1121953, arguments.callee, this, arguments);
                            arguments = J$.N(1121961, 'arguments', arguments, true, false, false);
                            finalOptions = J$.N(1121969, 'finalOptions', finalOptions, true, false, false);
                            options = J$.N(1121977, 'options', options, true, false, false);
                            J$.N(1121985, 'childOptions', childOptions, false, false, false);
                            J$.N(1121993, 'noMerge', noMerge, false, false, false);
                            J$.N(1122001, 'name', name, false, false, false);
                            var childOptions = J$.W(1121417, 'childOptions', J$.T(1121409, [
                                J$.T(1121345, 'mongos', 21, false),
                                J$.T(1121353, 'server', 21, false),
                                J$.T(1121361, 'db', 21, false),
                                J$.T(1121369, 'replset', 21, false),
                                J$.T(1121377, 'db_options', 21, false),
                                J$.T(1121385, 'server_options', 21, false),
                                J$.T(1121393, 'rs_options', 21, false),
                                J$.T(1121401, 'mongos_options', 21, false)
                            ], 10, false), childOptions, false, false);
                            var noMerge = J$.W(1121449, 'noMerge', J$.T(1121441, [
                                J$.T(1121425, 'readconcern', 21, false),
                                J$.T(1121433, 'compression', 21, false)
                            ], 10, false), noMerge, false, false);
                            for (var name in J$.H(1121921, J$.R(1121457, 'options', options, false, false))) {
                                J$.N(1121929, 'name', name, false, true, false);
                                {
                                    {
                                        if (J$.C(68856, J$.B(111730, '!==', J$.M(1121489, J$.R(1121465, 'noMerge', noMerge, false, false), 'indexOf', false)(J$.M(1121481, J$.R(1121473, 'name', name, false, false), 'toLowerCase', false)()), J$.U(111722, '-', J$.T(1121497, 1, 22, false))))) {
                                            J$.P(1121545, J$.R(1121505, 'finalOptions', finalOptions, false, false), J$.R(1121513, 'name', name, false, false), J$.G(1121537, J$.R(1121521, 'options', options, false, false), J$.R(1121529, 'name', name, false, false)));
                                        } else if (J$.C(68848, J$.B(111746, '!==', J$.M(1121577, J$.R(1121553, 'childOptions', childOptions, false, false), 'indexOf', false)(J$.M(1121569, J$.R(1121561, 'name', name, false, false), 'toLowerCase', false)()), J$.U(111738, '-', J$.T(1121585, 1, 22, false))))) {
                                            finalOptions = J$.W(1121649, 'finalOptions', J$.F(1121641, J$.R(1121593, 'mergeOptions', mergeOptions, false, true), false)(J$.R(1121601, 'finalOptions', finalOptions, false, false), J$.G(1121625, J$.R(1121609, 'options', options, false, false), J$.R(1121617, 'name', name, false, false)), J$.T(1121633, false, 23, false)), finalOptions, false, false);
                                        } else {
                                            if (J$.C(68840, J$.C(68832, J$.C(68824, J$.C(68816, J$.G(1121673, J$.R(1121657, 'options', options, false, false), J$.R(1121665, 'name', name, false, false))) ? J$.B(111754, '===', J$.F(1121713, J$.R(1121681, '_typeof', _typeof, false, true), false)(J$.G(1121705, J$.R(1121689, 'options', options, false, false), J$.R(1121697, 'name', name, false, false))), J$.T(1121721, 'object', 21, false)) : J$._()) ? J$.U(111762, '!', J$.M(1121761, J$.I(typeof Buffer === 'undefined' ? Buffer = J$.R(1121729, 'Buffer', undefined, true, true) : Buffer = J$.R(1121729, 'Buffer', Buffer, true, true)), 'isBuffer', false)(J$.G(1121753, J$.R(1121737, 'options', options, false, false), J$.R(1121745, 'name', name, false, false)))) : J$._()) ? J$.U(111770, '!', J$.M(1121801, J$.I(typeof Array === 'undefined' ? Array = J$.R(1121769, 'Array', undefined, true, true) : Array = J$.R(1121769, 'Array', Array, true, true)), 'isArray', false)(J$.G(1121793, J$.R(1121777, 'options', options, false, false), J$.R(1121785, 'name', name, false, false)))) : J$._())) {
                                                finalOptions = J$.W(1121865, 'finalOptions', J$.F(1121857, J$.R(1121809, 'mergeOptions', mergeOptions, false, true), false)(J$.R(1121817, 'finalOptions', finalOptions, false, false), J$.G(1121841, J$.R(1121825, 'options', options, false, false), J$.R(1121833, 'name', name, false, false)), J$.T(1121849, true, 23, false)), finalOptions, false, false);
                                            } else {
                                                J$.P(1121913, J$.R(1121873, 'finalOptions', finalOptions, false, false), J$.R(1121881, 'name', name, false, false), J$.G(1121905, J$.R(1121889, 'options', options, false, false), J$.R(1121897, 'name', name, false, false)));
                                            }
                                        }
                                    }
                                }
                            }
                            return J$.Rt(1121945, J$.R(1121937, 'finalOptions', finalOptions, false, false));
                        } catch (J$e) {
                            J$.Ex(1126321, J$e);
                        } finally {
                            if (J$.Fr(1126329))
                                continue jalangiLabel42;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function generateCredentials(client, username, password, options) {
                jalangiLabel43:
                    while (true) {
                        try {
                            J$.Fe(1122449, arguments.callee, this, arguments);
                            arguments = J$.N(1122457, 'arguments', arguments, true, false, false);
                            client = J$.N(1122465, 'client', client, true, false, false);
                            username = J$.N(1122473, 'username', username, true, false, false);
                            password = J$.N(1122481, 'password', password, true, false, false);
                            options = J$.N(1122489, 'options', options, true, false, false);
                            J$.N(1122497, 'source', source, false, false, false);
                            J$.N(1122505, 'authMechanismRaw', authMechanismRaw, false, false, false);
                            J$.N(1122513, 'authMechanism', authMechanism, false, false, false);
                            options = J$.W(1122041, 'options', J$.M(1122033, J$.I(typeof Object === 'undefined' ? Object = J$.R(1122009, 'Object', undefined, true, true) : Object = J$.R(1122009, 'Object', Object, true, true)), 'assign', false)(J$.T(1122017, {}, 11, false), J$.R(1122025, 'options', options, false, false)), options, false, false);
                            var source = J$.W(1122097, 'source', J$.C(68872, J$.C(68864, J$.G(1122057, J$.R(1122049, 'options', options, false, false), 'authSource')) ? J$._() : J$.G(1122073, J$.R(1122065, 'options', options, false, false), 'authdb')) ? J$._() : J$.G(1122089, J$.R(1122081, 'options', options, false, false), 'dbName'), source, false, false);
                            var authMechanismRaw = J$.W(1122129, 'authMechanismRaw', J$.C(68880, J$.G(1122113, J$.R(1122105, 'options', options, false, false), 'authMechanism')) ? J$._() : J$.T(1122121, 'DEFAULT', 21, false), authMechanismRaw, false, false);
                            var authMechanism = J$.W(1122153, 'authMechanism', J$.M(1122145, J$.R(1122137, 'authMechanismRaw', authMechanismRaw, false, false), 'toUpperCase', false)(), authMechanism, false, false);
                            if (J$.C(68888, J$.U(111778, '!', J$.M(1122177, J$.R(1122161, 'VALID_AUTH_MECHANISMS', VALID_AUTH_MECHANISMS, false, true), 'has', false)(J$.R(1122169, 'authMechanism', authMechanism, false, false))))) {
                                throw J$.M(1122241, J$.R(1122185, 'MongoError', MongoError, false, true), 'create', false)(J$.T(1122233, {
                                    message: J$.M(1122217, J$.T(1122193, 'authentication mechanism ', 21, false), 'concat', false)(J$.R(1122201, 'authMechanismRaw', authMechanismRaw, false, false), J$.T(1122209, ' not supported\', options.authMechanism', 21, false)),
                                    driver: J$.T(1122225, true, 23, false)
                                }, 11, false));
                            }
                            if (J$.C(68904, J$.B(111786, '===', J$.R(1122249, 'authMechanism', authMechanism, false, false), J$.T(1122257, 'GSSAPI', 21, false)))) {
                                return J$.Rt(1122361, J$.F(1122353, J$.R(1122265, 'MongoCredentials', MongoCredentials, false, true), true)(J$.T(1122345, {
                                    mechanism: J$.C(68896, J$.B(111794, '===', J$.G(1122281, J$.I(typeof process === 'undefined' ? process = J$.R(1122273, 'process', undefined, true, true) : process = J$.R(1122273, 'process', process, true, true)), 'platform'), J$.T(1122289, 'win32', 21, false))) ? J$.T(1122297, 'sspi', 21, false) : J$.T(1122305, 'gssapi', 21, false),
                                    mechanismProperties: J$.R(1122313, 'options', options, false, false),
                                    source: J$.R(1122321, 'source', source, false, false),
                                    username: J$.R(1122329, 'username', username, false, false),
                                    password: J$.R(1122337, 'password', password, false, false)
                                }, 11, false)));
                            }
                            return J$.Rt(1122441, J$.F(1122433, J$.R(1122369, 'MongoCredentials', MongoCredentials, false, true), true)(J$.T(1122425, {
                                mechanism: J$.G(1122393, J$.R(1122377, 'AUTH_MECHANISM_INTERNAL_MAP', AUTH_MECHANISM_INTERNAL_MAP, false, true), J$.R(1122385, 'authMechanism', authMechanism, false, false)),
                                source: J$.R(1122401, 'source', source, false, false),
                                username: J$.R(1122409, 'username', username, false, false),
                                password: J$.R(1122417, 'password', password, false, false)
                            }, 11, false)));
                        } catch (J$e) {
                            J$.Ex(1126337, J$e);
                        } finally {
                            if (J$.Fr(1126345))
                                continue jalangiLabel43;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function legacyTransformUrlOptions(object) {
                jalangiLabel44:
                    while (true) {
                        try {
                            J$.Fe(1122593, arguments.callee, this, arguments);
                            arguments = J$.N(1122601, 'arguments', arguments, true, false, false);
                            object = J$.N(1122609, 'object', object, true, false, false);
                            return J$.Rt(1122585, J$.F(1122577, J$.R(1122521, 'mergeOptions', mergeOptions, false, true), false)(J$.F(1122553, J$.R(1122529, 'createUnifiedOptions', createUnifiedOptions, false, true), false)(J$.T(1122537, {}, 11, false), J$.R(1122545, 'object', object, false, false)), J$.R(1122561, 'object', object, false, false), J$.T(1122569, false, 23, false)));
                        } catch (J$e) {
                            J$.Ex(1126353, J$e);
                        } finally {
                            if (J$.Fr(1126361))
                                continue jalangiLabel44;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function mergeOptions(target, source, flatten) {
                jalangiLabel45:
                    while (true) {
                        try {
                            J$.Fe(1122849, arguments.callee, this, arguments);
                            arguments = J$.N(1122857, 'arguments', arguments, true, false, false);
                            target = J$.N(1122865, 'target', target, true, false, false);
                            source = J$.N(1122873, 'source', source, true, false, false);
                            flatten = J$.N(1122881, 'flatten', flatten, true, false, false);
                            J$.N(1122889, 'name', name, false, false, false);
                            for (var name in J$.H(1122817, J$.R(1122617, 'source', source, false, false))) {
                                J$.N(1122825, 'name', name, false, true, false);
                                {
                                    {
                                        if (J$.C(68928, J$.C(68920, J$.C(68912, J$.G(1122641, J$.R(1122625, 'source', source, false, false), J$.R(1122633, 'name', name, false, false))) ? J$.B(111802, '===', J$.F(1122681, J$.R(1122649, '_typeof', _typeof, false, true), false)(J$.G(1122673, J$.R(1122657, 'source', source, false, false), J$.R(1122665, 'name', name, false, false))), J$.T(1122689, 'object', 21, false)) : J$._()) ? J$.R(1122697, 'flatten', flatten, false, false) : J$._())) {
                                            target = J$.W(1122761, 'target', J$.F(1122753, J$.R(1122705, 'mergeOptions', mergeOptions, false, true), false)(J$.R(1122713, 'target', target, false, false), J$.G(1122737, J$.R(1122721, 'source', source, false, false), J$.R(1122729, 'name', name, false, false)), J$.R(1122745, 'flatten', flatten, false, false)), target, false, false);
                                        } else {
                                            J$.P(1122809, J$.R(1122769, 'target', target, false, false), J$.R(1122777, 'name', name, false, false), J$.G(1122801, J$.R(1122785, 'source', source, false, false), J$.R(1122793, 'name', name, false, false)));
                                        }
                                    }
                                }
                            }
                            return J$.Rt(1122841, J$.R(1122833, 'target', target, false, false));
                        } catch (J$e) {
                            J$.Ex(1126369, J$e);
                        } finally {
                            if (J$.Fr(1126377))
                                continue jalangiLabel45;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function relayEvents(mongoClient, topology) {
                jalangiLabel48:
                    while (true) {
                        try {
                            J$.Fe(1123193, arguments.callee, this, arguments);
                            arguments = J$.N(1123201, 'arguments', arguments, true, false, false);
                            mongoClient = J$.N(1123209, 'mongoClient', mongoClient, true, false, false);
                            topology = J$.N(1123217, 'topology', topology, true, false, false);
                            J$.N(1123225, 'serverOrCommandEvents', serverOrCommandEvents, false, false, false);
                            var serverOrCommandEvents = J$.W(1123033, 'serverOrCommandEvents', J$.T(1123025, [
                                J$.T(1122897, 'serverOpening', 21, false),
                                J$.T(1122905, 'serverDescriptionChanged', 21, false),
                                J$.T(1122913, 'serverHeartbeatStarted', 21, false),
                                J$.T(1122921, 'serverHeartbeatSucceeded', 21, false),
                                J$.T(1122929, 'serverHeartbeatFailed', 21, false),
                                J$.T(1122937, 'serverClosed', 21, false),
                                J$.T(1122945, 'topologyOpening', 21, false),
                                J$.T(1122953, 'topologyClosed', 21, false),
                                J$.T(1122961, 'topologyDescriptionChanged', 21, false),
                                J$.T(1122969, 'commandStarted', 21, false),
                                J$.T(1122977, 'commandSucceeded', 21, false),
                                J$.T(1122985, 'commandFailed', 21, false),
                                J$.T(1122993, 'joined', 21, false),
                                J$.T(1123001, 'left', 21, false),
                                J$.T(1123009, 'ping', 21, false),
                                J$.T(1123017, 'ha', 21, false)
                            ], 10, false), serverOrCommandEvents, false, false);
                            J$.M(1123185, J$.R(1123041, 'serverOrCommandEvents', serverOrCommandEvents, false, false), 'forEach', false)(J$.T(1123177, function (event) {
                                jalangiLabel47:
                                    while (true) {
                                        try {
                                            J$.Fe(1123153, arguments.callee, this, arguments);
                                            arguments = J$.N(1123161, 'arguments', arguments, true, false, false);
                                            event = J$.N(1123169, 'event', event, true, false, false);
                                            J$.M(1123145, J$.R(1123049, 'topology', topology, false, false), 'on', false)(J$.R(1123057, 'event', event, false, false), J$.T(1123137, function (object1, object2) {
                                                jalangiLabel46:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(1123105, arguments.callee, this, arguments);
                                                            arguments = J$.N(1123113, 'arguments', arguments, true, false, false);
                                                            object1 = J$.N(1123121, 'object1', object1, true, false, false);
                                                            object2 = J$.N(1123129, 'object2', object2, true, false, false);
                                                            J$.M(1123097, J$.R(1123065, 'mongoClient', mongoClient, false, false), 'emit', false)(J$.R(1123073, 'event', event, false, false), J$.R(1123081, 'object1', object1, false, false), J$.R(1123089, 'object2', object2, false, false));
                                                        } catch (J$e) {
                                                            J$.Ex(1126385, J$e);
                                                        } finally {
                                                            if (J$.Fr(1126393))
                                                                continue jalangiLabel46;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false));
                                        } catch (J$e) {
                                            J$.Ex(1126401, J$e);
                                        } finally {
                                            if (J$.Fr(1126409))
                                                continue jalangiLabel47;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                        } catch (J$e) {
                            J$.Ex(1126417, J$e);
                        } finally {
                            if (J$.Fr(1126425))
                                continue jalangiLabel48;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function replayEvents(mongoClient, events) {
                jalangiLabel49:
                    while (true) {
                        try {
                            J$.Fe(1123401, arguments.callee, this, arguments);
                            arguments = J$.N(1123409, 'arguments', arguments, true, false, false);
                            mongoClient = J$.N(1123417, 'mongoClient', mongoClient, true, false, false);
                            events = J$.N(1123425, 'events', events, true, false, false);
                            J$.N(1123433, 'i', i, false, false, false);
                            for (var i = J$.W(1123241, 'i', J$.T(1123233, 0, 22, false), i, false, false); J$.C(68936, J$.B(111810, '<', J$.R(1123249, 'i', i, false, false), J$.G(1123265, J$.R(1123257, 'events', events, false, false), 'length'))); J$.B(111834, '-', i = J$.W(1123281, 'i', J$.B(111826, '+', J$.U(111818, '+', J$.R(1123273, 'i', i, false, false)), 1), i, false, false), 1)) {
                                J$.M(1123393, J$.R(1123289, 'mongoClient', mongoClient, false, false), 'emit', false)(J$.G(1123321, J$.G(1123313, J$.R(1123297, 'events', events, false, false), J$.R(1123305, 'i', i, false, false)), 'event'), J$.G(1123353, J$.G(1123345, J$.R(1123329, 'events', events, false, false), J$.R(1123337, 'i', i, false, false)), 'object1'), J$.G(1123385, J$.G(1123377, J$.R(1123361, 'events', events, false, false), J$.R(1123369, 'i', i, false, false)), 'object2'));
                            }
                        } catch (J$e) {
                            J$.Ex(1126433, J$e);
                        } finally {
                            if (J$.Fr(1126441))
                                continue jalangiLabel49;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function transformUrlOptions(_object) {
                jalangiLabel50:
                    while (true) {
                        try {
                            J$.Fe(1124209, arguments.callee, this, arguments);
                            arguments = J$.N(1124217, 'arguments', arguments, true, false, false);
                            _object = J$.N(1124225, '_object', _object, true, false, false);
                            J$.N(1124233, 'object', object, false, false, false);
                            J$.N(1124241, 'name', name, false, false, false);
                            J$.N(1124249, 'camelCaseName', camelCaseName, false, false, false);
                            J$.N(1124257, 'hasUsername', hasUsername, false, false, false);
                            J$.N(1124265, 'hasAuthMechanism', hasAuthMechanism, false, false, false);
                            var object = J$.W(1123497, 'object', J$.M(1123489, J$.I(typeof Object === 'undefined' ? Object = J$.R(1123441, 'Object', undefined, true, true) : Object = J$.R(1123441, 'Object', Object, true, true)), 'assign', false)(J$.T(1123465, { servers: J$.G(1123457, J$.R(1123449, '_object', _object, false, false), 'hosts') }, 11, false), J$.G(1123481, J$.R(1123473, '_object', _object, false, false), 'options')), object, false, false);
                            for (var name in J$.H(1123601, J$.R(1123505, 'object', object, false, false))) {
                                J$.N(1123609, 'name', name, false, true, false);
                                {
                                    {
                                        var camelCaseName = J$.W(1123537, 'camelCaseName', J$.G(1123529, J$.R(1123513, 'LEGACY_OPTIONS_MAP', LEGACY_OPTIONS_MAP, false, true), J$.R(1123521, 'name', name, false, false)), camelCaseName, false, false);
                                        if (J$.C(68944, J$.R(1123545, 'camelCaseName', camelCaseName, false, false))) {
                                            J$.P(1123593, J$.R(1123553, 'object', object, false, false), J$.R(1123561, 'camelCaseName', camelCaseName, false, false), J$.G(1123585, J$.R(1123569, 'object', object, false, false), J$.R(1123577, 'name', name, false, false)));
                                        }
                                    }
                                }
                            }
                            var hasUsername = J$.W(1123657, 'hasUsername', J$.C(68952, J$.G(1123625, J$.R(1123617, '_object', _object, false, false), 'auth')) ? J$.G(1123649, J$.G(1123641, J$.R(1123633, '_object', _object, false, false), 'auth'), 'username') : J$._(), hasUsername, false, false);
                            var hasAuthMechanism = J$.W(1123705, 'hasAuthMechanism', J$.C(68960, J$.G(1123673, J$.R(1123665, '_object', _object, false, false), 'options')) ? J$.G(1123697, J$.G(1123689, J$.R(1123681, '_object', _object, false, false), 'options'), 'authMechanism') : J$._(), hasAuthMechanism, false, false);
                            if (J$.C(69000, J$.C(68968, J$.R(1123713, 'hasUsername', hasUsername, false, false)) ? J$._() : J$.R(1123721, 'hasAuthMechanism', hasAuthMechanism, false, false))) {
                                J$.P(1123777, J$.R(1123729, 'object', object, false, false), 'auth', J$.M(1123769, J$.I(typeof Object === 'undefined' ? Object = J$.R(1123737, 'Object', undefined, true, true) : Object = J$.R(1123737, 'Object', Object, true, true)), 'assign', false)(J$.T(1123745, {}, 11, false), J$.G(1123761, J$.R(1123753, '_object', _object, false, false), 'auth')));
                                if (J$.C(68984, J$.G(1123801, J$.G(1123793, J$.R(1123785, 'object', object, false, false), 'auth'), 'db'))) {
                                    J$.P(1123857, J$.R(1123809, 'object', object, false, false), 'authSource', J$.C(68976, J$.G(1123825, J$.R(1123817, 'object', object, false, false), 'authSource')) ? J$._() : J$.G(1123849, J$.G(1123841, J$.R(1123833, 'object', object, false, false), 'auth'), 'db'));
                                }
                                if (J$.C(68992, J$.G(1123881, J$.G(1123873, J$.R(1123865, 'object', object, false, false), 'auth'), 'username'))) {
                                    J$.P(1123929, J$.G(1123897, J$.R(1123889, 'object', object, false, false), 'auth'), 'user', J$.G(1123921, J$.G(1123913, J$.R(1123905, 'object', object, false, false), 'auth'), 'username'));
                                }
                            }
                            if (J$.C(69008, J$.G(1123945, J$.R(1123937, '_object', _object, false, false), 'defaultDatabase'))) {
                                J$.P(1123977, J$.R(1123953, 'object', object, false, false), 'dbName', J$.G(1123969, J$.R(1123961, '_object', _object, false, false), 'defaultDatabase'));
                            }
                            if (J$.C(69016, J$.G(1123993, J$.R(1123985, 'object', object, false, false), 'maxPoolSize'))) {
                                J$.P(1124025, J$.R(1124001, 'object', object, false, false), 'poolSize', J$.G(1124017, J$.R(1124009, 'object', object, false, false), 'maxPoolSize'));
                            }
                            if (J$.C(69024, J$.G(1124041, J$.R(1124033, 'object', object, false, false), 'readConcernLevel'))) {
                                J$.P(1124089, J$.R(1124049, 'object', object, false, false), 'readConcern', J$.F(1124081, J$.R(1124057, 'ReadConcern', ReadConcern, false, true), true)(J$.G(1124073, J$.R(1124065, 'object', object, false, false), 'readConcernLevel')));
                            }
                            if (J$.C(69032, J$.G(1124105, J$.R(1124097, 'object', object, false, false), 'wTimeoutMS'))) {
                                J$.P(1124137, J$.R(1124113, 'object', object, false, false), 'wtimeout', J$.G(1124129, J$.R(1124121, 'object', object, false, false), 'wTimeoutMS'));
                            }
                            if (J$.C(69040, J$.G(1124153, J$.R(1124145, '_object', _object, false, false), 'srvHost'))) {
                                J$.P(1124185, J$.R(1124161, 'object', object, false, false), 'srvHost', J$.G(1124177, J$.R(1124169, '_object', _object, false, false), 'srvHost'));
                            }
                            return J$.Rt(1124201, J$.R(1124193, 'object', object, false, false));
                        } catch (J$e) {
                            J$.Ex(1126449, J$e);
                        } finally {
                            if (J$.Fr(1126457))
                                continue jalangiLabel50;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function translateOptions(options, translationOptions) {
                jalangiLabel52:
                    while (true) {
                        try {
                            J$.Fe(1124913, arguments.callee, this, arguments);
                            arguments = J$.N(1124921, 'arguments', arguments, true, false, false);
                            options = J$.N(1124929, 'options', options, true, false, false);
                            translationOptions = J$.N(1124937, 'translationOptions', translationOptions, true, false, false);
                            translationOptions = J$.W(1124321, 'translationOptions', J$.M(1124313, J$.I(typeof Object === 'undefined' ? Object = J$.R(1124273, 'Object', undefined, true, true) : Object = J$.R(1124273, 'Object', Object, true, true)), 'assign', false)(J$.T(1124281, {}, 11, false), J$.T(1124297, { createServers: J$.T(1124289, true, 23, false) }, 11, false), J$.R(1124305, 'translationOptions', translationOptions, false, false)), translationOptions, false, false);
                            if (J$.C(69064, J$.C(69048, J$.B(111850, '===', J$.U(111842, 'typeof', J$.G(1124337, J$.R(1124329, 'options', options, false, false), 'readPreference')), J$.T(1124345, 'string', 21, false))) ? J$._() : J$.B(111866, '===', J$.U(111858, 'typeof', J$.G(1124361, J$.R(1124353, 'options', options, false, false), 'read_preference')), J$.T(1124369, 'string', 21, false)))) {
                                J$.P(1124433, J$.R(1124377, 'options', options, false, false), 'readPreference', J$.F(1124425, J$.R(1124385, 'ReadPreference', ReadPreference, false, true), true)(J$.C(69056, J$.G(1124401, J$.R(1124393, 'options', options, false, false), 'readPreference')) ? J$._() : J$.G(1124417, J$.R(1124409, 'options', options, false, false), 'read_preference')));
                            }
                            if (J$.C(69096, J$.C(69080, J$.G(1124449, J$.R(1124441, 'options', options, false, false), 'readPreference')) ? J$.C(69072, J$.G(1124465, J$.R(1124457, 'options', options, false, false), 'readPreferenceTags')) ? J$._() : J$.G(1124481, J$.R(1124473, 'options', options, false, false), 'read_preference_tags') : J$._())) {
                                J$.P(1124537, J$.G(1124497, J$.R(1124489, 'options', options, false, false), 'readPreference'), 'tags', J$.C(69088, J$.G(1124513, J$.R(1124505, 'options', options, false, false), 'readPreferenceTags')) ? J$._() : J$.G(1124529, J$.R(1124521, 'options', options, false, false), 'read_preference_tags'));
                            }
                            if (J$.C(69104, J$.G(1124553, J$.R(1124545, 'options', options, false, false), 'maxStalenessSeconds'))) {
                                J$.P(1124593, J$.G(1124569, J$.R(1124561, 'options', options, false, false), 'readPreference'), 'maxStalenessSeconds', J$.G(1124585, J$.R(1124577, 'options', options, false, false), 'maxStalenessSeconds'));
                            }
                            if (J$.C(69112, J$.B(111874, '==', J$.G(1124609, J$.R(1124601, 'options', options, false, false), 'socketTimeoutMS'), J$.T(1124617, null, 25, false))))
                                J$.P(1124641, J$.R(1124625, 'options', options, false, false), 'socketTimeoutMS', J$.T(1124633, 360000, 22, false));
                            if (J$.C(69120, J$.B(111882, '==', J$.G(1124657, J$.R(1124649, 'options', options, false, false), 'connectTimeoutMS'), J$.T(1124665, null, 25, false))))
                                J$.P(1124689, J$.R(1124673, 'options', options, false, false), 'connectTimeoutMS', J$.T(1124681, 30000, 22, false));
                            if (J$.C(69128, J$.U(111890, '!', J$.G(1124705, J$.R(1124697, 'translationOptions', translationOptions, false, false), 'createServers')))) {
                                return J$.Rt(1124713, undefined);
                            }
                            return J$.Rt(1124905, J$.M(1124897, J$.G(1124729, J$.R(1124721, 'options', options, false, false), 'servers'), 'map', false)(J$.T(1124889, function (serverObj) {
                                jalangiLabel51:
                                    while (true) {
                                        try {
                                            J$.Fe(1124865, arguments.callee, this, arguments);
                                            arguments = J$.N(1124873, 'arguments', arguments, true, false, false);
                                            serverObj = J$.N(1124881, 'serverObj', serverObj, true, false, false);
                                            return J$.Rt(1124857, J$.C(69136, J$.G(1124745, J$.R(1124737, 'serverObj', serverObj, false, false), 'domain_socket')) ? J$.F(1124793, J$.R(1124753, 'Server', Server, false, true), true)(J$.G(1124769, J$.R(1124761, 'serverObj', serverObj, false, false), 'domain_socket'), J$.T(1124777, 27017, 22, false), J$.R(1124785, 'options', options, false, false)) : J$.F(1124849, J$.R(1124801, 'Server', Server, false, true), true)(J$.G(1124817, J$.R(1124809, 'serverObj', serverObj, false, false), 'host'), J$.G(1124833, J$.R(1124825, 'serverObj', serverObj, false, false), 'port'), J$.R(1124841, 'options', options, false, false)));
                                        } catch (J$e) {
                                            J$.Ex(1126465, J$e);
                                        } finally {
                                            if (J$.Fr(1126473))
                                                continue jalangiLabel51;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false)));
                        } catch (J$e) {
                            J$.Ex(1126481, J$e);
                        } finally {
                            if (J$.Fr(1126489))
                                continue jalangiLabel52;
                            else
                                return J$.Ra();
                        }
                    }
            }
            _typeof2 = J$.N(1124985, '_typeof2', J$.T(1124977, _typeof2, 12, false), true, false, false);
            _typeof = J$.N(1125001, '_typeof', J$.T(1124993, _typeof, 12, false), true, false, false);
            _classCallCheck = J$.N(1125017, '_classCallCheck', J$.T(1125009, _classCallCheck, 12, false), true, false, false);
            _defineProperties = J$.N(1125033, '_defineProperties', J$.T(1125025, _defineProperties, 12, false), true, false, false);
            _createClass = J$.N(1125049, '_createClass', J$.T(1125041, _createClass, 12, false), true, false, false);
            _possibleConstructorReturn = J$.N(1125065, '_possibleConstructorReturn', J$.T(1125057, _possibleConstructorReturn, 12, false), true, false, false);
            _assertThisInitialized = J$.N(1125081, '_assertThisInitialized', J$.T(1125073, _assertThisInitialized, 12, false), true, false, false);
            _getPrototypeOf = J$.N(1125097, '_getPrototypeOf', J$.T(1125089, _getPrototypeOf, 12, false), true, false, false);
            _inherits = J$.N(1125113, '_inherits', J$.T(1125105, _inherits, 12, false), true, false, false);
            _setPrototypeOf = J$.N(1125129, '_setPrototypeOf', J$.T(1125121, _setPrototypeOf, 12, false), true, false, false);
            J$.N(1125137, 'OperationBase', OperationBase, false, false, false);
            J$.N(1125145, 'defineAspects', defineAspects, false, false, false);
            J$.N(1125153, 'Aspect', Aspect, false, false, false);
            J$.N(1125161, 'deprecate', deprecate, false, false, false);
            J$.N(1125169, 'Logger', Logger, false, false, false);
            J$.N(1125177, 'MongoCredentials', MongoCredentials, false, false, false);
            J$.N(1125185, 'MongoError', MongoError, false, false, false);
            J$.N(1125193, 'Mongos', Mongos, false, false, false);
            J$.N(1125201, 'NativeTopology', NativeTopology, false, false, false);
            J$.N(1125209, 'parse', parse, false, false, false);
            J$.N(1125217, 'ReadConcern', ReadConcern, false, false, false);
            J$.N(1125225, 'ReadPreference', ReadPreference, false, false, false);
            J$.N(1125233, 'ReplSet', ReplSet, false, false, false);
            J$.N(1125241, 'Server', Server, false, false, false);
            J$.N(1125249, 'ServerSessionPool', ServerSessionPool, false, false, false);
            J$.N(1125257, 'client', client, false, false, false);
            loadClient = J$.N(1125273, 'loadClient', J$.T(1125265, loadClient, 12, false), true, false, false);
            J$.N(1125281, 'legacyParse', legacyParse, false, false, false);
            J$.N(1125289, 'AUTH_MECHANISM_INTERNAL_MAP', AUTH_MECHANISM_INTERNAL_MAP, false, false, false);
            J$.N(1125297, 'monitoringEvents', monitoringEvents, false, false, false);
            J$.N(1125305, 'VALID_AUTH_MECHANISMS', VALID_AUTH_MECHANISMS, false, false, false);
            J$.N(1125313, 'validOptionNames', validOptionNames, false, false, false);
            J$.N(1125321, 'ignoreOptionNames', ignoreOptionNames, false, false, false);
            J$.N(1125329, 'legacyOptionNames', legacyOptionNames, false, false, false);
            validOptions = J$.N(1125345, 'validOptions', J$.T(1125337, validOptions, 12, false), true, false, false);
            J$.N(1125353, 'LEGACY_OPTIONS_MAP', LEGACY_OPTIONS_MAP, false, false, false);
            J$.N(1125361, 'ConnectOperation', ConnectOperation, false, false, false);
            addListeners = J$.N(1125377, 'addListeners', J$.T(1125369, addListeners, 12, false), true, false, false);
            assignTopology = J$.N(1125393, 'assignTopology', J$.T(1125385, assignTopology, 12, false), true, false, false);
            clearAllEvents = J$.N(1125409, 'clearAllEvents', J$.T(1125401, clearAllEvents, 12, false), true, false, false);
            collectEvents = J$.N(1125425, 'collectEvents', J$.T(1125417, collectEvents, 12, false), true, false, false);
            J$.N(1125433, 'emitDeprecationForNonUnifiedTopology', emitDeprecationForNonUnifiedTopology, false, false, false);
            connect = J$.N(1125449, 'connect', J$.T(1125441, connect, 12, false), true, false, false);
            connectWithUrl = J$.N(1125465, 'connectWithUrl', J$.T(1125457, connectWithUrl, 12, false), true, false, false);
            createListener = J$.N(1125481, 'createListener', J$.T(1125473, createListener, 12, false), true, false, false);
            createServer = J$.N(1125497, 'createServer', J$.T(1125489, createServer, 12, false), true, false, false);
            createTopology = J$.N(1125513, 'createTopology', J$.T(1125505, createTopology, 12, false), true, false, false);
            createUnifiedOptions = J$.N(1125529, 'createUnifiedOptions', J$.T(1125521, createUnifiedOptions, 12, false), true, false, false);
            generateCredentials = J$.N(1125545, 'generateCredentials', J$.T(1125537, generateCredentials, 12, false), true, false, false);
            legacyTransformUrlOptions = J$.N(1125561, 'legacyTransformUrlOptions', J$.T(1125553, legacyTransformUrlOptions, 12, false), true, false, false);
            mergeOptions = J$.N(1125577, 'mergeOptions', J$.T(1125569, mergeOptions, 12, false), true, false, false);
            relayEvents = J$.N(1125593, 'relayEvents', J$.T(1125585, relayEvents, 12, false), true, false, false);
            replayEvents = J$.N(1125609, 'replayEvents', J$.T(1125601, replayEvents, 12, false), true, false, false);
            transformUrlOptions = J$.N(1125625, 'transformUrlOptions', J$.T(1125617, transformUrlOptions, 12, false), true, false, false);
            translateOptions = J$.N(1125641, 'translateOptions', J$.T(1125633, translateOptions, 12, false), true, false, false);
            J$.T(1110937, 'use strict', 21, false);
            var OperationBase = J$.W(1112897, 'OperationBase', J$.G(1112889, J$.F(1112881, J$.I(typeof require === 'undefined' ? require = J$.R(1112865, 'require', undefined, true, true) : require = J$.R(1112865, 'require', require, true, true)), false)(J$.T(1112873, './operation', 21, false)), 'OperationBase'), OperationBase, false, true);
            var defineAspects = J$.W(1112937, 'defineAspects', J$.G(1112929, J$.F(1112921, J$.I(typeof require === 'undefined' ? require = J$.R(1112905, 'require', undefined, true, true) : require = J$.R(1112905, 'require', require, true, true)), false)(J$.T(1112913, './operation', 21, false)), 'defineAspects'), defineAspects, false, true);
            var Aspect = J$.W(1112977, 'Aspect', J$.G(1112969, J$.F(1112961, J$.I(typeof require === 'undefined' ? require = J$.R(1112945, 'require', undefined, true, true) : require = J$.R(1112945, 'require', require, true, true)), false)(J$.T(1112953, './operation', 21, false)), 'Aspect'), Aspect, false, true);
            var deprecate = J$.W(1113017, 'deprecate', J$.G(1113009, J$.F(1113001, J$.I(typeof require === 'undefined' ? require = J$.R(1112985, 'require', undefined, true, true) : require = J$.R(1112985, 'require', require, true, true)), false)(J$.T(1112993, 'util', 21, false)), 'deprecate'), deprecate, false, true);
            var Logger = J$.W(1113057, 'Logger', J$.G(1113049, J$.F(1113041, J$.I(typeof require === 'undefined' ? require = J$.R(1113025, 'require', undefined, true, true) : require = J$.R(1113025, 'require', require, true, true)), false)(J$.T(1113033, '../core', 21, false)), 'Logger'), Logger, false, true);
            var MongoCredentials = J$.W(1113097, 'MongoCredentials', J$.G(1113089, J$.F(1113081, J$.I(typeof require === 'undefined' ? require = J$.R(1113065, 'require', undefined, true, true) : require = J$.R(1113065, 'require', require, true, true)), false)(J$.T(1113073, '../core', 21, false)), 'MongoCredentials'), MongoCredentials, false, true);
            var MongoError = J$.W(1113137, 'MongoError', J$.G(1113129, J$.F(1113121, J$.I(typeof require === 'undefined' ? require = J$.R(1113105, 'require', undefined, true, true) : require = J$.R(1113105, 'require', require, true, true)), false)(J$.T(1113113, '../core', 21, false)), 'MongoError'), MongoError, false, true);
            var Mongos = J$.W(1113169, 'Mongos', J$.F(1113161, J$.I(typeof require === 'undefined' ? require = J$.R(1113145, 'require', undefined, true, true) : require = J$.R(1113145, 'require', require, true, true)), false)(J$.T(1113153, '../topologies/mongos', 21, false)), Mongos, false, true);
            var NativeTopology = J$.W(1113201, 'NativeTopology', J$.F(1113193, J$.I(typeof require === 'undefined' ? require = J$.R(1113177, 'require', undefined, true, true) : require = J$.R(1113177, 'require', require, true, true)), false)(J$.T(1113185, '../topologies/native_topology', 21, false)), NativeTopology, false, true);
            var parse = J$.W(1113241, 'parse', J$.G(1113233, J$.F(1113225, J$.I(typeof require === 'undefined' ? require = J$.R(1113209, 'require', undefined, true, true) : require = J$.R(1113209, 'require', require, true, true)), false)(J$.T(1113217, '../core', 21, false)), 'parseConnectionString'), parse, false, true);
            var ReadConcern = J$.W(1113273, 'ReadConcern', J$.F(1113265, J$.I(typeof require === 'undefined' ? require = J$.R(1113249, 'require', undefined, true, true) : require = J$.R(1113249, 'require', require, true, true)), false)(J$.T(1113257, '../read_concern', 21, false)), ReadConcern, false, true);
            var ReadPreference = J$.W(1113313, 'ReadPreference', J$.G(1113305, J$.F(1113297, J$.I(typeof require === 'undefined' ? require = J$.R(1113281, 'require', undefined, true, true) : require = J$.R(1113281, 'require', require, true, true)), false)(J$.T(1113289, '../core', 21, false)), 'ReadPreference'), ReadPreference, false, true);
            var ReplSet = J$.W(1113345, 'ReplSet', J$.F(1113337, J$.I(typeof require === 'undefined' ? require = J$.R(1113321, 'require', undefined, true, true) : require = J$.R(1113321, 'require', require, true, true)), false)(J$.T(1113329, '../topologies/replset', 21, false)), ReplSet, false, true);
            var Server = J$.W(1113377, 'Server', J$.F(1113369, J$.I(typeof require === 'undefined' ? require = J$.R(1113353, 'require', undefined, true, true) : require = J$.R(1113353, 'require', require, true, true)), false)(J$.T(1113361, '../topologies/server', 21, false)), Server, false, true);
            var ServerSessionPool = J$.W(1113425, 'ServerSessionPool', J$.G(1113417, J$.G(1113409, J$.F(1113401, J$.I(typeof require === 'undefined' ? require = J$.R(1113385, 'require', undefined, true, true) : require = J$.R(1113385, 'require', require, true, true)), false)(J$.T(1113393, '../core', 21, false)), 'Sessions'), 'ServerSessionPool'), ServerSessionPool, false, true);
            var client;
            var legacyParse = J$.W(1113561, 'legacyParse', J$.F(1113553, J$.R(1113505, 'deprecate', deprecate, false, true), false)(J$.F(1113529, J$.I(typeof require === 'undefined' ? require = J$.R(1113513, 'require', undefined, true, true) : require = J$.R(1113513, 'require', require, true, true)), false)(J$.T(1113521, '../url_parser', 21, false)), J$.B(111418, '+', J$.T(1113537, 'current URL string parser is deprecated, and will be removed in a future version. ', 21, false), J$.T(1113545, 'To use the new parser, pass option { useNewUrlParser: true } to MongoClient.connect.', 21, false))), legacyParse, false, true);
            var AUTH_MECHANISM_INTERNAL_MAP = J$.W(1113625, 'AUTH_MECHANISM_INTERNAL_MAP', J$.T(1113617, {
                DEFAULT: J$.T(1113569, 'default', 21, false),
                'MONGODB-CR': J$.T(1113577, 'mongocr', 21, false),
                PLAIN: J$.T(1113585, 'plain', 21, false),
                'MONGODB-X509': J$.T(1113593, 'x509', 21, false),
                'SCRAM-SHA-1': J$.T(1113601, 'scram-sha-1', 21, false),
                'SCRAM-SHA-256': J$.T(1113609, 'scram-sha-256', 21, false)
            }, 11, false), AUTH_MECHANISM_INTERNAL_MAP, false, true);
            var monitoringEvents = J$.W(1113809, 'monitoringEvents', J$.T(1113801, [
                J$.T(1113633, 'timeout', 21, false),
                J$.T(1113641, 'close', 21, false),
                J$.T(1113649, 'serverOpening', 21, false),
                J$.T(1113657, 'serverDescriptionChanged', 21, false),
                J$.T(1113665, 'serverHeartbeatStarted', 21, false),
                J$.T(1113673, 'serverHeartbeatSucceeded', 21, false),
                J$.T(1113681, 'serverHeartbeatFailed', 21, false),
                J$.T(1113689, 'serverClosed', 21, false),
                J$.T(1113697, 'topologyOpening', 21, false),
                J$.T(1113705, 'topologyClosed', 21, false),
                J$.T(1113713, 'topologyDescriptionChanged', 21, false),
                J$.T(1113721, 'commandStarted', 21, false),
                J$.T(1113729, 'commandSucceeded', 21, false),
                J$.T(1113737, 'commandFailed', 21, false),
                J$.T(1113745, 'joined', 21, false),
                J$.T(1113753, 'left', 21, false),
                J$.T(1113761, 'ping', 21, false),
                J$.T(1113769, 'ha', 21, false),
                J$.T(1113777, 'all', 21, false),
                J$.T(1113785, 'fullsetup', 21, false),
                J$.T(1113793, 'open', 21, false)
            ], 10, false), monitoringEvents, false, true);
            var VALID_AUTH_MECHANISMS = J$.W(1113897, 'VALID_AUTH_MECHANISMS', J$.F(1113889, J$.I(typeof Set === 'undefined' ? Set = J$.R(1113817, 'Set', undefined, true, true) : Set = J$.R(1113817, 'Set', Set, true, true)), true)(J$.T(1113881, [
                J$.T(1113825, 'DEFAULT', 21, false),
                J$.T(1113833, 'MONGODB-CR', 21, false),
                J$.T(1113841, 'PLAIN', 21, false),
                J$.T(1113849, 'MONGODB-X509', 21, false),
                J$.T(1113857, 'SCRAM-SHA-1', 21, false),
                J$.T(1113865, 'SCRAM-SHA-256', 21, false),
                J$.T(1113873, 'GSSAPI', 21, false)
            ], 10, false)), VALID_AUTH_MECHANISMS, false, true);
            var validOptionNames = J$.W(1114425, 'validOptionNames', J$.T(1114417, [
                J$.T(1113905, 'poolSize', 21, false),
                J$.T(1113913, 'ssl', 21, false),
                J$.T(1113921, 'sslValidate', 21, false),
                J$.T(1113929, 'sslCA', 21, false),
                J$.T(1113937, 'sslCert', 21, false),
                J$.T(1113945, 'sslKey', 21, false),
                J$.T(1113953, 'sslPass', 21, false),
                J$.T(1113961, 'sslCRL', 21, false),
                J$.T(1113969, 'autoReconnect', 21, false),
                J$.T(1113977, 'noDelay', 21, false),
                J$.T(1113985, 'keepAlive', 21, false),
                J$.T(1113993, 'keepAliveInitialDelay', 21, false),
                J$.T(1114001, 'connectTimeoutMS', 21, false),
                J$.T(1114009, 'family', 21, false),
                J$.T(1114017, 'socketTimeoutMS', 21, false),
                J$.T(1114025, 'reconnectTries', 21, false),
                J$.T(1114033, 'reconnectInterval', 21, false),
                J$.T(1114041, 'ha', 21, false),
                J$.T(1114049, 'haInterval', 21, false),
                J$.T(1114057, 'replicaSet', 21, false),
                J$.T(1114065, 'secondaryAcceptableLatencyMS', 21, false),
                J$.T(1114073, 'acceptableLatencyMS', 21, false),
                J$.T(1114081, 'connectWithNoPrimary', 21, false),
                J$.T(1114089, 'authSource', 21, false),
                J$.T(1114097, 'w', 21, false),
                J$.T(1114105, 'wtimeout', 21, false),
                J$.T(1114113, 'j', 21, false),
                J$.T(1114121, 'forceServerObjectId', 21, false),
                J$.T(1114129, 'serializeFunctions', 21, false),
                J$.T(1114137, 'ignoreUndefined', 21, false),
                J$.T(1114145, 'raw', 21, false),
                J$.T(1114153, 'bufferMaxEntries', 21, false),
                J$.T(1114161, 'readPreference', 21, false),
                J$.T(1114169, 'pkFactory', 21, false),
                J$.T(1114177, 'promiseLibrary', 21, false),
                J$.T(1114185, 'readConcern', 21, false),
                J$.T(1114193, 'maxStalenessSeconds', 21, false),
                J$.T(1114201, 'loggerLevel', 21, false),
                J$.T(1114209, 'logger', 21, false),
                J$.T(1114217, 'promoteValues', 21, false),
                J$.T(1114225, 'promoteBuffers', 21, false),
                J$.T(1114233, 'promoteLongs', 21, false),
                J$.T(1114241, 'domainsEnabled', 21, false),
                J$.T(1114249, 'checkServerIdentity', 21, false),
                J$.T(1114257, 'validateOptions', 21, false),
                J$.T(1114265, 'appname', 21, false),
                J$.T(1114273, 'auth', 21, false),
                J$.T(1114281, 'user', 21, false),
                J$.T(1114289, 'password', 21, false),
                J$.T(1114297, 'authMechanism', 21, false),
                J$.T(1114305, 'compression', 21, false),
                J$.T(1114313, 'fsync', 21, false),
                J$.T(1114321, 'readPreferenceTags', 21, false),
                J$.T(1114329, 'numberOfRetries', 21, false),
                J$.T(1114337, 'auto_reconnect', 21, false),
                J$.T(1114345, 'minSize', 21, false),
                J$.T(1114353, 'monitorCommands', 21, false),
                J$.T(1114361, 'retryWrites', 21, false),
                J$.T(1114369, 'retryReads', 21, false),
                J$.T(1114377, 'useNewUrlParser', 21, false),
                J$.T(1114385, 'useUnifiedTopology', 21, false),
                J$.T(1114393, 'serverSelectionTimeoutMS', 21, false),
                J$.T(1114401, 'useRecoveryToken', 21, false),
                J$.T(1114409, 'autoEncryption', 21, false)
            ], 10, false), validOptionNames, false, true);
            var ignoreOptionNames = J$.W(1114449, 'ignoreOptionNames', J$.T(1114441, [J$.T(1114433, 'native_parser', 21, false)], 10, false), ignoreOptionNames, false, true);
            var legacyOptionNames = J$.W(1114505, 'legacyOptionNames', J$.T(1114497, [
                J$.T(1114457, 'server', 21, false),
                J$.T(1114465, 'replset', 21, false),
                J$.T(1114473, 'replSet', 21, false),
                J$.T(1114481, 'mongos', 21, false),
                J$.T(1114489, 'db', 21, false)
            ], 10, false), legacyOptionNames, false, true);
            var LEGACY_OPTIONS_MAP = J$.W(1115001, 'LEGACY_OPTIONS_MAP', J$.M(1114993, J$.R(1114881, 'validOptionNames', validOptionNames, false, true), 'reduce', false)(J$.T(1114977, function (obj, name) {
                jalangiLabel18:
                    while (true) {
                        try {
                            J$.Fe(1114945, arguments.callee, this, arguments);
                            arguments = J$.N(1114953, 'arguments', arguments, true, false, false);
                            obj = J$.N(1114961, 'obj', obj, true, false, false);
                            name = J$.N(1114969, 'name', name, true, false, false);
                            J$.P(1114921, J$.R(1114889, 'obj', obj, false, false), J$.M(1114905, J$.R(1114897, 'name', name, false, false), 'toLowerCase', false)(), J$.R(1114913, 'name', name, false, false));
                            return J$.Rt(1114937, J$.R(1114929, 'obj', obj, false, false));
                        } catch (J$e) {
                            J$.Ex(1125937, J$e);
                        } finally {
                            if (J$.Fr(1125945))
                                continue jalangiLabel18;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false), J$.T(1114985, {}, 11, false)), LEGACY_OPTIONS_MAP, false, true);
            var ConnectOperation = J$.W(1115681, 'ConnectOperation', J$.F(1115673, J$.T(1115657, function (_OperationBase) {
                jalangiLabel22:
                    while (true) {
                        try {
                            J$.Fe(1115617, arguments.callee, this, arguments);
                            function ConnectOperation(mongoClient) {
                                jalangiLabel19:
                                    while (true) {
                                        try {
                                            J$.Fe(1115185, arguments.callee, this, arguments);
                                            arguments = J$.N(1115193, 'arguments', arguments, true, false, false);
                                            mongoClient = J$.N(1115201, 'mongoClient', mongoClient, true, false, false);
                                            J$.N(1115209, '_this', _this, false, false, false);
                                            var _this;
                                            J$.F(1115065, J$.R(1115041, '_classCallCheck', _classCallCheck, false, true), false)(J$.R(1115049, 'this', this, false, false), J$.R(1115057, 'ConnectOperation', ConnectOperation, false, false));
                                            _this = J$.W(1115137, '_this', J$.F(1115129, J$.R(1115073, '_possibleConstructorReturn', _possibleConstructorReturn, false, true), false)(J$.R(1115081, 'this', this, false, false), J$.M(1115121, J$.F(1115105, J$.R(1115089, '_getPrototypeOf', _getPrototypeOf, false, true), false)(J$.R(1115097, 'ConnectOperation', ConnectOperation, false, false)), 'call', false)(J$.R(1115113, 'this', this, false, false))), _this, false, false);
                                            J$.P(1115161, J$.R(1115145, '_this', _this, false, false), 'mongoClient', J$.R(1115153, 'mongoClient', mongoClient, false, false));
                                            return J$.Rt(1115177, J$.R(1115169, '_this', _this, false, false));
                                        } catch (J$e) {
                                            J$.Ex(1125953, J$e);
                                        } finally {
                                            if (J$.Fr(1125961))
                                                continue jalangiLabel19;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }
                            arguments = J$.N(1115625, 'arguments', arguments, true, false, false);
                            _OperationBase = J$.N(1115633, '_OperationBase', _OperationBase, true, false, false);
                            ConnectOperation = J$.N(1115649, 'ConnectOperation', J$.T(1115641, ConnectOperation, 12, false), true, false, false);
                            J$.F(1115033, J$.R(1115009, '_inherits', _inherits, false, true), false)(J$.R(1115017, 'ConnectOperation', ConnectOperation, false, false), J$.R(1115025, '_OperationBase', _OperationBase, false, false));
                            J$.F(1115593, J$.R(1115217, '_createClass', _createClass, false, true), false)(J$.R(1115225, 'ConnectOperation', ConnectOperation, false, false), J$.T(1115585, [J$.T(1115577, {
                                    key: J$.T(1115233, 'execute', 21, false),
                                    value: J$.T(1115569, function execute(callback) {
                                        jalangiLabel21:
                                            while (true) {
                                                try {
                                                    J$.Fe(1115529, arguments.callee, this, arguments);
                                                    arguments = J$.N(1115537, 'arguments', arguments, true, false, false);
                                                    callback = J$.N(1115545, 'callback', callback, true, false, false);
                                                    J$.N(1115553, 'mongoClient', mongoClient, false, false, false);
                                                    J$.N(1115561, 'err', err, false, false, false);
                                                    var mongoClient = J$.W(1115257, 'mongoClient', J$.G(1115249, J$.R(1115241, 'this', this, false, false), 'mongoClient'), mongoClient, false, false);
                                                    var err = J$.W(1115305, 'err', J$.F(1115297, J$.R(1115265, 'validOptions', validOptions, false, true), false)(J$.G(1115289, J$.G(1115281, J$.R(1115273, 'mongoClient', mongoClient, false, false), 's'), 'options')), err, false, false);
                                                    if (J$.C(68432, J$.R(1115313, 'err', err, false, false)))
                                                        return J$.Rt(1115345, J$.F(1115337, J$.R(1115321, 'callback', callback, false, false), false)(J$.R(1115329, 'err', err, false, false)));
                                                    J$.F(1115521, J$.R(1115353, 'connect', connect, false, true), false)(J$.R(1115361, 'mongoClient', mongoClient, false, false), J$.G(1115385, J$.G(1115377, J$.R(1115369, 'mongoClient', mongoClient, false, false), 's'), 'url'), J$.G(1115409, J$.G(1115401, J$.R(1115393, 'mongoClient', mongoClient, false, false), 's'), 'options'), J$.T(1115513, function (err) {
                                                        jalangiLabel20:
                                                            while (true) {
                                                                try {
                                                                    J$.Fe(1115489, arguments.callee, this, arguments);
                                                                    arguments = J$.N(1115497, 'arguments', arguments, true, false, false);
                                                                    err = J$.N(1115505, 'err', err, true, false, false);
                                                                    if (J$.C(68440, J$.R(1115417, 'err', err, false, false)))
                                                                        return J$.Rt(1115449, J$.F(1115441, J$.R(1115425, 'callback', callback, false, false), false)(J$.R(1115433, 'err', err, false, false)));
                                                                    J$.F(1115481, J$.R(1115457, 'callback', callback, false, false), false)(J$.T(1115465, null, 25, false), J$.R(1115473, 'mongoClient', mongoClient, false, false));
                                                                } catch (J$e) {
                                                                    J$.Ex(1125969, J$e);
                                                                } finally {
                                                                    if (J$.Fr(1125977))
                                                                        continue jalangiLabel20;
                                                                    else
                                                                        return J$.Ra();
                                                                }
                                                            }
                                                    }, 12, false));
                                                } catch (J$e) {
                                                    J$.Ex(1125985, J$e);
                                                } finally {
                                                    if (J$.Fr(1125993))
                                                        continue jalangiLabel21;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false)
                                }, 11, false)], 10, false));
                            return J$.Rt(1115609, J$.R(1115601, 'ConnectOperation', ConnectOperation, false, false));
                        } catch (J$e) {
                            J$.Ex(1126001, J$e);
                        } finally {
                            if (J$.Fr(1126009))
                                continue jalangiLabel22;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false), false)(J$.R(1115665, 'OperationBase', OperationBase, false, true)), ConnectOperation, false, true);
            J$.F(1115729, J$.R(1115689, 'defineAspects', defineAspects, false, true), false)(J$.R(1115697, 'ConnectOperation', ConnectOperation, false, true), J$.T(1115721, [J$.G(1115713, J$.R(1115705, 'Aspect', Aspect, false, true), 'SKIP_SESSION')], 10, false));
            var emitDeprecationForNonUnifiedTopology = J$.W(1116929, 'emitDeprecationForNonUnifiedTopology', J$.F(1116921, J$.R(1116873, 'deprecate', deprecate, false, true), false)(J$.T(1116897, function () {
                jalangiLabel30:
                    while (true) {
                        try {
                            J$.Fe(1116881, arguments.callee, this, arguments);
                            arguments = J$.N(1116889, 'arguments', arguments, true, false, false);
                        } catch (J$e) {
                            J$.Ex(1126129, J$e);
                        } finally {
                            if (J$.Fr(1126137))
                                continue jalangiLabel30;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false), J$.B(111506, '+', J$.T(1116905, 'current Server Discovery and Monitoring engine is deprecated, and will be removed in a future version. ', 21, false), J$.T(1116913, 'To use the new Server Discover and Monitoring engine, pass option { useUnifiedTopology: true } to the MongoClient constructor.', 21, false))), emitDeprecationForNonUnifiedTopology, false, true);
            J$.P(1124961, J$.I(typeof module === 'undefined' ? module = J$.R(1124945, 'module', undefined, true, true) : module = J$.R(1124945, 'module', module, true, true)), 'exports', J$.R(1124953, 'ConnectOperation', ConnectOperation, false, true));
        } catch (J$e) {
            J$.Ex(1126497, J$e);
        } finally {
            if (J$.Sr(1126505))
                continue jalangiLabel53;
            else
                break jalangiLabel53;
        }
    }
// JALANGI DO NOT INSTRUMENT

