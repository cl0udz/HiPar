J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(1446185, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestMongoDb/node_modules/saslprep/lib/memory-code-points.js');
            function read() {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(1445937, arguments.callee, this, arguments);
                            arguments = J$.N(1445945, 'arguments', arguments, true, false, false);
                            J$.N(1445953, 'size', size, false, false, false);
                            J$.N(1445961, 'codepoints', codepoints, false, false, false);
                            var size = J$.W(1445793, 'size', J$.M(1445785, J$.R(1445769, 'memory', memory, false, true), 'readUInt32BE', false)(J$.R(1445777, 'offset', offset, false, true)), size, false, false);
                            offset = J$.W(1445817, 'offset', J$.B(132050, '+', J$.R(1445809, 'offset', offset, false, true), J$.T(1445801, 4, 22, false)), offset, false, true);
                            var codepoints = J$.W(1445865, 'codepoints', J$.M(1445857, J$.R(1445825, 'memory', memory, false, true), 'slice', false)(J$.R(1445833, 'offset', offset, false, true), J$.B(132058, '+', J$.R(1445841, 'offset', offset, false, true), J$.R(1445849, 'size', size, false, false))), codepoints, false, false);
                            offset = J$.W(1445889, 'offset', J$.B(132066, '+', J$.R(1445881, 'offset', offset, false, true), J$.R(1445873, 'size', size, false, false)), offset, false, true);
                            return J$.Rt(1445929, J$.F(1445921, J$.R(1445897, 'bitfield', bitfield, false, true), false)(J$.T(1445913, { buffer: J$.R(1445905, 'codepoints', codepoints, false, false) }, 11, false)));
                        } catch (J$e) {
                            J$.Ex(1446297, J$e);
                        } finally {
                            if (J$.Fr(1446305))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(1446193, 'fs', fs, false, false, false);
            J$.N(1446201, 'path', path, false, false, false);
            J$.N(1446209, 'bitfield', bitfield, false, false, false);
            J$.N(1446217, 'memory', memory, false, false, false);
            J$.N(1446225, 'offset', offset, false, false, false);
            read = J$.N(1446241, 'read', J$.T(1446233, read, 12, false), true, false, false);
            J$.N(1446249, 'unassigned_code_points', unassigned_code_points, false, false, false);
            J$.N(1446257, 'commonly_mapped_to_nothing', commonly_mapped_to_nothing, false, false, false);
            J$.N(1446265, 'non_ASCII_space_characters', non_ASCII_space_characters, false, false, false);
            J$.N(1446273, 'prohibited_characters', prohibited_characters, false, false, false);
            J$.N(1446281, 'bidirectional_r_al', bidirectional_r_al, false, false, false);
            J$.N(1446289, 'bidirectional_l', bidirectional_l, false, false, false);
            J$.T(1445593, 'use strict', 21, false);
            var fs = J$.W(1445625, 'fs', J$.F(1445617, J$.I(typeof require === 'undefined' ? require = J$.R(1445601, 'require', undefined, true, true) : require = J$.R(1445601, 'require', require, true, true)), false)(J$.T(1445609, 'fs', 21, false)), fs, false, true);
            var path = J$.W(1445657, 'path', J$.F(1445649, J$.I(typeof require === 'undefined' ? require = J$.R(1445633, 'require', undefined, true, true) : require = J$.R(1445633, 'require', require, true, true)), false)(J$.T(1445641, 'path', 21, false)), path, false, true);
            var bitfield = J$.W(1445689, 'bitfield', J$.F(1445681, J$.I(typeof require === 'undefined' ? require = J$.R(1445665, 'require', undefined, true, true) : require = J$.R(1445665, 'require', require, true, true)), false)(J$.T(1445673, 'sparse-bitfield', 21, false)), bitfield, false, true);
            var memory = J$.W(1445745, 'memory', J$.M(1445737, J$.R(1445697, 'fs', fs, false, true), 'readFileSync', false)(J$.M(1445729, J$.R(1445705, 'path', path, false, true), 'resolve', false)(J$.I(typeof __dirname === 'undefined' ? __dirname = J$.R(1445713, '__dirname', undefined, true, true) : __dirname = J$.R(1445713, '__dirname', __dirname, true, true)), J$.T(1445721, '../code-points.mem', 21, false))), memory, false, true);
            var offset = J$.W(1445761, 'offset', J$.T(1445753, 0, 22, false), offset, false, true);
            var unassigned_code_points = J$.W(1445985, 'unassigned_code_points', J$.F(1445977, J$.R(1445969, 'read', read, false, true), false)(), unassigned_code_points, false, true);
            var commonly_mapped_to_nothing = J$.W(1446009, 'commonly_mapped_to_nothing', J$.F(1446001, J$.R(1445993, 'read', read, false, true), false)(), commonly_mapped_to_nothing, false, true);
            var non_ASCII_space_characters = J$.W(1446033, 'non_ASCII_space_characters', J$.F(1446025, J$.R(1446017, 'read', read, false, true), false)(), non_ASCII_space_characters, false, true);
            var prohibited_characters = J$.W(1446057, 'prohibited_characters', J$.F(1446049, J$.R(1446041, 'read', read, false, true), false)(), prohibited_characters, false, true);
            var bidirectional_r_al = J$.W(1446081, 'bidirectional_r_al', J$.F(1446073, J$.R(1446065, 'read', read, false, true), false)(), bidirectional_r_al, false, true);
            var bidirectional_l = J$.W(1446105, 'bidirectional_l', J$.F(1446097, J$.R(1446089, 'read', read, false, true), false)(), bidirectional_l, false, true);
            J$.P(1446177, J$.I(typeof module === 'undefined' ? module = J$.R(1446113, 'module', undefined, true, true) : module = J$.R(1446113, 'module', module, true, true)), 'exports', J$.T(1446169, {
                unassigned_code_points: J$.R(1446121, 'unassigned_code_points', unassigned_code_points, false, true),
                commonly_mapped_to_nothing: J$.R(1446129, 'commonly_mapped_to_nothing', commonly_mapped_to_nothing, false, true),
                non_ASCII_space_characters: J$.R(1446137, 'non_ASCII_space_characters', non_ASCII_space_characters, false, true),
                prohibited_characters: J$.R(1446145, 'prohibited_characters', prohibited_characters, false, true),
                bidirectional_r_al: J$.R(1446153, 'bidirectional_r_al', bidirectional_r_al, false, true),
                bidirectional_l: J$.R(1446161, 'bidirectional_l', bidirectional_l, false, true)
            }, 11, false));
        } catch (J$e) {
            J$.Ex(1446313, J$e);
        } finally {
            if (J$.Sr(1446321))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

