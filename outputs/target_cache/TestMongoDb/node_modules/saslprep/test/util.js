J$.noInstrEval = false;
jalangiLabel3:
    while (true) {
        try {
            J$.Se(1449769, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestMongoDb/node_modules/saslprep/test/util.js');
            J$.N(1449777, '_require', _require, false, false, false);
            J$.N(1449785, 'setFlagsFromString', setFlagsFromString, false, false, false);
            J$.N(1449793, '_require2', _require2, false, false, false);
            J$.N(1449801, 'range', range, false, false, false);
            J$.T(1449321, 'use strict', 21, false);
            var _require = J$.W(1449369, '_require', J$.F(1449345, J$.I(typeof require === 'undefined' ? require = J$.R(1449329, 'require', undefined, true, true) : require = J$.R(1449329, 'require', require, true, true)), false)(J$.T(1449337, 'v8', 21, false)), _require, false, true), setFlagsFromString = J$.W(1449377, 'setFlagsFromString', J$.G(1449361, J$.R(1449353, '_require', _require, false, true), 'setFlagsFromString'), setFlagsFromString, false, true);
            var _require2 = J$.W(1449425, '_require2', J$.F(1449401, J$.I(typeof require === 'undefined' ? require = J$.R(1449385, 'require', undefined, true, true) : require = J$.R(1449385, 'require', require, true, true)), false)(J$.T(1449393, '../lib/util', 21, false)), _require2, false, true), range = J$.W(1449433, 'range', J$.G(1449417, J$.R(1449409, '_require2', _require2, false, true), 'range'), range, false, true);
            J$.F(1449457, J$.R(1449441, 'setFlagsFromString', setFlagsFromString, false, true), false)(J$.T(1449449, '--stack_size=500', 21, false));
            J$.F(1449617, J$.I(typeof test === 'undefined' ? test = J$.R(1449465, 'test', undefined, true, true) : test = J$.R(1449465, 'test', test, true, true)), false)(J$.T(1449473, 'should work', 21, false), J$.T(1449609, function () {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(1449585, arguments.callee, this, arguments);
                            arguments = J$.N(1449593, 'arguments', arguments, true, false, false);
                            J$.N(1449601, 'list', list, false, false, false);
                            var list = J$.W(1449513, 'list', J$.F(1449505, J$.R(1449481, 'range', range, false, true), false)(J$.T(1449489, 1, 22, false), J$.T(1449497, 3, 22, false)), list, false, false);
                            J$.M(1449577, J$.F(1449537, J$.I(typeof expect === 'undefined' ? expect = J$.R(1449521, 'expect', undefined, true, true) : expect = J$.R(1449521, 'expect', expect, true, true)), false)(J$.R(1449529, 'list', list, false, false)), 'toEqual', false)(J$.T(1449569, [
                                J$.T(1449545, 1, 22, false),
                                J$.T(1449553, 2, 22, false),
                                J$.T(1449561, 3, 22, false)
                            ], 10, false));
                        } catch (J$e) {
                            J$.Ex(1449809, J$e);
                        } finally {
                            if (J$.Fr(1449817))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
            J$.F(1449761, J$.I(typeof test === 'undefined' ? test = J$.R(1449625, 'test', undefined, true, true) : test = J$.R(1449625, 'test', test, true, true)), false)(J$.T(1449633, 'should work for large ranges', 21, false), J$.T(1449753, function () {
                jalangiLabel2:
                    while (true) {
                        try {
                            J$.Fe(1449737, arguments.callee, this, arguments);
                            arguments = J$.N(1449745, 'arguments', arguments, true, false, false);
                            J$.M(1449729, J$.G(1449721, J$.F(1449713, J$.I(typeof expect === 'undefined' ? expect = J$.R(1449641, 'expect', undefined, true, true) : expect = J$.R(1449641, 'expect', expect, true, true)), false)(J$.T(1449705, function () {
                                jalangiLabel1:
                                    while (true) {
                                        try {
                                            J$.Fe(1449689, arguments.callee, this, arguments);
                                            arguments = J$.N(1449697, 'arguments', arguments, true, false, false);
                                            return J$.Rt(1449681, J$.F(1449673, J$.R(1449649, 'range', range, false, true), false)(J$.T(1449657, 1, 22, false), J$.T(1449665, 1000000, 22, false)));
                                        } catch (J$e) {
                                            J$.Ex(1449825, J$e);
                                        } finally {
                                            if (J$.Fr(1449833))
                                                continue jalangiLabel1;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false)), 'not'), 'toThrow', false)();
                        } catch (J$e) {
                            J$.Ex(1449841, J$e);
                        } finally {
                            if (J$.Fr(1449849))
                                continue jalangiLabel2;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
        } catch (J$e) {
            J$.Ex(1449857, J$e);
        } finally {
            if (J$.Sr(1449865))
                continue jalangiLabel3;
            else
                break jalangiLabel3;
        }
    }
// JALANGI DO NOT INSTRUMENT

