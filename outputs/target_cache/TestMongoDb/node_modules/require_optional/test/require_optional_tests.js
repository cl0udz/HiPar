J$.noInstrEval = false;
jalangiLabel13:
    while (true) {
        try {
            J$.Se(1407113, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestMongoDb/node_modules/require_optional/test/require_optional_tests.js');
            J$.N(1407121, 'assert', assert, false, false, false);
            J$.N(1407129, 'require_optional', require_optional, false, false, false);
            J$.N(1407137, 'nestedTest', nestedTest, false, false, false);
            J$.T(1405753, 'use strict', 21, false);
            var assert = J$.W(1405833, 'assert', J$.F(1405777, J$.I(typeof require === 'undefined' ? require = J$.R(1405761, 'require', undefined, true, true) : require = J$.R(1405761, 'require', require, true, true)), false)(J$.T(1405769, 'assert', 21, false)), assert, false, true), require_optional = J$.W(1405841, 'require_optional', J$.F(1405801, J$.I(typeof require === 'undefined' ? require = J$.R(1405785, 'require', undefined, true, true) : require = J$.R(1405785, 'require', require, true, true)), false)(J$.T(1405793, '../', 21, false)), require_optional, false, true), nestedTest = J$.W(1405849, 'nestedTest', J$.F(1405825, J$.I(typeof require === 'undefined' ? require = J$.R(1405809, 'require', undefined, true, true) : require = J$.R(1405809, 'require', require, true, true)), false)(J$.T(1405817, './nestedTest', 21, false)), nestedTest, false, true);
            J$.F(1407105, J$.I(typeof describe === 'undefined' ? describe = J$.R(1405857, 'describe', undefined, true, true) : describe = J$.R(1405857, 'describe', describe, true, true)), false)(J$.T(1405865, 'Require Optional', 21, false), J$.T(1407097, function () {
                jalangiLabel12:
                    while (true) {
                        try {
                            J$.Fe(1407081, arguments.callee, this, arguments);
                            arguments = J$.N(1407089, 'arguments', arguments, true, false, false);
                            J$.F(1406273, J$.I(typeof describe === 'undefined' ? describe = J$.R(1405873, 'describe', undefined, true, true) : describe = J$.R(1405873, 'describe', describe, true, true)), false)(J$.T(1405881, 'top level require', 21, false), J$.T(1406265, function () {
                                jalangiLabel3:
                                    while (true) {
                                        try {
                                            J$.Fe(1406249, arguments.callee, this, arguments);
                                            arguments = J$.N(1406257, 'arguments', arguments, true, false, false);
                                            J$.F(1405993, J$.I(typeof it === 'undefined' ? it = J$.R(1405889, 'it', undefined, true, true) : it = J$.R(1405889, 'it', it, true, true)), false)(J$.T(1405897, 'should correctly require co library', 21, false), J$.T(1405985, function () {
                                                jalangiLabel0:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(1405961, arguments.callee, this, arguments);
                                                            arguments = J$.N(1405969, 'arguments', arguments, true, false, false);
                                                            J$.N(1405977, 'promise', promise, false, false, false);
                                                            var promise = J$.W(1405929, 'promise', J$.F(1405921, J$.R(1405905, 'require_optional', require_optional, false, true), false)(J$.T(1405913, 'es6-promise', 21, false)), promise, false, false);
                                                            J$.M(1405953, J$.R(1405937, 'assert', assert, false, true), 'ok', false)(J$.R(1405945, 'promise', promise, false, false));
                                                        } catch (J$e) {
                                                            J$.Ex(1407145, J$e);
                                                        } finally {
                                                            if (J$.Fr(1407153))
                                                                continue jalangiLabel0;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false));
                                            J$.F(1406145, J$.I(typeof it === 'undefined' ? it = J$.R(1406001, 'it', undefined, true, true) : it = J$.R(1406001, 'it', it, true, true)), false)(J$.T(1406009, 'should fail to require es6-promise library', 21, false), J$.T(1406137, function () {
                                                jalangiLabel1:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(1406121, arguments.callee, this, arguments);
                                                            arguments = J$.N(1406129, 'arguments', arguments, true, false, false);
                                                            try {
                                                                J$.F(1406033, J$.R(1406017, 'require_optional', require_optional, false, true), false)(J$.T(1406025, 'co', 21, false));
                                                            } catch (e) {
                                                                J$.N(1406089, 'e', e, false, false, true);
                                                                J$.M(1406073, J$.R(1406041, 'assert', assert, false, true), 'equal', false)(J$.T(1406049, 'OPTIONAL_MODULE_NOT_FOUND', 21, false), J$.G(1406065, J$.R(1406057, 'e', e, false, false), 'code'));
                                                                return J$.Rt(1406081, undefined);
                                                            }
                                                            J$.M(1406113, J$.R(1406097, 'assert', assert, false, true), 'ok', false)(J$.T(1406105, false, 23, false));
                                                        } catch (J$e) {
                                                            J$.Ex(1407161, J$e);
                                                        } finally {
                                                            if (J$.Fr(1407169))
                                                                continue jalangiLabel1;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false));
                                            J$.F(1406241, J$.I(typeof it === 'undefined' ? it = J$.R(1406153, 'it', undefined, true, true) : it = J$.R(1406153, 'it', it, true, true)), false)(J$.T(1406161, 'should ignore optional library not defined', 21, false), J$.T(1406233, function () {
                                                jalangiLabel2:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(1406217, arguments.callee, this, arguments);
                                                            arguments = J$.N(1406225, 'arguments', arguments, true, false, false);
                                                            J$.M(1406209, J$.R(1406169, 'assert', assert, false, true), 'equal', false)(J$.T(1406177, undefined, 24, false), J$.F(1406201, J$.R(1406185, 'require_optional', require_optional, false, true), false)(J$.T(1406193, 'es6-promise2', 21, false)));
                                                        } catch (J$e) {
                                                            J$.Ex(1407177, J$e);
                                                        } finally {
                                                            if (J$.Fr(1407185))
                                                                continue jalangiLabel2;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false));
                                        } catch (J$e) {
                                            J$.Ex(1407193, J$e);
                                        } finally {
                                            if (J$.Fr(1407201))
                                                continue jalangiLabel3;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            J$.F(1406433, J$.I(typeof describe === 'undefined' ? describe = J$.R(1406281, 'describe', undefined, true, true) : describe = J$.R(1406281, 'describe', describe, true, true)), false)(J$.T(1406289, 'internal module file require', 21, false), J$.T(1406425, function () {
                                jalangiLabel5:
                                    while (true) {
                                        try {
                                            J$.Fe(1406409, arguments.callee, this, arguments);
                                            arguments = J$.N(1406417, 'arguments', arguments, true, false, false);
                                            J$.F(1406401, J$.I(typeof it === 'undefined' ? it = J$.R(1406297, 'it', undefined, true, true) : it = J$.R(1406297, 'it', it, true, true)), false)(J$.T(1406305, 'should correctly require co library', 21, false), J$.T(1406393, function () {
                                                jalangiLabel4:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(1406369, arguments.callee, this, arguments);
                                                            arguments = J$.N(1406377, 'arguments', arguments, true, false, false);
                                                            J$.N(1406385, 'Long', Long, false, false, false);
                                                            var Long = J$.W(1406337, 'Long', J$.F(1406329, J$.R(1406313, 'require_optional', require_optional, false, true), false)(J$.T(1406321, 'bson/lib/bson/long.js', 21, false)), Long, false, false);
                                                            J$.M(1406361, J$.R(1406345, 'assert', assert, false, true), 'ok', false)(J$.R(1406353, 'Long', Long, false, false));
                                                        } catch (J$e) {
                                                            J$.Ex(1407209, J$e);
                                                        } finally {
                                                            if (J$.Fr(1407217))
                                                                continue jalangiLabel4;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false));
                                        } catch (J$e) {
                                            J$.Ex(1407225, J$e);
                                        } finally {
                                            if (J$.Fr(1407233))
                                                continue jalangiLabel5;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            J$.F(1406721, J$.I(typeof describe === 'undefined' ? describe = J$.R(1406441, 'describe', undefined, true, true) : describe = J$.R(1406441, 'describe', describe, true, true)), false)(J$.T(1406449, 'top level resolve', 21, false), J$.T(1406713, function () {
                                jalangiLabel7:
                                    while (true) {
                                        try {
                                            J$.Fe(1406697, arguments.callee, this, arguments);
                                            arguments = J$.N(1406705, 'arguments', arguments, true, false, false);
                                            J$.F(1406689, J$.I(typeof it === 'undefined' ? it = J$.R(1406457, 'it', undefined, true, true) : it = J$.R(1406457, 'it', it, true, true)), false)(J$.T(1406465, 'should correctly use exists method', 21, false), J$.T(1406681, function () {
                                                jalangiLabel6:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(1406665, arguments.callee, this, arguments);
                                                            arguments = J$.N(1406673, 'arguments', arguments, true, false, false);
                                                            J$.M(1406513, J$.R(1406473, 'assert', assert, false, true), 'equal', false)(J$.T(1406481, false, 23, false), J$.M(1406505, J$.R(1406489, 'require_optional', require_optional, false, true), 'exists', false)(J$.T(1406497, 'co', 21, false)));
                                                            J$.M(1406561, J$.R(1406521, 'assert', assert, false, true), 'equal', false)(J$.T(1406529, true, 23, false), J$.M(1406553, J$.R(1406537, 'require_optional', require_optional, false, true), 'exists', false)(J$.T(1406545, 'es6-promise', 21, false)));
                                                            J$.M(1406609, J$.R(1406569, 'assert', assert, false, true), 'equal', false)(J$.T(1406577, true, 23, false), J$.M(1406601, J$.R(1406585, 'require_optional', require_optional, false, true), 'exists', false)(J$.T(1406593, 'bson/lib/bson/long.js', 21, false)));
                                                            J$.M(1406657, J$.R(1406617, 'assert', assert, false, true), 'equal', false)(J$.T(1406625, false, 23, false), J$.M(1406649, J$.R(1406633, 'require_optional', require_optional, false, true), 'exists', false)(J$.T(1406641, 'es6-promise2', 21, false)));
                                                        } catch (J$e) {
                                                            J$.Ex(1407241, J$e);
                                                        } finally {
                                                            if (J$.Fr(1407249))
                                                                continue jalangiLabel6;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false));
                                        } catch (J$e) {
                                            J$.Ex(1407257, J$e);
                                        } finally {
                                            if (J$.Fr(1407265))
                                                continue jalangiLabel7;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                            J$.F(1407073, J$.I(typeof describe === 'undefined' ? describe = J$.R(1406729, 'describe', undefined, true, true) : describe = J$.R(1406729, 'describe', describe, true, true)), false)(J$.T(1406737, 'require_optional inside dependencies', 21, false), J$.T(1407065, function () {
                                jalangiLabel11:
                                    while (true) {
                                        try {
                                            J$.Fe(1407049, arguments.callee, this, arguments);
                                            arguments = J$.N(1407057, 'arguments', arguments, true, false, false);
                                            J$.F(1406825, J$.I(typeof it === 'undefined' ? it = J$.R(1406745, 'it', undefined, true, true) : it = J$.R(1406745, 'it', it, true, true)), false)(J$.T(1406753, 'should correctly walk up module call stack searching for peerOptionalDependencies', 21, false), J$.T(1406817, function () {
                                                jalangiLabel8:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(1406801, arguments.callee, this, arguments);
                                                            arguments = J$.N(1406809, 'arguments', arguments, true, false, false);
                                                            J$.M(1406793, J$.R(1406761, 'assert', assert, false, true), 'ok', false)(J$.M(1406785, J$.R(1406769, 'nestedTest', nestedTest, false, true), 'findPackage', false)(J$.T(1406777, 'bson', 21, false)));
                                                        } catch (J$e) {
                                                            J$.Ex(1407273, J$e);
                                                        } finally {
                                                            if (J$.Fr(1407281))
                                                                continue jalangiLabel8;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false));
                                            J$.F(1406921, J$.I(typeof it === 'undefined' ? it = J$.R(1406833, 'it', undefined, true, true) : it = J$.R(1406833, 'it', it, true, true)), false)(J$.T(1406841, 'should return null when a package is defined in top-level package.json but not installed', 21, false), J$.T(1406913, function () {
                                                jalangiLabel9:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(1406897, arguments.callee, this, arguments);
                                                            arguments = J$.N(1406905, 'arguments', arguments, true, false, false);
                                                            J$.M(1406889, J$.R(1406849, 'assert', assert, false, true), 'equal', false)(J$.T(1406857, null, 25, false), J$.M(1406881, J$.R(1406865, 'nestedTest', nestedTest, false, true), 'findPackage', false)(J$.T(1406873, 'es6-promise2', 21, false)));
                                                        } catch (J$e) {
                                                            J$.Ex(1407289, J$e);
                                                        } finally {
                                                            if (J$.Fr(1407297))
                                                                continue jalangiLabel9;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false));
                                            J$.F(1407041, J$.I(typeof it === 'undefined' ? it = J$.R(1406929, 'it', undefined, true, true) : it = J$.R(1406929, 'it', it, true, true)), false)(J$.T(1406937, 'should error when searching for an optional dependency that is not defined in any ancestor package.json', 21, false), J$.T(1407033, function () {
                                                jalangiLabel10:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(1407017, arguments.callee, this, arguments);
                                                            arguments = J$.N(1407025, 'arguments', arguments, true, false, false);
                                                            try {
                                                                J$.M(1406961, J$.R(1406945, 'nestedTest', nestedTest, false, true), 'findPackage', false)(J$.T(1406953, 'bison', 21, false));
                                                            } catch (err) {
                                                                J$.N(1407009, 'err', err, false, false, true);
                                                                J$.M(1407001, J$.R(1406969, 'assert', assert, false, true), 'equal', false)(J$.G(1406985, J$.R(1406977, 'err', err, false, false), 'message'), J$.T(1406993, 'no optional dependency [bison] defined in peerOptionalDependencies in any package.json', 21, false));
                                                            }
                                                        } catch (J$e) {
                                                            J$.Ex(1407305, J$e);
                                                        } finally {
                                                            if (J$.Fr(1407313))
                                                                continue jalangiLabel10;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false));
                                        } catch (J$e) {
                                            J$.Ex(1407321, J$e);
                                        } finally {
                                            if (J$.Fr(1407329))
                                                continue jalangiLabel11;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false));
                        } catch (J$e) {
                            J$.Ex(1407337, J$e);
                        } finally {
                            if (J$.Fr(1407345))
                                continue jalangiLabel12;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
        } catch (J$e) {
            J$.Ex(1407353, J$e);
        } finally {
            if (J$.Sr(1407361))
                continue jalangiLabel13;
            else
                break jalangiLabel13;
        }
    }
// JALANGI DO NOT INSTRUMENT

