J$.noInstrEval = false;
jalangiLabel1:
    while (true) {
        try {
            J$.Se(1407737, '/Users/ex1t/Desktop/nodeAnalysis/HiPar/outputs/target_cache/TestMongoDb/node_modules/resolve-from/index.js');
            J$.N(1407745, 'path', path, false, false, false);
            J$.N(1407753, 'Module', Module, false, false, false);
            J$.T(1407369, 'use strict', 21, false);
            var path = J$.W(1407401, 'path', J$.F(1407393, J$.I(typeof require === 'undefined' ? require = J$.R(1407377, 'require', undefined, true, true) : require = J$.R(1407377, 'require', require, true, true)), false)(J$.T(1407385, 'path', 21, false)), path, false, true);
            var Module = J$.W(1407433, 'Module', J$.F(1407425, J$.I(typeof require === 'undefined' ? require = J$.R(1407409, 'require', undefined, true, true) : require = J$.R(1407409, 'require', require, true, true)), false)(J$.T(1407417, 'module', 21, false)), Module, false, true);
            J$.P(1407729, J$.I(typeof module === 'undefined' ? module = J$.R(1407441, 'module', undefined, true, true) : module = J$.R(1407441, 'module', module, true, true)), 'exports', J$.T(1407721, function (fromDir, moduleId) {
                jalangiLabel0:
                    while (true) {
                        try {
                            J$.Fe(1407681, arguments.callee, this, arguments);
                            arguments = J$.N(1407689, 'arguments', arguments, true, false, false);
                            fromDir = J$.N(1407697, 'fromDir', fromDir, true, false, false);
                            moduleId = J$.N(1407705, 'moduleId', moduleId, true, false, false);
                            J$.N(1407713, 'fromFile', fromFile, false, false, false);
                            if (J$.C(89104, J$.C(89096, J$.B(131658, '!==', J$.U(131650, 'typeof', J$.R(1407449, 'fromDir', fromDir, false, false)), J$.T(1407457, 'string', 21, false))) ? J$._() : J$.B(131674, '!==', J$.U(131666, 'typeof', J$.R(1407465, 'moduleId', moduleId, false, false)), J$.T(1407473, 'string', 21, false)))) {
                                throw J$.F(1407497, J$.I(typeof TypeError === 'undefined' ? TypeError = J$.R(1407481, 'TypeError', undefined, true, true) : TypeError = J$.R(1407481, 'TypeError', TypeError, true, true)), true)(J$.T(1407489, 'Expected `fromDir` and `moduleId` to be a string', 21, false));
                            }
                            fromDir = J$.W(1407529, 'fromDir', J$.M(1407521, J$.R(1407505, 'path', path, false, true), 'resolve', false)(J$.R(1407513, 'fromDir', fromDir, false, false)), fromDir, false, false);
                            var fromFile = J$.W(1407569, 'fromFile', J$.M(1407561, J$.R(1407537, 'path', path, false, true), 'join', false)(J$.R(1407545, 'fromDir', fromDir, false, false), J$.T(1407553, 'noop.js', 21, false)), fromFile, false, false);
                            try {
                                return J$.Rt(1407649, J$.M(1407641, J$.R(1407577, 'Module', Module, false, true), '_resolveFilename', false)(J$.R(1407585, 'moduleId', moduleId, false, false), J$.T(1407633, {
                                    id: J$.R(1407593, 'fromFile', fromFile, false, false),
                                    filename: J$.R(1407601, 'fromFile', fromFile, false, false),
                                    paths: J$.M(1407625, J$.R(1407609, 'Module', Module, false, true), '_nodeModulePaths', false)(J$.R(1407617, 'fromDir', fromDir, false, false))
                                }, 11, false)));
                            } catch (err) {
                                J$.N(1407673, 'err', err, false, false, true);
                                return J$.Rt(1407665, J$.T(1407657, null, 25, false));
                            }
                        } catch (J$e) {
                            J$.Ex(1407761, J$e);
                        } finally {
                            if (J$.Fr(1407769))
                                continue jalangiLabel0;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false));
        } catch (J$e) {
            J$.Ex(1407777, J$e);
        } finally {
            if (J$.Sr(1407785))
                continue jalangiLabel1;
            else
                break jalangiLabel1;
        }
    }
// JALANGI DO NOT INSTRUMENT

